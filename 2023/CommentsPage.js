// https://www.redditstatic.com/desktop2x/CommentsPage.8a388940cd624f9805cd.js
// Retrieved at 8/2/2023, 1:10:05 PM by Reddit Dataminer v1.0.0
(window.__LOADABLE_LOADED_CHUNKS__ = window.__LOADABLE_LOADED_CHUNKS__ || []).push([
	["CommentsPage", "CollectionCommentsPage~ProfileComments~ProfileOverview~ProfilePrivate~SearchResults", "ModListing~Reddit~StandalonePostPage~Subreddit", "CollectionCommentsPage~ModProgressModule~NewCommunityProgress", "CollectionCommentsPage~Subreddit~SubredditWiki"], {
		"./node_modules/bowser/src/bowser.js": function(e, t, s) {
			var n;
			n = function() {
				var e = !0;

				function t(t) {
					function s(e) {
						var s = t.match(e);
						return s && s.length > 1 && s[1] || ""
					}

					function n(e) {
						var s = t.match(e);
						return s && s.length > 1 && s[2] || ""
					}
					var r, o = s(/(ipod|iphone|ipad)/i).toLowerCase(),
						a = !/like android/i.test(t) && /android/i.test(t),
						i = /nexus\s*[0-6]\s*/i.test(t),
						c = !i && /nexus\s*[0-9]+/i.test(t),
						d = /CrOS/.test(t),
						l = /silk/i.test(t),
						m = /sailfish/i.test(t),
						u = /tizen/i.test(t),
						p = /(web|hpw)os/i.test(t),
						C = /windows phone/i.test(t),
						b = (/SamsungBrowser/i.test(t), !C && /windows/i.test(t)),
						h = !o && !l && /macintosh/i.test(t),
						f = !a && !m && !u && !p && /linux/i.test(t),
						g = n(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),
						x = s(/version\/(\d+(\.\d+)?)/i),
						v = /tablet/i.test(t) && !/tablet pc/i.test(t),
						y = !v && /[^-]mobi/i.test(t),
						O = /xbox/i.test(t);
					/opera/i.test(t) ? r = {
						name: "Opera",
						opera: e,
						version: x || s(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)
					} : /opr\/|opios/i.test(t) ? r = {
						name: "Opera",
						opera: e,
						version: s(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i) || x
					} : /SamsungBrowser/i.test(t) ? r = {
						name: "Samsung Internet for Android",
						samsungBrowser: e,
						version: x || s(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)
					} : /coast/i.test(t) ? r = {
						name: "Opera Coast",
						coast: e,
						version: x || s(/(?:coast)[\s\/](\d+(\.\d+)?)/i)
					} : /yabrowser/i.test(t) ? r = {
						name: "Yandex Browser",
						yandexbrowser: e,
						version: x || s(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)
					} : /ucbrowser/i.test(t) ? r = {
						name: "UC Browser",
						ucbrowser: e,
						version: s(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)
					} : /mxios/i.test(t) ? r = {
						name: "Maxthon",
						maxthon: e,
						version: s(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)
					} : /epiphany/i.test(t) ? r = {
						name: "Epiphany",
						epiphany: e,
						version: s(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)
					} : /puffin/i.test(t) ? r = {
						name: "Puffin",
						puffin: e,
						version: s(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)
					} : /sleipnir/i.test(t) ? r = {
						name: "Sleipnir",
						sleipnir: e,
						version: s(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)
					} : /k-meleon/i.test(t) ? r = {
						name: "K-Meleon",
						kMeleon: e,
						version: s(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)
					} : C ? (r = {
						name: "Windows Phone",
						osname: "Windows Phone",
						windowsphone: e
					}, g ? (r.msedge = e, r.version = g) : (r.msie = e, r.version = s(/iemobile\/(\d+(\.\d+)?)/i))) : /msie|trident/i.test(t) ? r = {
						name: "Internet Explorer",
						msie: e,
						version: s(/(?:msie |rv:)(\d+(\.\d+)?)/i)
					} : d ? r = {
						name: "Chrome",
						osname: "Chrome OS",
						chromeos: e,
						chromeBook: e,
						chrome: e,
						version: s(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
					} : /edg([ea]|ios)/i.test(t) ? r = {
						name: "Microsoft Edge",
						msedge: e,
						version: g
					} : /vivaldi/i.test(t) ? r = {
						name: "Vivaldi",
						vivaldi: e,
						version: s(/vivaldi\/(\d+(\.\d+)?)/i) || x
					} : m ? r = {
						name: "Sailfish",
						osname: "Sailfish OS",
						sailfish: e,
						version: s(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
					} : /seamonkey\//i.test(t) ? r = {
						name: "SeaMonkey",
						seamonkey: e,
						version: s(/seamonkey\/(\d+(\.\d+)?)/i)
					} : /firefox|iceweasel|fxios/i.test(t) ? (r = {
						name: "Firefox",
						firefox: e,
						version: s(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)
					}, /\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(t) && (r.firefoxos = e, r.osname = "Firefox OS")) : l ? r = {
						name: "Amazon Silk",
						silk: e,
						version: s(/silk\/(\d+(\.\d+)?)/i)
					} : /phantom/i.test(t) ? r = {
						name: "PhantomJS",
						phantom: e,
						version: s(/phantomjs\/(\d+(\.\d+)?)/i)
					} : /slimerjs/i.test(t) ? r = {
						name: "SlimerJS",
						slimer: e,
						version: s(/slimerjs\/(\d+(\.\d+)?)/i)
					} : /blackberry|\bbb\d+/i.test(t) || /rim\stablet/i.test(t) ? r = {
						name: "BlackBerry",
						osname: "BlackBerry OS",
						blackberry: e,
						version: x || s(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
					} : p ? (r = {
						name: "WebOS",
						osname: "WebOS",
						webos: e,
						version: x || s(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
					}, /touchpad\//i.test(t) && (r.touchpad = e)) : /bada/i.test(t) ? r = {
						name: "Bada",
						osname: "Bada",
						bada: e,
						version: s(/dolfin\/(\d+(\.\d+)?)/i)
					} : u ? r = {
						name: "Tizen",
						osname: "Tizen",
						tizen: e,
						version: s(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || x
					} : /qupzilla/i.test(t) ? r = {
						name: "QupZilla",
						qupzilla: e,
						version: s(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i) || x
					} : /chromium/i.test(t) ? r = {
						name: "Chromium",
						chromium: e,
						version: s(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i) || x
					} : /chrome|crios|crmo/i.test(t) ? r = {
						name: "Chrome",
						chrome: e,
						version: s(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
					} : a ? r = {
						name: "Android",
						version: x
					} : /safari|applewebkit/i.test(t) ? (r = {
						name: "Safari",
						safari: e
					}, x && (r.version = x)) : o ? (r = {
						name: "iphone" == o ? "iPhone" : "ipad" == o ? "iPad" : "iPod"
					}, x && (r.version = x)) : r = /googlebot/i.test(t) ? {
						name: "Googlebot",
						googlebot: e,
						version: s(/googlebot\/(\d+(\.\d+))/i) || x
					} : {
						name: s(/^(.*)\/(.*) /),
						version: n(/^(.*)\/(.*) /)
					}, !r.msedge && /(apple)?webkit/i.test(t) ? (/(apple)?webkit\/537\.36/i.test(t) ? (r.name = r.name || "Blink", r.blink = e) : (r.name = r.name || "Webkit", r.webkit = e), !r.version && x && (r.version = x)) : !r.opera && /gecko\//i.test(t) && (r.name = r.name || "Gecko", r.gecko = e, r.version = r.version || s(/gecko\/(\d+(\.\d+)?)/i)), r.windowsphone || !a && !r.silk ? !r.windowsphone && o ? (r[o] = e, r.ios = e, r.osname = "iOS") : h ? (r.mac = e, r.osname = "macOS") : O ? (r.xbox = e, r.osname = "Xbox") : b ? (r.windows = e, r.osname = "Windows") : f && (r.linux = e, r.osname = "Linux") : (r.android = e, r.osname = "Android");
					var E = "";
					r.windows ? E = function(e) {
						switch (e) {
							case "NT":
								return "NT";
							case "XP":
								return "XP";
							case "NT 5.0":
								return "2000";
							case "NT 5.1":
								return "XP";
							case "NT 5.2":
								return "2003";
							case "NT 6.0":
								return "Vista";
							case "NT 6.1":
								return "7";
							case "NT 6.2":
								return "8";
							case "NT 6.3":
								return "8.1";
							case "NT 10.0":
								return "10";
							default:
								return
						}
					}(s(/Windows ((NT|XP)( \d\d?.\d)?)/i)) : r.windowsphone ? E = s(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i) : r.mac ? E = (E = s(/Mac OS X (\d+([_\.\s]\d+)*)/i)).replace(/[_\s]/g, ".") : o ? E = (E = s(/os (\d+([_\s]\d+)*) like mac os x/i)).replace(/[_\s]/g, ".") : a ? E = s(/android[ \/-](\d+(\.\d+)*)/i) : r.webos ? E = s(/(?:web|hpw)os\/(\d+(\.\d+)*)/i) : r.blackberry ? E = s(/rim\stablet\sos\s(\d+(\.\d+)*)/i) : r.bada ? E = s(/bada\/(\d+(\.\d+)*)/i) : r.tizen && (E = s(/tizen[\/\s](\d+(\.\d+)*)/i)), E && (r.osversion = E);
					var j = !r.windows && E.split(".")[0];
					return v || c || "ipad" == o || a && (3 == j || j >= 4 && !y) || r.silk ? r.tablet = e : (y || "iphone" == o || "ipod" == o || a || i || r.blackberry || r.webos || r.bada) && (r.mobile = e), r.msedge || r.msie && r.version >= 10 || r.yandexbrowser && r.version >= 15 || r.vivaldi && r.version >= 1 || r.chrome && r.version >= 20 || r.samsungBrowser && r.version >= 4 || r.firefox && r.version >= 20 || r.safari && r.version >= 6 || r.opera && r.version >= 10 || r.ios && r.osversion && r.osversion.split(".")[0] >= 6 || r.blackberry && r.version >= 10.1 || r.chromium && r.version >= 20 ? r.a = e : r.msie && r.version < 10 || r.chrome && r.version < 20 || r.firefox && r.version < 20 || r.safari && r.version < 6 || r.opera && r.version < 10 || r.ios && r.osversion && r.osversion.split(".")[0] < 6 || r.chromium && r.version < 20 ? r.c = e : r.x = e, r
				}
				var s = t("undefined" != typeof navigator && navigator.userAgent || "");

				function n(e) {
					return e.split(".").length
				}

				function r(e, t) {
					var s, n = [];
					if (Array.prototype.map) return Array.prototype.map.call(e, t);
					for (s = 0; s < e.length; s++) n.push(t(e[s]));
					return n
				}

				function o(e) {
					for (var t = Math.max(n(e[0]), n(e[1])), s = r(e, (function(e) {
							var s = t - n(e);
							return r((e += new Array(s + 1).join(".0")).split("."), (function(e) {
								return new Array(20 - e.length).join("0") + e
							})).reverse()
						})); --t >= 0;) {
						if (s[0][t] > s[1][t]) return 1;
						if (s[0][t] !== s[1][t]) return -1;
						if (0 === t) return 0
					}
				}

				function a(e, n, r) {
					var a = s;
					"string" == typeof n && (r = n, n = void 0), void 0 === n && (n = !1), r && (a = t(r));
					var i = "" + a.version;
					for (var c in e)
						if (e.hasOwnProperty(c) && a[c]) {
							if ("string" != typeof e[c]) throw new Error("Browser version in the minVersion map should be a string: " + c + ": " + String(e));
							return o([i, e[c]]) < 0
						} return n
				}
				return s.test = function(e) {
					for (var t = 0; t < e.length; ++t) {
						var n = e[t];
						if ("string" == typeof n && n in s) return !0
					}
					return !1
				}, s.isUnsupportedBrowser = a, s.compareVersions = o, s.check = function(e, t, s) {
					return !a(e, t, s)
				}, s._detect = t, s.detect = t, s
			}, e.exports ? e.exports = n() : s("./node_modules/webpack/buildin/amd-define.js")("bowser", n)
		},
		"./node_modules/intersection-observer/intersection-observer.js": function(e, t) {
			! function(e, t) {
				"use strict";
				if ("IntersectionObserver" in e && "IntersectionObserverEntry" in e && "intersectionRatio" in e.IntersectionObserverEntry.prototype) "isIntersecting" in e.IntersectionObserverEntry.prototype || Object.defineProperty(e.IntersectionObserverEntry.prototype, "isIntersecting", {
					get: function() {
						return this.intersectionRatio > 0
					}
				});
				else {
					var s = [];
					r.prototype.THROTTLE_TIMEOUT = 100, r.prototype.POLL_INTERVAL = null, r.prototype.observe = function(e) {
						if (!this._observationTargets.some((function(t) {
								return t.element == e
							}))) {
							if (!e || 1 != e.nodeType) throw new Error("target must be an Element");
							this._registerInstance(), this._observationTargets.push({
								element: e,
								entry: null
							}), this._monitorIntersections(), this._checkForIntersections()
						}
					}, r.prototype.unobserve = function(e) {
						this._observationTargets = this._observationTargets.filter((function(t) {
							return t.element != e
						})), this._observationTargets.length || (this._unmonitorIntersections(), this._unregisterInstance())
					}, r.prototype.disconnect = function() {
						this._observationTargets = [], this._unmonitorIntersections(), this._unregisterInstance()
					}, r.prototype.takeRecords = function() {
						var e = this._queuedEntries.slice();
						return this._queuedEntries = [], e
					}, r.prototype._initThresholds = function(e) {
						var t = e || [0];
						return Array.isArray(t) || (t = [t]), t.sort().filter((function(e, t, s) {
							if ("number" != typeof e || isNaN(e) || e < 0 || e > 1) throw new Error("threshold must be a number between 0 and 1 inclusively");
							return e !== s[t - 1]
						}))
					}, r.prototype._parseRootMargin = function(e) {
						var t = (e || "0px").split(/\s+/).map((function(e) {
							var t = /^(-?\d*\.?\d+)(px|%)$/.exec(e);
							if (!t) throw new Error("rootMargin must be specified in pixels or percent");
							return {
								value: parseFloat(t[1]),
								unit: t[2]
							}
						}));
						return t[1] = t[1] || t[0], t[2] = t[2] || t[0], t[3] = t[3] || t[1], t
					}, r.prototype._monitorIntersections = function() {
						this._monitoringIntersections || (this._monitoringIntersections = !0, this.POLL_INTERVAL ? this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL) : (o(e, "resize", this._checkForIntersections, !0), o(t, "scroll", this._checkForIntersections, !0), "MutationObserver" in e && (this._domObserver = new MutationObserver(this._checkForIntersections), this._domObserver.observe(t, {
							attributes: !0,
							childList: !0,
							characterData: !0,
							subtree: !0
						}))))
					}, r.prototype._unmonitorIntersections = function() {
						this._monitoringIntersections && (this._monitoringIntersections = !1, clearInterval(this._monitoringInterval), this._monitoringInterval = null, a(e, "resize", this._checkForIntersections, !0), a(t, "scroll", this._checkForIntersections, !0), this._domObserver && (this._domObserver.disconnect(), this._domObserver = null))
					}, r.prototype._checkForIntersections = function() {
						var t = this._rootIsInDom(),
							s = t ? this._getRootRect() : {
								top: 0,
								bottom: 0,
								left: 0,
								right: 0,
								width: 0,
								height: 0
							};
						this._observationTargets.forEach((function(r) {
							var o = r.element,
								a = i(o),
								c = this._rootContainsTarget(o),
								d = r.entry,
								l = t && c && this._computeTargetAndRootIntersection(o, s),
								m = r.entry = new n({
									time: e.performance && performance.now && performance.now(),
									target: o,
									boundingClientRect: a,
									rootBounds: s,
									intersectionRect: l
								});
							d ? t && c ? this._hasCrossedThreshold(d, m) && this._queuedEntries.push(m) : d && d.isIntersecting && this._queuedEntries.push(m) : this._queuedEntries.push(m)
						}), this), this._queuedEntries.length && this._callback(this.takeRecords(), this)
					}, r.prototype._computeTargetAndRootIntersection = function(s, n) {
						if ("none" != e.getComputedStyle(s).display) {
							for (var r, o, a, c, l, m, u, p, C = i(s), b = d(s), h = !1; !h;) {
								var f = null,
									g = 1 == b.nodeType ? e.getComputedStyle(b) : {};
								if ("none" == g.display) return;
								if (b == this.root || b == t ? (h = !0, f = n) : b != t.body && b != t.documentElement && "visible" != g.overflow && (f = i(b)), f && (r = f, o = C, a = void 0, c = void 0, l = void 0, m = void 0, u = void 0, p = void 0, a = Math.max(r.top, o.top), c = Math.min(r.bottom, o.bottom), l = Math.max(r.left, o.left), m = Math.min(r.right, o.right), p = c - a, !(C = (u = m - l) >= 0 && p >= 0 && {
										top: a,
										bottom: c,
										left: l,
										right: m,
										width: u,
										height: p
									}))) break;
								b = d(b)
							}
							return C
						}
					}, r.prototype._getRootRect = function() {
						var e;
						if (this.root) e = i(this.root);
						else {
							var s = t.documentElement,
								n = t.body;
							e = {
								top: 0,
								left: 0,
								right: s.clientWidth || n.clientWidth,
								width: s.clientWidth || n.clientWidth,
								bottom: s.clientHeight || n.clientHeight,
								height: s.clientHeight || n.clientHeight
							}
						}
						return this._expandRectByRootMargin(e)
					}, r.prototype._expandRectByRootMargin = function(e) {
						var t = this._rootMarginValues.map((function(t, s) {
								return "px" == t.unit ? t.value : t.value * (s % 2 ? e.width : e.height) / 100
							})),
							s = {
								top: e.top - t[0],
								right: e.right + t[1],
								bottom: e.bottom + t[2],
								left: e.left - t[3]
							};
						return s.width = s.right - s.left, s.height = s.bottom - s.top, s
					}, r.prototype._hasCrossedThreshold = function(e, t) {
						var s = e && e.isIntersecting ? e.intersectionRatio || 0 : -1,
							n = t.isIntersecting ? t.intersectionRatio || 0 : -1;
						if (s !== n)
							for (var r = 0; r < this.thresholds.length; r++) {
								var o = this.thresholds[r];
								if (o == s || o == n || o < s != o < n) return !0
							}
					}, r.prototype._rootIsInDom = function() {
						return !this.root || c(t, this.root)
					}, r.prototype._rootContainsTarget = function(e) {
						return c(this.root || t, e)
					}, r.prototype._registerInstance = function() {
						s.indexOf(this) < 0 && s.push(this)
					}, r.prototype._unregisterInstance = function() {
						var e = s.indexOf(this); - 1 != e && s.splice(e, 1)
					}, e.IntersectionObserver = r, e.IntersectionObserverEntry = n
				}

				function n(e) {
					this.time = e.time, this.target = e.target, this.rootBounds = e.rootBounds, this.boundingClientRect = e.boundingClientRect, this.intersectionRect = e.intersectionRect || {
						top: 0,
						bottom: 0,
						left: 0,
						right: 0,
						width: 0,
						height: 0
					}, this.isIntersecting = !!e.intersectionRect;
					var t = this.boundingClientRect,
						s = t.width * t.height,
						n = this.intersectionRect,
						r = n.width * n.height;
					this.intersectionRatio = s ? r / s : this.isIntersecting ? 1 : 0
				}

				function r(e, t) {
					var s, n, r, o = t || {};
					if ("function" != typeof e) throw new Error("callback must be a function");
					if (o.root && 1 != o.root.nodeType) throw new Error("root must be an Element");
					this._checkForIntersections = (s = this._checkForIntersections.bind(this), n = this.THROTTLE_TIMEOUT, r = null, function() {
						r || (r = setTimeout((function() {
							s(), r = null
						}), n))
					}), this._callback = e, this._observationTargets = [], this._queuedEntries = [], this._rootMarginValues = this._parseRootMargin(o.rootMargin), this.thresholds = this._initThresholds(o.threshold), this.root = o.root || null, this.rootMargin = this._rootMarginValues.map((function(e) {
						return e.value + e.unit
					})).join(" ")
				}

				function o(e, t, s, n) {
					"function" == typeof e.addEventListener ? e.addEventListener(t, s, n || !1) : "function" == typeof e.attachEvent && e.attachEvent("on" + t, s)
				}

				function a(e, t, s, n) {
					"function" == typeof e.removeEventListener ? e.removeEventListener(t, s, n || !1) : "function" == typeof e.detatchEvent && e.detatchEvent("on" + t, s)
				}

				function i(e) {
					var t;
					try {
						t = e.getBoundingClientRect()
					} catch (s) {}
					return t ? (t.width && t.height || (t = {
						top: t.top,
						right: t.right,
						bottom: t.bottom,
						left: t.left,
						width: t.right - t.left,
						height: t.bottom - t.top
					}), t) : {
						top: 0,
						bottom: 0,
						left: 0,
						right: 0,
						width: 0,
						height: 0
					}
				}

				function c(e, t) {
					for (var s = t; s;) {
						if (s == e) return !0;
						s = d(s)
					}
					return !1
				}

				function d(e) {
					var t = e.parentNode;
					return t && 11 == t.nodeType && t.host ? t.host : t
				}
			}(window, document)
		},
		"./node_modules/linkify-it/index.js": function(e, t, s) {
			"use strict";

			function n(e) {
				return Array.prototype.slice.call(arguments, 1).forEach((function(t) {
					t && Object.keys(t).forEach((function(s) {
						e[s] = t[s]
					}))
				})), e
			}

			function r(e) {
				return Object.prototype.toString.call(e)
			}

			function o(e) {
				return "[object Function]" === r(e)
			}

			function a(e) {
				return e.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
			}
			var i = {
				fuzzyLink: !0,
				fuzzyEmail: !0,
				fuzzyIP: !1
			};
			var c = {
					"http:": {
						validate: function(e, t, s) {
							var n = e.slice(t);
							return s.re.http || (s.re.http = new RegExp("^\\/\\/" + s.re.src_auth + s.re.src_host_port_strict + s.re.src_path, "i")), s.re.http.test(n) ? n.match(s.re.http)[0].length : 0
						}
					},
					"https:": "http:",
					"ftp:": "http:",
					"//": {
						validate: function(e, t, s) {
							var n = e.slice(t);
							return s.re.no_http || (s.re.no_http = new RegExp("^" + s.re.src_auth + "(?:localhost|(?:(?:" + s.re.src_domain + ")\\.)+" + s.re.src_domain_root + ")" + s.re.src_port + s.re.src_host_terminator + s.re.src_path, "i")), s.re.no_http.test(n) ? t >= 3 && ":" === e[t - 3] ? 0 : t >= 3 && "/" === e[t - 3] ? 0 : n.match(s.re.no_http)[0].length : 0
						}
					},
					"mailto:": {
						validate: function(e, t, s) {
							var n = e.slice(t);
							return s.re.mailto || (s.re.mailto = new RegExp("^" + s.re.src_email_name + "@" + s.re.src_host_strict, "i")), s.re.mailto.test(n) ? n.match(s.re.mailto)[0].length : 0
						}
					}
				},
				d = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]",
				l = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");

			function m(e) {
				var t = e.re = s("./node_modules/linkify-it/lib/re.js")(e.__opts__),
					n = e.__tlds__.slice();

				function i(e) {
					return e.replace("%TLDS%", t.src_tlds)
				}
				e.onCompile(), e.__tlds_replaced__ || n.push(d), n.push(t.src_xn), t.src_tlds = n.join("|"), t.email_fuzzy = RegExp(i(t.tpl_email_fuzzy), "i"), t.link_fuzzy = RegExp(i(t.tpl_link_fuzzy), "i"), t.link_no_ip_fuzzy = RegExp(i(t.tpl_link_no_ip_fuzzy), "i"), t.host_fuzzy_test = RegExp(i(t.tpl_host_fuzzy_test), "i");
				var c = [];

				function l(e, t) {
					throw new Error('(LinkifyIt) Invalid schema "' + e + '": ' + t)
				}
				e.__compiled__ = {}, Object.keys(e.__schemas__).forEach((function(t) {
					var s = e.__schemas__[t];
					if (null !== s) {
						var n = {
							validate: null,
							link: null
						};
						if (e.__compiled__[t] = n, "[object Object]" === r(s)) return ! function(e) {
							return "[object RegExp]" === r(e)
						}(s.validate) ? o(s.validate) ? n.validate = s.validate : l(t, s) : n.validate = function(e) {
							return function(t, s) {
								var n = t.slice(s);
								return e.test(n) ? n.match(e)[0].length : 0
							}
						}(s.validate), void(o(s.normalize) ? n.normalize = s.normalize : s.normalize ? l(t, s) : n.normalize = function(e, t) {
							t.normalize(e)
						});
						! function(e) {
							return "[object String]" === r(e)
						}(s) ? l(t, s): c.push(t)
					}
				})), c.forEach((function(t) {
					e.__compiled__[e.__schemas__[t]] && (e.__compiled__[t].validate = e.__compiled__[e.__schemas__[t]].validate, e.__compiled__[t].normalize = e.__compiled__[e.__schemas__[t]].normalize)
				})), e.__compiled__[""] = {
					validate: null,
					normalize: function(e, t) {
						t.normalize(e)
					}
				};
				var m = Object.keys(e.__compiled__).filter((function(t) {
					return t.length > 0 && e.__compiled__[t]
				})).map(a).join("|");
				e.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + t.src_ZPCc + "))(" + m + ")", "i"), e.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + t.src_ZPCc + "))(" + m + ")", "ig"), e.re.pretest = RegExp("(" + e.re.schema_test.source + ")|(" + e.re.host_fuzzy_test.source + ")|@", "i"),
					function(e) {
						e.__index__ = -1, e.__text_cache__ = ""
					}(e)
			}

			function u(e, t) {
				var s = e.__index__,
					n = e.__last_index__,
					r = e.__text_cache__.slice(s, n);
				this.schema = e.__schema__.toLowerCase(), this.index = s + t, this.lastIndex = n + t, this.raw = r, this.text = r, this.url = r
			}

			function p(e, t) {
				var s = new u(e, t);
				return e.__compiled__[s.schema].normalize(s, e), s
			}

			function C(e, t) {
				if (!(this instanceof C)) return new C(e, t);
				var s;
				t || (s = e, Object.keys(s || {}).reduce((function(e, t) {
					return e || i.hasOwnProperty(t)
				}), !1) && (t = e, e = {})), this.__opts__ = n({}, i, t), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = n({}, c, e), this.__compiled__ = {}, this.__tlds__ = l, this.__tlds_replaced__ = !1, this.re = {}, m(this)
			}
			C.prototype.add = function(e, t) {
				return this.__schemas__[e] = t, m(this), this
			}, C.prototype.set = function(e) {
				return this.__opts__ = n(this.__opts__, e), this
			}, C.prototype.test = function(e) {
				if (this.__text_cache__ = e, this.__index__ = -1, !e.length) return !1;
				var t, s, n, r, o, a, i, c;
				if (this.re.schema_test.test(e))
					for ((i = this.re.schema_search).lastIndex = 0; null !== (t = i.exec(e));)
						if (r = this.testSchemaAt(e, t[2], i.lastIndex)) {
							this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + r;
							break
						} return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (c = e.search(this.re.host_fuzzy_test)) >= 0 && (this.__index__ < 0 || c < this.__index__) && null !== (s = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) && (o = s.index + s[1].length, (this.__index__ < 0 || o < this.__index__) && (this.__schema__ = "", this.__index__ = o, this.__last_index__ = s.index + s[0].length)), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && e.indexOf("@") >= 0 && null !== (n = e.match(this.re.email_fuzzy)) && (o = n.index + n[1].length, a = n.index + n[0].length, (this.__index__ < 0 || o < this.__index__ || o === this.__index__ && a > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = o, this.__last_index__ = a)), this.__index__ >= 0
			}, C.prototype.pretest = function(e) {
				return this.re.pretest.test(e)
			}, C.prototype.testSchemaAt = function(e, t, s) {
				return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, s, this) : 0
			}, C.prototype.match = function(e) {
				var t = 0,
					s = [];
				this.__index__ >= 0 && this.__text_cache__ === e && (s.push(p(this, t)), t = this.__last_index__);
				for (var n = t ? e.slice(t) : e; this.test(n);) s.push(p(this, t)), n = n.slice(this.__last_index__), t += this.__last_index__;
				return s.length ? s : null
			}, C.prototype.tlds = function(e, t) {
				return e = Array.isArray(e) ? e : [e], t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter((function(e, t, s) {
					return e !== s[t - 1]
				})).reverse(), m(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, m(this), this)
			}, C.prototype.normalize = function(e) {
				e.schema || (e.url = "http://" + e.url), "mailto:" !== e.schema || /^mailto:/i.test(e.url) || (e.url = "mailto:" + e.url)
			}, C.prototype.onCompile = function() {}, e.exports = C
		},
		"./node_modules/linkify-it/lib/re.js": function(e, t, s) {
			"use strict";
			e.exports = function(e) {
				var t = {};
				t.src_Any = s("./node_modules/uc.micro/properties/Any/regex.js").source, t.src_Cc = s("./node_modules/uc.micro/categories/Cc/regex.js").source, t.src_Z = s("./node_modules/uc.micro/categories/Z/regex.js").source, t.src_P = s("./node_modules/uc.micro/categories/P/regex.js").source, t.src_ZPCc = [t.src_Z, t.src_P, t.src_Cc].join("|"), t.src_ZCc = [t.src_Z, t.src_Cc].join("|");
				return t.src_pseudo_letter = "(?:(?![><｜]|" + t.src_ZPCc + ")" + t.src_Any + ")", t.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", t.src_auth = "(?:(?:(?!" + t.src_ZCc + "|[@/\\[\\]()]).)+@)?", t.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", t.src_host_terminator = "(?=$|[><｜]|" + t.src_ZPCc + ")(?!-|_|:\\d|\\.-|\\.(?!$|" + t.src_ZPCc + "))", t.src_path = "(?:[/?#](?:(?!" + t.src_ZCc + "|[><｜]|[()[\\]{}.,\"'?!\\-]).|\\[(?:(?!" + t.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + t.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + t.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + t.src_ZCc + '|["]).)+\\"|\\\'(?:(?!' + t.src_ZCc + "|[']).)+\\'|\\'(?=" + t.src_pseudo_letter + "|[-]).|\\.{2,3}[a-zA-Z0-9%/]|\\.(?!" + t.src_ZCc + "|[.]).|" + (e && e["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + "\\,(?!" + t.src_ZCc + ").|\\!(?!" + t.src_ZCc + "|[!]).|\\?(?!" + t.src_ZCc + "|[?]).)+|\\/)?", t.src_email_name = '[\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]+', t.src_xn = "xn--[a-z0-9\\-]{1,59}", t.src_domain_root = "(?:" + t.src_xn + "|" + t.src_pseudo_letter + "{1,63})", t.src_domain = "(?:" + t.src_xn + "|(?:" + t.src_pseudo_letter + ")|(?:" + t.src_pseudo_letter + "(?:-(?!-)|" + t.src_pseudo_letter + "){0,61}" + t.src_pseudo_letter + "))", t.src_host = "(?:(?:(?:(?:" + t.src_domain + ")\\.)*" + t.src_domain + "))", t.tpl_host_fuzzy = "(?:" + t.src_ip4 + "|(?:(?:(?:" + t.src_domain + ")\\.)+(?:%TLDS%)))", t.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + t.src_domain + ")\\.)+(?:%TLDS%))", t.src_host_strict = t.src_host + t.src_host_terminator, t.tpl_host_fuzzy_strict = t.tpl_host_fuzzy + t.src_host_terminator, t.src_host_port_strict = t.src_host + t.src_port + t.src_host_terminator, t.tpl_host_port_fuzzy_strict = t.tpl_host_fuzzy + t.src_port + t.src_host_terminator, t.tpl_host_port_no_ip_fuzzy_strict = t.tpl_host_no_ip_fuzzy + t.src_port + t.src_host_terminator, t.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + t.src_ZPCc + "|>|$))", t.tpl_email_fuzzy = "(^|[><｜]|\\(|" + t.src_ZCc + ")(" + t.src_email_name + "@" + t.tpl_host_fuzzy_strict + ")", t.tpl_link_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t.src_ZPCc + "))((?![$+<=>^`|｜])" + t.tpl_host_port_fuzzy_strict + t.src_path + ")", t.tpl_link_no_ip_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t.src_ZPCc + "))((?![$+<=>^`|｜])" + t.tpl_host_port_no_ip_fuzzy_strict + t.src_path + ")", t
			}
		},
		"./node_modules/lodash/_baseClamp.js": function(e, t) {
			e.exports = function(e, t, s) {
				return e == e && (void 0 !== s && (e = e <= s ? e : s), void 0 !== t && (e = e >= t ? e : t)), e
			}
		},
		"./node_modules/lodash/_baseDelay.js": function(e, t) {
			var s = "Expected a function";
			e.exports = function(e, t, n) {
				if ("function" != typeof e) throw new TypeError(s);
				return setTimeout((function() {
					e.apply(void 0, n)
				}), t)
			}
		},
		"./node_modules/lodash/_baseReduce.js": function(e, t) {
			e.exports = function(e, t, s, n, r) {
				return r(e, (function(e, r, o) {
					s = n ? (n = !1, e) : t(s, e, r, o)
				})), s
			}
		},
		"./node_modules/lodash/clamp.js": function(e, t, s) {
			var n = s("./node_modules/lodash/_baseClamp.js"),
				r = s("./node_modules/lodash/toNumber.js");
			e.exports = function(e, t, s) {
				return void 0 === s && (s = t, t = void 0), void 0 !== s && (s = (s = r(s)) == s ? s : 0), void 0 !== t && (t = (t = r(t)) == t ? t : 0), n(r(e), t, s)
			}
		},
		"./node_modules/lodash/defer.js": function(e, t, s) {
			var n = s("./node_modules/lodash/_baseDelay.js"),
				r = s("./node_modules/lodash/_baseRest.js")((function(e, t) {
					return n(e, 1, t)
				}));
			e.exports = r
		},
		"./node_modules/lodash/random.js": function(e, t, s) {
			var n = s("./node_modules/lodash/_baseRandom.js"),
				r = s("./node_modules/lodash/_isIterateeCall.js"),
				o = s("./node_modules/lodash/toFinite.js"),
				a = parseFloat,
				i = Math.min,
				c = Math.random;
			e.exports = function(e, t, s) {
				if (s && "boolean" != typeof s && r(e, t, s) && (t = s = void 0), void 0 === s && ("boolean" == typeof t ? (s = t, t = void 0) : "boolean" == typeof e && (s = e, e = void 0)), void 0 === e && void 0 === t ? (e = 0, t = 1) : (e = o(e), void 0 === t ? (t = e, e = 0) : t = o(t)), e > t) {
					var d = e;
					e = t, t = d
				}
				if (s || e % 1 || t % 1) {
					var l = c();
					return i(e + l * (t - e + a("1e-" + ((l + "").length - 1))), t)
				}
				return n(e, t)
			}
		},
		"./node_modules/lodash/reduce.js": function(e, t, s) {
			var n = s("./node_modules/lodash/_arrayReduce.js"),
				r = s("./node_modules/lodash/_baseEach.js"),
				o = s("./node_modules/lodash/_baseIteratee.js"),
				a = s("./node_modules/lodash/_baseReduce.js"),
				i = s("./node_modules/lodash/isArray.js");
			e.exports = function(e, t, s) {
				var c = i(e) ? n : a,
					d = arguments.length < 3;
				return c(e, o(t, 4), s, d, r)
			}
		},
		"./node_modules/lodash/times.js": function(e, t, s) {
			var n = s("./node_modules/lodash/_baseTimes.js"),
				r = s("./node_modules/lodash/_castFunction.js"),
				o = s("./node_modules/lodash/toInteger.js"),
				a = 9007199254740991,
				i = 4294967295,
				c = Math.min;
			e.exports = function(e, t) {
				if ((e = o(e)) < 1 || e > a) return [];
				var s = i,
					d = c(e, i);
				t = r(t), e -= i;
				for (var l = n(d, t); ++s < e;) t(s);
				return l
			}
		},
		"./node_modules/lodash/uniqueId.js": function(e, t, s) {
			var n = s("./node_modules/lodash/toString.js"),
				r = 0;
			e.exports = function(e) {
				var t = ++r;
				return n(e) + t
			}
		},
		"./node_modules/shallowequal/index.js": function(e, t) {
			e.exports = function(e, t, s, n) {
				var r = s ? s.call(n, e, t) : void 0;
				if (void 0 !== r) return !!r;
				if (e === t) return !0;
				if ("object" != typeof e || !e || "object" != typeof t || !t) return !1;
				var o = Object.keys(e),
					a = Object.keys(t);
				if (o.length !== a.length) return !1;
				for (var i = Object.prototype.hasOwnProperty.bind(t), c = 0; c < o.length; c++) {
					var d = o[c];
					if (!i(d)) return !1;
					var l = e[d],
						m = t[d];
					if (!1 === (r = s ? s.call(n, l, m, d) : void 0) || void 0 === r && l !== m) return !1
				}
				return !0
			}
		},
		"./node_modules/tlds/index.js": function(e, t) {
			e.exports = ["aaa", "aarp", "abarth", "abb", "abbott", "abbvie", "abc", "able", "abogado", "abudhabi", "ac", "academy", "accenture", "accountant", "accountants", "aco", "active", "actor", "ad", "adac", "ads", "adult", "ae", "aeg", "aero", "aetna", "af", "afamilycompany", "afl", "africa", "ag", "agakhan", "agency", "ai", "aig", "aigo", "airbus", "airforce", "airtel", "akdn", "al", "alfaromeo", "alibaba", "alipay", "allfinanz", "allstate", "ally", "alsace", "alstom", "am", "americanexpress", "americanfamily", "amex", "amfam", "amica", "amsterdam", "analytics", "android", "anquan", "anz", "ao", "aol", "apartments", "app", "apple", "aq", "aquarelle", "ar", "arab", "aramco", "archi", "army", "arpa", "art", "arte", "as", "asda", "asia", "associates", "at", "athleta", "attorney", "au", "auction", "audi", "audible", "audio", "auspost", "author", "auto", "autos", "avianca", "aw", "aws", "ax", "axa", "az", "azure", "ba", "baby", "baidu", "banamex", "bananarepublic", "band", "bank", "bar", "barcelona", "barclaycard", "barclays", "barefoot", "bargains", "baseball", "basketball", "bauhaus", "bayern", "bb", "bbc", "bbt", "bbva", "bcg", "bcn", "bd", "be", "beats", "beauty", "beer", "bentley", "berlin", "best", "bestbuy", "bet", "bf", "bg", "bh", "bharti", "bi", "bible", "bid", "bike", "bing", "bingo", "bio", "biz", "bj", "black", "blackfriday", "blanco", "blockbuster", "blog", "bloomberg", "blue", "bm", "bms", "bmw", "bn", "bnl", "bnpparibas", "bo", "boats", "boehringer", "bofa", "bom", "bond", "boo", "book", "booking", "boots", "bosch", "bostik", "boston", "bot", "boutique", "box", "br", "bradesco", "bridgestone", "broadway", "broker", "brother", "brussels", "bs", "bt", "budapest", "bugatti", "build", "builders", "business", "buy", "buzz", "bv", "bw", "by", "bz", "bzh", "ca", "cab", "cafe", "cal", "call", "calvinklein", "cam", "camera", "camp", "cancerresearch", "canon", "capetown", "capital", "capitalone", "car", "caravan", "cards", "care", "career", "careers", "cars", "cartier", "casa", "case", "caseih", "cash", "casino", "cat", "catering", "catholic", "cba", "cbn", "cbre", "cbs", "cc", "cd", "ceb", "center", "ceo", "cern", "cf", "cfa", "cfd", "cg", "ch", "chanel", "channel", "chase", "chat", "cheap", "chintai", "chloe", "christmas", "chrome", "chrysler", "church", "ci", "cipriani", "circle", "cisco", "citadel", "citi", "citic", "city", "cityeats", "ck", "cl", "claims", "cleaning", "click", "clinic", "clinique", "clothing", "cloud", "club", "clubmed", "cm", "cn", "co", "coach", "codes", "coffee", "college", "cologne", "com", "comcast", "commbank", "community", "company", "compare", "computer", "comsec", "condos", "construction", "consulting", "contact", "contractors", "cooking", "cookingchannel", "cool", "coop", "corsica", "country", "coupon", "coupons", "courses", "cr", "credit", "creditcard", "creditunion", "cricket", "crown", "crs", "cruise", "cruises", "csc", "cu", "cuisinella", "cv", "cw", "cx", "cy", "cymru", "cyou", "cz", "dabur", "dad", "dance", "data", "date", "dating", "datsun", "day", "dclk", "dds", "de", "deal", "dealer", "deals", "degree", "delivery", "dell", "deloitte", "delta", "democrat", "dental", "dentist", "desi", "design", "dev", "dhl", "diamonds", "diet", "digital", "direct", "directory", "discount", "discover", "dish", "diy", "dj", "dk", "dm", "dnp", "do", "docs", "doctor", "dodge", "dog", "doha", "domains", "dot", "download", "drive", "dtv", "dubai", "duck", "dunlop", "duns", "dupont", "durban", "dvag", "dvr", "dz", "earth", "eat", "ec", "eco", "edeka", "edu", "education", "ee", "eg", "email", "emerck", "energy", "engineer", "engineering", "enterprises", "epost", "epson", "equipment", "er", "ericsson", "erni", "es", "esq", "estate", "esurance", "et", "etisalat", "eu", "eurovision", "eus", "events", "everbank", "exchange", "expert", "exposed", "express", "extraspace", "fage", "fail", "fairwinds", "faith", "family", "fan", "fans", "farm", "farmers", "fashion", "fast", "fedex", "feedback", "ferrari", "ferrero", "fi", "fiat", "fidelity", "fido", "film", "final", "finance", "financial", "fire", "firestone", "firmdale", "fish", "fishing", "fit", "fitness", "fj", "fk", "flickr", "flights", "flir", "florist", "flowers", "fly", "fm", "fo", "foo", "food", "foodnetwork", "football", "ford", "forex", "forsale", "forum", "foundation", "fox", "fr", "free", "fresenius", "frl", "frogans", "frontdoor", "frontier", "ftr", "fujitsu", "fujixerox", "fun", "fund", "furniture", "futbol", "fyi", "ga", "gal", "gallery", "gallo", "gallup", "game", "games", "gap", "garden", "gb", "gbiz", "gd", "gdn", "ge", "gea", "gent", "genting", "george", "gf", "gg", "ggee", "gh", "gi", "gift", "gifts", "gives", "giving", "gl", "glade", "glass", "gle", "global", "globo", "gm", "gmail", "gmbh", "gmo", "gmx", "gn", "godaddy", "gold", "goldpoint", "golf", "goo", "goodhands", "goodyear", "goog", "google", "gop", "got", "gov", "gp", "gq", "gr", "grainger", "graphics", "gratis", "green", "gripe", "group", "gs", "gt", "gu", "guardian", "gucci", "guge", "guide", "guitars", "guru", "gw", "gy", "hair", "hamburg", "hangout", "haus", "hbo", "hdfc", "hdfcbank", "health", "healthcare", "help", "helsinki", "here", "hermes", "hgtv", "hiphop", "hisamitsu", "hitachi", "hiv", "hk", "hkt", "hm", "hn", "hockey", "holdings", "holiday", "homedepot", "homegoods", "homes", "homesense", "honda", "honeywell", "horse", "hospital", "host", "hosting", "hot", "hoteles", "hotels", "hotmail", "house", "how", "hr", "hsbc", "ht", "htc", "hu", "hughes", "hyatt", "hyundai", "ibm", "icbc", "ice", "icu", "id", "ie", "ieee", "ifm", "ikano", "il", "im", "imamat", "imdb", "immo", "immobilien", "in", "industries", "infiniti", "info", "ing", "ink", "institute", "insurance", "insure", "int", "intel", "international", "intuit", "investments", "io", "ipiranga", "iq", "ir", "irish", "is", "iselect", "ismaili", "ist", "istanbul", "it", "itau", "itv", "iveco", "iwc", "jaguar", "java", "jcb", "jcp", "je", "jeep", "jetzt", "jewelry", "jio", "jlc", "jll", "jm", "jmp", "jnj", "jo", "jobs", "joburg", "jot", "joy", "jp", "jpmorgan", "jprs", "juegos", "juniper", "kaufen", "kddi", "ke", "kerryhotels", "kerrylogistics", "kerryproperties", "kfh", "kg", "kh", "ki", "kia", "kim", "kinder", "kindle", "kitchen", "kiwi", "km", "kn", "koeln", "komatsu", "kosher", "kp", "kpmg", "kpn", "kr", "krd", "kred", "kuokgroup", "kw", "ky", "kyoto", "kz", "la", "lacaixa", "ladbrokes", "lamborghini", "lamer", "lancaster", "lancia", "lancome", "land", "landrover", "lanxess", "lasalle", "lat", "latino", "latrobe", "law", "lawyer", "lb", "lc", "lds", "lease", "leclerc", "lefrak", "legal", "lego", "lexus", "lgbt", "li", "liaison", "lidl", "life", "lifeinsurance", "lifestyle", "lighting", "like", "lilly", "limited", "limo", "lincoln", "linde", "link", "lipsy", "live", "living", "lixil", "lk", "loan", "loans", "locker", "locus", "loft", "lol", "london", "lotte", "lotto", "love", "lpl", "lplfinancial", "lr", "ls", "lt", "ltd", "ltda", "lu", "lundbeck", "lupin", "luxe", "luxury", "lv", "ly", "ma", "macys", "madrid", "maif", "maison", "makeup", "man", "management", "mango", "market", "marketing", "markets", "marriott", "marshalls", "maserati", "mattel", "mba", "mc", "mcd", "mcdonalds", "mckinsey", "md", "me", "med", "media", "meet", "melbourne", "meme", "memorial", "men", "menu", "meo", "metlife", "mg", "mh", "miami", "microsoft", "mil", "mini", "mint", "mit", "mitsubishi", "mk", "ml", "mlb", "mls", "mm", "mma", "mn", "mo", "mobi", "mobile", "mobily", "moda", "moe", "moi", "mom", "monash", "money", "monster", "montblanc", "mopar", "mormon", "mortgage", "moscow", "moto", "motorcycles", "mov", "movie", "movistar", "mp", "mq", "mr", "ms", "msd", "mt", "mtn", "mtr", "mu", "museum", "mutual", "mv", "mw", "mx", "my", "mz", "na", "nab", "nadex", "nagoya", "name", "nationwide", "natura", "navy", "nba", "nc", "ne", "nec", "net", "netbank", "netflix", "network", "neustar", "new", "newholland", "news", "next", "nextdirect", "nexus", "nf", "nfl", "ng", "ngo", "nhk", "ni", "nico", "nike", "nikon", "ninja", "nissan", "nissay", "nl", "no", "nokia", "northwesternmutual", "norton", "now", "nowruz", "nowtv", "np", "nr", "nra", "nrw", "ntt", "nu", "nyc", "nz", "obi", "observer", "off", "office", "okinawa", "olayan", "olayangroup", "oldnavy", "ollo", "om", "omega", "one", "ong", "onl", "online", "onyourside", "ooo", "open", "oracle", "orange", "org", "organic", "origins", "osaka", "otsuka", "ott", "ovh", "pa", "page", "pamperedchef", "panasonic", "panerai", "paris", "pars", "partners", "parts", "party", "passagens", "pay", "pccw", "pe", "pet", "pf", "pfizer", "pg", "ph", "pharmacy", "philips", "phone", "photo", "photography", "photos", "physio", "piaget", "pics", "pictet", "pictures", "pid", "pin", "ping", "pink", "pioneer", "pizza", "pk", "pl", "place", "play", "playstation", "plumbing", "plus", "pm", "pn", "pnc", "pohl", "poker", "politie", "porn", "post", "pr", "pramerica", "praxi", "press", "prime", "pro", "prod", "productions", "prof", "progressive", "promo", "properties", "property", "protection", "pru", "prudential", "ps", "pt", "pub", "pw", "pwc", "py", "qa", "qpon", "quebec", "quest", "qvc", "racing", "radio", "raid", "re", "read", "realestate", "realtor", "realty", "recipes", "red", "redstone", "redumbrella", "rehab", "reise", "reisen", "reit", "reliance", "ren", "rent", "rentals", "repair", "report", "republican", "rest", "restaurant", "review", "reviews", "rexroth", "rich", "richardli", "ricoh", "rightathome", "ril", "rio", "rip", "rmit", "ro", "rocher", "rocks", "rodeo", "rogers", "room", "rs", "rsvp", "ru", "rugby", "ruhr", "run", "rw", "rwe", "ryukyu", "sa", "saarland", "safe", "safety", "sakura", "sale", "salon", "samsclub", "samsung", "sandvik", "sandvikcoromant", "sanofi", "sap", "sapo", "sarl", "sas", "save", "saxo", "sb", "sbi", "sbs", "sc", "sca", "scb", "schaeffler", "schmidt", "scholarships", "school", "schule", "schwarz", "science", "scjohnson", "scor", "scot", "sd", "se", "seat", "secure", "security", "seek", "select", "sener", "services", "ses", "seven", "sew", "sex", "sexy", "sfr", "sg", "sh", "shangrila", "sharp", "shaw", "shell", "shia", "shiksha", "shoes", "shop", "shopping", "shouji", "show", "showtime", "shriram", "si", "silk", "sina", "singles", "site", "sj", "sk", "ski", "skin", "sky", "skype", "sl", "sling", "sm", "smart", "smile", "sn", "sncf", "so", "soccer", "social", "softbank", "software", "sohu", "solar", "solutions", "song", "sony", "soy", "space", "spiegel", "spot", "spreadbetting", "sr", "srl", "srt", "st", "stada", "staples", "star", "starhub", "statebank", "statefarm", "statoil", "stc", "stcgroup", "stockholm", "storage", "store", "stream", "studio", "study", "style", "su", "sucks", "supplies", "supply", "support", "surf", "surgery", "suzuki", "sv", "swatch", "swiftcover", "swiss", "sx", "sy", "sydney", "symantec", "systems", "sz", "tab", "taipei", "talk", "taobao", "target", "tatamotors", "tatar", "tattoo", "tax", "taxi", "tc", "tci", "td", "tdk", "team", "tech", "technology", "tel", "telecity", "telefonica", "temasek", "tennis", "teva", "tf", "tg", "th", "thd", "theater", "theatre", "tiaa", "tickets", "tienda", "tiffany", "tips", "tires", "tirol", "tj", "tjmaxx", "tjx", "tk", "tkmaxx", "tl", "tm", "tmall", "tn", "to", "today", "tokyo", "tools", "top", "toray", "toshiba", "total", "tours", "town", "toyota", "toys", "tr", "trade", "trading", "training", "travel", "travelchannel", "travelers", "travelersinsurance", "trust", "trv", "tt", "tube", "tui", "tunes", "tushu", "tv", "tvs", "tw", "tz", "ua", "ubank", "ubs", "uconnect", "ug", "uk", "unicom", "university", "uno", "uol", "ups", "us", "uy", "uz", "va", "vacations", "vana", "vanguard", "vc", "ve", "vegas", "ventures", "verisign", "versicherung", "vet", "vg", "vi", "viajes", "video", "vig", "viking", "villas", "vin", "vip", "virgin", "visa", "vision", "vista", "vistaprint", "viva", "vivo", "vlaanderen", "vn", "vodka", "volkswagen", "volvo", "vote", "voting", "voto", "voyage", "vu", "vuelos", "wales", "walmart", "walter", "wang", "wanggou", "warman", "watch", "watches", "weather", "weatherchannel", "webcam", "weber", "website", "wed", "wedding", "weibo", "weir", "wf", "whoswho", "wien", "wiki", "williamhill", "win", "windows", "wine", "winners", "wme", "wolterskluwer", "woodside", "work", "works", "world", "wow", "ws", "wtc", "wtf", "xbox", "xerox", "xfinity", "xihuan", "xin", "कॉम", "セール", "佛山", "慈善", "集团", "在线", "한국", "大众汽车", "点看", "คอม", "ভারত", "八卦", "موقع", "বাংলা", "公益", "公司", "香格里拉", "网站", "移动", "我爱你", "москва", "қаз", "католик", "онлайн", "сайт", "联通", "срб", "бг", "бел", "קום", "时尚", "微博", "淡马锡", "ファッション", "орг", "नेट", "ストア", "삼성", "சிங்கப்பூர்", "商标", "商店", "商城", "дети", "мкд", "ею", "ポイント", "新闻", "工行", "家電", "كوم", "中文网", "中信", "中国", "中國", "娱乐", "谷歌", "భారత్", "ලංකා", "電訊盈科", "购物", "クラウド", "ભારત", "通販", "भारत", "网店", "संगठन", "餐厅", "网络", "ком", "укр", "香港", "诺基亚", "食品", "飞利浦", "台湾", "台灣", "手表", "手机", "мон", "الجزائر", "عمان", "ارامكو", "ایران", "العليان", "اتصالات", "امارات", "بازار", "پاکستان", "الاردن", "موبايلي", "بھارت", "المغرب", "ابوظبي", "السعودية", "كاثوليك", "سودان", "همراه", "عراق", "مليسيا", "澳門", "닷컴", "政府", "شبكة", "بيتك", "عرب", "გე", "机构", "组织机构", "健康", "ไทย", "سورية", "рус", "рф", "珠宝", "تونس", "大拿", "みんな", "グーグル", "ελ", "世界", "書籍", "ਭਾਰਤ", "网址", "닷넷", "コム", "天主教", "游戏", "vermögensberater", "vermögensberatung", "企业", "信息", "嘉里大酒店", "嘉里", "مصر", "قطر", "广东", "இலங்கை", "இந்தியா", "հայ", "新加坡", "فلسطين", "政务", "xperia", "xxx", "xyz", "yachts", "yahoo", "yamaxun", "yandex", "ye", "yodobashi", "yoga", "yokohama", "you", "youtube", "yt", "yun", "za", "zappos", "zara", "zero", "zip", "zippo", "zm", "zone", "zuerich", "zw"]
		},
		"./node_modules/uc.micro/categories/Cc/regex.js": function(e, t) {
			e.exports = /[\0-\x1F\x7F-\x9F]/
		},
		"./node_modules/uc.micro/categories/P/regex.js": function(e, t) {
			e.exports = /[!-#%-\*,-/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E44\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC9\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD807[\uDC41-\uDC45\uDC70\uDC71]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/
		},
		"./node_modules/uc.micro/categories/Z/regex.js": function(e, t) {
			e.exports = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/
		},
		"./node_modules/uc.micro/properties/Any/regex.js": function(e, t) {
			e.exports = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/
		},
		"./node_modules/webpack/buildin/amd-define.js": function(e, t) {
			e.exports = function() {
				throw new Error("define cannot be used indirect")
			}
		},
		"./src/higherOrderComponents/asModal/helpers.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			})), s.d(t, "b", (function() {
				return o
			}));
			var n = s("./src/reddit/constants/elementIds.ts");
			const r = () => {
					const e = document.getElementById(n.a);
					e && (e.style.filter = "blur(10px)")
				},
				o = () => {
					const e = document.getElementById(n.a);
					e && e.style.removeProperty("filter")
				}
		},
		"./src/higherOrderComponents/asModal/index.m.less": function(e, t, s) {
			e.exports = {
				overlay: "_1DK52RbaamLOWw5UPaht_S",
				mIsVisible: "_1acwN_tUhJ8w-n7oCp-Aw3",
				mIsBlurred: "_3Tq-_9917Q-o0iyzcNAeZn",
				modal: "_2Bejocqb-InO8686E2ehf"
			}
		},
		"./src/higherOrderComponents/asModal/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return h
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/higherOrderComponents/asModal/helpers.ts"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/lib/FocusTrap/index.ts"),
				c = s("./src/lib/portal/index.tsx"),
				d = s("./src/reddit/actions/shortcuts/utils.ts"),
				l = s("./src/reddit/constants/shortcuts.ts"),
				m = s("./src/reddit/helpers/toggleBodyScroll/index.ts"),
				u = s("./src/higherOrderComponents/asModal/index.m.less"),
				p = s.n(u);

			function C() {
				return (C = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const b = e => {
				let {
					className: t,
					shouldBlurBackground: s,
					isVisible: n,
					...o
				} = e;
				return r.a.createElement("div", C({
					className: Object(a.a)(p.a.overlay, t, {
						[p.a.mIsVisible]: n,
						[p.a.mIsBlurred]: s
					})
				}, o))
			};

			function h(e) {
				class t extends n.Component {
					constructor(e) {
						super(e), this.getRef = e => this.ref = e, this.onClick = e => e.stopPropagation(), this.onOverlayClick = e => {
							this.props.onOverlayClick && this.props.onOverlayClick(), e.stopPropagation()
						}, this.state = {
							mounted: !1
						}
					}
					componentDidMount() {
						this.props.ignoreDefaultFocus || this.ref && this.ref.focus(), this.setState({
							mounted: !0
						}), Object(m.a)(), this.ref && (this.focusTrap = new i.b(this.ref), this.focusTrap.activate()), this.props.shouldBlurBackground && Object(o.a)()
					}
					componentWillUnmount() {
						this.setState({
							mounted: !1
						}), Object(m.b)(), Object(d.d)(), this.focusTrap && this.focusTrap.deactivate(), this.props.shouldBlurBackground && Object(o.b)()
					}
					render() {
						const {
							props: t
						} = this, {
							className: s,
							ignoreDefaultFocus: n,
							onOverlayClick: o,
							overlayClassName: i,
							overlayCustomStyles: d,
							shouldBlurBackground: m,
							withOverlay: u,
							...C
						} = t, h = C;
						return r.a.createElement(c.a, {
							container: document.getElementById(l.b)
						}, r.a.createElement(b, {
							className: i,
							isVisible: u,
							onClick: this.onOverlayClick,
							shouldBlurBackground: m,
							style: d
						}, r.a.createElement("div", {
							"aria-modal": !0,
							className: Object(a.a)(p.a.modal, s),
							onClick: this.onClick,
							ref: this.getRef,
							role: "dialog",
							tabIndex: -1
						}, r.a.createElement(e, h))))
					}
				}
				return t
			}
		},
		"./src/higherOrderComponents/warnOnChildrenCount/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			s("./src/lib/logs/console.ts");
			t.a = function(e, t) {
				return t => r.a.createElement(e, t)
			}
		},
		"./src/higherOrderComponents/withLSWatcher.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return u
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/reddit/actions/contentGate.ts"),
				i = s("./src/reddit/selectors/experiments/nsfwBypassableBlockingExperiment.ts"),
				c = s("./src/reddit/selectors/user.ts"),
				d = s("./src/reddit/selectors/userPrefs.ts");
			const l = 3e4;
			let m;

			function u(e) {
				return t => {
					const s = Object(o.f)().getState(),
						u = Object(o.d)(),
						p = Object(d.a)(s),
						C = Object(c.S)(s),
						b = Object(i.c)(s),
						h = () => {
							Object(i.b)() && (u(a.o({
								over18: !1
							})), m && window.clearInterval(m))
						};
					return Object(n.useEffect)(() => (!C && b.isNewDesignVariant && p && (m = window.setInterval(h, l), h()), () => window.clearInterval(m)), [b.isNewDesignVariant, h, C, p]), r.a.createElement(e, t)
				}
			}
		},
		"./src/lib/FocusTrap/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			})), s.d(t, "b", (function() {
				return r
			}));
			const n = ['input:not([type="hidden"]):not([disabled])', "select:not([disabled])", "textarea:not([disabled])", "a[href]", "button:not([disabled])", '[tabindex]:not([tabindex="-1"]):not([disabled])', "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join();
			class r {
				constructor(e) {
					this.active = !1, this.onKeyDown = e => {
						if ("Tab" === e.key || 9 === e.keyCode) {
							const [t, s] = this.getTabbableNodes();
							if (!t || !s) return;
							e.shiftKey && e.target === t ? (e.preventDefault(), this.tryToFocusNode(s)) : e.shiftKey || e.target !== s || (e.preventDefault(), this.tryToFocusNode(t))
						}
					}, this.container = e
				}
				activate() {
					this.active || (this.active = !0, document.addEventListener("keydown", this.onKeyDown, !0))
				}
				deactivate() {
					this.active && (document.removeEventListener("keydown", this.onKeyDown, !0), this.active = !1)
				}
				getTabbableNodes() {
					const e = this.container.querySelectorAll(n);
					return [e[0], e[e.length - 1]]
				}
				tryToFocusNode(e) {
					e !== document.activeElement && e.focus && e.focus()
				}
			}
		},
		"./src/lib/LinkedListMap/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			}));
			class n {
				constructor(e) {
					this.value = e, this.next = void 0, this.prev = void 0
				}
			}
			class r {
				constructor(e) {
					this.key = e, this.tail = void 0, this.head = void 0, this.length = 0, this.itemsByKey = {}
				}
				static fromArray(e, t) {
					const s = new r(t);
					return e.forEach(e => s.push(e)), s
				}
				first() {
					if (this.tail) return this.tail.value
				}
				firstNode() {
					if (this.tail) return this.tail
				}
				forEach(e) {
					let t = this.tail;
					for (; t;) e(t.value), t = t.next
				}
				get(e) {
					const t = this.getNode(e);
					if (t) return t.value
				}
				getNode(e) {
					return this.itemsByKey[e]
				}
				has(e) {
					return e in this.itemsByKey
				}
				insertAfter(e, t) {
					const s = t instanceof n ? t : new n(t),
						r = this.getNode(e);
					if (!r) throw new Error(`Cannot find item with key ${e}`);
					s.prev = r, s.next = r.next, r.next = s, s.next && (s.next.prev = s);
					const o = t instanceof n ? t.value[this.key] : t[this.key];
					this.itemsByKey[o] = s, this.length++
				}
				insertBefore(e, t) {
					const s = t instanceof n ? t : new n(t),
						r = this.getNode(e);
					if (!r) throw new Error(`Cannot find item with key ${e}`);
					s.next = r, s.prev = r.prev, r.prev = s, s.prev && (s.prev.next = s);
					const o = t instanceof n ? t.value[this.key] : t[this.key];
					this.itemsByKey[o] = s, this.length++
				}
				last() {
					if (this.head) return this.head.value
				}
				lastNode() {
					if (this.head) return this.head
				}
				pop() {
					if (!this.head) return;
					return this.removeNode(this.head).value
				}
				push(e) {
					const t = e instanceof n ? e : new n(e);
					t.prev = this.head, this.head ? this.head.next = t : this.tail = t, this.head = t;
					const s = e instanceof n ? t.value[this.key] : e[this.key];
					this.itemsByKey[s] = t, this.length++
				}
				remove(e) {
					const t = this.getNode(e);
					if (t) return this.removeNode(t).value
				}
				removeNode(e) {
					return e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), e === this.tail && (this.tail = e.next), e === this.head && (this.head = e.prev), e.next = void 0, e.prev = void 0, this.itemsByKey[e.value[this.key]] = void 0, this.length--, e
				}
				shift() {
					if (!this.tail) return;
					return this.removeNode(this.tail).value
				}
				toArray() {
					const e = [];
					return this.forEach(t => e.push(t)), e
				}
				unshift(e) {
					const t = e instanceof n ? e : new n(e);
					t.next = this.tail, this.tail ? this.tail.prev = t : this.head = t, this.tail = t;
					const s = e instanceof n ? t.value[this.key] : e[this.key];
					this.itemsByKey[s] = t, this.length++
				}
			}
		},
		"./src/lib/constants/colors.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			const n = {
				alien500: "#3690ea",
				alien600: "#006dc6",
				berry300: "#e4abff",
				berry500: "#b44ac0",
				berry600: "#9c3cac",
				mango500: "#ffd635",
				mango600: "#ff6600",
				mint600: "#009eaa",
				narwhal100: "#f1f23f5",
				narwhal200: "#e9ebed",
				narwhal300: "#d4d7d9",
				narwhal600: "#989ca0",
				narwhal700: "#898d90",
				orangeRed600: "#fb133a",
				orangeRed700: "#be0039",
				orca50: "#5a5c5e",
				orca200: "#464748",
				orca300: "#3a3a3a",
				orca600: "#242424",
				orca700: "#1E1E1E",
				periwinkle300: "#94b3ff",
				periwinkle500: "#6a5cff",
				periwinkle600: "#5349da",
				sakura500: "#ff3881",
				error: "#ea0027",
				white: "#ffffff",
				black: "#000000",
				nightTone1: "#282829",
				nightTone2: "#343536",
				nightTone3: "#3A3A3C",
				nightTone4: "#D8DADC",
				nightTone5: "#1A232C",
				nightTone6: "#29292A"
			}
		},
		"./src/lib/isSimpleClick/index.ts": function(e, t, s) {
			"use strict";
			t.a = e => {
				if (e && e.target && (e => {
						let t = e;
						for (; t && t !== window.document.body;) {
							if ("A" === t.nodeName) return !0;
							t = t.parentElement
						}
						return !1
					})(e.target)) {
					if (e.ctrlKey) return !1;
					if (e.altKey) return !1;
					if (e.metaKey) return !1;
					if (e.shiftKey) return !1
				}
				return !0
			}
		},
		"./src/lib/linkMatchers/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return l
			})), s.d(t, "b", (function() {
				return m
			})), s.d(t, "d", (function() {
				return u
			})), s.d(t, "g", (function() {
				return p
			})), s.d(t, "a", (function() {
				return C
			})), s.d(t, "e", (function() {
				return h
			})), s.d(t, "f", (function() {
				return f
			}));
			var n = s("./node_modules/linkify-it/index.js"),
				r = s.n(n),
				o = s("./node_modules/tlds/index.js"),
				a = s.n(o),
				i = s("./src/lib/linkMatchers/customLinks.ts");
			s("./node_modules/lodash/values.js");
			const c = ["//", "ftp:", "http:", "https:", "mailto:"],
				d = e => ((e, t) => (t.forEach(t => e.add(t, null)), e))(e, c),
				l = r()().tlds(a.a).set({
					fuzzyIP: !0
				}),
				m = r()().set({
					fuzzyIP: !0,
					fuzzyEmail: !1
				}).add(i.g.mention.prefix, i.g.mention.config),
				u = d(r()()).set({
					fuzzyLink: !1,
					fuzzyEmail: !1
				}).add(i.g.subreddit.prefix, i.g.subreddit.config).add(i.g.subredditFull.prefix, i.g.subreddit.config),
				p = d(r()()).set({
					fuzzyLink: !1,
					fuzzyEmail: !1
				}).add(i.g.profile.prefix, i.g.profile.config).add(i.g.profileFull.prefix, i.g.profile.config),
				C = r()().tlds(a.a).set({
					fuzzyIP: !0
				}).add(i.g.subreddit.prefix, i.g.subreddit.config).add(i.g.subredditFull.prefix, i.g.subreddit.config).add(i.g.profile.prefix, i.g.profile.config).add(i.g.profileFull.prefix, i.g.profile.config).add(i.g.mention.prefix, i.g.mention.config),
				b = (r()().tlds(a.a).set({
					fuzzyIP: !0,
					fuzzyEmail: !1
				}).add(i.g.subreddit.prefix, i.g.subredditFullUrl.config).add(i.g.subredditFull.prefix, i.g.subredditFullUrl.config), l.normalize);
			l.normalize = e => {
				b.call(l, e), !e.schema && e.url.startsWith("http:") && (e.url = `https:${e.url.slice(5)}`)
			};
			const h = (e, t) => {
					const s = e.match(t);
					if (s && 1 === s.length && 0 === s[0].index && s[0].lastIndex === t.length) return s[0]
				},
				f = e => {
					const t = l.match(e);
					if (t && 1 === t.length && 0 === t[0].index) {
						const s = t[0];
						return s.lastIndex === e.length ? s : ((e, t) => {
							const s = e.substring(t.lastIndex);
							if (/.*\/\/.*\/.*/.test(t.url) && /^(\?|\!)+$/.test(s)) return t.lastIndex += s.length, t.url += s, t
						})(e, s)
					}
				}
		},
		"./src/lib/loginHref/index.ts": function(e, t, s) {
			"use strict";
			var n = s("./src/config.ts"),
				r = s("./node_modules/history/esm/history.js");
			t.a = (e, t, s) => {
				const o = Object(r.e)(e),
					a = encodeURIComponent(`${t}${o}`);
				return `${n.a.accountManagerOrigin}${s||"/login"}?dest=${a}`
			}
		},
		"./src/lib/makeLinkedPostsListingKey/index.ts": function(e, t, s) {
			"use strict";
			t.a = e => {
				return `linkedPosts--[post:'${e}']`
			}
		},
		"./src/lib/makeNsfwLinkedPostsListingKey/index.ts": function(e, t, s) {
			"use strict";
			t.a = e => {
				return `nsfwLinkedPosts--[post:'${e}']`
			}
		},
		"./src/lib/promo/withShowSignupUpsell.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return f
			}));
			var n = s("./node_modules/react/index.js");

			function r() {
				return window
			}
			var o = s("./node_modules/lodash/debounce.js"),
				a = s.n(o),
				i = s("./src/reddit/constants/elementIds.ts"),
				c = s("./src/reddit/constants/experiments.ts"),
				d = s("./src/reddit/hooks/usePromoContext.ts"),
				l = s("./src/reddit/constants/promo.ts"),
				m = s("./src/reddit/hooks/promo/useIsSignupUpsellVariantEligible.ts");
			var u = function() {
					const e = Object(m.a)(c.dd.Bottom_cell),
						t = Object(m.a)(c.dd.Bottom_cell_dismissible),
						s = Object(m.a)(c.dd.Bottom_cell_dismissible_immediate_trigger),
						n = Object(m.a)(c.dd.Bottom_cell_signup_upsell_copy),
						r = Object(m.a)(c.dd.Bottom_cell_surprise_install_copy),
						o = Object(m.a)(c.dd.Bottom_sheet);
					return e || n || r ? l.b.SignupUpsellCell : t || s ? l.b.SignupUpsellCellDismissible : o ? l.b.SignupUpsellBottomSheet : null
				},
				p = s("./src/reddit/hooks/promo/useIsPromoShown.ts");
			const C = 250,
				b = 1e3;

			function h() {
				return (h = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}

			function f(e) {
				const t = e.displayName || e.name || "Component";

				function s(t) {
					const s = function() {
						let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : C;
						const {
							showPromo: t
						} = Object(d.a)(), s = u(), o = Object(p.a)(s), l = Object(m.a)(c.dd.Bottom_cell_dismissible_immediate_trigger);
						return n.useMemo(() => a()(() => {
							if (!o && s) {
								const e = document.getElementById(i.e),
									n = e ? e.scrollTop : r().scrollY,
									o = r().innerHeight,
									a = o / 3,
									c = 2 * o;
								n >= (l ? a : c) && t(s)
							}
						}, e, {
							maxWait: b
						}), [l, o, s, t, e])
					}();
					return n.createElement(e, h({
						showSignupUpsell: s
					}, t))
				}
				return s.displayName = `withShowSignupUpsell(${t})`, s
			}
		},
		"./src/lib/pubsub/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			class n {
				constructor() {
					this.listenerMap = {}
				}
				_resetListenerMap() {
					this.listenerMap = {}
				}
				_resetKey(e) {
					this.listenerMap[e] = []
				}
				reset(e) {
					e ? this._resetKey(e) : this._resetListenerMap()
				}
				addListeners(e) {
					this.listenerMap[e] || (this.listenerMap[e] = []);
					for (var t = arguments.length, s = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) s[n - 1] = arguments[n];
					this.listenerMap[e].push(...s)
				}
				removeListeners(e) {
					for (var t = arguments.length, s = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) s[n - 1] = arguments[n];
					if (!this.listenerMap[e] || !this.listenerMap[e].length) return !1;
					const r = s.length,
						o = this.listenerMap[e].length;
					return this.listenerMap[e] = this.listenerMap[e].filter(e => !s.includes(e)), this.listenerMap[e].length - o === r
				}
				publish(e) {
					return !(!this.listenerMap[e] || !this.listenerMap[e].length) && (this.listenerMap[e].forEach(e => e()), !0)
				}
			}
		},
		"./src/reddit/actions/comment/moderation.ts": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return v
			})), s.d(t, "c", (function() {
				return y
			})), s.d(t, "f", (function() {
				return O
			})), s.d(t, "a", (function() {
				return E
			})), s.d(t, "e", (function() {
				return j
			})), s.d(t, "g", (function() {
				return _
			})), s.d(t, "h", (function() {
				return k
			})), s.d(t, "b", (function() {
				return L
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/constants/index.ts"),
				o = s("./src/lib/makeActionCreator/index.ts"),
				a = s("./src/lib/makeCommentsPageKey/index.ts"),
				i = s("./src/reddit/actions/modal.ts"),
				c = s("./src/reddit/actions/shortcuts/utils.ts"),
				d = s("./src/reddit/actions/toaster.ts"),
				l = s("./src/reddit/constants/modals.ts"),
				m = s("./src/reddit/endpoints/comment/index.tsx"),
				u = s("./src/reddit/endpoints/moderator/snoozableReport.ts"),
				p = s("./src/reddit/models/Reportable/index.ts"),
				C = s("./src/reddit/models/Toast/index.ts"),
				b = s("./src/reddit/selectors/commentSelector.ts"),
				h = s("./src/reddit/selectors/user.ts"),
				f = s("./src/reddit/actions/comment/index.ts"),
				g = s("./src/reddit/actions/comment/constants.ts");
			const x = Object(o.a)(g.p),
				v = e => async (t, s, n) => {
					let {
						apiContext: r
					} = n;
					s().features.comments.models[e] && (await Object(m.j)(r(), e)).ok && t((e => async t => {
						t(x({
							commentId: e
						}))
					})(e))
				}, y = e => async (t, s, r) => {
					let {
						apiContext: o
					} = r;
					if (!Object(h.S)(s())) return void t(Object(i.i)(l.a.LOGIN_MODAL_ID));
					const a = s().features.comments.models[e];
					if (!a) return;
					const c = a.isLocked ? m.l : m.f;
					t(Object(f.j)({
						[e]: {
							isLocked: !a.isLocked
						}
					})), (await c(o(), e)).ok ? t(Object(d.f)({
						kind: C.b.SuccessMod,
						text: a.isLocked ? n.fbt._("comment has been unlocked", null, {
							hk: "BYjts"
						}) : n.fbt._("comment has been locked", null, {
							hk: "1pBDQl"
						})
					})) : t(Object(f.j)({
						[e]: {
							isLocked: a.isLocked
						}
					}))
				}, O = Object(o.a)(g.J), E = e => async (t, s, n) => {
					let {
						apiContext: r,
						gqlContext: o
					} = n;
					const a = s(),
						i = a.features.comments.models[e],
						d = a.user.account ? a.user.account.displayText : null;
					i && d && (t(Object(f.j)({
						[e]: {
							isApproved: !0,
							approvedBy: d,
							approvedAtUTC: Date.now(),
							bannedBy: null,
							isRemoved: !1,
							isSpam: !1,
							modNote: null,
							modReasonBy: null,
							modRemovalReason: null,
							numReports: 0
						}
					})), (await Object(m.a)(o(), e)).ok || t(Object(f.j)({
						[e]: {
							isApproved: i.isApproved,
							approvedBy: null,
							bannedBy: i.bannedBy,
							isRemoved: i.isRemoved,
							isSpam: i.isSpam,
							modNote: i.modNote,
							modReasonBy: i.modReasonBy,
							modRemovalReason: i.modRemovalReason,
							numReports: i.numReports || null
						}
					})), Object(c.d)())
				}, j = (e, t) => async (s, n, r) => {
					let {
						apiContext: o,
						gqlContext: a
					} = r;
					const i = n(),
						d = i.features.comments.models[e],
						l = i.user.account ? i.user.account.displayText : null;
					d && l && (s(Object(f.j)({
						[e]: {
							approvedBy: null,
							bannedBy: l,
							bannedAtUTC: Date.now(),
							isApproved: !1,
							isRemoved: !t,
							isSpam: t,
							numReports: 0
						}
					})), (await Object(m.h)(a(), e, t)).ok || s(Object(f.j)({
						[e]: {
							approvedBy: d.approvedBy,
							bannedBy: d.bannedBy,
							isApproved: d.isApproved,
							isRemoved: d.isRemoved,
							isSpam: d.isSpam,
							numReports: d.numReports
						}
					})), Object(c.d)())
				}, _ = e => async (t, s, r) => {
					let {
						apiContext: o
					} = r;
					const a = s().features.comments.models[e];
					if (!a) return;
					const i = a.ignoreReports ? m.k : m.e;
					a.ignoreReports || t(E(e)), t(Object(f.j)({
						[e]: {
							ignoreReports: !a.ignoreReports
						}
					})), (await i(o(), e)).ok ? t(Object(d.f)({
						kind: C.b.SuccessMod,
						text: a.ignoreReports ? n.fbt._("comment has had its reports un-ignored", null, {
							hk: "HcpVV"
						}) : n.fbt._("comment has had its reports ignored", null, {
							hk: "2q4sCp"
						})
					})) : t(Object(f.j)({
						[e]: {
							ignoreReports: a.ignoreReports
						}
					}))
				}, k = (e, t, s) => async (o, a, i) => {
					let {
						gqlContext: c
					} = i;
					const l = Object(b.c)(a(), {
						commentId: e
					});
					if (!l) return;
					const m = s === r.jc.Snoozed,
						h = {
							itemId: e,
							reportText: t,
							isSnoozed: m
						};
					if ((await Object(u.a)(c(), {
							input: h
						})).ok) o(Object(f.j)({
						[e]: {
							userReports: Object(p.a)(l.userReports, t, m)
						}
					}));
					else {
						const e = Object(d.e)(n.fbt._("Sorry, that snooze failed. Try that again", null, {
							hk: "7ToJC"
						}), C.b.Error);
						o(Object(d.f)(e))
					}
				}, L = (e, t, s) => async (n, o, i) => {
					let {
						apiContext: c,
						gqlContext: d
					} = i;
					const l = o(),
						u = l.features.comments.models[e];
					if (!u) return;
					const p = u.postId,
						C = l.postStickiedComments.data[p];
					n(Object(f.j)({
						[e]: {
							distinguishType: t,
							isAdmin: t === r.H.ADMIN,
							isMod: t === r.H.MODERATOR,
							isStickied: !!s
						}
					})), s && C && C !== e && n(Object(f.j)({
						[C]: {
							isStickied: !1
						}
					}));
					const b = Object(m.c)(d(), e, t),
						h = Object(m.d)(d(), e, !!s),
						g = [b];
					(s || !s && e === C) && g.push(h), (await Promise.all(g)).every(e => e.ok) ? s && n(O({
						id: e,
						postId: p,
						commentsPageKey: Object(a.a)(p, null, {
							sort: r.v.CONFIDENCE,
							...l.platform.currentPage.queryParams
						})
					})) : (n(Object(f.j)({
						[e]: {
							distinguishType: u.distinguishType,
							isAdmin: u.isAdmin,
							isMod: u.isMod,
							isStickied: u.isStickied
						}
					})), n(Object(f.j)({
						[C]: {
							isStickied: l.features.comments.models[C].isStickied
						}
					})))
				}
		},
		"./src/reddit/actions/commentsListTruncated/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			}));
			var n = s("./src/lib/makeActionCreator/index.ts"),
				r = s("./src/reddit/actions/commentsListTruncated/constants.ts");
			const o = Object(n.a)(r.a),
				a = Object(n.a)(r.b)
		},
		"./src/reddit/actions/dismissedTruncationList/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./src/lib/makeActionCreator/index.ts"),
				r = s("./src/reddit/actions/dismissedTruncationList/constants.ts");
			const o = Object(n.a)(r.a)
		},
		"./src/reddit/actions/economics/powerups/flairs/index.ts": function(e, t, s) {
			"use strict";
			s.r(t), s.d(t, "onSubredditUserPowerupsFlairsLoaded", (function() {
				return y
			})), s.d(t, "onSubredditUserPowerupsFlairPreferenceUpdateRequested", (function() {
				return O
			})), s.d(t, "onSubredditUserPowerupsFlairPreferenceUpdateSuccess", (function() {
				return E
			})), s.d(t, "onSubredditUserPowerupsFlairPreferenceUpdateFailed", (function() {
				return j
			})), s.d(t, "onSubredditUserPowerupsFlairVisibilityUpdate", (function() {
				return _
			})), s.d(t, "getSubredditUserPowerupsFlairs", (function() {
				return k
			})), s.d(t, "getSubredditCurrentUserPowerupsFlairs", (function() {
				return L
			})), s.d(t, "shouldFetchCommentsPowerupsInfo", (function() {
				return w
			})), s.d(t, "getSubredditUserCommentsPowerupsInfoFromCommentLinks", (function() {
				return S
			})), s.d(t, "getSubredditUserCommentsPowerupsInfoFromCommentCollection", (function() {
				return I
			})), s.d(t, "setSubredditUserAchievementFlair", (function() {
				return P
			})), s.d(t, "setSubredditUserPowerupsFlairsVisibility", (function() {
				return T
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/isDefined.ts"),
				o = s("./src/lib/makeActionCreator/index.ts"),
				a = s("./src/lib/sentry/index.ts"),
				i = s("./src/lib/makeGqlRequest/index.ts"),
				c = s("./src/redditGQL/operations/SubredditUserAchievements.json"),
				d = s("./src/redditGQL/operations/UpdateAchievementFlairPreference.json");
			const l = async (e, t, s, n) => {
				const r = await Object(i.a)(e, {
					...d,
					variables: {
						subredditId: t,
						flairTypes: s,
						isHidden: n
					}
				});
				if (!r.ok || !r.body.data.updateAchievementFlairPreference.ok) throw new Error("Unable to update achievement flair preferences")
			};
			var m = s("./src/reddit/actions/gold/achievementFlairs.ts"),
				u = s("./src/reddit/actions/toaster.ts"),
				p = s("./src/reddit/models/Toast/index.ts"),
				C = s("./src/reddit/selectors/commentSelector.ts"),
				b = s("./src/reddit/selectors/gold/powerups/index.ts"),
				h = s("./src/reddit/selectors/gold/powerups/flairs.ts"),
				f = s("./src/reddit/selectors/user.ts"),
				g = s("./src/reddit/actions/economics/powerups/constants.ts"),
				x = s("./src/lib/initializeClient/installReducer.ts"),
				v = s("./src/reddit/reducers/features/powerups/index.ts");
			Object(x.a)({
				features: {
					powerups: v.a
				}
			});
			const y = Object(o.a)(g.d),
				O = Object(o.a)(g.f),
				E = Object(o.a)(g.g),
				j = Object(o.a)(g.e),
				_ = Object(o.a)(g.h),
				k = (e, t) => async (s, n, r) => {
					let {
						gqlContext: o
					} = r;
					const d = t.filter(e => !!(null == e ? void 0 : e.trim()));
					if (d.length) try {
						const {
							subredditInfoById: t
						} = await (async (e, t, s) => {
							const n = await Object(i.a)(e, {
								...c,
								variables: {
									subredditId: t,
									redditorIds: s
								}
							});
							if (!n.ok) throw new Error("Unable to fetch user achievements");
							return n.body.data
						})(o(), e, d);
						await s(y(t))
					} catch (l) {
						a.c.captureException(l)
					}
				}, L = (e, t) => async (s, n) => {
					if (!e) return;
					const r = n(),
						o = Object(f.m)(r);
					if (!o || !Object(b.e)(r, {
							subredditId: e
						})) return;
					const a = !!Object(h.e)(r, {
						subredditId: e,
						userId: o.id
					});
					!t && a || await s(k(e, [o.id]))
				}, w = e => async (t, s) => !!e && (await t(Object(m.c)(e)), !!Object(h.c)(s(), {
					subredditId: e
				})), S = e => async (t, s) => {
					var n;
					const r = s(),
						o = e.map(e => {
							let {
								id: t
							} = e;
							return t
						}),
						a = Object(C.e)(r, {
							commentIds: o
						}),
						i = null === (n = a.find(e => e && e.subredditId)) || void 0 === n ? void 0 : n.subredditId;
					if (!(await t(w(i)))) return;
					const c = new Set(a.filter(e => !!(null == e ? void 0 : e.authorId)).map(e => {
						let {
							authorId: t
						} = e;
						return t
					}));
					await t(k(i, Array.from(c)))
				}, I = (e, t) => async (s, n) => {
					if (!t) return;
					if (!(await s(w(e)))) return;
					const r = new Set;
					Object.values(t).forEach(e => {
						r.add(e.authorId)
					}), await s(k(e, Array.from(r)))
				}, P = (e, t) => async (s, n) => {
					const r = n(),
						o = Object(f.m)(r);
					if (!o) return;
					const a = o.id;
					s(N({
						subredditId: e,
						userId: a,
						achievementFlairType: t
					}))
				}, N = e => async (t, s, o) => {
					let {
						gqlContext: i
					} = o;
					const c = s(),
						d = Object(f.m)(c);
					if (!d) return;
					const m = d.id;
					t(O(e));
					const {
						subredditId: C,
						achievementFlairType: b
					} = e, g = [b].filter(r.a), x = Object(h.d)(c, {
						subredditId: C,
						userId: m
					});
					try {
						await l(i(), C, g, x), t(E(e))
					} catch (v) {
						t(j(e)), a.c.captureException(v), t(Object(u.f)({
							duration: u.a,
							kind: p.b.Error,
							text: n.fbt._("Failed to set preferred achievement flair", null, {
								hk: "4bEftA"
							})
						}))
					}
				}, T = (e, t) => async (s, o, i) => {
					let {
						gqlContext: c
					} = i;
					const d = o(),
						m = Object(f.m)(d);
					if (!m) return;
					const C = m.id,
						b = {
							subredditId: e,
							userId: C
						},
						g = [Object(h.g)(d, b)].filter(r.a);
					s(_({
						...b,
						isHidden: t
					}));
					try {
						await l(c(), e, g, t)
					} catch (x) {
						s(_({
							...b,
							isHidden: !t
						})), a.c.captureException(x), s(Object(u.f)({
							duration: u.a,
							kind: p.b.Error,
							text: n.fbt._("Failed to change flair visibility", null, {
								hk: "30gQss"
							})
						}))
					}
				}
		},
		"./src/reddit/actions/eligibleUxExperiences/constants.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			})), s.d(t, "b", (function() {
				return r
			}));
			const n = "ELIGIBLE_UX_EXPERIENCES__FETCH_UX_EXPERIENCES_SUCCESS",
				r = "ELIGIBLE_UX_EXPERIENCES__UPDATE_UX_EXPERIENCE_VALUE"
		},
		"./src/reddit/actions/eligibleUxExperiences/eligibleUxExperiences.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return m
			})), s.d(t, "a", (function() {
				return C
			})), s.d(t, "b", (function() {
				return b
			})), s.d(t, "d", (function() {
				return h
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./src/lib/initializeClient/installReducer.ts"),
				r = s("./src/lib/makeActionCreator/index.ts"),
				o = s("./src/lib/sentry/index.ts"),
				a = s("./src/reddit/endpoints/eligibleUXExperiences/eligibleUxExperiences.ts"),
				i = s("./src/reddit/reducers/features/eligibleUXExperiences/index.ts"),
				c = s("./src/reddit/selectors/eligibleUXExperiences.ts"),
				d = s("./src/redditGQL/types.ts"),
				l = s("./src/reddit/actions/eligibleUxExperiences/constants.ts");
			Object(n.a)({
				features: {
					eligibleUXExperiences: i.a
				}
			});
			const m = Object(r.a)(l.b),
				u = Object(r.a)(l.a),
				p = e => {
					let {
						experiences: t,
						clientContext: s
					} = e;
					return async (e, n, r) => {
						let {
							gqlContext: i
						} = r;
						var l, m;
						const p = n(),
							C = Object.keys(t).filter(e => {
								const s = Object(c.a)(p, {
									experience: e
								});
								return (e !== d.db.LanguagePreferenceBottomSheet || null == s || !s.value) && !(t[e].allowCached && (null == s ? void 0 : s.fetched))
							});
						if (!C.length) return;
						const b = await Object(a.a)(i(), C, s);
						if (b.ok) {
							const t = b.body,
								s = (null === (m = null === (l = null == t ? void 0 : t.data) || void 0 === l ? void 0 : l.eligibleUxExperiences) || void 0 === m ? void 0 : m.map(e => null == e ? void 0 : e.experience)) || [],
								n = null == s ? void 0 : s.reduce((e, t) => ({
									...e,
									[t]: !0
								}), {}),
								r = C.reduce((e, t) => n[t] ? e : {
									...e,
									[t]: !1
								}, {});
							e(u({
								experiences: {
									...n,
									...r
								}
							}))
						} else o.c.captureException(b.error)
					}
				},
				C = () => p({
					experiences: {
						[d.db.LiveChatVideoEdu]: {
							allowCached: !0
						},
						[d.db.LiveChatReactionEdu]: {
							allowCached: !0
						}
					}
				}),
				b = e => p({
					experiences: {
						[d.db.LanguagePreferenceBottomSheet]: {
							allowCached: !1
						}
					},
					clientContext: {
						postId: e
					}
				}),
				h = e => async (t, s, n) => {
					let {
						gqlContext: r
					} = n;
					Object(a.b)(r(), {
						action: d.a.View,
						eligibleExperience: {
							experience: e
						}
					})
				}
		},
		"./src/reddit/actions/focusedVerticals/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return k
			})), s.d(t, "b", (function() {
				return P
			}));
			var n, r = s("./src/lib/makeActionCreator/index.ts"),
				o = s("./src/lib/performanceTimings/index.tsx"),
				a = s("./src/reddit/actions/focusedVerticals/constants.ts"),
				i = s("./src/lib/makeGqlRequest/index.ts"),
				c = s("./src/redditGQL/operations/SubredditGeoRecommendationViaFocusVertical.json");
			! function(e) {
				e.LoggedInGeo = "2.1", e.LoggedOutGeo = "2.1"
			}(n || (n = {}));
			var d, l = s("./src/reddit/helpers/graphql/normalizeSubredditAboutFromGql/index.ts"),
				m = s("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts");
			! function(e) {
				e.DEFAULT = "DEFAULT", e.GEO = "GEO"
			}(d || (d = {}));
			var u = s("./src/lib/objectSelector/index.ts"),
				p = s("./src/reddit/featureFlags/index.ts"),
				C = s("./src/reddit/selectors/posts.ts"),
				b = s("./src/reddit/selectors/subreddit.ts"),
				h = s("./src/reddit/selectors/user.ts");
			const f = [],
				g = (Object(u.a)((e, t) => {
					const s = g(e, t);
					if (!s) return f;
					const n = Object(b.bb)(e, {
						subredditName: s.name
					});
					return n && n.postIds && n.postIds.length ? n.postIds : f
				}), (e, t) => {
					const s = e.focusedVerticals.recommendedSubredditIds && e.focusedVerticals.recommendedSubredditIds[t];
					return s ? Object(b.X)(e, {
						subredditId: s
					}) : null
				}),
				x = (e, t, s, n, r) => {
					const o = r.find(e => e <= t) || -1,
						a = r.find(e => e > t) || 1 / 0;
					return t !== a && t !== o && (!(o + s > t) && (!(t + s > a) && !((e, t, s) => {
						const n = s[t - 1],
							r = s[t],
							o = r && Object(C.F)(e, {
								postId: n
							}) || null,
							a = r && Object(C.F)(e, {
								postId: r
							}) || null;
						return o && o.isSponsored || a && a.isSponsored
					})(e, t, n)))
				},
				v = [3];
			Object(u.a)((e, t) => {
				let {
					existingDUPositions: s,
					listingProps: n
				} = t;
				const r = s.slice().sort();
				let o = -1;
				const a = Object(C.y)(e, {
						listingKey: n.listingKey
					}),
					i = [];
				return v.forEach(t => {
					let s = o + t;
					if (!(s >= a.length)) {
						for (; s < a.length && !x(e, s, t, a, r);) s += 1;
						s < a.length && (i.push(s), o = s)
					}
				}), i
			});
			var y = s("./src/reddit/selectors/platform.ts");
			const O = Object(r.a)(a.f),
				E = Object(r.a)(a.d),
				j = Object(r.a)(a.g),
				_ = Object(r.a)(a.c),
				k = Object(r.a)(a.e),
				L = (Object(r.a)(a.i), Object(r.a)(a.h), () => async (e, t, s) => {
					let {
						gqlContext: r
					} = s;
					const o = t(),
						a = (e => {
							return e.focusedVerticals.api.pending.focusedVerticalGqlPending
						})(o),
						d = (e => {
							const t = Object(h.R)(e),
								s = p.d.geoSubredditRecommendationDULoggedIn(e),
								n = p.d.geoSubredditRecommendationDULoggedOut(e);
							return t && s || !t && n
						})(o),
						u = Object(h.R)(o);
					if (a || !d) return;
					e(j());
					let C = !1;
					try {
						const t = u ? n.LoggedInGeo : n.LoggedOutGeo,
							s = await ((e, t, s) => Object(i.a)(e, {
								...c,
								variables: {
									version: t,
									isNsfwIncluded: !1
								}
							}))(r(), t);
						if (s.ok && s.body) {
							const {
								data: t
							} = s.body;
							if (w(t)) {
								if (S(t)) {
									e(_({
										recommendedSubredditIds: [],
										interactedSubredditIds: [],
										category: "",
										lastLoadedEnv: "client"
									})), C = !0
								} else if (I(t)) {
									const s = t.focusVerticalSubredditRecommendations,
										{
											recommendedSubreddit: n,
											interactedSubreddit: r,
											category: o
										} = s.focusRecommendations[0],
										a = [n, r],
										i = Object(m.d)(a),
										c = Object(l.b)(a),
										d = Object(m.c)(n),
										u = {
											recommendedSubredditIds: [n.id],
											interactedSubredditIds: [r.id],
											subreddits: i,
											subredditsAboutInfo: c,
											subredditTopContent: d,
											category: o,
											lastLoadedEnv: "client"
										};
									e(O(u)), C = !0
								}
							} else C = !1
						}
					} catch (b) {
						C = !1
					}
					C || e(E({
						error: {
							type: "Focused vertical experiment GQL API failed or caught by try and catch"
						}
					}))
				}),
				w = e => {
					const t = e.focusVerticalSubredditRecommendations;
					return !(!t || !t.focusRecommendations)
				},
				S = e => {
					const t = e.focusVerticalSubredditRecommendations,
						s = t && t.focusRecommendations;
					return !(!s || 0 !== s.length)
				},
				I = e => {
					const t = e.focusVerticalSubredditRecommendations,
						s = t && t.focusRecommendations,
						n = t && t.type;
					return !!(s && !S(e) && n === d.GEO && s[0] && s[0].recommendedSubreddit && s[0].interactedSubreddit)
				},
				P = () => async (e, t, s) => {
					var n, r;
					const a = t(),
						i = (e => e.focusedVerticals.lastLoadedEnv)(a);
					if ((e => {
							return e.focusedVerticals.api.error.focusedVerticalGqlError
						})(a) || null === i || "client" === i) {
						const s = null === (r = null === (n = Object(y.b)(t())) || void 0 === n ? void 0 : n.routeMatch) || void 0 === r ? void 0 : r.route.chunk,
							i = Object(h.S)(a);
						return Object(o.i)(() => e(L()), {
							name: "getFocusedVerticalsRequested",
							page: s,
							isLoggedIn: i
						})
					}
					if ("server" === i) return e(k({
						lastLoadedEnv: "client"
					}))
				}
		},
		"./src/reddit/actions/inContextModeration.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			})), s.d(t, "b", (function() {
				return o
			})), s.d(t, "c", (function() {
				return a
			})), s.d(t, "d", (function() {
				return i
			}));
			var n = s("./src/lib/makeActionCreator/index.ts");
			const r = "INCONTEXT__BANNED",
				o = "INCONTEXT__MUTED",
				a = Object(n.a)(r),
				i = Object(n.a)(o)
		},
		"./src/reddit/actions/linkedPosts/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			})), s.d(t, "a", (function() {
				return i
			}));
			var n = s("./src/lib/makeActionCreator/index.ts"),
				r = s("./src/reddit/actions/linkedPosts/constants.ts");
			const o = Object(n.a)(r.c),
				a = Object(n.a)(r.b),
				i = Object(n.a)(r.a)
		},
		"./src/reddit/actions/moderationLog/constants.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return n
			})), s.d(t, "a", (function() {
				return r
			})), s.d(t, "b", (function() {
				return o
			}));
			const n = "SUBREDDIT__MODERATION_LOG_LOADED",
				r = "SUBREDDIT__ALL_MODERATORS_LOADED",
				o = "SUBREDDIT__MODERATION_CATEGORY_ACTIONS_LOADED"
		},
		"./src/reddit/actions/otherDiscussions/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return d
			})), s.d(t, "c", (function() {
				return l
			})), s.d(t, "d", (function() {
				return m
			})), s.d(t, "a", (function() {
				return u
			}));
			var n = s("./src/lib/makeActionCreator/index.ts"),
				r = s("./src/lib/makeListingKey/index.ts"),
				o = s("./src/reddit/actions/otherDiscussions/constants.ts"),
				a = s("./src/lib/makeGqlRequest/index.ts"),
				i = s("./src/redditGQL/operations/OtherDiscussions.json"),
				c = s("./src/reddit/helpers/handleOtherDiscussionsResponse/index.ts");
			const d = Object(n.a)(o.a),
				l = Object(n.a)(o.b),
				m = Object(n.a)(o.c),
				u = (e, t) => async (s, n, o) => {
					let {
						gqlContext: u
					} = o;
					const p = n(),
						C = Object(r.a)(e, null, {
							isOtherDiscussions: !0
						}),
						b = p.listings.postOrder.ids[C],
						h = !!p.listings.postOrder.api.error[C];
					if (b && !h) return;
					s(m({
						key: C
					}));
					const f = await ((e, t) => Object(a.a)(e, {
						...i,
						variables: t
					}))(u(), t);
					Object(c.a)({
						getState: n,
						onFailure: e => s(d(e)),
						onSuccess: e => s(l(e)),
						postId: e,
						response: f
					})
				}
		},
		"./src/reddit/actions/pages/comments.ts": function(e, t, s) {
			"use strict";
			s.r(t), s.d(t, "NUM_COMMENTS_TRUNCATE", (function() {
				return vt
			})), s.d(t, "MIN_NUM_COMMENTS_TO_TRUNCATE", (function() {
				return yt
			})), s.d(t, "commentsPagePending", (function() {
				return Ot
			})), s.d(t, "commentsPageLoaded", (function() {
				return Et
			})), s.d(t, "commentsPageFailed", (function() {
				return jt
			})), s.d(t, "commentsPageRemoveLoadedFull", (function() {
				return _t
			})), s.d(t, "getGuestExperimentIncludes", (function() {
				return Lt
			})), s.d(t, "shouldFetchPostFeedAndOtherDiscussions", (function() {
				return wt
			})), s.d(t, "guestExperimentIncludesToOptions", (function() {
				return St
			})), s.d(t, "commentsPageRequested", (function() {
				return It
			})), s.d(t, "commentsPageDataRequested", (function() {
				return Nt
			})), s.d(t, "commentsPageLoadedFull", (function() {
				return Tt
			})), s.d(t, "fullCommentsPageDataRequested", (function() {
				return Mt
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/lodash/pick.js"),
				r = s.n(n),
				o = s("./node_modules/react-router-redux/es/index.js"),
				a = s("./src/lib/makeSearchKey/index.ts"),
				i = s("./src/lib/initializeClient/installReducer.ts"),
				c = s("./src/reddit/reducers/features/categories/index.ts"),
				d = (s("./node_modules/lodash/isEmpty.js"), s("./src/lib/makeActionCreator/index.ts")),
				l = (s("./src/reddit/constants/categories.tsx"), s("./src/lib/constants/index.ts")),
				m = (s("./src/lib/makeApiRequest/index.ts"), s("./src/lib/omitHeaders/index.ts"), s("./src/reddit/constants/headers.ts"), s("./src/reddit/constants/experiments.ts"));
			s("./src/reddit/helpers/r2/normalizeSubredditFromR2/index.ts"), s("./src/reddit/models/RichTextJson/addRTJParam.ts");
			var u = s("./src/reddit/helpers/localStorage/index.ts"),
				p = s("./src/reddit/selectors/category.ts"),
				C = s("./src/reddit/actions/category/constants.ts");
			Object(i.a)({
				features: {
					categories: c.a
				}
			});
			Object(d.a)(C.c), Object(d.a)(C.b), Object(d.a)(C.a), Object(d.a)(C.g), Object(d.a)(C.f), Object(d.a)(C.e);
			const b = Object(d.a)(C.d);
			var h = s("./src/reddit/actions/discoveryUnit.ts"),
				f = s("./src/reddit/actions/pages/subreddit/index.ts"),
				g = s("./src/reddit/actions/shortcuts/active.ts"),
				x = s("./src/reddit/actions/subredditModeration/modUserNotes.ts"),
				v = s("./src/reddit/actions/subredditSettings.ts"),
				y = s("./src/reddit/components/SearchResultsContent/helpers/isCommentSearchRoute.ts"),
				O = s("./src/reddit/endpoints/devPlatform/index.ts"),
				E = s("./src/reddit/endpoints/governance/posts.ts"),
				j = s("./src/reddit/endpoints/page/commentsPage.ts"),
				_ = s("./src/lib/makeGqlRequest/index.ts"),
				k = s("./src/redditGQL/operations/CommentsPageExtra.json");
			async function L(e, t) {
				return Object(_.a)(e, {
					...k,
					variables: t
				})
			}
			var w = s("./src/reddit/endpoints/page/subredditPage.ts"),
				S = s("./src/reddit/endpoints/profile/info.ts"),
				I = s("./src/reddit/models/Post/index.ts"),
				P = s("./src/lib/pageTitle/index.ts"),
				N = s("./src/reddit/actions/economics/helpers/async.ts"),
				T = s("./src/reddit/actions/externalAccount.ts"),
				M = s("./src/reddit/actions/modQueueTriggers/index.ts"),
				R = s("./src/reddit/actions/otherDiscussions/constants.ts"),
				F = s("./src/reddit/actions/platform.ts"),
				B = s("./src/reddit/actions/post.ts"),
				A = s("./src/reddit/actions/profile/index.ts"),
				D = s("./src/reddit/actions/subreddit.ts"),
				U = s("./src/reddit/actions/subreddit/notifications.ts"),
				W = s("./src/reddit/actions/subreddit/questions.ts"),
				H = s("./src/reddit/actions/toaster.ts"),
				V = s("./src/reddit/constants/adEvents.ts"),
				Z = s("./src/reddit/constants/graphql.ts"),
				q = s("./src/reddit/constants/parameters.ts"),
				z = s("./src/reddit/constants/posts.ts"),
				K = s("./src/reddit/helpers/ads/index.ts"),
				G = s("./src/reddit/helpers/commentList/index.ts"),
				Y = s("./src/reddit/helpers/getCommentsPageSort/index.ts"),
				J = s("./src/reddit/models/Comment/index.ts"),
				Q = s("./src/reddit/models/Subreddit/index.ts"),
				X = s("./src/reddit/models/User/index.ts"),
				$ = s("./src/reddit/selectors/adsSignals.ts"),
				ee = s("./src/reddit/selectors/experiments/avatarsInComments.ts"),
				te = s("./src/reddit/selectors/experiments/postSeo.ts"),
				se = s("./node_modules/reselect/es/index.js"),
				ne = s("./src/reddit/helpers/chooseVariant/index.ts"),
				re = s("./src/reddit/helpers/getPostFromRouteMatch/index.ts"),
				oe = s("./src/reddit/selectors/isModeratorOfSubreddit.ts"),
				ae = s("./src/reddit/selectors/platform.ts"),
				ie = s("./src/reddit/selectors/removedPosts.ts");
			const ce = Object(se.a)(ae.f, re.a, ie.a, ie.c, oe.a, ie.e, oe.b, (e, t, s, n, r, o, a) => {
				if (!e || !t || r) return !1;
				if (n) return !0;
				const i = o || a,
					c = t.score >= 2 || t.numComments >= 2;
				return !(!s || i || c)
			});
			var de = s("./src/reddit/selectors/inlineSubredditEditing.ts"),
				le = s("./src/reddit/selectors/moderatorPermissions.ts"),
				me = s("./src/reddit/selectors/posts.ts"),
				ue = s("./src/reddit/selectors/subreddit.ts"),
				pe = s("./src/reddit/selectors/user.ts"),
				Ce = s("./src/lib/makeCommentsPageKey/index.ts"),
				be = s("./src/reddit/actions/ads/index.ts"),
				he = s("./src/reddit/helpers/canonicalUrls.ts"),
				fe = s("./src/reddit/helpers/correlationIdTracker.ts"),
				ge = s("./src/reddit/helpers/timeApiRoute/index.ts"),
				xe = s("./src/reddit/reducers/sidebarPromotedPosts/models/index.ts"),
				ve = s("./src/lib/performanceTimings/index.tsx"),
				ye = s("./src/reddit/actions/gold/achievementFlairs.ts"),
				Oe = s("./src/reddit/actions/gold/customEmojis.ts"),
				Ee = s("./src/lib/makeListingKey/index.ts"),
				je = s("./src/reddit/actions/googleQASchema/constants.ts");
			const _e = Object(d.a)(je.b),
				ke = Object(d.a)(je.a);
			var Le = s("./src/reddit/actions/linkedPosts/index.ts"),
				we = s("./src/reddit/actions/otherDiscussions/index.ts"),
				Se = s("./src/reddit/actions/subreddit/constants.ts"),
				Ie = s("./src/redditGQL/operations/PostFeedAndOtherDiscussions.json");
			s("./src/redditGQL/operations/SubredditPosts.json"), s("./src/redditGQL/operations/SubredditsPosts.json");
			var Pe = e => {
					let {
						getState: t,
						onSuccess: s,
						onFailure: n,
						postId: r,
						post: o
					} = e;
					try {
						s({
							altText: o && o.media && (o.media.still && o.media.still.altText || o.media.obfuscated && o.media.obfuscated.altText) || null,
							postId: r
						})
					} catch (a) {
						n(a)
					}
				},
				Ne = s("./src/lib/makeLinkedPostsListingKey/index.ts"),
				Te = s("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts"),
				Me = s("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts");
			var Re = e => {
					let {
						getState: t,
						onSuccess: s,
						onFailure: n,
						postId: r,
						post: o
					} = e;
					try {
						const e = [],
							n = {},
							a = {};
						if (!o || !o.linked) return;
						const i = t(),
							c = i.posts && i.posts.models,
							d = Object(Ne.a)(r),
							l = o.linked.posts && o.linked.posts.edges || [];
						for (const {
								node: t
							} of l) {
							if (!t || !t.id) break;
							if (e.push(t.id), !c.hasOwnProperty(t.id)) {
								const e = Object(Te.a)(t);
								n[t.id] = e.post, e.crosspost && !c.hasOwnProperty(e.crosspost.id) && (n[e.crosspost.id] = e.crosspost)
							}
							if (Object(I.n)(t)) {
								const {
									subreddit: e
								} = t;
								a[e.id] = Object(Me.a)(e)
							}
						}
						s({
							dist: o.linked.posts && o.linked.posts.dist || null,
							key: d,
							meta: i.meta,
							posts: n,
							postIds: e,
							subreddits: a
						})
					} catch (a) {
						n(a)
					}
				},
				Fe = s("./src/reddit/helpers/handleOtherDiscussionsResponse/index.ts"),
				Be = s("./src/reddit/helpers/graphql/normalizePostsFromGql/index.ts");
			var Ae = e => e.reduce((e, t) => (e[t.id] = t, e), {});
			var De = e => {
					let {
						getState: t,
						onSuccess: s,
						onFailure: n,
						options: r,
						postId: o,
						subreddit: a
					} = e;
					try {
						if (!a) return;
						const e = a.elements || a.posts,
							n = t(),
							i = ((e, t) => {
								const {
									edges: s
								} = e, n = s.filter(e => (e => !e.node.crosspostRoot)(e) && ((e, t) => !t.hasOwnProperty(e.node.id))(e, t));
								return {
									...e,
									edges: n
								}
							})(e, n.posts && n.posts.models),
							c = Object(Be.a)(i),
							d = Ae(c),
							m = e.edges.reduce((e, t) => (t.node.id && t.node.id !== o && e.push(t.node.id), e), []),
							{
								range: u,
								sort: p,
								subredditName: C
							} = r,
							b = Object(Ee.a)(C, l.ab[p], {
								t: u
							});
						s({
							dist: e.dist,
							key: b,
							meta: n.meta,
							postIds: m,
							posts: d
						})
					} catch (i) {
						n(i)
					}
				},
				Ue = s("./src/reddit/models/Media/index.ts"),
				We = s("./src/reddit/selectors/experiments/listingBelow.ts"),
				He = s("./src/lib/makeNsfwLinkedPostsListingKey/index.ts");
			var Ve = e => {
					let {
						getState: t,
						onSuccess: s,
						onFailure: n,
						postId: r,
						post: o
					} = e;
					try {
						const e = [],
							n = {},
							a = {};
						if (!o || !o.nsfwLinked) return;
						const i = t(),
							c = i.posts && i.posts.models,
							d = Object(He.a)(r),
							l = o.nsfwLinked.posts && o.nsfwLinked.posts.edges || [];
						for (const {
								node: t
							} of l) {
							if (!t || !t.id) break;
							if (e.push(t.id), !c.hasOwnProperty(t.id)) {
								const e = Object(Te.a)(t);
								n[t.id] = e.post, e.crosspost && !c.hasOwnProperty(e.crosspost.id) && (n[e.crosspost.id] = e.crosspost)
							}
							if (Object(I.n)(t)) {
								const {
									subreddit: e
								} = t;
								a[e.id] = Object(Me.a)(e)
							}
						}
						s({
							dist: o.nsfwLinked.posts && o.nsfwLinked.posts.dist || null,
							key: d,
							meta: i.meta,
							posts: n,
							postIds: e,
							subreddits: a
						})
					} catch (a) {
						n(a)
					}
				},
				Ze = s("./src/reddit/actions/imageOCRAltText/constants.ts");
			const qe = Object(d.a)(Ze.b),
				ze = Object(d.a)(Ze.a);
			var Ke = s("./src/reddit/actions/nsfwLinkedPosts/constants.ts");
			const Ge = Object(d.a)(Ke.b),
				Ye = Object(d.a)(Ke.a),
				Je = Object(d.a)(Se.o),
				Qe = Object(d.a)(Se.n),
				Xe = (Object(d.a)(Se.w), Object(d.a)(Se.v), e => async (t, s, n) => {
					let {
						gqlContext: r
					} = n;
					var o;
					const {
						includeNSFWListingBelowExperiment: a,
						includeListingBelowExperiment: i,
						includeOtherDiscussions: c,
						includePostFeed: d,
						includePostQASchemaEligibilityFlag: m,
						listingBelowExperimentVariant: u,
						postId: p,
						range: C,
						sort: b,
						subredditName: h
					} = e, f = Object(Ee.a)(p, null, {
						isOtherDiscussions: !0
					}), g = s(), x = Object(me.y)(g, {
						listingKey: f
					}), v = c && (!x || 0 === x.length), y = Object(Ee.a)(h, l.ab[b], {
						t: C
					}), O = Object(me.y)(g, {
						listingKey: y
					}), E = d && (i || !O || 0 === O.length), j = i, k = a, L = Object(me.F)(g, {
						postId: p
					}), w = !!L && !!L.media && (Object(Ue.M)(L.media) || Object(Ue.I)(L.media)) && !L.media.altText;
					if (!(v || E || j || k || w || m)) return;
					v && t(Object(we.d)({
						key: f
					}));
					const S = await ((e, t) => Object(_.a)(e, {
							...Ie,
							variables: t
						}))(r(), e),
						I = S.body,
						P = Object(We.a)(u);
					m && (S.ok ? I.data && I.data.post && t(_e({
						postId: p,
						isEligibleForQASchema: null !== (o = I.data.post.isEligibleForQASchema) && void 0 !== o && o
					})) : t(ke())), v && Object(Fe.a)({
						getState: s,
						onFailure: e => t(Object(we.b)(e)),
						onSuccess: e => t(Object(we.c)(e)),
						postId: p,
						response: S
					}), E && !j && (S.ok ? I.data && De({
						getState: s,
						onFailure: e => t(Qe(e)),
						onSuccess: e => t(Je(e)),
						options: e,
						postId: p,
						subreddit: I.data.subreddit
					}) : t(Qe(S.error))), j && !P && S.ok && I.data && Re({
						getState: s,
						onFailure: e => t(Object(Le.a)(e)),
						onSuccess: e => t(Object(Le.b)(e)),
						postId: p,
						post: I.data.post
					}), k && S.ok && Ve({
						getState: s,
						onFailure: e => t(Ye(e)),
						onSuccess: e => t(Ge(e)),
						postId: p,
						post: I.data.post
					}), w && S.ok && I.data && Pe({
						getState: s,
						onFailure: e => t(ze(e)),
						onSuccess: e => t(qe(e)),
						postId: p,
						post: I.data.post
					})
				}),
				$e = e => {
					var t, s;
					const n = null === (s = null === (t = e.platform.currentPage) || void 0 === t ? void 0 : t.urlParams) || void 0 === s ? void 0 : s.partialPostId,
						r = n && Object(I.y)(n),
						{
							sortToUse: o
						} = Object(Y.a)(e, r);
					return (!o || o === l.v.CONFIDENCE) && Object(ne.c)(e, {
						experimentEligibilitySelector: () => Object(pe.R)(e),
						experimentName: m.p
					}) === m.v.Enabled
				};
			var et = s("./src/reddit/selectors/chatPost.ts"),
				tt = s("./src/reddit/selectors/seo/index.ts"),
				st = s("./src/reddit/actions/pages/constants.ts"),
				nt = s("./src/lib/sentry/index.ts"),
				rt = s("./src/reddit/helpers/addSupplementaryTextInfoToAdPosts.ts"),
				ot = s("./src/reddit/helpers/isRobotIndexableMeta.ts"),
				at = s("./src/reddit/helpers/locales.ts"),
				it = s("./src/reddit/reducers/features/modUserNotes/index.ts"),
				ct = s("./src/reddit/reducers/pages/comments/index.ts"),
				dt = s("./src/reddit/selectors/experiments/chat.ts"),
				lt = s("./src/reddit/selectors/experiments/commentSearchPdp.ts"),
				mt = s("./src/reddit/selectors/experiments/communityDirectoryBacklinks/index.ts"),
				ut = s("./src/reddit/selectors/experiments/countrySites.ts"),
				pt = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				Ct = s("./src/reddit/selectors/experiments/devPlatform.ts"),
				bt = s("./src/reddit/selectors/experiments/newCommunityProgressV3.ts"),
				ht = s("./src/reddit/selectors/experiments/nsfwListingBelow.ts"),
				ft = s("./src/reddit/selectors/i18n/index.ts"),
				gt = s("./src/reddit/selectors/meta.ts"),
				xt = s("./src/reddit/actions/pages/search/index.ts");
			Object(i.a)({
				pages: {
					comments: ct.a
				}
			}), Object(i.a)({
				features: {
					modUserNotes: it.a
				}
			});
			const vt = 25,
				yt = 100,
				Ot = Object(d.a)(st.h),
				Et = Object(d.a)(st.f),
				jt = Object(d.a)(st.e),
				_t = Object(d.a)(st.i);

			function kt(e) {
				return e && e.ok
			}
			const Lt = (e, t, s) => {
					const n = !e,
						r = Object(me.F)(t, {
							postId: s
						}).belongsTo,
						o = Object(ue.Q)(t, {
							identifier: r
						}),
						a = Object(tt.c)(t, {
							identifier: r
						}),
						i = !!Object(We.c)(t),
						c = Object(ft.a)(t),
						d = Object(pt.b)(t),
						l = {
							listingBelow: !1,
							nsfwListingBelow: !1,
							postFeed: !1,
							postQASchema: !1
						};
					return i ? (l.listingBelow = a || n, l.postFeed = l.listingBelow) : c ? l.nsfwListingBelow = !0 : l.postFeed = (a || n) && (!Object(Q.i)(o) && !Object(et.d)(t, {
						postId: s
					}) && !!o || !Object(ae.i)(t) && Object(te.e)(t)), e && (l.postQASchema = Object(te.d)(t)), d && (l.listingBelow = !0), l
				},
				wt = (e, t) => e || t.postFeed || t.listingBelow || t.nsfwListingBelow || t.postQASchema,
				St = e => ({
					includePostFeed: e.postFeed,
					includeNSFWListingBelowExperiment: e.nsfwListingBelow,
					includeListingBelowExperiment: e.listingBelow,
					includePostQASchemaEligibilityFlag: e.postQASchema
				}),
				It = e => async (t, s) => {
					var n, i;
					const {
						partialPostId: c,
						partialCommentId: d
					} = e.params, {
						subredditName: C
					} = e.params || "", h = c ? Object(I.y)(c) : "", f = d && Object(J.h)(d), {
						path: v,
						queryParams: O
					} = e, E = Object(R.d)(v), j = Object(K.a)(O, s()), {
						hasSortParam: _,
						sortToUse: k
					} = Object(Y.a)(s(), h), L = null === (i = null === (n = Object(ae.b)(s())) || void 0 === n ? void 0 : n.routeMatch) || void 0 === i ? void 0 : i.route.chunk, w = ["context", "depth", "limit", q.h].reduce((e, t) => {
						const s = parseInt(O[t]);
						return isNaN(s) || (e[t] = s), e
					}, {
						subredditName: C,
						hasSortParam: _,
						instanceId: j,
						include_categories: !0
					});
					_ && (w.sort = k), w.onOtherDiscussions = E, w.comment_awardings_by_current_user = !0, t(B.q(h));
					const S = s(),
						N = Object(me.F)(S, {
							postId: h
						}),
						M = Object(lt.a)(S).bucketed && Object(y.a)(e) && Object(y.b)(N);
					if (M) {
						const s = Object(a.e)(r()(e.queryParams, q.d)),
							n = Object(pe.mb)(S),
							o = Object(pe.rb)(S),
							i = Object(a.b)(h, void 0, s, n && o);
						await t(Object(xt.d)({
							key: i,
							options: s,
							subredditName: C,
							postId: h
						}))
					} else await t(Nt(h, f, w, k));
					const U = Object(pe.S)(s());
					if (N && "subreddit" === N.belongsTo.type) {
						const e = N.belongsTo.id;
						if (await Promise.all([Object(ve.i)(() => t(Object(ye.c)(e)), {
								name: "subredditAchievementFlairsRequested",
								page: L,
								isLoggedIn: U
							}), Object(ve.i)(() => t(Object(Oe.c)(e)), {
								name: "subredditCustomEmojisRequested",
								page: L,
								isLoggedIn: U
							})]), !Object(ae.i)(S)) {
							Object(bt.a)(S) && t(Object(W.b)(e))
						}
						Object(le.i)(S, e) && await t(Object(x.c)(h))
					}
					if (N) {
						const n = ((e, t) => {
								const s = Object(me.U)(e, {
										postId: t
									}),
									n = Object(me.F)(e, {
										postId: t
									});
								return s && n ? `${e.posts.models[t].title} : ${s.name}` : ""
							})(s(), h),
							r = Object(ue.Q)(s(), {
								identifier: N.belongsTo
							});
						if (r && (e => m.zf.Redirect === Object(ne.b)(e, {
								experimentEligibilitySelector: ce,
								experimentName: m.tf
							}))(s())) return void t(Object(o.c)(r.url));
						if (N.belongsTo.type !== z.a.SUBREDDIT || N.isSponsored) {
							if (N.belongsTo.type === z.a.PROFILE) {
								const e = Object(ve.i)(() => t(A.d(r.name)), {
									name: "getProfileInfo",
									page: L,
									isLoggedIn: U
								});
								await e
							}
						} else {
							if (!!!Object(ue.W)(s(), {
									subredditId: N.belongsTo.id
								})) {
								const e = Object(ve.i)(() => t(D.o(r.name)), {
									name: "getSubredditRules",
									page: L,
									isLoggedIn: U
								});
								await e
							}
						}
						const a = Lt(!1, s(), h),
							i = E;
						if (wt(i, a)) {
							Object(fe.d)(fe.a.LinkedPosts);
							const e = Object(fe.c)(fe.a.LinkedPosts);
							Object(fe.d)(fe.a.NsfwLinkedPosts);
							const n = Object(fe.c)(fe.a.NsfwLinkedPosts),
								{
									adsSeenCount: o,
									totalPostsSeenCount: c,
									sessionStartTime: d
								} = Object($.a)(s()),
								m = {
									adContext: {
										layout: Z.a.Card,
										sourcePostId: h,
										clientSignalSessionData: {
											adsSeenCount: o,
											totalPostsSeenCount: c,
											sessionStartTime: d
										}
									},
									range: l.nc.WEEK.toUpperCase(),
									sort: l.R.TOP,
									subredditName: r.name
								},
								u = {
									postId: h
								},
								p = {
									listingBelowCorrelationId: e,
									listingBelowExperimentVariant: Object(We.c)(s())
								};
							Object(pt.b)(s()) && (p.listingBelowVersion = "LINKED_POSTS_VERSION_SIDE_RAIL");
							const C = {
									nsfwListingBelowCorrelationId: n,
									nsfwListingBelowExperimentVariant: Object(ht.a)(s())
								},
								b = St(a);
							Object(ve.i)(() => t(Xe({
								...u,
								...m,
								...p,
								...C,
								...b,
								includeOtherDiscussions: i
							})), {
								name: "fetchPostFeedAndOtherDiscussions",
								isLoggedIn: U,
								page: L
							});
							0
						}
						t(Object(T.p)()), t(F.n({
							title: n
						}));
						const c = s().posts.instances[h] ? Object(K.a)(e.queryParams, s()) : N.postId;
						t(Object(g.b)(c)); {
							const e = Object(p.b)(s(), {
								subredditName: r.name
							});
							await Promise.all(e.map(e => t((e => async (t, s) => {
								const n = Object(p.h)(s(), {
									id: e
								});
								t(b({
									categoryId: e,
									rank: n + 1
								})), Object(u.pb)(Object(p.c)(s()))
							})(e))))
						}
					} else t(F.n({
						title: P.e()
					}));
					const {
						routePrefix: H
					} = e.params;
					M || (z.b[H] === z.a.PROFILE ? Object(he.f)(s(), t, e) : Object(he.d)(s(), t, e))
				}, Pt = ["SubredditPost", "ProfilePost", "DeletedSubredditPost"], Nt = function(e, t, s, n) {
					let r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
					return async (o, a, i) => {
						var c, d, m, u;
						const p = a(),
							C = Object(Ce.a)(e, r ? void 0 : t, s),
							{
								subredditName: b
							} = s,
							g = !r && p.pages.comments.keyToHeadCommentId.hasOwnProperty(C),
							x = p.pages.comments.api.fullyLoaded[C],
							v = p.pages.comments.api.error[C],
							y = p.pages.comments.api.pending[C],
							_ = !Object(pe.R)(p),
							k = Object(pe.m)(p),
							P = n === l.v.CHAT,
							T = !!p.platform.lastPage,
							R = P && T,
							A = Object(me.F)(p, {
								postId: e
							}),
							D = Object(dt.d)(p),
							W = r || D && (null == A ? void 0 : A.discussionType) === I.b.Chat;
						if ((y || g && !v) && !R) {
							if (g && !p.sidebarPromotedPosts.firstFetch) {
								const e = Object(ae.i)(p) ? xe.a.COMMENTS_OVERLAY : xe.a.COMMENTS;
								window.addEventListener("load", () => {
									o(Object(be.b)(e))
								})
							}
							if (!x) {
								const n = !W || t ? s : {
									...s,
									depth: 1
								};
								o(Mt(e, t, n))
							}
							return
						}
						o(h.g());
						const Z = p.user.prefs.commentMode;
						o(Ot({
							key: C,
							postId: e,
							commentMode: Z
						}));
						const q = {
							...s,
							...P ? {
								sort: l.v.LIVE
							} : _ ? {
								sort: s.sort,
								depth: 2
							} : {
								sort: s.sort
							}
						}; {
							const t = Object(me.F)(a(), {
								postId: e
							});
							o(Object(f.maybeShowPrivateSubredditModal)(b || "")), t && t.numComments && t.numComments > yt && (q.truncate = vt)
						}
						const z = null === (d = null === (c = Object(ae.b)(p)) || void 0 === c ? void 0 : c.routeMatch) || void 0 === d ? void 0 : d.route.chunk,
							K = Object(ve.i)(() => Object(j.a)(i.apiContext(), e, t, q, Object(ee.a)(a()), $e(a())), {
								name: "fetchCommentsPage",
								isLoggedIn: !_,
								page: z
							}),
							Y = !_ && k && Object(ve.i)(() => Object(S.d)(i.gqlContext(), Object(X.e)(k)), {
								name: "fetchProfileKarma",
								isLoggedIn: !_,
								page: z
							}) || null,
							J = Object(mt.c)(p),
							Q = Object(ve.i)(() => L(i.gqlContext(), {
								postId: e,
								includeSubredditRankings: J
							}), {
								name: "fetchCommentsPageExtra",
								isLoggedIn: !_,
								page: z
							}),
							$ = b && Object(Ct.a)(p) ? Object(O.a)(i.gqlContext(), {
								subredditName: b
							}) : null;
						let te, se, ne, re, oe;
						if ([te, se, ne, re] = await Promise.all([K, Y, Q, $]), o(Object(F.o)(te.status)), kt(ne) && "SubredditPost" === (null === (m = ne.body.data.postInfoById) || void 0 === m ? void 0 : m.__typename)) {
							const e = ne.body.data.postInfoById.subreddit.name;
							Object(he.c)(a(), o, e)
						}
						if (te.ok) {
							try {
								te.body.posts = await Object(rt.a)(i.apiContext(), te.body.posts, p)
							} catch (ie) {
								nt.c.captureException(ie)
							}
							const t = Object.keys(te.body.posts).filter(e => !!te.body.posts[e].isMeta),
								s = te.body.posts[e];
							if (Object(he.b)(a(), o, s.belongsTo.type), t.length) {
								const e = Object(ve.i)(() => Object(E.a)(i.apiContext(), s.belongsTo.id, t), {
										name: "getGovernanceData",
										page: z,
										isLoggedIn: !_
									}),
									n = await e;
								n.ok && (oe = n.body)
							}
							if (kt(se)) {
								const {
									data: e
								} = se.body, t = {
									karma: {
										...S.a
									}
								};
								if (Object(S.e)(e.redditorInfoByName)) {
									const s = e.redditorInfoByName.karma;
									t.karma = {
										...t.karma,
										...s
									}
								}
								te.body && te.body.account && Object.assign(te.body.account, t)
							}
							if (kt(ne)) {
								const {
									data: t
								} = ne.body;
								if (t.postInfoById && Pt.includes(t.postInfoById.__typename) && (te.body.posts[e] = {
										...te.body.posts[e],
										...t.postInfoById,
										mediaStatus: "SubredditPost" === t.postInfoById.__typename || "ProfilePost" === t.postInfoById.__typename ? null === (u = t.postInfoById.mediaStatus) || void 0 === u ? void 0 : u.status : null,
										media: {
											...te.body.posts[e].media,
											..."media" in t.postInfoById ? t.postInfoById.media : null
										}
									}), t.postInfoById && "SubredditPost" === t.postInfoById.__typename) {
									const e = t.postInfoById.subreddit.detectedLanguage;
									Object(gt.d)(p) && e && Object(ut.f)(p) && await Object(at.a)(e, o);
									const {
										id: s,
										isEligibleForContentBlocking: n,
										allowedMediaInComments: r,
										directoryRankings: a
									} = t.postInfoById.subreddit;
									o(Object(U.c)({
										subredditAboutInfo: {
											[s]: {
												isEligibleForContentBlocking: n,
												allowedMediaInComments: r,
												directoryRankings: a
											}
										}
									}))
								}
							}
							const n = Object(G.a)(te.body, e, p),
								{
									postMeta: r
								} = te.body;
							te.body.posts[e] = {
								...te.body.posts[e],
								isRobotIndexable: Object(ot.a)(r, e)
							}, re && te.body.subreddits[s.belongsTo.id] && (te.body.subreddits[s.belongsTo.id] = {
								...te.body.subreddits[s.belongsTo.id],
								devPlatformMetadata: re
							}), o(Et({
								key: C,
								postId: e,
								meta: p.meta,
								governance: oe,
								shouldCollapse: n,
								...te.body
							}))
						} {
							const n = Object(me.F)(a(), {
								postId: e
							});
							n && te.body.comments && Object.keys(te.body.comments).length < n.numComments ? o(Mt(e, t, s)) : te.ok && o(Tt({
								key: C
							}));
							const r = Object(ae.i)(p) ? xe.a.COMMENTS_OVERLAY : xe.a.COMMENTS;
							o(Object(be.b)(r))
						}
						if (te.ok) {
							o(H.g(C));
							const t = Object(me.F)(a(), {
									postId: e
								}),
								s = Object.keys(te.body.comments);
							if (o(B.y(t, V.a.CommentsView)), Object(le.h)(a(), {
									subredditId: t.belongsTo.id
								}) && await o(Object(M.a)({
									commentIds: s,
									postIds: [e]
								})), t && "subreddit" === t.belongsTo.type && te.body.comments) {
								const e = Object(ve.i)(() => o(Object(N.a)({
									commentIds: s,
									postIds: [t.id],
									subredditId: t.belongsTo.id
								})), {
									name: "fetchAllEconomicsData",
									page: z,
									isLoggedIn: !_
								});
								await e
							}
						} else {
							let e;
							b && (o(Object(f.subredditPending)({
								key: C
							})), e = await Object(ge.a)("subreddit", () => Object(w.a)(i.apiContext(), b, {})), o(Object(F.o)(e.status)), o(Object(f.handleSubredditPageApiError)(e, b))), o(jt({
								error: te.error,
								key: C,
								...e ? e.body : te.body
							}))
						}
					}
				}, Tt = Object(d.a)(st.g), Mt = (e, t, s) => async (n, r, o) => {
					var a, i;
					const c = Object(Ce.a)(e, t, s),
						d = r(),
						l = Object(pe.S)(d),
						m = Object(pe.m)(d),
						u = null === (i = null === (a = Object(ae.b)(r())) || void 0 === a ? void 0 : a.routeMatch) || void 0 === i ? void 0 : i.route.chunk,
						p = Object(me.F)(d, {
							postId: e
						}),
						C = Object(dt.d)(d),
						b = "CHAT" === (null == p ? void 0 : p.discussionType) && C && !t,
						h = Object(j.a)(o.apiContext(), e, t, b ? {
							...s,
							depth: 1
						} : s, Object(ee.a)(d), $e(d)),
						f = l && m && Object(S.d)(o.gqlContext(), Object(X.e)(m)) || null,
						g = Object(mt.c)(d),
						x = Object(ve.i)(() => L(o.gqlContext(), {
							postId: e,
							includeSubredditRankings: g
						}), {
							name: "fetchCommentsPageExtra",
							isLoggedIn: l,
							page: u
						}),
						[y, O, E] = await Promise.all([h, f, x]);
					if (y.ok) {
						if (kt(O)) {
							const {
								data: e
							} = O.body, t = {
								karma: {
									...S.a
								}
							};
							if (Object(S.e)(e.redditorInfoByName)) {
								const s = e.redditorInfoByName.karma;
								t.karma = {
									...t.karma,
									...s
								}
							}
							y.body && y.body.account && Object.assign(y.body.account, t)
						}
						if (kt(E)) {
							const {
								data: t
							} = E.body;
							if (y.body.posts[e] = {
									...y.body.posts[e],
									...t.postInfoById,
									media: {
										...y.body.posts[e].media,
										...t.postInfoById && "media" in t.postInfoById ? t.postInfoById.media : null
									}
								}, t.postInfoById && "SubredditPost" === t.postInfoById.__typename) {
								const {
									id: e,
									directoryRankings: s
								} = t.postInfoById.subreddit;
								n(Object(U.c)({
									subredditAboutInfo: {
										[e]: {
											directoryRankings: s
										}
									}
								}))
							}
						}
						const t = Object(G.a)(y.body, e, d);
						n(Et({
							key: c,
							postId: e,
							meta: d.meta,
							shouldCollapse: t,
							...y.body
						})), n(Tt({
							key: c
						}));
						const s = r().posts.models[e],
							o = s && Object(me.U)(r(), {
								postId: s.id
							});
						s && "subreddit" === s.belongsTo.type && o && Object(de.a)(d, {
							subredditId: o.id
						}) && n(Object(v.h)(o.name, o.id)), s && "subreddit" === s.belongsTo.type && y.body.comments && await n(Object(N.a)({
							commentIds: Object.keys(y.body.comments),
							postIds: [s.id],
							subredditId: s.belongsTo.id
						}))
					} else n(jt({
						error: y.error,
						key: c,
						...y.body
					}))
				}
		},
		"./src/reddit/actions/shortcuts/active.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			}));
			var n = s("./src/lib/makeActionCreator/index.ts"),
				r = s("./src/reddit/actions/shortcuts/constants.ts");
			const o = Object(n.a)(r.a),
				a = Object(n.a)(r.b)
		},
		"./src/reddit/actions/subreddit/inlineEditing.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return g
			})), s.d(t, "a", (function() {
				return v
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/makeActionCreator/index.ts"),
				o = s("./src/reddit/actions/structuredStyles/index.ts"),
				a = s("./src/reddit/actions/subreddit/constants.ts"),
				i = s("./src/reddit/actions/toaster.ts"),
				c = s("./src/reddit/constants/blade.ts"),
				d = s("./src/reddit/helpers/trackers/inlineSubredditEditing.ts"),
				l = s("./src/reddit/models/Image/index.tsx"),
				m = s("./src/reddit/models/Toast/index.ts"),
				u = s("./src/reddit/selectors/structuredStyles.ts"),
				p = s("./src/reddit/selectors/subreddit.ts"),
				C = s("./src/telemetry/index.ts");
			const b = Object(r.a)(a.B),
				h = Object(r.a)(a.C),
				f = Object(r.a)(a.A),
				g = (e, t, s) => async (n, r, o) => {
					const a = Object(p.C)(r(), {
						subredditName: e
					});
					if (a) return v(a.id, t, s)(n, r, o)
				}, x = () => n.fbt._("Error uploading image, please try again later", null, {
					hk: "7ZIYs"
				}), v = (e, t, s) => async (r, a, p) => {
					const g = await Object(l.e)(t);
					r(b());
					const v = a();
					try {
						await Object(o.g)("communityIcon", g, e)(r, a, p)
					} catch (O) {
						return Object(C.a)(Object(d.c)(v, "something went wrong with the uploading the image")), r(Object(i.f)({
							kind: m.b.Error,
							text: x()
						})), void r(f())
					}
					const y = Object(u.c)(a(), {
						name: "communityIcon"
					});
					if (!y) return Object(C.a)(Object(d.c)(v, "image is null")), r(Object(i.f)({
						kind: m.b.Error,
						text: x()
					})), void r(f());
					await Object(o.k)(e, {
						communityIcon: y
					}, c.b.idCard, s)(r, a, p), r(Object(i.f)({
						kind: m.b.SuccessCommunity,
						text: n.fbt._("Successfully updated Community Icon!", null, {
							hk: "29LGdg"
						})
					})), r(h())
				}
		},
		"./src/reddit/actions/subreddit/muting.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return k
			})), s.d(t, "d", (function() {
				return w
			})), s.d(t, "e", (function() {
				return S
			})), s.d(t, "g", (function() {
				return I
			})), s.d(t, "a", (function() {
				return P
			})), s.d(t, "f", (function() {
				return N
			})), s.d(t, "b", (function() {
				return T
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/makeActionCreator/index.ts"),
				o = s("./src/reddit/actions/toaster.ts"),
				a = s("./src/lib/makeGqlRequest/index.ts"),
				i = s("./src/redditGQL/operations/DeleteSubredditMuteSettings.json"),
				c = s("./src/redditGQL/operations/MutedSubreddits.json"),
				d = s("./src/redditGQL/operations/UpdateSubredditMuteAndNotificationLevelSettings.json"),
				l = s("./src/redditGQL/operations/UpdateSubredditMuteSettings.json");
			const m = (e, t) => Object(a.a)(e, {
					...l,
					variables: {
						input: {
							subredditId: t
						}
					}
				}),
				u = (e, t) => Object(a.a)(e, {
					...i,
					variables: {
						input: {
							subredditId: t
						}
					}
				});
			var p = s("./src/reddit/models/Toast/index.ts"),
				C = s("./src/reddit/actions/subreddit/constants.ts"),
				b = s("./src/reddit/actions/subreddit/notifications.ts"),
				h = s("./src/reddit/selectors/subreddit.ts");
			const f = e => Object(o.f)({
					id: e,
					kind: p.b.Error,
					duration: o.a,
					text: n.fbt._("An error has occured. Please try again later", null, {
						hk: "2FpsLy"
					})
				}),
				g = (e, t) => Object(o.f)({
					kind: p.b.SuccessCommunityGreen,
					text: n.fbt._("Muted r/{subreddit name}", [n.fbt._param("subreddit name", e)], {
						hk: "Mg9mO"
					}),
					...t ? {
						buttonText: n.fbt._("Undo", null, {
							hk: "2siioQ"
						}),
						buttonAction: t
					} : {}
				}),
				x = (e, t) => Object(o.f)({
					kind: p.b.SuccessCommunityGreen,
					text: n.fbt._("Unmuted r/{subreddit name}", [n.fbt._param("subreddit name", e)], {
						hk: "Fhnht"
					}),
					...t ? {
						buttonText: n.fbt._("Undo", null, {
							hk: "2siioQ"
						}),
						buttonAction: t
					} : {}
				});
			var v = s("./src/reddit/endpoints/subreddit/about.ts");
			const y = Object(r.a)(C.i),
				O = Object(r.a)(C.h),
				E = Object(r.a)(C.G),
				j = (Object(r.a)(C.j), Object(r.a)(C.F), Object(r.a)(C.g)),
				_ = Object(r.a)(C.f),
				k = e => {
					let {
						subredditId: t,
						subredditName: s,
						successCallback: n
					} = e;
					return async (e, r, o) => {
						let {
							gqlContext: a
						} = o;
						var i, c;
						const d = await m(a(), t);
						if (d.ok && d.body && (null === (c = null === (i = d.body) || void 0 === i ? void 0 : i.data.updateSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) n && n(), e(g(s, L({
							subredditId: t,
							subredditName: s
						})));
						else {
							e(f(`error-muting-${t}`))
						}
					}
				},
				L = e => {
					let {
						subredditId: t,
						subredditName: s,
						successCallback: n
					} = e;
					return async (e, r, o) => {
						let {
							gqlContext: a
						} = o;
						var i, c;
						const d = await u(a(), t);
						if (d.ok && d.body && (null === (c = null === (i = d.body) || void 0 === i ? void 0 : i.data.deleteSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) n && n(), e(x(s, k({
							subredditId: t,
							subredditName: s
						})));
						else {
							e(f(`error-muting-${t}`))
						}
					}
				},
				w = e => {
					let {
						subredditId: t,
						subredditName: s,
						successCallback: n
					} = e;
					return async (e, r, o) => {
						let {
							gqlContext: a
						} = o;
						var i, c;
						const d = await m(a(), t);
						if (d.ok && d.body && (null === (c = null === (i = d.body) || void 0 === i ? void 0 : i.data.updateSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) n && n(), e(Object(b.c)({
							subredditAboutInfo: {
								[t]: {
									isMuted: !0
								}
							}
						})), e(g(s, S({
							subredditId: t,
							subredditName: s
						})));
						else {
							e(f(`error-muting-${t}`))
						}
					}
				},
				S = e => {
					let {
						subredditId: t,
						subredditName: s,
						successCallback: n
					} = e;
					return async (e, r, o) => {
						let {
							gqlContext: a
						} = o;
						var i, c;
						const d = await u(a(), t);
						if (d.ok && d.body && (null === (c = null === (i = d.body) || void 0 === i ? void 0 : i.data.deleteSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) n && n(), e(Object(b.c)({
							subredditAboutInfo: {
								[t]: {
									isMuted: !1
								}
							}
						})), e(x(s, w({
							subredditId: t,
							subredditName: s
						})));
						else {
							e(f(`error-muting-${t}`))
						}
					}
				},
				I = e => {
					let {
						subredditId: t,
						notificationLevel: s
					} = e;
					return async (e, r, i) => {
						let {
							gqlContext: c
						} = i;
						var l, m;
						const u = Object(b.a)(s),
							C = await ((e, t, s) => Object(a.a)(e, {
								...d,
								variables: {
									input: {
										...s,
										subredditId: t
									}
								}
							}))(c(), t, u);
						C.ok && C.body && (null === (m = null === (l = C.body) || void 0 === l ? void 0 : l.data.updateSubredditMuteAndNotificationLevelSettings) || void 0 === m ? void 0 : m.ok) ? (e(E({
							subredditId: t,
							notificationLevel: s
						})), e(Object(o.f)({
							kind: p.b.SuccessCommunityGreen,
							text: Object(b.b)(s)
						}))) : e(Object(o.f)({
							kind: p.b.Error,
							text: n.fbt._("Failed to change the frequency of notifications from this community, please try again.", null, {
								hk: "4avFFV"
							})
						}))
					}
				},
				P = () => async (e, t, s) => {
					let {
						gqlContext: r
					} = s;
					const i = await (e => Object(a.a)(e, c))(r());
					if (i.ok && i.body && i.body.data) {
						const {
							data: t
						} = i.body, s = (t && t.identity.mutedSubreddits).edges.map(e => e.node);
						e(y({
							nodes: s
						}))
					} else e(O()), e(Object(o.f)({
						duration: o.a,
						kind: p.b.Error,
						text: n.fbt._("Failed to get muted subreddits, please try again.", null, {
							hk: "2dCj3Q"
						})
					}))
				}, N = e => {
					let {
						subredditId: t,
						subredditName: s
					} = e;
					return async (e, n, r) => {
						let {
							gqlContext: o
						} = r;
						var a, i;
						const c = await u(o(), t);
						if (c.ok && c.body && (null === (i = null === (a = c.body) || void 0 === a ? void 0 : a.data.deleteSubredditMuteSettings) || void 0 === i ? void 0 : i.ok)) e(j(t)), e(x(s));
						else {
							e(f(`error-unmuting-${t}`))
						}
					}
				}, T = e => {
					let {
						subredditName: t
					} = e;
					return async (e, s, r) => {
						let {
							gqlContext: a
						} = r;
						var i, c;
						const d = s(),
							l = Object(h.t)(d).find(e => e.name.toLowerCase() === t.toLowerCase());
						if (l) {
							const t = l.name,
								s = `error-muting-duplicate-${t}`;
							return e(Object(o.f)({
								id: s,
								kind: p.b.Error,
								duration: o.a,
								text: n.fbt._("Sorry, r/{subreddit name} is already muted.", [n.fbt._param("subreddit name", t)], {
									hk: "4n64wl"
								})
							}))
						}
						const u = await Object(v.a)(a(), t, !0),
							{
								data: C
							} = u.body,
							b = C && C.subreddit;
						if (!u.ok || null === b) {
							return e(((e, t) => Object(o.f)({
								id: e,
								kind: p.b.Error,
								duration: o.a,
								text: n.fbt._("Sorry, r/{subreddit name} isn't a community.", [n.fbt._param("subreddit name", t)], {
									hk: "3UtglL"
								})
							}))(`error-muting-${t}`, t))
						}
						const x = b.id,
							y = await m(a(), x);
						if (y.ok && y.body && (null === (c = null === (i = y.body) || void 0 === i ? void 0 : i.data.updateSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) e(_([b])), e(g(b.name));
						else {
							e(f(`error-muting-${x}`))
						}
					}
				}
		},
		"./src/reddit/actions/subreddit/notifications.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return u
			})), s.d(t, "a", (function() {
				return b
			})), s.d(t, "b", (function() {
				return h
			})), s.d(t, "d", (function() {
				return f
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/makeActionCreator/index.ts"),
				o = s("./src/reddit/actions/notificationSettingsLayout/index.ts"),
				a = s("./src/reddit/actions/notificationsInbox/index.ts"),
				i = s("./src/reddit/actions/subreddit/constants.ts"),
				c = s("./src/reddit/actions/toaster.ts"),
				d = s("./src/reddit/endpoints/subreddit/notificationSettings.ts"),
				l = s("./src/reddit/models/Subreddit/index.ts"),
				m = s("./src/reddit/models/Toast/index.ts");
			const u = Object(r.a)(i.z),
				p = Object(r.a)(i.y),
				C = Object(r.a)(i.x),
				b = e => {
					switch (e) {
						case l.c.FREQUENT:
							return {
								isSubredditUpdatesInterestingPostEnabled: !0, isUpdateFromSubredditEnabled: !0
							};
						case l.c.LOW:
							return {
								isSubredditUpdatesInterestingPostEnabled: !1, isUpdateFromSubredditEnabled: !0
							};
						case l.c.OFF:
						default:
							return {
								isSubredditUpdatesInterestingPostEnabled: !1, isUpdateFromSubredditEnabled: !1
							}
					}
				},
				h = e => {
					switch (e) {
						case l.c.OFF:
							return n.fbt._("Unfollowed. You won’t get updates on new activity anymore.", null, {
								hk: "3e1CJR"
							});
						case l.c.FREQUENT:
							return n.fbt._("Followed! Now you’ll get updates on new activity.", null, {
								hk: "3JzOOa"
							});
						case l.c.LOW:
							return n.fbt._("Success! You will see fewer notifications from this community in the future.", null, {
								hk: "4x3TS8"
							});
						default:
							return null
					}
				};
			const f = e => {
				let {
					subredditId: t,
					notificationLevel: s,
					successCallback: r,
					undoCallback: i
				} = e;
				return async (e, l, f) => {
					let {
						gqlContext: g
					} = f;
					var x, v, y;
					e(p());
					const O = b(s),
						E = await Object(d.b)(g(), t, O);
					if ((null === (v = null === (x = E.error) || void 0 === x ? void 0 : x.fields) || void 0 === v ? void 0 : v.length) || function(e) {
							return Boolean(e && e.data && e.data.updateSubredditNotificationSettings)
						}(E.body) && (null === (y = E.body.data.updateSubredditNotificationSettings.errors) || void 0 === y ? void 0 : y.length)) return e(C()), e(Object(c.f)({
						kind: m.b.Error,
						text: n.fbt._("Failed to change the frequency of notifications from this community, please try again.", null, {
							hk: "4avFFV"
						})
					}));
					E.ok && (e(Object(o.c)({
						subredditId: t,
						notificationLevel: s
					})), e(u({
						subredditAboutInfo: {
							[t]: {
								notificationLevel: s
							}
						}
					})), r && r(), e(i ? Object(c.f)(Object(c.e)(h(s), m.b.Undo, n.fbt._("Undo", null, {
						hk: "46OwLP"
					}), Object(a.i)(t, i))) : Object(c.f)(Object(c.e)(h(s), m.b.SuccessCommunityGreen))))
				}
			}
		},
		"./src/reddit/components/AdSupplementaryText/index.m.less": function(e, t, s) {
			e.exports = {
				AdSupplementaryText: "_3aY2soNZuUlNJQkpdmox9M",
				adSupplementaryText: "_3aY2soNZuUlNJQkpdmox9M",
				Content: "dND6Q1_345dpzB_NMYBC8",
				content: "dND6Q1_345dpzB_NMYBC8",
				ExtraLarge: "uh_X09jq4S7lMKSY8ZDii",
				extraLarge: "uh_X09jq4S7lMKSY8ZDii",
				Large: "_1l7lMJqbov2T29ncxpJBlP",
				large: "_1l7lMJqbov2T29ncxpJBlP"
			}
		},
		"./src/reddit/components/AdSupplementaryText/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/models/Post/index.ts"),
				c = s("./src/reddit/actions/post.ts"),
				d = s("./src/reddit/components/RichTextJson/index.tsx"),
				l = s("./src/reddit/constants/adEvents.ts"),
				m = s("./src/reddit/selectors/experiments/supportingLinkAds.ts"),
				u = s("./src/reddit/components/PostTitle/index.tsx"),
				p = s("./src/reddit/components/AdSupplementaryText/index.m.less"),
				C = s.n(p);
			const b = e => {
				let t;
				switch (e) {
					case u.b.ExtraLarge:
						t = C.a.ExtraLarge;
						break;
					case u.b.Large:
						t = C.a.Large
				}
				return t
			};
			t.a = e => {
				let {
					post: t,
					size: s,
					className: n
				} = e;
				const u = Object(o.d)();
				if (!Object(o.e)(m.a) || !Object(i.B)(t) || !t.adSupplementaryText || "string" == typeof t.adSupplementaryText) return null;
				if (0 === t.adSupplementaryText.document.length) return null;
				return r.a.createElement("div", {
					className: Object(a.a)(n, C.a.AdSupplementaryText),
					"data-testid": `${t.id}-ad-supplementary-text`,
					onClick: e => {
						e.target instanceof HTMLAnchorElement && u(Object(c.y)(t, l.a.Click))
					}
				}, r.a.createElement(d.b, {
					className: Object(a.a)(C.a.Content, b(s)),
					content: t.adSupplementaryText,
					rtJsonElementProps: {
						renderingObjectInfo: void 0
					}
				}))
			}
		},
		"./src/reddit/components/BackToSubreddit/index.m.less": function(e, t, s) {
			e.exports = {
				backToSubreddit: "_3aAvvioBKBNnlJqKytAVAd",
				innerContainer: "_3aVffPeM6Nkqs7D0RJ5FBs",
				back: "_17MxNCYEMmDof9NnT6ffxl",
				title: "_2VB8YvVdvxx0h0VGYVrpBX",
				subredditIcon: "_2Aw3HO2EUDcP7F481ZxyYl",
				content: "uhMLc-O1VODjzminrp8py"
			}
		},
		"./src/reddit/components/BackToTop/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_365FiUZ11efXHV7l7fNp6K"
			}
		},
		"./src/reddit/components/BackToTop/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/constants/elementIds.ts"),
				c = s("./src/reddit/controls/Button/index.tsx"),
				d = s("./src/reddit/selectors/experiments/shredditParity.ts"),
				l = s("./src/reddit/components/BackToTop/index.m.less"),
				m = s.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const {
				fbt: p
			} = s("./node_modules/fbt/lib/FbtPublic.js"), C = e => {
				if (e) {
					const e = document.getElementById(i.e);
					e && e.scroll(0, 0)
				} else window.scroll(0, 0)
			};
			t.a = e => {
				let {
					className: t,
					isOverlay: s,
					style: n
				} = e;
				const i = Object(o.e)(d.a);
				return r.a.createElement("div", {
					className: Object(a.a)(t, m.a.container),
					style: n
				}, r.a.createElement(c.a, u({
					className: m.a.button,
					onClick: () => C(s)
				}, i && {
					priority: c.c.Secondary,
					rplStyle: !0
				}), p._("Back to Top", null, {
					hk: "YjBtV"
				})))
			}
		},
		"./src/reddit/components/CommentCreation/Loader.m.less": function(e, t, s) {
			e.exports = {
				spacer: "_25blA2uobENRg70NGewwpP",
				isTopLevelComment: "_1chAIcRfDnelKBQkWMIXfl",
				isCommentBoxDesign: "_2mGbbSC1nHodWNoj5NJEYY",
				editor: "_3NuRqPrgRBPdjWunXX3Q8E",
				byline: "_1KZHWcRRAqnSYcyX8FzWOK",
				avatar: "_2gYdPXSssI0f1R9BPp9qsd"
			}
		},
		"./src/reddit/components/CommentCreation/Loader.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/reddit/components/RichTextEditor/Placeholder.tsx"),
				d = s("./src/reddit/helpers/styles/mixins/loading.ts"),
				l = s("./src/reddit/selectors/experiments/commentBox.ts"),
				m = s("./src/lib/classNames/index.ts"),
				u = s("./src/reddit/components/CommentCreation/Loader.m.less"),
				p = s.n(u);

			function C() {
				return (C = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const b = "bottom",
				h = Object(i.c)({
					isCommentBoxDesignEnabled: l.a
				}),
				f = Object(a.b)(h),
				g = e => {
					let {
						isCommentBoxDesignEnabled: t,
						isTopLevelComment: s,
						children: n
					} = e;
					return o.a.createElement("div", {
						className: Object(m.a)(p.a.spacer, {
							[p.a.isCommentBoxDesign]: t,
							[p.a.isTopLevelComment]: s
						})
					}, n)
				},
				x = () => o.a.createElement("div", {
					className: Object(m.a)(p.a.byline, Object(d.a)({
						isLoading: !0
					}))
				}),
				v = () => o.a.createElement("div", {
					className: Object(m.a)(p.a.avatar, Object(d.a)({
						isLoading: !0
					}))
				}),
				y = e => o.a.createElement(g, e, e.isCommentBoxDesignEnabled ? o.a.createElement(v, null) : o.a.createElement(x, null), o.a.createElement(c.a, {
					className: p.a.editor,
					isCommentBoxDesignEnabled: e.isCommentBoxDesignEnabled,
					isLoading: !0,
					toolbarPosition: b
				})),
				O = f(y),
				E = Object(n.a)({
					resolved: {},
					chunkName: () => "RichTextEditor",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => Promise.all([s.e("vendors~ChatMessageInput~FlairEdit~MembershipPaywallPage~PostCreation~RichTextEditor"), s.e("CommentsPage~Reddit~RichTextEditor~reddit-components-LargePost~reddit-components-MediumPost~reddit-c~cad4f428"), s.e("ChatMessageInput~MembershipPaywallPage~RichTextEditor"), s.e("RichTextEditor")]).then(s.bind(null, "./src/reddit/components/CommentCreation/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/CommentCreation/index.tsx"
					}
				}, {
					ssr: !1
				}),
				j = e => o.a.createElement(E, C({}, e, {
					fallback: o.a.createElement(O, {
						isTopLevelComment: e.isTopLevelComment
					})
				}));
			t.a = j
		},
		"./src/reddit/components/CommentCreation/LoggedOutCommentForm/index.m.less": function(e, t, s) {
			e.exports = {
				Wrapper: "_2GTMVdV2t3ka_zfkVHHo95",
				wrapper: "_2GTMVdV2t3ka_zfkVHHo95",
				Copy: "_3xhJYY30L68x0pxk-8uTYD",
				copy: "_3xhJYY30L68x0pxk-8uTYD",
				CTAButtons: "_3xkBSA_W2UZqPF31GQZ9K",
				ctaButtons: "_3xkBSA_W2UZqPF31GQZ9K",
				LoginLink: "_3fM1M9rFBqKwfG-KJLnxPY",
				loginLink: "_3fM1M9rFBqKwfG-KJLnxPY",
				SignupLink: "_1k97Y32qzGNtuVGyt73TpR",
				signupLink: "_1k97Y32qzGNtuVGyt73TpR"
			}
		},
		"./src/reddit/components/CommentCreation/LoggedOutCommentForm/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/isSimpleClick/index.ts"),
				i = s("./src/lib/loginHref/index.ts"),
				c = s("./src/reddit/components/TrackingHelper/index.tsx"),
				d = s("./src/reddit/controls/Button/index.tsx"),
				l = s("./src/reddit/helpers/trackers/authControls.ts"),
				m = s("./src/reddit/components/CommentCreation/LoggedOutCommentForm/index.m.less"),
				u = s.n(m);
			const {
				fbt: p
			} = s("./node_modules/fbt/lib/FbtPublic.js");
			t.a = Object(c.c)(e => {
				let {
					className: t,
					location: s,
					openLoginModal: n,
					openRegisterModal: c,
					origin: m,
					sendEvent: C
				} = e;
				return r.a.createElement("div", {
					className: Object(o.a)(t, u.a.Wrapper)
				}, r.a.createElement("span", {
					className: Object(o.a)(u.a.Copy)
				}, p._("Log in or sign up to leave a comment", null, {
					hk: "1KD7Eh"
				})), r.a.createElement("div", {
					className: u.a.CTAButtons
				}, r.a.createElement(d.t, {
					className: u.a.LoginLink,
					kind: d.b.ExternalLink,
					priority: d.c.Secondary,
					href: Object(i.a)(s, m, "/login"),
					onClick: e => {
						Object(a.a)(e) && (e.preventDefault(), e.stopPropagation(), n(), C(Object(l.a)("user_convert")))
					},
					"data-redditstyle": !0
				}, p._("Log In", null, {
					hk: "ZR3pC"
				})), r.a.createElement(d.t, {
					className: Object(o.a)(u.a.SignupLink),
					kind: d.b.ExternalLink,
					priority: d.c.Primary,
					href: Object(i.a)(s, m, "/register"),
					onClick: e => {
						Object(a.a)(e) && (e.preventDefault(), e.stopPropagation(), c(), C(Object(l.c)("user_convert")))
					},
					"data-redditstyle": !0
				}, p._("Sign Up", null, {
					hk: "48wH4o"
				}))))
			})
		},
		"./src/reddit/components/CommentModModeDropdown/index.m.less": function(e, t, s) {
			e.exports = {
				StyledDropdown: "_1PC9CIsUh5fq8cQdx3iMRr",
				styledDropdown: "_1PC9CIsUh5fq8cQdx3iMRr",
				Show: "BmpGQCO3oZBeUMzSaC5yX",
				show: "BmpGQCO3oZBeUMzSaC5yX"
			}
		},
		"./src/reddit/components/CommentModModeDropdown/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/reselect/es/index.js"),
				i = s("./src/reddit/actions/comment/moderation.ts"),
				c = s("./src/reddit/components/OverlayAwareTooltip/index.tsx"),
				d = s("./src/reddit/components/TrackingHelper/index.tsx"),
				l = s("./src/reddit/controls/Dropdown/index.tsx"),
				m = s("./src/reddit/helpers/trackers/modTools.ts"),
				u = s("./src/reddit/selectors/tooltip.ts"),
				p = s("./node_modules/fbt/lib/FbtPublic.js"),
				C = s("./src/lib/lessComponent.tsx"),
				b = s("./src/reddit/components/ModModeReports/helpers.ts"),
				h = s("./src/reddit/components/PostModModeDropdown/DropdownHelpers.tsx"),
				f = s("./src/reddit/icons/svgs/Show/index.tsx"),
				g = s("./src/reddit/components/CommentModModeDropdown/index.m.less"),
				x = s.n(g);
			const v = C.a.wrapped(f.a, "Show", x.a);
			var y = e => {
					const t = Object(b.b)(e.comment),
						s = e.comment.isApproved && t;
					return r.a.createElement(h.g, null, (!e.comment.isApproved || t) && r.a.createElement(h.e, {
						displayText: s ? p.fbt._("Reapprove", null, {
							hk: "1XngBU"
						}) : p.fbt._("Approve", null, {
							hk: "2219Nh"
						}),
						onClick: e.onApproveComment
					}, r.a.createElement(h.a, null)), !e.comment.bannedBy && r.a.createElement(r.a.Fragment, null, r.a.createElement(h.e, {
						displayText: e.comment.isRemoved ? p.fbt._("Removed", null, {
							hk: "17pv2n"
						}) : p.fbt._("Remove", null, {
							hk: "3tYl0U"
						}),
						onClick: e.onRemoveComment
					}, r.a.createElement(h.i, null)), r.a.createElement(h.e, {
						displayText: e.comment.isSpam ? p.fbt._("Removed as spam", null, {
							hk: "2Kv9DF"
						}) : p.fbt._("Remove as spam", null, {
							hk: "OOps6"
						}),
						onClick: e.onSpamComment
					}, r.a.createElement(h.j, null)), r.a.createElement(h.e, {
						displayText: e.comment.isLocked ? p.fbt._("Unlock comment", null, {
							hk: "1canPl"
						}) : p.fbt._("Lock comment", null, {
							hk: "Qp5a0"
						}),
						onClick: e.onLockComment
					}, r.a.createElement(h.h, null))), e.comment.collapsedBecauseCrowdControl && r.a.createElement(h.e, {
						displayText: p.fbt._("Show comment", null, {
							hk: "9SB86"
						}),
						onClick: e.onShowComment
					}, r.a.createElement(v, null)))
				},
				O = s("./src/devPlatform/components/ContextActions/ContextActionsLoader.tsx"),
				E = s("./src/devPlatform/constants.ts");
			const j = C.a.wrapped(l.a, "StyledDropdown", x.a),
				_ = Object(a.c)({
					isDropdownOpen: (e, t) => {
						let {
							tooltipId: s
						} = t;
						return Object(u.b)(s)(e)
					}
				}),
				k = Object(o.b)(_, (e, t) => {
					let {
						comment: s
					} = t;
					return {
						onApproveComment: () => e(Object(i.a)(s.id)),
						onLockComment: () => e(Object(i.c)(s.id)),
						onRemoveComment: () => e(Object(i.e)(s.id, !1)),
						onSpamComment: () => e(Object(i.e)(s.id, !0)),
						onShowComment: () => e(Object(i.d)(s.id))
					}
				}),
				L = Object(c.a)(j),
				w = k(Object(d.c)(e => {
					const {
						comment: t,
						isDropdownOpen: s,
						onApproveComment: n,
						onLockComment: o,
						onRemoveComment: a,
						onSpamComment: i,
						onShowComment: c,
						sendEvent: d,
						tooltipId: l
					} = e;
					return r.a.createElement(L, {
						isOpen: s,
						tooltipId: l
					}, r.a.createElement(y, {
						onApproveComment: () => {
							n(), d(Object(m.e)("approve", t.id))
						},
						onRemoveComment: () => {
							a(), d(Object(m.e)("remove", t.id))
						},
						onSpamComment: () => {
							i(), d(Object(m.e)("spam", t.id))
						},
						onLockComment: () => {
							o(), d(Object(m.e)(t.isLocked ? "unlock" : "lock", t.id))
						},
						onShowComment: () => {
							c(), d(Object(m.e)("showComment", t.id))
						},
						comment: t
					}), r.a.createElement(O.a, {
						contextType: E.a.COMMENT,
						contextData: t,
						moderator: !0
					}))
				}));
			t.a = w
		},
		"./src/reddit/components/Comments/Comment/ExpandButton/index.m.less": function(e, t, s) {
			e.exports = {
				expandButton: "_2Gzh48SaLz7dQBCULfOC6V",
				expandIcon: "_1tnrhhM9S7dYjApTfvd14l"
			}
		},
		"./src/reddit/components/Comments/Comment/Flatlist/breakpoints.m.less": function(e, t, s) {
			e.exports = {
				depth6: "SwOx7KbRrXYrqQCWMYPf0",
				isModModeEnabled: "_2hXOR2fIcfnUg0p-Env7KQ",
				LoggedInUserGroup: "_14hLFU5cIJCyxH9DSgsCov",
				loggedInUserGroup: "_14hLFU5cIJCyxH9DSgsCov",
				HideIfVWSmaller: "_2hr3tRWszeMRQ0u_Whs7t8",
				hideIfVwSmaller: "_2hr3tRWszeMRQ0u_Whs7t8",
				HideIfVWLarger: "_1YnPvd-E5MbmcM3PvRRcX",
				hideIfVwLarger: "_1YnPvd-E5MbmcM3PvRRcX",
				isFollowCommentEnabled: "_3rHRwVOKmBBlBOQ4kIW_vq",
				ModeratorGroup: "_1CUkbmFVuU6wklfYeYwPFk",
				moderatorGroup: "_1CUkbmFVuU6wklfYeYwPFk",
				depth9: "_2EcU45Nj3OvIEdu169RlLK",
				depth10: "_2sxg06qfN6lCskrSU7pyoj",
				depth0: "_2t8wLytikHzPCUnvXdS_wu",
				depth3: "_2Ik7QEXtA-lbZKj0ssL89G",
				isInOverlay: "FOPddbU-vkQ5LYmQP6Fgc"
			}
		},
		"./src/reddit/components/Comments/Comment/Flatlist/index.m.less": function(e, t, s) {
			e.exports = {
				ModActionsMenu: "_3IuprPPEDVWAHB_tWQFgad",
				modActionsMenu: "_3IuprPPEDVWAHB_tWQFgad",
				ViewReportsDropdown: "_1JwG70oEVxaFNeRI-8q_bd",
				viewReportsDropdown: "_1JwG70oEVxaFNeRI-8q_bd",
				IgnoreReport: "_1QhRdH9FgEwuJIYiBlnog8",
				ignoreReport: "_1QhRdH9FgEwuJIYiBlnog8",
				Report: "tfULaYlP83dV84XOxX3YE",
				report: "tfULaYlP83dV84XOxX3YE",
				OverflowMenuSpacer: "hrV8gUgmt0V7wM2wgZ81l",
				overflowMenuSpacer: "hrV8gUgmt0V7wM2wgZ81l",
				DropdownRow: "uoWjzSc1sqcAD_cLV6MWa",
				dropdownRow: "uoWjzSc1sqcAD_cLV6MWa",
				Flatlist: "_1LXnp2ufrzN6ioaTLTjGQ1",
				flatlist: "_1LXnp2ufrzN6ioaTLTjGQ1",
				CommentIcon: "_1g4YvNNIFoV_5_EhsVfyRy",
				commentIcon: "_1g4YvNNIFoV_5_EhsVfyRy",
				Button: "_374Hkkigy4E4srsI2WktEd",
				button: "_374Hkkigy4E4srsI2WktEd",
				ModToolsFlatlist: "_2sGRD7t2kAbCLKrZ6UjoMW",
				modToolsFlatlist: "_2sGRD7t2kAbCLKrZ6UjoMW",
				dropdownRowText: "_3my60CXALAaQkY4P4xVmad",
				overflowMenu: "_1VR6DV38j4rMT5OMeU4gJZ"
			}
		},
		"./src/reddit/components/Comments/Comment/GlowHighlight/index.m.less": function(e, t, s) {
			e.exports = {
				glowHighlightContainer: "_3VH2iGVh92XtlKq0-eVoEN"
			}
		},
		"./src/reddit/components/Comments/Comment/GradientHighlight/index.m.less": function(e, t, s) {
			e.exports = {
				gradientHighlightContainer: "TmlaIdEplCzZ0F1aRGYQh"
			}
		},
		"./src/reddit/components/Comments/Comment/HighlightEffect/index.m.less": function(e, t, s) {
			e.exports = {
				effectContainer: "_15G4fCS1bzGgGK9kBOtN2t",
				bubbleEffectContainer: "_3rhkMikNPUTfnVDvk-6EFo",
				lottieEffectContainer: "_28x1bnTjOY6zWZfooCxkKQ"
			}
		},
		"./src/reddit/components/Comments/Comment/HighlightEffect/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			var n, r = s("./src/lib/classNames/index.ts"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/reddit/hooks/useIntersectionObserver.ts"),
				c = s("./src/reddit/components/LottieAnimation/index.tsx"),
				d = s("./src/reddit/components/Comments/Comment/HighlightEffect/index.m.less"),
				l = s.n(d);
			! function(e) {
				e.Lottie = "lottie"
			}(n || (n = {}));
			const m = {
				threshold: [.75, .001]
			};
			t.b = a.a.memo(e => {
				const t = Object(o.useRef)(null),
					[s, d] = Object(o.useState)(!1),
					u = Object(o.useCallback)(e => {
						e.forEach(e => {
							const {
								intersectionRatio: t
							} = e;
							t >= .75 && d(!1), t <= .001 && d(!0)
						})
					}, []);
				Object(i.a)(t, u, m);
				const p = e.type;
				return a.a.createElement("div", {
					className: Object(r.a)(l.a.effectContainer, l.a[p + "EffectContainer"]),
					ref: t,
					role: "presentation"
				}, p === n.Lottie && a.a.createElement(c.a, {
					assetUrl: e.assetUrl,
					prefersReducedAnimation: e.prefersReducedAnimation,
					hidden: s
				}))
			})
		},
		"./src/reddit/components/Comments/Comment/ModToolsFlatlist/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/lib/classNames/index.ts"),
				d = s("./src/lib/constants/index.ts"),
				l = s("./src/lib/lessComponent.tsx"),
				m = s("./src/reddit/actions/comment/moderation.ts"),
				u = s("./src/reddit/actions/tooltip.ts"),
				p = s("./src/reddit/components/ModModeReports/helpers.ts"),
				C = s("./src/reddit/components/TrackingHelper/index.tsx"),
				b = s("./src/reddit/contexts/PageLayer/index.tsx"),
				h = s("./src/reddit/helpers/trackers/modTools.ts"),
				f = s("./src/reddit/selectors/moderatingComments.ts"),
				g = s("./src/reddit/selectors/moderatorPermissions.ts"),
				x = s("./src/reddit/selectors/tooltip.ts"),
				v = s("./src/reddit/selectors/user.ts"),
				y = s("./src/reddit/icons/fonts/Approve/index.tsx"),
				O = s("./src/reddit/icons/fonts/Lock/index.tsx"),
				E = s("./src/reddit/icons/fonts/Remove/index.tsx"),
				j = s("./src/reddit/icons/fonts/Spam/index.tsx"),
				_ = s("./src/reddit/icons/svgs/Show/index.tsx"),
				k = s("./src/reddit/components/Comments/Comment/ModToolsFlatlist/RestrictedButton.tsx"),
				L = s("./src/reddit/components/Comments/Comment/ModToolsFlatlist/index.m.less"),
				w = s.n(L);
			const S = Object(b.v)(),
				I = e => `Distinguish--Dropdown--${e}`,
				P = Object(i.c)({
					currentUser: v.m,
					collapsedBecauseCrowdControl: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(f.a)(e, {
							commentId: s.id
						})
					},
					isDistinguishDropdownOpen: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(x.b)(I(s.id))(e)
					},
					moderatorPermissions: (e, t) => {
						const {
							comment: s
						} = t;
						return Object(b.i)(e, t) || Object(g.n)(e, {
							subredditId: s.subredditId
						})
					},
					modModeEnabled: b.W
				}),
				N = Object(a.b)(P, (e, t) => {
					let {
						comment: s
					} = t;
					return {
						onApproveComment: () => e(Object(m.a)(s.id)),
						onDistinguishComment: (t, n) => e(Object(m.b)(s.id, t, n)),
						onLockComment: () => e(Object(m.c)(s.id)),
						onRemoveComment: () => e(Object(m.e)(s.id, !1)),
						onSpamComment: () => e(Object(m.e)(s.id, !0)),
						onShowComment: () => e(Object(m.d)(s.id)),
						onToggleDistinguishDropdown: () => e(Object(u.h)({
							tooltipId: I(s.id)
						}))
					}
				});
			t.a = S(N(l.a.wrapped(Object(C.c)(e => {
				let {
					className: t,
					comment: s,
					currentUser: r,
					isCommentAuthor: a,
					collapsedBecauseCrowdControl: i,
					moderatorPermissions: l,
					modModeEnabled: m,
					onApproveComment: u,
					onDistinguishComment: C,
					onLockComment: b,
					onRemoveComment: f,
					onShowComment: g,
					onSpamComment: x,
					onToggleDistinguishDropdown: v,
					sendEvent: L,
					pageLayer: S,
					...I
				} = e;
				const P = Object(p.b)(s),
					N = s.isApproved && P,
					T = !s.isRemoved || s.bannedBy === d.l,
					M = i,
					R = e => L(Object(h.c)(e, s.id)),
					F = "chat_comments" === (null == S ? void 0 : S.queryParams.only);
				return o.a.createElement("div", {
					className: t
				}, (s.bannedBy || P) && o.a.createElement(k.a, {
					text: N ? n.fbt._("Reapprove", null, {
						hk: "1XngBU"
					}) : n.fbt._("Approve", null, {
						hk: "2219Nh"
					}),
					onClick: () => {
						u(), F && L(Object(h.b)("approve", s.id)), R("approve")
					}
				}, o.a.createElement(y.a, {
					className: w.a.icon
				})), T && o.a.createElement(o.a.Fragment, null, o.a.createElement(k.a, {
					text: s.bannedBy === d.l ? n.fbt._("Confirm Removal", null, {
						hk: "3JozXJ"
					}) : n.fbt._("Remove", null, {
						hk: "3tYl0U"
					}),
					onClick: () => {
						f(), F && L(Object(h.b)("remove", s.id)), s.bannedBy === d.l ? R("confirm_remove") : R("remove")
					}
				}, o.a.createElement(E.a, {
					className: w.a.icon
				})), o.a.createElement(k.a, {
					text: n.fbt._("Spam", null, {
						hk: "1jEVwZ"
					}),
					onClick: () => {
						x(), R("spam")
					}
				}, o.a.createElement(j.a, {
					className: w.a.icon
				}))), o.a.createElement(k.a, {
					text: s.isLocked ? n.fbt._("Unlock", null, {
						hk: "KGYeO"
					}) : n.fbt._("Lock", null, {
						hk: "3rDzwU"
					}),
					onClick: () => {
						b(), R(s.isLocked ? "unlock" : "lock")
					}
				}, o.a.createElement(O.a, {
					className: w.a.icon
				})), M && o.a.createElement(k.a, {
					text: n.fbt._("Show Comment", null, {
						hk: "2ki02n"
					}),
					onClick: () => {
						g()
					}
				}, o.a.createElement(_.a, {
					className: Object(c.a)(w.a.icon, w.a.Show)
				})))
			}), "CommentModToolsFlatlist", w.a)))
		},
		"./src/reddit/components/Comments/Comment/TopMeta/Author.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return C
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/constants/index.ts"),
				i = s("./src/reddit/models/Comment/index.ts"),
				c = s("./src/reddit/components/Economics/SubredditPremium/Badges/UsernameDisplay/index.tsx"),
				d = s("./src/reddit/components/Hovercards/AuthorHovercard/index.tsx"),
				l = s("./src/reddit/components/PostTopMeta/index.tsx"),
				m = s("./src/reddit/components/Comments/Comment/TopMeta/CommentAuthorLink.tsx"),
				u = s("./src/reddit/components/Comments/Comment/TopMeta/author.m.less"),
				p = s.n(u);
			const C = e => {
				let {
					authorClassName: t,
					className: s,
					comment: n,
					collapsed: u,
					isEmbeddedLiveChat: C,
					isStrong: b,
					onClick: h,
					renderedInOverlay: f
				} = e;
				const g = Object(i.f)(n),
					x = r.a.createElement(c.b, {
						ignore: g || !!n.distinguishType && n.distinguishType !== a.H.NONE,
						subredditId: n.subredditId,
						userId: n.authorId
					}, r.a.createElement(m.a, {
						className: t,
						collapsed: u,
						comment: n,
						isAuthorDeleted: Object(i.f)(n),
						isCommentAuthorBlocked: Object(i.g)(n),
						isEmbeddedLiveChat: C,
						isStrong: b,
						onClick: h
					}));
				return g || C ? x : r.a.createElement(d.b, {
					className: Object(o.a)(p.a.authorHoverCard, s),
					collapsed: u,
					isCommentAuthorBlocked: Object(i.g)(n),
					postOrComment: n,
					tooltipType: f ? l.f.Lightbox : void 0
				}, x)
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/CommentAuthorLink.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return l
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/classNames/index.ts"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/reddit/components/AuthorLink/index.tsx"),
				c = s("./src/reddit/components/Comments/Comment/TopMeta/commentAuthorLink.m.less"),
				d = s.n(c);
			const l = e => {
				const {
					className: t,
					collapsed: s,
					comment: o,
					isAuthorDeleted: c,
					isCommentAuthorBlocked: l,
					isEmbeddedLiveChat: m,
					isStrong: u,
					onClick: p,
					style: C
				} = e;
				return s && l ? a.a.createElement("p", {
					className: Object(r.a)(d.a.commentAuthorLink, t)
				}, n.fbt._("Blocked account", null, {
					hk: "2KVMxM"
				})) : a.a.createElement(i.a, {
					author: o.author,
					className: Object(r.a)(d.a.commentAuthorLink, t),
					isAuthorDeleted: c,
					isCommentAuthorBlocked: l,
					forceOpenInNewTab: m,
					isStrong: u,
					linkProps: {
						"data-testid": "comment_author_link"
					},
					onClick: p,
					style: C
				}, o.author)
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/Created.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return C
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/lib/addQueryParams/index.ts"),
				i = s("./src/reddit/actions/comment/index.ts"),
				c = s("./src/reddit/actions/post.ts"),
				d = s("./src/reddit/actions/tooltip.ts"),
				l = s("./src/reddit/components/HumanDate/index.tsx"),
				m = s("./src/reddit/components/InfoTextTooltip/index.tsx"),
				u = s("./src/reddit/helpers/path/index.ts"),
				p = s("./src/reddit/components/Comments/Comment/TopMeta/tooltip.ts");
			const C = e => {
					const {
						className: t,
						comment: s,
						compact: n,
						onClick: i,
						permalink: C,
						renderedInOverlay: h,
						isBlockingInterstitialEnabled: f
					} = e, g = Object(o.d)(), x = Object(p.d)("CommentTopMeta--Created--", s.id, h), v = () => g(Object(d.h)({
						tooltipId: x
					}));
					return r.a.createElement("a", {
						className: t,
						"data-testid": "comment_timestamp",
						href: Object(a.a)(C, {
							utm_source: "reddit",
							utm_medium: "web2x",
							context: 3
						}),
						id: x,
						onClick: e => {
							null == i || i(e), b(g, s.id), f && (e.preventDefault(), g(Object(c.X)(Object(u.b)(C), s.postId)))
						},
						onMouseEnter: v,
						onMouseLeave: v,
						target: "_blank",
						rel: "nofollow noopener noreferrer"
					}, r.a.createElement(l.d, {
						seconds: s.created,
						shortenedUnit: n
					}), r.a.createElement(m.c, {
						tooltipId: x
					}, r.a.createElement(l.b, {
						seconds: s.created
					})))
				},
				b = (e, t) => {
					window.addEventListener("focus", (function s() {
						h(e, t, s)
					}))
				},
				h = (e, t, s) => {
					window.removeEventListener("focus", s), e(Object(i.h)({
						commentListNodeId: t
					})), window.setTimeout(() => e(Object(i.h)({
						commentListNodeId: t
					})), 5e3)
				}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/Edited.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return m
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/components/HumanDate/index.tsx"),
				i = s("./src/reddit/controls/MetaData/index.tsx"),
				c = s("./src/reddit/components/Comments/Comment/TopMeta/edited.m.less"),
				d = s.n(c);
			const {
				fbt: l
			} = s("./node_modules/fbt/lib/FbtPublic.js"), m = e => {
				let {
					className: t,
					compact: s,
					editedAt: n
				} = e;
				return r.a.createElement(i.a, {
					className: Object(o.a)(d.a.editedText, t)
				}, l._("edited {time}", [l._param("time", r.a.createElement(a.d, {
					seconds: n,
					shortenedUnit: s
				}))], {
					hk: "1tiB0u"
				}))
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/PostCommentHeader/index.m.less": function(e, t, s) {
			e.exports = {
				author: "DjcdNGtVXPcxG0yiFXIoZ",
				authorLine: "_1a_HxF03jCyxnx706hQmJR",
				headerLine: "_2nobNdIwmDrXK7NZps5zUO",
				flair: "cFNx42ceihnMpvAsovOTi",
				baselineItem: "_3QEK34iVL1BjyHAVleVVNQ",
				container: "-Xcv3XBXmgiY2X5RqaPbO",
				cryptoPoints: "_2bfuNFXt4pN8991xPpimzy",
				role: "_3AgEmWP1qkCB8nds7LhzEB",
				achievementFlair: "_2a_XgY10KOzM0PRvywwDuY",
				cakeDay: "TNzy9Y4Ql8v80YssZ59GR",
				metaText: "_3yx4Dn0W3Yunucf5sVJeFU",
				separator: "_8b8fUdBRxCYj9MkNpFvvv",
				userBadges: "_3AXw8D3tzlqTRxjQdd5ve7",
				userFlairLine: "_3w527zTLhXkd08MyacMV9H",
				LastAuthorModNoteIcon: "_3TVHJ99XXRlGtv0wqGCBFy",
				lastAuthorModNoteIcon: "_3TVHJ99XXRlGtv0wqGCBFy"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/Role.m.less": function(e, t, s) {
			e.exports = {
				role: "LWgI-A6rN9Wajn1VLxu2A",
				modAchievement: "_2am63Mu1vtyM2MwmCJoxJp"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/Role.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return x
			}));
			var n, r = s("./node_modules/fbt/lib/FbtPublic.js"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./src/config.ts"),
				d = s("./src/lib/classNames/index.ts"),
				l = s("./src/lib/colors/constants.ts"),
				m = s("./src/reddit/actions/tooltip.ts"),
				u = s("./src/reddit/components/Comments/Comment/TopMeta/tooltip.ts"),
				p = s("./src/reddit/components/InfoTextTooltip/index.tsx"),
				C = s("./src/lib/constants/index.ts"),
				b = s("./src/reddit/helpers/author.ts");
			! function(e) {
				e.Op = "op", e.Mod = "mod", e.ModTeam = "modTeam", e.Admin = "admin", e.AlumniAdmin = "alumniAdmin", e.Contractor = "contractor"
			}(n || (n = {}));
			var h = s("./src/reddit/components/Comments/Comment/TopMeta/Role.m.less"),
				f = s.n(h);
			const g = {
					[n.Admin]: {
						color: l.c,
						getLabel: () => r.fbt._("Admin", null, {
							hk: "Iku1o"
						}),
						tooltipPrefix: "CommentTopMeta--Admin--",
						tooltipTemplate: u.b
					},
					[n.Mod]: {
						color: l.d,
						getLabel: () => r.fbt._("Mod", null, {
							hk: "1b6Q1p"
						}),
						tooltipPrefix: "CommentTopMeta--Mod--",
						tooltipTemplate: e => Object(u.e)(e.subredditDisplayText)
					},
					[n.ModTeam]: {
						color: l.d,
						getLabel: () => r.fbt._("Mods", null, {
							hk: "2rP88U"
						}),
						tooltipPrefix: "CommentTopMeta--ModTeam--",
						tooltipTemplate: e => Object(u.e)(e.subredditDisplayText)
					},
					[n.Op]: {
						color: l.a,
						getLabel: () => r.fbt._("Op", null, {
							hk: "ERTp9"
						}),
						tooltipPrefix: "CommentTopMeta--OP--",
						tooltipTemplate: u.f
					},
					[n.AlumniAdmin]: {
						color: l.c,
						getLabel: () => r.fbt._("Admin", null, {
							hk: "Iku1o"
						}),
						tooltipPrefix: "CommentTopMeta--AdEm--",
						tooltipTemplate: u.a
					},
					[n.Contractor]: {
						color: l.a,
						getLabel: () => r.fbt._("Contractor", null, {
							hk: "2nhaY6"
						}),
						tooltipPrefix: "CommentTopMeta--Contractor--",
						tooltipTemplate: u.c
					}
				},
				x = e => {
					const t = Object(i.d)(),
						s = function(e) {
							if (e.isAdmin) return n.Admin;
							const t = e.isMod || e.distinguishType === C.H.MODERATOR;
							return t && e.author && Object(b.a)(e.author) ? n.ModTeam : t ? n.Mod : e.isOp ? n.Op : e.distinguishType === C.H.ALUMNI_ADMIN ? n.AlumniAdmin : e.authorIsContractor ? n.Contractor : null
						}(e.comment);
					if (!s) return null;
					if (s === n.Contractor && !e.renderContractorBadge) return null;
					const {
						tooltipPrefix: r,
						color: o,
						getLabel: c,
						tooltipTemplate: l
					} = g[s], h = c(), x = Object(u.d)(r, e.comment.id, e.renderedInOverlay), y = l(e), O = () => t(Object(m.h)({
						tooltipId: x
					}));
					return a.a.createElement(a.a.Fragment, null, a.a.createElement("span", {
						className: Object(d.a)(f.a.role, e.className),
						style: {
							color: o
						},
						id: x,
						onMouseEnter: O,
						onMouseLeave: O
					}, a.a.createElement("span", null, h), (s === n.Mod || s === n.ModTeam) && a.a.createElement(v, null)), a.a.createElement(p.c, {
						tooltipId: x,
						text: y
					}))
				},
				v = () => a.a.createElement("img", {
					alt: r.fbt._("Moderator Achievement", null, {
						hk: "20RhJI"
					}),
					className: f.a.modAchievement,
					src: `${c.a.assetPath}/img/powerups/moderator-achievement.svg`
				})
		},
		"./src/reddit/components/Comments/Comment/TopMeta/author.m.less": function(e, t, s) {
			e.exports = {
				authorHoverCard: "sMaSljeAO1a-nAhrURxdj",
				container: "NL6v1uLnaxK0IHIJdUdel"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/cakeDay.m.less": function(e, t, s) {
			e.exports = {
				cakedayIcon: "_12wHSVQW6wUCbn56VnIfI-"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/commentAuthorLink.m.less": function(e, t, s) {
			e.exports = {
				commentAuthorLink: "wM6scouPXXsFDSZmZPHRo"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/crowdControl.m.less": function(e, t, s) {
			e.exports = {
				crowdControlText: "_3UBJEBi_CJ8y1i9Up_67Hb"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/edited.m.less": function(e, t, s) {
			e.exports = {
				editedText: "_18WUrfxbke5CjwIjhXu6C-"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/index.m.less": function(e, t, s) {
			e.exports = {
				iconStyles: "S8WH2aCfP030wVxp0iR_o",
				AdminEmeritus: "xIZgDbR-AMck1mC6sZI1m",
				adminEmeritus: "xIZgDbR-AMck1mC6sZI1m",
				AdminIcon: "_2IdAWdzNdIq-LUdJv0lpD6",
				adminIcon: "_2IdAWdzNdIq-LUdJv0lpD6",
				ContractorIcon: "_39FDxNax8J3IkHXRxQmeJE",
				contractorIcon: "_39FDxNax8J3IkHXRxQmeJE",
				ModeratorIcon: "rZkjnStRKzlmtr__ixhKy",
				moderatorIcon: "rZkjnStRKzlmtr__ixhKy",
				OpIcon: "_3X_-kuWbD5_nVi9_eTAYVC",
				opIcon: "_3X_-kuWbD5_nVi9_eTAYVC",
				RightPositionedAuthorFlair: "_zMIUk6t-WDI7fxfkvD02",
				rightPositionedAuthorFlair: "_zMIUk6t-WDI7fxfkvD02",
				MetaSeparator: "yJGcpQjpmA13QcuUz2h0B",
				metaSeparator: "yJGcpQjpmA13QcuUz2h0B",
				publicPoints: "_2LXcsgibmlCEsBPk8MLy7e",
				NftAuthor: "kDnKKJWz2PJGoalLInCW1",
				nftAuthor: "kDnKKJWz2PJGoalLInCW1",
				MetaLink: "_1sA-1jNHouHDpgCp1fCQ_F",
				metaLink: "_1sA-1jNHouHDpgCp1fCQ_F",
				DeletedText: "_2Wu4MNMVl4bsJ9iVnQz0dF",
				deletedText: "_2Wu4MNMVl4bsJ9iVnQz0dF",
				container: "_3ezOJqKdLbgkHsXcfvS5SA",
				collapsed: "_2k27lgIDltx9kOzVGXt48i",
				hasBadges: "_1KMFaeLEhRikeFEOlWE9Ti",
				authorRole: "_3uDFtRr_CTErFPJQBtzECl",
				metaText: "_3_GZIIN1xcMEC5AVuv4kfa",
				separator: "_1PuBpmbH2FA5sozYR7EuCs",
				userBadges: "_3Ofd-Ek86mwX500i92F84q",
				cakeDay: "UG2sa-VYMzrn7D1iNXtfR",
				addModNote: "_3xk2cMvsSpPHBinHNwkDHi"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/lib/classNames/index.ts"),
				d = s("./src/lib/lessComponent.tsx"),
				l = s("./src/reddit/components/AwardBadges/index.tsx"),
				m = s("./src/reddit/components/CCM/AddModNoteCTA/index.tsx"),
				u = s("./src/reddit/components/Comments/Comment/TopMeta/CommentAuthorLink.tsx"),
				p = s("./src/reddit/components/Econ/PowerupsFlair/UserAchievementFlair.async.ts"),
				C = s("./src/reddit/components/Economics/SubredditPremium/Badges/UserDisplay/index.tsx"),
				b = s("./src/reddit/components/Flair/index.tsx"),
				h = s("./src/reddit/components/Governance/UserPublicPointsDisplay/async.tsx"),
				f = s("./src/reddit/components/LastAuthorModNoteIcon/index.tsx"),
				g = s("./src/reddit/components/PostTopMeta/index.tsx"),
				x = s("./src/reddit/controls/MetaData/index.tsx"),
				v = s("./src/reddit/helpers/flair.ts"),
				y = s("./src/reddit/helpers/trackers/features/powerupsFlair.ts"),
				O = s("./src/reddit/hooks/useTracking.ts"),
				E = s("./src/reddit/models/Comment/index.ts"),
				j = s("./src/reddit/selectors/gold/powerups/index.ts"),
				_ = s("./src/reddit/components/Comments/Comment/TopMeta/Author.tsx"),
				k = s("./src/config.ts"),
				L = s("./src/reddit/actions/tooltip.ts"),
				w = s("./src/reddit/components/InfoTextTooltip/index.tsx"),
				S = s("./src/reddit/components/Comments/Comment/TopMeta/tooltip.ts"),
				I = s("./src/reddit/components/Comments/Comment/TopMeta/cakeDay.m.less"),
				P = s.n(I);
			const N = e => {
				let {
					className: t,
					commentId: s,
					renderedInOverlay: r
				} = e;
				const i = Object(a.d)(),
					d = () => i(Object(L.h)({
						tooltipId: l
					})),
					l = Object(S.d)("CommentTopMeta--cakeday--", s, r),
					m = n.fbt._("Cake day", null, {
						hk: "1xptSi"
					});
				return o.a.createElement(o.a.Fragment, null, o.a.createElement("img", {
					className: Object(c.a)(P.a.cakedayIcon, t),
					src: `${k.a.assetPath}/img/powerups/flair_cakeday.png`,
					alt: m,
					id: l,
					onMouseEnter: d,
					onMouseLeave: d,
					"data-testid": "cakeday-icon"
				}), o.a.createElement(w.c, {
					tooltipId: l,
					text: m
				}))
			};
			var T = s("./src/reddit/components/Comments/Comment/TopMeta/Created.tsx"),
				M = s("./src/reddit/components/Comments/Comment/TopMeta/crowdControl.m.less"),
				R = s.n(M);
			const {
				fbt: F
			} = s("./node_modules/fbt/lib/FbtPublic.js"), B = () => o.a.createElement(x.a, {
				className: R.a.crowdControlText
			}, F._("Crowd Control", null, {
				hk: "4WgEW"
			}));
			var A = s("./src/reddit/components/Comments/Comment/TopMeta/Edited.tsx"),
				D = s("./src/reddit/constants/postLayout.ts"),
				U = s("./src/reddit/contexts/PageLayer/selectors.ts"),
				W = s("./src/reddit/helpers/isRemoved.ts"),
				H = s("./src/reddit/helpers/modTooltipTemplates/index.ts"),
				V = s("./src/reddit/helpers/showReportIndicator/index.ts"),
				Z = s("./src/reddit/hooks/usePageLayer.ts"),
				q = s("./src/reddit/icons/fonts/Approve/index.tsx"),
				z = s("./src/reddit/icons/fonts/Lock/index.tsx"),
				K = s("./src/reddit/icons/fonts/Remove/index.tsx"),
				G = s("./src/reddit/icons/fonts/Report/index.tsx"),
				Y = s("./src/reddit/icons/fonts/Spam/index.tsx"),
				J = s("./src/reddit/selectors/modQueue.ts"),
				Q = s("./src/reddit/components/Comments/Comment/TopMeta/modBadgeTooltip.m.less"),
				X = s.n(Q);
			const $ = e => {
				let {
					comment: t,
					ignoreLock: r,
					renderedInOverlay: i,
					isAdmin: c
				} = e;
				const d = Object(a.d)(),
					l = Object(Z.a)(),
					m = Object(a.e)(e => D.e[Object(U.V)(e, {
						pageLayer: l
					})] === D.d.Card),
					u = Object(a.e)(e => Object(J.b)(e, m)),
					p = e => () => d(Object(L.f)({
						tooltipId: e
					})),
					C = () => d(Object(L.i)()),
					b = e => Object(S.d)(e, t.id, i),
					h = b("CommentTopMeta--Approve--"),
					f = b("CommentTopMeta--Remove--"),
					g = b("CommentTopMeta--Report--"),
					x = b("CommentTopMeta--Spam--"),
					v = p(f);
				return o.a.createElement(o.a.Fragment, null, (t.approvedBy || t.isApproved) && !u && o.a.createElement(o.a.Fragment, null, o.a.createElement(q.a, {
					className: X.a.approveIcon,
					desc: Object(H.a)(t),
					id: h,
					onMouseEnter: p(h),
					onMouseLeave: C,
					isFilled: !0
				}), o.a.createElement(w.c, {
					tooltipId: h,
					text: Object(H.a)(t)
				})), Object(W.a)(t) && !u && o.a.createElement(o.a.Fragment, null, o.a.createElement(K.a, {
					className: X.a.removeIcon,
					desc: Object(H.b)(t),
					id: f,
					onMouseEnter: v,
					onMouseLeave: C,
					isFilled: !0
				}), o.a.createElement(w.c, {
					tooltipId: f,
					text: Object(H.b)(t)
				})), Object(W.a)(t) && t.isRemoved && !t.modNote && !t.modRemovalReason && !u && o.a.createElement("a", {
					className: X.a.removalReason,
					onClick: () => {
						Promise.all([s.e("CommentsPage~Reddit~RichTextEditor~reddit-components-LargePost~reddit-components-MediumPost~reddit-c~cad4f428"), s.e("removalReasonActions")]).then(s.bind(null, "./src/reddit/actions/removalReasons/index.ts")).then(e => d(e.fetchReasonsAndOpenModal(t.subredditId, [t.id])))
					}
				}, n.fbt._("Add a removal reason", null, {
					hk: "L6yrL"
				})), Object(W.a)(t) && !(t.isRemoved && !t.modNote && !t.modRemovalReason) && !u && o.a.createElement("a", {
					className: X.a.removalReason,
					onMouseEnter: v,
					onMouseLeave: C
				}, n.fbt._("Removal reason", null, {
					hk: "20NRw8"
				})), t.isLocked && !r && o.a.createElement(z.a, {
					className: X.a.lockIcon,
					desc: n.fbt._("Locked", null, {
						hk: "40Ju3g"
					}),
					isFilled: !0
				}), t.bannedBy && t.isSpam && !u && o.a.createElement(o.a.Fragment, null, o.a.createElement(Y.a, {
					className: X.a.spamIcon,
					desc: Object(H.d)(t),
					id: x,
					onMouseEnter: p(x),
					onMouseLeave: C,
					isFilled: !0
				}), o.a.createElement(w.c, {
					tooltipId: x,
					text: Object(H.d)(t)
				})), Object(V.a)(t) && !u && o.a.createElement(o.a.Fragment, null, o.a.createElement(G.a, {
					className: X.a.reportIcon,
					desc: Object(H.c)(t.numReports),
					id: g,
					onMouseEnter: p(g),
					onMouseLeave: C,
					isFilled: !0
				}), o.a.createElement(w.c, {
					tooltipId: g,
					text: Object(H.c)(t.numReports)
				})), t.isDeleted && c && !u && o.a.createElement(o.a.Fragment, null, o.a.createElement(K.a, {
					className: X.a.removeIcon,
					isFilled: !0
				}), o.a.createElement("span", {
					className: X.a.userDeletion
				}, n.fbt._("Comment deleted by user", null, {
					hk: "1Rtt4V"
				}))))
			};
			var ee = s("./src/reddit/components/Comments/Comment/TopMeta/Role.tsx"),
				te = s("./src/reddit/components/Comments/Comment/TopMeta/stickied.m.less"),
				se = s.n(te);
			const {
				fbt: ne
			} = s("./node_modules/fbt/lib/FbtPublic.js"), re = () => o.a.createElement(x.a, {
				className: se.a.stickiedText
			}, ne._("Stickied comment", null, {
				hk: "XUSav"
			}));
			var oe = s("./src/reddit/components/Comments/Comment/TopMeta/PostCommentHeader/index.m.less"),
				ae = s.n(oe);
			const ie = e => {
				const {
					className: t,
					collapsed: s,
					collapsedBecauseCrowdControl: r,
					comment: i,
					flair: d,
					ignoreLock: m,
					isModWithUserNotesPermissions: u,
					onCommentAuthorClick: k,
					onCommentTimestampClick: L,
					permalink: w,
					renderContractorBadge: S,
					renderedInOverlay: I,
					subredditDisplayText: P,
					isAdmin: M
				} = e, R = Object(O.a)(), F = i.subredditId, D = Object(a.e)(e => Object(j.e)(e, {
					subredditId: F
				}));
				if (i.isDeleted && !M) return o.a.createElement("div", {
					className: Object(c.a)(ae.a.container, t),
					"data-testid": "post-comment-header-deleted"
				}, o.a.createElement("span", {
					className: ae.a.authorLine
				}, o.a.createElement("span", {
					className: ae.a.metaText
				}, i.deletedBy === E.c.User ? n.fbt._("Comment deleted by user", null, {
					hk: "1Rtt4V"
				}) : n.fbt._("Comment removed by moderator", null, {
					hk: "E1t49"
				})), o.a.createElement(x.c, {
					className: ae.a.separator
				}), o.a.createElement(T.a, {
					key: "Created",
					className: ae.a.metaText,
					comment: i,
					compact: !0,
					permalink: w,
					renderedInOverlay: I
				})));
				return o.a.createElement("div", {
					className: Object(c.a)(ae.a.container, t),
					"data-testid": "post-comment-header"
				}, o.a.createElement("span", {
					className: ae.a.authorLine
				}, !Object(E.f)(i) && o.a.createElement(C.b, {
					className: ae.a.userBadges,
					badgeSize: 20,
					showAddCustom: !0,
					subredditId: i.subredditId,
					userId: i.authorId,
					uniqueIdentifier: i.id
				}), o.a.createElement("div", {
					className: ae.a.baselineItem
				}, o.a.createElement(_.a, {
					authorClassName: ae.a.author,
					collapsed: s,
					comment: i,
					onClick: k,
					renderedInOverlay: I
				})), !Object(E.f)(i) && u && o.a.createElement(f.a, {
					postOrComment: i,
					className: ae.a.LastAuthorModNoteIcon
				}), r && o.a.createElement(B, null), o.a.createElement(ee.a, {
					className: ae.a.role,
					comment: i,
					subredditDisplayText: P,
					renderContractorBadge: S,
					renderedInOverlay: I
				}), i.isAuthorCakeday ? o.a.createElement(N, {
					className: ae.a.cakeDay,
					commentId: i.id,
					renderedInOverlay: I
				}) : !Object(E.f)(i) && D && o.a.createElement(p.a, {
					className: ae.a.achievementFlair,
					subredditId: i.subredditId,
					userId: i.authorId,
					onHover: () => {
						R(Object(y.b)(i.id, i.subredditId, i.authorId))
					},
					showPopupOnHover: !0
				}), o.a.createElement(h.a, {
					className: ae.a.cryptoPoints,
					contentId: i.id,
					subredditId: i.subredditId,
					userId: i.authorId,
					username: i.author
				}), o.a.createElement(x.c, {
					className: ae.a.separator
				}), o.a.createElement(T.a, {
					key: "Created",
					className: ae.a.metaText,
					comment: i,
					compact: !0,
					onClick: L,
					permalink: w,
					renderedInOverlay: I
				}), i.isStickied && o.a.createElement(o.a.Fragment, null, o.a.createElement(x.c, {
					className: ae.a.separator
				}), o.a.createElement(re, null)), i.editedAt && o.a.createElement(o.a.Fragment, null, o.a.createElement(x.c, {
					className: ae.a.separator
				}), o.a.createElement(A.a, {
					compact: !0,
					editedAt: i.editedAt
				})), o.a.createElement($, {
					comment: i,
					ignoreLock: m,
					renderedInOverlay: I,
					isAdmin: M
				}), o.a.createElement(l.a, {
					thing: i,
					tooltipType: I ? g.f.Lightbox : void 0
				})), d && !Object(v.o)(d) && o.a.createElement("span", {
					className: ae.a.userFlairLine
				}, o.a.createElement(b.c, {
					className: ae.a.flair,
					flair: d,
					forceSmallEmojis: !0
				})))
			};
			var ce = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				de = s("./src/reddit/selectors/economics.ts"),
				le = s("./src/reddit/models/Flair/index.ts"),
				me = s("./src/reddit/selectors/comments.ts"),
				ue = s("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				pe = s("./src/reddit/selectors/moderatorPermissions.ts"),
				Ce = s("./src/reddit/selectors/subreddit.ts"),
				be = s("./src/reddit/selectors/userFlair.ts"),
				he = s("./src/reddit/components/Comments/Comment/TopMeta/index.m.less"),
				fe = s.n(he);

			function ge() {
				return (ge = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const xe = d.a.wrapped(b.c, "RightPositionedAuthorFlair", fe.a),
				ve = d.a.span("DeletedText", fe.a),
				ye = d.a.wrapped(x.a, "MetaSeparator", fe.a),
				Oe = Object(a.b)(() => Object(i.c)({
					hasBadges: (e, t) => {
						let {
							comment: s
						} = t;
						return !!Object(de.q)(e, s.subredditId, s.authorId).length
					},
					subredditDisplayText: (e, t) => {
						const s = Object(Ce.N)(e, {
							commentId: t.comment.id
						});
						return s ? s.displayText : ""
					},
					flairPosition: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(be.e)(e, {
							subredditId: s.subredditId
						})
					},
					commentPermalink: (e, t) => Object(me.m)(e, {
						commentId: t.comment.id
					}),
					isBlockingInterstitialEnabled: ue.b,
					isBlockingInterstitialV2Enabled: ue.c,
					isModWithUserNotesPermissions: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(pe.i)(e, s.subredditId)
					}
				}));
			t.a = Oe(e => {
				const {
					children: t,
					className: s,
					collapsed: n,
					collapsedBecauseCrowdControl: r,
					comment: a,
					commentPermalink: i,
					commentsPageKey: d,
					compact: u,
					flair: p,
					flairPosition: f,
					hasBadges: v,
					hideAwards: y = !1,
					ignoreFlairPosition: O,
					ignoreLock: j,
					isAdmin: k,
					isBlockingInterstitialEnabled: L,
					isBlockingInterstitialV2Enabled: w,
					isModWithUserNotesPermissions: S,
					isEmbeddedLiveChat: I,
					isPostComment: P,
					onCommentAuthorClick: N,
					onCommentTimestampClick: M,
					renderContractorBadge: R,
					renderedInOverlay: F,
					subredditDisplayText: D,
					userHasNft: U
				} = e, W = o.a.createElement(o.a.Fragment, null, o.a.createElement(ce.b, {
					commentId: a.id
				}), o.a.createElement(ce.a, {
					commentId: a.id,
					commentsPageKey: d
				}));
				if (P) return o.a.createElement(o.a.Fragment, null, o.a.createElement(ie, {
					className: Object(c.a)(s, {
						[fe.a.collapsed]: n
					}),
					collapsed: n,
					collapsedBecauseCrowdControl: r,
					comment: a,
					flair: p || null,
					ignoreLock: j,
					isAdmin: k,
					isModWithUserNotesPermissions: S,
					onCommentAuthorClick: N,
					onCommentTimestampClick: M,
					permalink: i,
					renderContractorBadge: !!R,
					renderedInOverlay: F,
					subredditDisplayText: D
				}), W);
				if (a.isDeleted) return o.a.createElement(Ee, ge({}, e, {
					className: Object(c.a)(s, fe.a.container, {
						[fe.a.collapsed]: n
					})
				}));
				if (n) return o.a.createElement(je, ge({}, e, {
					className: Object(c.a)(s, fe.a.container, {
						[fe.a.collapsed]: n
					})
				}));
				const H = !O && f === le.b.Left;
				return o.a.createElement("div", {
					className: Object(c.a)(s, fe.a.container, {
						[fe.a.collapsed]: n,
						[fe.a.hasBadges]: v
					}),
					"data-testid": "comment-top-meta"
				}, p && H && o.a.createElement(b.c, {
					flair: p,
					forceSmallEmojis: u
				}), !Object(E.f)(a) && o.a.createElement(C.b, {
					className: fe.a.userBadges,
					showAddCustom: !0,
					subredditId: a.subredditId,
					userId: a.authorId,
					uniqueIdentifier: a.id
				}), t && t, o.a.createElement(_.a, {
					authorClassName: U ? fe.a.NftAuthor : void 0,
					collapsed: n,
					comment: a,
					isEmbeddedLiveChat: I,
					isStrong: !!u,
					onClick: N,
					renderedInOverlay: F
				}), r && o.a.createElement(B, null), r && o.a.createElement(x.c, {
					className: fe.a.metaText,
					key: "crowdControlSeparator"
				}), p && !H && o.a.createElement(xe, {
					flair: p,
					forceSmallEmojis: u
				}), !u && o.a.createElement(h.a, {
					className: fe.a.publicPoints,
					contentId: a.id,
					metaSeparator: o.a.createElement(x.c, {
						className: fe.a.metaText
					}),
					subredditId: a.subredditId,
					userId: a.authorId,
					username: a.author
				}), W, o.a.createElement(ee.a, {
					className: fe.a.authorRole,
					comment: a,
					subredditDisplayText: D,
					renderContractorBadge: !!R,
					renderedInOverlay: F
				}), !u && o.a.createElement(o.a.Fragment, null, !a.isDeleted && !P && o.a.createElement(o.a.Fragment, null, o.a.createElement(x.b, {
					className: fe.a.metaText,
					isScoreHidden: a.isScoreHidden,
					score: a.score
				}), o.a.createElement(x.c, {
					className: fe.a.metaText,
					key: "scoreCreatedSeparator"
				})), o.a.createElement(T.a, {
					key: "Created",
					className: fe.a.MetaLink,
					comment: a,
					permalink: i,
					renderedInOverlay: F,
					isBlockingInterstitialEnabled: L || w
				}), a.isStickied && o.a.createElement(o.a.Fragment, null, o.a.createElement(x.c, {
					className: fe.a.separator
				}), o.a.createElement(re, null)), a.editedAt && o.a.createElement(o.a.Fragment, null, o.a.createElement(x.c, {
					className: fe.a.separator
				}), o.a.createElement(A.a, {
					editedAt: a.editedAt
				}))), o.a.createElement($, {
					comment: a,
					ignoreLock: j,
					renderedInOverlay: F
				}), !y && o.a.createElement(l.a, {
					thing: a,
					tooltipType: F ? g.f.Lightbox : void 0
				}), S && o.a.createElement(m.a, {
					postOrComment: a,
					className: fe.a.addModNote
				}))
			});
			const Ee = e => {
					const {
						childrenInfo: t,
						collapsed: s,
						className: r,
						comment: a,
						commentPermalink: i,
						isBlockingInterstitialEnabled: c,
						isBlockingInterstitialV2Enabled: d,
						renderedInOverlay: l
					} = e;
					return o.a.createElement("div", {
						className: r
					}, o.a.createElement(ve, null, a.deletedBy === E.c.User ? n.fbt._("Comment deleted by user", null, {
						hk: "1Rtt4V"
					}) : n.fbt._("Comment removed by moderator", null, {
						hk: "E1t49"
					})), o.a.createElement(T.a, {
						key: "Created",
						className: fe.a.MetaLink,
						comment: a,
						permalink: i,
						renderedInOverlay: l,
						isBlockingInterstitialEnabled: c || d
					}), s && _e({
						childrenInfo: t
					}))
				},
				je = e => {
					const {
						comment: t,
						className: s,
						childrenInfo: n,
						renderedInOverlay: r,
						collapsed: a,
						commentPermalink: i,
						isBlockingInterstitialEnabled: c,
						isBlockingInterstitialV2Enabled: d
					} = e;
					return o.a.createElement("div", {
						className: s
					}, o.a.createElement("div", null, o.a.createElement(u.a, {
						comment: t,
						isAuthorDeleted: Object(E.f)(t),
						collapsed: a
					})), o.a.createElement(x.b, {
						className: fe.a.metaText,
						isScoreHidden: t.isScoreHidden,
						score: t.score
					}), o.a.createElement(x.c, {
						className: fe.a.metaText,
						key: "scoreCreatedSeparator"
					}), o.a.createElement(T.a, {
						key: "Created",
						className: fe.a.MetaLink,
						comment: t,
						permalink: i,
						renderedInOverlay: r,
						isBlockingInterstitialEnabled: c || d
					}), _e({
						childrenInfo: n
					}))
				},
				_e = e => {
					const {
						hasContinueThread: t,
						numChildren: s
					} = e.childrenInfo || {
						hasContinueThread: !1,
						numChildren: 0
					};
					return o.a.createElement(ye, {
						className: fe.a.metaText
					}, t ? n.fbt._({
						"*": "More than {number} children",
						_1: "More than 1 child"
					}, [n.fbt._plural(s, "number")], {
						hk: "13XC7a"
					}) : n.fbt._({
						"*": "{number} children",
						_1: "1 child"
					}, [n.fbt._plural(s, "number")], {
						hk: "dhX9w"
					}))
				}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/modBadgeTooltip.m.less": function(e, t, s) {
			e.exports = {
				approveIcon: "_3Jlybj1GmQS_PfZVxE6yR1",
				automoderatorIcon: "_2EBjdWEqs2dwPePq0_1vJn",
				lockIcon: "YjyVr4SnBmO7WorLVMXq5",
				removeIcon: "_3M_jIwyB1POxBFR2jnGIp_",
				reportIcon: "_3hI84iVaolaHi85h6liPyp",
				spamIcon: "MufLXlXcv1oes9OlakuXr",
				removed: "_2LQnjoTNHDUWKBOoq2gTlm",
				removalReason: "EM8fL_jC3oe9bruIOZt2U",
				userDeletion: "_1KVzcRpEm0U5vCgrZbgiyN"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/stickied.m.less": function(e, t, s) {
			e.exports = {
				stickiedText: "_2wd-K5Djdc9TGPRGDgmkpX"
			}
		},
		"./src/reddit/components/Comments/Comment/TopMeta/tooltip.ts": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return r
			})), s.d(t, "b", (function() {
				return o
			})), s.d(t, "a", (function() {
				return a
			})), s.d(t, "e", (function() {
				return i
			})), s.d(t, "f", (function() {
				return c
			})), s.d(t, "c", (function() {
				return d
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js");
			const r = function(e, t) {
					let s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					return `${e}${t}${s?"inOverlay":""}`
				},
				o = () => n.fbt._("Reddit admin, speaking officially", null, {
					hk: "3vg8wE"
				}),
				a = () => n.fbt._("Reddit admin emeritus", null, {
					hk: "1Md5AV"
				}),
				i = e => n.fbt._("Moderator of {subredditDisplayText}, speaking officially", [n.fbt._param("subredditDisplayText", e)], {
					hk: "3pHm3n"
				}),
				c = () => n.fbt._("Original Poster", null, {
					hk: "3DqK8z"
				}),
				d = () => n.fbt._("Reddit contractor", null, {
					hk: "3APwEh"
				})
		},
		"./src/reddit/components/Comments/Comment/index.m.less": function(e, t, s) {
			e.exports = {
				CommentWrapper: "P8SGAKMtRxNwlmLz1zdJu",
				commentWrapper: "P8SGAKMtRxNwlmLz1zdJu",
				redesign: "HZ-cv9q391bm8s7qT54B3",
				voteButton: "_2m5vzALl8kQdr9kwIFUo5t",
				upDownVote: "_22nWXKAY6OzAfK5GcUqWV2",
				score: "_3ChHiOyYyUkpZ_Nm3ZyM2M",
				ActionBar: "_3KgrO85L1p9wQbgwG27q4y",
				actionBar: "_3KgrO85L1p9wQbgwG27q4y",
				HorizontalVotes: "_1ewTEGuogtFmDvDII2T2Yy",
				horizontalVotes: "_1ewTEGuogtFmDvDII2T2Yy",
				FlatList: "_2_lhaFUJdP8q0o2L9MN2TN",
				flatList: "_2_lhaFUJdP8q0o2L9MN2TN",
				ExpandButton: "_1nGapmdexvR0BuOkfAi6wa",
				expandButton: "_1nGapmdexvR0BuOkfAi6wa",
				hidden: "_1zN1-lYh2LfbYOMAho_O8g",
				visible: "O_Ica0k2O4KFcZyNfsJDU",
				ErrorText: "_3XArRVBsKuWegVHX9CQjH-",
				errorText: "_3XArRVBsKuWegVHX9CQjH-",
				CommentBody: "_3cjCphgls6DH-irkVaA0GM",
				commentBody: "_3cjCphgls6DH-irkVaA0GM",
				restrictHeight: "_2SI6K-u7PZ8koDfUmq7jlz",
				EditCommentForm: "JchsqHyN3thfSnN8dUM3",
				editCommentForm: "JchsqHyN3thfSnN8dUM3",
				AuthorHoverDiv: "ZvAy-PJfJmB8pzQxpz1sS",
				authorHoverDiv: "ZvAy-PJfJmB8pzQxpz1sS",
				UserIconContainer: "_3GfQMgsm3HGd3838lwqCST",
				userIconContainer: "_3GfQMgsm3HGd3838lwqCST",
				UserIconContainerSmall: "zAxFYkzSByRTsKWHEMfFF",
				userIconContainerSmall: "zAxFYkzSByRTsKWHEMfFF",
				UserIcon: "_13ScjOmi6dGdJw0JAonQEr",
				userIcon: "_13ScjOmi6dGdJw0JAonQEr",
				V1NftTreatment: "_3yYNickUtSp9utejxh7dFL",
				v1NftTreatment: "_3yYNickUtSp9utejxh7dFL",
				topSupporterIcon: "PjnQ0fgBT0oSZ9nR8HeaJ",
				VerticalVotes: "kB7GZ7EzNg1Msq-nEnY0z",
				verticalVotes: "kB7GZ7EzNg1Msq-nEnY0z",
				CommentContentWrapper: "_3tw__eCCe7j-epNCKGXUKk",
				commentContentWrapper: "_3tw__eCCe7j-epNCKGXUKk",
				isPendingDeletion: "_2R8NbVFaqNnBbuA7o2osje",
				isRemoved: "_2zA6eSGIr_oQU7np0uNqoB",
				isLocked: "t8jgOblBrQTKWHnVy0zGD",
				isActive: "_1vvFtxiq5874iIdCUYlL-d",
				highlightComment: "_2ym9uYDdCxu8P4UFCLNCgE",
				topLevel: "_1z5rdmX8TDr6mqwNv7A70U",
				focused: "_1Sy9NCNbLA9uJZj-qgUrMG",
				noSpacing: "_3nqqnHjXPJkfr8j5t_I85P",
				TopMeta: "_1S45SPAIb30fsXtEcKPSdt",
				topMeta: "_1S45SPAIb30fsXtEcKPSdt",
				noFlair: "_3LqBzV8aCO9tge99jHiUGy",
				collapsed: "_3c9Go6433BnvYx8_7MkPnt",
				CommentCreation: "_2jhbZV6mVCM5Ma7Z376DW2",
				commentCreation: "_2jhbZV6mVCM5Ma7Z376DW2",
				commentPerfMarkVisibility: "_2CkgPEY8ljDZH3np9UY1ws"
			}
		},
		"./src/reddit/components/Comments/Comment/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/reddit/models/PostDraft/index.ts"),
				d = s("./src/lib/classNames/index.ts"),
				l = s("./src/lib/makeDraftKey/index.ts"),
				m = s("./src/lib/objectSelector/index.ts"),
				u = s("./src/reddit/actions/comment/index.ts"),
				p = s("./src/reddit/actions/comment/authoring.ts"),
				C = s("./src/reddit/actions/comment/moderation.ts"),
				b = s("./src/reddit/components/CommentCreation/Loader.tsx"),
				h = s("./src/reddit/icons/fonts/Expand/index.tsx"),
				f = s("./src/reddit/components/Comments/Comment/ExpandButton/index.m.less"),
				g = s.n(f);

			function x() {
				return (x = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			var v, y, O = s("./node_modules/lodash/defer.js"),
				E = s.n(O),
				j = s("./src/lib/collectible-expressions/index.ts"),
				_ = s("./src/lib/lessComponent.tsx"),
				k = s("./src/reddit/actions/toaster.ts"),
				L = s("./src/reddit/actions/tooltip.ts"),
				w = s("./src/reddit/helpers/getRichTextContent/index.ts"),
				S = s("./src/reddit/helpers/trackers/modTools.ts"),
				I = s("./src/reddit/selectors/tooltip.ts"),
				P = s("./src/reddit/actions/gold/modals.ts"),
				N = s("./src/reddit/actions/modal.ts"),
				T = s("./src/reddit/actions/reportFlow/index.ts"),
				M = s("./src/reddit/helpers/correlationIdTracker.ts"),
				R = s("./src/reddit/helpers/hasModPostPermissions/index.ts"),
				F = s("./src/reddit/helpers/trackers/lightbox.ts"),
				B = s("./src/reddit/models/Comment/index.ts"),
				A = s("./src/reddit/selectors/activeModalId.ts"),
				D = s("./src/reddit/selectors/comments.ts"),
				U = s("./src/reddit/selectors/experiments/reportingRevampDesktop.ts"),
				W = s("./src/reddit/selectors/gold/purchaseCatalog.ts"),
				H = s("./src/reddit/selectors/posts.ts"),
				V = s("./src/reddit/selectors/subreddit.ts"),
				Z = s("./src/reddit/selectors/user.ts"),
				q = s("./src/reddit/components/CommentModModeDropdown/index.tsx"),
				z = s("./src/reddit/components/Comments/Comment/Flatlist/breakpoints.m.less"),
				K = s.n(z);
			! function(e) {
				e.HideIfVWSmaller = "HideIfVWSmaller", e.HideIfVWLarger = "HideIfVWLarger"
			}(v || (v = {})),
			function(e) {
				e.LoggedInUser = "LoggedInUserGroup", e.Moderator = "ModeratorGroup"
			}(y || (y = {}));
			const G = (e, t) => {
					const s = K.a[t],
						n = K.a[e];
					return Object(d.a)(s, n)
				},
				Y = e => Object(d.a)(K.a[`depth${Math.min(3*Math.ceil(e.depth/3),10)}`], {
					[K.a.isInOverlay]: e.isInOverlay,
					[K.a.isModModeEnabled]: e.isModModeEnabled,
					[K.a.isFollowCommentEnabled]: e.isFollowCommentEnabled
				});
			var J = s("./src/reddit/components/Comments/Comment/ModToolsFlatlist/index.tsx"),
				Q = s("./src/reddit/components/Comments/Comment/ModToolsFlatlist/RestrictedButton.tsx"),
				X = s("./src/reddit/components/ConfirmUserActionModal/index.tsx"),
				$ = s("./src/reddit/components/DistinguishCommentDropdown/index.tsx"),
				ee = s("./src/reddit/components/ModActionsMenu/index.tsx"),
				te = s("./src/reddit/components/ModModeReports/helpers.ts"),
				se = s("./src/reddit/components/OverflowMenu/index.tsx"),
				ne = s("./src/reddit/components/ReportFlow/index.tsx"),
				re = s("./src/reddit/components/ReportFlow/new.tsx"),
				oe = s("./src/reddit/components/ShareMenu/index.tsx"),
				ae = s("./src/reddit/components/TrackingHelper/index.tsx"),
				ie = s("./src/reddit/components/ViewReportsDropdown/Loader.ts"),
				ce = s("./src/reddit/controls/CheckboxMenuItem/index.tsx"),
				de = s("./src/reddit/layout/row/Inline/index.tsx"),
				le = s("./src/reddit/components/Econ/GiftOrFreeAwardIcon/index.tsx"),
				me = s("./src/reddit/icons/fonts/index.tsx"),
				ue = s("./src/reddit/icons/fonts/Comment/index.tsx"),
				pe = s("./src/reddit/icons/fonts/DistinguishShield/index.tsx"),
				Ce = s("./src/reddit/icons/fonts/IgnoreReport/index.tsx"),
				be = s("./src/reddit/icons/fonts/ModActions/index.tsx"),
				he = s("./src/reddit/icons/fonts/Report/index.tsx"),
				fe = s("./src/reddit/models/Toast/index.ts"),
				ge = s("./src/devPlatform/components/ContextActions/ContextActionsLoader.tsx"),
				xe = s("./src/devPlatform/constants.ts"),
				ve = s("./src/reddit/selectors/experiments/devPlatform.ts"),
				ye = s("./src/reddit/selectors/experiments/econ/index.ts"),
				Oe = s("./src/reddit/components/Comments/Comment/Flatlist/index.m.less"),
				Ee = s.n(Oe);
			const je = _.a.wrapped(ue.a, "CommentIcon", Ee.a),
				_e = _.a.wrapped(he.a, "Report", Ee.a),
				ke = _.a.wrapped(Ce.a, "IgnoreReport", Ee.a),
				Le = _.a.wrapped(ee.a, "ModActionsMenu", Ee.a),
				we = _.a.div("OverflowMenuSpacer", Ee.a),
				Se = _.a.wrapped(se.a, "DropdownRow", Ee.a),
				Ie = _.a.wrapped(de.a, "Flatlist", Ee.a),
				Pe = _.a.button("Button", Ee.a),
				Ne = _.a.wrapped(J.a, "ModToolsFlatlist", Ee.a),
				Te = _.a.wrapped(ie.a, "ViewReportsDropdown", Ee.a),
				Me = e => `Comment-${e}--Modal--DeleteComment`,
				Re = e => `Distinguish--Dropdown--${e}`,
				Fe = e => `${e}-overflow-menu`,
				Be = e => `View--Reports--${e}`,
				Ae = Object(i.c)({
					claimedFreeAward: W.b,
					currentUser: Z.m,
					isConfirmModalOpen: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(A.a)(e) === Me(s.id)
					},
					isDistinguishDropdownOpen: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(I.b)(Re(s.id))(e)
					},
					isFollowed: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(D.y)(e, {
							commentId: s.id
						})
					},
					isFollowedCommentExpired: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(D.A)(e, {
							commentId: s.id
						})
					},
					isPendingDeletion: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(D.E)(e, {
							commentId: s.id
						})
					},
					isReportsDropdownOpen: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(I.b)(Be(s.id))(e)
					},
					isLoggedIn: Z.S,
					postIsArchived: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(H.z)(e, {
							postId: s.postId
						})
					},
					postAuthorIsBlocked: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(H.w)(e, {
							postId: s.postId
						})
					},
					postIsLocked: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(H.A)(e, {
							postId: s.postId
						})
					},
					commentPermalink: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(D.m)(e, {
							commentId: s.id
						})
					},
					reportFlowIsOpen: (e, t) => {
						let {
							comment: s
						} = t;
						var n, r;
						return (null === (r = null === (n = e.features) || void 0 === n ? void 0 : n.reportFlow) || void 0 === r ? void 0 : r.postOrCommentId) === s.id
					},
					sendRepliesToggled: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(D.K)(e, {
							commentId: s.id
						})
					},
					subredditAboutInfo: (e, t) => {
						let {
							subreddit: s
						} = t;
						return s ? Object(V.z)(e, {
							subredditName: s.name
						}) : void 0
					},
					subredditOrProfile: (e, t) => {
						let {
							comment: s
						} = t;
						return Object(H.U)(e, {
							postId: s.postId
						})
					},
					reportingRevampEnabled: U.a,
					isPostUnrepliable: (e, t) => {
						let {
							comment: s
						} = t;
						var n;
						return null === (n = Object(H.F)(e, {
							postId: s.postId
						})) || void 0 === n ? void 0 : n.unrepliableReason
					},
					isAwardsSunsetEnabled: ye.d,
					isDevPlatformEnabled: e => Object(ve.a)(e)
				});
			class De extends o.a.Component {
				constructor() {
					super(...arguments), this.sendCommentEventWithName = e => this.props.sendEvent(Object(F.b)(this.props.comment.postId, `comment_${e}`)), this.sendCommentModEventWithName = e => this.props.sendEvent(Object(S.c)(e, this.props.comment.id)), this.sendCommentReportEvent = e => this.props.sendEvent(Object(S.g)(e, this.props.comment.id)), this.handleSave = () => {
						this.props.comment.isSaved ? this.sendCommentModEventWithName("unsave") : this.sendCommentModEventWithName("save"), this.props.onToggleSave()
					}, this.handleEdit = () => {
						const e = Object(w.a)(this.props.comment);
						Object(j.a)(e) ? this.props.showToast({
							text: n.fbt._("Sorry, currently you cannot edit Collectible Expression comments on Web.", null, {
								hk: "4dlNfM"
							}),
							duration: 8e3,
							kind: fe.b.SuccessLockComment
						}) : (this.props.sendEvent(Object(S.f)("edit", this.props.comment.id)), this.props.handleEdit())
					}, this.handleGild = async () => {
						var e;
						const t = Object(M.d)(M.a.GildingFlow, !0);
						this.props.onGildClick(t, null === (e = this.props.claimedFreeAward) || void 0 === e ? void 0 : e.id);
						const {
							clickGildEvent: n
						} = await Promise.resolve().then(s.bind(null, "./src/reddit/helpers/trackers/gild.ts"));
						this.props.sendEvent(n(this.props.comment.id))
					}, this.handleDelete = () => {
						this.props.sendEvent(Object(S.f)("delete", this.props.comment.id)), this.props.toggleDeleteCommentModal()
					}, this.handleReportClick = () => {
						this.props.sendEvent(Object(S.c)("report", this.props.comment.id)), this.props.onReportClick()
					}, this.handleDistinguishToggle = () => {
						this.props.sendEvent(Object(S.c)("mod_distinguish_menu", this.props.comment.id)), this.props.onToggleDistinguishDropdown()
					}, this.handleFollow = () => {
						const {
							onCommentFollow: e,
							sendEvent: t,
							comment: s,
							isFollowed: n
						} = this.props;
						e(n ? B.a.UNFOLLOWED : B.a.FOLLOWED), t(n ? Object(S.h)("follow", s.id) : Object(S.c)("follow", s.id))
					}, this.sendCommentDistinguishEvent = e => this.props.sendEvent(Object(S.d)(e, this.props.comment.id)), this.renderReportFlow = () => this.props.reportingRevampEnabled ? o.a.createElement(re.a, {
						withOverlay: !0,
						commentId: this.props.comment.id,
						overlayCustomStyles: ne.b,
						postId: this.props.comment.postId,
						timestamp: this.context.currentTime
					}) : o.a.createElement(ne.a, {
						withOverlay: !0,
						commentId: this.props.comment.id,
						overlayCustomStyles: ne.b,
						postId: this.props.comment.postId,
						timestamp: this.context.currentTime
					})
				}
				componentDidMount() {
					this.props.isFollowedCommentExpired && this.props.onFollowedCommentExpire()
				}
				render() {
					const {
						comment: e,
						className: t,
						currentUser: s,
						commentPermalink: a,
						deleteComment: i,
						depth: c,
						handleReply: l,
						isAvatarsInCommentsEnabled: m,
						isFollowed: u,
						isLoggedIn: p,
						isPendingDeletion: C,
						onDistinguishComment: b,
						onIgnoreReports: h,
						onToggleReportsDropdown: f,
						moderatorPermissions: g,
						modModeEnabled: x,
						postIsArchived: O,
						postAuthorIsBlocked: j,
						postIsLocked: _,
						renderedInOverlay: k,
						sendEvent: L,
						subreddit: w,
						subredditAboutInfo: I,
						toggleDeleteCommentModal: P,
						toggleSendReplies: N,
						trackCommentClick: T,
						isPostUnrepliable: M,
						isAwardsSunsetEnabled: F,
						isDevPlatformEnabled: A
					} = this.props, D = Object(R.a)(g), U = !!s && s.displayText === e.author, W = !!s && s.isEmployee, H = e.unrepliableReason, V = !j && !Object(B.g)(e) && !M && !H && !M && !(I && I.userIsBanned) && (_ || O || D && p || e.isLocked ? D && p : p || m), Z = Object(te.a)(e), z = D && U && !e.bannedBy, K = U && W && !e.bannedBy, J = z || K, ee = !F && !Object(B.g)(e) && s && e.isGildable && !M && !(H && "[deleted]" === e.author), ne = !O && !H, re = [];
					V && re.push(o.a.createElement(Pe, {
						disabled: C,
						key: "reply",
						onClick: () => {
							l(), E()(() => T("reply", e.id)())
						}
					}, o.a.createElement(je, null), n.fbt._("Reply", null, {
						hk: "dq9W0"
					}))), ee && re.push({
						breakpointGroup: y.LoggedInUser,
						icon: o.a.createElement(le.a, null),
						isIconOverflowOnly: !0,
						key: "award",
						onClick: this.handleGild,
						text: () => n.fbt._("Give Award", null, {
							hk: "1GmM1v"
						})
					}), re.push(o.a.createElement(oe.a, {
						dropdownId: `${e.id}-comment-share-menu`,
						key: "share",
						permalink: a,
						sendEventWithName: this.sendCommentEventWithName,
						subredditType: null == w ? void 0 : w.type
					}, o.a.createElement(Pe, {
						onClick: () => this.sendCommentEventWithName("share")
					}, n.fbt._("Share", null, {
						hk: "3Ak3Tw"
					})))), U || re.push({
						breakpointGroup: y.LoggedInUser,
						icon: o.a.createElement(he.a, null),
						isIconOverflowOnly: !0,
						key: "report",
						onClick: this.handleReportClick,
						text: () => n.fbt._("Report", null, {
							hk: "4oVcnd"
						})
					}), re.push({
						breakpointGroup: y.LoggedInUser,
						icon: o.a.createElement(me.a, {
							name: e.isSaved ? "saved" : "save"
						}),
						isIconOverflowOnly: !0,
						key: "save",
						onClick: this.handleSave,
						text: e.isSaved ? () => n.fbt._("Unsave", null, {
							hk: "48MWs0"
						}) : () => n.fbt._("Save", null, {
							hk: "4yMsMq"
						})
					}), U && re.push({
						breakpointGroup: y.LoggedInUser,
						icon: o.a.createElement(me.a, {
							name: "edit"
						}),
						isIconOverflowOnly: !0,
						key: "edit",
						onClick: this.handleEdit,
						text: () => n.fbt._("Edit", null, {
							hk: "1nftDt"
						})
					}), ne && re.push({
						breakpointGroup: y.LoggedInUser,
						icon: o.a.createElement(me.a, {
							name: "notification",
							isFilled: u
						}),
						isIconOverflowOnly: !0,
						key: "follow",
						onClick: this.handleFollow,
						text: u ? () => n.fbt._("Followed", null, {
							hk: "43P2OR"
						}) : () => n.fbt._("Follow", null, {
							hk: "1vo8lJ"
						})
					});
					const ae = re.map(e => o.a.isValidElement(e) ? e : o.a.createElement(Pe, {
							className: G(e.breakpointGroup, v.HideIfVWSmaller),
							disabled: C,
							key: e.key,
							onClick: e.onClick
						}, !e.isIconOverflowOnly && e.icon, e.text())),
						ie = re.map(e => o.a.isValidElement(e) ? null : o.a.createElement(Se, {
							className: G(e.breakpointGroup, v.HideIfVWLarger),
							displayText: e.text(),
							key: e.key,
							onClick: e.onClick,
							textClassName: Ee.a.dropdownRowText
						}, e.icon));
					return o.a.createElement(r.Fragment, null, o.a.createElement(Ie, {
						className: Object(d.a)(Y({
							depth: c,
							isInOverlay: k,
							isModModeEnabled: D && x || A,
							isFollowCommentEnabled: ne
						}), t)
					}, ae, o.a.createElement(we, {
						className: U ? void 0 : G(y.LoggedInUser, v.HideIfVWLarger)
					}, o.a.createElement(se.b, {
						className: Ee.a.overflowMenu,
						disabled: C,
						dropdownId: Fe(e.id),
						onClick: () => L(Object(S.c)("comment_overflow_menu", e.id))
					}, ie, U && o.a.createElement(o.a.Fragment, null, o.a.createElement(Se, {
						displayText: n.fbt._("Delete comment", null, {
							hk: "4lMUDO"
						}),
						onClick: this.handleDelete,
						textClassName: Ee.a.dropdownRowText
					}, o.a.createElement(me.a, {
						name: "delete"
					})), o.a.createElement(ce.a, {
						text: n.fbt._("Send me reply notifications", null, {
							hk: "4ebRRu"
						}),
						onClick: N,
						isSelected: this.props.sendRepliesToggled
					})), o.a.createElement(ge.a, {
						contextType: xe.a.COMMENT,
						contextData: e
					}))), this.props.isConfirmModalOpen && o.a.createElement(X.a, {
						actionText: n.fbt._("Delete", null, {
							hk: "1bl9Tc"
						}),
						cancelActionText: n.fbt._("Keep", null, {
							hk: "3hCBEF"
						}),
						headerText: n.fbt._("Delete comment", null, {
							hk: "2EYJqi"
						}),
						modalText: n.fbt._("Are you sure you want to delete your comment?", null, {
							hk: "OzOZd"
						}),
						onConfirm: i,
						toggleModal: P,
						trackClick: () => {},
						withOverlay: !0
					}), D && o.a.createElement(o.a.Fragment, null, x && o.a.createElement(Ne, {
						className: G(y.Moderator, v.HideIfVWSmaller),
						comment: e,
						isCommentAuthor: U
					}), o.a.createElement(Le, {
						className: x ? G(y.Moderator, v.HideIfVWLarger) : void 0,
						dropdownId: `${e.id}-mod-actions-menu`,
						inCommentFlatlist: !0,
						onClick: () => L(Object(S.c)("comment_mod_action_menu", e.id))
					}, o.a.createElement(be.a, null), o.a.createElement(q.a, {
						comment: e,
						tooltipId: `${e.id}-mod-actions-menu`
					}))), Object(te.c)(e) && !x && o.a.createElement(Q.a, {
						text: `${Z}`,
						onClick: () => {
							f(), this.sendCommentModEventWithName("comment_report_menu")
						},
						selected: this.props.isReportsDropdownOpen,
						id: Be(e.id)
					}, o.a.createElement(Te, {
						model: e,
						onIgnoreReports: () => {
							h(), this.sendCommentReportEvent(e.ignoreReports ? "restore_reports" : "ignore_reports")
						},
						tooltipId: Be(e.id)
					}), e.ignoreReports ? o.a.createElement(ke, null) : o.a.createElement(_e, null)), J && o.a.createElement(Q.a, {
						onClick: this.handleDistinguishToggle,
						selected: this.props.isDistinguishDropdownOpen
					}, o.a.createElement(pe.a, null), o.a.createElement($.a, {
						isAdminDistinguished: e.isAdmin,
						isDropdownOpen: this.props.isDistinguishDropdownOpen,
						isModDistinguished: e.isMod,
						isStickied: e.isStickied,
						isTopLevelComment: !e.parentId,
						isUserEmployee: W,
						isUserMod: D,
						onDistinguishComment: b,
						sendEventWithName: this.sendCommentDistinguishEvent,
						tooltipId: Re(e.id)
					}))), (!this.props.renderedInOverlay || !this.props.isCommentFocused) && this.props.reportFlowIsOpen && this.renderReportFlow())
				}
			}
			var Ue = Object(a.b)(Ae, (e, t) => {
					let {
						comment: s,
						commentsPageKey: n
					} = t;
					return {
						deleteComment: () => n && e(Object(p.i)(s.id, s.postId)),
						handleDelete: () => {
							e(Object(N.i)(Me(s.id))), e(Object(L.h)({
								tooltipId: Fe(s.id)
							}))
						},
						handleEdit: () => {
							const t = s.media && s.media.rteMode;
							n && e(Object(p.e)({
								commentId: s.id,
								draftKey: Object(l.a)(c.c.edit, s.id),
								text: s.bodyMD || "",
								commentMode: t,
								commentsPageKey: n
							}))
						},
						handleReply: () => n && e(Object(p.s)({
							parentCommentId: s.id,
							commentsPageKey: n
						})),
						onCommentFollow: t => e(Object(p.u)(s.id, t)),
						onDistinguishComment: (t, n) => e(Object(C.b)(s.id, t, n)),
						onFollowedCommentExpire: () => e(Object(u.p)({
							id: s.id,
							expiresAt: 0
						})),
						onGildClick: (t, n) => e(Object(P.d)({
							awardId: n,
							correlationId: t,
							thingId: s.id
						})),
						onIgnoreReports: () => e(Object(C.g)(s.id)),
						onReportClick: () => e(Object(T.c)(s.id)),
						onToggleSave: () => e(Object(u.o)(s.id)),
						onToggleDistinguishDropdown: () => e(Object(L.h)({
							tooltipId: Re(s.id)
						})),
						onToggleReportsDropdown: () => e(Object(L.h)({
							tooltipId: Be(s.id)
						})),
						showToast: t => e(Object(k.f)(t)),
						toggleDeleteCommentModal: () => e(Object(N.i)(Me(s.id))),
						toggleSendReplies: () => e(Object(p.l)(s.id))
					}
				})(Object(ae.c)(De)),
				We = s("./src/reddit/components/Comments/Comment/GlowHighlight/index.m.less"),
				He = s.n(We);
			var Ve = o.a.memo(e => {
					const {
						hexColor: t
					} = e;
					return o.a.createElement("div", {
						className: He.a.glowHighlightContainer,
						role: "presentation",
						style: {
							boxShadow: `#${t} 0px 0px 14px`
						}
					})
				}),
				Ze = s("./src/reddit/components/Comments/Comment/GradientHighlight/index.m.less"),
				qe = s.n(Ze);
			var ze = o.a.memo(e => o.a.createElement("div", {
					className: qe.a.gradientHighlightContainer,
					role: "presentation"
				})),
				Ke = s("./src/reddit/components/Comments/Comment/HighlightEffect/index.tsx"),
				Ge = s("./src/reddit/components/Comments/Comment/TopMeta/index.tsx"),
				Ye = s("./src/reddit/components/Comments/PredictionComment/async.ts"),
				Je = s("./src/reddit/components/CompactPost/HorizontalVotes/index.tsx"),
				Qe = s("./src/reddit/components/Hovercards/AuthorHovercard/index.tsx"),
				Xe = s("./src/reddit/components/ModModeFilteredReason/index.tsx"),
				$e = s("./src/reddit/components/ModModeFilteredReason/helpers.ts"),
				et = s("./src/reddit/components/ModModeReports/index.tsx"),
				tt = s("./src/reddit/components/PostTopMeta/index.tsx"),
				st = s("./src/reddit/components/RichTextJson/index.tsx"),
				nt = s("./src/reddit/components/UserIcon/index.tsx"),
				rt = s("./src/reddit/components/UserIcon/constants.ts"),
				ot = s("./src/reddit/contexts/TrackCommentsPageClick.ts"),
				at = s("./src/reddit/helpers/author.ts"),
				it = s("./src/reddit/constants/componentTestIds.ts"),
				ct = s("./src/reddit/contexts/PageLayer/index.tsx"),
				dt = s("./src/reddit/contexts/Visibility.tsx"),
				lt = s("./src/reddit/controls/ErrorText/index.tsx"),
				mt = s("./src/reddit/controls/InternalLink/index.tsx"),
				ut = s("./src/reddit/controls/InvisibleScreenReaderText/index.tsx"),
				pt = s("./src/reddit/helpers/flair.ts"),
				Ct = s("./src/reddit/models/Subreddit/index.ts"),
				bt = s("./src/reddit/models/User/index.ts"),
				ht = s("./src/reddit/models/Vote/index.ts"),
				ft = s("./src/reddit/components/Governance/VaultActionLink/async.ts"),
				gt = s("./src/reddit/selectors/commentSelector.ts"),
				xt = s("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				vt = s("./src/reddit/selectors/experiments/onlineIndicator.ts"),
				yt = s("./src/reddit/selectors/moderatorPermissions.ts"),
				Ot = s("./src/reddit/selectors/poll/index.ts"),
				Et = s("./src/reddit/selectors/userPrefs.ts"),
				jt = s("./src/reddit/selectors/moderatingComments.ts"),
				_t = s("./src/reddit/components/Comments/Comment/index.m.less"),
				kt = s.n(_t),
				Lt = s("./src/config.ts"),
				wt = s("./src/reddit/helpers/userSnoovatar/index.ts"),
				St = s("./src/reddit/components/SubredditIcon/index.tsx"),
				It = s("./src/reddit/helpers/trackers/comment.ts");

			function Pt() {
				return (Pt = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const Nt = 300,
				Tt = _.a.wrapped((function(e) {
					const {
						className: t,
						...s
					} = e;
					return o.a.createElement("button", x({}, s, {
						className: Object(d.a)(t, g.a.expandButton)
					}), o.a.createElement(h.a, {
						className: g.a.expandIcon
					}))
				}), "ExpandButton", kt.a),
				Mt = _.a.wrapped(Ue, "FlatList", kt.a),
				Rt = _.a.wrapped(lt.b, "ErrorText", kt.a),
				Ft = _.a.wrapped(Je.a, "HorizontalVotes", kt.a),
				Bt = _.a.div("ActionBar", kt.a),
				At = _.a.wrapped(Ge.a, "TopMeta", kt.a),
				Dt = _.a.div("CommentContentWrapper", kt.a),
				Ut = _.a.wrapped(Qe.b, "AuthorHovercard", kt.a),
				Wt = Object(ct.v)(),
				Ht = Object(a.b)(() => Object(i.c)({
					comment: (e, t) => Object(gt.c)(e, t),
					currentProfileModPermissions: ct.i,
					depth: (e, t) => Object(D.j)(e, t),
					collapsed: jt.b,
					collapsedBecauseCrowdControl: jt.a,
					currentUser: Z.m,
					flair: D.e,
					focused: (e, t) => !t.noFocus && Object(D.t)(e, t),
					highlightAnimationDisabled: Et.d,
					isAdmin: Z.M,
					isEditing: D.z,
					isLoggedIn: Z.S,
					isPendingDeletion: D.E,
					isPresenceConsumptionExpEnabled: vt.c,
					moderatorPermissions: (e, t) => {
						const s = Object(gt.c)(e, t);
						return s ? Object(yt.n)(e, {
							subredditId: s.subredditId
						}) : null
					},
					prediction: Ot.f,
					modModeEnabled: ct.W,
					errorMsgs: D.I,
					replyFormOpen: D.L,
					subreddit: ct.s,
					subredditType: D.O,
					isOnlineConsumptionLoadTest: vt.a,
					isOnlineUserPref: Z.X,
					userIsBanned: (e, t) => {
						const s = Object(gt.c)(e, t);
						return !!s && Object(V.ib)(e, {
							subredditId: s.subredditId
						})
					},
					isBlockingInterstitialEnabled: xt.b,
					isBlockingInterstitialV2Enabled: xt.c
				}), (e, t) => {
					let {
						commentId: s,
						commentsPageKey: n,
						scrollToAndRemeasure: r,
						trackCommentClick: o
					} = t;
					return {
						onCollapseClick: () => e(Object(u.q)({
							commentId: s,
							commentsPageKey: n,
							scrollToAndRemeasure: r
						})),
						onIgnoreReports: () => e(Object(C.g)(s)),
						onVoteClick: t => {
							const [n, r] = t === ht.a.upvoted ? [Object(u.s)(s), "upvote_comment"] : [Object(u.k)(s), "downvote_comment"];
							o(r, s)(), e(n)
						},
						onMediaReload: () => {
							e(Object(u.l)(s))
						}
					}
				}),
				Vt = Object(m.b)(e => ({
					renderingObjectInfo: e.comment,
					pageLayer: e.pageLayer
				})),
				Zt = e => o.a.createElement("div", e, e.children),
				qt = e => o.a.createElement(o.a.Fragment, null, e.children),
				zt = Wt(Ht(e => {
					var t;
					const {
						childrenInfo: s,
						clearHovered: a,
						collapsed: i,
						collapsedBecauseCrowdControl: m,
						comment: u,
						commentsPageKey: C,
						currentProfileModPermissions: h,
						currentUser: f,
						depth: g,
						errorMsgs: x,
						flair: v,
						flatlist: y,
						focused: O,
						hasAwardGradient: E,
						highlightAnimationDisabled: j,
						highlightTreatment: _,
						index: k,
						isActive: L,
						isAdmin: S,
						isAvatarsInCommentsEnabled: I,
						isBlockingInterstitialEnabled: P,
						isBlockingInterstitialV2Enabled: N,
						isEditing: T,
						isFirstInList: M,
						isHighlighted: F,
						isLoggedIn: A,
						isOnlineConsumptionLoadTest: D,
						isOnlineUserPref: U,
						isPendingDeletion: W,
						isPresenceConsumptionExpEnabled: H,
						moderatorPermissions: V,
						modModeEnabled: Z,
						noSpacing: q = !1,
						onCommentAuthorClick: z,
						onCommentTimestampClick: K,
						onCollapseClick: G,
						onIgnoreReports: Y,
						onLineMouseOver: J,
						onPresenceIndicatorInViewport: Q,
						onVoteClick: X,
						postId: $,
						prediction: ee,
						renderedInOverlay: se,
						replyFormOpen: ne,
						restrictHeight: re,
						rtJSONRedditStyle: oe,
						showBlockingInterstitial: ie,
						subreddit: ce,
						subredditType: de,
						trackCommentClick: le,
						userIconSmall: me,
						userIsBanned: ue,
						onClickRevealSpoilerText: pe,
						onMediaReload: Ce
					} = e, be = u.isDeleted, he = !T && !be && !!x && x.length > 0, fe = Object(l.a)(c.c.edit, u.id), ge = Object(l.a)(c.c.replyToComment, u.id), xe = Object(R.a)(V), ve = Object($e.a)(u), ye = Object(te.c)(u), Oe = u.authorIsContractor && de === Ct.g.EmployeesOnly, Ee = u.isLocked, je = xe && Z, _e = !T && !be && (A || I), ke = I && !u.unrepliableReason, Le = !!f && Object(bt.e)(f) === u.author, [we, Se] = Object(r.useState)(null), [Ie, Pe] = Object(r.useState)(null), Ne = Object(r.useRef)(null), Te = Object(B.f)(u) || Object(B.g)(u), Me = Te ? Zt : mt.default, Re = Object(B.f)(u) ? qt : Ut, Fe = Object(ae.b)();
					Object(r.useEffect)(() => {
						if (!T && !be && (E && Se(o.a.createElement(ze, null)), null !== _)) {
							if (_.glowHexColor) {
								const e = _.glowHexColor;
								Se(o.a.createElement(Ve, {
									hexColor: e
								}))
							}
							if (_.effectHighlight) {
								const {
									type: e,
									assetUrl: t
								} = _.effectHighlight;
								Pe(o.a.createElement(Ke.b, {
									prefersReducedAnimation: j,
									type: e,
									assetUrl: t
								}))
							}
						}
					}, [T, be, E, j, _]);
					const Be = Object(r.useCallback)(() => {
							Fe(Object(It.c)(u.id))
						}, [Fe, u.id]),
						Ae = Object(dt.b)();
					(P || N) && Ae && k >= xt.a - 1 && ie();
					const De = !be && !Object(B.f)(u) && (!ue || ue && Le) && !Object(B.g)(u) && A,
						Ue = Object(r.useCallback)(() => {
							De && H && !Le && Q && Q(u.id)
						}, [u.id, Q, De, H, Le]),
						We = Object(w.a)(u),
						He = !!f && Object(bt.e)(f) === u.author ? null == f ? void 0 : f.accountIcon : u.profileImage,
						Ze = Object(wt.c)(He),
						qe = Ze || Object(wt.b)(He);
					return o.a.createElement("div", {
						key: `comment-${u.id}`,
						className: Object(d.a)(`Comment ${u.id}`, kt.a.CommentWrapper, {
							[kt.a.highlightComment]: F,
							[kt.a.deleted]: be,
							[kt.a.focused]: O,
							[kt.a.redesign]: I,
							[kt.a.topLevel]: !g,
							[kt.a.noSpacing]: q
						})
					}, we, Ie, !T && !be && M && o.a.createElement("div", {
						className: kt.a.commentPerfMarkVisibility,
						dangerouslySetInnerHTML: {
							__html: `\n                <img alt='' src='${Lt.a.assetPath}/img/renderTimingPixel.png' style='width: 1px; height: 1px;' onLoad='(__markFirstCommentVisible || function(){})();' />\n              `
						}
					}), o.a.createElement(Tt, {
						className: Object(d.a)(u.id, {
							[kt.a.hidden]: !i,
							[kt.a.visible]: i
						}),
						onClick: () => {
							a(), G(), le("collapse", u.id)()
						},
						onMouseOver: () => J(u.id),
						onMouseOut: a
					}), Object(at.a)(u.author) ? ce ? o.a.createElement(St.b, {
						className: Object(d.a)(kt.a.UserIconContainer, me && kt.a.UserIconContainerSmall),
						subredditOrProfile: ce,
						linkTo: `/user/${u.author}/`
					}) : null : o.a.createElement(Re, {
						alwaysShowChildren: !0,
						collapsed: i,
						hoverDivClassName: kt.a.AuthorHoverDiv,
						isCommentAuthorBlocked: Object(B.g)(u),
						postOrComment: u,
						tooltipIdPrefix: "AvatarUserInfoTooltip",
						tooltipType: se ? tt.f.Lightbox : void 0
					}, o.a.createElement(Me, {
						className: Object(d.a)(kt.a.UserIconContainer, me && kt.a.UserIconContainerSmall),
						"data-testid": Te ? void 0 : "comment_author_icon",
						onClick: Te ? void 0 : z,
						to: `/user/${u.author}/`
					}, Ae ? o.a.createElement(nt.a, {
						isNft: qe,
						className: Object(d.a)(kt.a.UserIcon, {
							[kt.a.v1NftTreatment]: Ze
						}),
						iconUrl: He,
						isNSFW: u.profileOver18 || !1,
						nsfwIconUrl: rt.a,
						userName: u.author,
						isHighlighted: F,
						shouldShowPresenceIndicator: De && H,
						onPresenceIndicatorInViewport: Ue,
						isCommentAuthorBlocked: Object(B.g)(u),
						collapsed: i,
						shouldUseOnlineOverride: Le,
						isOnlineOverrideValue: U,
						isOnlineStatusLoadTest: De && D,
						authorId: u.authorId
					}) : o.a.createElement("div", {
						className: kt.a.UserIcon
					}))), o.a.createElement(Dt, {
						className: Object(d.a)({
							[kt.a.isActive]: L,
							[kt.a.isCollapsed]: i,
							[kt.a.isLocked]: Ee && je,
							[kt.a.isPendingDeletion]: W,
							[kt.a.isRemoved]: !!u.bannedBy && je || u.isDeleted && S
						})
					}, o.a.createElement(ut.a, null, n.fbt._("level {depth}", [n.fbt._param("depth", g + 1)], {
						hk: "2XnyAV"
					})), o.a.createElement(At, {
						userHasNft: qe,
						childrenInfo: s,
						className: Object(d.a)({
							[kt.a.collapsed]: i,
							[kt.a.noFlair]: Object(pt.o)(v || null)
						}),
						collapsed: i,
						collapsedBecauseCrowdControl: m,
						comment: u,
						commentsPageKey: C,
						flair: v,
						isAdmin: S,
						isPostComment: !0,
						onCommentAuthorClick: z,
						onCommentTimestampClick: K,
						renderedInOverlay: se,
						renderContractorBadge: Oe
					}), !i && o.a.createElement(r.Fragment, null, T && o.a.createElement(b.a, {
						className: Object(d.a)(kt.a.EditCommentForm, kt.a.CommentCreation),
						autofocus: !0,
						commentsPageKey: C,
						depth: g,
						draftType: c.c.edit,
						draftKey: fe,
						postId: $,
						rtJson: Object(w.a)(u),
						mediaMetadata: u.media && u.media.mediaMetadata || void 0,
						isTopLevelComment: !1,
						parentCommentId: u.id,
						submitAction: e => Object(p.j)({
							id: u.id,
							commentsPageKey: C,
							draftKey: fe,
							formData: e
						}),
						submitButtonText: n.fbt._("Save Edits", null, {
							hk: "2NKEFr"
						})
					}), !T && (!be || S) && o.a.createElement("div", {
						"data-testid": it.d,
						ref: Ne,
						className: Object(d.a)(kt.a.CommentBody, {
							[kt.a.restrictHeight]: !(!re || !Ne.current) && Ne.current.clientHeight > Nt
						})
					}, ee ? o.a.createElement(Ye.a, {
						comment: u,
						prediction: ee
					}) : o.a.createElement(st.b, {
						content: We,
						mediaMetadata: u.media && u.media.mediaMetadata,
						expressionAssetData: null === (t = u.media) || void 0 === t ? void 0 : t.expressionAssetData,
						redditStyle: oe,
						rtJsonElementProps: Vt(e),
						onClickRevealSpoilerText: pe,
						mediaProps: {
							alignLeft: !0,
							renderSmallMedia: !0,
							onReload: Ce,
							onClick: Be
						}
					}), o.a.createElement(ft.b, {
						content: We
					})), Z && xe && ve && o.a.createElement(Xe.a, {
						thing: u
					}), Z && xe && ye && o.a.createElement(et.a, {
						onIgnoreReports: Y,
						reportable: u
					}), null != y ? y : _e && o.a.createElement(Bt, null, ke && o.a.createElement(Ft, {
						downvoteButtonClassName: kt.a.voteButton,
						downvoteClassName: kt.a.upDownVote,
						model: u,
						onVoteClick: X,
						scoreClassName: kt.a.score,
						upvoteButtonClassName: kt.a.voteButton,
						upvoteClassName: kt.a.upDownVote
					}), o.a.createElement(Mt, {
						comment: u,
						commentsPageKey: C,
						depth: g,
						isAvatarsInCommentsEnabled: I,
						collapsedBecauseCrowdControl: m,
						modModeEnabled: Z,
						moderatorPermissions: h || V,
						renderedInOverlay: se,
						isCommentFocused: O,
						subreddit: ce,
						trackCommentClick: le
					})), he && x.map(e => o.a.createElement(Rt, {
						key: e
					}, e)), ne && o.a.createElement(b.a, {
						className: Object(d.a)(kt.a.EditCommentForm, kt.a.CommentCreation),
						autofocus: !0,
						commentsPageKey: C,
						depth: g,
						draftType: c.c.replyToComment,
						draftKey: ge,
						isTopLevelComment: !1,
						parentCommentId: u.id,
						postId: $,
						submitAction: (e, t) => {
							let {
								validate: s,
								...n
							} = e;
							return s ? Object(p.v)({
								commentsPageKey: C,
								draftKey: ge,
								parentCommentDepth: g,
								parentCommentId: u.id,
								formData: n,
								editorMode: t
							}) : Object(p.o)({
								commentsPageKey: C,
								draftKey: ge,
								parentCommentDepth: g,
								parentCommentId: u.id,
								formData: n,
								editorMode: t
							})
						},
						submitButtonText: n.fbt._("Reply", null, {
							hk: "2ymsie"
						})
					}))))
				}));
			t.a = e => o.a.createElement(ot.a.Consumer, null, t => o.a.createElement(zt, Pt({}, e, {
				trackCommentClick: t
			})))
		},
		"./src/reddit/components/Comments/CommentListNode/index.m.less": function(e, t, s) {
			e.exports = {
				CommentListNodeWrapper: "_3sf33-9rVAO_v4y0pIW_CH",
				commentListNodeWrapper: "_3sf33-9rVAO_v4y0pIW_CH",
				isHidden: "_2csJ1c6CZ_3VQ75SVdUAwt",
				glowBorderTopPadding: "_2PHrzfGnoV59y2Imtb1Y5I",
				glowBorderBottomPadding: "_3kYyDFXW4SA2vk-vehWhXw"
			}
		},
		"./src/reddit/components/Comments/ContinueThreadLink/index.m.less": function(e, t, s) {
			e.exports = {
				ArrowRight: "egHA5MD_goQfvgLP3zgST",
				arrowRight: "egHA5MD_goQfvgLP3zgST",
				HoverSpan: "_2bsN7AuzEexqxXD-vhOkM7",
				hoverSpan: "_2bsN7AuzEexqxXD-vhOkM7",
				Wrapper: "_3ndawrYzcvjHPJFYUHijfP",
				wrapper: "_3ndawrYzcvjHPJFYUHijfP",
				isActive: "btJMgy_2EOVvOVP-DikGZ",
				LinkOrOverlayLink: "b57A3J7QBa7TvY8XeupVn",
				linkOrOverlayLink: "b57A3J7QBa7TvY8XeupVn"
			}
		},
		"./src/reddit/components/Comments/MoreCommentsItem/index.m.less": function(e, t, s) {
			e.exports = {
				MoreCommentsItemWrapper: "_3_mqV5-KnILOxl1TvgYtCk",
				moreCommentsItemWrapper: "_3_mqV5-KnILOxl1TvgYtCk",
				MoreComments: "_2HYsucNpMdUpYlGBMviq8M",
				moreComments: "_2HYsucNpMdUpYlGBMviq8M",
				MoreCommentsInteractive: "_23013peWUhznY89KuYPZKv",
				moreCommentsInteractive: "_23013peWUhznY89KuYPZKv",
				isActive: "l7--vTMsoEqrU8pjG52TF"
			}
		},
		"./src/reddit/components/Comments/PredictionComment/async.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "reddit-components-Comments-PredictionComment",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("reddit-components-Comments-PredictionComment").then(s.bind(null, "./src/reddit/components/Comments/PredictionComment/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Comments/PredictionComment/index.tsx"
				}
			})
		},
		"./src/reddit/components/Comments/States/index.m.less": function(e, t, s) {
			e.exports = {
				CommentsPlaceholderContainer: "_2o0N1VHuLszWHqY5A8iayv",
				commentsPlaceholderContainer: "_2o0N1VHuLszWHqY5A8iayv",
				CommentPlaceholder: "_2114DnVtHe_0MtbEW85tnL",
				commentPlaceholder: "_2114DnVtHe_0MtbEW85tnL",
				Avatar: "_3ES-TCR45dPoj_NuOATuNi",
				avatar: "_3ES-TCR45dPoj_NuOATuNi",
				VoteColumn: "_3j7WNOCzFwCp1SXZGJP1-V",
				voteColumn: "_3j7WNOCzFwCp1SXZGJP1-V",
				TextColumn: "_3tQxKBNuEJsKH_mPQEy34W",
				textColumn: "_3tQxKBNuEJsKH_mPQEy34W",
				StateContainer: "TbMmDiSaSaBQFF9F3FGe8",
				stateContainer: "TbMmDiSaSaBQFF9F3FGe8",
				CommentsIcon: "_1-f8S_KoiOmIpA8kGxOgfh",
				commentsIcon: "_1-f8S_KoiOmIpA8kGxOgfh",
				LiveChatIcon: "_1K0_Ej6gm6u-pTA1-FRY3S",
				liveChatIcon: "_1K0_Ej6gm6u-pTA1-FRY3S",
				SnooFacepalm: "_2AxaYiv6EkZse5msRZqowQ",
				snooFacepalm: "_2AxaYiv6EkZse5msRZqowQ",
				EmptyTitle: "_39dVqXnozb8JxasPyFPu6C",
				emptyTitle: "_39dVqXnozb8JxasPyFPu6C",
				ErrorTitle: "_2Nj40mHW74FkFefq6oqWkb",
				errorTitle: "_2Nj40mHW74FkFefq6oqWkb",
				EmptyText: "_2x3Avx0lbWMcic-5bE_guO",
				emptyText: "_2x3Avx0lbWMcic-5bE_guO",
				ErrorFullPage: "_2ze7IsXK_2d3McYZHK6v_D",
				errorFullPage: "_2ze7IsXK_2d3McYZHK6v_D",
				LoadingFullPage: "_3kZ_esGcijvfnM9KjA27vj",
				loadingFullPage: "_3kZ_esGcijvfnM9KjA27vj",
				Downvote: "_32W1DnzyRkYXP82ZO96H0V",
				downvote: "_32W1DnzyRkYXP82ZO96H0V",
				Upvote: "_1lwmFW6D9PmeT_QA-R5F_0",
				upvote: "_1lwmFW6D9PmeT_QA-R5F_0",
				TopMetaPlaceholder: "_24vSs1yG3YhINbU6QRiFR9",
				topMetaPlaceholder: "_24vSs1yG3YhINbU6QRiFR9",
				CommentBodyPlaceholder: "_3S0qviXPTlIEUjYjSKT_Lb",
				commentBodyPlaceholder: "_3S0qviXPTlIEUjYjSKT_Lb"
			}
		},
		"./src/reddit/components/Comments/States/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return L
			})), s.d(t, "b", (function() {
				return w
			})), s.d(t, "g", (function() {
				return S
			})), s.d(t, "e", (function() {
				return I
			})), s.d(t, "d", (function() {
				return P
			})), s.d(t, "f", (function() {
				return N
			})), s.d(t, "a", (function() {
				return U
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/lodash/times.js"),
				o = s.n(r),
				a = s("./node_modules/react/index.js"),
				i = s.n(a),
				c = s("./node_modules/react-redux/es/index.js"),
				d = s("./src/lib/classNames/index.ts"),
				l = s("./src/lib/lessComponent.tsx"),
				m = s("./src/reddit/actions/pages/comments.ts"),
				u = s("./src/reddit/components/Media/LoadingIcon/index.tsx"),
				p = s("./src/reddit/controls/Button/index.tsx"),
				C = s("./src/reddit/helpers/describeApiError/index.ts"),
				b = s("./src/reddit/helpers/path/index.ts"),
				h = s("./src/reddit/helpers/styles/mixins/loading.ts"),
				f = s("./src/reddit/icons/fonts/Downvote/index.tsx"),
				g = s("./src/reddit/icons/fonts/Upvote/index.tsx"),
				x = s("./src/reddit/icons/svgs/Comments/index.tsx"),
				v = s("./src/reddit/icons/svgs/LiveChat/index.tsx"),
				y = s("./src/reddit/icons/svgs/SnooFacepalm/index.tsx"),
				O = s("./src/reddit/components/Comments/States/index.m.less"),
				E = s.n(O);
			const j = l.a.p("EmptyTitle", E.a),
				_ = l.a.p("ErrorTitle", E.a),
				k = l.a.p("EmptyText", E.a),
				L = e => {
					let {
						className: t,
						isChat: s
					} = e;
					return i.a.createElement("div", {
						className: Object(d.a)(E.a.StateContainer, t)
					}, s ? i.a.createElement(v.a, {
						className: E.a.LiveChatIcon
					}) : i.a.createElement(x.a, {
						className: E.a.CommentsIcon
					}), i.a.createElement(j, null, s ? n.fbt._("no messages yet", null, {
						hk: "QOUnY"
					}) : n.fbt._("no comments yet", null, {
						hk: "1yqeoX"
					})), i.a.createElement(k, null, n.fbt._("Be the first to share what you think!", null, {
						hk: "479v5B"
					})))
				},
				w = () => i.a.createElement("div", {
					className: E.a.StateContainer
				}, i.a.createElement(x.a, {
					className: E.a.CommentsIcon
				}), i.a.createElement(j, null, n.fbt._("no other discussions yet", null, {
					hk: "2N7BWs"
				})), i.a.createElement(k, null, n.fbt._("Be the first to post the same link or crosspost in another community!", null, {
					hk: "4yirBw"
				}))),
				S = e => {
					let {
						link: t
					} = e;
					return i.a.createElement("div", {
						className: E.a.StateContainer
					}, i.a.createElement(x.a, {
						className: E.a.CommentsIcon
					}), i.a.createElement(j, null, n.fbt._("That comment is missing", null, {
						hk: "1i1U0i"
					})), i.a.createElement(p.n, {
						to: Object(b.b)(t)
					}, n.fbt._("View all comments", null, {
						hk: "2CgaIx"
					})))
				},
				I = Object(c.b)(null, (e, t) => {
					let {
						postId: s,
						commentId: n,
						sort: r
					} = t;
					return {
						onClick: () => e(Object(m.commentsPageDataRequested)(s, n, {
							sort: r
						}, r))
					}
				})(e => {
					let {
						apiError: t,
						onClick: s
					} = e;
					return i.a.createElement("div", {
						className: E.a.StateContainer
					}, i.a.createElement(y.a, {
						className: E.a.SnooFacepalm
					}), i.a.createElement(_, null, t ? Object(C.a)({
						apiError: t,
						isLoggedOut: !1
					}) : n.fbt._("Sorry, comments couldn't load!", null, {
						hk: "2h6LDi"
					})), i.a.createElement(p.l, {
						onClick: s
					}, n.fbt._("Retry", null, {
						hk: "NOuNi"
					})))
				}),
				P = e => {
					let {
						postId: t,
						commentId: s,
						sort: n,
						apiError: r
					} = e;
					return i.a.createElement("div", {
						className: Object(d.a)(E.a.StateContainer, E.a.ErrorFullPage)
					}, i.a.createElement(I, {
						postId: t,
						commentId: s,
						sort: n,
						apiError: r
					}))
				},
				N = l.a.wrapped(e => {
					let {
						className: t
					} = e;
					return i.a.createElement("div", {
						className: t
					}, i.a.createElement(u.a, null))
				}, "LoadingFullPage", E.a),
				T = l.a.div("CommentsPlaceholderContainer", E.a),
				M = l.a.div("CommentPlaceholder", E.a),
				R = l.a.div("Avatar", E.a),
				F = l.a.div("VoteColumn", E.a),
				B = l.a.div("TextColumn", E.a),
				A = () => i.a.createElement("div", {
					className: Object(d.a)(E.a.TopMetaPlaceholder, Object(h.a)({
						isLoading: !0
					}))
				}),
				D = () => i.a.createElement("div", {
					className: Object(d.a)(E.a.CommentBodyPlaceholder, Object(h.a)({
						isLoading: !0
					}))
				}),
				U = e => {
					let {
						isAvatarsInCommentsEnabled: t,
						sidebar: s = !0
					} = e;
					return i.a.createElement(T, null, o()(10, e => i.a.createElement(M, {
						key: e
					}, s && i.a.createElement(i.a.Fragment, null, t ? i.a.createElement(R, {
						className: Object(h.a)({
							isLoading: !0
						})
					}) : i.a.createElement(F, null, i.a.createElement(g.b, {
						className: E.a.Upvote
					}), i.a.createElement(f.a, {
						className: E.a.Downvote
					}))), i.a.createElement(B, null, i.a.createElement(A, null), i.a.createElement(D, null)))))
				}
		},
		"./src/reddit/components/Comments/ThreadLines/index.m.less": function(e, t, s) {
			e.exports = {
				Line: "_36AIN2ppxy_z-XSDxTvYj5",
				line: "_36AIN2ppxy_z-XSDxTvYj5",
				LineContainer: "_1DooEIX-1Nj5rweIc5cw_E",
				lineContainer: "_1DooEIX-1Nj5rweIc5cw_E",
				ShortLineContainer: "_3Wv3am0TXfTcugZJ6niui",
				shortLineContainer: "_3Wv3am0TXfTcugZJ6niui",
				hasGlowBorder: "_9UoUJEplv3y2cpdVestPb"
			}
		},
		"./src/reddit/components/Comments/helpers/hiddenComments.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return r
			})), s.d(t, "a", (function() {
				return o
			})), s.d(t, "c", (function() {
				return a
			}));
			let n = {};

			function r(e) {
				return e in n
			}

			function o(e) {
				n[e] = !0
			}

			function a() {
				n = {}
			}
		},
		"./src/reddit/components/Comments/index.m.less": function(e, t, s) {
			e.exports = {
				Scroller: "_1YCqQVO-9r-Up6QPB9H6_4",
				scroller: "_1YCqQVO-9r-Up6QPB9H6_4"
			}
		},
		"./src/reddit/components/Comments/index.tsx": function(e, t, s) {
			"use strict";
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/lodash/debounce.js"),
				r = s.n(n),
				o = s("./node_modules/lodash/isEqual.js"),
				a = s.n(o),
				i = s("./node_modules/react/index.js"),
				c = s.n(i),
				d = s("./node_modules/react-redux/es/index.js"),
				l = s("./node_modules/reselect/es/index.js"),
				m = s("./src/lib/classNames/index.ts"),
				u = s("./src/lib/constants/index.ts"),
				p = s("./src/lib/lessComponent.tsx"),
				C = s("./src/reddit/actions/economics/powerups/flairs/index.ts"),
				b = s("./src/reddit/actions/post.ts"),
				h = s("./src/reddit/actions/comment/index.ts"),
				f = s("./src/reddit/constants/comments.ts"),
				g = s("./src/reddit/constants/componentSizes.ts"),
				x = s("./src/reddit/constants/elementClassNames.ts"),
				v = s("./src/reddit/constants/gold.ts"),
				y = s("./src/reddit/components/Comments/Comment/HighlightEffect/index.tsx");
			const O = [{
					pattern: /^econ:render:lottie:([a-z0-9-]+)$/i,
					buildParamsFn: function(e) {
						return {
							glowHexColor: E,
							effectHighlight: {
								type: y.a.Lottie,
								assetUrl: `https://www.redditstatic.com/gold/awards/animations/${e}.json`
							}
						}
					}
				}],
				E = "ff0000";

			function j(e) {
				return function(e) {
					const t = e.filter(e => e.effectHighlight),
						s = t.length ? t : e,
						n = Math.floor(Math.random() * s.length);
					return s[n] || null
				}(e ? function(e) {
					return e.map(k).filter(e => e !== _)
				}(e) : [])
			}
			const _ = {
				glowHexColor: null,
				effectHighlight: null
			};

			function k(e) {
				for (const t of O) {
					const s = t.pattern.exec(e);
					if (s) return s.shift(), t.buildParamsFn(...s)
				}
				return _
			}
			var L = s("./src/reddit/reducers/features/comments/visitHighlightingFilter/index.ts"),
				w = s("./src/reddit/selectors/comments.ts"),
				S = s("./src/reddit/selectors/commentSelector.ts"),
				I = s("./src/reddit/selectors/communityAwards.ts"),
				P = s("./src/reddit/selectors/moderatorPermissions.ts"),
				N = s("./src/reddit/selectors/posts.ts"),
				T = s("./src/reddit/selectors/user.ts"),
				M = s("./src/reddit/components/Comments/Comment/index.tsx"),
				R = s("./src/lib/scroll/index.ts"),
				F = s("./src/reddit/components/LinkOrOverlayLink/index.tsx"),
				B = s("./src/reddit/contexts/InsideOverlay.tsx"),
				A = s("./src/reddit/helpers/path/index.ts"),
				D = s("./src/reddit/icons/svgs/ArrowRight/index.tsx"),
				U = s("./src/reddit/components/Comments/ContinueThreadLink/index.m.less"),
				W = s.n(U);
			const {
				fbt: H
			} = s("./node_modules/fbt/lib/FbtPublic.js"), V = p.a.wrapped(D.a, "ArrowRight", W.a), Z = p.a.wrapped(F.a, "LinkOrOverlayLink", W.a), q = p.a.span("HoverSpan", W.a), z = Object(l.c)({
				permalink: (e, t) => Object(w.m)(e, {
					commentId: Object(w.r)(e, t).parentId
				})
			});
			var K = Object(d.b)(z)(Object(B.b)(e => {
					let {
						isActive: t,
						isOverlay: s,
						permalink: n
					} = e;
					return c.a.createElement("div", {
						className: Object(m.a)(W.a.Wrapper, {
							[W.a.isActive]: t
						})
					}, c.a.createElement(Z, {
						isOverlay: !!s,
						to: Object(A.b)(n),
						onClick: R.b
					}, c.a.createElement(q, null, H._("Continue this thread", null, {
						hk: "3eplK8"
					})), " ", c.a.createElement(V, null)))
				})),
				G = s("./src/reddit/contexts/TrackCommentsPageClick.ts"),
				Y = s("./src/reddit/components/Comments/MoreCommentsItem/index.m.less"),
				J = s.n(Y);
			const {
				fbt: Q
			} = s("./node_modules/fbt/lib/FbtPublic.js"), X = p.a.div("MoreCommentsItemWrapper", J.a), $ = p.a.p("MoreComments", J.a), ee = p.a.wrapped($, "MoreCommentsInteractive", J.a), te = Object(l.c)({
				moreCommentsItem: w.F,
				moreCommentsPending: w.G
			});
			var se = Object(d.b)(te, (e, t) => ({
					moreCommentsClicked: () => e(Object(h.n)(t.commentsPageKey, t.moreCommentsId))
				}))(e => {
					const {
						isActive: t,
						moreCommentsClicked: s,
						moreCommentsItem: n,
						moreCommentsPending: r
					} = e;
					return c.a.createElement(X, null, r ? c.a.createElement($, null, Q._("loading...", null, {
						hk: "47z89"
					})) : c.a.createElement(G.a.Consumer, null, e => c.a.createElement(ee, {
						className: Object(m.a)({
							[J.a.isActive]: t
						}),
						onClick: () => {
							s(), e("load_more_comment")()
						}
					}, Q._({
						"*": "{number of more replies hidden} more replies",
						_1: "1 more reply"
					}, [Q._plural(null == n ? void 0 : n.numComments, "number of more replies hidden")], {
						hk: "J0jQW"
					}))))
				}),
				ne = s("./node_modules/lodash/times.js"),
				re = s.n(ne),
				oe = s("./src/reddit/components/Comments/ThreadLines/index.m.less"),
				ae = s.n(oe);
			const ie = p.a.wrapped(e => c.a.createElement("div", e, c.a.createElement("i", {
					className: x.m
				})), "Line", ae.a),
				ce = p.a.div("LineContainer", ae.a),
				de = p.a.div("ShortLineContainer", ae.a);
			var le = e => {
					const {
						collapsed: t,
						depth: s,
						hasGlowBorder: n,
						onLineClick: r,
						onLineMouseOver: o,
						onLineMouseOut: a,
						onShortLineClick: i,
						parentNodeIds: d,
						type: l
					} = e;
					return c.a.createElement(ce, null, re()(s + 1, e => e === s ? l !== f.a.Comment || t ? null : c.a.createElement(de, {
						key: d[e]
					}, c.a.createElement(ie, {
						className: Object(m.a)(d[e], {
							[ae.a.hasGlowBorder]: !!n,
							[ae.a.topLevel]: 0 === s
						}),
						onClick: i,
						onMouseOver: () => o(d[e]),
						onMouseOut: () => a(d[e])
					})) : c.a.createElement(ie, {
						className: d[e],
						key: d[e],
						onClick: r(e),
						onMouseOver: () => o(d[e]),
						onMouseOut: () => a(d[e])
					})))
				},
				me = s("./src/reddit/contexts/Visibility.tsx"),
				ue = s("./src/reddit/selectors/experiments/avatarsInComments.ts"),
				pe = s("./src/reddit/selectors/experiments/econ/index.ts"),
				Ce = s("./src/reddit/selectors/moderatingComments.ts"),
				be = s("./src/reddit/components/Comments/CommentListNode/index.m.less"),
				he = s.n(be);
			const fe = p.a.div("CommentListNodeWrapper", he.a),
				ge = e => {
					const t = document.querySelectorAll(`.${e}`);
					if (t && t.length)
						for (let s = 0; s < t.length; s++) t[s].classList.add(x.f)
				},
				xe = () => {
					const e = document.querySelectorAll(`.${x.f}`);
					if (e && e.length)
						for (let t = 0; t < e.length; t++) e[t].classList.remove(x.f)
				};
			var ve = Object(d.b)(() => Object(l.c)({
				collapsed: (e, t) => {
					let {
						commentLink: s,
						commentsPageKey: n
					} = t;
					return Object(Ce.b)(e, {
						commentId: s.id,
						commentsPageKey: n
					})
				},
				commentListNode: (e, t) => Object(w.l)(e, t),
				depth: (e, t) => Object(w.j)(e, t),
				highlightTreatment: (e, t) => {
					let {
						commentLink: s
					} = t;
					if (Object(pe.d)(e)) return null;
					let n = null;
					const r = Object(w.l)(e, {
						commentLink: s
					});
					if (r && s.type === f.a.Comment) {
						n = j(r.treatmentTags)
					}
					return n
				},
				isActive: (e, t) => {
					let {
						commentLink: s
					} = t;
					return !!e.shortcuts.activeCommentId && s.id === e.shortcuts.activeCommentId
				},
				isAvatarsInCommentsEnabled: ue.a,
				isAwarded: (e, t) => {
					let {
						commentLink: s
					} = t;
					if (Object(pe.d)(e)) return !1;
					const n = Object(w.l)(e, {
						commentLink: s
					});
					return !(s.type !== f.a.Comment || !n || !n.awardCountsById) && Object.keys(n.awardCountsById).some(t => {
						const s = Object(I.a)(e, t);
						return s && s.coinPrice >= v.g
					})
				},
				isHighlighted: (e, t) => {
					let {
						commentLink: s
					} = t;
					const n = Object(w.p)(e);
					if (n === L.a.None) return !1;
					if (s.type !== f.a.Comment) return !1;
					const r = s.id,
						o = Object(S.c)(e, {
							commentId: r
						});
					if (!o) return !1;
					const a = Object(T.x)(e),
						i = !!Object(P.m)(e, {
							postId: o.postId
						}),
						c = Object(N.F)(e, {
							postId: o.postId
						});
					if (!c || !c.previousVisits || c.previousVisits.length < 1) return !1;
					const d = n === L.a.Last ? c.previousVisits[c.previousVisits.length - 1] : c.previousVisits[0];
					return (i || a) && o.created > d
				}
			}), (e, t) => {
				let {
					commentLink: s,
					commentsPageKey: n,
					scrollToAndRemeasure: r
				} = t;
				return {
					onLineClick: t => () => {
						e(Object(h.d)({
							commentLink: s,
							commentsPageKey: n,
							lineDepth: t,
							scrollToAndRemeasure: r
						}))
					},
					onShortLineClick: () => e(Object(h.q)({
						commentId: s.id,
						commentsPageKey: n,
						scrollToAndRemeasure: r
					}))
				}
			})(e => {
				const {
					childrenInfo: t,
					className: s,
					collapsed: n,
					commentLink: r,
					commentsPageKey: o,
					depth: a,
					highlightTreatment: i,
					index: d,
					isActive: l,
					isAvatarsInCommentsEnabled: u,
					isAwarded: p,
					isFirstInList: C,
					isHidden: b,
					isHighlighted: h,
					onLineClick: x,
					onPresenceIndicatorInViewport: v,
					onShortLineClick: y,
					parentNodeIds: O,
					postId: E,
					renderedInOverlay: j,
					scrollToAndRemeasure: _,
					showBlockingInterstitial: k
				} = e, L = !!p, w = !(!i || !i.glowHexColor), S = w && a > 0, I = w, P = c.a.createElement(fe, {
					className: Object(m.a)(s, {
						[he.a.isHidden]: b,
						[he.a.glowBorderTopPadding]: S,
						[he.a.glowBorderBottomPadding]: I
					}),
					id: r.id,
					style: {
						paddingLeft: a * (g.v + g.u) + (r.type === f.a.Comment ? g.v : 0)
					},
					tabIndex: -1
				}, c.a.createElement(le, {
					collapsed: n,
					depth: a,
					hasGlowBorder: S,
					onLineClick: x,
					onLineMouseOver: ge,
					onLineMouseOut: xe,
					onShortLineClick: y,
					type: r.type,
					parentNodeIds: O
				}), ye({
					childrenInfo: t,
					clearHovered: xe,
					commentLink: r,
					commentsPageKey: o,
					onLineMouseOver: ge,
					hasAwardGradient: L,
					highlightTreatment: i,
					index: d,
					isActive: l,
					isAvatarsInCommentsEnabled: u,
					isFirstInList: C,
					isHighlighted: h,
					postId: E,
					renderedInOverlay: j,
					scrollToAndRemeasure: _,
					onPresenceIndicatorInViewport: v,
					showBlockingInterstitial: k
				}));
				return u && r.type === f.a.Comment ? c.a.createElement(me.a, null, P) : P
			});
			const ye = e => {
				let {
					childrenInfo: t,
					clearHovered: s,
					commentLink: n,
					commentsPageKey: r,
					hasAwardGradient: o,
					highlightTreatment: a,
					index: i,
					isActive: d,
					isAvatarsInCommentsEnabled: l,
					isFirstInList: m,
					isHighlighted: u,
					onLineMouseOver: p,
					postId: C,
					renderedInOverlay: b,
					scrollToAndRemeasure: h,
					onPresenceIndicatorInViewport: g,
					showBlockingInterstitial: x
				} = e;
				switch (n.type) {
					case f.a.Comment:
						return c.a.createElement(M.a, {
							childrenInfo: t,
							clearHovered: s,
							commentId: n.id,
							commentsPageKey: r,
							hasAwardGradient: o,
							highlightTreatment: a,
							index: i,
							isActive: d,
							isAvatarsInCommentsEnabled: l,
							isFirstInList: m,
							isHighlighted: u,
							onLineMouseOver: p,
							postId: C,
							renderedInOverlay: b,
							scrollToAndRemeasure: h,
							onPresenceIndicatorInViewport: g,
							showBlockingInterstitial: x
						});
					case f.a.MoreComments:
						return c.a.createElement(se, {
							commentsPageKey: r,
							isActive: d,
							moreCommentsId: n.id
						});
					case f.a.ContinueThread:
						return c.a.createElement(K, {
							id: n.id,
							isActive: d
						})
				}
			};
			var Oe = s("./src/reddit/components/Comments/helpers/hiddenComments.ts"),
				Ee = s("./src/reddit/components/Comments/States/index.tsx"),
				je = s("./src/reddit/components/Scroller/Simple.tsx"),
				_e = s("./src/reddit/components/TrackingHelper/index.tsx"),
				ke = s("./src/reddit/constants/elementIds.ts"),
				Le = s("./src/reddit/featureFlags/index.ts"),
				we = s("./src/reddit/helpers/commentList/index.ts"),
				Se = s("./src/reddit/helpers/trackers/comment.ts"),
				Ie = s("./src/reddit/hooks/useSessionBlockingModal.tsx"),
				Pe = s("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				Ne = s("./src/telemetry/index.ts"),
				Te = s("./src/lib/LRUCache/index.ts"),
				Me = s("./src/lib/promo/withShowSignupUpsell.tsx"),
				Re = s("./src/reddit/selectors/telemetry.ts");
			const Fe = e => t => ({
				...Object(Re.q)(t),
				source: "post_detail",
				action: "view",
				noun: "few_comments",
				actionInfo: Object(Re.d)(t, {
					reason: String(e)
				})
			});
			var Be = s("./src/reddit/components/Comments/index.m.less"),
				Ae = s.n(Be);
			const De = g.f + 10,
				Ue = 65,
				We = p.a.wrapped(je.b, "Scroller", Ae.a),
				He = Object(l.c)({
					allCollapsed: w.a,
					commentLinks: w.k,
					commentThreadLinkSet: w.o,
					measureScrollFPS: Le.d.measureScrollFPS,
					moreComments: w.b,
					postPermalink: N.E
				}),
				Ve = Object(d.b)(He, (e, t) => ({
					loadCommentAuthorsPowerupsInfo: async t => await e(Object(C.getSubredditUserCommentsPowerupsInfoFromCommentLinks)(t)),
					onCommentEnteredViewport: t => e(Object(h.f)(t)),
					onCommentLeftViewport: (t, s) => e(Object(h.i)(t, s)),
					showModalOnCommentsScroll: t => e(Object(b.Y)(Object(A.b)(t)))
				})),
				Ze = new Te.a(500),
				qe = new Te.a(500),
				ze = (e, t) => {
					const s = `entered-${e}`;
					let n = Ze.get(s);
					return void 0 === n && (n = () => {
						t(e)
					}, Ze.set(s, n)), n
				},
				Ke = (e, t) => {
					const s = `left-${e}`;
					let n = qe.get(s);
					return void 0 === n && (n = s => {
						t(e, s)
					}, qe.set(s, n)), n
				};
			class Ge extends c.a.Component {
				constructor(e) {
					super(e), this.getParentNodeIds = e => {
						const {
							commentLinks: t,
							commentThreadLinkSet: s
						} = this.props;
						if (this.parentNodeIdsMap[e.id]) return this.parentNodeIdsMap[e.id];
						const n = s[e.id].depth,
							r = t.findIndex(t => t.id === e.id);
						if (0 === n || 0 === r) return this.parentNodeIdsMap[e.id] = [e.id], this.parentNodeIdsMap[e.id];
						const o = t[r - 1],
							a = this.parentNodeIdsMap[o.id].slice();
						return this.parentNodeIdsMap[e.id] = a.filter(e => !!s[e] && s[e].depth < n), this.parentNodeIdsMap[e.id].push(e.id), this.parentNodeIdsMap[e.id]
					}, this.getChildrenInfo = e => this.childrenInfoMap[e] || void 0, this.onPresenceIndicatorInViewport = e => {
						this.state.isPresenceEventSent || (this.setState({
							isPresenceEventSent: !0
						}), this.props.sendEvent(Object(Se.b)(e)))
					}, this.showBlockingInterstitial = r()(() => {
						this.state.isBlockingModalShowed || (this.setState({
							isBlockingModalShowed: !0
						}), this.props.showModalOnCommentsScroll(this.props.postPermalink))
					}, u.L, {
						leading: !0,
						maxWait: 1e3
					}), this.parentNodeIdsMap = {}, Oe.c(), this.childrenInfoMap = {}, this.state = {
						isPresenceEventSent: !1,
						isBlockingModalShowed: !1
					}
				}
				UNSAFE_componentWillMount() {
					const {
						commentLinks: e,
						allCollapsed: t,
						commentThreadLinkSet: s,
						moreComments: n
					} = this.props;
					this.timerId && Ne.c.cancel(this.timerId), e.length && (this.timerId = Ne.c.start()), this.findHiddenNodes(e, t, s, n)
				}
				componentDidMount() {
					this.timerId && Object(Ne.b)(u.n.Redesign, {
						type: "mount",
						component: "commentsList",
						duration: Ne.c.end(this.timerId)
					}), this.props.loadCommentAuthorsPowerupsInfo(this.props.commentLinks), this.props.commentLinks.length < Pe.a && this.props.sendEvent(Fe(this.props.commentLinks.length))
				}
				UNSAFE_componentWillReceiveProps(e) {
					const {
						allCollapsed: t,
						commentsPageKey: s,
						commentLinks: n,
						commentThreadLinkSet: r,
						moreComments: o
					} = e;
					(s !== this.props.commentsPageKey || n.length > this.props.commentLinks.length || !a()(t, this.props.allCollapsed)) && this.findHiddenNodes(n, t, r, o)
				}
				shouldComponentUpdate(e) {
					const {
						commentsPageKey: t,
						commentLinks: s,
						allCollapsed: n
					} = this.props;
					return e.commentsPageKey !== t || e.commentLinks.length > s.length || !a()(e.allCollapsed, n) || e.commentLinks.some((e, t) => e.id !== s[t].id)
				}
				UNSAFE_componentWillUpdate(e) {
					this.timerId && Ne.c.cancel(this.timerId), e.commentLinks.length && (this.timerId = Ne.c.start())
				}
				componentDidUpdate(e) {
					this.timerId && Object(Ne.b)(u.n.Redesign, {
						type: "mount",
						component: "commentsList",
						duration: Ne.c.end(this.timerId)
					})
				}
				componentWillUnmount() {
					this.timerId && Ne.c.cancel(this.timerId)
				}
				findHiddenNodes(e, t, s, n) {
					if (!t || !Object.keys(t).length) return;
					let r = null,
						o = 1 / 0,
						a = 0,
						i = !1;
					Oe.c();
					for (let c = 0; c < e.length; c++) {
						const d = e[c];
						r && (s[d.id].depth > o ? (Oe.a(d.id), a += Object(we.d)(d, n), d.type === f.a.ContinueThread && (i = !0)) : (this.childrenInfoMap[r] = {
							numChildren: a,
							hasContinueThread: i
						}, r = null, o = 1 / 0, a = 0, i = !1)), !r && t[d.id] && (r = d.id, o = s[d.id].depth)
					}
				}
				render() {
					return this.props.commentLinks.length ? this.renderList() : this.renderEmptyState()
				}
				getScrollChild(e, t) {
					const {
						commentsPageKey: s,
						onCommentEnteredViewport: n,
						onCommentLeftViewport: r,
						postId: o,
						renderedInOverlay: a
					} = this.props, i = ze(e.id, n), d = Ke(e.id, r);
					return {
						estHeight: Oe.b(e.id) ? 0 : Ue,
						id: e.id,
						trackOnEnteredViewport: i,
						trackOnExitedViewport: d,
						render: n => {
							let {
								placeholderRecommended: r,
								height: i,
								width: d,
								scrollToAndRemeasure: l
							} = n;
							return r ? c.a.createElement("div", {
								style: {
									height: i,
									backgroundColor: "#fff"
								}
							}) : c.a.createElement(ve, {
								key: `comment-list-node-${e.id}`,
								childrenInfo: this.getChildrenInfo(e.id),
								commentLink: e,
								commentsPageKey: s,
								id: e.id,
								index: t,
								isFirstInList: 0 === t,
								isHidden: Oe.b(e.id),
								postId: o,
								scrollToAndRemeasure: l,
								renderedInOverlay: !!a,
								parentNodeIds: this.getParentNodeIds(e),
								onPresenceIndicatorInViewport: this.onPresenceIndicatorInViewport,
								showBlockingInterstitial: this.showBlockingInterstitial
							})
						}
					}
				}
				renderList() {
					const {
						className: e,
						commentLinks: t,
						commentsPageKey: s,
						measureScrollFPS: n,
						onAllCommentsRendered: r,
						renderedInOverlay: o,
						showSignupUpsell: a
					} = this.props;
					let i;
					if (n) {
						i = `comments-${o?"lightbox":"page"}`
					}
					const d = t.map((e, t) => this.getScrollChild(e, t));
					return c.a.createElement(We, {
						className: Object(m.a)(Ae.a.Scroller, e),
						disableScrollCache: o,
						key: s,
						getContainer: () => o ? document.getElementById(ke.e) : null,
						onScroll: a,
						onAllChildrenRendered: r,
						preventScrollOnMount: !0,
						scrollToChildPadding: De,
						trackingName: i
					}, d)
				}
				renderEmptyState() {
					return this.props.commentId ? c.a.createElement(Ee.g, {
						link: this.props.postPermalink
					}) : c.a.createElement(Ee.c, null)
				}
			}
			t.a = Ve(Object(_e.c)(Object(Me.a)(Object(Ie.d)(Ge))))
		},
		"./src/reddit/components/CommentsChat/Loader.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			const r = Object(n.a)({
				resolved: {},
				chunkName: () => "ChatPost",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => Promise.all([s.e("vendors~Avatar~ChatPost~CollectiblesShowcaseUnit~MarketplaceClaimModal~MarketplaceInFeedUnit~NftProf~7d152600"), s.e("ChatPost")]).then(s.bind(null, "./src/reddit/components/CommentsChat/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/CommentsChat/index.tsx"
				}
			}, {
				ssr: !1
			});
			t.a = r
		},
		"./src/reddit/components/CommentsChat/MessageInput/Loader.m.less": function(e, t, s) {
			e.exports = {
				LoaderWrapper: "_3k8JPc9w-DJrYLoer3GicH",
				loaderWrapper: "_3k8JPc9w-DJrYLoer3GicH",
				Icon: "_1nrdmuhkCLXh8N_46gKAyn",
				icon: "_1nrdmuhkCLXh8N_46gKAyn",
				Byline: "eI85Q_-1x9VERN15oDr3X",
				byline: "eI85Q_-1x9VERN15oDr3X",
				gradientAnimation: "_3kGJh7EpOUlhrvN051jlhD"
			}
		},
		"./src/reddit/components/CommentsChat/MessageInput/Loader.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/higherOrderComponents/makeAsync.tsx"),
				a = s("./src/lib/lessComponent.tsx"),
				i = s("./src/lib/loadWithRetries/index.ts"),
				c = s("./src/reddit/components/CommentsChat/MessageInput/Loader.m.less"),
				d = s.n(c);
			const l = a.a.div("LoaderWrapper", d.a),
				m = a.a.div("Icon", d.a),
				u = a.a.div("Byline", d.a),
				p = Object(o.a)({
					ErrorComponent: () => r.a.createElement(l, null, r.a.createElement(m, null), r.a.createElement(u, null)),
					getComponent: () => Object(i.a)(() => Promise.all([s.e("vendors~ChatMessageInput~FlairEdit~MembershipPaywallPage~PostCreation~RichTextEditor"), s.e("ChatMessageInput~MembershipPaywallPage~RichTextEditor"), s.e("ChatMessageInput")]).then(s.bind(null, "./src/reddit/components/CommentsChat/MessageInput/index.tsx")).then(e => e.default)),
					LoadingComponent: () => r.a.createElement(l, null, r.a.createElement(m, null), r.a.createElement(u, null))
				});
			t.a = e => r.a.createElement(p, e)
		},
		"./src/reddit/components/CommentsPageNativeAd/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "CommentsPageNativeAd",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("CommentsPageNativeAd").then(s.bind(null, "./src/reddit/components/CommentsPageNativeAd/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/CommentsPageNativeAd/index.tsx"
				}
			})
		},
		"./src/reddit/components/CommentsPageSidebar/index.m.less": function(e, t, s) {
			e.exports = {
				card: "_2Zqrm36MciZxq2elpbtQig",
				inFeedAd: "_2vWBnEHUdKqzj9DabP66L1",
				outerWrapper: "_31AVRNJbVMh2DUFRrpCQcD",
				backToTopButton: "_1xywgtWT3jTCKWcw9KY2r1",
				greyRereddit: "_2pOTt_VPprwl-h6pV0o5Mu"
			}
		},
		"./src/reddit/components/CommentsPageSidebar/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/lodash/isEqual.js"),
				o = s.n(r),
				a = s("./node_modules/react/index.js"),
				i = s.n(a),
				c = s("./node_modules/react-redux/es/index.js"),
				d = s("./node_modules/reselect/es/index.js"),
				l = s("./src/lib/classNames/index.ts"),
				m = s("./src/lib/constants/index.ts"),
				u = s("./src/lib/objectSelector/index.ts"),
				p = s("./src/reddit/components/BackToTop/index.tsx"),
				C = s("./src/reddit/components/Economics/SubredditPremium/SidebarCards/async.tsx"),
				b = s("./src/reddit/components/Governance/CommunityCard/async.tsx"),
				h = s("./src/reddit/components/Governance/Leaderboard/async.tsx"),
				f = s("./src/reddit/components/IdCard/async.tsx"),
				g = s("./src/reddit/components/ModProgressModule/index.tsx"),
				x = s("./src/reddit/components/Onboarding/LanguageCollection/prompt.tsx"),
				v = s("./src/reddit/components/SidebarAd/CommentsPageSidebarAd.tsx"),
				y = s("./src/reddit/components/SidebarFooter/index.tsx"),
				O = s("./src/reddit/components/SidebarSpacer/index.tsx"),
				E = s("./src/reddit/components/SidebarStickyBottom/index.tsx"),
				j = s("./src/reddit/components/Widgets/AdRules/index.tsx"),
				_ = s("./src/reddit/components/Widgets/Recommendations/index.tsx"),
				k = s("./src/reddit/components/Widgets/ReredditLink/index.tsx"),
				L = s("./src/reddit/components/Widgets/ReredditLink/async.tsx"),
				w = s("./src/reddit/components/Widgets/Widget/index.tsx"),
				S = s("./src/reddit/constants/experiments.ts"),
				I = s("./src/reddit/featureFlags/component.tsx"),
				P = s("./src/reddit/helpers/createBannerProperties/index.ts"),
				N = s("./src/reddit/models/Post/index.ts"),
				T = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				M = s("./src/reddit/selectors/experiments/newCommunityProgressV3.ts"),
				R = s("./src/reddit/selectors/experiments/postSeo.ts"),
				F = s("./src/reddit/selectors/seo/reredditPromo.ts"),
				B = s("./src/reddit/selectors/subreddit.ts"),
				A = s("./src/reddit/selectors/user.ts"),
				D = s("./src/reddit/components/Widgets/Recommendations/Sidebar/index.tsx"),
				U = s("./src/reddit/components/CommentsPageSidebar/index.m.less"),
				W = s.n(U);
			const H = Object(I.a)("spPoints", b.a),
				V = Object(I.a)("spLeaderboard", h.a),
				Z = Object(n.a)({
					resolved: {},
					chunkName: () => "reddit-components-ProfileIdCard",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("reddit-components-ProfileIdCard").then(s.bind(null, "./src/reddit/components/ProfileIdCard/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/ProfileIdCard/index.tsx"
					}
				}),
				q = Object(d.c)({
					d2xPdpSideRailRecsVariant: T.a,
					isD2xPdpSideRailRecsEnabled: T.b,
					isInNewModuleNCPV3Experiment: (e, t) => {
						let {
							post: s,
							isOverlay: n
						} = t;
						return !Object(N.s)(s) && !n && Object(M.a)(e) === S.Xe.NewModule
					},
					isLoggedIn: A.S,
					postSEOV2IdCardVariant: R.h,
					shouldShowReredditPromo: F.a,
					widgets: Object(u.a)(B.x)
				}),
				z = Object(c.b)(q);
			class K extends i.a.Component {
				constructor(e) {
					super(e), this.state = {
						isMounted: !1
					}
				}
				componentDidMount() {
					this.setState({
						isMounted: !0
					})
				}
				shouldComponentUpdate(e, t) {
					return this.props.subredditName !== e.subredditName || !o()(this.props.widgets, e.widgets) || this.props.post.id !== e.post.id
				}
				renderRecommendationsSidebar() {
					const {
						className: e,
						commentsPageKey: t,
						d2xPdpSideRailRecsVariant: s,
						isOverlay: n,
						post: r,
						postSEOV2IdCardVariant: o,
						shouldShowReredditPromo: a,
						subredditName: c,
						subredditOrProfile: d
					} = this.props, m = Object(R.c)(o) || Object(R.f)(o), u = s === S.kd.GreyRereddit || s === S.kd.LargeImagePreview, C = s === S.kd.GreyRedditNoNsfw, b = a && (u || C) ? i.a.createElement(k.ReredditButtons, {
						directoryTimestamp: r.created,
						postId: r.id,
						renderAsPlainLink: !0
					}) : void 0;
					return i.a.createElement("div", {
						className: Object(l.a)(e, W.a.outerWrapper)
					}, i.a.createElement(f.a, {
						commentsPageKey: t,
						isCommentsPage: !0,
						isOverlay: n,
						listingName: c,
						postId: r.id,
						rememberPosition: r.numComments > 0,
						isMinimal: m
					}), i.a.createElement(O.a, null, i.a.createElement(D.a, null, !(r.isNSFW && C) && i.a.createElement(_.a, {
						post: r,
						subredditOrProfile: d
					}), a && !u && !C && i.a.createElement(L.a, {
						directoryTimestamp: r.created,
						postId: r.id
					}), i.a.createElement(y.a, {
						reredditButtons: b
					}), i.a.createElement(p.a, {
						className: W.a.backToTopButton,
						isOverlay: !1
					}))))
				}
				renderFooter(e) {
					const {
						commentsPageKey: t,
						isFakeOverlay: s,
						isOverlay: n,
						post: r,
						postSEOV2IdCardVariant: o,
						subredditName: a
					} = this.props, c = !Object(R.c)(o) && !Object(R.f)(o);
					return i.a.createElement(E.a, {
						adComponentOnFakeOverlay: s,
						adComponent: c ? i.a.createElement(v.a, {
							postId: r.id,
							isOverlay: n,
							listingName: a,
							placement: m.e.BELOW_THE_FOLD,
							placementIndex: e,
							position: P.a.BOTTOM,
							refreshKey: r.id,
							sizes: m.p,
							commentsPageKey: t
						}) : null
					})
				}
				render() {
					const {
						className: e,
						commentsPageKey: t,
						isD2xPdpSideRailRecsEnabled: s,
						isInNewModuleNCPV3Experiment: n,
						isLoggedIn: r,
						isOverlay: o,
						post: a,
						postSEOV2IdCardVariant: c,
						shouldShowReredditPromo: d,
						subredditId: u,
						subredditName: p,
						widgets: b
					} = this.props;
					let h = 0;
					const y = Object(R.c)(c) || Object(R.f)(c),
						E = i.a.createElement(v.a, {
							postId: a.id,
							isOverlay: o,
							listingName: p,
							placement: m.e.ABOVE_THE_FOLD,
							placementIndex: h++,
							position: P.a.FIRST,
							refreshKey: a.id,
							sizes: m.j,
							commentsPageKey: t
						});
					return !Object(N.s)(a) && s ? this.renderRecommendationsSidebar() : i.a.createElement("div", {
						className: Object(l.a)(W.a.outerWrapper, e)
					}, n && i.a.createElement(g.default, {
						subredditId: u,
						subredditName: p
					}), Object(N.s)(a) ? i.a.createElement(Z, {
						profileName: p,
						isOverlay: o || !1
					}) : i.a.createElement(f.a, {
						commentsPageKey: t,
						isCommentsPage: !0,
						isOverlay: o,
						listingName: p,
						postId: a.id,
						rememberPosition: a.numComments > 0,
						isMinimal: y
					}), i.a.createElement(C.a, {
						cardClassName: W.a.card,
						subredditId: u
					}), i.a.createElement(H, {
						className: W.a.card,
						subredditId: u,
						uniqueId: a.id
					}), i.a.createElement(V, {
						className: W.a.card,
						subredditId: u,
						uniqueId: a.id
					}), !o && i.a.createElement(x.a, null), E, r && b.map((e, t) => i.a.createElement(O.a, {
						key: `widgetSpacer${t}`
					}, i.a.createElement(w.a, {
						subredditName: p,
						widget: e
					}))), a.isSponsored && i.a.createElement(O.a, null, i.a.createElement(j.a, null)), d && i.a.createElement(L.a, {
						directoryTimestamp: a.created,
						postId: a.id
					}), this.renderFooter(h++))
				}
			}
			t.a = z(K)
		},
		"./src/reddit/components/CommentsWrapper/index.m.less": function(e, t, s) {
			e.exports = {
				ContentWrapper: "_1ump7uMrSA43cqok14tPrG",
				contentWrapper: "_1ump7uMrSA43cqok14tPrG",
				TruncatedComments: "_1oTUrVtKJk1ue0r3fe31kJ",
				truncatedComments: "_1oTUrVtKJk1ue0r3fe31kJ",
				MoreCommentsButton: "j9NixHqtN2j8SKHcdJ0om",
				moreCommentsButton: "j9NixHqtN2j8SKHcdJ0om"
			}
		},
		"./src/reddit/components/CommentsWrapper/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				i = s("./src/lib/prettyPrintNumber/index.ts"),
				c = s("./src/reddit/controls/Button/index.tsx"),
				d = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				l = s("./src/reddit/components/CommentsWrapper/index.m.less"),
				m = s.n(l);
			const {
				fbt: u
			} = s("./node_modules/fbt/lib/FbtPublic.js"), p = "500px";
			class C extends r.a.Component {
				render() {
					const {
						apiPending: e,
						children: t,
						className: s,
						handleViewAllCommentsClick: n,
						innerRef: a,
						shouldTruncateComments: l,
						numberOfComments: C,
						onClick: b
					} = this.props, h = l && !e, f = l ? m.a.TruncatedComments : "";
					return r.a.createElement("div", {
						onClick: b,
						ref: a
					}, r.a.createElement("div", {
						className: Object(o.a)(m.a.ContentWrapper, s, f),
						style: {
							"--commentswrapper-gradient-color": Object(d.a)(this.props).body,
							maxHeight: l ? p : "unset"
						}
					}, t), h && r.a.createElement(c.l, {
						className: m.a.MoreCommentsButton,
						onClick: n,
						"data-redditstyle": !0
					}, u._("View Entire Discussion ({number of comments} Comments)", [u._param("number of comments", Object(i.b)(C))], {
						hk: "1pmqUt"
					})))
				}
			}
			t.a = Object(a.a)(C)
		},
		"./src/reddit/components/CompactPost/HorizontalVotes/index.m.less": function(e, t, s) {
			e.exports = {
				horizontalVotes: "_2oM1YqCxIwkvwyeZamWwhW",
				customScoreStyles: "_25IkBM0rRUqWX5ZojEMAFQ",
				customDownvoteStyles: "_783RL1AYIib59nxLCXhgv"
			}
		},
		"./src/reddit/components/CompactPost/HorizontalVotes/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				i = s("./src/reddit/components/VerticalVotes/index.tsx"),
				c = s("./src/reddit/components/CompactPost/HorizontalVotes/index.m.less"),
				d = s.n(c);

			function l() {
				return (l = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const m = Object(a.a)(e => {
				let {
					className: t,
					...s
				} = e;
				return r.a.createElement(i.a, l({}, s, {
					className: Object(o.a)(d.a.horizontalVotes, t),
					scoreClassName: Object(o.a)(d.a.customScoreStyles, s.scoreClassName),
					downvoteClassName: Object(i.b)(s) ? d.a.customDownvoteStyles : void 0
				}))
			});
			t.a = m
		},
		"./src/reddit/components/CreateCommunityButton/index.m.less": function(e, t, s) {
			e.exports = {
				StyledTooltip: "FIYolDqalszTnjjNfThfT",
				styledTooltip: "FIYolDqalszTnjjNfThfT"
			}
		},
		"./src/reddit/components/CreateCommunityButton/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/reddit/actions/modal.ts"),
				d = s("./src/reddit/actions/tooltip.ts"),
				l = s("./src/reddit/components/InfoTextTooltip/index.tsx"),
				m = s("./src/reddit/components/TrackingHelper/index.tsx"),
				u = s("./src/reddit/constants/modals.ts"),
				p = s("./src/reddit/controls/Button/index.tsx"),
				C = s("./src/reddit/helpers/trackers/subredditCreation.ts"),
				b = s("./src/reddit/selectors/user.ts"),
				h = s("./src/reddit/components/CreateCommunityButton/index.m.less"),
				f = s.n(h),
				g = s("./src/lib/lessComponent.tsx");
			const x = "create-community-button",
				v = g.a.wrapped(l.c, "StyledTooltip", f.a),
				y = Object(i.c)({
					userDoesNotHaveEnoughExpToCreateCommunity: e => !Object(b.sb)(e),
					userIsSuspended: b.Z
				});
			t.a = Object(a.b)(y, (e, t) => {
				let {
					eventSource: s
				} = t;
				return {
					openCommunityCreation: t => {
						t(Object(C.c)(s)), e(Object(c.h)(u.a.SUBREDDIT_CREATION_MODAL_ID))
					},
					onShowTooltip: () => e(Object(d.f)({
						tooltipId: x
					})),
					onHideTooltip: () => e(Object(d.i)())
				}
			})(Object(m.c)(e => {
				let {
					className: t,
					eventSource: s,
					onShowTooltip: r,
					onHideTooltip: a,
					openCommunityCreation: i,
					sendEvent: c,
					userDoesNotHaveEnoughExpToCreateCommunity: d,
					userIsSuspended: l,
					onClick: m
				} = e;
				return o.a.createElement(p.t, {
					className: t,
					disabled: l || d,
					onClick: e => {
						m && m(e), i(c)
					},
					onMouseEnter: r,
					onMouseLeave: a,
					priority: p.c.Secondary,
					id: x,
					isFullWidth: !0
				}, n.fbt._("Create Community", null, {
					hk: "28v7Qq"
				}), d ? o.a.createElement(v, {
					caretOnTop: !0,
					tooltipId: x,
					text: n.fbt._("To prevent spam, accounts must be at least 30 days old and have enough positive karma to create communities.", null, {
						hk: "2R1OXu"
					})
				}) : l ? o.a.createElement(v, {
					caretOnTop: !0,
					tooltipId: x,
					text: n.fbt._("Accounts banned from the site can not create communities until the ban is lifted.", null, {
						hk: "2xBDEw"
					})
				}) : null)
			}))
		},
		"./src/reddit/components/CreateCommunitySidebar/index.m.less": function(e, t, s) {
			e.exports = {
				BannerImg: "_2ddpn_fVcA1SYZzLivK-SD",
				bannerImg: "_2ddpn_fVcA1SYZzLivK-SD",
				ButtonContainer: "_2ymEyPXQM0ccuwfvIOMpnZ",
				buttonContainer: "_2ymEyPXQM0ccuwfvIOMpnZ",
				Button: "_1vv6LrKIsjHuIJCCgIntnC",
				button: "_1vv6LrKIsjHuIJCCgIntnC",
				CommunityText: "_9jODC2-h7cM9Y6Duqs_W4",
				communityText: "_9jODC2-h7cM9Y6Duqs_W4",
				Container: "_3lfTEmyI7x9ib1wz4e8RWP",
				container: "_3lfTEmyI7x9ib1wz4e8RWP",
				SnooImg: "_20axzOalQqYkHj-7Idfqun",
				snooImg: "_20axzOalQqYkHj-7Idfqun"
			}
		},
		"./src/reddit/components/CreatorStats/loader.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "CreatorStats",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("CreatorStats").then(s.bind(null, "./src/reddit/components/CreatorStats/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/CreatorStats/index.tsx"
				}
			})
		},
		"./src/reddit/components/CrosspostBox/index.m.less": function(e, t, s) {
			e.exports = {
				mediaContainer: "P8p9Nku0-ZbYCsaCOSE2t",
				Container: "_2ED-O3JtIcOqp8iIL1G5cg",
				container: "_2ED-O3JtIcOqp8iIL1G5cg",
				PostMetaWrapper: "_1u_4ufj_H3WJW2TXEZ6a3n",
				postMetaWrapper: "_1u_4ufj_H3WJW2TXEZ6a3n",
				PostTitle: "_2akYJO5RtMK_ptA408seyG",
				postTitle: "_2akYJO5RtMK_ptA408seyG",
				FlatList: "_3Dd3XvAr-WcOJyMTx4y35x",
				flatList: "_3Dd3XvAr-WcOJyMTx4y35x",
				FlatItem: "_2Pkdj4FrQFtK8COeODi_kK",
				flatItem: "_2Pkdj4FrQFtK8COeODi_kK",
				FlatListDotSpacer: "_3w73P89exX_1mpdhQCURo6",
				flatListDotSpacer: "_3w73P89exX_1mpdhQCURo6",
				LinkContainer: "CsZ0mP84ULF0bBJJa0PFy",
				linkContainer: "CsZ0mP84ULF0bBJJa0PFy",
				Content: "_379A_08LTBsR4c8POTldR_",
				content: "_379A_08LTBsR4c8POTldR_",
				ThumbnailContainer: "_7bo--rwqP4Z7K1s_8dGPX",
				thumbnailContainer: "_7bo--rwqP4Z7K1s_8dGPX"
			}
		},
		"./src/reddit/components/CrosspostBox/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return j
			})), s.d(t, "a", (function() {
				return _
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				c = s("./node_modules/reselect/es/index.js"),
				d = s("./src/lib/permalinkToOverlayLocation/index.ts"),
				l = s("./src/lib/prettyPrintNumber/index.ts"),
				m = s("./src/reddit/components/Media/index.tsx"),
				u = s("./src/reddit/components/PostMeta/index.tsx"),
				p = s("./src/reddit/components/PostTitle/index.tsx"),
				C = s("./src/reddit/components/SourceLink/index.tsx"),
				b = s("./src/reddit/components/Thumbnail/index.tsx"),
				h = s("./src/lib/constants/index.ts"),
				f = s("./src/reddit/contexts/Post/index.tsx"),
				g = s("./src/reddit/selectors/posts.ts"),
				x = s("./src/reddit/selectors/user.ts"),
				v = s("./src/reddit/components/CrosspostBox/index.m.less"),
				y = s.n(v),
				O = s("./src/lib/lessComponent.tsx");

			function E() {
				return (E = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const j = 8,
				_ = 1,
				k = O.a.div("Container", y.a),
				L = O.a.div("PostMetaWrapper", y.a),
				w = O.a.wrapped(p.c, "PostTitle", y.a),
				S = O.a.div("FlatList", y.a),
				I = O.a.div("FlatItem", y.a),
				P = O.a.span("FlatListDotSpacer", y.a),
				N = O.a.wrapped(k, "LinkContainer", y.a),
				T = O.a.div("Content", y.a),
				M = O.a.div("ThumbnailContainer", y.a),
				R = Object(c.c)({
					isCurrentUserProfilePost: g.l,
					isTopicPage: e => !(!e.platform.currentPage || !e.platform.currentPage.meta || e.platform.currentPage.meta.name !== h.Sb.TOPIC),
					shouldOpenPostInNewTab: x.lb
				}),
				F = Object(a.b)(R);
			t.c = Object(f.b)(F(e => {
				const {
					className: t,
					isCurrentUserProfilePost: s,
					isTopicPage: n,
					mediaProps: r,
					post: a,
					subredditOrProfile: i
				} = e;
				if (!a) return null;
				const c = {
						post: a,
						hideGildCta: !0,
						inSubredditOrProfile: !1,
						isCurrentUserProfilePost: s,
						isTopicPage: n,
						shouldShowSubscribeButton: !1,
						subredditOrProfile: i,
						tooltipType: `CrosspostBox--${r.isListing}`
					},
					d = t;
				return a && !a.media ? o.a.createElement(N, {
					className: d
				}, o.a.createElement(T, null, o.a.createElement(L, null, o.a.createElement(u.a, c)), B(a), a.source && o.a.createElement(C.a, {
					post: a
				}), D(e)), W(e)) : o.a.createElement(k, {
					className: d
				}, o.a.createElement(L, null, o.a.createElement(u.a, c)), B(a), A(e), D(e))
			}));
			const B = e => o.a.createElement(w, {
					isCrosspost: !0,
					post: e,
					shouldLinkWrap: !0,
					size: p.b.Small
				}),
				A = e => {
					const {
						mediaProps: t,
						post: s
					} = e, n = {
						...t,
						post: s,
						crosspost: t.post
					};
					return o.a.createElement("div", null, o.a.createElement(m.a, E({}, n, {
						className: y.a.mediaContainer,
						scrollerItemRef: t.scrollerItemRef
					})))
				},
				D = e => {
					const {
						post: t
					} = e, {
						score: s
					} = t;
					return o.a.createElement(S, null, o.a.createElement(I, null, n.fbt._({
						"*": "{point count} points",
						_1: "1 point"
					}, [n.fbt._plural(s, "point count", Object(l.b)(s))], {
						hk: "PNZhd"
					})), o.a.createElement(P, null), o.a.createElement(I, null, U(e)))
				},
				U = e => {
					const {
						post: t,
						shouldOpenPostInNewTab: s
					} = e, {
						numComments: r
					} = t;
					return o.a.createElement(i.a, {
						"data-click-id": "comments",
						to: Object(d.a)(t.permalink, !0),
						target: s ? "_blank" : void 0
					}, n.fbt._({
						"*": "{comment count} comments",
						_1: "1 comment"
					}, [n.fbt._plural(r, "comment count", Object(l.b)(r))], {
						hk: "xPYWL"
					}))
				},
				W = e => o.a.createElement(M, null, o.a.createElement(b.b, {
					post: e.post
				}))
		},
		"./src/reddit/components/CrosspostRecommendationsModal/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "CrosspostRecommendationsModal",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("CrosspostRecommendationsModal").then(s.bind(null, "./src/reddit/components/CrosspostRecommendationsModal/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/CrosspostRecommendationsModal/index.tsx"
				}
			})
		},
		"./src/reddit/components/DevvitCustomPost/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/controls/Button/index.tsx"),
				a = s("./src/reddit/models/Media/index.ts"),
				i = s("./src/reddit/icons/fonts/OutboundLink/index.tsx");
			const {
				fbt: c
			} = s("./node_modules/fbt/lib/FbtPublic.js");

			function d(e) {
				const {
					post: t
				} = e, s = t.permalink.replace("/comments/", "/post-viewer/");
				return Object(a.G)(t) ? r.a.createElement("div", {
					className: "flex items-center justify-center m-xs bg-neutral-background-weak border-sm border-neutral-border border-solid rounded-[0.5rem] w-[490px]"
				}, r.a.createElement("div", {
					className: "flex flex-col text-center py-[48px]"
				}, r.a.createElement("div", {
					className: "my-md leading-5 text-neutral-content"
				}, r.a.createElement("p", {
					className: "text-[16px] max-w-[260px]"
				}, c._("To view this interactive post, you'll need to open it in a new window.", null, {
					hk: "27Ub4M"
				}))), r.a.createElement(o.a, {
					className: "m-auto",
					kind: o.b.ExternalLink,
					href: s,
					target: "_blank",
					priority: o.c.Primary,
					rplStyle: !0
				}, r.a.createElement(r.a.Fragment, null, r.a.createElement(i.a, {
					className: "ml-0 m-xs"
				}), c._("Open", null, {
					hk: "1yvDSH"
				}))))) : null
			}
		},
		"./src/reddit/components/DistinguishCommentDropdown/DistinguishOptions.m.less": function(e, t, s) {
			e.exports = {
				DistinguishWrapper: "_3aVdI6Y8gye7mgZBvUx5X-",
				distinguishWrapper: "_3aVdI6Y8gye7mgZBvUx5X-",
				Inline: "_2fiLaXOPdMYold0b-FKdVN",
				inline: "_2fiLaXOPdMYold0b-FKdVN",
				RadioOff: "_1kl3eXeS_cuuM03T3_G8G1",
				radioOff: "_1kl3eXeS_cuuM03T3_G8G1",
				RadioOn: "_1EcSEYj-g98-QR-5idlQZr",
				radioOn: "_1EcSEYj-g98-QR-5idlQZr",
				DistinguishOptions: "_1uVj4QJ6tIy-PC9lK3eOYO",
				distinguishOptions: "_1uVj4QJ6tIy-PC9lK3eOYO"
			}
		},
		"./src/reddit/components/DistinguishCommentDropdown/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/constants/index.ts"),
				a = s("./node_modules/fbt/lib/FbtPublic.js"),
				i = s("./src/lib/lessComponent.tsx"),
				c = s("./src/reddit/components/OverlayAwareTooltip/index.tsx"),
				d = s("./src/reddit/icons/svgs/RadioOff/index.tsx"),
				l = s("./src/reddit/icons/svgs/RadioOn/index.tsx"),
				m = s("./src/reddit/layout/row/Inline/index.tsx"),
				u = s("./src/reddit/components/DistinguishCommentDropdown/DistinguishOptions.m.less"),
				p = s.n(u);
			const C = i.a.div("DistinguishWrapper", p.a),
				b = i.a.wrapped(m.a, "Inline", p.a),
				h = i.a.wrapped(d.a, "RadioOff", p.a),
				f = i.a.wrapped(l.a, "RadioOn", p.a),
				g = e => r.a.createElement(b, {
					onClick: e.selected ? void 0 : e.onClick
				}, e.selected ? r.a.createElement(f, null) : r.a.createElement(h, null), e.text),
				x = i.a.wrapped(e => {
					const {
						className: t,
						style: s,
						isAdminDistinguished: n,
						isUserEmployee: i,
						isUserMod: c,
						isModDistinguished: d,
						isStickied: l,
						isTopLevelComment: m,
						onDistinguishComment: u
					} = e;
					return r.a.createElement(C, {
						className: t,
						style: s
					}, r.a.createElement(g, {
						onClick: () => u(o.H.NONE, null),
						selected: !d && !n,
						text: a.fbt._("Undistinguish", null, {
							hk: "1P0FyT"
						})
					}), c && r.a.createElement(g, {
						onClick: () => u(o.H.MODERATOR, null),
						selected: d && !l,
						text: a.fbt._("Distinguish as Mod", null, {
							hk: "KDx42"
						})
					}), m && c && r.a.createElement(g, {
						onClick: () => u(o.H.MODERATOR, !0),
						selected: d && l,
						text: a.fbt._("Distinguish as Mod and Sticky", null, {
							hk: "1J1DBd"
						})
					}), i && r.a.createElement(g, {
						onClick: () => u(o.H.ADMIN, null),
						selected: n && !l,
						text: a.fbt._("Distinguish as Admin", null, {
							hk: "1JsJOX"
						})
					}), i && c && m && r.a.createElement(g, {
						onClick: () => u(o.H.ADMIN, !0),
						selected: n && l,
						text: a.fbt._("Distinguish as Admin and Sticky", null, {
							hk: "3x8QWN"
						})
					}))
				}, "DistinguishOptions", p.a);
			var v = Object(c.a)(x);
			t.a = e => {
				const {
					className: t,
					isAdminDistinguished: s,
					isUserEmployee: n,
					isUserMod: a,
					isModDistinguished: i,
					isStickied: c,
					isTopLevelComment: d,
					onDistinguishComment: l,
					sendEventWithName: m,
					tooltipId: u
				} = e;
				return r.a.createElement("div", {
					className: t,
					id: u
				}, r.a.createElement(v, {
					isAdminDistinguished: s,
					isUserEmployee: n,
					isUserMod: a,
					isModDistinguished: i,
					isOpen: e.isDropdownOpen,
					tooltipId: u,
					isStickied: c,
					isTopLevelComment: d,
					onDistinguishComment: (e, t) => {
						l(e, t), e === o.H.MODERATOR ? m(!c && t ? "distinguish_sticky" : "distinguish") : e === o.H.ADMIN ? m("admin_distinguish") : i && e !== o.H.MODERATOR ? m("undistinguish") : s && e !== o.H.ADMIN && m("admin_undistinguish"), c && !t && m("unsticky")
					}
				}))
			}
		},
		"./src/reddit/components/Econ/Audio/async.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "index",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => Promise.all([s.e("index~reddit-components-Econ-Prediction"), s.e("index")]).then(s.bind(null, "./src/reddit/components/Econ/Audio/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Econ/Audio/index.tsx"
				}
			})
		},
		"./src/reddit/components/Econ/PowerupsFlair/UserAchievementFlair.async.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "UserAchievementFlair",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("UserAchievementFlair").then(s.bind(null, "./src/reddit/components/Econ/PowerupsFlair/UserAchievementFlair.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Econ/PowerupsFlair/UserAchievementFlair.tsx"
				}
			})
		},
		"./src/reddit/components/Econ/Prediction/TournamentPostBody/async.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "index",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => Promise.all([s.e("index~reddit-components-Econ-Prediction"), s.e("index")]).then(s.bind(null, "./src/reddit/components/Econ/Prediction/TournamentPostBody/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Econ/Prediction/TournamentPostBody/index.tsx"
				}
			})
		},
		"./src/reddit/components/Econ/Prediction/TournamentPostTitle/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_2y7BouacdnDeKNuREDVkim",
				title: "KaBtU0qanIOVW0UniJKIe",
				label: "VmuxKqetMFPty4Vt4EAOj",
				participants: "_331K_coiMcnNskYgCaneWt",
				badge: "_29aHDAbliwom5yyuyhXsFc",
				live: "_15J6TjGStJy2YuJAIf8TW4",
				ended: "_3K1ErD5uCGRM98kPQaJ_Nv",
				awards: "_3jKFKIS1X6GZ6MOcUdAy08"
			}
		},
		"./src/reddit/components/Econ/Prediction/TournamentPostTitle/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return h
			}));
			var n = s("./src/lib/classNames/index.ts"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/reddit/components/AwardBadges/index.tsx"),
				c = s("./src/reddit/models/Prediction/Tournament/index.ts"),
				d = s("./src/reddit/selectors/posts.ts"),
				l = s("./src/lib/prettyPrintNumber/index.ts");
			const {
				fbt: m
			} = s("./node_modules/fbt/lib/FbtPublic.js"), u = e => {
				let {
					participantsCount: t
				} = e;
				return m._({
					"*": "· {total participated users} players",
					_1: "· {total participated users} player"
				}, [m._param("total participated users", Object(l.b)(t)), m._plural(t)], {
					hk: "1yrPLH"
				})
			};
			var p = s("./src/reddit/components/Econ/Prediction/TournamentPostTitle/index.m.less"),
				C = s.n(p);
			const {
				fbt: b
			} = s("./node_modules/fbt/lib/FbtPublic.js"), h = e => {
				let {
					post: t
				} = e;
				const s = t.predictionTournament,
					r = s.status === c.a.Live,
					l = s.status === c.a.Closed,
					m = Object(a.e)(e => Object(d.U)(e, {
						postId: t.id
					}));
				return o.a.createElement("div", {
					className: C.a.container
				}, o.a.createElement("div", {
					className: C.a.label
				}, o.a.createElement("span", null, null == m ? void 0 : m.displayText), r && o.a.createElement("span", {
					className: Object(n.a)(C.a.badge, C.a.live)
				}, b._("Live", null, {
					hk: "1G2P1W"
				})), l && o.a.createElement("span", {
					className: Object(n.a)(C.a.badge, C.a.ended)
				}, b._("Ended", null, {
					hk: "4s3hco"
				})), void 0 !== s.totalParticipantsCount && o.a.createElement(u, {
					participantsCount: s.totalParticipantsCount
				}), o.a.createElement(i.a, {
					className: C.a.awards,
					thing: t
				})), o.a.createElement("h3", {
					className: C.a.title
				}, s.name))
			}
		},
		"./src/reddit/components/Econ/Prediction/hooks/useTournamentsQuery.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/reddit/actions/economics/predictions/index.ts"),
				i = s("./src/reddit/selectors/features/predictions/tournaments/index.ts"),
				c = s("./src/reddit/selectors/subreddit.ts");

			function d(e) {
				const t = Object(o.d)(),
					s = Object(o.e)(t => Object(c.X)(t, {
						subredditId: e
					})),
					n = Object(o.e)(t => Object(i.i)(t, {
						subredditId: e
					})),
					d = Object(o.e)(t => Object(i.k)(t, {
						subredditId: e
					})),
					l = r.a.useCallback(() => {
						s.name && t(Object(a.l)(s.name))
					}, [s.name, t]);
				return r.a.useEffect(() => {
					d || n || l()
				}, [d, n, l]), {
					isFetching: d,
					isFetched: n,
					fetch: l
				}
			}
		},
		"./src/reddit/components/Economics/SubredditPremium/SidebarCards/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/higherOrderComponents/makeAsync.tsx"),
				r = s("./src/reddit/featureFlags/component.tsx");
			const o = Object(n.a)({
				ErrorComponent: () => null,
				LoadingComponent: () => null,
				getComponent: () => Promise.all([s.e("EconomicsSubredditPremiumSidebarCards~SubredditPremiumBadgeHovercardTooltip"), s.e("EconomicsSubredditPremiumSidebarCards")]).then(s.bind(null, "./src/reddit/components/Economics/SubredditPremium/SidebarCards/index.tsx")).then(e => e.default)
			});
			t.a = Object(r.a)("spSpecialMemberships", o)
		},
		"./src/reddit/components/ExpandedCrossposts/async.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/reddit/selectors/experiments/subredditDiscovery.ts");
			const c = Object(n.a)({
					resolved: {},
					chunkName: () => "ExpandedCrosspost",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("ExpandedCrosspost").then(s.bind(null, "./src/reddit/components/ExpandedCrossposts/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/ExpandedCrossposts/index.tsx"
					}
				}),
				d = e => {
					return Object(a.e)(i.a) ? o.a.createElement(c, e) : null
				}
		},
		"./src/reddit/components/ExpandoButton/index.m.less": function(e, t, s) {
			e.exports = {
				outer: "RvLtAcdRtbOQbhFB7MD_T",
				icon: "saNpcHve-34zjaa0cbIxW",
				hideOnHover: "_25HJpaEPiVNq6Ss3Ad7dp9",
				showOnHover: "_2S05CzViTnl3I2ekCABqFo"
			}
		},
		"./src/reddit/components/ExpandoButton/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				c = s("./src/lib/classNames/index.ts"),
				d = s("./src/lib/permalinkToOverlayLocation/index.ts"),
				l = s("./src/reddit/actions/post.ts"),
				m = s("./src/reddit/controls/OutboundLink/index.tsx"),
				u = s("./src/reddit/helpers/path/index.ts"),
				p = s("./src/reddit/helpers/postHasSelfText/index.ts"),
				C = s("./src/reddit/icons/fonts/index.tsx"),
				b = s("./src/reddit/models/Media/index.ts"),
				h = s("./src/reddit/models/Post/index.ts"),
				f = s("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				g = s("./src/telemetry/models/Outbound.ts"),
				x = s("./src/higherOrderComponents/withAdClickLocation/Locations.ts"),
				v = s("./src/reddit/components/ExpandoButton/index.m.less"),
				y = s.n(v);
			const O = Object(a.b)(null, (e, t) => ({
					toggle: () => e(Object(l.w)({
						postId: t.post.id
					})),
					showModalOnPostLinkClick: t => e(Object(l.Z)(Object(u.b)(t.permalink), t.id))
				})),
				E = function(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
						s = arguments.length > 2 ? arguments[2] : void 0;
					const n = Object(c.a)(y.a.icon, y.a.hideOnHover);
					if (t) return o.a.createElement(C.a, {
						name: "crosspost",
						className: n
					});
					if (s.pollData) return o.a.createElement(C.a, {
						name: "poll_post",
						className: n
					});
					if (s.audioRoom) return o.a.createElement(C.a, {
						name: "audio",
						className: n
					});
					switch (e) {
						case b.o.GIFVIDEO:
							return o.a.createElement(C.a, {
								name: "gif_post",
								className: n
							});
						case b.o.IMAGE:
							return o.a.createElement(C.a, {
								name: "image_post",
								className: n
							});
						case b.o.TEXT:
						case b.o.RTJSON:
							return o.a.createElement(C.a, {
								name: "text_post",
								className: n
							});
						case b.o.VIDEO:
							return o.a.createElement(C.a, {
								name: "video_post",
								className: n
							});
						case b.o.GALLERY:
							return o.a.createElement(C.a, {
								name: "media_gallery",
								className: n
							});
						case b.o.EMBED:
						default:
							return o.a.createElement(C.a, {
								name: "embed",
								className: n
							})
					}
				};
			t.a = O(e => {
				const {
					className: t,
					crosspost: s,
					enableCrosspostIcon: r,
					isCommentsPage: l,
					isExpanded: u,
					post: b,
					toggle: v,
					useMediaIcons: O
				} = e, j = s || b, _ = Object(a.e)(f.b), k = Object(a.e)(f.c), L = t => {
					(_ || k) && (t.preventDefault(), e.showModalOnPostLinkClick(j))
				}, w = j.media, S = Object(h.q)(b), I = r && !!s;
				return w && !S && !(("rtjson" === w.type || "text" === w.type || "liveaudio" === w.type) && !Object(p.a)(j)) || !!b.pollData ? o.a.createElement("button", {
					"aria-expanded": !!u,
					"aria-haspopup": !0,
					"aria-label": n.fbt._("Expand content", null, {
						hk: "1e35IG"
					}),
					className: Object(c.a)(t, y.a.outer),
					"data-click-id": u ? "expando_close" : "expando_open",
					"data-adclicklocation": x.a.MEDIA,
					onClick: v
				}, u ? o.a.createElement(C.a, {
					name: "collapse",
					className: y.a.icon
				}) : O ? o.a.createElement(o.a.Fragment, null, E(j.media && j.media.type, I, b), o.a.createElement(C.a, {
					name: "expand",
					className: Object(c.a)(y.a.icon, y.a.showOnHover)
				})) : o.a.createElement(C.a, {
					name: "expand",
					className: y.a.icon
				})) : j.source && j.source.url ? o.a.createElement(m.b, {
					"aria-label": n.fbt._("Open external content", null, {
						hk: "2FfpSI"
					}),
					className: Object(c.a)(t, y.a.outer),
					"data-click-id": "expando_open",
					href: j.source.url,
					isSponsored: b.isSponsored,
					postId: b.id,
					source: b.source,
					sourceElement: l ? g.SourceElement.PostImage : g.SourceElement.ListingPostImage,
					target: "_blank"
				}, o.a.createElement(C.a, {
					name: "external_link",
					className: Object(c.a)(y.a.icon, y.a.outboundLinkIcon)
				})) : o.a.createElement(i.a, {
					"aria-label": n.fbt._("View content", null, {
						hk: "24KLWF"
					}),
					className: Object(c.a)(t, y.a.outer),
					"data-click-id": "expando_open",
					to: Object(d.a)(j.permalink),
					rel: "nofollow",
					onClick: L
				}, o.a.createElement(C.a, {
					name: "text_post",
					className: y.a.icon
				}))
			})
		},
		"./src/reddit/components/FakeBannerAd/index.m.less": function(e, t, s) {
			e.exports = {
				BannerContainer: "_4ELfhcLRELWhYrOp6R4se",
				bannerContainer: "_4ELfhcLRELWhYrOp6R4se",
				FakeBannerAdImage: "_3q7Cs0j3hSEoS6omo8egL_",
				fakeBannerAdImage: "_3q7Cs0j3hSEoS6omo8egL_"
			}
		},
		"./src/reddit/components/FakeBannerAd/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return b
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/@researchgate/react-intersection-observer/lib/es/index.js"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/config.ts"),
				c = s("./src/reddit/components/FakeBannerAd/index.m.less"),
				d = s.n(c),
				l = s("./src/lib/lessComponent.tsx");
			const m = l.a.wrapped(e => a.a.createElement("div", {
					className: e.className,
					ref: e.bannerRef
				}, e.children), "BannerContainer", d.a),
				u = l.a.wrapped(e => a.a.createElement("img", {
					className: e.className,
					src: e.src
				}), "FakeBannerAdImage", d.a),
				p = "GoogleAd HomeAds InArticleAd LeftAd SidebarAd ad-300-250 ad-banner adbar adbox1 ads-area adsense-ad box_ad googad",
				C = .5;
			class b extends a.a.PureComponent {
				constructor() {
					super(...arguments), this.bannerRef = a.a.createRef(), this.state = {
						sentOncePerRender: !1
					}, this.handleVisibilityChange = e => {
						if (!(e.intersectionRatio < C || this.state.sentOncePerRender)) {
							const e = this.bannerRef && this.bannerRef.current,
								t = e ? e.offsetWidth : null,
								s = e ? e.offsetHeight : null;
							this.props.trackSidebarHouseAdViewability(t, s), this.setState({
								sentOncePerRender: !0
							})
						}
					}
				}
				render() {
					const {
						href: e,
						img: t
					} = this.props, {
						sentOncePerRender: s
					} = this.state, o = s ? a.a.createElement(u, {
						src: i.a.assetPath + t
					}) : a.a.createElement(r.a, {
						onChange: this.handleVisibilityChange,
						threshold: C
					}, a.a.createElement(u, {
						src: i.a.assetPath + t
					}));
					return a.a.createElement(m, {
						bannerRef: this.bannerRef,
						className: p,
						"data-before-content": n.fbt._("advertisement", null, {
							hk: "4b2OD7"
						})
					}, a.a.createElement("a", {
						href: i.a.redditUrl + e,
						target: "_blank",
						rel: "noopener noreferrer"
					}, o))
				}
			}
		},
		"./src/reddit/components/FeaturedLiveEntrypoint/LegacyAnnouncement/index.m.less": function(e, t, s) {
			e.exports = {
				AnnouncementContainer: "_2n96dzZYei5koZIof4hNGb",
				announcementContainer: "_2n96dzZYei5koZIof4hNGb",
				Title: "_2_60e51mes8qIV48MFyxwe",
				title: "_2_60e51mes8qIV48MFyxwe",
				Description: "_1ADicmI89099yV3e3zrjUD",
				description: "_1ADicmI89099yV3e3zrjUD",
				Button: "_1vGOSBVzbAH3jn-PrQ2qY5",
				button: "_1vGOSBVzbAH3jn-PrQ2qY5",
				CloseButton: "_1KlaD5sga3um3ZmSli7uwr",
				closeButton: "_1KlaD5sga3um3ZmSli7uwr",
				iconStyles: "_1vyFrq5zn33vVTIC_LlCmR"
			}
		},
		"./src/reddit/components/FocusableContent/index.m.less": function(e, t, s) {
			e.exports = {
				FocusableContent: "_3MknXZVbkWU8JL9XGlzASi",
				focusableContent: "_3MknXZVbkWU8JL9XGlzASi",
				isFocused: "_3F2J0fSnCI3ZvF_tBSaV0s",
				noBorder: "_1CpUVAt2tGEwaaBV3nZNJs"
			}
		},
		"./src/reddit/components/FocusableContent/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/lessComponent.tsx"),
				i = s("./src/reddit/components/FocusableContent/index.m.less"),
				c = s.n(i);
			t.a = a.a.wrapped(e => r.a.createElement("div", {
				className: Object(o.a)(e.className, {
					[c.a.isFocused]: e.isFocused,
					[c.a.noBorder]: e.noBorder
				})
			}, e.children), "FocusableContent", c.a)
		},
		"./src/reddit/components/Footer/index.m.less": function(e, t, s) {
			e.exports = {
				FooterContainer: "_3qDK09Tb3ktpZiYXSfeMzE",
				footerContainer: "_3qDK09Tb3ktpZiYXSfeMzE",
				mIsWhite: "_3TyrvwTfHlJHEevBoOKkDJ",
				PrivacyLink: "_2mk2nvnRu7inPdJY2i-H79",
				privacyLink: "_2mk2nvnRu7inPdJY2i-H79",
				UserAgreement: "_2qv_r3Tr8ZqOWkU9s1qRfw",
				userAgreement: "_2qv_r3Tr8ZqOWkU9s1qRfw",
				UserAgreementLink: "vzd9DQ5W5uhRFvqy1_xKh",
				userAgreementLink: "vzd9DQ5W5uhRFvqy1_xKh",
				mIsGrey: "_2g4mHpbVF30jxvk8ZPbqBe"
			}
		},
		"./src/reddit/components/Footer/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return C
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/config.ts"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/lib/lessComponent.tsx"),
				c = s("./src/reddit/components/Footer/index.m.less"),
				d = s.n(c);
			const {
				fbt: l
			} = s("./node_modules/fbt/lib/FbtPublic.js"), m = i.a.div("UserAgreement", d.a), u = i.a.a("UserAgreementLink", d.a), p = i.a.a("PrivacyLink", d.a);
			var C;
			! function(e) {
				e.Grey = "grey", e.White = "white"
			}(C || (C = {}));
			t.b = e => r.a.createElement("div", {
				className: Object(a.a)(d.a.FooterContainer, {
					[d.a.mIsGrey]: e.textColor === C.Grey,
					[d.a.mIsWhite]: e.textColor === C.White
				})
			}, r.a.createElement(m, null, l._("Use of this site constitutes acceptance of our {=User Agreement} and {=Privacy Policy.} Reddit, Inc. © {year}. All rights reserved. REDDIT and the ALIEN Logo are registered trademarks of reddit inc.", [l._param("=User Agreement", r.a.createElement(u, {
				href: `${o.a.redditUrl}/help/useragreement`
			}, l._("User Agreement", null, {
				hk: "1Dc18v"
			}))), l._param("=Privacy Policy.", r.a.createElement(p, {
				href: `${o.a.redditUrl}/help/privacypolicy`
			}, l._("Privacy Policy.", null, {
				hk: "1Ubjrd"
			}))), l._param("year", (new Date).getFullYear())], {
				hk: "yxLlI"
			})))
		},
		"./src/reddit/components/Governance/CommunityCard/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "reddit-components-Governance-CommunityCard",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("reddit-components-Governance-CommunityCard").then(s.bind(null, "./src/reddit/components/Governance/CommunityCard/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Governance/CommunityCard/index.tsx"
				}
			})
		},
		"./src/reddit/components/Governance/Leaderboard/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			const r = Object(n.a)({
				resolved: {},
				chunkName: () => "reddit-components-Governance-Leaderboard",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("reddit-components-Governance-Leaderboard").then(s.bind(null, "./src/reddit/components/Governance/Leaderboard/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Governance/Leaderboard/index.tsx"
				}
			}, {
				ssr: !1
			});
			t.a = r
		},
		"./src/reddit/components/HeaderImage/index.m.less": function(e, t, s) {
			e.exports = {
				Planet: "xAmHTHwvPxxv5jpbb68XN",
				planet: "xAmHTHwvPxxv5jpbb68XN",
				SubredditIcon: "_3rnV85Ep3gNSeNzlSEJ0eC",
				subredditIcon: "_3rnV85Ep3gNSeNzlSEJ0eC",
				HeaderText: "_2wzi-W7JiZ7A6U6aFvfvSR",
				headerText: "_2wzi-W7JiZ7A6U6aFvfvSR",
				HeaderUrl: "_36MHhLdcmnzdWt0OMdNlwd",
				headerUrl: "_36MHhLdcmnzdWt0OMdNlwd",
				Container: "_2L5G9B5yaoqW3IegiYN-FL",
				container: "_2L5G9B5yaoqW3IegiYN-FL",
				HeaderContainer: "_2RkQc9Gtsq3cPQNZLYv4zc",
				headerContainer: "_2RkQc9Gtsq3cPQNZLYv4zc",
				fullScreenDisabled: "_1yF58T8cn1Lb1f5no79sl8",
				useOverlay: "_1lDljcXh3IMpCeypDtnDAr",
				HeaderContent: "_2ejRlONMr5WoDRgyd4GRyM",
				headerContent: "_2ejRlONMr5WoDRgyd4GRyM",
				hoverHeaderContent: "wyBqMGsbezX5QI0xVtegK",
				PositionedImage: "_26j3FxU4jTfjqi8m96HMmI",
				positionedImage: "_114maV-96nVPek5oReA0kO",
				hoverPositionedImage: "_2L0wcm3McgWbJBT9_UHWyU"
			}
		},
		"./src/reddit/components/HeaderImage/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				c = s("./src/lib/lessComponent.tsx"),
				d = s("./src/reddit/constants/screenWidths.ts"),
				l = s("./src/reddit/helpers/getSubredditIcon/index.ts"),
				m = s("./src/reddit/icons/svgs/CircledPlanet/index.tsx"),
				u = s("./src/reddit/models/Theme/index.ts"),
				p = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				C = s("./src/reddit/components/HeaderImage/index.m.less"),
				b = s.n(C);
			const h = c.a.wrapped(m.a, "Planet", b.a),
				f = c.a.div("SubredditIcon", b.a),
				g = c.a.div("PositionedImage", b.a),
				x = c.a.div("HeaderContent", b.a),
				v = c.a.div("HeaderContainer", b.a),
				y = c.a.span("HeaderText", b.a),
				O = c.a.wrapped(o.a, "HeaderUrl", b.a),
				E = c.a.span("Container", b.a),
				j = Object(i.a)(e => {
					const t = Object(u.d)(e.headerText, e.prefixedHeaderText, Object(p.a)(e).banner.communityNameFormat || ""),
						s = Object(l.a)(e),
						n = Object(p.a)(e).banner.positionedImageAlignment,
						o = Object(p.a)(e).banner.positionedImage,
						i = Object(p.a)(e).banner.secondaryBannerPositionedImage;
					let c;
					switch (n) {
						case "right":
							c = {
								right: "-8px"
							};
							break;
						case "centered":
							c = {
								left: "50%",
								transform: "translate(-50%, -50%)"
							};
							break;
						default:
							c = {
								left: "-8px"
							}
					}
					const m = !!o && !!i && "left" === n,
						C = Object(p.a)(e).banner.backgroundImage,
						j = C && "string" == typeof C && "tiled" === Object(p.a)(e).banner.backgroundImagePosition ? C.split("?")[0] : C,
						_ = Object(u.f)(Object(p.a)(e).banner.backgroundColor, j, Object(p.a)(e).banner.backgroundImagePosition),
						k = parseInt(Object(p.a)(e).banner.iconDimensions.customSize, 10),
						L = `${4+k}px`;
					return r.a.createElement(E, {
						style: {
							background: _,
							filter: e.shouldBlurHeaderImage ? "blur(6px)" : "none",
							height: `${Object(p.a)(e).banner.height}px`
						}
					}, r.a.createElement(O, {
						className: e.className,
						to: e.url
					}, r.a.createElement(v, {
						className: Object(a.a)({
							[b.a.fullScreenDisabled]: !e.disableFullscreen,
							[b.a.useOverlay]: !!Object(p.a)(e).navBar.useOverlay
						}),
						style: {
							maxWidth: e.disableFullscreen ? `${e.maxWidth||d.a}px` : "100%"
						}
					}, !e.isTopBannerVariant && r.a.createElement(x, {
						className: Object(a.a)({
							[b.a.hoverHeaderContent]: m
						})
					}, e.theme && Object(p.a)(e).banner.showCommunityIcon && (s ? r.a.createElement(f, {
						style: {
							backgroundImage: `url(${s})`,
							borderRadius: `${Object(p.a)(e).banner.iconDimensions.borderRadius}px`,
							height: L,
							width: L
						}
					}) : r.a.createElement(h, {
						style: {
							padding: `${Object(p.a)(e).banner.iconDimensions.padding}px`,
							borderRadius: `${Object(p.a)(e).banner.iconDimensions.borderRadius}px`,
							height: L,
							width: L
						}
					})), r.a.createElement(y, {
						style: {
							paddingTop: 32 === k ? "4px" : "14px"
						}
					}, t)), r.a.createElement(g, {
						className: Object(a.a)(b.a.PositionedImage, {
							[b.a.positionedImage]: !!o,
							[b.a.hoverPositionedImage]: !!o && !!i
						}),
						style: {
							...c,
							height: `${Object(p.a)(e).banner.positionedImageHeight}px`
						}
					}))))
				});
			t.a = j
		},
		"./src/reddit/components/IdCard/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "IdCard",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("IdCard").then(s.bind(null, "./src/reddit/components/IdCard/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/IdCard/index.tsx"
				}
			})
		},
		"./src/reddit/components/InfoBanners/BannerBase/index.m.less": function(e, t, s) {
			e.exports = {
				IconWrapper: "_2p07tPrx9WpxDTQJ5cmVNe",
				iconWrapper: "_2p07tPrx9WpxDTQJ5cmVNe",
				TextWrapper: "_2jpm-rNr0Hniw6BX3NWMVe",
				textWrapper: "_2jpm-rNr0Hniw6BX3NWMVe",
				leftSideRectangle: "_3TLlMYjrPH9Kl9522LpSxb",
				wrapper: "_1DUKbp8va6vxOv9zemBDBi",
				subtitle: "_2J85dtk0HKQBLk8HTSWduv",
				title: "Nt8TnDvJ2BsL8KWcFQKy5"
			}
		},
		"./src/reddit/components/InfoBanners/BannerBase/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return m
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/components/InfoBanners/BannerBase/index.m.less"),
				i = s.n(a),
				c = s("./src/lib/lessComponent.tsx");
			const d = c.a.div("IconWrapper", i.a),
				l = c.a.div("TextWrapper", i.a);

			function m(e) {
				const {
					className: t,
					color: s,
					icon: n,
					subtitle: a,
					title: c,
					textWrapperClassName: m
				} = e;
				return r.a.createElement("div", {
					className: Object(o.a)(t, i.a.wrapper),
					style: s && {
						borderColor: s
					} || {}
				}, r.a.createElement("div", {
					className: i.a.leftSideRectangle,
					style: s && {
						backgroundColor: s
					} || {}
				}), n ? r.a.createElement(d, null, n) : r.a.createElement(d, null), r.a.createElement(l, {
					className: m
				}, r.a.createElement("div", {
					className: i.a.title
				}, c), a && r.a.createElement("div", {
					className: i.a.subtitle
				}, a)))
			}
		},
		"./src/reddit/components/InfoBanners/CommentThreadArchivedBanner/index.m.less": function(e, t, s) {
			e.exports = {
				BannerBase: "_1EjIqPTCvhReSe3IjZptiB",
				bannerBase: "_1EjIqPTCvhReSe3IjZptiB",
				ArchivedIcon: "_3Apkcb3itLCGec85v2ZzFz",
				archivedIcon: "_3Apkcb3itLCGec85v2ZzFz"
			}
		},
		"./src/reddit/components/InfoBanners/CommentThreadArchivedBanner/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/reddit/constants/colors.ts"),
				i = s("./src/reddit/icons/fonts/Archived/index.tsx"),
				c = s("./src/reddit/components/InfoBanners/BannerBase/index.tsx"),
				d = s("./src/reddit/components/InfoBanners/CommentThreadArchivedBanner/index.m.less"),
				l = s.n(d);
			t.a = () => o.a.createElement(c.a, {
				className: l.a.BannerBase,
				color: a.a.locked,
				icon: o.a.createElement(i.a, {
					className: l.a.ArchivedIcon
				}),
				subtitle: n.fbt._("New comments cannot be posted and votes cannot be cast", null, {
					hk: "3jwi5b"
				}),
				title: n.fbt._("This thread is archived", null, {
					hk: "kEcat"
				})
			})
		},
		"./src/reddit/components/InfoBanners/CommentThreadLockedBanner/index.m.less": function(e, t, s) {
			e.exports = {
				lockIcon: "_26YMkU38Pb6t5wXIJSne-H",
				bannerBase: "jf95ZrrjIs2i--Ud8Kvb7"
			}
		},
		"./src/reddit/components/InfoBanners/CommentThreadLockedBanner/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return b
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/lib/linkMatchers/customLinks.ts"),
				i = s("./src/reddit/constants/colors.ts"),
				c = s("./src/reddit/icons/svgs/SquareLock/index.tsx"),
				d = s("./src/reddit/models/Subreddit/index.ts"),
				l = s("./src/reddit/components/InfoBanners/BannerBase/index.tsx"),
				m = s("./src/reddit/components/InfoBanners/CommentThreadLockedBanner/index.m.less"),
				u = s.n(m);
			const p = o.a.createElement(c.a, {
					className: u.a.lockIcon
				}),
				C = e => Object(d.i)(e) ? a.d.profile : a.d.subreddit;

			function b(e) {
				let {
					subredditOrProfile: t
				} = e;
				const s = t ? n.fbt._("This thread has been locked by the moderators of {communityname}", [n.fbt._param("communityname", C(t) + t.name)], {
					hk: "2HSQXz"
				}) : n.fbt._("This thread has been locked", null, {
					hk: "4fn3dn"
				});
				return o.a.createElement(l.a, {
					className: u.a.bannerBase,
					color: i.a.locked,
					icon: p,
					subtitle: n.fbt._("New comments cannot be posted", null, {
						hk: "2A32Yr"
					}),
					title: s
				})
			}
		},
		"./src/reddit/components/InfoBanners/ContestModeEnabledBanner/index.m.less": function(e, t, s) {
			e.exports = {
				contestModeEnabled: "_3Jf9vrUhPCp1M6DPL_bjy9",
				TrophyIcon: "_3v30vS-N87epKUIqWSlBm1",
				trophyIcon: "_3v30vS-N87epKUIqWSlBm1"
			}
		},
		"./src/reddit/components/InfoBanners/ContestModeEnabledBanner/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				i = s("./src/lib/lessComponent.tsx"),
				c = s("./src/reddit/components/InfoBanners/BannerBase/index.tsx"),
				d = s("./src/reddit/icons/svgs/Trophy/index.tsx"),
				l = s("./src/reddit/components/InfoBanners/ContestModeEnabledBanner/index.m.less"),
				m = s.n(l);
			const u = i.a.wrapped(d.a, "TrophyIcon", m.a);
			t.a = Object(a.a)(e => {
				const {
					hasModeratorPostPermissions: t,
					theme: s
				} = e, r = t ? n.fbt._("Comments are in random ordering and vote scores are hidden to non-mods", null, {
					hk: "2gpz9d"
				}) : n.fbt._("Comments are in random ordering and vote scores are hidden", null, {
					hk: "3qrgsh"
				});
				return o.a.createElement(c.a, {
					className: m.a.contestModeEnabled,
					color: s && s.newCommunityTheme.linkText,
					icon: o.a.createElement(u, null),
					subtitle: r,
					title: n.fbt._("This post has contest mode enabled", null, {
						hk: "42oz5Q"
					})
				})
			})
		},
		"./src/reddit/components/InfoBanners/PostRemovalBanner/helpers.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return p
			})), s.d(t, "b", (function() {
				return C
			})), s.d(t, "f", (function() {
				return f
			})), s.d(t, "d", (function() {
				return g
			})), s.d(t, "e", (function() {
				return x
			})), s.d(t, "c", (function() {
				return v
			}));
			var n = s("./src/config.ts"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/reddit/icons/svgs/ClearFilled/index.tsx"),
				i = s("./src/reddit/icons/svgs/ModRemove/index.tsx"),
				c = s("./src/reddit/icons/svgs/Trash2/index.tsx"),
				d = s("./src/reddit/models/Post/index.ts"),
				l = s("./src/reddit/components/InfoBanners/PostRemovalBanner/index.m.less"),
				m = s.n(l);
			const {
				fbt: u
			} = s("./node_modules/fbt/lib/FbtPublic.js"), p = e => {
				let t;
				switch (e) {
					case d.g.AntiEvilOps:
					case d.g.AutomodFiltered:
					case d.g.CommunityOps:
					case d.g.ContentTakedown:
					case d.g.CopyrightTakedown:
					case d.g.Reddit:
						t = a.a;
						break;
					case d.g.AuthorDeleted:
					case d.g.Author:
						t = c.b;
						break;
					case d.g.Moderator:
						t = i.a;
						break;
					default:
						t = a.a
				}
				return o.a.createElement(t, {
					className: m.a.icon
				})
			}, C = e => {
				let t;
				switch (e) {
					case d.g.AntiEvilOps:
					case d.g.AutomodFiltered:
					case d.g.CommunityOps:
					case d.g.ContentTakedown:
					case d.g.CopyrightTakedown:
					case d.g.Reddit:
						t = "clear_fill";
						break;
					case d.g.AuthorDeleted:
					case d.g.Author:
						t = "delete_fill";
						break;
					case d.g.Moderator:
						t = "mod_fill";
						break;
					default:
						t = "clear_fill"
				}
				return t
			}, b = () => u._("To keep Reddit and its communities safe, the Anti-Evil Operations team removes posts that violate Reddit's {=User Agreement} and {=Content Policy} .", [u._param("=User Agreement", o.a.createElement("a", {
				className: m.a.link,
				href: "https://www.redditinc.com/policies/user-agreement"
			}, u._("User Agreement", null, {
				hk: "3MHgRl"
			}))), u._param("=Content Policy", o.a.createElement("a", {
				className: m.a.link,
				href: "https://www.redditinc.com/policies/content-policy"
			}, u._("Content Policy", null, {
				hk: "3UZthQ"
			})))], {
				hk: "4g3zuW"
			}), h = () => u._("Reddit administrators occasionally remove posts that violate Reddit's {=User Agreement} and {=Content Policy} .", [u._param("=User Agreement", o.a.createElement("a", {
				className: m.a.link,
				href: "https://www.redditinc.com/policies/user-agreement"
			}, u._("User Agreement", null, {
				hk: "yMHtU"
			}))), u._param("=Content Policy", o.a.createElement("a", {
				className: m.a.link,
				href: "https://www.redditinc.com/policies/content-policy"
			}, u._("Content Policy", null, {
				hk: "2dCXGu"
			})))], {
				hk: "2DLuNP"
			}), f = (e, t) => {
				switch (e) {
					case d.g.AntiEvilOps:
						return u._("Sorry, this post was removed by Reddit's Anti-Evil Operations team.", null, {
							hk: "2ZqyRT"
						});
					case d.g.Author:
						return u._("Sorry, this post was removed by the person who originally posted it.", null, {
							hk: "4IRCN"
						});
					case d.g.AuthorDeleted:
						return u._("Sorry, this post was deleted by the person who originally posted it.", null, {
							hk: "4emmIp"
						});
					case d.g.AutomodFiltered:
						return u._("Post is awaiting moderator approval.", null, {
							hk: "wdGOr"
						});
					case d.g.CommunityOps:
						return u._("Sorry, this post was removed by Reddit's Community team.", null, {
							hk: "3fs5lF"
						});
					case d.g.ContentTakedown:
						return u._("Sorry, this post was removed by Reddit.", null, {
							hk: "3XSuKc"
						});
					case d.g.CopyrightTakedown:
						return u._("Sorry, this post was removed by Reddit's Legal Operations team.", null, {
							hk: "1TbEDT"
						});
					case d.g.Moderator:
						return u._("Sorry, this post has been removed by the moderators of r/{subredditName}.", [u._param("subredditName", t)], {
							hk: "12NWKq"
						});
					case d.g.Reddit:
						return u._("Sorry, this post was removed by Reddit's spam filters.", null, {
							hk: "10ItEu"
						});
					default:
						return u._("Sorry, this post has been removed", null, {
							hk: "11sG9V"
						})
				}
			}, g = (e, t) => {
				switch (e) {
					case d.g.AntiEvilOps:
						return o.a.createElement(b, null);
					case d.g.AuthorDeleted:
					case d.g.Author:
						return u._("It doesn't appear in any feeds, and anyone with a direct link to it will see a message like this one.", null, {
							hk: "2OBDBc"
						});
					case d.g.AutomodFiltered:
						return u._("This post is currently awaiting approval by the moderators of {=[subreddit name]} before it can appear in the subreddit.", [u._param("=[subreddit name]", o.a.createElement("a", {
							className: m.a.link,
							href: `${n.a.redditUrl}/r/${t}`,
							target: "_blank",
							rel: "noopener noreferrer"
						}, u._("{subreddit name}", [u._param("subreddit name", `r/${t}`)], {
							hk: "2o22vl"
						})))], {
							hk: "3dxuEW"
						});
					case d.g.CommunityOps:
						return u._("It's rare, but Reddit's Community Team will occasionally remove posts from feeds to keep communities safe and civil.", null, {
							hk: "uPiHS"
						});
					case d.g.ContentTakedown:
						return o.a.createElement(h, null);
					case d.g.CopyrightTakedown:
						return u._("This content was removed in response to a copyright claim by a third party.", null, {
							hk: "2e8fhi"
						});
					case d.g.Moderator:
						return u._("Moderators remove posts from feeds for a variety of reasons, including keeping communities safe, civil, and true to their purpose.", null, {
							hk: "QXZPk"
						});
					case d.g.Reddit:
					default:
						return u._("Reddit's automated bots frequently filter posts it thinks might be spam.", null, {
							hk: "3vUmEz"
						})
				}
			}, x = (e, t, s) => {
				switch (e) {
					case d.g.AntiEvilOps:
						return u._("This post was removed by Reddit's Anti-Evil Operations team.", null, {
							hk: "3a8CyR"
						});
					case d.g.Author:
						return u._("This post was removed by the person who originally posted it.", null, {
							hk: "2lyUgL"
						});
					case d.g.AuthorDeleted:
						return u._("This post was deleted by the person who originally posted it.", null, {
							hk: "16LeiH"
						});
					case d.g.AutomodFiltered:
						return u._("This post was reported by automod, and is waiting for your review.", null, {
							hk: "2E46dR"
						});
					case d.g.CommunityOps:
						return u._("This post was removed by Reddit admin, u/{username}.", [u._param("username", t)], {
							hk: "34nHWu"
						});
					case d.g.ContentTakedown:
						return u._("This post was removed by Reddit.", null, {
							hk: "3uR3iw"
						});
					case d.g.CopyrightTakedown:
						return u._("This post was removed by Reddit's Legal Operations team.", null, {
							hk: "Ukfj"
						});
					case d.g.Moderator:
						return u._("This post was removed by r/{subredditName} moderator, u/{username}.", [u._param("subredditName", s), u._param("username", t)], {
							hk: "270bcn"
						});
					case d.g.Reddit:
						return u._("This post was removed by Reddit's spam filters.", null, {
							hk: "1k3lsh"
						});
					default:
						return u._("This post was removed by Reddit's spam filters.", null, {
							hk: "3oxS8r"
						})
				}
			}, v = e => {
				switch (e) {
					case d.g.AntiEvilOps:
						return o.a.createElement(b, null);
					case d.g.AuthorDeleted:
					case d.g.Author:
						return u._("It won't show up in your community feed, and anyone with a direct link to it will see a message similar to this one.", null, {
							hk: "2KZLgT"
						});
					case d.g.AutomodFiltered:
						return u._("It won’t show up in your community feed until you or another moderator approve it.", null, {
							hk: "2X5ECb"
						});
					case d.g.CommunityOps:
						return u._("To keep Reddit and its communities safe, the Community team occasionally removes posts from feeds. To learn more, {=just ask} .", [u._param("=just ask", o.a.createElement("a", {
							className: m.a.link,
							href: `${n.a.redditUrl}/message/compose/?to=r/reddit.com`,
							target: "_blank",
							rel: "noopener noreferrer"
						}, u._("just ask", null, {
							hk: "jn9ip"
						})))], {
							hk: "3hMocZ"
						});
					case d.g.ContentTakedown:
						return o.a.createElement(h, null);
					case d.g.CopyrightTakedown:
						return u._("This content was removed in response to a copyright claim by a third party.", null, {
							hk: "7jiV"
						});
					case d.g.Moderator:
						return u._("It won't show up in your community feed, and moderators will see a message similar to this one.", null, {
							hk: "22qJOB"
						});
					case d.g.Reddit:
						return u._("Reddit's automated bots frequently filter posts it thinks might be spam.", null, {
							hk: "3S3oDL"
						});
					default:
						return u._("Reddit's automated bots frequently filter posts it thinks might be spam.", null, {
							hk: "uKfHK"
						})
				}
			}
		},
		"./src/reddit/components/InfoBanners/PostRemovalBanner/index.m.less": function(e, t, s) {
			e.exports = {
				BannerBase: "_2bSWRKmIOj8SKw_5EOrpVb",
				bannerBase: "_2bSWRKmIOj8SKw_5EOrpVb",
				icon: "S7CavmS-v3qdubhT9asIc",
				link: "FmwbWt4ZwkxbQbR-0vj1G"
			}
		},
		"./src/reddit/components/InfoBanners/QuarantinedSubredditBanner/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_3UJGTKmHd4TVKyOdhiMAJ1",
				rawHtmlDisplay: "s2P-f2c3l2Irco5Ru0S5J",
				link: "_1eRb8-B7kEgkwxWFSWuVUk",
				icon: "WCZvfrkaO-Zq7vsDKOAdS"
			}
		},
		"./src/reddit/components/InfoBanners/QuarantinedSubredditBanner/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/reddit/components/RawHTMLDisplay/index.tsx"),
				d = s("./src/reddit/constants/colors.ts"),
				l = s("./src/reddit/controls/InternalLink/index.tsx"),
				m = s("./src/reddit/icons/svgs/QuarantineWarning/index.tsx"),
				u = s("./src/reddit/selectors/subreddit.ts"),
				p = s("./src/reddit/components/InfoBanners/BannerBase/index.tsx"),
				C = s("./src/reddit/components/InfoBanners/QuarantinedSubredditBanner/index.m.less"),
				b = s.n(C);
			const h = o.a.createElement(m.a, {
					className: b.a.icon
				}),
				f = Object(i.c)({
					subreddit: u.C,
					subredditAboutInfo: u.z
				}),
				g = Object(a.b)(f);
			t.a = g(e => {
				const {
					subreddit: t,
					subredditAboutInfo: s
				} = e;
				if (!(t && t.isQuarantined)) return null;
				const r = s && s.quarantineMessageHtml,
					a = s && s.quarantineMessage || n.fbt._("It is dedicated to shocking or highly offensive content.", null, {
						hk: "2QoofC"
					});
				return o.a.createElement(p.a, {
					className: b.a.container,
					color: d.a.quarantine,
					icon: h,
					subtitle: o.a.createElement("span", null, n.fbt._("This community is {=quarantined}", [n.fbt._param("=quarantined", o.a.createElement("a", {
						className: b.a.link,
						href: "https://www.reddithelp.com/en/categories/reddit-101/rules-reporting/account-and-community-restrictions/quarantined-subreddits",
						target: "_blank",
						rel: "noopener noreferrer"
					}, n.fbt._("quarantined", null, {
						hk: "2XqfJa"
					})))], {
						hk: "AG2cS"
					}), ": ", r ? o.a.createElement(c.a, {
						className: b.a.rawHtmlDisplay,
						html: r
					}) : a, " ", o.a.createElement(l.default, {
						className: b.a.link,
						to: "/"
					}, n.fbt._("Click to return home.", null, {
						hk: "3FgSpg"
					}))),
					title: n.fbt._("Community Quarantined", null, {
						hk: "3RKbEl"
					})
				})
			})
		},
		"./src/reddit/components/ItemCarousel/helpers.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			})), s.d(t, "b", (function() {
				return i
			}));
			var n, r = s("./src/reddit/helpers/richTextJson/index.ts"),
				o = s("./src/reddit/models/Media/index.ts");
			! function(e) {
				e.POST = "post", e.SUBREDDIT = "subreddit", e.CROSSPOST = "crosspost"
			}(n || (n = {}));
			const a = /(?:reddit\.com\/r\/)(?<subreddit>[\w]+)(?:\/comments\/)?(?<postId>[\w]+)?/,
				i = e => {
					var t, s, i;
					if ((null == e ? void 0 : e.media) && Object(o.M)(e.media) && (null === (s = null === (t = e.media.richtextContent) || void 0 === t ? void 0 : t.document) || void 0 === s ? void 0 : s.length) > 0) {
						const t = Object(r.e)(e.media.richtextContent.document, !0);
						return 0 === t.length ? [] : null === (i = t.reduce) || void 0 === i ? void 0 : i.call(t, (e, t) => {
							var s;
							const {
								subreddit: r,
								postId: o
							} = (null === (s = t.match(a)) || void 0 === s ? void 0 : s.groups) || {};
							return o && r ? [...e, {
								id: `t3_${o}`,
								url: t,
								type: n.POST
							}] : r ? [...e, {
								id: r,
								url: t,
								type: n.SUBREDDIT
							}] : e
						}, [])
					}
					return []
				}
		},
		"./src/reddit/components/ItemCarousel/index.m.less": function(e, t, s) {
			e.exports = {
				redditLinkCard: "_3cx1eazwYdVDDYc1dPyiR5",
				title: "_39Ml3ujYhKuR2k_LFpXVKI",
				shimmer: "_1ow4mWwRckO61gSLo-7v0b",
				crosspostTitle: "_22-ViNeyjOeL6ua8KDyKye",
				crosspostLinkCard: "_2iAbfa2D0rYH0bhwTONlI_",
				subredditLink: "_218c5HLOpg15zujvZOJ-jL",
				crosspostIcon: "_8rGN4GQ7vHLKekUlLRoHr",
				imageContainer: "_18r8N8O6-u5F1b97604EtU",
				thumbnailPlaceholder: "_1s2zQgETSy4lq4_Lx3sOZr",
				postDescription: "_12PklAY2VQxTTv7zYRGtFp",
				postStats: "_32BkJbsXEUbnRV8IdWALfx",
				separator: "_1sTUU46KrE7KfTGqDC-a29",
				carouselContainer: "_1rK-TdqBly0Ah1V-s2iNL4",
				constantWidth: "_13jkDfTREXT08dxlYnS8eF",
				flexWidth: "_3u_85Dp7oQMFiSQ4sLv1st",
				flexWidthTwoItems: "_3lv5cSLrhQNAMfRDhbY5yF",
				carouselTitle: "_2rN6AyQVzdFs8i43El1QF4",
				scrollIcon: "thm33nRT_QsxwagdC3y0O",
				carouselHeader: "_4keJkmF2kMGrQiCFuVyZP",
				carouselControls: "_2nzp90JhlrKYHbygwSg66",
				hasTitle: "_2g5PF1KCS_D1_wrxAataDQ",
				buttonWrapper: "_1FeNy7DyUXo50Xg6y7vYGE",
				scrollButton: "r6d8ZhiJGupMHDZ_VT92q",
				left: "_39XyIEf8_iPNJBEO56MJf-",
				right: "_2fa9qw7f4611Kfap-xuQAs",
				hidden: "_3y0dWvmqYpVeqdC-tWTBUc",
				itemsContainer: "WrOtvEVbiINAEhr1-6kip",
				large: "B_GPQ8fojjJzonrunPyKW",
				small: "q4_nxOUe2RNORWKR6Fyqc",
				subredditItem: "_3eJ3Vuzskg5QPjF0vWpWmv",
				subredditIcon: "_1atFEw7H5vpTJAn0fGBc_P",
				carouselContent: "_2rvSe7lZ7Qt5qCgXf_J0qB",
				bannerWrapper: "_1JhjjQQiHUTuMYhG1tGhPm",
				banner: "_3KgCrfIwPj-Tdwy64OBwWr",
				description: "_3V3hHaMDC4uZNCfwyBbz4g",
				lockup: "_24tuGHItai5L2nwJXdscK1",
				lockupText: "_1yYrDsHa8VjZpORJ4q0yYS",
				subredditName: "_1SXVDK7RjZdh5oUY2F-oQy",
				subscribersCount: "_1h7eV26RDHcql9mvKfi45C",
				contentWrapper: "rgoe5x8WumPeeNjIHn671",
				backgroundImage: "_23MqHKNvwrRo1D5A8ce1zw",
				subscribeButton: "_2sGQoRqSFOXnUrrQsZO3jK",
				blur: "_3kz2nO3JA6igVlQhzIq08X",
				flair: "BkSa7JPwUk1I4IglSRWbb",
				gradientAnimation: "_2KJPHlL6kS7WEhZRcgx8PN"
			}
		},
		"./src/reddit/components/ItemCarousel/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/lib/classNames/index.ts"),
				r = s("./src/lib/constants/icons.ts"),
				o = s("./node_modules/lodash/throttle.js"),
				a = s.n(o),
				i = s("./node_modules/react/index.js"),
				c = s.n(i),
				d = s("./node_modules/react-redux/es/index.js"),
				l = s("./src/reddit/actions/subreddit/subredditCarousel.ts"),
				m = s("./src/reddit/icons/fonts/index.tsx"),
				u = s("./src/reddit/selectors/subreddit.ts"),
				p = s("./node_modules/fbt/lib/FbtPublic.js"),
				C = s("./src/lib/constants/index.ts"),
				b = s("./src/lib/prettyPrintNumber/index.ts"),
				h = s("./src/lib/timeAgo/index.ts"),
				f = s("./src/reddit/controls/ContentType/index.tsx"),
				g = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				x = s("./src/reddit/components/Flair/index.tsx"),
				v = s("./src/reddit/selectors/telemetry.ts");
			var y = s("./src/reddit/models/Flair/index.ts"),
				O = s("./src/telemetry/index.ts"),
				E = s("./src/reddit/components/ItemCarousel/index.m.less"),
				j = s.n(E);
			const _ = e => {
				let {
					postCard: t,
					post: s,
					className: r
				} = e;
				const {
					url: o,
					commentCount: a,
					createdAt: l,
					score: m,
					title: u,
					thumbnail: E,
					isNsfw: _,
					subreddit: k
				} = t, L = Object(d.e)(e => e);
				Object(i.useEffect)(() => {
					s && k && Object(O.a)(((e, t) => s => ({
						source: "post_discovery",
						action: "view",
						noun: "post_post",
						post: e,
						subreddit: t,
						...v.q(s)
					}))(s, k)(L))
				}, []);
				return c.a.createElement(g.a, {
					to: (null == o ? void 0 : o.replace(/^.*\/\/[^\/]+/, "")) || "",
					className: Object(n.a)(j.a.redditLinkCard, r),
					onClick: () => {
						Object(O.a)(((e, t) => s => ({
							source: "post_discovery",
							action: "click",
							noun: "post_post",
							post: e,
							subreddit: t,
							...v.q(s)
						}))(s, k)(L))
					}
				}, c.a.createElement("div", {
					className: Object(n.a)(j.a.imageContainer)
				}, (null == E ? void 0 : E.url) ? c.a.createElement("img", {
					src: E.url,
					className: Object(n.a)(_ && j.a.blur)
				}) : c.a.createElement(f.a, {
					type: "text",
					className: j.a.thumbnailPlaceholder
				})), c.a.createElement("div", {
					className: j.a.postDescription
				}, c.a.createElement("div", null, c.a.createElement("div", {
					className: j.a.title
				}, u), _ && c.a.createElement(x.c, {
					isFlairFilter: !0,
					flair: {
						type: y.f.Nsfw,
						text: "nsfw"
					},
					className: j.a.flair
				})), c.a.createElement("div", {
					className: j.a.postStats
				}, m && c.a.createElement(c.a.Fragment, null, c.a.createElement("span", null, Object(b.b)(m), " ", p.fbt._("points", null, {
					hk: "3jOMNh"
				})), c.a.createElement("span", {
					className: j.a.separator
				}, "•")), a && c.a.createElement("span", null, Object(b.b)(a), " ", p.fbt._("comments", null, {
					hk: "2x1D6M"
				})), c.a.createElement("span", {
					className: j.a.separator
				}, "•"), l && c.a.createElement("span", null, Object(h.a)(new Date(l).getTime() / C.Wb, !0)))))
			};
			var k = s("./src/reddit/selectors/posts.ts"),
				L = s("./src/reddit/components/ItemCarousel/helpers.ts"),
				w = s("./src/reddit/components/TrackingHelper/index.tsx"),
				S = s("./src/reddit/components/SubredditNameLink/index.tsx"),
				I = s("./src/reddit/helpers/trackers/features/expandedCrossposts.ts"),
				P = s("./src/reddit/icons/svgs/Crosspost/index.tsx");
			const N = e => {
				let {
					crosspostCard: t,
					post: s,
					className: r
				} = e;
				const {
					permalink: o,
					commentCount: a,
					title: l,
					thumbnail: m,
					isNsfw: u,
					subreddit: C
				} = t, b = Object(d.e)(e => e);
				Object(i.useEffect)(() => {
					s && C && Object(O.a)(Object(I.c)(s, C)(b))
				}, [s, C, b]);
				return c.a.createElement(g.a, {
					to: o,
					className: Object(n.a)(j.a.redditLinkCard, j.a.crosspostLinkCard, r),
					onClick: () => {
						Object(O.a)(Object(I.a)(s, C)(b))
					}
				}, c.a.createElement("div", {
					className: Object(n.a)(j.a.imageContainer)
				}, (null == m ? void 0 : m.url) ? c.a.createElement("img", {
					src: m.url,
					className: Object(n.a)(u && j.a.blur)
				}) : c.a.createElement(f.a, {
					type: "text",
					className: j.a.thumbnailPlaceholder
				})), c.a.createElement("div", {
					className: j.a.postDescription
				}, c.a.createElement("div", {
					className: j.a.postStats
				}, c.a.createElement(P.a, {
					className: j.a.crosspostIcon
				}), c.a.createElement(S.a, {
					to: null == C ? void 0 : C.path,
					onClick: e => {
						e.stopPropagation()
					},
					className: j.a.subredditLink
				}, `r/${null==C?void 0:C.name}`), c.a.createElement("span", {
					className: j.a.separator
				}, "•"), c.a.createElement("span", null, p.fbt._({
					"*": "{number} comments",
					_1: "1 comment"
				}, [p.fbt._plural(a || 0, "number")], {
					hk: "3QAYMS"
				}))), c.a.createElement("div", {
					className: Object(n.a)(j.a.title, j.a.crosspostTitle)
				}, u && c.a.createElement(x.c, {
					isFlairFilter: !0,
					flair: {
						type: y.f.Nsfw,
						text: "nsfw"
					},
					className: j.a.flair
				}), l)))
			};
			var T = c.a.memo(e => {
					let {
						className: t
					} = e;
					return c.a.createElement("div", {
						className: Object(n.a)(j.a.redditLinkCard, t)
					}, c.a.createElement("div", {
						className: Object(n.a)(j.a.shimmer, j.a.imageContainer)
					}), c.a.createElement("div", {
						className: j.a.postDescription
					}, c.a.createElement("div", {
						className: Object(n.a)(j.a.shimmer, j.a.title)
					}), c.a.createElement("div", {
						className: Object(n.a)(j.a.shimmer, j.a.postStats)
					})))
				}),
				M = s("./src/reddit/actions/subreddit.ts"),
				R = s("./src/reddit/components/SubscribeButton/index.tsx"),
				F = s("./src/reddit/controls/Button/index.tsx"),
				B = s("./src/reddit/icons/svgs/CommunityDefault/filled.tsx");
			const {
				fbt: A
			} = s("./node_modules/fbt/lib/FbtPublic.js"), D = e => {
				let {
					id: t,
					index: s,
					name: r,
					subscribersCount: o,
					description: a,
					primaryColor: l,
					icon: m,
					isSubscribed: p,
					banner: C,
					path: h,
					size: f,
					isDiscovery: g,
					post: E,
					className: _,
					isNsfw: k
				} = e;
				const L = Object(d.d)();
				Object(i.useEffect)(() => {
					L(Object(M.u)(r))
				}, [L, r]);
				const w = Object(d.e)(e => Object(u.X)(e, {
						subredditId: t
					})),
					I = Object(d.e)(e => e);
				Object(i.useEffect)(() => {
					E && w && g && Object(O.a)(((e, t) => s => ({
						source: "post_discovery",
						action: "view",
						noun: "community_post",
						post: e,
						subreddit: t,
						...v.q(s)
					}))(E, w)(I))
				}, []);
				const P = Object(i.useCallback)(e => {
					if (g) return (e => {
						let {
							noun: t,
							subredditId: s,
							index: n,
							source: r,
							...o
						} = e;
						return e => ({
							...o,
							source: r,
							noun: t,
							actionInfo: {
								reason: `${n}`
							},
							subreddit: Object(u.X)(e, {
								subredditId: s
							})
						})
					})({
						action: "click",
						post: E,
						noun: e ? "unsubscribe" : "subscribe",
						subredditId: t,
						index: s,
						source: "post_discovery"
					})
				}, [t, s, p]);
				return c.a.createElement("div", {
					className: Object(n.a)(j.a.subredditItem, null === j.a || void 0 === j.a ? void 0 : j.a[f], _)
				}, c.a.createElement("div", {
					className: j.a.contentWrapper
				}, c.a.createElement("div", {
					className: j.a.bannerWrapper,
					style: {
						backgroundColor: l || void 0
					}
				}, c.a.createElement("img", {
					className: j.a.banner,
					src: C || void 0
				})), c.a.createElement("div", {
					className: j.a.carouselContent
				}, c.a.createElement(S.a, {
					to: h,
					className: j.a.lockup,
					onClick: () => {
						g && Object(O.a)(((e, t) => s => ({
							source: "post_discovery",
							action: "click",
							noun: "community_post",
							post: e,
							subreddit: t,
							...v.q(s)
						}))(E, w)(I))
					}
				}, c.a.createElement("div", {
					style: "small" === f ? {
						backgroundColor: "grey",
						backgroundImage: `url(${C||""})`
					} : {},
					className: j.a.backgroundImage
				}, m ? c.a.createElement("img", {
					src: m,
					className: j.a.subredditIcon
				}) : c.a.createElement(B.a, {
					className: j.a.subredditIcon
				})), c.a.createElement("div", {
					className: j.a.lockupText
				}, c.a.createElement("span", {
					className: j.a.subredditName
				}, "r/", r), " ", k && c.a.createElement(x.c, {
					isFlairFilter: !0,
					flair: {
						type: y.f.Nsfw,
						text: "nsfw"
					},
					className: j.a.flair
				}), c.a.createElement("span", {
					className: j.a.subscribersCount
				}, A._({
					"*": "{number} members",
					_1: "1 member"
				}, [A._plural(o, "number", Object(b.b)(o))], {
					hk: "4yqFU9"
				})))), c.a.createElement("p", {
					className: j.a.description
				}, a)), c.a.createElement(R.a, {
					className: j.a.subscribeButton,
					identifier: {
						name: r,
						type: "subreddit"
					},
					getEventFactory: P,
					priority: F.c.Tertiary,
					small: !0
				})))
			};

			function U() {
				return (U = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const {
				fbt: W
			} = s("./node_modules/fbt/lib/FbtPublic.js"), H = e => {
				var t, s;
				const n = null === (s = null === (t = e.firstChild) || void 0 === t ? void 0 : t.getBoundingClientRect()) || void 0 === s ? void 0 : s.width;
				return n ? Math.floor(e.clientWidth / n) : 0
			}, V = Object(w.c)(e => {
				let {
					title: t,
					className: s,
					itemIds: o,
					size: p = "large",
					hasSubredditNames: C = !1,
					hasPostIds: b = !1,
					isDiscovery: h,
					post: f
				} = e;
				const g = Object(d.d)(),
					[x, v] = Object(i.useState)(null),
					[y, O] = Object(i.useState)(null),
					[E, w] = Object(i.useState)({
						left: !1,
						right: !0
					}),
					[S, I] = Object(i.useState)(0),
					[P] = Object(i.useState)(void 0),
					{
						subredditIds: M,
						crosspostIds: R,
						postIds: F,
						postUrls: B
					} = Object(i.useMemo)(() => o.reduce((e, t) => {
						let {
							type: s,
							id: n,
							url: r
						} = t;
						switch (s) {
							case L.a.SUBREDDIT:
								e.subredditIds.push(n.toLowerCase());
								break;
							case L.a.POST:
								r && (e.postUrls[n] = r), e.postIds.push(n);
								break;
							case L.a.CROSSPOST:
								e.crosspostIds.push(n)
						}
						return e
					}, {
						subredditIds: [],
						postIds: [],
						crosspostIds: [],
						postUrls: {}
					}), [o]),
					A = Object(d.e)(e => Object(u.D)(e, M)),
					W = Object(d.e)(e => Object(k.K)(e, F)),
					V = Object(d.e)(e => Object(k.K)(e, R)),
					Z = A.reduce((e, t) => (e[C ? t.name.toLocaleLowerCase() : t.id] = t, e), {}),
					q = W.reduce((e, t) => (e[t.id] = t, e), {}),
					z = V.reduce((e, t) => (e[t.id] = t, e), {});
				Object(i.useEffect)(() => {
					((null == M ? void 0 : M.length) || F.length || R.length) && g(Object(l.e)(M, C, M, b, [...R, ...F]))
				}, [M, R, F, g, b, C]);
				const K = o.filter((e, t, s) => t === s.findIndex(t => t.id === e.id)).reduce((e, t) => {
						let {
							type: s,
							id: n
						} = t;
						switch (s) {
							case L.a.SUBREDDIT:
								const t = null == Z ? void 0 : Z[n.toLowerCase()];
								if (!t || !h && t.isNsfw || !h && t.isSubscribed) break;
								e.push({
									type: s,
									props: t
								});
								break;
							case L.a.POST:
								const r = null == q ? void 0 : q[n];
								if (!r) break;
								e.push({
									type: s,
									props: r
								});
								break;
							case L.a.CROSSPOST:
								const o = null == z ? void 0 : z[n];
								if (!o) break;
								e.push({
									type: s,
									props: o
								})
						}
						return e
					}, []),
					G = e => () => {
						var t, s;
						if (!y) return;
						const n = null === (s = null === (t = null == y ? void 0 : y.firstChild) || void 0 === t ? void 0 : t.getBoundingClientRect()) || void 0 === s ? void 0 : s.width;
						if (!n) return;
						const r = (Math.sign(e) ? y.scrollLeft % n : n % y.scrollLeft) || 0,
							o = n * e - r;
						y.scrollBy({
							left: o,
							behavior: "smooth"
						})
					},
					Y = Object(i.useCallback)(() => {
						if (!y) return;
						const {
							width: e
						} = null == y ? void 0 : y.getBoundingClientRect(), t = (null == y ? void 0 : y.scrollLeft) > 0, s = (null == y ? void 0 : y.scrollLeft) < y.scrollWidth - e;
						0 === (null == y ? void 0 : y.scrollLeft) && y.scrollWidth - e == 0 || w({
							left: t,
							right: s
						})
					}, [y]);
				Object(i.useEffect)(() => {
					if (!x || !y) return;
					const e = a()(() => {
						const e = H(y);
						I(e)
					}, 30);
					window.addEventListener("resize", e);
					const t = H(y);
					return I(t), Y(), () => {
						window.removeEventListener("resize", e)
					}
				}, [x, y, Y, S, K.length]);
				const J = () => 1 === K.length ? j.a.flexWidth : 2 === K.length ? j.a.flexWidthTwoItems : j.a.constantWidth;
				return c.a.createElement("div", {
					ref: v,
					className: Object(n.a)(j.a.carouselContainer, s, null === j.a || void 0 === j.a ? void 0 : j.a[p])
				}, c.a.createElement("div", {
					className: j.a.carouselHeader,
					style: {
						width: P
					}
				}, c.a.createElement("h3", {
					className: j.a.carouselTitle
				}, t)), c.a.createElement("div", {
					ref: O,
					onScroll: Y,
					className: Object(n.a)(j.a.itemsContainer, null === j.a || void 0 === j.a ? void 0 : j.a[p]),
					style: {
						width: P
					}
				}, !K.length && Array(3).fill(!0).map((e, t) => c.a.createElement(T, {
					key: t,
					className: J()
				})), null == K ? void 0 : K.map((e, t) => {
					let {
						type: s,
						props: n
					} = e;
					var r, o, a;
					switch (s) {
						case L.a.SUBREDDIT:
							const e = n;
							return c.a.createElement(D, U({
								className: J(),
								index: t + 1,
								size: p,
								banner: null === j.a || void 0 === j.a ? void 0 : j.a.bannerBackgroundImage,
								icon: (null === (r = null == e ? void 0 : e.styles) || void 0 === r ? void 0 : r.icon) || (null === (a = null === (o = e.styles) || void 0 === o ? void 0 : o.legacyIcon) || void 0 === a ? void 0 : a.url),
								key: `${null==e?void 0:e.name}:${t}`,
								isDiscovery: !0,
								post: f
							}, e));
						case L.a.POST:
							const s = n;
							return c.a.createElement(_, {
								postCard: {
									...s,
									url: B[s.id]
								},
								className: J(),
								post: f
							});
						case L.a.CROSSPOST:
							const i = n;
							return c.a.createElement(N, {
								crosspostCard: {
									...i
								},
								className: J(),
								post: f
							});
						default:
							return null
					}
				})), K.length > 2 && c.a.createElement("div", {
					className: Object(n.a)(j.a.carouselControls, {
						[j.a.hasTitle]: !!t
					})
				}, c.a.createElement("div", {
					className: Object(n.a)(j.a.buttonWrapper, j.a.left, {
						[j.a.hidden]: !E.left
					})
				}, c.a.createElement("button", {
					className: j.a.scrollButton,
					onClick: G(-S)
				}, c.a.createElement(m.a, {
					name: r.a.left_fill,
					className: j.a.scrollIcon
				}))), c.a.createElement("div", {
					className: Object(n.a)(j.a.buttonWrapper, j.a.right, {
						[j.a.hidden]: !E.right
					})
				}, c.a.createElement("button", {
					className: j.a.scrollButton,
					onClick: G(S)
				}, c.a.createElement(m.a, {
					name: r.a.right_fill,
					className: j.a.scrollIcon
				})))))
			});
			t.a = V
		},
		"./src/reddit/components/JumpToContent/index.m.less": function(e, t, s) {
			e.exports = {
				button: "_3KaTO_3YaHK3SMocnu8jV9",
				rightBorder: "_1Bt_cwKVUG30M9eNB-9rU4",
				rightBorderExp: "d2l2sN1D4PNVkzMmwALA2",
				wrapper: "_32Xa3voy05uAFz3ZnopP_S",
				wrapperExp: "_1C67uwkUf95iJOZ63vDJOZ"
			}
		},
		"./src/reddit/components/JumpToContent/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return C
			})), s.d(t, "b", (function() {
				return h
			})), s.d(t, "a", (function() {
				return f
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/constants/componentSizes.ts"),
				c = s("./src/reddit/contexts/NavbarExp.ts"),
				d = s("./src/reddit/controls/Button/index.tsx"),
				l = s("./src/reddit/components/JumpToContent/index.m.less"),
				m = s.n(l);
			const u = Object(r.createContext)(null),
				p = Object(r.createContext)(null);
			class C extends o.a.Component {
				constructor() {
					super(...arguments), this.state = {
						handleRef: null
					}, this.setHandleRef = e => {
						this.state.handleRef !== e && this.setState({
							handleRef: e
						})
					}
				}
				render() {
					return o.a.createElement(u.Provider, {
						value: this.props.isOverlayOpen ? null : this.state.handleRef
					}, o.a.createElement(p.Provider, {
						value: this.setHandleRef
					}, this.props.children))
				}
			}
			const b = i.f + 10,
				h = o.a.memo(() => {
					const [e, t] = Object(r.useState)("-500px"), s = Object(r.useContext)(c.a);
					return o.a.createElement(u.Consumer, null, r => r && o.a.createElement("div", {
						className: Object(a.a)(m.a.wrapper, {
							[m.a.wrapperExp]: s
						}),
						"data-testid": "jump-to-content"
					}, o.a.createElement(d.t, {
						kind: d.b.Button,
						priority: d.c.Plain,
						className: m.a.button,
						style: {
							marginLeft: e
						},
						onBlur: e => {
							const s = e.currentTarget.clientWidth + 55;
							t(`-${s}px`)
						},
						onFocus: () => {
							t("0")
						},
						onClick: () => {
							r.focus(), r.scrollIntoView(), window.scrollBy(0, -b)
						}
					}, n.fbt._("Jump to content", null, {
						hk: "2zWOmQ"
					})), o.a.createElement("div", {
						className: Object(a.a)(m.a.rightBorder, {
							[m.a.rightBorderExp]: s
						})
					})))
				}),
				f = o.a.memo(() => o.a.createElement(p.Consumer, null, e => o.a.createElement("div", {
					ref: e,
					tabIndex: 0
				})))
		},
		"./src/reddit/components/ListingPostList/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/reddit/components/PostList/index.tsx"),
				r = s("./src/reddit/connectors/PostList/index.ts");
			t.a = Object(r.a)(n.a)
		},
		"./src/reddit/components/MediumPost/MediumThumbnail.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/reddit/components/NotificationButton/index.tsx"),
				d = s("./src/reddit/components/SubscribeButton/Inline.tsx"),
				l = s("./src/reddit/components/Thumbnail/index.tsx"),
				m = s("./src/reddit/constants/posts.ts"),
				u = s("./src/reddit/controls/Button/index.tsx"),
				p = s("./src/reddit/helpers/trackers/post.ts"),
				C = s("./src/reddit/hooks/useIsClient.ts"),
				b = s("./src/reddit/models/Subreddit/index.ts"),
				h = s("./src/reddit/selectors/experiments/shredditParity.ts"),
				f = s("./src/reddit/components/MediumPost/index.m.less"),
				g = s.n(f);
			t.a = e => {
				let {
					crosspost: t,
					post: s,
					forceShowNSFW: r,
					redditStyle: f,
					shouldShowSubscribeButton: x,
					subredditOrProfile: v,
					templatePlaceholderImage: y,
					shouldShowFollowButton: O,
					isFollowed: E,
					isCommentsPage: j,
					onFollowPostClick: _
				} = e;
				const k = Object(C.a)(),
					L = Object(a.e)(h.a);
				return k ? o.a.createElement(o.a.Fragment, null, o.a.createElement("div", {
					className: Object(i.a)(g.a.thumbnailContainer, {
						[g.a.mShowingButtonOrOverflow]: O || x
					})
				}, o.a.createElement("div", {
					className: g.a.thumbnailContainerRow
				}, O && o.a.createElement(c.a, {
					isFilled: !!E,
					onClick: _,
					hasTooltip: !0,
					tooltipText: n.fbt._("Follow post to stay updated", null, {
						hk: "26UP9Z"
					})
				}), x && v && o.a.createElement(d.a, {
					className: g.a.subscribeButton,
					getEventFactory: e => Object(p.n)(s.id, e ? "unsubscribe" : "subscribe"),
					identifier: {
						name: v.name,
						type: Object(b.i)(v) ? m.a.PROFILE : m.a.SUBREDDIT
					},
					postId: s.id,
					small: !0,
					priority: L ? u.c.Secondary : void 0,
					isShredditParityEnabled: L
				})), o.a.createElement(l.b, {
					crosspost: t,
					isCommentsPage: j,
					post: s,
					redditStyle: f,
					forceShowNSFW: r,
					templatePlaceholderImage: y
				}))) : null
			}
		},
		"./src/reddit/components/MediumPost/index.m.less": function(e, t, s) {
			e.exports = {
				mainBody: "yn9v_hQEhjlRNZI0xspbA",
				postTitle: "_2wImphGg_1LcEF5MiErvRx",
				subscribeButton: "_2as7ZiIO6VQmOoNUm62veu",
				thumbnailContainer: "_17nmfaMf1Rq20sVfEmle0O",
				mShowingButtonOrOverflow: "yIt5UPS176eVebNGNRQtf",
				content: "_32pB7ODBwG3OSx1u_17g58",
				horizontalVotes: "_1Lt8O-wG_BSSv9bpz5gmwV",
				flatlistContainer: "XrvmOG7SxKlAJj71Fwi2y",
				backgroundWrapper: "_2uazWzYzM0Qndpz5tFu3EX",
				container: "_3xuFbFM3vrCqdGuKGhhhn0",
				leftPadding: "i7Fs9tR9IvW9lWlOG_yrY",
				thumbnailContainerRow: "ly1p6kYBCM7ZqoRjGeAhw",
				postOverflow: "x4YOGJe9jA6wgzmbyKZK0",
				postSource: "_2BgmOVmNwratQ_mDI9DaHR",
				modModeBannerWrapper: "_1wpVciZItCVMc_3pYSceM5",
				realtimeAnimation: "S33xGQRDwuEu0UCuySY-8",
				realtimeFade: "_1I9NB7KmCGwAHbfEpCOf8V",
				isNightMode: "MTt6QTOKMo8xdDlYmv456",
				realtimeFadeNight: "_15WFTB2XFDPefKceV0OM7e",
				realtimeUpdated: "lJOoJ1Pj5PqAnL0NdDYyM"
			}
		},
		"./src/reddit/components/ModProgressModule/index.m.less": function(e, t, s) {
			e.exports = {
				ThemedWidget: "tz3-IX6gYrZlbiZWRw5jD",
				themedWidget: "tz3-IX6gYrZlbiZWRw5jD",
				completed: "_2B0VV6SdB2XjjxadViz15Q",
				tooltipIsActive: "_28uNH-IBuxe83YxCxYlnOb",
				ModuleTitle: "_2aJs6bbECHiAGoO2WTwYa7",
				moduleTitle: "_2aJs6bbECHiAGoO2WTwYa7",
				ModSettingsIcon: "zi2IcHQ6-qpSGsOzDk6Su",
				modSettingsIcon: "zi2IcHQ6-qpSGsOzDk6Su",
				headerButtonsContainer: "_2_EnVDjbXLqtMoZxrXfqFD",
				ChevronIcon: "wUVzkQ_WMwTxwYbvR50Yb",
				chevronIcon: "wUVzkQ_WMwTxwYbvR50Yb",
				ProgressContainer: "_1oJUEnPSqSbY1munC3h7_E",
				progressContainer: "_1oJUEnPSqSbY1munC3h7_E",
				ProgressDescription: "_1TqN8-iakaWhtZvgpUaWAj",
				progressDescription: "_1TqN8-iakaWhtZvgpUaWAj",
				progressCount: "_3zufL-ajBszVrFsqSo1RVV",
				progressText: "_2qiL_cOXT9k5zDizfDNl9",
				darkFont: "_3pebDR2YBVgOVPtes2otJ",
				Description: "_1--LMLAxYX0l9LaibrBWVc",
				description: "_1--LMLAxYX0l9LaibrBWVc",
				CloseButton: "_1ODkNuC8Nwwbdi1XywFOpi",
				closeButton: "_1ODkNuC8Nwwbdi1XywFOpi",
				CardContainer: "_2YShnlNvvx9BkckLObKkwD",
				cardContainer: "_2YShnlNvvx9BkckLObKkwD",
				Card: "_-lU3INdzFYlY4zni0Pss",
				card: "_-lU3INdzFYlY4zni0Pss",
				unclickable: "_2LyLq46VyzgH6SYt5kWKmL",
				ContentContainer: "_2k3Vset5R9ftXzEIKyA8ll",
				contentContainer: "_2k3Vset5R9ftXzEIKyA8ll",
				IconContainer: "_3TqMO0quYw9KoVrQmpcHYp",
				iconContainer: "_3TqMO0quYw9KoVrQmpcHYp",
				CheckIcon: "_3aOKPfcH1CkkyC4FOUcPkx",
				checkIcon: "_3aOKPfcH1CkkyC4FOUcPkx",
				Icon: "QNbSE3fPPc1M8MakLm1Bi",
				icon: "QNbSE3fPPc1M8MakLm1Bi",
				CardTitle: "_1Q0pYNzV9Pmz1VXWG1DO3p",
				cardTitle: "_1Q0pYNzV9Pmz1VXWG1DO3p",
				Title: "_2GyfJdanPW5aCT405tuR0i",
				title: "_2GyfJdanPW5aCT405tuR0i",
				overflowButton: "GFzLxcAwA3BPE4dxI-d4W",
				imageUploader: "_2EJWiSLsB96D6FOsAajSH-"
			}
		},
		"./src/reddit/components/ModProgressModule/index.tsx": function(e, t, s) {
			"use strict";
			s.r(t);
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/react-router-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/lib/classNames/index.ts"),
				d = s("./src/reddit/actions/modal.ts"),
				l = s("./src/reddit/actions/subreddit/inlineEditing.ts"),
				m = s("./src/reddit/actions/subreddit/questions.ts"),
				u = s("./src/reddit/actions/tooltip.ts"),
				p = s("./src/reddit/components/ModWelcomeTooltip/index.tsx"),
				C = s("./src/reddit/components/ModWelcomeTooltip/async.tsx"),
				b = s("./src/reddit/components/NewCommunityProgress/icons/index.tsx"),
				h = s("./src/reddit/components/TrackingHelper/index.tsx"),
				f = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				g = s("./src/reddit/constants/modals.ts"),
				x = s("./src/reddit/controls/Button/index.tsx"),
				v = s("./src/reddit/controls/ImageInput/index.tsx"),
				y = s("./src/reddit/endpoints/subreddit/newCommunityProgress.ts"),
				O = s("./src/reddit/helpers/trackers/communityProgressModule.ts"),
				E = s("./src/reddit/icons/fonts/index.tsx"),
				j = s("./src/reddit/icons/fonts/ModSettings/index.tsx"),
				_ = s("./src/reddit/icons/svgs/Chevron/index.tsx"),
				k = s("./src/reddit/models/ApiRequestState/index.ts"),
				L = s("./src/reddit/models/NewCommunityProgress/index.ts"),
				w = s("./src/reddit/selectors/experiments/newCommunityProgressV3.ts"),
				S = s("./src/reddit/selectors/tooltip.ts"),
				I = s("./src/reddit/components/ModProgressModule/index.m.less"),
				P = s.n(I);
			const {
				fbt: N
			} = s("./node_modules/fbt/lib/FbtPublic.js"), T = (e, t, s) => {
				let {
					id: n,
					title: o,
					iconIdentifier: a
				} = e;
				const i = b.b[a];
				return r.a.createElement("div", {
					className: Object(c.a)(P.a.Card, {
						[P.a.unclickable]: t
					}),
					key: n,
					onClick: e => {
						e.stopPropagation(), !t && s()
					}
				}, r.a.createElement("span", {
					className: P.a.ContentContainer
				}, r.a.createElement("span", {
					className: Object(c.a)(P.a.IconContainer, {
						[P.a.completed]: t
					})
				}, t ? r.a.createElement(E.a, {
					name: "checkmark",
					className: P.a.CheckIcon
				}) : r.a.createElement(E.a, {
					name: i,
					className: P.a.Icon
				})), r.a.createElement("span", {
					className: P.a.CardTitle
				}, o)))
			}, M = Object(i.c)({
				isTooltipOpen: e => Object(S.a)(e) === p.MOD_WELCOME_TOOLTIP_ID,
				progressModuleRecords: w.c
			});
			class R extends r.a.Component {
				constructor(e) {
					super(e), this.inputRef = null, this.setInputRef = e => this.inputRef = e, this.onChangeIconFileInput = e => {
						const t = Object(k.b)();
						this.setState({
							apiRequestId: t
						}), this.props.uploadCommunityIcon(e, t)
					}, this.renderImageUploader = () => r.a.createElement(v.a, {
						className: P.a.imageUploader,
						inputRef: this.setInputRef,
						key: this.state.apiRequestId || void 0,
						multiple: !1,
						onChange: this.onChangeIconFileInput
					}), this.onOpenIconUploadScreen = () => this.inputRef && this.inputRef.click(), this.state = {
						apiRequestId: null
					}
				}
				componentDidMount() {
					this.props.progressModuleRecords && this.props.progressModuleRecords[this.props.subredditId] && this.props.sendEvent(Object(O.g)(this.props.progressModuleRecords[this.props.subredditId]))
				}
				onClickCard(e, t) {
					"add_descr" === t ? this.props.onOpenDescriptionModal() : "first_post_v3" === t ? this.props.onNavigateToSubmit() : this.onOpenIconUploadScreen(), this.props.sendEvent(Object(O.b)(e, t))
				}
				render() {
					var e, t, s, n, o;
					const {
						isTooltipOpen: a,
						onCompleteModule: i,
						onTopBarClicked: d,
						progressModuleRecords: l,
						subredditId: m,
						subredditName: u
					} = this.props, b = l && l[m];
					if (!b) return r.a.createElement(f.a, {
						className: P.a.ThemedWidget,
						contentOnly: !0,
						headerButton: r.a.createElement("div", {
							className: P.a.headerButtonsContainer
						}, r.a.createElement(_.a, {
							className: P.a.ChevronIcon
						})),
						title: r.a.createElement("div", {
							className: P.a.ModuleTitle
						}, r.a.createElement(j.a, {
							className: P.a.ModSettingsIcon
						}), N._("Mod Tools", null, {
							hk: "2Gg52f"
						})),
						titleClassName: P.a.titleClassName,
						onClick: d
					});
					const h = (null === (e = null == b ? void 0 : b.progress) || void 0 === e ? void 0 : e.done) === (null === (t = null == b ? void 0 : b.progress) || void 0 === t ? void 0 : t.total),
						g = 0 === (null === (s = b.progress) || void 0 === s ? void 0 : s.done);
					return r.a.createElement(r.a.Fragment, null, r.a.createElement(f.a, {
						className: Object(c.a)(P.a.ThemedWidget, {
							[P.a.completed]: h,
							[P.a.tooltipIsActive]: a
						}),
						contentOnly: !0,
						headerButton: r.a.createElement("div", {
							className: P.a.headerButtonsContainer
						}, r.a.createElement(_.a, {
							className: P.a.ChevronIcon
						})),
						id: p.MOD_WELCOME_TOOLTIP_ID,
						onHeaderClick: d,
						title: r.a.createElement("div", {
							className: P.a.ModuleTitle
						}, r.a.createElement(j.a, {
							className: P.a.ModSettingsIcon
						}), N._("Mod Tools", null, {
							hk: "2Gg52f"
						})),
						titleClassName: P.a.titleClassName
					}, r.a.createElement("div", {
						className: P.a.ProgressContainer
					}, r.a.createElement("div", null, r.a.createElement("div", {
						className: P.a.Title
					}, h ? N._("Well done, you're set up!", null, {
						hk: "3sJd9H"
					}) : N._("Set up r/{subredditName}", [N._param("subredditName", u)], {
						hk: "3SHelG"
					})), r.a.createElement("div", {
						className: P.a.ProgressDescription
					}, r.a.createElement("span", {
						className: P.a.progressCount
					}, N._("{cardsComplete} of {totalCards}", [N._param("cardsComplete", null === (n = b.progress) || void 0 === n ? void 0 : n.done), N._param("totalCards", null === (o = b.progress) || void 0 === o ? void 0 : o.total)], {
						hk: "1gMzOE"
					})), " ", r.a.createElement("span", {
						className: Object(c.a)(P.a.progressText, {
							[P.a.darkFont]: g
						})
					}, N._("tasks completed", null, {
						hk: "DxeNq"
					}))), g && r.a.createElement("div", {
						className: P.a.Description
					}, N._("Get your community off the ground with these tasks", null, {
						hk: "3n0h53"
					})))), !h && r.a.createElement("div", {
						className: P.a.CardContainer
					}, b.cards.map(e => {
						const t = e.status === L.a.COMPLETED;
						return T(e, t, () => this.onClickCard(b, e.id))
					})), h && r.a.createElement(x.t, {
						className: P.a.CloseButton,
						onClick: i,
						priority: x.c.Tertiary
					}, N._("Close", null, {
						hk: "3UZAZk"
					})), r.a.createElement(C.a, {
						isOpen: a
					})), this.renderImageUploader())
				}
			}
			const F = Object(o.b)(M, (e, t) => ({
				onCompleteModule: () => e(Object(y.c)(t.subredditId, L.d)),
				onNavigateToSubmit: () => e(Object(a.b)(`/r/${t.subredditName}/submit`)),
				onOpenDescriptionModal: () => e(Object(d.i)(g.a.EDIT_DESCRIPTION_MODAL)),
				onOpenTooltip: () => e(Object(u.h)({
					tooltipId: p.MOD_WELCOME_TOOLTIP_ID
				})),
				onTopBarClicked: () => e(Object(a.b)(`/r/${t.subredditName}/about`)),
				uploadCommunityIcon: (s, n) => {
					e(Object(l.a)(t.subredditId, s, n)), e(Object(m.b)(t.subredditId))
				}
			}));
			t.default = F(Object(h.c)(R))
		},
		"./src/reddit/components/ModWelcomeTooltip/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "ModWelcomeTooltip",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => Promise.resolve().then(s.bind(null, "./src/reddit/components/ModWelcomeTooltip/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/ModWelcomeTooltip/index.tsx"
				}
			})
		},
		"./src/reddit/components/ModalStyledComponents/index.m.less": function(e, t, s) {
			e.exports = {
				CloseIcon: "_3XSQHPxjCTSWWZh_u-d0Xf",
				closeIcon: "_3XSQHPxjCTSWWZh_u-d0Xf",
				ModalBody: "_2R3RlhymCOkPrz9TusvcPq",
				modalBody: "_2R3RlhymCOkPrz9TusvcPq",
				ModalPostPreview: "HydQQ-TD4TUsVnxkYk_5F",
				modalPostPreview: "HydQQ-TD4TUsVnxkYk_5F",
				ModalText: "mFTHPdbEAklUs8yhT4Xm7",
				modalText: "mFTHPdbEAklUs8yhT4Xm7",
				ModalSmallText: "_3cwQrg-XvocnoG0U22wT8t",
				modalSmallText: "_3cwQrg-XvocnoG0U22wT8t",
				ModalDescriptionText: "_12g_PUGHD-w7T1w4Q3oTsq",
				modalDescriptionText: "_12g_PUGHD-w7T1w4Q3oTsq",
				ModalMetaText: "_27eskYssCs-urVW1uHI4YI",
				modalMetaText: "_27eskYssCs-urVW1uHI4YI",
				ModalFormItem: "_3xiY8nTCVp16qSb6CGW2Kv",
				modalFormItem: "_3xiY8nTCVp16qSb6CGW2Kv",
				ModalInput: "_20ZSV7ktyDYzPcd1UMQWZT",
				modalInput: "_20ZSV7ktyDYzPcd1UMQWZT",
				ModalInputLabel: "HVADn-LHFLaS8r6IBJWeq",
				modalInputLabel: "HVADn-LHFLaS8r6IBJWeq",
				ModalFooter: "_-0i7atRJ5NBsrRM5wuPpX",
				modalFooter: "_-0i7atRJ5NBsrRM5wuPpX",
				ModalHeader: "_1Fa5Xv7f16v5IC2Tq1m2Fy",
				modalHeader: "_1Fa5Xv7f16v5IC2Tq1m2Fy",
				ModalTitle: "eLnlHLGCDxjFf3jfGTcZu",
				modalTitle: "eLnlHLGCDxjFf3jfGTcZu",
				ModalMain: "_1uaasV6RaxBfRyVgQJdiKs",
				modalMain: "_1uaasV6RaxBfRyVgQJdiKs",
				ModalAnnotation: "gLlWG7Oj89Ost4_twUu8w",
				modalAnnotation: "gLlWG7Oj89Ost4_twUu8w",
				TextArea: "_2h8O7PjrCXfaJJWKrAxJPL",
				textArea: "_2h8O7PjrCXfaJJWKrAxJPL",
				WarningButton: "_17UyTSs2atqnKg9dIq5ERg",
				warningButton: "_17UyTSs2atqnKg9dIq5ERg",
				PrimaryButton: "_2X1FFYUx3jzlnbcegBC_Sr",
				primaryButton: "_2X1FFYUx3jzlnbcegBC_Sr",
				CancelButton: "_1QUX9-zZuGtifS6jJBUyh-",
				cancelButton: "_1QUX9-zZuGtifS6jJBUyh-",
				RemoveButton: "_2ulRgczjI5SWCMgSA1CNLj",
				removeButton: "_2ulRgczjI5SWCMgSA1CNLj",
				ConfirmButton: "JZC61-VzVuaiHdWuRUiSC",
				confirmButton: "JZC61-VzVuaiHdWuRUiSC"
			}
		},
		"./src/reddit/components/ModalStyledComponents/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return p
			})), s.d(t, "e", (function() {
				return C
			})), s.d(t, "n", (function() {
				return b
			})), s.d(t, "p", (function() {
				return h
			})), s.d(t, "o", (function() {
				return f
			})), s.d(t, "f", (function() {
				return g
			})), s.d(t, "m", (function() {
				return x
			})), s.d(t, "h", (function() {
				return v
			})), s.d(t, "j", (function() {
				return y
			})), s.d(t, "k", (function() {
				return O
			})), s.d(t, "g", (function() {
				return E
			})), s.d(t, "i", (function() {
				return j
			})), s.d(t, "q", (function() {
				return _
			})), s.d(t, "d", (function() {
				return k
			})), s.d(t, "l", (function() {
				return L
			})), s.d(t, "t", (function() {
				return w
			})), s.d(t, "u", (function() {
				return S
			})), s.d(t, "r", (function() {
				return I
			})), s.d(t, "a", (function() {
				return P
			})), s.d(t, "s", (function() {
				return N
			})), s.d(t, "c", (function() {
				return T
			}));
			var n = s("./src/lib/classNames/index.ts"),
				r = s("./src/lib/lessComponent.tsx"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/reddit/controls/Button/index.tsx"),
				c = s("./src/reddit/controls/Input/ModalInput.tsx"),
				d = s("./src/reddit/icons/svgs/Close/index.tsx"),
				l = s("./src/reddit/components/ModalStyledComponents/index.m.less"),
				m = s.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const p = r.a.wrapped(d.a, "CloseIcon", m.a),
				C = r.a.section("ModalBody", m.a),
				b = r.a.section("ModalPostPreview", m.a),
				h = r.a.p("ModalText", m.a),
				f = r.a.div("ModalSmallText", m.a),
				g = r.a.div("ModalDescriptionText", m.a),
				x = r.a.div("ModalMetaText", m.a),
				v = r.a.label("ModalFormItem", m.a),
				y = r.a.wrapped(c.a, "ModalInput", m.a),
				O = r.a.label("ModalInputLabel", m.a),
				E = r.a.footer("ModalFooter", m.a),
				j = r.a.header("ModalHeader", m.a),
				_ = r.a.div("ModalTitle", m.a),
				k = r.a.div("ModalAnnotation", m.a),
				L = r.a.div("ModalMain", m.a),
				w = r.a.textarea("TextArea", m.a),
				S = r.a.wrapped(i.l, "WarningButton", m.a),
				I = r.a.wrapped(i.l, "PrimaryButton", m.a),
				P = r.a.wrapped(i.o, "CancelButton", m.a),
				N = r.a.wrapped(i.r, "RemoveButton", m.a),
				T = e => {
					let {
						className: t,
						...s
					} = e;
					return a.a.createElement(i.t, u({
						kind: i.b.Button,
						priority: i.c.Primary,
						className: Object(n.a)(m.a.ConfirmButton, t)
					}, s))
				}
		},
		"./src/reddit/components/NewCommentPill/async.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			}));
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r);
			const a = Object(n.a)({
					resolved: {},
					chunkName: () => "NewCommentPill",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("NewCommentPill").then(s.bind(null, "./src/reddit/components/NewCommentPill/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/NewCommentPill/index.tsx"
					}
				}),
				i = e => o.a.createElement(a, e)
		},
		"./src/reddit/components/NewCommunityProgress/icons/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return a
			})), s.d(t, "b", (function() {
				return i
			}));
			var n = s("./src/lib/constants/icons.ts"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r);
			const a = {
					HELPFUL: e => o.a.createElement("svg", {
						className: e.className,
						width: "60",
						height: "60",
						viewBox: "0 0 60 60",
						fill: "none",
						xmlns: "http://www.w3.org/2000/svg"
					}, o.a.createElement("g", {
						clipPath: "url(#clip0)"
					}, o.a.createElement("path", {
						d: "M13.8375 59.9999C12.8344 59.9999 11.8969 59.9062 11.0297 59.728C10.0875 59.5171 9.1875 59.2077 8.33437 58.8046C7.50468 58.4108 6.70781 57.9187 5.96718 57.3468C5.37656 56.8921 4.75312 56.3108 4.07343 55.5749C2.80312 54.1827 1.87031 52.8046 1.21406 51.3608C0.824995 50.4937 0.53437 49.6358 0.351558 48.8155C0.15937 47.9577 0.0468704 47.0905 0.00937041 46.2374C-0.0187546 45.3233 -4.5849e-06 44.5218 0.0796829 43.7812C0.145308 43.0218 0.27187 42.2108 0.45937 41.3858C0.820308 39.8202 1.36875 38.3062 2.08125 36.8905C2.75156 35.5452 3.57656 34.228 4.52812 32.9812C4.94062 32.4374 5.41406 31.8655 5.97656 31.2374L6.22968 30.9655C6.40312 30.778 6.57187 30.5952 6.77343 30.3937C7.13437 30.0327 7.4625 29.7421 7.80468 29.4702C8.27343 29.0999 8.73281 28.8093 9.21093 28.5702C9.40312 28.4765 9.6 28.3874 9.79687 28.3171C8.86875 27.5015 7.97812 26.6624 7.13437 25.8187C3.92812 22.5983 2.00156 19.4905 1.24218 16.3124C-0.126567 10.5937 2.61093 6.8296 4.36406 5.09522C7.90781 1.58897 11.5172 0.285847 16.425 0.740534C21.9281 1.25616 26.2969 4.27491 28.9922 6.72178C29.7562 7.41085 30.6797 8.3671 31.1953 9.59522C31.2234 9.55772 31.2516 9.52491 31.2844 9.4921C32.3297 8.24053 33.2344 7.23741 34.1297 6.33272C35.2594 5.1796 36.3656 4.21397 37.5094 3.3796C39.5109 1.88428 42.7453 0.079597 46.7437 -9.05512e-05C47.7375 -0.00946555 48.6234 0.0842844 49.4578 0.253034C50.3719 0.454597 51.2437 0.749909 52.0641 1.13897C52.8937 1.53272 53.6672 2.00616 54.3656 2.5546C54.9422 3.0046 55.5281 3.55772 56.1984 4.29366C57.3984 5.61553 58.3172 7.00772 58.9359 8.43272C59.5922 9.89991 59.9625 11.6202 60 13.3968C60.0328 15.8483 59.5219 18.3749 58.5187 20.714C57.2531 24.103 55.1297 26.8265 53.5687 28.5093C52.7953 29.3437 51.7078 30.3655 50.2828 30.8343C51.3703 31.7718 52.425 32.7515 53.4281 33.764C56.6391 36.9796 58.5656 40.0874 59.325 43.2655C60.6937 48.9843 57.9562 52.7483 56.2031 54.4827C53.1 57.553 49.9359 58.9218 45.9281 58.9218C45.3562 58.9218 44.7562 58.8937 44.1422 58.8374C43.0031 58.7296 41.8312 58.5046 40.6641 58.1577C38.6906 57.6843 36.7031 56.864 34.7578 55.7249C33.7266 55.1249 32.7047 54.4171 31.7203 53.6296C31.3078 53.3015 30.7359 52.8468 30.1828 52.2515C29.9016 51.9468 29.5875 51.5765 29.2922 51.1124C28.4859 52.0077 27.6797 52.8515 26.8406 53.6718C25.7437 54.7546 24.5672 55.7437 23.3484 56.6155C21.8766 57.6562 20.4609 58.4296 19.0172 58.9733C17.3578 59.6155 15.6141 59.9577 13.8375 59.9999Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M52.7719 34.4248C51.2438 32.8873 49.6172 31.4389 47.9203 30.0889C48.075 30.117 48.2391 30.1405 48.4031 30.1498C50.4188 30.2952 51.9235 28.9217 52.8844 27.8811C54.5485 26.0858 56.4797 23.517 57.661 20.353C58.5797 18.2061 59.1 15.8295 59.0672 13.4202C59.0344 11.892 58.7391 10.2748 58.0781 8.80297C57.436 7.32641 56.5125 6.03266 55.5047 4.92172C55.0219 4.39203 54.4313 3.78734 53.7844 3.28578C53.1375 2.77953 52.4203 2.3389 51.661 1.97797C50.9016 1.61703 50.0906 1.34515 49.261 1.16234C48.4313 0.988905 47.5875 0.92328 46.7531 0.927967C43.4297 0.993592 40.411 2.36703 38.0485 4.12953C36.8485 5.00609 35.7703 5.97641 34.7813 6.98891C33.7969 7.98266 32.8781 9.01859 31.9922 10.0873C31.5375 10.6358 31.0922 11.1936 30.6563 11.7608C30.7547 9.81547 29.4 8.34828 28.3641 7.41078C25.7766 5.05766 21.5906 2.15609 16.3406 1.66859C11.7328 1.23734 8.34845 2.46547 5.02033 5.75609C3.40783 7.35453 0.885953 10.8233 2.14689 16.0967C2.86408 19.1014 4.71564 22.0639 7.80001 25.1577C9.09845 26.4608 10.4672 27.6983 11.8875 28.8702C11.6953 28.8702 11.5031 28.8748 11.311 28.8936C10.6781 28.9686 10.1063 29.1655 9.62345 29.3998C9.14064 29.6389 8.73751 29.9155 8.38126 30.1967C8.02501 30.478 7.71564 30.7639 7.43439 31.0452C7.14845 31.3311 6.92345 31.5842 6.67033 31.8514C6.18283 32.3952 5.70939 32.953 5.26876 33.5389C4.37814 34.7014 3.58127 35.9577 2.91564 37.303C2.24064 38.6436 1.72033 40.0827 1.37345 41.5827C1.2047 42.328 1.07814 43.1108 1.01252 43.8702C0.932828 44.6202 0.918765 45.403 0.94689 46.1905C0.979703 46.9827 1.08752 47.7983 1.26564 48.6045C1.44845 49.4155 1.7297 50.2123 2.0672 50.9717C2.75627 52.4952 3.73127 53.8077 4.76252 54.9373C5.2547 55.4717 5.87345 56.0905 6.54377 56.6061C7.21408 57.1264 7.95002 57.5858 8.7422 57.9608C9.5297 58.3358 10.3688 58.6217 11.2266 58.8139C12.0891 58.992 12.961 59.067 13.8235 59.067C15.5391 59.0295 17.1797 58.6873 18.6985 58.1061C20.2172 57.5295 21.5813 56.7373 22.8188 55.8608C24.0516 54.9795 25.1766 54.0186 26.2031 53.0108C27.2156 52.0217 28.1719 51.0045 29.1 49.9452C29.2453 49.7811 29.3813 49.6123 29.5219 49.4483C29.5313 49.4764 29.5406 49.5092 29.55 49.5373C29.8875 50.4467 30.3938 51.0889 30.8766 51.6139C31.3688 52.1389 31.8703 52.542 32.3156 52.903C33.2391 53.6436 34.2141 54.3233 35.2453 54.9233C37.0031 55.9545 38.911 56.7795 40.9219 57.2623C41.9766 57.5764 43.0828 57.8061 44.2453 57.9139C44.8313 57.9702 45.3985 57.9983 45.9469 57.9983C49.7156 57.9983 52.6641 56.6998 55.5656 53.8264C57.1781 52.228 59.7 48.7592 58.4391 43.4858C57.7078 40.4858 55.861 37.5186 52.7719 34.4248ZM45.1828 28.0452C45.1172 27.9983 45.0563 27.9561 44.9906 27.9092C45.0188 27.8811 45.0469 27.853 45.075 27.8295C45.1078 27.8998 45.1453 27.9748 45.1828 28.0452Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M54.0469 5.27332C52.7203 3.96082 50.0156 1.99676 45.9844 2.34832C44.5453 2.36707 43.1063 2.64363 41.7563 3.14988C40.2235 3.71707 38.8078 4.53269 37.5422 5.48426C36.2719 6.43582 35.1563 7.54207 34.1063 8.64363C32.0016 10.8749 30.1266 13.3124 28.5516 15.9186C28.1531 16.5702 27.7547 17.2733 27.4547 18.0421C27.4406 18.0843 27.4219 18.1264 27.4078 18.1686C27.0094 19.0311 26.7516 19.9405 26.7985 20.9108C26.8219 21.5296 26.986 22.4202 27.6235 23.1561C27.9891 23.5827 28.4766 23.9014 29.0391 24.0889C28.6547 24.9843 28.486 25.8093 28.5188 26.6343C28.561 27.5202 28.8469 28.2936 29.3485 28.8749C29.925 29.5452 30.7078 29.8827 31.5141 29.9764C31.7063 30.0139 31.9031 30.0421 32.0953 30.0514C32.4703 30.0702 32.8406 30.0374 33.211 29.9624C33.2625 30.2811 33.3422 30.5999 33.4781 30.9233C33.6844 31.4061 34.0031 31.8843 34.4531 32.2593C34.9031 32.6436 35.4328 32.8827 35.9438 33.0186C36.4688 33.1452 36.9469 33.1968 37.4906 33.1452C38.0438 33.0936 38.536 32.9436 38.9719 32.7608C39.8391 32.3905 40.5328 31.9077 41.161 31.4202C41.7938 30.9327 42.3563 30.4171 42.8766 29.9389L44.4797 28.4858C44.6719 28.3124 44.8594 28.1343 45.0516 27.9561C45.1219 28.0921 45.1969 28.2233 45.2813 28.3546C45.6094 28.8561 46.0735 29.3343 46.6547 29.6577C47.2313 29.9858 47.8828 30.1499 48.4828 30.1639C49.1156 30.1874 49.7485 30.0514 50.2641 29.8311C51.3047 29.3764 51.9891 28.7155 52.5703 28.1014C53.1281 27.4827 53.611 26.8968 54.0891 26.2546C54.5719 25.6264 55.0078 24.9655 55.4156 24.2858C56.2406 22.9311 56.8875 21.4639 57.3422 19.9358C57.5531 19.1671 57.7219 18.3889 57.8344 17.6014C57.9094 17.0108 57.9516 16.4202 57.9656 15.8296C58.3641 11.5499 57.1875 8.38582 54.0469 5.27332Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M30.3843 23.4186C29.5921 23.4374 28.8093 23.189 28.3031 22.5936C27.9 22.1249 27.7125 21.4968 27.689 20.878C27.6187 19.3077 28.4953 17.8593 29.3953 16.5608C31.364 13.7202 33.614 11.0671 36.089 8.65301C38.4609 6.33739 41.2453 4.2327 44.4843 3.47332C48.8484 2.45145 51.7828 4.2702 53.4234 5.89208C56.3812 8.82176 57.4781 11.7046 57.089 15.8249C56.7 19.9452 54.5343 23.7515 51.7078 26.803C50.8593 27.7218 49.7812 28.6499 48.525 28.5608C47.3296 28.4765 46.5796 27.6421 46.3031 26.4843C46.125 25.7436 46.1859 24.9749 46.3781 24.2343C44.9156 25.8093 43.4156 27.1921 41.5546 28.978C40.4156 30.0702 38.7796 31.6593 37.1906 31.7624C36.5671 31.7999 35.9203 31.6874 35.4046 31.3405C34.4578 30.703 34.1718 29.4093 34.425 28.2936C34.1203 28.5093 33.7968 28.6968 33.4546 28.8421C32.3156 29.3202 30.8343 29.2358 30.0328 28.303C29.6296 27.8343 29.4468 27.2108 29.414 26.5921C29.3671 25.4718 29.8031 24.4077 30.3843 23.4186Z",
						fill: "#A38769"
					}), o.a.createElement("path", {
						d: "M45.9516 21.7217C45.9 21.9607 45.6891 22.0592 45.5109 22.0826C45.4219 22.092 45.3328 22.0779 45.2719 22.0451C45.2109 22.0123 45.1828 21.9701 45.1734 21.9326C45.1594 21.8529 45.0984 21.7826 45.0141 21.7498C44.8875 21.7076 44.7469 21.7732 44.7047 21.8998L44.6437 22.0826C44.5734 22.2842 44.5078 22.4857 44.4469 22.692C44.4469 22.6873 44.4422 22.6873 44.4422 22.6826C44.3297 22.5607 44.1703 22.4857 43.9922 22.4811C43.6453 22.4717 43.3547 22.7436 43.3453 23.0857L43.3406 23.1982C43.3359 23.4186 43.3219 23.6389 43.3078 23.8592C42.8953 23.7467 42.4641 23.9811 42.3375 24.3889C42.2625 24.6326 42.2578 24.8529 42.2719 25.0264C42.1453 24.8904 42.0234 24.7498 41.8922 24.6186L41.7844 24.5061C41.6391 24.3561 41.4187 24.2951 41.2078 24.3701C40.9219 24.4686 40.7672 24.7779 40.8656 25.0639C40.9547 25.317 40.9687 25.6217 40.9031 25.9217C40.7953 25.8654 40.6922 25.8045 40.5891 25.7342C40.3687 25.5748 40.1625 25.3779 39.9844 25.1342C40.0125 25.4342 40.1156 25.7295 40.2797 26.0014C40.4391 26.2779 40.6781 26.517 40.95 26.7139C41.0719 26.8029 41.2453 26.7889 41.3484 26.6764L41.4234 26.5967C41.4984 26.517 41.5641 26.4279 41.6203 26.3389C41.6531 26.3904 41.6859 26.4373 41.7281 26.4936C41.7937 26.5826 41.8922 26.7092 42.0797 26.8311C42.2672 26.9482 42.5344 27.0186 42.7875 26.9764C43.0406 26.9389 43.2281 26.8264 43.3641 26.7139C43.425 26.6623 43.4812 26.6061 43.5281 26.5498C43.5891 26.5732 43.65 26.5967 43.7156 26.6107C44.1469 26.6811 44.55 26.3951 44.6203 25.9686C44.7094 25.4389 44.7469 24.8998 44.7422 24.3654C45.0141 24.3561 45.2344 24.1451 45.2437 23.8732C45.2578 23.4186 45.2578 22.9639 45.2484 22.5092C45.3984 22.4998 45.5297 22.4576 45.6375 22.3873C45.8812 22.2561 46.0453 21.9561 45.9516 21.7217Z",
						fill: "#605449"
					}), o.a.createElement("path", {
						d: "M55.1862 18.9468C55.1909 18.9515 55.2002 18.9421 55.2049 18.9233C55.2002 18.928 55.1955 18.928 55.1909 18.9327C55.1768 18.9468 55.1862 18.9421 55.1862 18.9468Z",
						fill: "#605449"
					}), o.a.createElement("path", {
						d: "M36.1406 23.7748C36.0656 23.5404 35.9531 23.3482 35.9672 23.1045C35.8219 23.3061 35.8172 23.592 35.7984 23.817C35.7891 23.9342 35.7703 24.0279 35.7328 24.1076C35.7 24.1873 35.6484 24.2576 35.6016 24.2811C35.55 24.3045 35.55 24.2717 35.5453 24.2529C35.55 24.2295 35.5594 24.2201 35.5125 24.1639C35.4141 24.0467 35.3203 23.8029 34.9641 23.5592C34.8937 23.5123 34.8094 23.4795 34.7156 23.4748C34.4484 23.4561 34.2187 23.6576 34.2 23.9248L34.1906 24.0561C34.1719 24.3279 34.1344 24.5951 34.0828 24.8623C34.0594 24.8154 34.0359 24.7686 34.0172 24.717C33.9 24.4076 33.5859 24.192 33.2344 24.2061C32.7937 24.2248 32.4516 24.5951 32.475 25.0311V25.0545C32.4891 25.3592 32.4937 25.6639 32.4797 25.9686V25.9826L32.4234 25.9076C32.3109 25.7576 32.1281 25.6592 31.9219 25.6592C31.5797 25.6592 31.3031 25.9404 31.3031 26.2779C31.3078 26.7982 31.275 27.3232 31.2328 27.8576C30.9703 27.6514 30.7453 27.3467 30.6375 26.967C30.4687 27.5857 30.7547 28.3498 31.3922 28.7857C31.4062 28.7951 31.425 28.8045 31.4437 28.8139C31.6125 28.8889 31.8094 28.8186 31.8891 28.6498L31.9359 28.5467C32.025 28.3592 32.1047 28.1623 32.175 27.9654C32.1937 27.9795 32.2078 27.9936 32.2312 28.0123C32.3578 28.0967 32.5125 28.1576 32.6812 28.1764C32.8547 28.1998 33.0469 28.1623 33.1922 28.0967C33.4781 27.9607 33.6094 27.7873 33.7078 27.6514C33.8016 27.5107 33.8578 27.3748 33.9047 27.2342C33.9281 27.1639 33.9422 27.0936 33.9609 27.0186L34.0219 27.0561C34.0781 27.0889 34.1344 27.117 34.2 27.1357C34.575 27.2482 34.9781 27.042 35.0906 26.667C35.2594 26.1139 35.3344 25.5373 35.3344 24.9701C35.4047 24.9842 35.4844 24.9936 35.5594 24.9842C35.7937 24.9701 36.0141 24.8061 36.1031 24.6467C36.2859 24.3326 36.2297 24.0045 36.1406 23.7748ZM33.0797 26.817C33.1219 26.8592 33.1078 26.8592 33.0797 26.817V26.817Z",
						fill: "#605449"
					}), o.a.createElement("path", {
						d: "M33.5862 16.7248C33.7597 16.7951 33.9331 16.8607 34.1159 16.9217C33.9003 16.5842 33.6706 16.2701 33.4222 15.9701C33.3941 15.9373 33.3519 15.9045 33.3097 15.8904C33.1691 15.8342 33.0097 15.9045 32.9534 16.0451L32.8972 16.1811C32.7753 16.4904 32.6769 16.7998 32.5878 17.1139C32.5456 17.0295 32.4987 16.9451 32.4612 16.8561C32.3066 16.5232 32.18 16.1764 32.0628 15.8295L32.0534 15.8014C31.9175 15.4029 31.4909 15.1732 31.0784 15.2904C30.7456 15.3842 30.5253 15.6701 30.5019 15.9936L30.0753 15.2529C30.0284 15.5482 30.0097 15.8436 30.0144 16.1482C30.0331 16.4482 30.0612 16.7623 30.1691 17.0764C30.2722 17.3904 30.4409 17.6998 30.68 17.9717C30.9191 18.2436 31.2472 18.4826 31.6503 18.6139C31.7112 18.6326 31.7722 18.642 31.8378 18.642C31.9034 18.6982 31.9784 18.7545 32.0675 18.8107C32.2597 18.9373 32.6581 19.0264 32.9675 18.8951C33.3003 18.7732 33.4784 18.4873 33.5394 18.3092C33.6097 18.1217 33.6237 17.9717 33.6331 17.8357L33.6284 17.5123C33.6191 17.2498 33.605 16.9873 33.5862 16.7248Z",
						fill: "#605449"
					}), o.a.createElement("path", {
						d: "M53.8405 8.31075C53.4093 7.842 52.9218 7.4295 52.439 7.02169C52.1999 6.82013 51.9608 6.62794 51.689 6.42638C51.4265 6.23419 51.1686 6.06075 50.939 5.87794C50.7093 5.69981 50.503 5.517 50.3671 5.33888C50.2311 5.15606 50.1749 4.992 50.1702 4.82325C50.1655 4.66856 50.0999 4.51856 49.978 4.40606C49.7343 4.18106 49.3499 4.19044 49.1202 4.43419L49.0546 4.5045C48.853 4.71544 48.5062 4.81388 48.1593 4.78106C47.8077 4.74825 47.5124 4.56075 47.4046 4.34044C47.3343 4.19981 47.2171 4.07794 47.0624 4.00763C46.7062 3.84356 46.2796 3.99825 46.1155 4.3545L46.0733 4.44825C45.9327 4.74825 45.7687 5.03419 45.5905 5.31075C45.5155 5.42325 45.4312 5.53575 45.3468 5.64356C45.2155 5.45606 45.0562 5.292 44.8827 5.1795C44.6202 5.00138 44.339 4.89825 44.0624 4.842C43.7858 4.78575 43.4999 4.78106 43.2187 4.82794C42.9562 4.87013 42.7124 4.94513 42.4921 5.03888C42.0562 5.23106 41.7046 5.46544 41.3952 5.67638L39.5343 6.95606C39.2249 7.17169 38.9155 7.37325 38.6015 7.60763C38.2874 7.83731 37.9593 8.09513 37.664 8.39513C37.0874 8.98106 36.6983 9.53888 36.1687 9.7545C36.0233 9.81544 35.803 9.867 35.564 10.0123C35.3296 10.1623 35.1796 10.3545 35.0624 10.5233L34.4577 11.4889C34.064 12.1311 33.6796 12.7779 33.314 13.4389C33.8577 12.9092 34.378 12.3608 34.8937 11.8123L35.653 10.9873C35.9249 10.7201 35.9858 10.7248 36.4405 10.6311C36.8999 10.5233 37.303 10.2701 37.6265 10.017C37.9499 9.75919 38.2218 9.48731 38.489 9.27638C38.7468 9.06544 39.0327 8.88731 39.3468 8.7045L40.3077 8.12794L42.2437 6.96075C42.8671 6.54825 43.4296 6.29981 43.7483 6.39356C43.9452 6.43575 44.0249 6.52481 44.0483 6.57169C44.0671 6.61388 44.0999 6.71231 44.1655 6.84356C44.2312 6.97013 44.3202 7.17638 44.6015 7.38263C44.7468 7.48106 44.9249 7.54669 45.0983 7.57013C45.2812 7.59356 45.464 7.56075 45.5999 7.50919C45.8765 7.40138 46.0124 7.26544 46.1202 7.16231C46.4437 6.81075 46.6733 6.50138 46.903 6.13575C46.9499 6.06075 46.9921 5.98106 47.0343 5.90138C47.3718 6.06544 47.728 6.14513 48.0843 6.15919C48.4452 6.16856 48.8108 6.11231 49.1577 5.967C49.214 5.94356 49.2702 5.91075 49.3265 5.88263C49.3827 5.95763 49.4437 6.03263 49.5046 6.09356C49.7812 6.37481 50.0812 6.57169 50.3718 6.73575C50.6624 6.89981 50.9437 7.03575 51.2108 7.17638C51.4687 7.30763 51.7312 7.48575 52.003 7.63575C52.5421 7.94513 53.0577 8.27325 53.5593 8.62481C54.0515 8.98575 54.5249 9.3795 54.8999 9.88575C54.6749 9.29981 54.2718 8.7795 53.8405 8.31075ZM44.9765 6.06544C44.9718 6.07013 44.9718 6.07013 44.9765 6.06544V6.06544Z",
						fill: "#E5BE9D"
					}), o.a.createElement("path", {
						d: "M42.1222 18.1826L41.8972 17.9623L41.6675 18.1639L40.3784 19.2982C39.9472 19.6732 39.5206 20.0529 39.1081 20.4561C38.2925 21.2623 37.505 22.092 36.7503 22.9498C35.9769 23.8123 35.3206 24.7592 34.7159 25.7295C34.4206 26.217 34.1253 26.7045 33.8675 27.2201C33.5956 27.6889 33.4128 28.2045 33.2675 28.7201C32.4519 28.7998 31.6644 28.6732 31.1065 28.3311C30.8159 28.1436 30.6003 27.9232 30.469 27.6467C30.3284 27.3795 30.2534 27.0561 30.2347 26.7186C30.2628 25.4529 30.7925 24.2857 31.4347 23.2357C32.1003 22.1904 32.8269 21.1592 33.5769 20.1654C34.3315 19.1764 35.1097 18.1873 35.8925 17.217C36.6894 16.2561 37.4956 15.3045 38.3347 14.3717L38.5503 14.1326L38.3159 13.9076L38.0347 13.6357L37.8144 13.4248L37.58 13.6217C36.5159 14.5217 35.5878 15.5436 34.6597 16.542C33.7409 17.5311 32.794 18.5623 31.9737 19.6545C31.5565 20.1982 31.1487 20.7467 30.7409 21.2951C30.3378 21.8436 29.9253 22.3967 29.5597 22.9873C29.2081 23.5779 28.88 24.2014 28.7019 24.8764C28.5144 25.5467 28.4815 26.2592 28.6362 26.9248C28.73 27.4451 28.9315 27.9748 29.2784 28.4342C29.6394 28.8795 30.1362 29.2264 30.6565 29.367C31.5612 29.6248 32.4612 29.4654 33.1644 29.0576C33.1222 29.2076 33.08 29.3576 33.0472 29.517C33.2628 29.517 33.4784 29.517 33.6894 29.517C33.5206 30.4826 33.5675 31.2748 34.4628 31.7764C34.7581 31.5279 34.8425 31.0967 34.6315 30.7545C34.3972 30.3795 34.3644 29.7607 34.4769 29.1232C34.505 28.9639 34.5378 28.7998 34.58 28.6404C34.6831 28.3967 34.7769 28.1576 34.9175 27.9279C35.044 27.6982 35.1612 27.4639 35.2925 27.2389C35.5597 26.7936 35.855 26.3576 36.1597 25.9357C36.7644 25.0873 37.4206 24.2717 38.0862 23.4701C38.7612 22.6732 39.455 21.8951 40.1722 21.1357C40.894 20.3764 41.63 19.6404 42.3565 18.8904L42.5956 18.642L42.3565 18.4076L42.1222 18.1826Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M49.8469 17.1561L49.3687 16.992L49.2047 16.9358L49.0641 17.1092C48.4594 17.8405 47.925 18.6045 47.4328 19.392C46.9359 20.1795 46.4625 20.9577 45.9984 21.778C45.5484 22.6077 45.1875 23.4655 44.9297 24.3795C44.7094 25.3124 44.7375 26.2545 44.8687 27.1686L46.4672 27.042L46.5656 27.0327L46.5469 26.9249C46.4156 26.0999 46.5234 25.2561 46.7297 24.4499C46.9406 23.6436 47.2406 22.8561 47.6016 22.0967C47.9531 21.3374 48.3609 20.592 48.7781 19.8561C49.1906 19.1155 49.6312 18.3889 50.0812 17.6717L50.3062 17.3108L49.8469 17.1561Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M33.6892 22.6453C33.6377 22.0968 33.4877 21.6093 33.3049 21.1781C32.9299 20.3203 32.4424 19.6359 31.9502 19.0124C31.458 18.389 30.9377 17.8312 30.4549 17.3156L28.9877 15.7312C28.8095 15.5437 28.6314 15.3562 28.4533 15.1687C28.5892 15.0984 28.7205 15.0281 28.8517 14.9437C29.358 14.6203 29.8408 14.1609 30.1689 13.5843C30.5017 13.0124 30.6658 12.3656 30.6845 11.7749C30.708 11.1468 30.572 10.5234 30.347 10.0078C29.8877 8.9765 29.222 8.3015 28.5986 7.72494C27.9752 7.17181 27.3845 6.69369 26.733 6.22025C26.1002 5.74682 25.4299 5.31088 24.7408 4.90775C23.372 4.09213 21.8908 3.44994 20.3486 2.99994C19.5705 2.789 18.7877 2.62494 17.9908 2.51244C17.3955 2.43744 16.7955 2.39994 16.2002 2.38119C11.8642 1.99681 8.66736 3.15931 5.52673 6.26713C4.20017 7.57963 2.21736 10.2562 2.56892 14.2499C2.59236 15.6749 2.86892 17.0999 3.37517 18.4312C3.94705 19.9499 4.77205 21.3468 5.73767 22.6031C6.69861 23.8593 7.81892 24.9656 8.92986 26.0015C11.1845 28.0828 13.6455 29.9437 16.2799 31.4999C16.9408 31.8937 17.6486 32.2874 18.4267 32.5828C18.4642 32.5968 18.497 32.6109 18.5345 32.6203C19.3455 32.9906 20.2033 33.239 21.108 33.239C21.1783 33.239 21.2533 33.239 21.3283 33.2343C21.9517 33.2109 22.8517 33.0468 23.597 32.4187C24.0283 32.0578 24.3517 31.5703 24.5392 31.0171C25.4439 31.3968 26.2783 31.5609 27.1127 31.5327C28.008 31.4906 28.7908 31.2046 29.372 30.7124C30.0517 30.1406 30.3892 29.3671 30.4877 28.5656C30.5252 28.3734 30.5533 28.1812 30.5627 27.989C30.5814 27.6187 30.5486 27.2484 30.4736 26.8828C30.797 26.8359 31.1205 26.7515 31.4392 26.6203C31.9267 26.414 32.4095 26.0999 32.7892 25.6546C33.1783 25.2093 33.4174 24.6843 33.558 24.1781C33.6892 23.6531 33.7408 23.1796 33.6892 22.6453Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.8548 29.6812C23.8736 30.464 23.6204 31.2422 23.0251 31.7437C22.5517 32.1422 21.9189 32.3297 21.2954 32.3531C19.7064 32.4234 18.2439 31.5562 16.9361 30.6656C14.0673 28.7156 11.3861 26.4937 8.94386 24.0375C6.6048 21.6937 4.47668 18.9375 3.71261 15.7312C2.68136 11.4094 4.51886 8.50311 6.15949 6.88592C9.1173 3.95623 12.0282 2.87342 16.1954 3.2578C20.3626 3.64217 24.2017 5.78905 27.2861 8.58748C28.2142 9.42655 29.1517 10.4906 29.0579 11.7375C28.9736 12.9187 28.1298 13.664 26.9626 13.9359C26.2126 14.1094 25.4392 14.0484 24.6892 13.8656C26.2829 15.314 27.6798 16.7953 29.4798 18.6375C30.5861 19.7672 32.1892 21.3844 32.2923 22.9547C32.3345 23.5734 32.2173 24.2156 31.8657 24.7219C31.2236 25.6594 29.9157 25.9406 28.7907 25.6922C29.0111 25.9922 29.1986 26.3156 29.3439 26.6531C29.8267 27.7781 29.7423 29.2453 28.8001 30.0375C28.3267 30.4359 27.6939 30.6187 27.0704 30.6515C25.9314 30.6937 24.8579 30.2625 23.8548 29.6812Z",
						fill: "#605449"
					}), o.a.createElement("path", {
						d: "M17.0953 30.0657C17.025 29.8032 16.9922 29.536 16.9547 29.2641C16.9125 28.9922 16.875 28.7157 16.7953 28.4344C16.7156 28.1579 16.5938 27.8579 16.35 27.6235C16.3219 27.5954 16.2797 27.5719 16.2375 27.5625C16.111 27.5344 15.9891 27.6141 15.961 27.736L15.9516 27.7688C15.9281 27.8672 15.8813 28.0126 15.8391 28.1438L15.6985 28.5469L15.6141 28.786C15.4266 28.4532 15.286 28.0735 15.15 27.6891C14.9391 27.1079 14.7703 26.5032 14.4235 25.875C14.3438 25.7344 14.1938 25.636 14.025 25.636C13.7672 25.6313 13.5563 25.8329 13.5563 26.0907V26.1657C13.5563 26.2125 13.5422 26.3016 13.5188 26.3907C13.0875 25.5329 12.736 24.6235 12.45 23.7C12.3891 23.4985 12.225 23.325 12.0047 23.2641C11.6531 23.161 11.2875 23.3579 11.1797 23.7047L11.1516 23.7938V23.7985C10.9594 23.3485 10.8188 22.8563 10.7203 22.3407C10.6828 22.1485 10.5656 21.9704 10.3828 21.8579C10.1016 21.6844 9.75471 21.7266 9.51564 21.9235C9.50627 21.8063 9.49689 21.6891 9.49221 21.5672C9.45939 20.9532 9.46877 20.3063 9.42189 19.65V19.636C9.39846 19.3079 9.17346 19.0172 8.83596 18.9282C8.53127 18.8438 8.22189 18.9516 8.02502 19.1719C8.01096 18.7829 7.99689 18.3985 7.99689 18.0141V17.9907C7.99689 17.7844 7.90783 17.5735 7.73908 17.4282C7.42502 17.1516 6.94221 17.1797 6.66096 17.4938C6.63752 17.5172 6.61877 17.5454 6.59533 17.5735C6.54377 16.8985 6.56721 16.2469 6.72658 15.6329C6.73596 15.5907 6.74533 15.5485 6.75471 15.5016C6.80158 15.2063 6.62814 14.911 6.33283 14.8125C6.00002 14.7 5.63908 14.8782 5.52658 15.2063L5.50783 15.2672C5.48908 15.3188 5.47971 15.3657 5.46564 15.4172C5.44689 15.4454 5.42814 15.4782 5.39533 15.5063C5.36252 15.5391 5.32033 15.5719 5.28283 15.6C5.27346 15.5391 5.26408 15.4735 5.26408 15.4079C5.25471 15.0797 5.30158 14.7047 5.39064 14.386C5.48439 14.0344 5.66721 13.6172 5.70471 13.1063L5.70939 13.0547C5.72346 12.8344 5.57814 12.6282 5.35783 12.5672C5.10471 12.5016 4.84689 12.6516 4.78127 12.9047C4.74377 13.0547 4.65002 13.2 4.52814 13.3219C4.49533 12.6141 4.57502 11.8875 4.76252 11.1891C5.00627 10.2797 5.41877 9.40317 6.00471 8.62036C5.28283 9.2813 4.70627 10.1157 4.32189 11.0391C3.93752 11.9625 3.74064 12.9797 3.76408 14.0063C3.76408 14.025 3.76877 14.0438 3.76877 14.0625C3.80627 14.2735 4.00783 14.4141 4.21877 14.3766L4.25158 14.3719C4.26096 14.3719 4.26564 14.3672 4.27033 14.3672C4.17189 14.7094 4.12502 15.0516 4.11096 15.4219C4.11096 15.6657 4.11564 15.9188 4.24221 16.2469C4.31721 16.4063 4.42502 16.6219 4.71096 16.7672C4.89377 16.8563 5.05783 16.8704 5.20314 16.8657C5.18908 17.086 5.18439 17.3063 5.18908 17.5219C5.20783 18.2625 5.30627 18.975 5.42346 19.6688C5.46564 19.9079 5.62502 20.1188 5.86877 20.2172C6.08439 20.3063 6.31408 20.2829 6.50158 20.1797C6.52033 20.5782 6.54377 20.9766 6.56721 21.3704C6.58127 21.6094 6.70783 21.8391 6.92346 21.9797C7.2469 22.1907 7.66408 22.1344 7.92658 21.8672C7.97346 22.4719 8.03908 23.1047 8.28283 23.7797L8.28752 23.7938C8.32502 23.9016 8.39064 24 8.47502 24.0797C8.77971 24.3704 9.26721 24.361 9.56252 24.061C9.58127 24.0422 9.61408 24.0141 9.63752 23.9954C9.67502 24.0891 9.71252 24.1829 9.75002 24.2719C9.98439 24.7969 10.2985 25.3125 10.711 25.7532L10.7766 25.8235C10.8891 25.9407 11.0438 26.0204 11.2172 26.0297C11.4844 26.0485 11.7188 25.9079 11.8406 25.6875C11.9063 25.8235 11.9625 25.9594 12.0328 26.0907C12.361 26.7235 12.7172 27.3469 13.1485 27.9282L13.1766 27.9657C13.2281 28.0313 13.2938 28.0875 13.3781 28.125C13.636 28.2422 13.9453 28.1297 14.0625 27.8719C14.1141 27.7547 14.161 27.6422 14.2031 27.5297C14.2735 27.6844 14.3438 27.8438 14.4141 27.9985C14.55 28.2891 14.6906 28.5797 14.8641 28.8657C15.0375 29.1516 15.2344 29.4375 15.511 29.6813L15.5203 29.6907C15.5625 29.7282 15.6188 29.7563 15.6797 29.761C15.8391 29.7797 15.9891 29.6672 16.0078 29.5079C16.0172 29.4188 16.0594 29.2641 16.0922 29.1375L16.2094 28.7297L16.3172 28.3454C16.486 28.6266 16.5938 28.9922 16.6922 29.3438C16.7672 29.6063 16.8516 29.8782 16.9641 30.1313C17.0766 30.3844 17.2313 30.6375 17.4563 30.8016C17.2688 30.5813 17.1656 30.3235 17.0953 30.0657ZM5.32971 15.75C5.32971 15.75 5.32502 15.7454 5.32502 15.7407C5.33439 15.7547 5.33439 15.7594 5.32971 15.75Z",
						fill: "#352D26"
					}), o.a.createElement("path", {
						d: "M22.7438 26.6108C22.6079 26.353 22.4345 26.0858 22.1767 25.8795C21.9048 25.6639 21.572 25.5186 21.2017 25.4858C21.0845 25.4717 20.9579 25.4811 20.8313 25.4952C20.6673 25.0592 20.4563 24.642 20.2032 24.253L20.0626 24.042C20.0017 23.9577 19.936 23.8733 19.8517 23.7889C19.6876 23.6342 19.4673 23.4045 19.0173 23.3577C18.8017 23.3389 18.5673 23.4045 18.4079 23.4983C18.2532 23.592 18.1735 23.6717 18.122 23.7186C18.0985 23.742 18.0892 23.7514 18.0845 23.7561C18.0798 23.7514 18.0751 23.7514 18.0704 23.7514C18.0001 23.7139 17.9063 23.6436 17.822 23.5639C17.6626 23.4186 17.4751 23.142 17.2735 22.9077C16.8798 22.4249 16.4579 21.9608 15.9751 21.5295C16.111 22.1577 16.3079 22.753 16.5329 23.3342L16.7063 23.7655C16.7579 23.8967 16.8517 24.0889 16.9501 24.2389C17.0532 24.3983 17.1798 24.5577 17.3532 24.703C17.5267 24.8436 17.7704 25.003 18.122 25.0264C18.2954 25.0311 18.4782 25.003 18.6282 24.9374C18.7407 24.8905 18.8251 24.8342 18.8954 24.7874C18.9095 24.8014 18.9188 24.8155 18.9282 24.8342L19.0454 25.0077C19.3548 25.4764 19.636 25.9686 19.8845 26.4795L19.9688 26.6577C20.011 26.742 20.072 26.8124 20.1563 26.8639C20.3954 27.0139 20.7095 26.9436 20.8595 26.7045C20.9063 26.6295 21.0188 26.5452 21.1923 26.5124C21.361 26.4795 21.572 26.4889 21.7595 26.5499C21.9657 26.6202 22.1813 26.7374 22.3829 26.9014C22.5938 27.0561 22.7907 27.2483 23.0063 27.4358C22.9548 27.1452 22.8704 26.878 22.7438 26.6108ZM18.0938 23.7608C18.1079 23.7655 18.136 23.7561 18.1501 23.7655C18.1829 23.7702 18.1501 23.7842 18.0938 23.7608ZM19.0501 24.6608C19.0688 24.6514 19.0735 24.6467 19.0642 24.6561C19.0595 24.6561 19.0548 24.6561 19.0501 24.6608Z",
						fill: "#352D26"
					}), o.a.createElement("path", {
						d: "M29.6957 24.6797C29.4098 24.3938 29.1191 24.1547 28.8051 23.9297C28.4863 23.7 28.1395 23.4844 27.6988 23.3484C27.4785 23.2828 27.2348 23.2359 26.9535 23.2641C26.9254 23.2641 26.8926 23.2734 26.8598 23.2781C26.5363 22.6266 26.091 22.0781 25.6129 21.5906C25.4582 21.4359 25.3035 21.2906 25.1395 21.1453C24.8301 20.8922 24.591 20.8266 24.352 20.7422C24.1129 20.6672 23.8785 20.625 23.6348 20.5969C23.5129 20.5828 23.3863 20.5734 23.241 20.5781C23.2316 20.5781 23.2316 20.5875 23.1941 20.5781C23.0301 20.5359 22.7348 20.2875 22.5004 20.025C22.3785 19.8844 22.266 19.7531 22.1395 19.5891C22.0129 19.4156 21.8723 19.2563 21.7316 19.0969C21.1738 18.4594 20.5598 17.9437 19.9785 17.3438C20.2223 18.1453 20.6676 18.8766 21.0332 19.5703L21.291 20.0953C21.3754 20.2734 21.4832 20.4891 21.6004 20.6766C21.7176 20.8688 21.8535 21.0562 22.0223 21.2437C22.191 21.4266 22.3879 21.6094 22.6879 21.7547C22.8379 21.825 23.0395 21.8812 23.2363 21.8859C23.2973 21.8906 23.377 21.9 23.4566 21.9141C23.616 21.9422 23.7848 21.9891 23.9348 22.0359C24.0801 22.0781 24.2301 22.1625 24.2348 22.1719C24.3801 22.2937 24.5207 22.425 24.6566 22.5562C25.2004 23.0766 25.6879 23.6484 25.9738 24.2578L26.0301 24.375C26.0629 24.4453 26.1098 24.5063 26.1754 24.5625C26.4098 24.7547 26.752 24.7219 26.9441 24.4922C26.9863 24.4406 27.0285 24.4031 27.1176 24.375C27.2066 24.3469 27.3332 24.3422 27.4785 24.3562C27.7645 24.3891 28.102 24.4875 28.4254 24.6141C28.7535 24.7547 29.1098 24.8859 29.4191 25.0453C29.7332 25.2 30.0238 25.4203 30.291 25.6922C30.1785 25.3172 29.9723 24.9703 29.6957 24.6797Z",
						fill: "#352D26"
					}), o.a.createElement("path", {
						d: "M27.5673 11.0719C27.3985 10.6406 27.1313 10.2656 26.8501 9.91408C26.5595 9.5672 26.2501 9.25783 25.936 8.94845C25.772 8.78908 25.5892 8.63439 25.3642 8.48908C25.1438 8.34377 24.8673 8.22658 24.6329 8.16095C24.1688 8.0297 23.7657 7.94064 23.6298 7.81877C23.5642 7.75783 23.5548 7.74377 23.4751 7.59377C23.3954 7.44845 23.3251 7.22814 23.086 6.91877C22.8282 6.62814 22.5376 6.40314 22.0173 6.33752C21.8485 6.31877 21.6329 6.35158 21.4407 6.42658C21.422 6.36564 21.3985 6.30002 21.3657 6.22502C21.2157 5.85939 20.8642 5.53595 20.5501 5.39064C20.236 5.23595 19.9642 5.18439 19.7345 5.1422C19.2704 5.07189 18.9235 5.00627 18.7735 4.92189C18.6751 4.87033 18.5251 4.73908 18.2954 4.57502C18.0751 4.40627 17.6767 4.22814 17.3063 4.23283C16.9313 4.22814 16.6313 4.33595 16.4017 4.43908C16.172 4.5422 15.9892 4.65002 15.8345 4.72033C15.6751 4.79533 15.5579 4.83752 15.4735 4.84689C15.3892 4.85627 15.3095 4.84689 15.1595 4.7672C15.0142 4.68752 14.8454 4.55158 14.6251 4.41564C14.4048 4.27502 14.1282 4.1672 13.861 4.13439C13.3126 4.07345 12.8345 4.2422 12.4407 4.4672C12.0423 4.6922 11.7095 4.97814 11.4048 5.2922C11.8079 5.12814 12.2063 4.96408 12.6048 4.87502C12.9985 4.78595 13.397 4.76252 13.6876 4.89377C13.8376 4.9547 13.9548 5.0297 14.0767 5.14689C14.2032 5.26408 14.3345 5.42814 14.5313 5.60158C14.7188 5.77502 15.0376 5.96252 15.3845 5.99533C15.7267 6.03283 16.0313 5.96252 16.2751 5.88752C16.7485 5.72345 17.1235 5.58283 17.2313 5.63439C17.2876 5.65314 17.2923 5.65783 17.4142 5.75158C17.5267 5.84064 17.6813 6.00939 17.9438 6.1922C18.5251 6.56252 19.0548 6.59533 19.4251 6.68908C19.6126 6.72658 19.7626 6.77345 19.8282 6.81095C19.8985 6.85314 19.8751 6.83908 19.8892 6.8672C19.9032 6.89533 19.9267 6.97033 19.9642 7.08752C20.011 7.21408 20.0438 7.35002 20.1892 7.5797C20.3251 7.77658 20.4845 7.92658 20.7188 8.04845C20.9345 8.16564 21.3048 8.25939 21.6751 8.11877C21.8063 8.07189 21.8954 8.01095 21.9704 7.9547C22.0173 8.02501 22.097 8.15627 22.1907 8.31564C22.3126 8.53595 22.5845 8.85939 22.8892 9.01876C23.4985 9.3422 23.9767 9.30939 24.3376 9.38439C24.5204 9.4172 24.647 9.44064 24.8017 9.50627C24.9517 9.57189 25.111 9.66564 25.2845 9.76877C25.636 9.99377 25.9829 10.2235 26.3017 10.4719C26.9392 10.9594 27.5673 11.5219 27.647 12.3985C27.7173 12.1922 27.7407 11.9672 27.7313 11.7422C27.7079 11.5125 27.647 11.2922 27.5673 11.0719Z",
						fill: "#AA9B8F"
					}), o.a.createElement("path", {
						d: "M31.2752 23.3063C31.233 23.0485 31.1908 22.7907 31.1205 22.5329C31.0877 22.4063 31.0502 22.275 30.9986 22.1391C30.9564 22.0079 30.8252 21.8157 30.6752 21.7219C30.5439 21.6329 30.3846 21.5813 30.2158 21.5719C30.2064 21.4032 30.1783 21.2391 30.1314 21.0797C30.033 20.7516 29.8596 20.4516 29.6393 20.1891C29.2971 19.7766 28.7955 19.4672 28.2236 19.3688C28.1861 19.2094 28.1486 19.05 28.1018 18.8907C28.0596 18.75 28.008 18.6141 27.9564 18.4735C27.9002 18.3375 27.8674 18.2063 27.7361 17.9954C27.6096 17.7844 27.3518 17.5782 27.0611 17.5172C26.7705 17.4563 26.5221 17.5125 26.3299 17.5829C26.3252 17.5829 26.3252 17.5875 26.3205 17.5875C26.2643 17.3297 26.1705 17.0625 26.0111 16.8141C25.8002 16.486 25.4955 16.2657 25.1393 16.1391C24.9283 16.0641 24.6705 16.0407 24.4127 16.0829C23.8221 15.3 22.9643 14.7422 22.0314 14.5313C21.5064 14.4094 21.0189 14.3907 20.5689 14.25C20.133 14.1141 19.683 13.8563 19.5049 13.3782C19.5283 13.8985 19.9502 14.3485 20.4143 14.6016C20.8877 14.8594 21.4033 14.986 21.8346 15.1594C22.2611 15.3329 22.6455 15.5813 22.9736 15.8813C23.3018 16.1813 23.5689 16.5422 23.7658 16.9219C23.8877 17.1563 24.1736 17.25 24.4127 17.1329L24.483 17.1C24.5439 17.0719 24.6377 17.0672 24.7643 17.1235C24.8908 17.175 25.008 17.2875 25.0736 17.3954C25.2471 17.6672 25.2846 18.1032 25.2939 18.6C25.2986 18.7407 25.3502 18.8766 25.458 18.9844C25.6783 19.2047 26.0346 19.2047 26.2549 18.9891L26.2736 18.9704C26.4236 18.825 26.6111 18.6844 26.7424 18.6329C26.7752 18.6188 26.7939 18.6141 26.808 18.6141C26.8314 18.6563 26.8783 18.7641 26.9205 18.8672C26.9674 18.9844 27.0096 19.1063 27.0518 19.2235C27.1361 19.4625 27.2111 19.7063 27.2721 19.9547L27.2861 20.0063C27.3471 20.2407 27.5768 20.4 27.8252 20.3672C28.2096 20.3157 28.6455 20.4938 28.9783 20.7985C29.3111 21.1079 29.5221 21.5485 29.5033 21.9938L29.4939 22.2329V22.2657C29.5033 22.4391 29.6533 22.5704 29.8314 22.561C30.0049 22.5516 30.1408 22.4016 30.1314 22.2282C30.1314 22.2188 30.1314 22.1907 30.1924 22.1766C30.2486 22.1625 30.333 22.1719 30.4033 22.2C30.483 22.2329 30.5158 22.2516 30.5814 22.3547C30.6424 22.4485 30.7033 22.561 30.7596 22.6735C30.8674 22.8985 30.9799 23.1329 31.0783 23.3672C31.1721 23.6063 31.2893 23.836 31.3455 24.0891C31.3455 23.8266 31.3127 23.5641 31.2752 23.3063Z",
						fill: "#AA9B8F"
					}), o.a.createElement("path", {
						d: "M28.9687 27.7593C28.9546 27.6515 28.9265 27.5437 28.889 27.4406C28.8281 27.2343 28.7156 27.0374 28.5702 26.8687L28.4249 27.1031L28.3687 27.0281L28.0921 26.6437C27.9327 26.4234 27.6562 26.2968 27.3656 26.3437C26.9859 26.4046 26.7234 26.7421 26.7421 27.1124C26.7281 27.1124 26.7187 27.1078 26.7046 27.1124C26.7749 27.2765 26.7609 27.4078 26.7327 27.5343C26.7187 27.6562 26.6718 27.7874 26.6531 27.9281C26.6296 28.0734 26.6156 28.2328 26.639 28.4249C26.6484 28.5187 26.6718 28.6265 26.714 28.739C26.7327 28.7953 26.7609 28.8515 26.7937 28.9078C26.8171 28.9546 26.8687 29.039 26.9624 29.1234C27.0515 29.2031 27.1734 29.3109 27.4359 29.3484C27.6984 29.3953 28.0312 29.2453 28.1624 29.0671C28.3031 28.8984 28.3359 28.7812 28.3687 28.6968L28.4202 28.5281C28.4343 28.4765 28.439 28.4249 28.4437 28.3781C28.6077 28.3499 28.7952 28.2562 28.8749 28.1156C28.9874 27.9281 28.9687 27.8156 28.9687 27.7593Z",
						fill: "#352D26"
					}), o.a.createElement("path", {
						d: "M24.1925 24.2765C23.869 24.0187 23.5222 23.7843 23.1894 23.5405C23.0253 23.4187 22.8331 23.3015 22.7253 23.2077C22.6081 23.1046 22.5894 23.0718 22.5284 22.903C22.4628 22.7437 22.43 22.514 22.2425 22.2233C22.144 22.078 21.9659 21.9327 21.7737 21.8718C21.5769 21.8108 21.4456 21.8202 21.3894 21.8155C21.3378 21.8108 21.3378 21.8155 21.2956 21.7921C21.2581 21.7733 21.2065 21.7265 21.1597 21.6655C21.0659 21.5437 20.9394 21.3515 20.8222 21.1874C20.3487 20.5077 19.8425 19.8468 19.2612 19.228C19.5144 20.0343 19.8425 20.7983 20.2034 21.5437C20.2972 21.7312 20.3628 21.9093 20.5081 22.1249C20.5784 22.2327 20.6628 22.3452 20.794 22.4483C20.9112 22.5515 21.1081 22.6405 21.2628 22.664C21.4081 22.6874 21.4925 22.6968 21.4925 22.7062C21.4972 22.7155 21.4878 22.7015 21.5065 22.7296C21.5487 22.7858 21.6003 22.9733 21.6706 23.1983C21.7128 23.3108 21.7644 23.4421 21.8534 23.578C21.9425 23.714 22.055 23.8171 22.1581 23.9015C22.3737 24.0655 22.5472 24.1546 22.7253 24.2624C23.0862 24.464 23.4425 24.6843 23.8128 24.8718C24.5487 25.2655 25.2987 25.6312 26.1003 25.9171C25.4956 25.3124 24.8534 24.7827 24.1925 24.2765Z",
						fill: "#AA9B8F"
					}), o.a.createElement("path", {
						d: "M31.5517 25.4484C31.1767 25.6828 30.5579 25.7156 29.9204 25.6031C29.3813 25.4906 28.9032 25.2374 28.4251 24.9749C27.9423 24.7312 27.4923 24.4218 27.047 24.1171C26.1517 23.5078 25.3032 22.8328 24.4642 22.1437C23.6345 21.4453 22.8188 20.7328 22.0267 19.9921C21.2298 19.2515 20.4704 18.4781 19.6923 17.7281L19.4438 17.489L19.2095 17.7281L18.9751 17.9718L18.7548 18.2015L18.9563 18.4312L20.0907 19.7203C20.4657 20.1515 20.8454 20.5828 21.2485 20.9906C22.0548 21.8062 22.8845 22.5937 23.7423 23.3484C24.6048 24.1218 25.5517 24.7781 26.522 25.3828C27.0095 25.6781 27.497 25.9734 28.0126 26.2312C28.4813 26.5031 28.997 26.6859 29.5126 26.8312C29.5923 27.6468 29.4657 28.4343 29.1235 28.9921C28.936 29.2828 28.7157 29.4984 28.4392 29.6296C28.172 29.7703 27.8485 29.8453 27.511 29.864C26.2454 29.8359 25.0782 29.3062 24.0282 28.664C22.9829 27.9984 21.9517 27.2718 20.9579 26.5218C19.9688 25.7671 18.9798 24.989 18.0095 24.2062C17.0485 23.4093 16.097 22.6031 15.1642 21.764L14.9251 21.5484L14.7001 21.7828L14.4282 22.064L14.2173 22.2843L14.4142 22.5187C15.3142 23.5828 16.336 24.5109 17.3345 25.439C18.3235 26.3578 19.3548 27.3046 20.447 28.1249C20.9907 28.5421 21.5392 28.9499 22.0876 29.3578C22.636 29.7609 23.1892 30.1734 23.7798 30.539C24.3704 30.8906 24.9938 31.2187 25.6688 31.3968C26.3392 31.5843 27.0517 31.6171 27.7173 31.4624C28.2376 31.3687 28.7673 31.1671 29.2267 30.8203C29.672 30.4593 30.0188 29.9624 30.1595 29.4421C30.4173 28.5374 30.2579 27.6374 29.8501 26.9343C30.0001 26.9765 30.1501 27.0187 30.3095 27.0515C30.3095 26.8359 30.3095 26.6203 30.3095 26.4093C31.2751 26.5781 32.0673 26.5312 32.5688 25.6359C32.3204 25.3171 31.8892 25.2374 31.5517 25.4484Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M20.1846 12.6608C20.9721 13.1577 21.7502 13.6311 22.5705 14.0952C23.4002 14.5452 24.258 14.9061 25.1721 15.1639C26.1049 15.3842 27.0471 15.3561 27.9611 15.2249L27.8346 13.6264L27.8252 13.528L27.7174 13.5467C26.8924 13.678 26.0486 13.5702 25.2424 13.3639C24.4361 13.153 23.6486 12.853 22.8893 12.492C22.1299 12.1405 21.3846 11.7327 20.6486 11.3155C19.908 10.903 19.1814 10.4624 18.4643 10.0124L18.1033 9.78735L17.9439 10.2467L17.7799 10.7249L17.7236 10.8889L17.8971 11.0295C18.633 11.6342 19.3971 12.1639 20.1846 12.6608Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M33.7736 38.667C33.7502 38.0483 33.5861 37.1576 32.9486 36.4217C32.583 35.9951 32.0955 35.6764 31.533 35.4889C31.9174 34.5936 32.0861 33.7686 32.0533 32.9436C32.0111 32.0576 31.7252 31.2842 31.2236 30.703C30.6471 30.0326 29.8642 29.6998 29.0627 29.6014C28.8658 29.5639 28.6736 29.5358 28.4767 29.5264C28.1017 29.5076 27.7314 29.5405 27.3611 29.6155C27.3096 29.2967 27.2299 28.978 27.0939 28.6545C26.8877 28.1717 26.5689 27.6936 26.1189 27.3186C25.6689 26.9342 25.1392 26.6951 24.6283 26.5592C24.1033 26.4326 23.6252 26.3811 23.0814 26.4326C22.5283 26.4842 22.0361 26.6342 21.6002 26.817C20.733 27.1873 20.0392 27.6701 19.4111 28.1576C18.7783 28.6451 18.2158 29.1608 17.6955 29.6389L16.0924 31.092C15.9002 31.2655 15.7127 31.4436 15.5205 31.6217C15.4502 31.4858 15.3752 31.3545 15.2908 31.2233C14.9627 30.7217 14.4986 30.2436 13.9174 29.9201C13.3408 29.592 12.6892 29.428 12.0892 29.4139C11.4564 29.3905 10.8236 29.5264 10.308 29.7467C9.26737 30.2014 8.583 30.8623 8.00175 31.4764C7.44393 32.0951 6.96112 32.6811 6.483 33.3233C6.00018 33.9514 5.56425 34.6123 5.15643 35.292C4.33143 36.6467 3.68456 38.1139 3.22987 39.642C3.01893 40.4108 2.85018 41.1889 2.73768 41.9764C2.66268 42.5623 2.6205 43.1576 2.60643 43.7436C2.21737 48.0373 3.39393 51.2014 6.53456 54.3139C7.758 55.5233 10.1439 57.2858 13.6596 57.2858C13.9596 57.2858 14.2689 57.267 14.583 57.2436C16.0267 57.2248 17.4705 56.953 18.8252 56.4467C20.358 55.8795 21.7736 55.0639 23.0392 54.1123C24.3096 53.1608 25.4252 52.0545 26.4752 50.953C28.5799 48.7217 30.4549 46.2842 32.0299 43.678C32.4283 43.0264 32.8267 42.3233 33.1267 41.5545C33.1455 41.5123 33.1596 41.4701 33.1736 41.4233C33.558 40.5467 33.8158 39.6373 33.7736 38.667Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M30.1831 36.1685C30.9753 36.1497 31.7581 36.3982 32.2644 36.9935C32.6675 37.4622 32.855 38.0904 32.8784 38.7091C32.9487 40.2794 32.0722 41.7279 31.1722 43.0263C29.2034 45.8669 26.9534 48.5201 24.4784 50.9341C22.1065 53.2497 19.3222 55.3544 16.0831 56.1138C11.719 57.1357 8.78466 55.3169 7.14404 53.6951C4.18622 50.7654 3.08935 47.8826 3.47841 43.7622C3.86747 39.6419 6.0331 35.8357 8.85966 32.7841C9.7081 31.8654 10.7862 30.9372 12.0425 31.0263C13.2378 31.1107 13.9878 31.9451 14.2644 33.1029C14.4425 33.8435 14.3815 34.6122 14.1894 35.3529C15.6519 33.7779 17.1519 32.3951 19.0128 30.6091C20.1519 29.5169 21.7878 27.9279 23.3769 27.8247C24.0003 27.7872 24.6472 27.8997 25.1628 28.2466C26.1097 28.8841 26.3956 30.1779 26.1425 31.2935C26.4472 31.0779 26.7706 30.8904 27.1128 30.7451C28.2519 30.2669 29.7331 30.3513 30.5347 31.2841C30.9378 31.7529 31.1206 32.3763 31.1534 32.9951C31.205 34.1107 30.769 35.1747 30.1831 36.1685Z",
						fill: "#EAEBE1"
					}), o.a.createElement("path", {
						d: "M29.2645 31.7248C29.152 31.6592 28.9832 31.6732 28.8707 31.7811C28.8566 31.7951 28.852 31.8092 28.8613 31.8279L28.866 31.8373C28.9551 32.0529 28.9551 32.292 28.8848 32.4982C28.5285 32.2311 28.2004 31.9357 27.9145 31.6123C27.8348 31.5232 27.7129 31.4857 27.591 31.5232C27.427 31.5701 27.3332 31.7436 27.3848 31.9076L27.4035 31.9639C27.5066 32.3061 27.5816 32.6529 27.6238 32.9998C27.3801 32.8404 27.141 32.6764 26.8973 32.5264C26.827 32.4795 26.7379 32.4514 26.6488 32.442C26.3348 32.4092 26.0535 32.6342 26.0207 32.9482L26.016 32.9951C25.9551 33.5623 26.016 34.1436 26.1848 34.692C26.0629 34.6123 25.9645 34.5139 25.9082 34.4107C25.716 34.0779 25.3035 33.9373 24.9379 34.0873C24.5488 34.2514 24.3707 34.7014 24.5348 35.0857L24.5582 35.1373C24.6801 35.4186 24.7879 35.7092 24.8957 35.9998C24.5676 36.1826 24.4035 36.5764 24.5301 36.942C24.5863 37.1061 24.6613 37.2514 24.7551 37.3873C24.4129 37.5748 24.277 38.0014 24.4551 38.3482L24.4691 38.3764C24.5863 38.6014 24.741 38.8029 24.9098 38.9904C24.9707 39.0889 25.0363 39.1826 25.0879 39.2857C25.1395 39.3842 25.1863 39.4873 25.2285 39.5904C25.1629 39.5342 25.0926 39.4826 25.027 39.4217L24.9754 39.3748C24.8113 39.2154 24.5535 39.1732 24.3379 39.2857C24.066 39.4264 23.9629 39.7545 24.1035 40.0264C24.277 40.3592 24.3848 40.7389 24.4176 41.1279C24.2348 41.0482 24.0566 40.9592 23.8832 40.8514L23.8316 40.8186C23.7613 40.7764 23.6723 40.7576 23.5832 40.7857C23.4191 40.8326 23.3207 41.0014 23.3676 41.1654C23.616 42.0561 23.5316 43.0779 23.0723 43.9873C23.6113 43.3967 23.9488 42.6045 24.0145 41.7654C24.2254 41.9061 24.4504 42.0326 24.6895 42.1357C24.7082 42.1451 24.7316 42.1498 24.7551 42.1592C24.9754 42.2107 25.1957 42.0795 25.252 41.8639L25.2613 41.817C25.3129 41.6061 25.341 41.3904 25.3598 41.1701C25.4301 41.2029 25.5145 41.2357 25.6223 41.2592C25.8801 41.3201 26.2316 41.2357 26.452 41.0107C26.6676 40.7904 26.7145 40.5795 26.752 40.4107C26.7801 40.242 26.7801 40.092 26.766 39.942C26.7566 39.8717 26.7426 39.792 26.7285 39.7217L26.7098 39.642C26.9582 39.4779 27.0988 39.1779 27.0379 38.8686V38.8592C26.977 38.5404 26.8879 38.2264 26.7801 37.917C26.9582 37.7248 27.0332 37.4482 26.9582 37.1764C26.8738 36.8764 26.766 36.5857 26.6676 36.2904C26.9863 36.2904 27.3051 36.2389 27.6098 36.1076L27.6426 36.0936C27.6941 36.0701 27.7457 36.042 27.7926 36.0045C28.0879 35.7701 28.1395 35.3436 27.9051 35.0482C27.6754 34.7576 27.4879 34.4201 27.366 34.0545C27.5535 34.1482 27.7363 34.242 27.9238 34.3311L27.9801 34.3592C28.0551 34.3967 28.1395 34.4107 28.2285 34.4014C28.4816 34.3779 28.6691 34.1529 28.6457 33.8998C28.6035 33.4779 28.5145 33.0701 28.3879 32.6717C28.5473 32.7561 28.7113 32.8404 28.8754 32.9107L28.9035 32.9248C28.9035 32.9248 28.9082 32.9248 28.9082 32.9295C28.9879 32.9576 29.0723 32.9201 29.1051 32.8404C29.2363 32.4889 29.1707 32.1092 28.9832 31.8326C29.0348 31.7436 29.1473 31.6967 29.2645 31.7248ZM25.8332 40.0123C25.8379 40.0123 25.8379 40.0123 25.8332 40.0123C25.8988 40.0311 25.8801 40.0357 25.8332 40.0123Z",
						fill: "#B2AFA3"
					}), o.a.createElement("path", {
						d: "M30.2862 43.3733C30.1784 43.3968 30.0752 43.4296 29.9721 43.4671L30.0565 43.153C30.0705 43.0874 30.0893 43.0218 30.1034 42.9468L30.1127 42.8812C30.1127 42.853 30.1221 42.839 30.108 42.7405C30.0987 42.689 30.0705 42.628 30.0471 42.5999C30.033 42.5811 30.019 42.5624 30.0049 42.5483C29.9721 42.5108 29.944 42.4921 29.9205 42.4733C29.8596 42.4312 29.8268 42.4218 29.7846 42.403C29.5221 42.3233 29.3955 42.3374 29.2315 42.3327C29.1424 42.3327 29.0534 42.3468 28.9643 42.3515C28.9784 42.2952 28.9971 42.2436 29.0112 42.1827C29.0393 42.0561 29.0674 41.9202 29.0721 41.7233C29.0721 41.6202 29.0721 41.5124 29.0299 41.3577C28.9924 41.203 28.8987 40.9921 28.6924 40.8233L28.6549 40.7905C28.3549 40.5421 27.9049 40.5796 27.6471 40.8749C27.394 41.1655 27.2018 41.4515 27.0237 41.7468C26.8455 42.0421 26.6955 42.3421 26.5549 42.6515C26.419 42.9655 26.3018 43.2796 26.2127 43.6171C26.119 43.9452 26.0534 44.3015 26.0815 44.6483C26.3065 44.3812 26.5502 44.1655 26.7752 43.9265L27.019 43.6827C27.0284 43.7812 27.0471 43.889 27.1034 44.039C27.2393 44.4046 27.6471 44.5921 28.0174 44.4608L28.0268 44.4561C28.2237 44.3858 28.3924 44.2405 28.4862 44.1046C28.5846 43.9686 28.6315 43.8515 28.6596 43.7577C28.6877 43.6593 28.6971 43.5843 28.7065 43.5186C28.7112 43.4999 28.7112 43.4812 28.7112 43.4624C28.7159 43.4577 28.7205 43.4577 28.7299 43.453C28.8237 43.4015 28.9268 43.3546 29.0299 43.3077C29.0721 43.528 29.1049 43.753 29.1424 43.978C28.9783 44.128 28.8284 44.2921 28.6971 44.4702C28.369 44.9155 28.144 45.4312 27.9799 45.9608C27.9471 45.928 27.9143 45.8952 27.8768 45.8624C27.7549 45.7546 27.6237 45.6608 27.4877 45.5765C27.2112 45.4124 26.9158 45.2905 26.6159 45.2062L26.5971 45.2015C26.4752 45.178 26.3533 45.253 26.3299 45.3749V45.3796C26.269 45.6655 26.2643 45.928 26.2643 46.1905L26.2737 46.9546C26.2737 47.203 26.2737 47.4515 26.2502 47.6858C26.2409 47.7796 26.2268 47.8733 26.208 47.9624C26.1612 47.9343 26.1143 47.9061 26.0721 47.8733C25.9221 47.7702 25.7721 47.6624 25.6221 47.5546C25.4768 47.4421 25.3362 47.3296 25.2049 47.2124C25.0784 47.0952 24.9518 46.9687 24.8862 46.8655C24.8205 46.7671 24.7034 46.6968 24.5768 46.6968C24.3705 46.6921 24.2018 46.8562 24.1971 47.0624V47.0905C24.1877 47.6765 24.183 48.253 24.0846 48.7968C24.0284 49.1343 23.9252 49.4483 23.7987 49.7624C23.5221 49.4812 23.3159 49.1577 23.1799 48.7733C23.133 48.6421 23.0299 48.5249 22.894 48.464C22.6221 48.3421 22.3034 48.464 22.1768 48.7312L22.1627 48.7593C21.7409 49.6827 21.4877 50.6202 21.1502 51.4452C21.1268 51.4077 21.1034 51.3702 21.0799 51.3327C20.9159 51.0374 20.8409 50.7468 20.883 50.5921C20.9768 50.2358 20.7612 49.8655 20.4002 49.7671C20.0346 49.664 19.6549 49.8796 19.5518 50.2405L19.5377 50.2921C19.3643 50.9015 19.2096 51.4921 19.008 52.0405C18.8862 52.378 18.7455 52.6921 18.5815 52.9827C18.5674 52.9358 18.5487 52.889 18.5346 52.8421L18.2065 51.9562L18.0565 51.539C18.0143 51.4124 17.9674 51.253 17.9674 51.2249C17.9487 50.9296 17.7518 50.6577 17.4471 50.564C17.0534 50.4374 16.6268 50.653 16.5002 51.0421L16.4815 51.103C16.2049 51.9515 15.8768 52.7905 15.4643 53.5358C15.3284 53.189 15.2393 52.814 15.2252 52.4812C15.2112 52.1671 15.0096 51.8812 14.6955 51.7687C14.283 51.6233 13.8284 51.839 13.6784 52.2468V52.2515C13.5143 52.7108 13.3174 53.1608 13.0971 53.5921C12.9893 53.7983 12.8768 54.0046 12.7596 54.2062C12.7502 54.178 12.7362 54.1546 12.7268 54.1265C12.558 53.6905 12.4362 53.2077 12.258 52.6687L12.2487 52.6358C12.2159 52.5421 12.169 52.453 12.0987 52.3733C11.8221 52.0593 11.3393 52.0265 11.0205 52.303C10.7534 52.5327 10.6877 52.7062 10.6127 52.8562C10.5612 52.964 10.5284 53.0577 10.4955 53.1468C10.4909 53.114 10.4862 53.0858 10.4815 53.0577C10.4205 52.6171 10.369 52.1671 10.2424 51.6561C10.1909 51.4499 10.0502 51.2577 9.83929 51.1593C9.46429 50.9765 9.00491 51.1265 8.81741 51.5015C8.80335 51.5249 8.7846 51.5624 8.76585 51.5905C8.7471 51.2483 8.72835 50.8874 8.66741 50.4937V50.489C8.63929 50.3202 8.55023 50.1562 8.40023 50.0437C8.09085 49.8093 7.65023 49.8655 7.41116 50.1702C7.38304 50.203 7.35023 50.2452 7.31741 50.2827C7.31741 49.7249 7.35023 49.1437 7.26116 48.4827V48.4733C7.2471 48.389 7.21898 48.3046 7.16741 48.2296C6.97991 47.939 6.59085 47.8499 6.29554 48.0327L6.05648 48.1827C6.07054 48.1171 6.07991 48.0561 6.09398 47.9905C6.19241 47.489 6.31898 46.964 6.30023 46.3358V46.3265C6.29554 46.2468 6.27679 46.1624 6.2346 46.0874C6.08929 45.8202 5.75648 45.7218 5.4846 45.8624C5.42835 45.8905 5.32991 45.9327 5.24085 45.9655H5.23616C5.34866 45.7171 5.46585 45.4687 5.58773 45.2155C5.84085 44.6812 6.10804 44.1468 6.3096 43.5374L6.31898 43.514C6.32835 43.4812 6.33773 43.4437 6.33773 43.4062C6.35179 43.1718 6.16898 42.9702 5.9346 42.9562C5.75648 42.9468 5.64398 42.9562 5.51273 42.9562L5.13773 42.9749L4.91741 42.9843C5.08148 42.178 5.33929 41.3765 5.67679 40.6077C6.0846 39.6749 6.58616 38.7796 7.1721 37.9358L7.18148 37.9218C7.20023 37.8937 7.21429 37.8562 7.21429 37.8187C7.2096 37.7202 7.12991 37.6452 7.03148 37.6452C6.92835 37.6499 6.85335 37.6171 6.79241 37.528C6.73616 37.439 6.70804 37.3077 6.70804 37.1765C6.71273 36.9093 6.80648 36.628 6.99398 36.4312C7.19554 36.2155 7.43929 36.0233 7.65023 35.7983C7.86116 35.578 8.04398 35.2921 8.02991 34.978C8.01116 35.2874 7.80491 35.5358 7.57991 35.7233C7.35491 35.9202 7.0971 36.0796 6.85804 36.2858C6.59554 36.5015 6.45491 36.8249 6.4221 37.1624C6.40804 37.3312 6.4221 37.514 6.51116 37.6874C6.55335 37.7812 6.63304 37.8608 6.72679 37.9171C6.12679 38.6765 5.59241 39.4874 5.13304 40.3452C4.64085 41.2827 4.21898 42.2718 4.00335 43.3358C3.99866 43.3499 3.99866 43.3687 3.99866 43.3827C3.97991 43.603 4.14866 43.7999 4.37366 43.8187H4.37835C4.55648 43.8327 4.66429 43.828 4.80023 43.828L5.17523 43.8233H5.2221C5.06741 44.1374 4.89398 44.4515 4.72054 44.7702C4.43929 45.2905 4.14398 45.8108 3.9096 46.4155L3.90023 46.4343C3.81116 46.6733 3.91898 46.9452 4.15335 47.053C4.47679 47.203 4.63616 47.1608 4.79554 47.1608C4.89866 47.1515 4.99241 47.1374 5.08148 47.1233C5.03929 47.3202 4.99241 47.5218 4.94085 47.728C4.82366 48.2296 4.67835 48.7405 4.67835 49.3827C4.67835 49.4858 4.70648 49.5937 4.76273 49.6874C4.93148 49.9733 5.30648 50.0624 5.59241 49.8937L5.62054 49.8796L6.00491 49.6546C5.99554 49.8468 5.98616 50.0437 5.97679 50.2452C5.95804 50.8265 5.92523 51.4358 6.09866 52.1437C6.13148 52.2843 6.21116 52.4108 6.33304 52.5093C6.62835 52.7436 7.05491 52.6968 7.29398 52.4062L7.31273 52.3827C7.3221 52.3687 7.34085 52.3499 7.35491 52.3358C7.38773 52.8327 7.43929 53.3765 7.70648 53.9624C7.7721 54.103 7.8846 54.2249 8.02991 54.3046C8.39085 54.4921 8.83148 54.3561 9.02366 53.9999L9.04241 53.9671L9.0471 53.9624C9.06585 54.0749 9.0846 54.1874 9.11273 54.3093C9.14085 54.4265 9.1596 54.5718 9.27679 54.8108C9.3846 55.0452 9.67054 55.3405 10.0315 55.4202C10.3924 55.5046 10.683 55.4155 10.8893 55.3171C11.0815 55.2233 11.2268 55.1061 11.3534 54.9702C11.433 55.153 11.5268 55.3452 11.6627 55.5468C11.7659 55.678 11.9018 55.9358 12.3424 56.1093C12.558 56.189 12.8112 56.189 13.0174 56.128C13.2284 56.0671 13.3737 55.9687 13.4815 55.8796C13.6924 55.7015 13.8096 55.5233 13.894 55.3968L14.1143 55.0405C14.1752 54.9374 14.2268 54.8343 14.2877 54.7312C14.4424 55.003 14.6299 55.2702 14.869 55.5233C14.8971 55.5515 14.9252 55.5796 14.958 55.603C15.3002 55.8655 15.7877 55.8046 16.0502 55.4671C16.5284 54.8577 16.8846 54.2108 17.1846 53.5546C17.1893 53.5499 17.1893 53.5452 17.194 53.5358C17.2221 53.6108 17.2455 53.6812 17.2643 53.7468L17.2971 53.8733C17.3112 53.953 17.3299 54.0843 17.3862 54.239C17.4424 54.3937 17.5643 54.6327 17.8221 54.7921C18.0565 54.9515 18.4174 54.9796 18.6377 54.9093C19.083 54.7593 19.219 54.5577 19.3877 54.3749C19.8377 53.7983 20.1049 53.1749 20.3205 52.5702C20.4705 52.7577 20.6299 52.9265 20.794 53.0952L20.8127 53.114C20.8549 53.1562 20.9065 53.1983 20.9674 53.2265C21.2768 53.3905 21.6659 53.2733 21.8299 52.964C22.1768 52.3218 22.3971 51.6468 22.5846 51.0093C22.6643 50.7421 22.7393 50.4843 22.8143 50.2265C23.0721 50.5218 23.3815 50.7655 23.6955 50.9577L23.7143 50.9718C23.7284 50.9811 23.7471 50.9905 23.7612 50.9999C24.0049 51.1124 24.2955 51.0093 24.408 50.7702C24.6752 50.203 24.8815 49.5608 24.9518 48.9233C24.9893 48.5999 24.9987 48.2812 24.994 47.9671C25.0643 48.0187 25.1346 48.0749 25.2049 48.1265C25.369 48.239 25.533 48.3468 25.7018 48.4499C25.8752 48.553 26.0393 48.6468 26.2362 48.7452L26.2549 48.7546C26.4096 48.8249 26.5877 48.764 26.6627 48.6093C26.8174 48.2905 26.8315 48.0093 26.8455 47.7374C26.8549 47.4655 26.8409 47.2077 26.8221 46.9499L26.7659 46.1952C26.7565 46.0405 26.7565 45.8905 26.7612 45.7452C26.9393 45.8015 27.1127 45.8671 27.2721 45.9562C27.394 46.0218 27.5065 46.0968 27.6096 46.1811C27.6612 46.2233 27.7127 46.2702 27.7643 46.3171L27.8487 46.3968C27.8674 46.4155 27.8815 46.4249 27.9096 46.4483L27.9565 46.4812C27.9846 46.4952 28.0221 46.5093 28.0549 46.514C28.1534 46.528 28.2471 46.4624 28.2612 46.364C28.3643 45.7499 28.5565 45.1499 28.8705 44.6108C28.9549 44.4608 29.058 44.3202 29.1659 44.1843C29.194 44.3624 29.2221 44.5405 29.2549 44.7187L29.2737 44.8124L29.2784 44.8312C29.2784 44.8358 29.2784 44.8358 29.2784 44.8405V44.8499V44.8452C29.2784 44.8452 29.2784 44.8452 29.2784 44.8499L29.283 44.8687C29.283 44.8687 29.283 44.878 29.283 44.8687L29.2877 44.8921C29.2924 44.9061 29.2971 44.9202 29.3112 44.939C29.3487 44.9296 29.2549 45.0046 29.5127 44.9999C29.7049 44.8265 29.583 44.8358 29.6159 44.8171C29.6159 44.803 29.6159 44.8124 29.6159 44.8077V44.803C29.6205 44.7749 29.6299 44.7093 29.644 44.653C29.6721 44.5358 29.7002 44.414 29.7377 44.2921L29.944 43.5515L29.9487 43.5421C30.0612 43.4671 30.169 43.4108 30.2862 43.3733ZM28.6268 43.528C28.5518 43.5843 28.594 43.5374 28.6174 43.5233C28.6268 43.5187 28.6409 43.5093 28.6502 43.5046C28.6409 43.514 28.6315 43.5233 28.6268 43.528ZM29.4002 42.8437V42.8765V42.8812C29.3909 42.8249 29.4002 42.8437 29.4002 42.8437ZM29.0627 43.2983C29.1612 43.2608 29.2596 43.2187 29.3533 43.1905C29.3627 43.1858 29.3721 43.1858 29.3815 43.1812L29.3627 43.4249C29.3487 43.5562 29.3393 43.6921 29.3299 43.828C29.3159 43.8374 29.3065 43.8468 29.2924 43.8561C29.2127 43.6686 29.1424 43.4812 29.0627 43.2983Z",
						fill: "#B2AFA3"
					}), o.a.createElement("path", {
						d: "M14.8877 38.2171C15.3939 37.2655 15.9518 36.3421 16.5236 35.428C16.8096 34.9687 17.1096 34.5187 17.4283 34.0733C17.7471 33.628 18.0705 33.1827 18.4502 32.7608C18.6377 32.5499 18.858 32.3296 19.0783 32.128C19.2986 31.9312 19.5096 31.7577 19.6736 31.589C19.9783 31.2796 20.1939 30.8296 20.6252 30.4171C21.0377 30.0187 21.5205 29.6952 22.0455 29.4468C22.5799 29.2077 23.1377 29.0202 23.7658 29.0015L23.8643 29.1562C23.5877 29.7093 23.2643 30.1405 22.9596 30.5718C22.6455 30.9937 22.3314 31.3827 21.9846 31.7437C21.6564 32.0812 21.1877 32.4702 20.6346 32.8077L19.9314 33.2249C19.7252 33.3421 19.5518 33.4968 19.3596 33.6608C18.6002 34.3312 17.8689 35.1186 17.1518 35.9015C16.4299 36.689 15.7361 37.5046 15.0377 38.3202L14.8877 38.2171Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M11.6301 38.2356C11.7285 37.5606 11.8316 36.8997 11.8738 36.2341C11.9066 35.906 11.9301 35.5731 11.9395 35.245C11.9629 34.9216 11.977 34.5841 11.977 34.2747C11.977 33.97 11.916 33.6841 11.827 33.4731C11.7895 33.3653 11.7426 33.2809 11.7145 33.1966C11.677 33.1075 11.677 33.0794 11.6488 32.9997C11.602 32.8544 11.5223 32.6903 11.4098 32.5403C11.3535 32.47 11.2785 32.3856 11.1613 32.3341C11.0441 32.2778 10.9176 32.2216 10.7488 32.2919L10.5707 32.245C10.491 31.9825 10.6832 31.7059 10.8801 31.5513C11.0816 31.3919 11.3582 31.2888 11.6348 31.2747C12.1926 31.2466 12.7082 31.4856 13.0832 31.8653C13.2707 32.0481 13.4301 32.32 13.5098 32.545C13.5988 32.7794 13.627 33.0231 13.6316 33.2481C13.627 33.7028 13.5191 34.0966 13.4348 34.4528C13.2613 35.1513 13.0363 35.8028 12.7645 36.4497C12.4738 37.0872 12.1785 37.7106 11.8035 38.2919L11.6301 38.2356Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M25.1299 29.6108C25.1018 30.0796 24.9752 30.5296 24.7502 30.8858C24.6424 31.064 24.5111 31.2187 24.3611 31.3358C24.2814 31.3921 24.2064 31.4437 24.1221 31.4858C24.0846 31.5093 24.0377 31.528 23.9955 31.5468L23.8268 31.6171C23.7424 31.6593 23.6018 31.7437 23.5127 31.9218C23.433 32.0905 23.433 32.2124 23.4189 32.2827L23.3674 32.6343L23.283 33.3187C23.2689 33.4218 23.2455 33.5015 23.2221 33.553C23.2643 33.539 23.3252 33.5296 23.4002 33.5483L22.4064 34.2515C22.3783 34.514 22.3643 34.7765 22.3502 35.039C22.3455 35.114 22.3408 35.189 22.3408 35.264C22.3268 35.264 22.3127 35.264 22.2986 35.264L21.4736 35.278H21.3893C21.3564 35.278 21.3189 35.2827 21.2861 35.2874C20.8924 35.353 20.6299 35.7233 20.6955 36.1124C20.7658 36.5155 20.7752 36.7968 20.733 36.9187C20.7564 36.928 20.7189 36.9937 20.6721 37.0218C20.6533 37.0405 20.6393 37.0499 20.6439 37.064C20.6486 37.078 20.6721 37.1062 20.6674 37.1296L19.7721 37.1952C19.6502 37.4858 19.6268 37.753 19.6268 37.9733C19.6221 38.1983 19.6455 38.3905 19.6314 38.564C19.6268 38.7093 19.5705 38.8827 19.4721 39.0233C19.3689 39.1593 19.2189 39.2905 18.9893 39.2577C19.1486 39.4265 19.4627 39.4218 19.6877 39.2999C19.9174 39.1874 20.1143 39.0046 20.2361 38.7515C20.3393 38.5546 20.4049 38.3624 20.4611 38.189C20.6346 38.2265 20.8033 38.2312 20.958 38.2077C21.3236 38.1374 21.6611 37.9546 21.9049 37.603C22.0736 37.3499 22.158 37.078 22.1955 36.8296L22.2705 36.8343C22.4252 36.8343 22.5002 36.8483 22.7533 36.839C22.8752 36.8296 23.0393 36.8108 23.2361 36.7218C23.433 36.6374 23.6393 36.4452 23.7377 36.2624C23.9346 35.8921 23.9064 35.6483 23.9205 35.5124C23.9252 35.3718 23.9252 35.2312 23.9252 35.0905C23.9252 34.9921 23.9205 34.8937 23.9205 34.7999C24.0986 34.6874 24.2393 34.5468 24.3471 34.378C24.5955 33.9562 24.5721 33.5999 24.558 33.3327C24.5393 33.0749 24.5018 32.8593 24.4736 32.6249L24.4221 32.278C24.4174 32.264 24.4174 32.2687 24.4174 32.264C24.4268 32.2593 24.4314 32.2546 24.4408 32.2452C24.4971 32.203 24.558 32.1608 24.6049 32.1093C24.708 32.0155 24.8018 31.903 24.8861 31.7952C25.0502 31.5702 25.1627 31.3171 25.2283 31.0687C25.3361 30.5671 25.3033 30.0562 25.1299 29.6108ZM24.3705 32.3015C24.3283 32.3718 24.2814 32.3812 24.2955 32.3577C24.3002 32.3483 24.3377 32.3155 24.3799 32.2874C24.3752 32.2968 24.3752 32.2968 24.3705 32.3015Z",
						fill: "#B2AFA3"
					}), o.a.createElement("path", {
						d: "M31.9313 32.5874C31.8375 32.0671 31.6359 31.5374 31.2891 31.078C30.9281 30.6327 30.4313 30.2858 29.9109 30.1452C29.0063 29.8874 28.1063 30.0468 27.4031 30.4546C27.4453 30.3046 27.4875 30.1546 27.5203 29.9952C27.3047 29.9952 27.0891 29.9952 26.8781 29.9952C27.0469 29.0296 27 28.2374 26.1047 27.7358C25.8094 27.9843 25.725 28.4155 25.9359 28.7577C26.0813 29.0343 26.1047 29.3437 26.0953 29.6437C26.0859 29.9483 26.0391 30.2483 25.9594 30.539C25.8328 31.1296 25.5 31.6499 25.2234 32.1843C24.6094 33.239 23.8875 34.2187 23.1328 35.1796C22.3734 36.1358 21.5813 37.064 20.7516 37.964C19.9406 38.878 19.0594 39.7265 18.2156 40.6124L17.9766 40.8655L18.2156 41.0952L18.4594 41.3296L18.6891 41.5499L18.9141 41.3483L20.2031 40.214C20.6344 39.839 21.0609 39.4593 21.4688 39.0515C22.2891 38.2499 23.0719 37.4155 23.8266 36.5577C24.6 35.6999 25.2563 34.7483 25.8609 33.778C26.1609 33.2905 26.4563 32.803 26.7141 32.2874C26.9906 31.8233 27.1688 31.303 27.3188 30.7921C28.1344 30.7124 28.9219 30.839 29.4797 31.1812C29.7703 31.3687 29.9859 31.5937 30.1172 31.8655C30.2578 32.1327 30.3328 32.4562 30.3516 32.7937C30.3234 34.0593 29.7938 35.2265 29.1516 36.2765C28.4859 37.3218 27.7594 38.353 27.0094 39.3468C26.2547 40.3358 25.4766 41.3249 24.6938 42.2952C23.8969 43.2562 23.0906 44.2077 22.2516 45.1405L22.0359 45.3796L22.2703 45.6046L22.5516 45.8765L22.7719 46.0874L23.0063 45.8905C24.0703 44.9905 24.9984 43.9687 25.9266 42.9702C26.8453 41.9812 27.7922 40.9499 28.6125 39.8577C29.0297 39.314 29.4375 38.7655 29.8453 38.2171C30.2484 37.6687 30.6609 37.1155 31.0266 36.5249C31.3781 35.9343 31.7063 35.3108 31.8844 34.6358C32.0484 33.9702 32.0813 33.2577 31.9313 32.5874Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M14.1047 32.4749L14.0063 32.4843L14.025 32.5921C14.1563 33.4171 14.0484 34.2608 13.8422 35.0671C13.6313 35.8733 13.3313 36.6608 12.9703 37.4202C12.6188 38.1796 12.2109 38.9249 11.7938 39.6608C11.3813 40.4015 10.9406 41.128 10.4906 41.8452L10.2656 42.2062L10.725 42.3655L11.2031 42.5296L11.3672 42.5858L11.5078 42.4124C12.1125 41.6812 12.6469 40.9171 13.1391 40.1296C13.6359 39.3421 14.1094 38.564 14.5734 37.7437C15.0234 36.914 15.3844 36.0562 15.6422 35.1421C15.8625 34.2093 15.8344 33.2671 15.7031 32.353L14.1047 32.4749Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M58.0033 45.3375C57.9799 43.9125 57.7033 42.4875 57.1971 41.1563C56.6252 39.6375 55.8002 38.2406 54.8346 36.9844C53.8736 35.7281 52.7533 34.6219 51.6424 33.586C49.3877 31.5047 46.9267 29.6438 44.2924 28.0875C43.6314 27.6938 42.9236 27.3 42.1455 27.0047C42.1127 26.9906 42.0799 26.9813 42.0424 26.9672C41.1611 26.5641 40.2377 26.3063 39.2439 26.3531C38.6205 26.3766 37.7205 26.5406 36.9752 27.1688C36.5439 27.5297 36.2205 28.0172 36.033 28.5703C35.1283 28.1906 34.2846 28.0219 33.4596 28.0547C32.5642 28.0969 31.7861 28.3828 31.2002 28.875C30.5205 29.4469 30.183 30.225 30.0846 31.0219C30.0471 31.2141 30.0189 31.4063 30.0096 31.5938C29.9908 31.9641 30.0236 32.3344 30.0986 32.7C29.7752 32.7469 29.4518 32.8313 29.133 32.9625C28.6455 33.1688 28.1627 33.4828 27.783 33.9281C27.3939 34.3734 27.1549 34.8984 27.0143 35.4047C26.883 35.925 26.8314 36.3985 26.883 36.9375C26.9346 37.486 27.0846 37.9735 27.2674 38.4047C27.6424 39.2625 28.1299 39.9469 28.6221 40.5703C29.1143 41.1938 29.6346 41.7516 30.1174 42.2672L31.5846 43.8516C31.7627 44.0391 31.9408 44.2266 32.1189 44.4141C31.983 44.4844 31.8517 44.5547 31.7205 44.6391C31.2142 44.9625 30.7314 45.4219 30.4033 45.9984C30.0705 46.5703 29.9064 47.2172 29.8877 47.8078C29.8642 48.4359 30.0002 49.0594 30.2252 49.575C30.6846 50.6063 31.3502 51.2813 31.9736 51.8578C32.5971 52.4109 33.1877 52.8891 33.8393 53.3625C34.4721 53.8359 35.1424 54.2719 35.8314 54.675C37.2002 55.4906 38.6814 56.1328 40.2236 56.5828C41.0017 56.7938 41.7846 56.9578 42.5814 57.0703C43.1767 57.1453 43.7721 57.1828 44.3674 57.2016C44.9017 57.2484 45.4174 57.2766 45.9142 57.2766C49.4908 57.2766 52.2892 56.0438 55.0455 53.3156C56.3721 52.0078 58.3549 49.3313 58.0033 45.3375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M36.7177 29.9015C36.6989 29.1187 36.9521 28.3405 37.5474 27.839C38.0208 27.4405 38.6536 27.253 39.2771 27.2296C40.8661 27.1593 42.3286 28.0265 43.6364 28.9171C46.5052 30.8671 49.1864 33.089 51.6286 35.5452C53.9677 37.889 56.0958 40.6452 56.8599 43.8515C57.8911 48.1733 56.0536 51.0796 54.413 52.6968C51.4552 55.6265 48.5442 56.7093 44.3771 56.3249C40.2146 55.9405 36.3708 53.7937 33.2864 50.9952C32.3583 50.1562 31.4208 49.0921 31.5146 47.8452C31.5989 46.664 32.4427 45.9187 33.6099 45.6468C34.3599 45.4733 35.1333 45.5343 35.8833 45.7171C34.2896 44.2687 32.8927 42.7874 31.0927 40.9452C29.9864 39.8155 28.3833 38.1983 28.2802 36.628C28.238 36.0093 28.3552 35.3671 28.7067 34.8608C29.3489 33.9233 30.6567 33.6421 31.7817 33.8905C31.5614 33.5905 31.3739 33.2671 31.2286 32.9296C30.7458 31.8046 30.8302 30.3374 31.7724 29.5452C32.2458 29.1468 32.8786 28.964 33.5021 28.9312C34.6411 28.8937 35.7146 29.3249 36.7177 29.9015Z",
						fill: "#E5BE9D"
					}), o.a.createElement("path", {
						d: "M52.6874 51.8859L51.3468 52.8C51.1265 52.95 50.8968 53.1234 50.7187 53.2125C50.6296 53.2547 50.5452 53.2828 50.4843 53.2875C50.4233 53.2922 50.3858 53.2828 50.2827 53.2547C50.1843 53.2266 50.0624 53.1797 49.889 53.1375C49.7249 53.1 49.4765 53.0578 49.2093 53.1422C48.9468 53.2172 48.7218 53.4188 48.6046 53.5922C48.478 53.7656 48.4124 53.9203 48.3515 54.0422C48.2952 54.1641 48.2437 54.2625 48.2015 54.3234C48.1593 54.3844 48.1452 54.3844 48.103 54.4031C48.028 54.4453 47.8405 54.4828 47.5921 54.4922C47.0858 54.5203 46.5843 54.5344 46.1624 54.45C45.7312 54.3656 45.464 54.1969 45.3562 53.9719L44.0624 54.3938L44.3952 54.1219C44.2827 54.0844 44.1749 54.0422 44.0718 54C44.0952 53.9672 44.1233 53.9391 44.1327 53.925L44.1796 53.8875C44.2171 53.8641 44.1749 53.8875 44.1187 53.9062C44.0858 53.9203 44.0437 53.9391 43.9921 53.9625C43.7108 53.8406 43.4624 53.7047 43.2421 53.5219C42.9187 53.2594 42.5999 52.8844 42.2671 52.4859C42.1171 52.3078 41.8827 52.1906 41.6249 52.2C41.4468 52.2047 41.2874 52.2703 41.1562 52.3734C41.039 52.1203 40.9265 51.8578 40.7858 51.5766C40.6312 51.2719 40.453 50.9484 40.1718 50.625L38.9108 51.4922C38.8405 51.3703 38.8593 51.3094 38.8546 51.3188C38.8546 51.3094 38.8546 51.3422 38.8499 51.3703C38.8452 51.4312 38.8265 51.5203 38.8077 51.6188L38.7233 51.975L38.3624 51.4219C38.1187 51.0422 37.8655 50.6719 37.6124 50.2922L37.5843 50.2547C37.5233 50.1656 37.4437 50.0953 37.3405 50.0438C37.0312 49.8938 36.6562 50.0156 36.5015 50.3203C36.4077 50.5078 36.2577 50.7141 36.0937 50.9109C36.0655 50.9438 36.0327 50.9813 36.0046 51.0141C35.864 50.7797 35.7374 50.5125 35.6155 50.2266C35.3952 49.7016 35.1796 49.1016 34.7999 48.5578L34.7577 48.4969C34.6499 48.3469 34.4483 48.2859 34.2702 48.3656C34.0733 48.4547 33.9843 48.6844 34.078 48.8812C34.0968 48.9281 34.1155 49.0641 34.1108 49.1906C34.1108 49.3219 34.0968 49.4578 34.078 49.5938C34.0593 49.7297 34.0312 49.8656 33.9937 49.9969C33.989 50.0063 33.989 50.0156 33.9843 50.025C33.6796 49.7438 33.4358 49.3266 33.2671 48.8953C33.0515 48.3234 32.9155 47.7 32.939 47.0625C32.7983 47.6859 32.7983 48.3469 32.939 48.9891C33.0093 49.3125 33.1124 49.6312 33.2671 49.9359C33.4265 50.2406 33.6421 50.5359 33.9562 50.7609L33.9655 50.7656C34.0968 50.8547 34.2796 50.8219 34.3687 50.6906L34.3827 50.6719C34.4812 50.5312 34.5374 50.4047 34.589 50.2781C34.6124 50.3672 34.6405 50.4563 34.664 50.5453C34.8233 51.1172 35.053 51.7734 35.5452 52.3219L35.564 52.3406C35.7843 52.5656 36.1499 52.5703 36.3749 52.35L36.403 52.3219C36.5858 52.1484 36.7874 51.9516 36.9749 51.7453C37.0452 51.8672 37.1108 51.9891 37.1812 52.1109L37.5187 52.6969L37.6874 52.9875C37.739 53.0766 37.8093 53.2078 37.9358 53.3625C38.0577 53.5125 38.278 53.7188 38.6108 53.7938C38.9483 53.8734 39.2952 53.7656 39.5062 53.6203C39.6515 53.5219 39.764 53.4094 39.853 53.2828C39.9608 53.5172 40.078 53.7562 40.2374 54.0047C40.4437 54.3234 40.7155 54.6656 41.128 54.9234C41.2593 55.0078 41.414 55.05 41.5827 55.0453C41.8499 55.0359 42.0796 54.8953 42.2155 54.6938C42.2296 54.7078 42.2437 54.7219 42.2624 54.7313C42.7687 55.1297 43.3733 55.3922 43.9265 55.5562L44.4233 55.1484C44.578 55.2938 44.7468 55.4156 44.9249 55.5094C45.2624 55.6875 45.6093 55.7766 45.9327 55.8234C46.5843 55.9125 47.1749 55.8609 47.7421 55.7766C48.0327 55.7297 48.3937 55.6828 48.778 55.4297C48.9655 55.3078 49.1437 55.1063 49.2327 54.9328C49.3312 54.7594 49.3827 54.6094 49.4296 54.4875C49.4765 54.3656 49.514 54.2672 49.5421 54.2203C49.5702 54.1687 49.5608 54.1828 49.5562 54.1734C49.5468 54.1687 49.5796 54.15 49.678 54.1641C49.7718 54.1734 49.903 54.2062 50.0718 54.2344C50.2312 54.2625 50.4702 54.2766 50.6765 54.2203C50.8827 54.1687 51.0468 54.0797 51.1921 53.9906C51.478 53.7984 51.6562 53.6109 51.8624 53.4375L53.0624 52.3453C53.8593 51.6187 54.6421 50.8688 55.4155 50.1094C54.4921 50.6906 53.5827 51.2813 52.6874 51.8859ZM38.6202 52.5047C38.6202 52.5188 38.6202 52.5094 38.6202 52.5047V52.5047ZM39.0562 52.4578C39.0562 52.4578 39.0515 52.4484 39.0468 52.4484C39.0608 52.4578 39.0655 52.4672 39.0562 52.4578ZM44.6999 55.2984C44.6999 55.3031 44.6999 55.3031 44.6999 55.2984C44.6718 55.3172 44.6812 55.3125 44.6999 55.2984Z",
						fill: "#AA8468"
					}), o.a.createElement("path", {
						d: "M40.7299 46.5938C40.5799 46.4345 40.4253 46.2845 40.2612 46.1392C39.9378 45.8485 39.6003 45.5767 39.2581 45.3142C38.9018 45.047 38.5924 44.7985 38.1424 44.5595C37.8284 44.386 37.4862 44.0954 37.144 43.8423L36.6143 43.4532C36.5206 43.3876 36.4268 43.3267 36.319 43.261C36.2674 43.2282 36.1971 43.1954 36.1362 43.1626L36.0237 43.0923C35.7284 42.9048 35.4893 42.647 35.2737 42.3563C34.8471 41.7657 34.5518 41.0298 34.2331 40.261L33.2534 39.8392C33.3003 39.8157 33.319 39.8298 33.2768 39.8063C33.2393 39.7829 33.1784 39.7267 33.1596 39.6798C33.0706 39.5298 33.0331 39.2157 33.0237 38.7938L31.5659 38.386C31.5893 38.3532 31.6503 38.3157 31.6784 38.311C31.669 38.311 31.6643 38.3157 31.6503 38.311C31.5612 38.3063 31.4721 38.2407 31.4487 38.2173C31.3784 38.1095 31.3409 37.9454 31.3409 37.7204C31.3409 37.5001 31.3831 37.2376 31.4346 36.961L31.5237 36.4782C31.5331 36.422 31.5331 36.3657 31.5284 36.3095C31.4862 36.0048 31.2049 35.7938 30.9003 35.836C30.5956 35.8782 30.3799 36.1548 30.4221 36.4548C30.4268 36.5017 30.3378 36.6048 30.1549 36.6142C29.9815 36.6235 29.7987 36.5579 29.6862 36.436C29.4284 36.1454 29.4987 35.4751 29.9674 35.0767C29.6628 35.1423 29.3768 35.3532 29.194 35.6438C29.0065 35.9298 28.9221 36.3329 29.0581 36.7313C29.2034 37.1532 29.5878 37.4345 30.0003 37.5376C30.0143 37.5423 30.0331 37.5423 30.0471 37.5423C30.0471 37.5517 30.0424 37.561 30.0378 37.5751C29.9721 37.9267 29.9674 38.3626 30.1362 38.7892C30.3518 39.3048 30.7784 39.6188 31.2518 39.7642C31.3362 39.7876 31.4299 39.8063 31.5237 39.8204C31.5659 40.0126 31.6268 40.2142 31.7346 40.4157C31.9174 40.7485 32.1706 41.0063 32.5081 41.1892C32.6534 41.2735 32.8362 41.3298 33.0331 41.3626C33.3518 41.9954 33.7409 42.6423 34.3034 43.2001C34.6596 43.5423 35.0909 43.8517 35.5831 44.0157L35.7659 44.0767C35.8034 44.0907 35.8268 44.0954 35.8737 44.1142C35.9534 44.147 36.0471 44.1892 36.1362 44.236L36.6987 44.5313C37.0878 44.7282 37.4487 44.9392 37.9268 45.1032C38.0768 45.1548 38.2831 45.2626 38.4659 45.3563C38.6534 45.4548 38.8409 45.5532 39.0284 45.661C39.3987 45.8673 39.7643 46.0923 40.1253 46.322C40.3034 46.4392 40.4815 46.5563 40.6503 46.6829C40.8143 46.8142 41.0018 46.936 41.0909 47.1329C41.0393 46.9173 40.8706 46.7532 40.7299 46.5938Z",
						fill: "#AA8468"
					}), o.a.createElement("path", {
						d: "M56.1237 45.3283C55.1534 43.4673 54.0565 41.6861 52.73 40.083C51.4409 38.4564 49.955 36.9986 48.3706 35.6533C47.5831 34.9736 46.7394 34.3595 45.9144 33.722C45.4972 33.408 45.094 33.0798 44.6862 32.7517L44.0628 32.2314C43.8331 32.0298 43.6597 31.847 43.4675 31.6548L42.3565 30.5392L41.8128 29.9908C41.6394 29.822 41.4331 29.6298 41.3019 29.5267C41.2878 29.508 41.2269 29.4705 41.1753 29.4376L41.0253 29.3345C40.9222 29.2689 40.819 29.208 40.7159 29.147C40.505 29.0345 40.294 28.922 40.0456 28.8189C39.7972 28.7158 39.53 28.5705 39.2956 28.4158C39.0612 28.2517 38.855 28.0642 38.6675 27.8673L38.7519 27.7361C39.2722 27.9095 39.7409 28.0314 40.2519 28.0689C40.5144 28.097 40.8097 28.1345 41.0909 28.2142C41.2315 28.2517 41.3722 28.2939 41.5081 28.3455L41.7097 28.4205C41.7753 28.4439 41.8362 28.4626 41.93 28.5189C42.244 28.7064 42.4315 28.8611 42.6612 29.0298L43.294 29.5314L44.5034 30.5626L45.08 31.0455L45.6987 31.5048C46.1206 31.8236 46.5331 32.1658 46.9362 32.5126C47.7284 33.2251 48.5019 33.9611 49.2565 34.7205C50.7706 36.2298 52.1909 37.847 53.3815 39.6189C54.5722 41.3908 55.5331 43.2986 56.2737 45.2673L56.1237 45.3283Z",
						fill: "#FFFCD9"
					}), o.a.createElement("path", {
						d: "M42.6702 36.6C41.9109 36.0703 41.1281 35.5828 40.3171 35.1469C39.5109 34.7016 38.6906 34.2797 37.8702 33.8719C37.0546 33.4453 36.1593 33.1734 35.3624 32.7234L35.0624 32.55C34.9265 32.475 34.7718 32.3531 34.6921 32.2734C34.6031 32.1844 34.5421 32.1234 34.5046 32.0813C34.4906 32.0484 34.4109 31.9969 34.3171 31.9453C34.1343 31.8375 33.8999 31.7391 33.6656 31.5703C33.5484 31.4906 33.4312 31.3781 33.3374 31.2469C33.2484 31.1109 33.2156 30.9422 33.2437 30.8016L33.3796 30.7734C33.5484 30.9469 33.7124 30.9281 33.9093 30.9328C34.1062 30.9281 34.3359 30.9141 34.5984 30.9328C34.7296 30.9469 34.8749 30.9609 35.0671 31.0359C35.2359 31.1016 35.3624 31.1812 35.4609 31.2328C35.5687 31.2891 35.6015 31.2984 35.6765 31.3219L35.9999 31.4625C36.8624 31.8469 37.6031 32.4516 38.3999 32.9484C39.1874 33.4594 39.9515 34.0078 40.6874 34.5937C41.414 35.1844 42.1312 35.7984 42.7593 36.4922L42.6702 36.6Z",
						fill: "#FFFCD9"
					}), o.a.createElement("path", {
						d: "M38.9298 40.7953C38.2219 40.1953 37.486 39.6421 36.7173 39.1359C35.9532 38.6203 35.1751 38.1328 34.3876 37.6546C33.6047 37.1718 32.7563 36.7968 31.9876 36.3L31.7016 36.1078C31.5797 36.0281 31.4438 35.9015 31.3641 35.8171C31.2798 35.7281 31.2188 35.6625 31.1766 35.6109C31.1485 35.5687 31.0688 35.5171 30.9751 35.4656C30.7969 35.3531 30.5672 35.2453 30.3469 35.0765C30.2344 34.9921 30.1266 34.8843 30.0469 34.7578C29.9672 34.6265 29.9391 34.4625 29.9719 34.3312L30.0844 34.3171C30.2204 34.514 30.3891 34.5328 30.586 34.5656C30.7876 34.589 31.0126 34.6031 31.2704 34.6453C31.3969 34.6734 31.5329 34.7015 31.7063 34.7859C31.861 34.8609 31.9735 34.95 32.0626 35.0109C32.161 35.0765 32.2079 35.0999 32.2876 35.1328L32.5969 35.2968C33.4172 35.7515 34.1344 36.375 34.8891 36.9281C35.6391 37.4906 36.3657 38.0812 37.0594 38.7093C37.7485 39.3421 38.4235 39.9984 39.0094 40.7203L38.9298 40.7953Z",
						fill: "#FFFCD9"
					}), o.a.createElement("path", {
						d: "M46.369 36.9141C45.3753 35.7469 44.2409 34.7344 43.144 33.7126C42.0565 32.6766 40.8894 31.6876 39.6847 30.7923C38.4753 29.9063 37.3081 28.9266 35.9065 28.2704C35.1987 27.961 34.4253 27.7876 33.6565 27.8298C32.8878 27.8673 32.1331 28.1344 31.5565 28.6219C31.1112 28.9829 30.7644 29.4798 30.6237 30.0001C30.3659 30.9048 30.5253 31.8048 30.9331 32.5079C30.7831 32.4657 30.6331 32.4235 30.4737 32.3907C30.4737 32.6063 30.4737 32.8219 30.4737 33.0329C29.5081 32.8641 28.7159 32.911 28.2144 33.8063C28.4628 34.1016 28.894 34.186 29.2362 33.9751C29.6112 33.7407 30.23 33.7079 30.8675 33.8204C31.4065 33.9329 31.8847 34.186 32.3628 34.4485C32.8456 34.6923 33.2956 35.0016 33.7409 35.3063C34.6362 35.9157 35.4847 36.5907 36.3237 37.2798C37.1534 37.9782 37.969 38.6907 38.7612 39.4313C39.5581 40.1719 40.3175 40.9454 41.0956 41.6954L41.344 41.9344L41.5784 41.6954L41.8128 41.4516L42.0331 41.2219L41.8315 40.9923L40.6972 39.7032C40.3222 39.2719 39.9425 38.8407 39.5394 38.4329C38.7331 37.6173 37.9034 36.8298 37.0456 36.0751C36.1831 35.3016 35.2362 34.6454 34.2659 34.0407C33.7784 33.7454 33.2909 33.4501 32.7753 33.1923C32.3065 32.9204 31.7909 32.7376 31.2753 32.5923C31.1956 31.7766 31.3222 30.9891 31.6644 30.4313C32.0628 29.8173 32.8034 29.5969 33.4878 29.6438C34.1815 29.6719 34.8565 29.8782 35.4894 30.1501C36.769 30.6891 37.8987 31.5469 39.0519 32.3532C40.1909 33.1782 41.3019 34.0454 42.4034 34.9219C43.4956 35.8032 44.569 36.7173 45.619 37.6594L45.8581 37.8751L46.0878 37.6407L46.3597 37.3594L46.5753 37.1391L46.369 36.9141Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M40.6079 46.7532C39.8157 46.261 39.0423 45.7782 38.222 45.3188C37.3923 44.8688 36.5298 44.5079 35.6204 44.25C34.6876 44.0344 33.7407 44.0625 32.8267 44.1985L33.047 45.7829C33.8954 45.675 34.7438 45.7735 35.5548 46.0032C36.3657 46.2235 37.1439 46.5422 37.9079 46.9032C38.6626 47.2688 39.4079 47.6766 40.1438 48.0985C40.8751 48.525 41.6063 48.9563 42.3188 49.411L42.6704 49.636L42.8298 49.1813L42.9985 48.7032L43.0548 48.5391L42.8814 48.3938C42.1595 47.7844 41.386 47.2594 40.6079 46.7532Z",
						fill: "black"
					})), o.a.createElement("defs", null, o.a.createElement("clipPath", {
						id: "clip0"
					}, o.a.createElement("rect", {
						width: "60",
						height: "60",
						fill: "white"
					})))),
					HELPFUL_200: e => o.a.createElement("svg", {
						className: e.className,
						width: "60",
						height: "60",
						viewBox: "0 0 60 60",
						fill: "none",
						xmlns: "http://www.w3.org/2000/svg"
					}, o.a.createElement("path", {
						d: "M59.8785 37.6904C49.3551 34.606 30.1738 20.3091 29.6957 20.4404C29.3816 20.5247 20.9395 33.1247 15.0098 37.0575C21.1551 40.6482 49.0691 55.4513 51.0988 56.4638",
						fill: "#DDDDDD"
					}), o.a.createElement("path", {
						d: "M28.6452 43.4747C26.4936 42.3544 24.2718 41.1965 21.9702 39.9965C20.8218 39.3965 19.6499 38.7872 18.4593 38.1684C17.9624 37.9106 17.4562 37.6481 16.9499 37.3809L16.4015 37.095C16.3218 37.0481 16.1858 37.0012 16.1577 36.9497L16.4015 36.7669C16.5608 36.6403 16.7343 36.5278 16.889 36.3872L17.489 35.8669C18.028 35.3887 18.539 34.8825 19.064 34.3762C20.0765 33.3403 21.0843 32.2622 22.0546 31.1325C24.014 28.8872 25.9218 26.4825 27.8671 23.9794C28.3499 23.3559 28.8374 22.7278 29.3249 22.095L29.7655 21.5606C29.8827 21.3075 30.1077 21.6122 30.253 21.6778C31.4952 22.5778 32.7561 23.4919 34.0405 24.42C36.7686 26.3981 39.5811 28.4372 42.4968 30.5512C43.9546 31.5872 46.9499 33.2325 50.2968 34.6434C53.6296 36.059 57.3796 37.1887 59.9999 37.2825C54.7218 35.2153 48.6749 31.3247 42.0843 26.9559C38.7983 24.7153 35.353 22.3669 31.8233 19.9575L31.2421 19.5825L30.5624 19.1747C30.103 19.0809 29.6858 18.9778 29.2827 19.034C29.0999 19.109 28.9077 19.2731 28.7249 19.395C28.5374 19.5262 28.3405 19.6481 28.214 19.859L27.4218 20.8997C26.7796 21.7669 26.1327 22.634 25.4811 23.5106C24.1827 25.245 22.8515 26.97 21.478 28.6528C19.903 30.5747 18.2296 32.4965 16.4015 34.2122L15.4827 35.009L13.9968 36.1575C13.528 36.5278 13.0124 36.9075 12.5952 37.2731L14.2499 38.145L18.7593 40.4934C23.4655 42.9075 28.153 45.2559 32.564 47.3559C37.5608 49.7325 50.1843 56.5434 51.0936 56.4919C49.9546 55.7184 44.1093 51.8887 40.603 49.9481C36.928 47.8481 32.9436 45.7247 28.6452 43.4747Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M54.0138 48.4903C53.7513 48.4153 53.4888 48.3403 53.2216 48.2606L52.6544 48.0778C52.2747 47.9419 51.8903 47.8012 51.506 47.6653C50.7372 47.3794 49.9685 47.0653 49.2325 46.7606C46.6825 45.7106 44.4747 44.7028 43.706 44.4262L43.7575 44.2997L43.6872 44.4216C43.6825 44.4216 43.6778 44.4169 43.6731 44.4169C43.7013 44.3794 43.72 44.3325 43.7481 44.2903L43.7575 44.295L43.7763 44.2481H43.7716C44.92 42.5841 45.5247 40.4653 46.0497 38.1919C46.3028 36.9966 46.5091 35.745 46.6403 34.4372L46.7153 33.4434L46.7388 32.7262C46.7435 32.4262 46.72 32.1544 46.7106 31.8637C46.6778 31.3294 46.6778 30.6216 46.5794 30.1669C46.1528 30.5419 45.7403 30.8653 45.2763 31.3012C44.1419 32.3466 42.9841 33.42 41.8028 34.5122C40.7528 35.3887 39.6091 36.2559 38.4091 37.0434C37.2091 37.8403 35.9435 38.5856 34.645 39.3169C32.9341 40.2731 31.2044 41.2434 29.4653 42.2137C29.9669 42.4622 30.5013 42.7247 31.0497 42.9966C31.3169 43.1372 31.5888 43.2731 31.8606 43.4184L32.3153 43.6622C35.4044 45.3637 38.6294 47.2247 41.8216 49.0809C41.6716 49.1606 41.5638 49.2262 41.5497 49.2684C41.6341 49.2544 41.7981 49.2216 41.995 49.1841C42.2341 49.3247 42.4731 49.4606 42.7122 49.6012C42.7122 49.6059 42.7075 49.6059 42.7075 49.6106L42.1872 50.3137L43.0825 50.2528C43.2841 50.2387 43.4903 50.2012 43.6919 50.1778C44.02 50.37 44.3575 50.5622 44.6856 50.7544C44.5263 51.0591 44.3716 51.3637 44.2544 51.6684C44.6997 51.5325 45.1169 51.3966 45.5388 51.2512C45.9185 51.4716 46.2794 51.6825 46.6544 51.9028C46.4435 52.1653 46.2231 52.4372 46.0028 52.7044C45.8763 52.9481 46.5794 52.7372 46.9872 52.6622C47.2075 52.6153 47.4419 52.5637 47.6856 52.5028C47.995 52.6809 48.3091 52.8637 48.6138 53.0419C48.4685 53.3653 48.3278 53.7309 48.1497 54.2231C48.7544 54.1153 49.3263 54.0122 49.931 53.8387H49.9356C49.9638 53.8528 49.9778 53.8622 50.0106 53.8716C50.306 53.9278 50.4325 53.9044 50.6341 53.8387C50.9622 53.6794 51.1169 53.5809 51.3372 53.4309C51.745 53.1591 52.1153 52.845 52.4341 52.4981C52.6591 52.2497 52.8794 51.9403 53.0903 51.5934C53.1419 51.5372 53.2075 51.4716 53.2591 51.42C53.231 51.4294 53.1981 51.4434 53.1653 51.4575C53.2685 51.2794 53.381 51.1059 53.4653 50.9044C53.6153 50.5809 53.7325 50.2247 53.8356 49.8544C53.8825 49.6903 53.9341 49.4653 53.9903 49.1981L54.0653 48.8137C54.0606 48.6919 54.2153 48.4809 54.0138 48.4903ZM43.6685 44.1825C43.6403 44.1684 43.6122 44.1497 43.5794 44.1309C43.6825 43.9809 43.781 43.8169 43.8747 43.6387C43.8044 43.8216 43.7435 44.0137 43.6685 44.1825ZM43.4435 44.3466C43.4669 44.3606 43.5185 44.3887 43.5466 44.4075C43.4856 44.3747 43.4481 44.3512 43.4435 44.3466ZM43.5747 44.4216L43.57 44.3981C43.5747 44.3981 43.5794 44.4028 43.5841 44.4028C43.5794 44.4075 43.5794 44.4122 43.5747 44.4216ZM43.4435 44.3466C43.4481 44.3419 43.4481 44.3372 43.4528 44.3325C43.4856 44.3512 43.4997 44.3559 43.5231 44.37C43.4997 44.3606 43.4575 44.3466 43.4435 44.3466ZM43.5841 44.3981C43.5794 44.3981 43.5747 44.3934 43.57 44.3887L43.5653 44.3794C43.5513 44.3747 43.5372 44.37 43.5278 44.37C43.5044 44.3559 43.481 44.3466 43.4481 44.3278C43.4763 44.2903 43.4997 44.2481 43.5231 44.2106L43.5606 44.3841C43.57 44.3841 43.5747 44.3887 43.5841 44.3887C43.5935 44.37 43.5981 44.3512 43.6075 44.3325L43.5841 44.22C43.57 44.2153 43.5513 44.2059 43.5372 44.2012C43.5466 44.1872 43.5606 44.1684 43.57 44.1497L43.5841 44.22C43.6028 44.2294 43.6263 44.2387 43.645 44.2434C43.631 44.2716 43.6216 44.3044 43.6122 44.3325L43.6263 44.3981C43.6122 44.3934 43.6028 44.3934 43.5888 44.3887C43.5841 44.3887 43.5841 44.3934 43.5841 44.3981Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M0 39.1434C3.23437 37.2731 4.8 36.0356 8.86875 33.0356C10.0687 32.1543 16.1016 26.4262 17.1187 25.4559C18.4125 24.2231 17.9906 22.7418 17.9531 21.1528C17.8781 18.2137 16.9219 13.7746 19.6266 11.4731C21.6609 9.7434 25.1016 10.0434 27.6 9.37309C31.8656 8.22934 33.7828 7.01059 37.7906 5.33715C40.9875 4.00121 44.5172 6.27465 44.5922 8.61371C44.6484 10.3762 44.2922 10.545 45.7922 11.9746C47.1328 13.2543 48.6937 14.2153 49.3969 15.9543C50.5312 18.7621 47.8266 20.1825 48.1875 22.5356C48.4172 24.0262 49.2703 24.6356 49.125 26.3278C48.9937 27.884 48.4734 29.4309 48.2906 30.9918C47.9437 33.945 47.1609 35.2293 44.4703 37.109C41.5312 39.1621 38.625 41.2481 35.3344 42.8231C28.1859 46.2543 11.1281 56.9371 8.02969 56.0559",
						fill: "#DDDDDD"
					}), o.a.createElement("path", {
						d: "M49.9218 18.9918C50.3624 17.9934 50.3858 16.6528 49.8937 15.6215C48.9515 13.4699 46.8937 12.4246 45.6468 10.9809C45.3186 10.5965 45.1921 10.3762 45.1874 9.93557C45.1687 9.45275 45.2296 8.93713 45.1546 8.29963C44.9765 6.97307 44.0858 5.98869 43.1062 5.32775C42.103 4.66682 40.9077 4.2965 39.6749 4.30119C39.0655 4.31994 38.4374 4.39963 37.8562 4.61525C37.2608 4.81682 36.8015 5.03244 36.2671 5.24807C32.1187 7.05744 28.1437 8.92307 23.353 9.06369C22.139 9.23713 20.8171 9.44338 19.5468 10.2074C18.2718 10.9668 17.3343 12.2981 16.9265 13.6668C16.0968 16.4324 16.5421 19.0574 16.4765 21.4574C16.4765 22.1465 16.5655 22.9246 16.5046 23.4637C16.3874 24.0496 16.4296 24.0684 15.478 25.0012C13.9827 26.5153 12.2952 28.2871 10.5655 30.1106C9.68897 31.0106 8.8499 31.9715 7.94053 32.7449C6.99834 33.5887 6.06084 34.4278 5.15615 35.2387C3.3749 36.8746 1.65459 38.3324 0.220215 39.5137C2.03896 38.5903 3.92803 37.4653 5.81709 36.1856C6.75459 35.5481 7.72021 34.8918 8.70459 34.2215L9.4499 33.7106C9.73584 33.5043 9.97022 33.3121 10.214 33.1153C10.6827 32.7215 11.1608 32.3231 11.639 31.9199C13.5327 30.2981 15.4546 28.5824 17.428 26.7918C17.6858 26.5481 17.8827 26.3981 18.2343 26.0231C18.5437 25.6762 18.8108 25.2543 18.989 24.7996C19.3452 23.8762 19.3171 22.9856 19.289 22.2824C19.2374 20.9981 19.1905 19.4559 19.1108 18.1387C19.0593 16.7934 19.0874 15.4715 19.4249 14.3746C19.753 13.2637 20.3952 12.5184 21.389 12.0731C22.4108 11.609 23.789 11.4496 25.2702 11.2809C26.0155 11.1918 26.7983 11.0981 27.6374 10.9106C28.4671 10.7137 29.1608 10.5074 29.9296 10.2637C32.9718 9.3215 35.7562 7.80744 38.4608 6.71525C40.3921 5.82463 43.5468 7.30119 43.139 9.36369C43.139 9.584 43.1296 9.809 43.153 10.1371C43.1718 10.4559 43.2468 10.9059 43.4249 11.2856C43.7905 12.0496 44.2077 12.4199 44.5593 12.7809C45.2765 13.4887 46.0265 14.0653 46.6452 14.6184C47.8921 15.7059 48.5718 16.8871 48.2015 17.984C48.0421 18.6074 47.5312 19.3715 47.128 20.459C46.9312 21.0121 46.7999 21.6918 46.8515 22.3668C46.8983 23.0465 47.0765 23.5949 47.2827 24.1106C47.7327 25.1418 47.9108 25.5074 47.864 26.2059C47.8077 27.0074 47.6249 27.8699 47.4374 28.7934C47.3437 29.2528 47.2499 29.7309 47.1749 30.2278L47.0015 31.6012C46.8796 32.4449 46.6733 33.1762 46.3124 33.8043C45.5905 35.0746 44.0812 36.0496 42.6046 37.1418C39.6796 39.3121 36.8483 41.2246 33.7546 42.7762C30.314 44.6699 24.2999 48.2324 18.914 51.209C16.2233 52.6949 13.6827 54.0215 11.714 54.8981C10.7296 55.334 9.89053 55.6574 9.25303 55.8356C8.61553 56.0278 8.20772 56.0043 8.05303 56.0371C9.01865 56.4168 11.953 55.4981 15.0702 54.1574C18.2202 52.8215 21.6937 51.0918 24.1874 49.7465C26.8077 48.3262 29.5124 46.859 32.3202 45.3403C33.7358 44.5668 35.1187 43.8778 36.6421 43.1137C38.1421 42.3309 39.5999 41.4262 41.0343 40.4606C42.4733 39.4903 43.8749 38.4871 45.3327 37.4324C46.064 36.884 46.8046 36.2746 47.4327 35.4824C48.0702 34.6996 48.4968 33.7153 48.7124 32.759C48.9515 31.784 48.9796 30.8465 49.153 29.9887C49.3171 29.0981 49.5468 28.1793 49.6874 27.1996C49.753 26.7168 49.828 26.2106 49.7812 25.634C49.7436 25.0715 49.5655 24.5137 49.364 24.0543C48.9562 23.1496 48.6655 22.3903 48.8296 21.6121C48.9655 20.8153 49.5233 20.0043 49.9218 18.9918Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M34.6078 9.73877C34.4907 9.24189 34.3735 8.76377 34.275 8.35596L34.1203 8.54346C34.1016 8.49658 34.0828 8.44971 34.0641 8.40752C34.0735 8.46377 34.0875 8.52002 34.0969 8.57627L24.0516 21.0356C24.0094 21.0544 23.9719 21.0731 23.9297 21.0919C23.4094 21.2794 22.1578 21.7294 20.7563 22.4278C19.2516 23.1591 17.6157 24.1528 16.5 25.0013C14.1282 26.745 11.8453 28.9669 9.82972 31.6997C9.33284 32.3935 8.85003 33.1716 8.62034 34.095C8.40003 35.0044 8.45628 36.0591 9.04222 36.9263C9.63284 37.7935 10.711 38.1966 11.6813 38.2013C12.6703 38.2247 13.6313 37.995 14.5547 37.6763C18.1828 36.3685 21.8485 34.4278 25.3219 31.7466C27.0469 30.3966 28.7438 28.8825 30.3188 27.1481C31.9032 25.4278 33.4407 23.4122 34.1391 20.8153C34.2235 20.4919 34.2938 20.0841 34.3219 19.6106C34.3547 19.1466 34.2844 18.5278 34.2844 18.1997C34.2938 18.0169 34.3032 17.9513 34.3969 17.7872C34.4907 17.6278 34.6735 17.431 34.8844 17.1638C35.3485 16.5778 35.55 15.8653 35.625 15.195C35.7844 13.1419 35.1985 11.2528 34.6078 9.73877Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M40.0686 7.51684C39.2529 7.39965 38.6342 8.30903 37.1904 8.0184C36.9982 7.98559 36.8107 8.5809 36.9514 9.22778C37.5561 9.35903 38.2123 9.2559 38.7936 8.94653C39.1311 8.76371 39.5014 8.61371 39.8295 8.3184C40.017 8.14028 40.5654 8.12621 40.6029 7.89653C40.5561 7.82153 40.2514 7.52621 40.0686 7.51684Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M43.4483 13.8075C43.378 13.7747 43.0592 13.6481 42.9701 13.6903C42.5483 13.7793 42.5905 14.7028 41.5451 14.2575C41.4186 14.2012 41.4373 14.7028 41.6389 15.3075C42.0795 15.5278 42.5389 15.5184 42.8858 15.1668C43.0826 14.9653 43.2748 14.7356 43.303 14.4028C43.317 14.2153 43.5842 14.0043 43.4483 13.8075Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M24.0326 6.56059C26.4186 7.62465 28.6451 8.91371 30.4592 11.0606C32.067 12.9637 33.2623 16.6856 29.7701 16.7184C27.9654 16.7371 26.1608 14.745 24.342 14.3746C20.817 13.6621 17.3576 13.4325 13.8889 12.2559C12.2951 11.7168 11.3248 11.7028 10.8514 9.83715C10.0686 6.75277 13.2889 5.4309 15.5483 5.4309C18.8483 5.4309 20.9436 5.18246 24.0326 6.56059Z",
						fill: "#DDDDDD"
					}), o.a.createElement("path", {
						d: "M32.8922 12.1715C32.7 11.6278 32.3062 10.9059 31.6265 10.1887C30.9937 9.53244 30.1781 8.90432 29.2687 8.39338C27.4453 7.35744 25.3406 6.93088 23.8547 6.95432C25.1531 7.76525 26.5781 8.68869 27.8578 9.89807C28.4953 10.4934 29.1094 11.1824 29.6297 11.9137C30.0937 12.5887 30.4969 13.4559 30.6187 14.2153C30.6844 14.5903 30.6562 14.9371 30.5859 15.0449C30.5109 15.1434 30.5437 15.1059 30.3094 15.1903C30.2015 15.2231 30.0375 15.2371 29.8453 15.2371C29.6672 15.2512 29.5922 15.2184 29.4234 15.1856C29.1094 15.0965 28.7015 14.8996 28.2609 14.6418C27.3515 14.1449 26.3953 13.3434 24.7781 12.9215C23.5172 12.659 22.3828 12.5043 21.1969 12.3403C19.8609 12.1574 18.5156 11.9793 17.1937 11.7309C15.839 11.4918 14.6484 11.1403 13.2328 10.7418C12.5672 10.5403 12.4125 10.4793 12.1969 10.1793C11.9812 9.83244 11.7843 9.21369 11.7797 8.7965C11.7234 7.92932 12.4359 7.08088 13.4859 6.56525C14.0812 6.26057 14.939 6.02619 16.0734 6.0215C17.2172 5.96994 18.4547 5.89494 19.589 5.92775C21.8625 5.9465 23.7234 6.72463 24.014 6.57932C23.7094 6.37775 22.7672 5.74025 21.4875 5.29963C20.2172 4.84494 18.6703 4.65744 17.5969 4.64338C17.0297 4.62932 16.4578 4.61525 15.8765 4.60119C15.3093 4.58244 14.564 4.61525 13.9219 4.76994C12.6328 5.06994 11.1609 5.69807 10.3453 7.20744C9.95622 7.95275 9.87185 8.84807 10.0312 9.62619C10.1859 10.3809 10.425 11.1871 11.1703 11.8481C11.9297 12.4621 12.7172 12.5653 13.364 12.7762C14.0297 12.9778 14.775 13.2074 15.5015 13.3715C16.9734 13.7278 18.5015 13.9809 20.0672 14.2387C20.8453 14.3746 21.6328 14.5106 22.4344 14.6465C23.189 14.8059 24.1312 14.9418 24.7219 15.1949C25.3969 15.4903 26.0672 15.9731 26.8125 16.4653C27.5625 16.9387 28.3875 17.5387 29.639 17.6653C30.2109 17.6934 30.764 17.6887 31.425 17.4449C32.0719 17.2481 32.7609 16.6106 33.0234 15.8934C33.5578 14.4543 33.225 13.259 32.8922 12.1715Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M30.1455 13.5731C30.1361 13.5638 30.1267 13.5591 30.1174 13.5544C30.0283 13.4091 29.7142 13.02 29.3439 12.6497C28.9877 11.7544 28.4908 10.6716 27.5299 9.6544C27.0096 9.11533 26.3533 8.62315 25.5564 8.30908C25.158 8.1544 24.7267 8.0419 24.2768 8.00908C24.1689 7.99971 24.0471 7.99033 23.9205 7.99502C23.733 7.99971 23.5455 8.02315 23.3721 8.07002C23.0158 8.15908 22.7158 8.34658 22.5096 8.6044L22.4533 8.68877C22.2377 8.98877 22.1439 9.39658 22.2705 9.75283C22.3783 10.1044 22.6783 10.4138 23.0393 10.6481C23.3955 10.8731 23.4471 10.8778 23.7096 11.0325C23.9346 11.1544 24.1689 11.2575 24.3986 11.3466C25.3267 11.6981 26.1939 11.8435 26.9814 12.0638C27.4314 12.181 28.1955 12.5278 28.8377 12.8981C29.4846 13.2638 30.0096 13.6341 30.1408 13.5872C30.1361 13.5825 30.1267 13.5685 30.1221 13.5591L30.1455 13.5731Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M24.3189 12.6496C19.4111 10.8918 12.6892 11.0277 10.2611 11.5996C7.83297 12.1715 5.81266 13.9433 6.15954 15.9262C6.3611 17.0605 6.91422 18.0543 7.45797 19.0105C5.97204 20.6887 5.85485 23.8058 7.20485 25.6433C6.63766 26.4918 5.99079 27.6402 6.22516 28.5449C7.04547 31.6949 10.6361 32.984 14.5783 33.748C18.8252 34.5683 25.533 34.4324 22.4252 28.8496C24.8158 29.7074 26.3345 29.7027 28.4673 28.3105C30.2814 27.1246 29.6111 24.3496 28.7533 23.3793C29.8408 23.0371 31.8189 22.6105 32.3533 21.4246C34.3548 16.9762 26.372 13.3808 24.3189 12.6496Z",
						fill: "#DDDDDD"
					}), o.a.createElement("path", {
						d: "M32.6954 18.0496C32.1798 17.1262 31.4673 16.4043 30.7454 15.7902C27.7689 13.4184 24.6986 12.5605 24.3283 12.6262C24.872 12.8934 26.5126 13.7559 28.2001 15.0027C29.8923 16.2074 31.5705 17.998 31.8142 19.3949C31.8939 19.8074 31.8845 20.2152 31.7626 20.6184C31.6126 21.0871 31.547 21.2887 31.2048 21.5277C31.0408 21.6449 30.8392 21.7574 30.6236 21.8605L30.2814 22.0059L29.8033 22.1746C29.3767 22.3059 28.9455 22.4371 28.5142 22.573L28.4814 22.5824C28.1064 22.3152 27.7033 22.0527 27.3658 21.8934C24.1455 20.2902 19.683 19.5684 13.8611 18.0074C13.1298 17.8012 10.9783 18.0965 9.91889 18.7387C12.2908 19.1465 15.7595 19.6949 19.2986 20.4262C21.3283 20.8293 23.522 21.4434 25.4767 21.9449C26.0392 22.0668 26.9767 22.4465 27.8064 22.7887L27.5439 22.873L27.3986 23.0137C27.8767 23.6746 28.5236 24.4902 28.6361 25.0246C28.7392 25.3996 28.7908 25.7793 28.772 26.1449C28.7533 26.5105 28.6689 26.848 28.5095 27.1199C28.322 27.4152 28.1767 27.5652 27.7361 27.8277C26.972 28.3059 26.1798 28.6434 25.3314 28.6809C25.0314 28.723 24.1736 28.6293 23.3767 28.3715C22.5892 28.1559 21.6986 27.8137 21.0611 27.6637C21.1033 27.748 21.1408 27.8277 21.183 27.9074C19.1767 27.1387 16.4955 26.9887 13.2517 25.5262C12.8251 25.3293 11.4236 25.5543 10.7298 26.1496C12.1361 26.6652 14.2267 27.2934 16.4345 27.7246C17.6955 27.9777 19.083 28.2965 20.3345 28.4465C20.6439 28.4699 21.1267 28.6105 21.5908 28.7465C21.7642 29.1027 21.933 29.4637 22.0923 29.8527C22.2564 30.2371 22.4439 30.6262 22.4955 30.9824C22.5142 31.3012 22.5611 31.4137 22.5095 31.6059C22.4439 32.2996 21.8626 32.8527 20.972 33.1293C19.2189 33.6871 17.0626 33.5699 15.0001 33.2277C12.9142 32.8434 10.7064 32.3184 8.91108 31.1324C8.02983 30.5371 7.31264 29.7355 6.9892 28.7559L6.8767 28.3855C6.85795 28.2918 6.84858 28.2168 6.85327 28.1184C6.86264 27.9262 6.9142 27.7012 7.00795 27.4668C7.09702 27.2324 7.21889 26.9934 7.35951 26.759C7.5517 26.4262 7.84702 26.009 8.09077 25.6387C7.87045 25.2965 7.6642 24.9543 7.49076 24.6168C7.37826 24.3637 7.32201 24.1668 7.25639 23.923C7.14389 23.4496 7.09702 22.9434 7.12983 22.4324C7.15795 21.9215 7.26577 21.4059 7.44389 20.9324C7.53295 20.6934 7.64545 20.4684 7.77202 20.2574C7.94545 19.9855 8.34389 19.4934 8.67202 19.109C8.4517 18.6824 8.23139 18.2465 8.0017 17.8012C7.83764 17.459 7.76264 17.2668 7.65952 16.9902C7.48139 16.5121 7.33139 15.9074 7.35014 15.5512C7.3642 14.9043 8.01108 14.1637 8.96733 13.6996C9.52983 13.4324 10.2751 13.0668 11.4564 12.8559C12.6564 12.6262 14.1376 12.434 15.6705 12.3027C18.7501 12.0168 22.0595 12.0215 24.4642 12.2324C21.4595 10.9152 17.6955 10.1934 13.5048 10.1465C12.4455 10.1465 11.3814 10.1746 10.1955 10.3762C8.99077 10.5965 7.7767 11.0559 6.69389 11.8996C6.15952 12.3262 5.64389 12.8512 5.25952 13.5496C4.87514 14.2387 4.65952 15.134 4.7767 16.0105C4.87514 16.7793 5.09545 17.4215 5.35795 18.0449C5.47514 18.3262 5.66264 18.7059 5.74233 18.8652C5.74702 18.8793 5.7517 18.8934 5.74702 18.9074C5.73295 18.9215 5.73295 18.9074 5.6767 18.9965C5.4892 19.3246 5.33452 19.6621 5.20795 20.0043C4.95483 20.6934 4.81889 21.4105 4.7767 22.1371C4.7392 22.8637 4.80014 23.6043 4.98295 24.3449C5.0767 24.7152 5.19858 25.0855 5.36264 25.4512C5.4142 25.573 5.42827 25.6012 5.43295 25.6059C5.43295 25.6059 5.43295 25.6105 5.40952 25.6434L5.24077 25.9668C5.02045 26.4121 4.80952 26.9043 4.70639 27.5418C4.65483 27.8652 4.63608 28.2262 4.7017 28.6246L4.76264 28.9199L4.82358 29.1121L4.95014 29.4918C5.13295 29.9934 5.38608 30.4715 5.69077 30.9168C6.9517 32.7027 8.80327 33.584 10.4861 34.1746C11.8642 34.6387 13.2376 34.948 14.6439 35.1824C16.083 35.4121 17.5361 35.534 19.0548 35.4355C19.8189 35.3652 20.583 35.2902 21.3939 35.023C22.1767 34.7605 23.0673 34.4043 23.7517 33.5184C24.0611 33.1059 24.3517 32.5621 24.3986 32.0512C24.4314 31.798 24.5064 31.5168 24.4642 31.2918L24.4314 30.9496C24.4173 30.9262 24.4173 30.9121 24.4126 30.8934C24.3751 30.7668 24.3001 30.6262 24.2064 30.4715C24.2439 30.448 24.3705 30.4996 24.4642 30.4996L24.6329 30.5137L25.1579 30.5184C26.3298 30.509 27.4501 30.0824 28.3173 29.5527C28.5423 29.4215 28.7486 29.2809 28.9548 29.1402C29.1845 28.9715 29.4517 28.7605 29.6486 28.5168C30.0658 28.034 30.3095 27.4387 30.4126 26.8762C30.5158 26.309 30.4923 25.7605 30.3986 25.2496C30.347 24.9918 30.2861 24.7434 30.2064 24.5043C30.1548 24.373 30.1126 24.298 30.0564 24.1902C30.0001 24.0965 29.9392 23.998 29.8548 23.8902C29.8314 23.8574 29.7705 23.8105 29.7798 23.7871L29.897 23.7402C29.9814 23.7074 30.0704 23.6746 30.1595 23.6418C30.3986 23.5434 30.6517 23.4402 30.9142 23.3371C31.322 23.1543 31.7533 22.9434 32.1658 22.5965C32.583 22.2871 32.9626 21.673 33.0423 21.1809C33.3658 20.1777 33.2064 18.973 32.6954 18.0496ZM5.43295 25.6246C5.42827 25.6293 5.43295 25.6246 5.43295 25.6246C5.43295 25.6199 5.43295 25.6246 5.43295 25.6246Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M33.2201 4.75119C28.4342 1.46057 23.4092 7.41369 28.4342 11.0746C32.5685 14.084 38.3342 8.26213 33.2201 4.75119Z",
						fill: "#DDDDDD"
					}), o.a.createElement("path", {
						d: "M35.3723 7.17935C35.3114 6.85122 35.1426 6.56997 34.988 6.2981C34.3223 5.22466 33.3473 4.73247 33.2255 4.73716C33.3286 4.90122 33.7692 5.27153 34.102 5.80591C34.2661 6.0731 34.4583 6.34028 34.538 6.64028C34.6739 6.91685 34.7255 7.19341 34.763 7.43247C34.9551 8.41685 34.5708 9.52778 33.7083 10.3622C32.888 11.22 31.552 11.745 30.1786 11.5153C28.8473 11.2481 27.4973 10.1372 26.9114 8.70278C26.6723 7.96685 26.7051 7.14185 27.0567 6.43872C27.4036 5.7356 28.0505 5.1731 28.8005 4.91528C29.1661 4.77466 29.827 4.46997 30.6895 4.36216C31.5614 4.20747 32.5458 4.46528 33.338 4.5731C32.7098 4.0856 31.9223 3.50903 30.8676 3.35435C29.8411 3.16216 28.5989 3.3356 27.5536 4.03403C26.5176 4.70903 25.6598 5.93247 25.5989 7.36216C25.5239 8.79653 26.2786 10.1512 27.2583 11.0325C28.3036 12.0872 30.0708 12.795 31.688 12.4715C33.2723 12.1387 34.6551 11.07 35.1708 9.69653C35.3301 9.32153 35.5083 8.76372 35.4989 8.1356C35.513 7.81685 35.4848 7.49341 35.3723 7.17935Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.8668 29.7449C21.5199 29.309 21.0652 29.173 20.6902 29.1168C19.1527 28.9949 18.1402 29.7824 17.2121 30.1855C16.6777 30.448 15.6512 30.7527 14.7137 30.8887C14.7137 30.8887 14.7137 30.8887 14.709 30.8887C14.4934 30.823 14.2824 30.7621 14.0715 30.6871C13.4668 30.4949 11.8637 30.3215 10.584 30.2605L10.0496 30.0449C10.1996 30.1199 10.3496 30.1855 10.4996 30.2559C10.3074 30.2465 10.1199 30.2418 9.95117 30.2371C10.9965 31.0152 12.5059 31.7559 14.2824 32.1684C16.0777 32.5855 18.0277 32.7027 20.0902 32.5246C20.4137 32.4824 20.7793 32.4074 21.1449 32.2105C21.5246 32.0137 21.8621 31.6574 22.0309 31.2355C22.2184 30.823 22.2184 30.1762 21.8668 29.7449Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M28.0125 25.6528C27.9375 25.2403 27.7641 24.9122 27.5578 24.631C27.1594 24.0591 26.5219 23.67 26.0062 23.4497C25.3781 23.1778 24.8719 23.0044 24.3422 22.7138C23.7937 22.4091 23.2359 22.095 22.6828 21.7856C21.5297 21.195 20.1281 20.5622 18.7125 21.1481C18.3516 21.3638 17.9109 21.6591 17.6484 22.2544C17.3812 22.845 17.5406 23.5435 17.8266 24.031C18.4125 25.0388 19.3641 25.4278 19.4859 25.3528C19.4719 25.3435 19.4437 25.32 19.425 25.3013C19.4484 25.3106 19.4719 25.3294 19.4906 25.3435C19.6687 25.4278 19.8469 25.4794 20.025 25.5544C19.8047 25.5497 19.5937 25.545 19.4016 25.5403C20.5875 26.3419 22.3312 26.9841 24.2578 27.331C24.75 27.4388 25.2469 27.4716 25.5984 27.6122C25.7156 27.6497 25.8469 27.6966 26.025 27.7388C26.1891 27.781 26.4984 27.8044 26.7281 27.7435C26.9719 27.6872 27.2016 27.5513 27.3844 27.3919C27.5437 27.2372 27.6469 27.1247 27.7641 26.9372C28.0172 26.5622 28.0969 26.056 28.0125 25.6528Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M30.1263 17.2106C29.1185 16.3528 28.0966 15.6825 26.9622 15.0497C25.6825 14.3419 24.2716 13.7137 22.8138 13.259C22.1247 13.0669 21.2622 12.7012 20.2825 13.0715C19.3544 13.4512 18.9419 14.4356 18.9794 15.209C18.9935 15.6544 19.0966 16.3059 19.5747 16.845C20.0528 17.3606 20.7138 17.6278 21.3091 17.8247C22.5231 18.1762 23.5544 18.3309 23.695 18.2794C23.6856 18.27 23.6575 18.2606 23.6435 18.2512C23.6622 18.2559 23.681 18.2606 23.6997 18.2653C23.8403 18.3122 24.0278 18.3872 24.2388 18.4856C24.0231 18.4669 23.8169 18.4575 23.6341 18.4715C24.3091 18.8325 25.0825 19.3575 25.9638 19.8309C26.8731 20.2856 27.8013 20.8481 29.1981 20.9465C29.5497 20.9372 29.9903 20.9231 30.4075 20.5997C30.806 20.3137 31.0731 19.8262 31.106 19.3669C31.195 18.434 30.6419 17.6606 30.1263 17.2106Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M15.497 13.2215C14.0298 13.1512 12.3095 13.9621 9.72199 13.4887C9.43136 13.4231 8.47043 14.0934 8.47511 14.8575C9.35636 14.8528 10.8189 14.8996 12.272 14.6325C13.1111 14.4871 14.0439 14.3512 14.8501 14.0418C15.3048 13.8684 16.5282 13.7746 16.5704 13.5215C16.4486 13.4653 15.8392 13.2215 15.497 13.2215Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M19.9497 7.79343C19.8747 8.01374 18.8388 7.97624 18.431 8.12155C17.7231 8.3653 16.9122 8.44499 16.1856 8.54343C14.9106 8.71686 13.6731 8.60905 12.8247 8.42624C12.9747 7.70905 13.7528 7.14655 14.0153 7.23561C16.2325 7.89655 17.7606 7.15124 19.045 7.36218C19.3497 7.38561 19.8606 7.71374 19.9497 7.79343Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M31.1908 5.84342C31.158 6.0778 30.7127 6.07311 30.5767 6.23717C30.333 6.51374 30.108 6.64499 29.9111 6.81374C29.5877 7.09499 29.1377 7.24499 28.5846 7.24499C28.2096 6.71999 28.1674 6.12936 28.3502 6.11999C29.0439 6.09655 29.4096 5.9278 29.7658 5.7403C30.1127 5.55749 30.4642 5.3653 30.7736 5.45436C30.9189 5.46374 31.1533 5.77311 31.1908 5.84342Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M10.1252 21.0028C10.0267 20.9981 9.81111 20.7778 9.7408 20.7778C9.39392 20.7122 9.2158 21.5137 8.30642 20.895C8.2408 20.8622 8.19392 20.9653 8.17049 21.1762C8.1658 21.3637 8.15642 21.7106 8.40486 21.9122C8.66736 22.2215 9.0283 22.3106 9.34705 22.1043C9.52517 21.9872 9.74549 21.8559 9.87205 21.5512C9.91892 21.3965 10.2892 21.2137 10.1252 21.0028Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M47.9906 15.8888L46.3922 17.4356C46.3594 16.8169 46.2422 16.2544 46.0547 15.8325C46.0688 16.3153 46.0172 16.8216 45.9047 17.3888C45.8625 17.6044 45.8016 17.8388 45.7406 18.0778C45.5906 18.2278 45.45 18.3966 45.3 18.5513C45.2625 18.5372 45.2109 18.5231 45.0844 18.495C44.6437 18.4247 44.1188 18.3403 43.4906 18.2091C43.5141 18.8513 43.5422 19.5122 43.5703 20.2247C43.5516 20.3138 43.5656 20.4497 43.5141 20.4216L43.3922 20.2997L43.3641 20.2763L43.0734 20.131C42.8766 20.0372 42.6656 19.9528 42.4406 19.8778L41.4047 19.531L41.5266 20.6466C41.5922 21.2419 41.6203 21.87 41.5969 22.5169L41.5875 22.7372L41.5828 22.7419L41.5781 22.7466L41.5734 22.7419C41.1094 22.5497 40.6453 22.3575 40.1719 22.1606L39.6844 21.9825L39.4406 21.8935C39.3656 21.8747 39.2438 21.781 39.2766 21.9263L39.2625 22.995C39.2578 23.3513 39.2719 23.7216 39.2953 24.0966L39.375 24.7341C39.3937 24.87 39.3938 24.8794 39.3938 24.8653L39.3984 24.87L39.4078 24.8888L39.4031 24.8935L39.3891 24.8981C39.3703 24.8981 39.4406 24.9122 39.2016 24.8747C38.6016 24.781 37.9922 24.6919 37.3688 24.5981L37.425 25.7606L37.4203 26.2903L37.4063 26.5575C37.4016 26.595 37.3969 26.6325 37.3922 26.67C37.2562 26.595 37.125 26.5388 36.9937 26.4731C36.8484 26.3325 36.7031 26.5388 36.5672 26.5903C36.4266 26.6606 36.3 26.7778 36.1688 26.8856C35.8688 27.1716 35.8313 27.2325 35.6813 27.4153C35.1891 28.0153 34.7672 28.6528 34.3406 29.131C33.2906 30.1153 32.2594 31.0856 31.2609 32.0231C30.3563 32.806 28.6313 34.1419 27.1547 35.3044C21.6 38.9419 15.6141 42.645 9.58125 46.32C9.075 46.62 8.56875 46.92 8.04844 47.2247L7.26562 47.67C6.81562 47.9044 6.36563 48.1435 5.90625 48.3872C6.04688 48.7669 6.21562 49.2028 6.31875 49.545L6.47812 50.1403L6.81094 51.4106C6.85781 51.5653 6.90937 51.72 6.96094 51.8794C6.82969 51.87 6.675 51.8513 6.55312 51.8513C6.70781 51.945 6.88125 52.0388 7.05 52.1325C7.125 52.3341 7.20469 52.531 7.30312 52.7325C7.41094 52.9528 7.52812 53.1731 7.67812 53.3794C7.75312 53.4919 7.81406 53.581 7.92187 53.6981C8.05312 53.8716 8.20312 53.9981 8.35312 54.1388C8.76562 54.2419 9.34219 54.2606 9.69844 54.0216L10.2422 53.7544C10.2516 53.7591 10.2562 53.7638 10.2656 53.7638C10.6219 53.9278 10.9781 54.0966 11.3484 54.27C11.7234 54.4435 12.15 54.6497 12.4078 54.7341C12.1125 54.2841 11.7328 53.731 11.3625 53.1731L12.0094 52.8356L12.2203 52.7231C13.2 52.9716 14.1422 53.1028 15.0234 53.2856C14.6391 52.8122 14.2406 52.3247 13.8469 51.8372L14.4797 51.4903C14.7609 51.57 15.0422 51.645 15.3047 51.7153L15.8625 51.8606C15.9281 51.87 16.1109 51.945 16.0828 51.8935L15.9891 51.7341L15.6141 51.1013L15.5063 50.9231C15.9563 50.67 16.4062 50.4169 16.8609 50.1591C16.8891 50.1591 16.9125 50.1638 16.9406 50.1638L17.5828 50.1966L17.3531 49.8825C17.6953 49.6903 18.0328 49.4981 18.3703 49.306C18.3937 49.306 18.4406 49.3106 18.45 49.306C18.4406 49.3013 18.4172 49.2872 18.4078 49.2825C19.2656 48.7997 20.1328 48.3122 20.9859 47.8294C24.9234 45.5747 28.7719 43.3106 32.3859 41.1122C35.0906 39.4388 40.0406 36.6028 44.2219 33.7435C44.7375 33.3544 45.225 32.9091 45.5297 32.3138C45.8859 31.7325 45.6984 30.8841 45.2672 30.481C44.8734 30.0591 44.6672 29.656 44.7703 29.1872C44.85 28.7278 45.0938 28.3106 45.2906 27.9169C45.7219 27.1481 45.9422 26.3091 45.7078 25.756C45.5156 25.2216 45.3281 24.9263 45.2719 24.8185C45.2766 24.8513 45.2906 24.8888 45.3 24.9263C45.2859 24.8935 45.2719 24.8606 45.2578 24.8231C45.075 24.3122 44.9906 23.7919 44.9391 23.2669C44.9625 23.2903 44.9859 23.3091 45.0094 23.3325C45.1125 23.8528 45.2484 24.345 45.4594 24.7528C45.0375 23.3747 45 21.72 45.7547 19.8591C45.8813 19.9294 46.0078 20.0044 46.1203 20.0653C46.2188 19.9388 46.2375 19.5591 46.2844 19.3153L46.3828 18.5747C46.4109 18.5278 46.4297 18.481 46.4578 18.4341L47.9906 15.8888ZM40.3781 23.6044C40.3875 23.5153 40.3547 23.37 40.4859 23.4685L40.8937 23.6606C40.7344 23.8388 40.5563 24.0122 40.3922 24.1856C40.3828 24.0591 40.3781 23.9513 40.3781 23.8903V23.6044ZM38.7984 25.8356C38.6719 25.9622 38.5453 26.0888 38.4188 26.2153C38.4234 26.0419 38.4234 25.8872 38.4141 25.7888C38.5406 25.7935 38.6578 25.8122 38.7984 25.8356ZM36.6984 27.7153C36.7922 27.556 36.8953 27.5466 37.0172 27.5935C36.6797 27.9216 36.3375 28.245 35.9906 28.5685C36.2344 28.2544 36.4734 27.945 36.6984 27.7153Z",
						fill: "#A5A4A4"
					}), o.a.createElement("path", {
						d: "M7.75766 37.4887C6.37954 37.8028 5.09985 39.0871 2.67641 39.6074C2.36703 39.6731 1.93578 40.5074 1.97797 41.2574C2.96703 41.0512 4.17641 40.4699 5.33891 39.7621C6.00454 39.3496 6.78266 38.9512 7.41079 38.4403C7.76704 38.1496 8.84516 37.7606 8.82641 37.5168C8.69516 37.4887 8.06704 37.3949 7.75766 37.4887Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M53.8362 38.1028C52.9362 37.7841 51.9659 37.3997 51.0378 37.2028C50.5081 37.0997 49.3315 36.4341 49.144 36.5981C49.219 36.7247 49.6503 37.3153 49.9831 37.5216C51.3425 38.4825 53.5269 38.6419 55.7112 40.4794C55.9831 40.7091 57.0237 40.6528 57.7175 40.2591C56.8597 39.4528 55.4019 38.6606 53.8362 38.1028Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M33.1734 7.69961C33.1734 7.70899 33.1687 7.72774 33.1687 7.73711C33.164 7.72774 33.1687 7.71367 33.164 7.7043C33.1405 7.64805 33.0984 7.60586 33.0468 7.56836C33.1405 7.5543 33.239 7.5543 33.3609 7.61524C33.1499 7.08555 32.6015 7.03399 32.2171 6.98711C31.7952 6.96367 31.364 7.02461 30.9234 7.15117C30.4827 7.28711 30.0374 7.48867 29.6015 7.85899C29.3906 8.04649 29.1609 8.2668 29.0109 8.67461C28.8468 9.0543 28.9031 9.56055 29.114 9.92149C29.5781 10.7137 30.5812 10.9293 31.2093 10.7559C31.8749 10.6152 32.4187 10.2637 32.7796 9.81836C32.9812 9.57461 33.3749 9.1293 33.4593 8.6043C33.5624 8.07461 33.2812 7.67617 33.1734 7.69961Z",
						fill: "#A5A4A4"
					})),
					GENTLEMAN_SCHOLAR: e => o.a.createElement("svg", {
						className: e.className,
						width: "60",
						height: "60",
						viewBox: "0 0 60 60",
						fill: "none",
						xmlns: "http://www.w3.org/2000/svg"
					}, o.a.createElement("path", {
						d: "M26.8218 46.0312C17.1843 46.125 11.1046 47.8078 7.07809 49.1203C5.55544 52.2075 4.7997 55.6163 4.87496 59.0578L51.6562 59.1515C51.6562 59.1515 52.6406 53.7937 51.0515 49.3078C46.9406 47.8125 41.2921 45.8906 26.8218 46.0312Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.8268 46.2C23.4962 46.2218 20.171 46.474 16.8752 46.9547C15.2252 47.2016 13.5893 47.5141 11.9674 47.8922C10.3127 48.2812 8.72364 48.75 7.13458 49.275L7.23302 49.1906C6.9012 49.9634 6.61631 50.7554 6.37989 51.5625C6.14282 52.372 5.95652 53.1954 5.82208 54.0281C5.68318 54.8548 5.59395 55.6891 5.5549 56.5265C5.50926 57.3452 5.52336 58.1662 5.59708 58.9828L4.87989 58.3078L51.6565 58.9547L51.4877 59.0953C51.7445 57.4665 51.8356 55.8159 51.7596 54.1687C51.7235 53.3469 51.6358 52.5281 51.4971 51.7172C51.3562 50.9088 51.1525 50.1126 50.8877 49.3359L50.9908 49.4391C49.0776 48.719 47.1186 48.127 45.1268 47.6672C43.1313 47.2251 41.1125 46.8965 39.0799 46.6828C35.0081 46.2873 30.917 46.1261 26.8268 46.2ZM26.8268 45.8625C30.9347 45.7967 35.0431 45.9673 39.1315 46.3734C41.1798 46.5876 43.2143 46.9178 45.2252 47.3625C47.2186 47.8262 49.1791 48.4212 51.094 49.1437L51.169 49.1719L51.1924 49.2469C51.4634 50.0419 51.6719 50.8569 51.8158 51.6844C51.957 52.5092 52.0463 53.3421 52.083 54.1781C52.1605 55.8504 52.0678 57.5262 51.8064 59.1797V59.3156H51.6611L4.87989 59.7844H4.19083L4.15802 59.1047C4.17096 58.2093 4.25088 57.3162 4.39708 56.4328C4.53165 55.5662 4.71792 54.7084 4.95489 53.8641C5.18448 53.0223 5.46628 52.1957 5.79864 51.3891C6.1273 50.5856 6.50456 49.8029 6.92833 49.0453L6.96583 48.9797H7.02677C8.62052 48.4641 10.2283 47.9906 11.8643 47.6016C13.5002 47.2125 15.1455 46.8937 16.8002 46.6641C20.1182 46.164 23.4668 45.8946 26.8221 45.8578L26.8268 45.8625Z",
						fill: "#779FA0"
					}), o.a.createElement("path", {
						d: "M37.3453 48.45L29.0906 58.1625L24.0797 58.0594L22.3125 46.889",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M22.3267 46.875C22.6548 47.0625 23.3063 51.2578 23.7329 52.8469C24.1595 54.4359 24.5251 56.1609 24.8673 57.9234L24.0985 57.2531L28.097 57.2203H29.1095L28.3876 57.5484C31.0689 54.2434 33.996 51.1455 37.1438 48.2812C36.7454 49.9453 35.2688 52.5469 34.4673 53.2594C32.6811 54.886 30.9833 56.6073 29.3813 58.4156L29.2548 58.5562H29.0813C27.286 58.4812 25.6079 58.4672 24.0704 58.4766H23.7423L23.6813 58.1391C23.161 55.2797 22.6501 52.8141 22.411 50.5922C22.2992 49.3564 22.271 48.1145 22.3267 46.875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.3877 19.1531L41.5783 8.57345C41.8502 8.01798 42.0095 7.4142 42.047 6.79689C42.047 5.49376 40.9595 4.45314 39.8767 3.73595C38.1404 2.58214 36.1857 1.79708 34.1337 1.42941C32.0816 1.06173 29.9759 1.11927 27.947 1.59845C26.4986 1.94533 24.9845 2.61564 24.3095 3.9422C23.7845 4.97814 23.8736 6.21095 23.9767 7.36876C24.3142 11.175 24.5392 13.2047 24.8767 17.011",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M24.8438 17.0156C24.5953 16.6547 23.9625 9.79221 23.5969 7.1719C23.503 6.55161 23.47 5.92361 23.4985 5.2969C23.5279 4.60834 23.7329 3.93872 24.0938 3.35159C24.4832 2.77063 25.0034 2.289 25.6125 1.94534C26.2013 1.60383 26.8315 1.33918 27.4875 1.15783C30.0209 0.452544 32.692 0.402542 35.25 1.01252C36.3258 1.26622 37.3709 1.63555 38.3672 2.11409C38.8606 2.34953 39.3396 2.61406 39.8016 2.90627C40.2794 3.1923 40.7297 3.52182 41.1469 3.89065C41.5912 4.27667 41.9654 4.73656 42.2531 5.25002C42.5613 5.80255 42.7014 6.43304 42.6563 7.06409C42.5841 7.62103 42.4259 8.16341 42.1875 8.6719L41.625 10.0172C40.1391 13.5516 38.7375 16.7203 37.5469 19.2235C38.1019 16.2629 38.9434 13.3634 40.0594 10.5656L41.1141 8.2594C41.279 7.91909 41.4078 7.56246 41.4985 7.19534C41.5716 6.8653 41.5619 6.52229 41.4703 6.1969C41.2295 5.51377 40.7985 4.91366 40.2281 4.46721C39.6422 3.99428 39.0146 3.57539 38.3531 3.21565C35.2996 1.53925 31.7379 1.03901 28.3406 1.8094C27.7484 1.92609 27.1702 2.10522 26.6156 2.34377C26.0944 2.56922 25.618 2.8868 25.2094 3.28127C24.8194 3.66846 24.5422 4.15463 24.4078 4.68752C24.1453 5.72346 24.3141 6.83909 24.4078 7.92659C24.5016 9.01408 24.5953 10.0594 24.6703 11.0766C24.8438 13.0031 24.8672 16.3547 24.8438 17.0156Z",
						fill: "#779FA0"
					}), o.a.createElement("path", {
						d: "M23.6438 13.125C28.5423 11.7937 33.4876 12.5906 38.3391 14.3156C39.3057 14.6694 40.2202 15.1519 41.0579 15.75C41.4565 16.0187 41.794 16.3684 42.0484 16.7763C42.3028 17.1841 42.4684 17.641 42.5345 18.1172C42.6423 19.3406 41.8407 20.5125 40.8001 21.1641C39.7173 21.7582 38.5134 22.098 37.2798 22.1578C32.5411 22.6336 27.7596 21.888 23.3907 19.9922C22.6754 19.7171 22.0139 19.3189 21.436 18.8156C21.1494 18.5615 20.9219 18.2477 20.7696 17.8962C20.6174 17.5447 20.544 17.1641 20.5548 16.7812C20.6626 15.4547 22.0313 14.0812 23.6251 13.4344C26.7188 12.1875 30.7266 12.45 34.6079 13.3547",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M34.6079 13.364C34.336 13.425 31.9641 12.8531 29.175 12.8062C27.7709 12.7671 26.3682 12.9248 25.0079 13.275C24.4065 13.4355 23.8236 13.6586 23.2688 13.9406C22.832 14.1747 22.4298 14.4681 22.0735 14.8125C21.5368 15.2914 21.1591 15.9226 20.9907 16.6218C20.9528 16.9594 20.9979 17.3011 21.122 17.6172C21.2462 17.9333 21.4457 18.2144 21.7032 18.4359C22.292 18.9367 22.9692 19.323 23.7 19.575C24.4641 19.889 25.2422 20.1656 26.0438 20.414C29.18 21.386 32.4632 21.797 35.7422 21.6281C37.0825 21.6076 38.4124 21.3896 39.6891 20.9812C40.2506 20.7759 40.7563 20.442 41.1657 20.0062C41.5484 19.6064 41.796 19.0965 41.8735 18.5484C41.9184 18.0212 41.7683 17.4958 41.4516 17.0718C41.0947 16.6059 40.6445 16.2195 40.1297 15.9375C39.6028 15.6022 39.0494 15.3106 38.475 15.0656C37.9172 14.8406 37.2844 14.625 36.6938 14.4281C34.4463 13.6571 32.1137 13.1613 29.7469 12.9515C27.72 12.7851 25.6796 12.9162 23.6907 13.3406C24.5933 12.9318 25.5358 12.6176 26.5032 12.4031C27.6451 12.1599 28.809 12.0342 29.9766 12.0281C31.8866 12.0067 33.7894 12.2641 35.625 12.7921C36.7454 13.1484 37.8 13.5328 38.8735 13.9734C39.3991 14.2087 39.9081 14.4797 40.3969 14.7843C40.8959 15.0794 41.3597 15.4301 41.7797 15.8296C42.2016 16.2524 42.5221 16.7652 42.7172 17.3296C42.9084 17.9025 42.9247 18.5193 42.7641 19.1015C42.5971 19.6373 42.3233 20.1337 41.9591 20.5607C41.595 20.9877 41.148 21.3364 40.6453 21.5859C39.7114 22.0359 38.7022 22.3093 37.6688 22.3921C36.6797 22.4906 35.7094 22.5609 34.7485 22.5609C32.8894 22.5793 31.0328 22.4224 29.2032 22.0921C27.4876 21.7763 25.8041 21.3057 24.1735 20.6859C23.3796 20.4031 22.6125 20.0502 21.8813 19.6312C21.1123 19.1911 20.5318 18.4838 20.25 17.6437C20.1266 17.207 20.1266 16.7445 20.25 16.3078C20.3601 15.8974 20.5427 15.5101 20.7891 15.164C21.2544 14.52 21.8461 13.9777 22.5282 13.5703C23.8224 12.8697 25.2509 12.4526 26.7188 12.3468C28.271 12.2203 29.8331 12.3007 31.3641 12.5859C32.4602 12.7789 33.5435 13.0388 34.6079 13.364Z",
						fill: "#779FA0"
					}), o.a.createElement("path", {
						d: "M56.4985 26.9109C55.0923 24.2437 52.6595 23.4656 49.8657 23.0812C49.305 23.0009 48.7362 22.993 48.1735 23.0578C47.8957 22.704 47.5814 22.3803 47.236 22.0921C45.9985 21.0609 44.597 20.5125 43.2188 19.7484C41.8407 18.9843 40.5516 18.4171 39.1032 17.6625C37.1438 16.6453 35.986 16.3921 33.947 16.5046C32.7048 16.575 29.0204 15.6937 27.7595 15.8062C24.586 16.0968 23.4188 16.6828 20.6579 16.6078C18.6001 16.5515 17.4423 17.8359 16.1016 18.2531C15.8907 18.3187 15.5766 18.4968 15.6891 18.5062C15.3971 18.5446 15.1022 18.5572 14.8079 18.5437C13.6407 17.2734 11.1516 16.6265 9.52508 17.2453C8.54846 17.2272 7.59583 17.5486 6.82976 18.1546L6.65164 18.2203C6.23132 18.3359 5.8516 18.5666 5.55516 18.8862C5.25871 19.2058 5.05728 19.6018 4.97351 20.0296C4.69458 20.2075 4.42973 20.4065 4.18133 20.625C3.39244 21.353 2.78392 22.2547 2.40397 23.2587C2.02401 24.2627 1.88305 25.3414 1.99226 26.4093C2.1657 28.3687 2.55008 30.2859 4.25164 31.5656C4.86885 31.9056 5.50772 32.2046 6.16414 32.4609C6.24851 33.3 6.01883 33.9937 6.4032 34.9031C7.0407 36.4125 6.94226 38.0812 8.02976 39.3515C9.11726 40.6218 9.75945 43.0031 10.8704 44.1328C12.1595 45.4359 13.8845 47.414 14.6204 46.0921C13.8704 47.4984 15.7173 47.3812 15.2626 47.7C15.9516 48.0656 21.8485 49.7015 24.136 50.2218C24.2485 50.2453 26.1282 50.925 26.2407 50.9484C28.1626 51.8859 29.6298 52.0218 31.6079 51.3421C32.1891 51.3843 34.8891 51.1781 35.461 51.1968C40.7485 51.3937 44.7938 48.8812 48.6282 44.9671C50.4704 43.0921 52.0173 42.2203 52.6782 39.4265C54.2298 40.1015 56.3204 35.864 57.1923 34.0734C58.1579 32.025 57.6188 29.039 56.4985 26.9109Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M9.10783 23.7094C9.06049 23.9569 8.9751 24.1957 8.8547 24.4172C8.77502 24.6 8.66252 24.8015 8.56408 25.0453L8.24533 25.8515C7.69352 27.3216 7.34957 28.8614 7.22345 30.4265C7.08314 32.2252 7.2159 34.0348 7.6172 35.7937C7.93299 37.2228 8.45903 38.5971 9.17814 39.8719C9.66358 40.7213 10.2404 41.515 10.8985 42.239C11.5961 42.9951 12.3397 43.7074 13.125 44.3719C14.7187 45.7162 16.4901 46.8345 18.3891 47.6953C20.3075 48.56 22.3148 49.2123 24.375 49.6406C26.4099 50.0851 28.4777 50.3626 30.5578 50.4703C34.0117 50.6991 37.4764 50.2353 40.7485 49.1062C42.3028 48.5383 43.7848 47.7894 45.1641 46.875C46.4774 46.0321 47.6403 44.9753 48.6047 43.7484C49.0652 43.1473 49.4804 42.5127 49.8469 41.85C50.2058 41.1958 50.519 40.5176 50.7844 39.8203C51.2763 38.4729 51.5914 37.0674 51.7219 35.639C51.8467 34.2943 51.8326 32.9403 51.6797 31.5984C51.5307 30.3622 51.291 29.1386 50.9625 27.9375C51.6999 29.0182 52.2895 30.1927 52.7156 31.4297C53.2224 32.9016 53.5114 34.4398 53.5735 35.9953C53.6347 37.5006 53.4687 39.0066 53.0813 40.4625C52.8066 41.5436 52.3705 42.5771 51.7875 43.5281C51.3638 44.2064 50.8939 44.8548 50.3813 45.4687C49.8644 46.0677 49.3018 46.6257 48.6985 47.1375C47.544 48.1002 46.2863 48.9319 44.9485 49.6172C42.4584 50.9131 39.762 51.7665 36.9797 52.139C34.3988 52.4797 31.7862 52.5081 29.1985 52.2234C26.7764 51.9784 24.379 51.5315 22.0313 50.8875C19.8181 50.2788 17.6904 49.3937 15.6985 48.2531C13.8246 47.1706 12.1151 45.8257 10.6219 44.2594C10.2516 43.889 9.92345 43.4906 9.58127 43.1062C9.24592 42.7001 8.93296 42.2761 8.64377 41.8359L8.23127 41.1844L7.8797 40.5094C7.64966 40.0658 7.44312 39.6105 7.26095 39.1453C6.55722 37.3728 6.15327 35.4956 6.06564 33.5906C5.97025 31.5249 6.289 29.461 7.00314 27.5203C7.31799 26.6575 7.71843 25.8283 8.19845 25.0453C8.36822 24.7586 8.5561 24.483 8.76095 24.2203L9.10783 23.7094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M15.9376 18.8719C15.7173 18.9844 14.7282 18.4407 13.4954 18.0704C12.8821 17.8854 12.2551 17.749 11.6204 17.6626C11.1028 17.5938 10.5789 17.5859 10.0595 17.6391C8.67704 17.762 7.34903 18.2364 6.20165 19.0173C5.07961 19.8105 4.17657 20.8748 3.57665 22.111C3.08431 23.1213 2.796 24.2188 2.72821 25.3407C2.69343 25.8777 2.71859 26.417 2.80321 26.9485C2.87806 27.475 3.00365 27.993 3.17821 28.4954C3.81919 30.3297 4.97056 31.943 6.49696 33.1454C5.34886 33.2929 4.18573 33.027 3.21571 32.3954C2.33086 31.8909 1.62605 31.1222 1.20009 30.1969C0.505495 28.2191 0.390156 26.0841 0.867637 24.043C1.34512 22.0018 2.39556 20.1395 3.8954 18.6751C4.52084 18.0665 5.22755 17.5475 5.9954 17.1329C6.72892 16.7444 7.52035 16.4769 8.33915 16.3407C9.80058 16.0901 11.3013 16.2044 12.7079 16.6735C13.4367 16.9189 14.1183 17.2866 14.7235 17.761C15.1668 18.0868 15.5738 18.4593 15.9376 18.8719Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M47.0768 21.9001C47.1518 21.6844 48.2439 21.3891 49.5564 21.4313C50.2237 21.4449 50.8879 21.525 51.5393 21.6704C52.1674 21.811 52.7346 21.9844 53.1424 22.111C54.689 22.5889 56.0836 23.4632 57.1877 24.6469C58.3312 25.9044 59.1545 27.4191 59.5877 29.0626C59.959 30.4376 60.0293 31.8766 59.7939 33.2813C59.5573 34.6117 59.0482 35.8788 58.2986 37.0032C57.1179 38.8665 55.3032 40.2401 53.1893 40.8704C53.658 40.0313 54.2111 39.0516 54.6658 38.1844C54.9806 37.4972 55.3671 36.8451 55.8189 36.2391C57.1122 34.9993 57.8834 33.3127 57.9752 31.5235C58.0453 29.9065 57.6272 28.3058 56.7752 26.9297C56.0297 25.7427 55.0065 24.7549 53.7939 24.0516C52.759 23.4265 51.6398 22.953 50.4705 22.6454C49.9502 22.5188 49.233 22.2985 48.5627 22.1766C47.8924 22.0547 47.283 21.9376 47.0768 21.9001Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M49.1908 24.5765C48.9236 24.5765 47.9486 23.4328 46.5846 22.3922C45.3481 21.4069 43.9762 20.605 42.5111 20.0109C40.6328 19.3225 38.7076 18.7695 36.7502 18.3562C34.756 17.9242 32.7408 17.5957 30.7127 17.3719C27.4792 16.9732 24.2044 17.0569 20.9955 17.6203C18.357 18.1195 15.8374 19.1153 13.5705 20.5547C14.1117 19.2162 14.998 18.0452 16.1392 17.1609C17.0936 16.3406 18.2246 15.7519 19.4439 15.4406C22.225 15.0153 25.0481 14.9365 27.8486 15.2062C30.248 15.4234 32.6341 15.7677 34.9971 16.2375C37.0891 16.6103 39.1463 17.1575 41.1471 17.8734C42.9219 18.5078 44.5836 19.4225 46.0689 20.5828C46.8454 21.207 47.5316 21.9358 48.108 22.7484C48.5239 23.3235 48.8863 23.9354 49.1908 24.5765Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M25.5844 25.3875C25.7391 25.5422 25.5422 26.1328 25.1766 26.7656C24.8119 27.3546 24.3995 27.9127 23.9438 28.4344C23.6594 28.7931 23.3247 29.1088 22.95 29.3719C22.7547 29.5106 22.5512 29.6374 22.3407 29.7516C22.1071 29.8725 21.8641 29.9744 21.6141 30.0563C20.6464 30.3415 19.6254 30.3961 18.6329 30.2156C17.9205 30.1003 17.2298 29.8775 16.5844 29.5547C15.916 29.2139 15.3279 28.7345 14.8594 28.1485C14.457 27.6726 14.1616 27.1156 13.9934 26.5155C13.8251 25.9154 13.788 25.2861 13.8844 24.6703L14.6157 24.8531C14.6359 24.872 14.6598 24.8864 14.686 24.8953C14.7282 24.8953 14.7516 24.8953 14.7375 24.8953C14.7235 24.8953 14.5969 24.975 14.6204 24.9563C14.599 24.9794 14.5713 24.9957 14.5407 25.0031C14.5006 25.0104 14.4595 25.0082 14.4204 24.9968C14.3814 24.9855 14.3455 24.9651 14.3157 24.9375C14.2332 24.8676 14.1811 24.7685 14.1704 24.661C14.1642 24.5842 14.1758 24.5071 14.2043 24.4356C14.2327 24.364 14.2772 24.3 14.3344 24.2485L14.4375 24.15L14.9063 24.5672C15.6516 25.2469 16.3125 25.5797 16.3688 25.9125C16.4284 26.3772 16.6113 26.8174 16.8985 27.1875C17.1898 27.5436 17.5543 27.833 17.9672 28.036C18.7368 28.4437 19.607 28.6227 20.475 28.5516C21.1987 28.4677 21.8875 28.1944 22.4719 27.7594C22.9888 27.3857 23.482 26.9803 23.9485 26.5453C24.2308 26.304 24.53 26.0831 24.8438 25.8844C25.1719 25.6594 25.4766 25.4531 25.5844 25.3875Z",
						fill: "black"
					}), o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("path", {
						d: "M6.35622 20.4187C6.37966 20.5593 5.88747 21.2296 5.41872 22.0734C4.97407 22.8438 4.62912 23.6676 4.39216 24.525C4.12107 25.5992 3.96395 26.699 3.92341 27.8062L2.85934 27.5296C3.36845 26.4222 3.99719 25.3738 4.73434 24.4031C5.08003 23.9453 5.45092 23.5071 5.84528 23.0906L6.89059 23.9343C6.00438 25.272 5.44408 26.7988 5.25466 28.3921L4.26559 28.0874C5.09059 26.8968 5.81247 25.9359 6.45934 25.1531C6.26688 26.3962 5.87263 27.5996 5.29216 28.7156L4.04997 28.3312C4.04925 28.1361 4.0681 27.9413 4.10622 27.75C4.46676 26.1758 5.14289 24.6912 6.09372 23.3859L6.56247 23.7609C5.34478 24.9556 4.35376 26.3611 3.63747 27.9093L3.07028 27.7546C3.11474 25.9272 3.60385 24.1381 4.49528 22.5421C4.77284 22.065 5.10646 21.6228 5.48903 21.2249C5.75953 20.9369 6.04926 20.6675 6.35622 20.4187Z",
						fill: "#9FB8BD"
					}))), o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("path", {
						d: "M53.5127 30.6234C53.7705 30.6656 54.4221 32.0625 54.5768 32.1047H54.6611H54.7127V32.0531C54.7074 31.8661 54.6886 31.6797 54.6564 31.4953C54.6422 31.4087 54.6186 31.3238 54.5861 31.2422C54.5788 31.2225 54.5694 31.2036 54.558 31.1859L54.4971 30.9797C54.4408 30.7922 54.3705 30.6094 54.3049 30.4312L53.6018 28.5938L55.3127 29.6344C55.4884 29.7524 55.6545 29.8841 55.8096 30.0281C55.8081 30.0374 55.8081 30.0469 55.8096 30.0563V30.1312V30.1969C55.8074 30.2077 55.8074 30.2189 55.8096 30.2297C55.8166 30.2385 55.8255 30.2456 55.8357 30.2505C55.8458 30.2553 55.8569 30.2579 55.8682 30.2579C55.8794 30.2579 55.8905 30.2553 55.9007 30.2505C55.9108 30.2456 55.9197 30.2385 55.9268 30.2297C55.9539 30.1963 55.9745 30.1581 55.9877 30.1172C55.9877 30.0938 55.9877 30.0609 56.0158 30.0281C56.0206 29.9595 56.0206 29.8905 56.0158 29.8219C56.0158 29.5125 56.0158 29.2219 56.0158 28.9453C56.2208 29.0891 56.3999 29.2667 56.5455 29.4703C56.6268 29.5824 56.7004 29.6998 56.7658 29.8219L56.8127 29.9156L56.8643 30.0656C56.8971 30.1688 56.9205 30.2719 56.9486 30.3844C57.0414 30.8106 57.0777 31.2471 57.0564 31.6828C57.0483 31.9492 57.0009 32.213 56.9158 32.4656L56.7143 32.9672C56.658 33.0984 56.5689 33.4359 56.5596 33.2484C56.5268 33.1969 56.4893 33.1406 56.433 33.15C56.3768 33.1594 56.3674 33.1781 56.3346 33.1922C56.3018 33.2063 56.2924 33.2484 56.2689 33.2719C56.2432 33.3013 56.2197 33.3327 56.1986 33.3656L55.9268 32.3438L55.8049 31.9547L55.7064 31.6641C55.6144 31.417 55.4812 31.1872 55.3127 30.9844C55.254 30.9078 55.1914 30.8342 55.1252 30.7641L54.9986 30.6328C54.9185 30.5561 54.834 30.4841 54.7455 30.4172L55.1627 30.0891C55.2621 30.3969 55.345 30.7099 55.4111 31.0266C55.4922 31.405 55.5454 31.7888 55.5705 32.175C55.6056 32.8318 55.5679 33.4905 55.458 34.1391L55.3783 34.6078C55.3455 34.7391 55.3314 35.0766 55.2518 34.8141L54.8627 34.0922C54.6049 33.6234 54.3518 33.1172 54.1268 32.6297C53.941 32.2435 53.7843 31.8439 53.658 31.4344C53.5891 31.1681 53.5405 30.897 53.5127 30.6234Z",
						fill: "#9FB8BD"
					}))), o.a.createElement("path", {
						d: "M38.8127 11.1001C35.8924 8.75632 28.8424 7.84226 25.6408 9.95632C25.653 10.7885 25.725 11.6188 25.8564 12.4407C29.9733 11.7171 34.2091 12.1154 38.1189 13.5938",
						fill: "#FFD635"
					}), o.a.createElement("path", {
						d: "M36.5908 12.3704C36.4408 12.5016 35.4892 11.9766 35.0533 11.9016L34.6267 11.8219L34.4111 11.775L34.3033 11.7516L34.1298 11.7188C33.6048 11.5641 33.0329 11.3954 32.3204 11.25L32.222 10.8516C32.2065 10.7887 32.1987 10.7242 32.1986 10.6594C32.1781 10.4583 32.2138 10.2555 32.3017 10.0735C33.2457 9.87076 34.2097 9.7764 35.1751 9.79223C35.0363 10.008 34.9452 10.2509 34.9079 10.5047C34.9079 10.6594 34.9408 10.7204 34.8095 10.7016C34.6783 10.6829 34.5423 10.6735 34.4158 10.6688C34.0766 10.6389 33.7351 10.6499 33.3986 10.7016C33.584 10.7855 33.7771 10.8514 33.9751 10.8985L34.3923 11.0063L34.5658 11.0485L34.8611 11.1469C35.225 11.2583 35.5731 11.4158 35.897 11.6157C36.1735 11.8216 36.4088 12.0776 36.5908 12.3704Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M26.7189 11.4422C26.5267 11.3906 26.5829 11.1516 26.4892 11.0344C26.3652 10.8664 26.3009 10.6618 26.3064 10.4531C26.3064 10.1391 26.5079 9.88596 26.8876 9.7594C27.3845 9.95159 27.7079 10.1906 27.6048 10.2281C26.7798 10.5563 27.3095 11.0438 27.0845 11.2969C27.0517 11.3625 26.7798 11.4328 26.7189 11.4422Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M26.6391 8.31096C26.536 8.27346 26.5079 8.02971 26.4 7.7719C26.3501 7.64461 26.2856 7.5235 26.2079 7.41096C26.1012 7.25926 25.9751 7.12217 25.8329 7.00315L25.6969 6.88596C25.8718 6.56316 26.0643 6.25019 26.2735 5.94846L26.3907 5.77502C26.3907 5.75159 26.4375 5.70471 26.4422 5.70002C26.4466 5.68629 26.4466 5.67157 26.4422 5.65784H26.3954L26.25 5.49377L25.95 5.10471C25.711 4.78596 25.4813 4.4719 25.2844 4.16721C25.8277 3.86952 26.3954 3.61861 26.9813 3.41721C27.2871 3.32769 27.6012 3.26957 27.9188 3.24377C27.8991 3.56844 27.8096 3.88503 27.6563 4.1719C27.5949 4.28423 27.5192 4.38821 27.4313 4.48127C27.3976 4.5168 27.3598 4.54827 27.3188 4.57502C27.2813 4.59846 27.2438 4.61252 27.2485 4.57502C27.2532 4.53752 27.0375 4.48596 26.8782 4.50471C26.85 4.57971 26.8782 4.68752 26.986 4.87034L27.0938 5.0344L27.2438 5.24534L27.5485 5.65315C27.1945 6.03422 26.8804 6.45045 26.611 6.89534C26.6551 6.93355 26.6916 6.97965 26.7188 7.03127V7.07346C26.7188 7.10159 26.7469 7.1344 26.7563 7.16252C26.7794 7.22204 26.7982 7.28314 26.8125 7.34534C26.8649 7.53396 26.8649 7.73328 26.8125 7.9219C26.7777 8.06064 26.719 8.19227 26.6391 8.31096Z",
						fill: "#779FA0"
					}), o.a.createElement("path", {
						d: "M32.9672 8.2781C33.1078 8.16092 34.5797 8.16092 36.0984 8.1656L35.939 8.54998C35.7035 8.33821 35.4529 8.14394 35.189 7.96873C34.7811 7.69429 34.3359 7.47962 33.8672 7.33123C33.7233 7.13621 33.5375 6.97602 33.3234 6.86248C33.2433 6.8192 33.1603 6.78161 33.075 6.74998H33.0375L33.1125 6.69842L33.2484 6.58123C33.3342 6.49711 33.4112 6.40444 33.4781 6.30467L37.4625 5.94373L37.2422 7.00779C36.1075 6.47101 34.9063 6.08795 33.6703 5.86873C33.1722 5.78116 32.67 5.71858 32.1656 5.68123L32.039 4.38748C34.1239 3.77648 36.3356 3.74407 38.4375 4.29373L37.9687 5.30154C36.5446 4.13001 34.8256 3.37271 33 3.11248C33.9713 2.83515 34.9972 2.80934 35.9812 3.03748C36.8736 3.20882 37.7143 3.58422 38.4375 4.13435L38.6906 4.35935L38.1562 5.45154C36.261 4.82536 34.2259 4.75541 32.2922 5.24998L32.2359 4.68748C34.1074 4.87357 35.9318 5.38599 37.6265 6.20154L38.564 6.67029L37.5 6.74529L35.8968 6.87654L35.0672 6.95623L34.7531 6.98904H34.6078C34.5656 6.98904 34.4765 6.98904 34.575 6.98904C34.7902 7.04313 34.998 7.12342 35.1937 7.2281C35.2884 7.27931 35.3793 7.33727 35.4656 7.40154L35.6718 7.56092C35.7703 7.63592 35.864 7.72029 35.9578 7.79998C36.0757 7.90201 36.1883 8.00996 36.2953 8.12342L36.8765 8.74685L36.0937 8.70935C34.889 8.60154 33.314 8.34373 32.9672 8.2781Z",
						fill: "#779FA0"
					}), o.a.createElement("path", {
						d: "M34.5565 37.9688C34.6455 38.1562 34.3549 38.5312 33.9377 38.8734C33.728 39.0521 33.5089 39.2195 33.2815 39.375C33.0705 39.5344 32.8736 39.6844 32.7377 39.8016C31.701 40.6976 30.4223 41.2668 29.0627 41.4375C27.9649 41.6259 26.8374 41.5389 25.7815 41.1844C24.8908 40.8946 24.0986 40.3622 23.494 39.6469C23.9698 39.2985 24.4861 39.0089 25.0315 38.7844C25.5002 38.6109 25.8471 38.5266 26.0018 38.6719C26.5942 39.1649 27.3142 39.4802 28.0783 39.5813C28.7395 39.6676 29.4113 39.6166 30.0518 39.4313C31.2611 39.0891 32.1377 38.4938 33.019 38.175C33.2904 38.0797 33.5751 38.0275 33.8627 38.0203C34.1533 37.9688 34.4533 37.9688 34.5565 37.9688Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M28.7298 34.0735C30.7314 33.1828 32.297 31.9828 35.1845 33.7875C37.0314 34.9453 38.2642 37.7813 39.7501 39.375C41.2361 40.9688 42.8626 42.5578 44.9064 43.3453C44.0008 43.8206 42.988 44.0543 41.9657 44.0239C40.9434 43.9935 39.9462 43.7001 39.0705 43.1719C38.9804 43.9979 39.1439 44.8317 39.5392 45.5625C37.5189 45.2672 35.8361 43.875 34.458 42.3703C33.0798 40.8657 31.8751 39.1828 30.2251 37.9688C28.5751 36.7547 26.3533 36.061 24.4923 36.8953C23.4001 37.3641 22.5892 38.3016 21.6798 39.0797C20.7705 39.8578 19.5845 40.486 18.3986 40.2188C18.8638 39.7393 19.1359 39.1051 19.1626 38.4375C18.2093 39.2811 17.0508 39.859 15.8035 40.1132C14.5561 40.3674 13.2639 40.2891 12.0564 39.886L16.472 36.0938C16.0935 36.2354 15.6843 36.2744 15.2859 36.2069C14.8875 36.1394 14.514 35.9678 14.2033 35.7094C16.0126 35.7094 17.6814 34.7719 19.2048 33.8344C20.7283 32.8969 21.9705 32.1047 23.7517 31.786C25.533 31.4672 27.947 31.8469 28.622 33.525",
						fill: "black"
					}), o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("path", {
						d: "M23.0861 47.4047C22.8986 47.2266 22.0033 45.811 20.7846 43.8375L21.094 43.7344L21.2393 45.5719L21.3143 46.5704V46.6688L21.2205 46.5844L21.0143 46.4063C20.8971 46.2938 20.7799 46.1766 20.6674 46.0594C20.1626 45.5425 19.7545 44.9392 19.4627 44.2782C19.2053 43.6829 19.0469 43.0495 18.994 42.4032L19.4627 42.4735C19.0494 43.5564 19.0131 44.747 19.3596 45.8532L18.8908 46.111C17.8433 44.9053 17.1719 43.4191 16.9596 41.836C16.8509 41.0658 16.8589 40.2836 16.983 39.5157L17.6627 39.8157C17.222 40.4387 16.9118 41.1443 16.7507 41.8903C16.5896 42.6362 16.5809 43.4069 16.7252 44.1563L15.8346 44.4188C15.0477 42.5594 14.76 40.5267 15.0002 38.5219L15.9377 38.9063C15.4454 39.5436 15.1051 40.2849 14.9426 41.0737C14.7802 41.8624 14.7999 42.6779 15.0002 43.4579L13.9127 43.8797C13.4233 42.942 13.1294 41.9146 13.0489 40.8599C12.9683 39.8051 13.1027 38.745 13.444 37.7438L14.4611 38.4376C14.0071 38.8698 13.6569 39.3993 13.4369 39.9862C13.2169 40.5732 13.1327 41.2024 13.1908 41.8266L11.9065 42.0141C11.8502 41.7235 11.808 41.4469 11.7799 41.175C11.6099 39.4534 11.9524 37.7199 12.7643 36.1922L13.8096 37.0032C12.8607 37.8857 12.1676 39.008 11.8033 40.2516L10.4768 40.0547C10.5085 38.0658 11.0147 36.1132 11.9533 34.3594L13.1252 34.9735L11.133 38.6907L9.94708 38.2641L10.4674 35.836L10.5705 35.3672V35.311L10.6127 35.1704L10.6971 34.8563L10.5611 35.0204L10.0924 35.6766L8.98145 37.2094L9.1502 35.3579C9.31313 33.3611 9.92525 31.427 10.9408 29.7L11.5549 30.2157C10.6647 30.921 9.98927 31.861 9.60489 32.9297L8.97208 32.7891C9.22122 31.0432 9.95347 29.4018 11.0861 28.05C10.1797 29.5004 9.64663 31.1528 9.53458 32.8594L9.06583 32.7516C9.39126 31.5091 10.0742 30.3894 11.0299 29.5313L11.719 30.1125C10.893 31.7718 10.4145 33.5822 10.3127 35.4329L9.10801 35.0251L11.2783 31.7438L11.5736 31.8891C11.6741 31.9386 11.7793 31.9779 11.8877 32.0063C12.0729 32.1306 12.2322 32.2898 12.3565 32.475L11.8596 34.7485L11.508 36.3282L11.0018 38.5172L10.1299 38.2032L12.1877 34.4813L12.8768 34.8469C12.0003 36.4496 11.5182 38.238 11.4705 40.0641L10.8565 39.9704C11.2835 38.5617 12.0817 37.294 13.1674 36.3001L13.6033 36.6376C12.7444 38.226 12.4597 40.062 12.7971 41.836L12.2815 41.911C12.2153 41.1484 12.3227 40.3808 12.5954 39.6656C12.8682 38.9504 13.2993 38.3062 13.8565 37.7813L14.2783 38.0579C13.9758 38.9458 13.8564 39.8858 13.9273 40.8212C13.9982 41.7566 14.258 42.6679 14.6908 43.5001L14.1705 43.7016C13.9342 42.7923 13.9103 41.8407 14.1005 40.9206C14.2907 40.0005 14.6899 39.1365 15.2674 38.3954L15.9377 37.5329L15.8065 38.6251C15.5848 40.4819 15.8464 42.3646 16.5658 44.0907L15.9377 44.2922C15.7767 43.4345 15.7939 42.5529 15.9882 41.7021C16.1826 40.8513 16.5499 40.0496 17.0674 39.3469L17.7283 39.6375C17.5466 40.7033 17.6001 41.796 17.8852 42.8389C18.1702 43.8818 18.6798 44.8498 19.3783 45.6751L18.7502 46.0266C18.4174 44.9144 18.4321 43.7271 18.7924 42.6235C18.8299 42.5016 18.8768 42.375 18.9283 42.2485L19.5846 42.3516C19.5973 42.6413 19.6318 42.9296 19.6877 43.2141C19.7205 43.3594 19.7627 43.5094 19.8049 43.6547C19.8471 43.8 19.9174 43.9875 19.9408 44.0391C20.0911 44.4221 20.2998 44.7795 20.5596 45.0985C20.6346 45.1875 20.7096 45.2766 20.7893 45.361C20.7893 45.361 20.8408 45.4266 20.8361 45.4032V45.2204V44.7141V43.7766L21.0565 43.7063C22.308 45.9375 22.8658 46.9876 23.0861 47.4047Z",
						fill: "#9FB8BD"
					}))), o.a.createElement("path", {
						d: "M43.4419 39.093C48.5288 38.2454 51.9653 33.4346 51.1177 28.3478C50.2702 23.2609 45.4594 19.8244 40.3725 20.672C35.2857 21.5196 31.8491 26.3304 32.6967 31.4172C33.5443 36.504 38.3551 39.9406 43.4419 39.093Z",
						fill: "#D0DDDF"
					}), o.a.createElement("path", {
						fillRule: "evenodd",
						clipRule: "evenodd",
						d: "M40.5911 21.9828C36.2282 22.7098 33.2808 26.8359 34.0077 31.1988C34.7347 35.5616 38.8608 38.5091 43.2237 37.7822C47.5866 37.0552 50.534 32.9291 49.8071 28.5662C49.0801 24.2033 44.954 21.2558 40.5911 21.9828ZM31.3861 31.6356C30.4178 25.8248 34.3435 20.3294 40.1543 19.3611C45.9651 18.3929 51.4605 22.3186 52.4287 28.1294C53.397 33.9402 49.4713 39.4356 43.6605 40.4038C37.8497 41.3721 32.3543 37.4464 31.3861 31.6356Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M36.8955 27.4032C37.1205 27.4407 37.2986 28.0407 37.622 28.6641C37.8838 29.2436 38.2732 29.7564 38.7611 30.1641C39.3639 30.6042 40.0291 30.9517 40.7345 31.1954C41.5593 31.4693 42.443 31.5145 43.2915 31.3263C44.1399 31.1381 44.9216 30.7236 45.5533 30.1266C46.1968 29.3565 46.6297 28.4327 46.8095 27.4454C47.1276 27.6279 47.4077 27.8698 47.6345 28.1579C47.8735 28.4719 48.0472 28.8305 48.1455 29.2126C48.2439 29.5775 48.2678 29.9585 48.2158 30.3329C48.1798 30.6115 48.0697 30.8754 47.897 31.0969C47.3875 31.6641 46.7731 32.1273 46.0876 32.461C45.5117 32.7424 44.902 32.9487 44.2736 33.0751C43.1906 33.3023 42.0713 33.2927 40.9923 33.0469C38.9673 32.5782 37.4064 31.2001 36.8767 29.6954C36.7261 29.2656 36.6717 28.8079 36.7173 28.3548C36.7383 28.0316 36.7981 27.7121 36.8955 27.4032Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M44.1236 38.7375L43.9173 41.1844C43.8723 41.714 43.6328 42.2081 43.245 42.5717C42.8573 42.9352 42.3487 43.1423 41.8173 43.1531C41.2537 43.1659 40.7076 42.9569 40.2965 42.5712C39.8854 42.1855 39.6421 41.6539 39.6189 41.0906L39.5064 38.4375C40.9907 38.9494 42.5854 39.0531 44.1236 38.7375Z",
						fill: "#FEB331"
					}), o.a.createElement("path", {
						d: "M44.1143 38.7515C44.0299 38.8031 43.8471 38.9203 43.6924 39.0047C43.3786 39.0977 43.0569 39.162 42.7315 39.1969C42.0345 39.2552 41.3344 39.2646 40.6361 39.225C40.1741 39.2252 39.714 39.1654 39.2674 39.0469L40.1533 38.4375C40.2565 39.0609 40.3315 39.7172 40.4018 40.3687L40.4486 40.8375C40.4486 40.9125 40.4486 41.0156 40.4721 41.0718C40.4788 41.1208 40.4882 41.1693 40.5002 41.2172C40.5473 41.4007 40.6336 41.5718 40.7533 41.7187C40.8852 41.8784 41.0516 42.0061 41.24 42.0922C41.4283 42.1782 41.6338 42.2204 41.8408 42.2156C42.0419 42.213 42.2402 42.1673 42.4221 42.0816C42.604 41.9959 42.7655 41.8721 42.8955 41.7187C43.0263 41.5567 43.1234 41.3702 43.1815 41.1703C43.2415 40.9371 43.3135 40.7071 43.3971 40.4812C43.5705 40.0125 43.7861 39.5015 43.9408 38.9531C44.2952 39.3092 44.5351 39.7629 44.6299 40.2562C44.7259 40.6018 44.7826 40.9572 44.7986 41.3156C44.8141 41.6087 44.7493 41.9004 44.6111 42.1593C44.3366 42.6254 43.9434 43.0102 43.4715 43.2746C42.9996 43.5389 42.466 43.6733 41.9252 43.664C41.4817 43.6544 41.0471 43.5382 40.6579 43.3252C40.2687 43.1123 39.9365 42.8089 39.6893 42.4406C39.4648 42.1043 39.3205 41.7211 39.2674 41.3203C39.244 41.114 39.2393 40.9593 39.2252 40.7953L39.1877 40.3265L39.0236 38.4984L38.9627 37.8187L39.6846 38.0297C40.4776 38.2407 41.2865 38.3865 42.1033 38.4656C42.4174 38.4984 42.8486 38.5781 43.2471 38.6484C43.444 38.6765 43.6268 38.714 43.819 38.7328L44.1143 38.7515Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M33.7172 58.4391C34.7344 57.8063 35.7703 57.9141 36.6656 57.0329C40.2469 53.5126 42.5625 48.1735 42.8578 42.7548H40.3125C40.0687 47.2876 37.2047 52.8376 34.2187 55.7813C31.2328 58.7251 22.5 57.8907 22.5 57.8907L33.7172 58.4391Z",
						fill: "#FFD635"
					}), o.a.createElement("path", {
						d: "M33.7174 58.439C33.7455 58.5422 32.6768 58.5844 30.7315 58.5797C28.7861 58.575 25.9643 58.5187 22.5002 58.4109L22.5752 57.3656C23.9085 57.4427 25.2451 57.4427 26.5783 57.3656C28.0412 57.304 29.494 57.0935 30.9143 56.7375C31.6319 56.5494 32.3209 56.2656 32.9627 55.8937C33.1238 55.812 33.2735 55.7095 33.408 55.589C33.544 55.4719 33.6799 55.3781 33.8205 55.2422C34.0971 54.9562 34.369 54.6703 34.6315 54.3562C35.7073 53.069 36.635 51.6649 37.3971 50.1703C38.6496 47.8566 39.4289 45.3165 39.6893 42.6984L39.7315 42.0844H40.3127H42.844H43.5096L43.4674 42.7406C43.2923 45.3878 42.6578 47.9844 41.5924 50.414C40.7763 52.3192 39.6781 54.0906 38.3346 55.6687C38.0533 55.9969 37.7674 56.2922 37.5002 56.5734C37.233 56.8547 36.9799 57.089 36.694 57.3281C36.2089 57.6882 35.6476 57.9319 35.0533 58.0406C34.5846 58.1437 34.2752 58.2328 34.0502 58.3078C33.8252 58.3828 33.6846 58.4297 33.6846 58.3875C33.6846 58.3453 33.7502 58.2562 33.9565 58.1203C34.2633 57.9288 34.5903 57.7716 34.9315 57.6515C35.4372 57.4901 35.9046 57.2269 36.3049 56.8781C36.5158 56.6719 36.7736 56.3812 36.9986 56.1094C37.2236 55.8375 37.4674 55.5187 37.7393 55.1719C38.928 53.5915 39.8962 51.8569 40.6174 50.0156C41.5453 47.674 42.0806 45.1955 42.2018 42.6797L42.8252 43.3406H40.294L40.9361 42.7312C40.7004 45.5408 39.8865 48.2714 38.5455 50.7515C37.7363 52.3362 36.7452 53.8212 35.5924 55.1765C35.3111 55.5094 35.0065 55.8234 34.7018 56.114C34.5424 56.2687 34.3408 56.414 34.1627 56.5828C33.9872 56.7308 33.7953 56.8582 33.5908 56.9625C32.8407 57.3831 32.0363 57.6986 31.2002 57.9C29.6877 58.2561 28.1414 58.4494 26.5877 58.4765C25.2032 58.5161 23.8176 58.4675 22.4393 58.3312L22.5143 57.2859C25.8752 57.5109 28.6502 57.7547 30.5955 57.9187C32.5408 58.0828 33.6893 58.3359 33.7174 58.439Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M31.2236 54.4031L27.9424 52.9968L24.2627 54.75L22.8283 50.264C22.8283 50.264 24.3142 50.9578 28.0455 51.2812C31.1627 51.5531 33.9049 51.4875 33.9049 51.4875L31.2236 54.4031Z",
						fill: "#787C7E"
					}), o.a.createElement("path", {
						d: "M57.8298 44.8547C58.4579 49.3313 54.3001 58.0875 53.7985 59.161C51.3423 59.2875 40.9407 59.0344 40.9407 59.0344C42.5446 54.2612 44.9198 49.7831 47.972 45.7782",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M47.9626 45.7875C47.9626 45.9938 46.983 47.3344 45.9986 48.9656C45.077 50.4606 44.2534 52.0139 43.533 53.6156C43.1533 54.4781 42.7923 55.3828 42.4361 56.3156C42.258 56.7813 42.0861 57.25 41.9205 57.7219L41.7986 58.0828L41.7376 58.2656V58.3078V58.3406C41.7248 58.3899 41.7154 58.44 41.7095 58.4906H41.9439H42.8814H44.7564H48.5064H51.3845H52.7908H53.297H53.3673C54.1548 56.8172 54.8767 55.1484 55.5048 53.5453C56.1096 52.0377 56.6307 50.4979 57.0658 48.9328C57.4659 47.6204 57.665 46.2549 57.6564 44.8828C58.1251 45.9328 58.1533 47.6953 57.9423 49.2703C57.7945 50.5601 57.4908 51.8272 57.0376 53.0438C56.2923 54.8391 55.5048 56.5266 54.7173 58.1297C54.5064 58.5516 54.3751 58.8422 54.0283 59.5031H53.1658H52.5001L49.9876 59.4609L45.2673 59.3859L40.533 59.3344C40.608 59.0344 40.7158 58.7203 40.8095 58.3969L41.0673 57.6469C41.2126 57.225 41.372 56.8172 41.5361 56.4141C41.8548 55.6125 42.1783 54.8438 42.5205 54.1078C43.1568 52.7207 43.8785 51.3744 44.6814 50.0766C44.9111 49.6969 45.1923 49.2563 45.5158 48.8156C45.8392 48.375 46.172 47.9156 46.5048 47.5031C47.1376 46.6781 47.7705 46.0125 47.9626 45.7875Z",
						fill: "#779FA0"
					}), o.a.createElement("path", {
						d: "M50.1565 35.6766C49.4541 35.5374 48.7263 35.6086 48.0642 35.8813C47.4021 36.1539 46.8352 36.6159 46.4346 37.2094C46.0635 37.7053 45.8016 38.274 45.6658 38.8783C45.5301 39.4826 45.5237 40.1087 45.6471 40.7156C46.0167 42.3275 46.8021 43.8143 47.9252 45.0281L47.6487 45.2766C47.4612 47.5406 47.8877 49.7063 49.1112 51.0797C50.8408 53.025 54.9893 52.9547 56.5502 49.9312C58.2893 46.5797 57.2205 41.7938 54.9377 38.7234C53.7769 37.1501 52.0729 36.0642 50.1565 35.6766Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M49.111 51.0937C49.0173 51.0937 48.7876 50.9203 48.5157 50.5875C48.1724 50.1442 47.8989 49.651 47.7048 49.125C47.46 48.4397 47.3026 47.7262 47.236 47.0016C47.2032 46.6172 47.1751 46.2281 47.1751 45.8437C47.1751 45.6516 47.1751 45.4547 47.1751 45.2625C47.1751 45.1406 47.1751 45.0328 47.1751 44.925C47.1751 44.8172 47.0579 44.8078 47.0017 44.7422L46.9126 44.6437L46.7813 44.4844C46.6079 44.2781 46.4485 44.0672 46.3126 43.8656C46.0584 43.505 45.8237 43.131 45.6095 42.7453C45.3046 42.2027 45.067 41.625 44.9017 41.025C44.7117 40.3647 44.6481 39.6745 44.7142 38.9906C44.7923 38.2698 45.0173 37.5727 45.3751 36.9422C45.7362 36.27 46.2499 35.692 46.8751 35.2547C47.53 34.8024 48.2904 34.5263 49.0829 34.4531C49.473 34.4135 49.8665 34.4214 50.2548 34.4766C50.6043 34.5243 50.9503 34.5948 51.2907 34.6875C52.642 35.0612 53.8688 35.7895 54.8438 36.7969C56.3935 38.3994 57.4874 40.3866 58.0126 42.5531C58.5158 44.6507 58.3519 46.8531 57.5438 48.8531C57.345 49.3298 57.1099 49.7905 56.8407 50.2312C56.6975 50.4545 56.5409 50.669 56.372 50.8734C56.2032 51.075 56.011 51.2578 55.8282 51.4406C55.0858 52.1178 54.1738 52.5811 53.1892 52.7812C52.2838 52.9714 51.3421 52.8815 50.4892 52.5234C49.7455 52.1952 49.1285 51.6342 48.7313 50.925C49.3618 51.3124 50.0824 51.5288 50.822 51.5531C51.5244 51.543 52.2117 51.3473 52.8142 50.9859C53.3251 50.6826 53.7737 50.2849 54.136 49.8141C54.4454 49.4016 54.6657 49.0359 54.8438 48.7875C55.5966 47.6733 56.0399 46.3792 56.1282 45.0375C56.1953 43.7046 55.963 42.3736 55.4485 41.1422C55.2064 40.5388 54.9049 39.9609 54.5485 39.4172C54.2248 38.8872 53.8529 38.3882 53.4376 37.9266C52.6179 37.0885 51.5668 36.514 50.4188 36.2766C49.9297 36.1401 49.4146 36.1256 48.9186 36.2343C48.4226 36.343 47.9608 36.5715 47.5735 36.9C47.216 37.2244 46.9261 37.6163 46.7204 38.0531C46.5137 38.468 46.3865 38.918 46.3454 39.3797C46.3104 40.2949 46.4919 41.2056 46.8751 42.0375C47.0555 42.4484 47.267 42.8448 47.5079 43.2234C47.6298 43.4109 47.7517 43.5937 47.8829 43.7672C47.9251 43.8328 48.0657 43.9969 48.1688 44.1281C48.272 44.2594 48.4032 44.4047 48.511 44.5406C48.4595 44.8359 48.4126 45.1172 48.3845 45.3656L48.3329 45.8344C48.2341 46.8612 48.2514 47.8958 48.3845 48.9187C48.5086 49.678 48.7539 50.4123 49.111 51.0937Z",
						fill: "black"
					}), o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("g", {
						style: {
							mixBlendMode: "multiply"
						}
					}, o.a.createElement("path", {
						d: "M52.3641 50.911C52.3219 51.0141 51.8672 51.0656 51.3516 50.9578C50.8733 50.8447 50.4127 50.6665 49.9829 50.4282C49.3973 50.1311 48.9092 49.6724 48.5766 49.1063C48.2271 48.5184 48.0275 47.8535 47.9954 47.1703L47.8922 45.15L49.1954 46.8141V46.8422C49.6938 47.5044 50.3473 48.034 51.0985 48.3844C51.7601 48.6934 52.471 48.8838 53.1985 48.9469C52.9218 49.3148 52.5257 49.575 52.0782 49.6828C51.7141 49.8108 51.3173 49.8108 50.9532 49.6828C49.9158 49.1338 49.0375 48.3266 48.4032 47.3391L48.8719 47.1985C48.8965 47.9471 49.1854 48.6629 49.6876 49.2188C50.0943 49.6721 50.5845 50.0429 51.1313 50.311C51.3188 50.4 51.5672 50.5547 51.811 50.6766C52.0547 50.7985 52.2844 50.8782 52.3641 50.911Z",
						fill: "#9FB8BD"
					}))), o.a.createElement("path", {
						d: "M47.5549 36.0938C47.5549 36.2625 47.0439 36.5625 46.6174 37.0875C46.2111 37.526 45.9607 38.0861 45.9049 38.6812C45.8947 39.0467 45.9182 39.4123 45.9752 39.7734C46.0268 40.1391 46.1533 40.5328 46.2236 40.9125C46.4358 41.6355 46.7516 42.3239 47.1611 42.9562C47.8018 43.8748 48.6272 44.6495 49.5845 45.2307C50.5418 45.8118 51.61 46.1867 52.7205 46.3312C52.5285 46.5961 52.2843 46.8189 52.003 46.9857C51.7216 47.1526 51.4091 47.2601 51.0846 47.3016C50.5455 47.4294 49.9789 47.3716 49.4768 47.1375C47.5713 45.9426 46.1144 44.1512 45.333 42.0422C45.1864 41.6039 45.0705 41.156 44.9861 40.7016C44.89 40.2707 44.8412 39.8306 44.8408 39.3891C44.8244 38.5379 45.1082 37.7081 45.6424 37.0453C45.9288 36.7113 46.2947 36.455 46.7064 36.3C46.9792 36.1949 47.2644 36.1256 47.5549 36.0938Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M22.9594 53.8875L27.8016 52.5844L32.461 53.8359L30.5578 55.7812L27.6657 54.0047L23.9907 55.9875",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M34.6875 30.225C34.6875 30.225 36.8859 32.8593 38.8359 34.2187C40.4382 35.434 42.3937 36.0924 44.4047 36.0937C43.65 36.4922 41.0484 37.739 37.725 35.625C35.0297 33.8906 34.6875 30.225 34.6875 30.225Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M45.2671 23.3438C45.9952 23.592 46.651 24.0157 47.1766 24.5773C47.7023 25.1389 48.0816 25.8212 48.2812 26.5641C48.4078 27.1641 48.314 27.9094 47.7703 28.1953C47.5592 28.2811 47.3294 28.3107 47.1035 28.2811C46.8775 28.2515 46.6631 28.1638 46.4812 28.0266C46.1015 27.7782 45.7968 27.4313 45.4359 27.1594C44.8299 26.7515 44.1619 26.4444 43.4578 26.25C42.7458 26.0633 42.075 25.7454 41.4796 25.3125C40.7812 24.7266 40.6031 23.4375 41.6015 23.025C42.6 22.6125 44.1468 22.9313 45.2671 23.3438Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M57.3422 50.5078C57.2644 50.9473 57.0627 51.3555 56.7609 51.6844C56.3791 52.1863 55.9574 52.6566 55.5 53.0906C54.2919 54.2502 52.7206 54.9572 51.0515 55.0922C49.6211 55.267 48.1781 54.8861 47.0203 54.0281C46.5479 53.6736 46.1718 53.2065 45.9262 52.6694C45.6806 52.1323 45.5733 51.5423 45.614 50.9531C45.9281 51.3688 46.283 51.752 46.6734 52.0969C46.9714 52.3243 47.2563 52.5684 47.5265 52.8281C48.1242 53.5449 48.9722 54.0074 49.8984 54.1219C50.749 54.2478 51.617 54.1821 52.439 53.9297C53.7684 53.4824 54.9786 52.7387 55.9781 51.7547C56.1844 51.5578 56.4984 51.2859 56.7656 51.0609C57.0328 50.8359 57.2531 50.5781 57.3422 50.5078Z",
						fill: "#779FA0"
					})),
					ROCKET_SHARE: e => o.a.createElement("svg", {
						className: e.className,
						width: "60",
						height: "60",
						viewBox: "0 0 60 60",
						fill: "none",
						xmlns: "http://www.w3.org/2000/svg"
					}, o.a.createElement("path", {
						d: "M39.0005 28.5938L40.2661 31.3594C41.5786 29.2969 42.7974 27.2344 44.1099 25.2656C45.938 22.4531 47.7192 19.8281 49.4067 17.3438L53.7661 10.875L52.4067 7.03125L39.0005 28.5938Z",
						fill: "#787C7E"
					}), o.a.createElement("path", {
						d: "M33.4219 22.125C32.3906 22.1719 31.3594 22.4063 30.4219 22.7813C29.1563 23.2969 27.9844 24.0938 27.0469 25.125C26.0625 26.1563 25.3125 27.375 24.7031 28.6406C24.1875 29.7188 23.8125 30.8438 23.4844 31.9688C24.1406 32.25 24.75 32.5781 25.3594 32.9531C25.4531 32.6719 25.5 32.4375 25.6406 32.1563C25.875 31.4531 26.2031 30.75 26.5781 30.0938C26.7656 29.7656 26.9531 29.3906 27.1406 29.0625L27.7969 28.125C28.7344 26.8594 29.9063 25.7813 31.1719 24.9375C31.3125 24.8438 31.5 24.7031 31.6875 24.6094L32.2031 24.3281C32.5312 24.1406 32.9063 24 33.2813 23.8125C33.6563 23.6719 34.0313 23.5313 34.4063 23.4375C34.4531 23.4375 34.4531 23.4375 34.5 23.4375L33.8906 22.0781C33.7031 22.0781 33.6094 22.125 33.4219 22.125Z",
						fill: "#787C7E"
					}), o.a.createElement("path", {
						d: "M39.1406 33.1406L39.8438 33.1875L39.5156 32.5312C39.4219 32.7187 39.2812 32.9531 39.1406 33.1406Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M55.5474 10.8281L53.2974 5.0625C53.2505 4.875 53.1099 4.78125 52.9692 4.73438C53.2505 4.96875 53.3911 5.29687 53.2505 5.625C53.2036 5.76562 53.1567 5.85937 53.1099 5.95312L53.0161 6.14062L54.8442 11.0625L40.8755 32.6719L41.1567 33.2812L40.5005 33.2344L40.1255 33.7969L39.8442 33.1875L39.1411 33.1406C39.2817 32.9531 39.4224 32.7188 39.563 32.5312L38.2036 29.5781C37.9224 29.6719 37.6411 29.6719 37.3599 29.5312C37.2192 29.4375 37.0786 29.2969 36.9849 29.1094L35.3911 25.5C35.3442 25.5 35.2974 25.5469 35.2505 25.5469L39.2817 34.2656C39.3755 34.4531 39.5161 34.5937 39.6567 34.6875C40.1255 34.9687 40.7349 34.8281 41.0161 34.3594C42.1411 32.5781 43.313 30.7969 44.5317 28.9687C45.7505 27.1406 46.9224 25.2187 48.1411 23.2969C50.5317 19.4062 53.0161 15.375 55.5005 11.4375C55.5942 11.25 55.6411 11.0156 55.5474 10.8281Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M35.1094 24.8906L34.875 24.75L35.25 25.5469C35.2969 25.5469 35.3437 25.5 35.3906 25.5L35.1094 24.8906Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M41.1562 33.2812L40.875 32.6719L40.5 33.2344L41.1562 33.2812Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M35.1094 24.8906L34.9219 24.4688C33 24.9844 28.2656 26.9062 26.25 33.6094C26.2969 33.6562 26.3906 33.7031 26.4375 33.75C26.7188 33.9844 27 34.2656 27.2813 34.5C27.4219 33.9844 27.5625 33.5156 27.7031 33.0469L28.0781 32.1562C28.125 31.9688 28.2188 31.8281 28.2656 31.6875L28.5 31.2656C28.6406 30.9844 28.8281 30.7031 28.9688 30.4219L29.5313 29.5781C29.7188 29.2969 29.9063 29.0625 30.1406 28.8281L30.4688 28.4531L30.8438 28.125C31.0781 27.8906 31.3125 27.6562 31.5938 27.4687C31.8281 27.2344 32.1094 27.0469 32.3906 26.8594L32.8125 26.5781C32.9531 26.4844 33.0938 26.4375 33.2344 26.3438C33.5156 26.2031 33.7969 26.0625 34.125 25.9219C34.4531 25.7812 34.7344 25.6875 35.0625 25.5937C35.1094 25.5937 35.1562 25.5469 35.25 25.5469L34.875 24.75L35.1094 24.8906Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M39.5625 32.5313L39.8906 33.1875L40.5469 33.2344L40.9219 32.6719L40.3125 31.4062C40.0312 31.7344 39.7969 32.1563 39.5625 32.5313Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M34.4063 23.4844C34.0313 23.5781 33.6562 23.7188 33.2812 23.8594C32.9062 24.0469 32.5312 24.1875 32.2031 24.375L31.6875 24.6563C31.5 24.75 31.3125 24.8906 31.1719 24.9844C29.9063 25.8281 28.7344 26.9063 27.7969 28.1719L27.1406 29.1094C26.9531 29.4375 26.7656 29.8125 26.5781 30.1406C26.2031 30.7969 25.875 31.5 25.6406 32.2031C25.5469 32.4844 25.4531 32.7188 25.3594 33C25.6406 33.1875 25.9688 33.4219 26.25 33.6563C28.2656 26.9063 33 25.0313 34.9219 24.5156L34.5 23.5313C34.4531 23.4844 34.4531 23.4844 34.4063 23.4844Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M53.7656 10.875L54.0469 10.5L53.9531 11.3906L53.7656 10.875L49.4063 17.3438C47.7188 19.8281 45.9375 22.4531 44.1094 25.2656C42.7969 27.2344 41.5781 29.2969 40.2656 31.3594L40.875 32.625L54.8438 11.0625L53.0156 6.14062L52.4531 7.07813L53.7656 10.875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M54.0474 10.5L53.7661 10.875L53.9536 11.3906L54.0474 10.5Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M39 28.5938L38.625 29.2031C38.5313 29.3906 38.3438 29.4844 38.2031 29.5781L39.5625 32.5312C39.7969 32.1562 40.0781 31.7812 40.3125 31.3594L39 28.5938Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M40.125 33.7969L40.5 33.2344L39.8438 33.1875L40.125 33.7969Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M30.4219 7.26562C30.9844 7.5 31.5469 7.78125 32.1094 8.0625C36.5156 7.35938 41.1562 6.5625 45.9844 5.76563C45.7969 5.71875 45.5625 5.71875 45.375 5.67188C43.125 5.39063 40.875 5.0625 38.625 4.73438C36.375 4.40625 34.125 4.03125 31.9219 3.65625C30.7969 3.46875 29.6719 3.28125 28.5469 3.09375C29.8594 4.17188 30.5156 5.71875 30.4219 7.26562Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M27.2344 3.04688H28.0781C27.6563 2.95312 27.2812 2.90625 26.8594 2.8125C27.0937 3.46875 27.3281 4.125 27.5625 4.82812C27.75 5.39062 27.9375 5.95312 28.125 6.51562C28.3594 6.5625 28.5938 6.65625 28.8281 6.70312L27.2344 3.04688Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M49.5938 6.5625C43.0781 7.45312 37.7344 8.10938 32.9531 8.53125C34.5938 9.51563 36.1875 10.7344 37.5937 12.2344C38.9531 13.6875 40.0781 15.2344 40.9687 16.875C42.9844 12.8906 45.9375 9.32812 49.5938 6.5625Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M50.0156 6.51562L49.4062 7.35937L42.0938 19.3594C42.1406 19.5 42.1875 19.6406 42.2344 19.7812L50.5312 6.42188C50.3906 6.46875 50.2031 6.51562 50.0156 6.51562Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M32.7656 8.4375L48.0469 6C47.3438 5.90625 46.6406 5.85937 45.9375 5.76562C41.1094 6.5625 36.4688 7.3125 32.0625 8.0625C32.3438 8.20312 32.5313 8.29687 32.7656 8.4375Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M49.5938 6.5625C49.7812 6.42187 49.9219 6.32812 50.1094 6.1875C49.4531 6.14062 48.75 6.04687 48.0937 6L32.7656 8.4375C32.8125 8.48437 32.9063 8.53125 32.9531 8.53125C37.7813 8.10938 43.0781 7.45312 49.5938 6.5625Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M50.5781 6.46875L50.6719 6.28125C50.5312 6.28125 50.3438 6.23438 50.2031 6.23438L49.9688 6.51562C50.2031 6.51562 50.3906 6.46875 50.5781 6.46875Z",
						fill: "#A8A8A8"
					}), o.a.createElement("path", {
						d: "M17.5781 17.5313C17.4375 17.1563 17.3438 16.8281 17.2031 16.4531C16.9688 16.7812 16.7344 17.1094 16.5 17.4375C16.0313 18.0938 15.6562 18.75 15.2812 19.5C15.6562 19.5 16.0313 19.5469 16.3594 19.5938C16.7344 18.8438 17.1094 18.1875 17.5781 17.5313Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M18.3281 19.8281C18.4219 19.8281 18.4688 19.875 18.5625 19.875C18.5156 19.8281 18.5156 19.7344 18.4688 19.6875C18.375 19.7344 18.375 19.7812 18.3281 19.8281Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M19.9224 14.5781C22.5005 12.0938 25.9692 10.7812 29.2974 9.51562L28.8286 9.79687C24.8442 12.0937 21.6099 15.375 18.8442 19.0781C19.8286 18.0938 20.9536 17.25 22.1255 16.5C23.813 15.4219 25.6411 14.5781 27.563 14.0156C28.0786 13.875 28.5474 13.7812 29.063 13.6875C29.1567 13.6875 29.2036 13.6875 29.2974 13.6875C29.3911 12.1875 29.5317 10.6875 29.7192 8.8125V8.76563L28.8286 6.70313C28.5942 6.60938 28.3599 6.5625 28.1255 6.51562C28.3599 7.17187 28.5474 7.78125 28.7349 8.39062C28.6411 8.53125 28.5005 8.67188 28.3599 8.76563C28.2661 8.8125 28.2192 8.85937 28.1255 8.85937H28.0786H28.0317L27.8911 8.90625L27.6567 9L27.2349 9.14062C26.9536 9.23438 26.6724 9.375 26.3911 9.46875C25.8286 9.70313 25.2661 9.98437 24.7036 10.2656C23.5786 10.8281 22.5474 11.4844 21.563 12.2344C20.5786 12.9375 19.6411 13.7344 18.7974 14.625C18.2349 15.1875 17.6724 15.7969 17.2036 16.4531C17.2974 16.8281 17.438 17.1562 17.5786 17.5312C18.2817 16.4531 19.0317 15.4688 19.9224 14.5781Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M29.5313 13.6875C29.4375 13.6875 29.4844 13.875 29.5313 13.875C29.5313 13.875 29.5781 13.875 29.625 13.875C29.6719 13.875 29.5781 13.9219 29.5313 13.9219C29.4844 13.9219 29.2969 14.0156 29.1563 14.1094C29.1094 14.1562 29.0156 14.1562 28.9688 14.2031C29.4375 14.0625 29.6719 14.0156 29.6719 14.0156L30.1875 8.85937L30.8438 8.76562C30.6094 8.76562 30.4219 8.8125 30.1875 8.8125C30.1406 8.8125 30.1406 8.8125 30.1406 8.85937C29.8125 10.6875 29.5313 12.2344 29.2969 13.6875C29.3438 13.6875 29.4375 13.6875 29.5313 13.6875Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M32.1094 8.0625C31.5469 7.78125 30.9844 7.5 30.4219 7.26562C30.4219 7.64063 30.3281 8.01562 30.2344 8.34375C30.8438 8.29688 31.4531 8.15625 32.1094 8.0625Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M27.5625 7.07813C27.5156 7.07813 27.4688 7.07812 27.4219 7.125L27.5625 7.07813Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M38.2969 25.6406C38.7187 22.5938 39.6562 19.6406 41.0156 16.9219C40.125 15.2812 39 13.7344 37.6406 12.2813C36.2344 10.7813 34.6406 9.5625 33 8.57812C32.25 8.625 31.5469 8.71875 30.8438 8.76563L30.1875 8.85938L29.6719 14.0156C29.6719 14.0156 29.3906 14.0625 28.9687 14.2031C28.6406 14.3437 28.2188 14.5312 27.6562 14.7656C25.8281 15.5625 24.0937 16.5938 22.5 17.8125C21.5625 18.5156 20.6719 19.3125 19.875 20.1562C21.75 20.5781 23.4844 21.2344 25.0781 22.0312C26.5312 20.2031 28.2656 18.6094 30.2344 17.3438C31.125 16.7812 32.2031 16.2656 33.1875 16.7344C34.1719 17.2031 34.5 18.4219 34.6875 19.4531H34.2188C31.3125 19.2656 28.5 20.7187 26.3906 22.7344C26.4844 22.7812 26.5781 22.8281 26.6719 22.9219C27.6094 22.1719 28.6406 21.5156 29.7188 21.0469C30.4688 20.7188 31.3125 20.5312 32.1094 20.3906C32.5312 20.3438 32.9531 20.2969 33.375 20.25C33.5625 20.25 33.7969 20.25 33.9844 20.25C34.2188 20.25 34.4531 20.25 34.6875 20.2969C35.0156 20.3437 35.2969 20.5312 35.3906 20.8125L36.6094 23.625C36.7031 23.7188 36.75 23.8125 36.8438 23.9062L38.0625 26.5781L42.2344 19.8281C42.1875 19.6875 42.1406 19.5469 42.0938 19.4062L38.2969 25.6406Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M30.1875 8.8125C30.4219 8.8125 30.6094 8.76563 30.8438 8.76563L32.8125 8.4375C32.5781 8.29687 32.3438 8.20313 32.1094 8.0625C31.5 8.15625 30.8438 8.25 30.2344 8.34375C30.1406 8.625 30.0469 8.90625 29.9062 9.14062L29.7188 8.71875V8.76563C29.5313 10.6406 29.3906 12.1406 29.2969 13.6406C29.5312 12.1875 29.8125 10.6406 30.1406 8.8125C30.1406 8.8125 30.1406 8.8125 30.1875 8.8125Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M18.5161 19.875C18.7036 19.9219 18.8911 19.9219 19.0786 19.9687C19.1255 19.9687 19.1724 20.0156 19.2192 20.0156C22.9692 16.2188 27.2349 14.6719 28.9224 14.2031C29.0161 14.1562 29.063 14.1562 29.1099 14.1094C29.2505 14.0156 29.438 13.9219 29.4849 13.9219C29.5317 13.9219 29.6255 13.875 29.5786 13.875C29.5317 13.875 29.4849 13.875 29.4849 13.875C29.438 13.875 29.3911 13.6875 29.438 13.6875C29.3911 13.6875 29.2974 13.6875 29.2505 13.6875C29.1567 13.6875 29.1099 13.6875 29.0161 13.6875C28.5005 13.7813 28.0317 13.875 27.5161 14.0156C25.5942 14.5781 23.7661 15.4219 22.0786 16.5C20.9067 17.25 19.8286 18.0938 18.7974 19.0781C18.6567 19.2656 18.5161 19.4531 18.3755 19.6875C18.4692 19.7344 18.5161 19.7813 18.5161 19.875Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M33 8.57812C32.9531 8.53125 32.8594 8.48438 32.8125 8.48438L30.8438 8.8125C31.5469 8.71875 32.25 8.625 33 8.57812Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M36.6094 23.5781L37.9688 26.6719L38.0156 26.5781L36.7969 23.9063C36.7969 23.7656 36.7031 23.625 36.6094 23.5781Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M19.2656 20.0156C19.4531 20.0625 19.6875 20.1094 19.875 20.1563C20.6719 19.3125 21.5625 18.5156 22.5 17.8125C24.0938 16.5938 25.8281 15.5625 27.6562 14.7656C28.1719 14.5313 28.6406 14.3438 28.9688 14.2031C27.2812 14.6719 22.9687 16.2188 19.2656 20.0156Z",
						fill: "#C5C5C5"
					}), o.a.createElement("path", {
						d: "M12.7969 29.4844C12.8437 29.4375 12.8438 29.3906 12.8438 29.3906C12.8438 29.3906 12.7969 29.4375 12.7969 29.4844Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M16.2187 19.875C16.2656 19.7813 16.3125 19.6875 16.3594 19.5469C15.9844 19.5 15.6094 19.5 15.2812 19.4531C15.0937 19.8281 14.9062 20.2031 14.7187 20.5781C14.5781 20.8594 14.4844 21.1406 14.3437 21.4219L14.0156 22.2656C13.8281 22.8281 13.5938 23.4375 13.4531 24C12.9375 25.7813 12.5156 27.6562 12.2344 29.5312C12.375 29.4844 12.5156 29.4844 12.6562 29.4375C13.4531 26.1562 14.6719 22.9219 16.2187 19.875Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M22.3594 26.4844C21.6094 25.4531 20.8594 24.3281 20.2031 23.1563C19.7812 22.4531 19.4063 21.7031 19.0781 21C18.1406 22.0781 17.3438 23.25 16.6406 24.5156C15.7969 26.0625 15.1875 27.7031 14.7188 29.3437C15.5625 29.3437 16.4531 29.4375 17.2969 29.625C18.8438 29.9531 20.3438 30.4688 21.75 31.1719C22.0781 30.0469 22.5 28.9219 22.9688 27.8438C23.0156 27.7031 23.0625 27.6094 23.1563 27.5156C23.0625 27.4219 23.0156 27.3281 22.9219 27.2344C22.2656 28.2656 21.7031 29.3438 21.0938 30.4219C21.375 29.0156 21.8438 27.75 22.3594 26.4844Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M18.7974 20.4844C18.7036 20.2969 18.6099 20.0625 18.5161 19.875C18.4224 19.875 18.3755 19.8281 18.2817 19.8281C16.1724 22.8281 14.3911 26.0625 12.7974 29.3438C12.7974 29.3906 12.7974 29.3906 12.7505 29.4375C13.1255 29.3906 13.4536 29.3438 13.8286 29.3438C15.0005 25.5469 16.7817 22.6406 18.7974 20.4844Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M14.7187 29.3438C15.1875 27.6562 15.8438 26.0625 16.6406 24.5156C17.3438 23.25 18.1406 22.0781 19.0781 21C18.9844 20.8125 18.8906 20.625 18.7969 20.4375C16.7812 22.6406 14.9531 25.5469 13.875 29.3438C14.1563 29.3438 14.4375 29.3438 14.7187 29.3438Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M26.1562 22.9219C24.8906 24.1875 23.8594 25.6875 22.9219 27.1875C23.0156 27.2813 23.0625 27.375 23.1562 27.4688C23.8125 26.1094 24.6562 24.8438 25.6875 23.7656C26.0156 23.4375 26.3438 23.1094 26.6719 22.8281C26.5781 22.7813 26.4844 22.6875 26.3906 22.6406C26.2969 22.7813 26.25 22.8281 26.1562 22.9219Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M20.2036 23.1563C20.8599 24.3281 21.6099 25.4062 22.3599 26.4844C23.063 24.8906 24.0005 23.3906 25.0786 21.9844C23.4849 21.1875 21.7505 20.5781 19.8755 20.1094C19.5942 20.3906 19.3599 20.6719 19.0786 21C19.4536 21.75 19.8286 22.4531 20.2036 23.1563Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M19.0781 19.9687C18.8906 19.9219 18.7031 19.875 18.5156 19.875C18.6094 20.0625 18.7031 20.2969 18.7969 20.4844C18.9375 20.3437 19.0781 20.1562 19.2188 20.0156C19.2188 20.0156 19.125 19.9687 19.0781 19.9687Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M18.7969 20.4844C18.8906 20.6719 18.9844 20.8594 19.0781 21.0469C19.3125 20.7656 19.5938 20.4375 19.875 20.1562C19.6875 20.1094 19.4531 20.0625 19.2656 20.0156C19.125 20.1562 18.9375 20.2969 18.7969 20.4844Z",
						fill: "#E2E2E2"
					}), o.a.createElement("path", {
						d: "M27.2812 7.21875L27.1875 7.17188C27.0937 7.17188 27.0469 7.17187 26.9531 7.21875C27 7.3125 27.0469 7.40625 27.0937 7.5C27.1406 7.35937 27.2344 7.26562 27.2812 7.21875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M27.2815 7.17188L26.9065 6.23438L25.4534 2.62501C25.3596 2.62501 25.2659 2.57813 25.1721 2.57813L25.3596 2.34376L24.9846 1.31251L26.0628 1.45313L26.2503 1.21876C26.2971 1.31251 26.344 1.40626 26.344 1.50001L50.4846 4.96876L50.7659 5.01563C51.3753 4.92188 52.0315 4.82813 52.6409 4.68751C52.7346 4.68751 52.8753 4.68751 52.969 4.73438C52.8753 4.64063 52.7346 4.59376 52.594 4.54688L52.4534 4.50001C50.2034 3.93751 47.9534 3.56251 45.7503 3.18751C43.5471 2.81251 41.2503 2.53126 39.0003 2.25001C36.7503 1.96876 34.5003 1.68751 32.2503 1.40626C30.0003 1.12501 27.7503 0.843757 25.5003 0.656257H25.4534C25.3128 0.609382 25.1721 0.656257 25.0315 0.703132C24.5628 0.890632 24.3284 1.45313 24.5159 1.92188C24.8909 2.85938 25.219 3.75001 25.6878 4.68751C26.1096 5.53126 26.5315 6.32813 26.9534 7.21876C27.0471 7.21876 27.094 7.17188 27.1878 7.17188H27.2815Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M10.6876 28.6406C10.9688 24.9844 11.8595 21.9844 13.0782 19.5C14.0626 17.4375 15.2813 15.75 16.5938 14.2969C21.4688 8.95313 27.5626 7.73438 27.5626 7.73438L27.3282 7.21875C27.2813 7.26562 27.1407 7.40625 27.1407 7.5C27.0938 7.40625 27.047 7.3125 27.0001 7.21875C26.9063 7.21875 26.8126 7.26563 26.7188 7.26563C26.3907 7.35938 26.0626 7.45313 25.7345 7.54688C25.0782 7.73438 24.422 7.96875 23.8126 8.25C22.547 8.76563 21.3282 9.375 20.1563 10.125C18.9845 10.875 17.9063 11.7188 16.8751 12.6562C15.8438 13.5938 14.9063 14.6719 14.1095 15.7969C13.2657 16.9219 12.5626 18.1406 12.0001 19.4063C11.672 20.0156 11.4376 20.6719 11.2032 21.3281L10.8751 22.3125C10.7345 22.6406 10.6876 22.9688 10.5938 23.2969C10.0313 25.5469 9.79697 27.8906 9.98447 30.2344C10.2188 30.1406 10.4063 30.0469 10.6407 30C10.5938 29.5312 10.6407 29.0625 10.6876 28.6406Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.25 1.21875L26.0625 1.45313L26.3906 1.5C26.3438 1.40625 26.2969 1.3125 26.25 1.21875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M25.2188 2.53125C25.3125 2.53125 25.4063 2.57812 25.5 2.57812L25.3594 2.34375L25.2188 2.53125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M50.7661 5.01562L50.4849 4.96875C50.4849 5.01563 50.5317 5.01562 50.5317 5.0625C50.6255 5.01562 50.7192 5.01562 50.7661 5.01562Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M27.0942 23.1094C25.7817 24.1406 24.4692 25.6406 23.438 27.8437C22.9692 28.875 22.5005 30 22.1255 31.3594C22.313 31.4531 22.5474 31.5937 22.7349 31.6875C22.7817 31.6875 22.7817 31.6875 22.8286 31.6875C23.063 31.7812 23.2974 31.875 23.4849 31.9219C23.813 30.7969 24.188 29.625 24.7036 28.5937C25.313 27.3281 26.063 26.1094 27.0474 25.0781C27.9849 24.0469 29.1567 23.25 30.4224 22.7344C31.3599 22.3594 32.3911 22.125 33.4224 22.0781C33.6099 22.0781 33.7036 22.0312 33.8911 22.0781L33.6567 21.5625L34.4067 22.125C34.313 22.125 34.1255 22.125 33.938 22.0781H33.8911L34.5005 23.4375C34.688 23.3906 34.8286 23.2969 35.0161 23.2969H35.1099L34.0786 20.9062C34.0786 20.9531 30.5161 20.4375 27.0942 23.1094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M34.4062 22.1719L33.6562 21.6094L33.8906 22.125H33.9375C34.125 22.1719 34.3125 22.1719 34.4062 22.1719Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.5161 6.32813C51.3755 6.32813 51.2817 6.375 51.1411 6.375L42.4224 20.3438L38.2974 27L39.0005 28.5469L52.4067 7.03125L52.1255 6.1875L52.1724 6.32813C51.938 6.375 51.7036 6.32813 51.5161 6.32813Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M52.1719 6.375L52.125 6.23438C51.9375 6.28125 51.7031 6.28125 51.5156 6.32812C51.7031 6.32812 51.9375 6.375 52.1719 6.375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.8906 5.15625L51.6094 5.10938L51.75 5.39062L51.8906 5.15625Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.5161 4.92188L51.4224 5.10938H51.6099L51.5161 4.92188Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.7031 5.4375L51.75 5.39063L51.6094 5.10938H51.4219L51.1406 5.53125L51.7031 5.4375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M52.6406 4.6875C52.0312 4.78125 51.375 4.875 50.7656 5.01562L51.4219 5.10937L51.5156 4.92187L51.6094 5.10937L51.8906 5.15625L51.75 5.39062V5.4375L52.6875 5.29688L53.0156 6.14062L53.1094 5.95312C53.1562 5.85937 53.2031 5.76562 53.25 5.625C53.3437 5.29687 53.2031 4.92188 52.9687 4.73438C52.875 4.6875 52.7344 4.6875 52.6406 4.6875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M35.9531 25.3594L35.1094 24.8906L35.3906 25.5C35.4375 25.5 35.4844 25.4531 35.5312 25.4531C35.6719 25.4063 35.8594 25.3594 35.9531 25.3594Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.75 5.4375V5.39062L51.7031 5.4375H51.75Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.0312 28.2188H37.3125L37.1719 27.9844L37.0312 28.2188Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.5469 28.2188L37.4063 28.4531L37.3125 28.2188H37.0312L37.1719 27.9844L35.5313 24.3281C35.3906 24.375 35.1562 24.4219 34.875 24.4687L35.0625 24.8906L35.9062 25.3594C35.8125 25.3594 35.625 25.4062 35.4844 25.4531C35.4375 25.4531 35.3906 25.5 35.3438 25.5L36.9375 29.1094C37.0313 29.2969 37.1719 29.4375 37.3125 29.5313C37.5469 29.6719 37.875 29.6719 38.1562 29.5781L37.5469 28.2188Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M50.813 5.48437C50.813 5.53125 50.8599 5.53125 50.8599 5.57812L51.0942 5.53125L51.3755 5.0625L50.7192 4.96875C50.6255 4.96875 50.5786 5.01562 50.4849 5.01562C50.6255 5.20312 50.7192 5.34375 50.813 5.48437Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M38.6255 29.2031L39.0005 28.5937L38.2974 27.0469L38.2036 27.1406L38.7192 28.2656L37.5942 28.2188L38.2036 29.5312C38.3442 29.4844 38.5317 29.3906 38.6255 29.2031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.1406 5.53125L50.9062 5.57812C50.9531 5.625 51 5.71875 51 5.76562L51.1406 5.53125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.8911 5.57812L52.1255 6.23438C52.3599 6.1875 52.5942 6.1875 52.8286 6.14063L51.8911 5.57812Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.2344 6.23438L51.7031 5.48438L51.1406 5.57812L51 5.8125C51.0469 5.90625 51.1406 6.09375 51.2344 6.23438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.75 5.4375L52.125 6.23437L51.8906 5.57812L52.8281 6.14063C52.5937 6.1875 52.3594 6.1875 52.125 6.23437L52.4063 7.07812L52.9688 6.14063L52.6406 5.29688L51.75 5.4375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.5937 28.2188L38.7188 28.2656L38.2031 27.1406L37.5469 28.2188H37.5937Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M35.1094 23.3438H35.0156C34.8281 23.3438 34.6406 23.3906 34.5 23.4844L34.9219 24.4688C35.2031 24.375 35.4375 24.3281 35.5781 24.3281L35.1094 23.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.2349 6.23438L51.188 6.32812C51.2817 6.32812 51.4224 6.32812 51.5161 6.32812C51.7036 6.28125 51.938 6.28125 52.1255 6.23438L51.7505 5.4375H51.7036L51.2349 6.23438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M51.5156 6.32812C51.4219 6.32812 51.2812 6.32812 51.1875 6.32812L51.1406 6.42188C51.2344 6.375 51.375 6.32812 51.5156 6.32812Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M24.9844 1.3125L25.3594 2.34375L26.0625 1.45312L24.9844 1.3125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M27.5625 4.82812C27.375 4.17188 27.1406 3.46875 26.8594 2.8125C26.3906 2.71875 25.9219 2.67188 25.4531 2.57812L26.9063 6.1875C27.3281 6.28125 27.7031 6.375 28.125 6.46875C27.9375 5.95312 27.75 5.39062 27.5625 4.82812Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M28.0786 3.04688H28.4536C28.5005 3.09375 28.5005 3.09375 28.5474 3.14062C29.6724 3.32812 30.7974 3.51562 31.9224 3.70312C34.1255 4.07812 36.3755 4.45312 38.6255 4.78125C40.8755 5.10938 43.1255 5.4375 45.3755 5.71875C45.563 5.76562 45.7505 5.76562 45.9849 5.8125C47.4849 5.57812 49.0317 5.29688 50.5786 5.0625C50.5786 5.01563 50.5317 5.01563 50.5317 4.96875L26.3442 1.5C26.5317 1.92188 26.7192 2.39062 26.8599 2.8125C27.2817 2.90625 27.7036 2.95312 28.0786 3.04688Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.3438 1.5L26.0156 1.45312L25.3594 2.34375L25.4531 2.57812C25.9219 2.67188 26.3906 2.76562 26.8594 2.8125C26.7188 2.39062 26.5313 1.92188 26.3438 1.5Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M42.2817 19.8281C42.3286 20.0156 42.4224 20.2031 42.4692 20.3906L51.1411 6.42188C50.9536 6.46875 50.7661 6.46875 50.5786 6.51562L42.2817 19.8281Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M50.8594 5.57812C50.8594 5.53125 50.8125 5.53125 50.8125 5.48437C50.7188 5.34375 50.625 5.15625 50.5313 5.01562C48.9844 5.25 47.4844 5.53125 45.9375 5.76563C46.6406 5.85938 47.3438 5.90625 48.0469 6L50.8594 5.57812Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M50.1094 6.23438C50.2031 6.1875 50.25 6.14062 50.3438 6.04687L50.2031 6.23438C50.3438 6.23438 50.5313 6.28125 50.6719 6.28125L50.9531 5.8125C50.9062 5.76562 50.8594 5.67188 50.8594 5.625L48.0469 6.04687C48.75 6.09375 49.4531 6.14063 50.1094 6.23438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M50.6719 6.28125C50.8594 6.28125 51 6.32812 51.1875 6.32812L51.2344 6.23438C51.1406 6.09375 51.0938 5.95312 51 5.8125L50.6719 6.28125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M50.5781 6.46875C50.7656 6.42188 50.9531 6.42188 51.1406 6.375L51.1875 6.28125C51 6.28125 50.8594 6.28125 50.6719 6.23438L50.5781 6.46875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M15.2812 19.5C15.6562 18.7969 16.0313 18.0938 16.5 17.4375C16.7344 17.1094 16.9688 16.7812 17.2031 16.4531C16.9688 15.7031 16.7344 15 16.5469 14.2969C15.2344 15.7031 14.0625 17.4375 13.0312 19.5C13.7812 19.4531 14.5312 19.4531 15.2812 19.5Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M18.7969 14.625C19.6406 13.7344 20.5781 12.9375 21.5625 12.2344C22.5469 11.4844 23.5781 10.8281 24.7031 10.2656C25.2656 9.98438 25.8281 9.70313 26.3906 9.46875C26.6719 9.375 26.9531 9.23438 27.2344 9.14063L27.6562 9L27.8906 8.90625L28.0312 8.85938H28.0781H28.125C28.2188 8.85938 28.2656 8.8125 28.3594 8.76563C28.5 8.67188 28.6406 8.53125 28.7344 8.39062C28.5469 7.78125 28.3594 7.125 28.125 6.51562C27.7031 6.42187 27.3281 6.32813 26.9063 6.23438L27.2813 7.17188L27.4219 7.125C27.4688 7.07812 27.5156 7.07813 27.5625 7.07813H27.6094H27.5625L27.4219 7.125C27.375 7.125 27.375 7.17188 27.3281 7.17188C27.3281 7.17188 27.3281 7.17187 27.2813 7.21875L27.5156 7.73438C27.5156 7.73438 21.4219 8.95313 16.5469 14.2969C16.7344 15 16.9688 15.75 17.2031 16.4531C17.6719 15.7969 18.2344 15.1875 18.7969 14.625Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M27.4224 7.125L27.2817 7.17188V7.21875C27.2817 7.21875 27.2817 7.21875 27.3286 7.17188C27.3755 7.17188 27.3755 7.125 27.4224 7.125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M42.2812 19.8281L38.1094 26.5781L38.3437 27.0469L42.4687 20.3906C42.375 20.1563 42.3281 19.9687 42.2812 19.8281Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M35.7187 23.25C36.0469 23.2031 36.4219 23.3438 36.6094 23.5781L35.3906 20.7656C35.2969 20.4844 35.0156 20.2969 34.6875 20.25C34.4531 20.2031 34.2188 20.2031 33.9844 20.2031C33.7969 20.2031 33.5625 20.2031 33.375 20.2031C32.9531 20.25 32.5312 20.2969 32.1094 20.3438C31.3125 20.4844 30.4688 20.6719 29.7188 21C28.6406 21.4688 27.6094 22.125 26.6719 22.875C26.8125 22.9688 26.9531 23.0625 27.0937 23.1094C30.5156 20.4375 34.0781 20.9531 34.0781 20.9531L35.1094 23.3438L35.3438 23.2969C35.4375 23.2969 35.5312 23.25 35.7187 23.25Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M35.7656 24.2812C35.7656 24.2812 35.6719 24.2813 35.5781 24.3281L37.2187 27.9844L37.3594 27.75L35.7656 24.2812Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.4063 28.4531L37.5469 28.2188H37.3125L37.4063 28.4531Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.3594 27.7031L37.1719 27.9844L37.3125 28.2188H37.5469L37.3594 27.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M38.0156 26.6719L38.2031 27.1406L38.2969 27.0469L38.0625 26.5312L38.0156 26.6719Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.3594 27.7031L38.0156 26.625L36.6562 23.5313C36.4219 23.2969 36.0938 23.2031 35.7656 23.2031C35.5781 23.2031 35.4844 23.25 35.3906 23.25L35.1562 23.2969L35.5781 24.2812C35.7188 24.2812 35.7656 24.2344 35.7656 24.2344L37.3594 27.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.3599 27.7031L37.5474 28.2188L38.2036 27.1406L38.0161 26.6719L37.3599 27.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.25 29.7656C11.0625 29.3906 10.8281 29.0156 10.6406 28.5938C10.5938 29.0156 10.5938 29.4844 10.5469 29.9531C10.7344 29.9062 10.875 29.8594 11.0625 29.8125C11.1563 29.8125 11.2031 29.8125 11.25 29.7656Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.2344 29.5781C12.5156 27.7031 12.9375 25.875 13.4531 24.0469C13.5938 23.4844 13.8281 22.875 14.0156 22.3125L14.3438 21.4688C14.4844 21.1875 14.5781 20.9063 14.7188 20.625C14.9063 20.25 15.0938 19.875 15.2812 19.5C14.5312 19.4531 13.7813 19.4531 13.0781 19.5C11.8594 21.9844 11.0156 25.0312 10.6875 28.6406C10.875 29.0156 11.0625 29.4375 11.2969 29.8125C11.5781 29.6719 11.9063 29.625 12.2344 29.5781Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M22.9687 27.8438C22.5 28.9219 22.0781 30.0469 21.75 31.1719C21.8906 31.2188 22.0312 31.3125 22.1719 31.3594C22.5469 30.0469 22.9687 28.875 23.4844 27.8438C23.3906 27.7031 23.2969 27.6094 23.2031 27.4688C23.0625 27.6094 23.0156 27.7031 22.9687 27.8438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.1562 27.5156C23.25 27.6563 23.3437 27.75 23.4375 27.8906C24.5156 25.6875 25.7812 24.1875 27.0937 23.1563C26.9531 23.0625 26.8125 22.9688 26.6719 22.9219C26.3437 23.2031 25.9687 23.5313 25.6875 23.8594C24.6562 24.8906 23.7656 26.1562 23.1562 27.5156Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M18.375 19.5469C18.0938 18.8906 17.8125 18.1875 17.5313 17.4844C17.1094 18.1406 16.6875 18.8438 16.3594 19.5469C16.9688 19.5938 17.5312 19.6875 18.1406 19.7812C18.2344 19.7344 18.3281 19.6406 18.375 19.5469Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M18.3755 19.5469C18.2817 19.6406 18.2349 19.6875 18.1411 19.7813C18.188 19.7813 18.2349 19.7812 18.2817 19.8281C18.3286 19.7812 18.3755 19.7344 18.4224 19.6406C18.4224 19.6406 18.4224 19.5938 18.3755 19.5469Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M18.7031 19.2188C18.75 19.1719 18.7969 19.125 18.8438 19.0781C21.5625 15.375 24.7969 12.0938 28.8281 9.79688L29.2969 9.51562C25.9688 10.7813 22.5 12.0938 19.9219 14.5781C19.0312 15.4688 18.2812 16.4531 17.5781 17.5313C17.8125 18.2344 18.0937 18.8906 18.4219 19.5938C18.5156 19.4531 18.6094 19.3125 18.7031 19.2188Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M18.3755 19.5469C18.3755 19.5938 18.4224 19.6406 18.4224 19.6406C18.563 19.4531 18.7036 19.2656 18.8442 19.0312C18.7974 19.0781 18.7505 19.125 18.7036 19.1719C18.6099 19.3125 18.5161 19.4531 18.3755 19.5469Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M13.0312 28.6406C13.5937 26.7187 14.4375 24.9375 15.4687 23.25C16.2187 22.0312 17.1562 20.8594 18.1406 19.7812C17.5312 19.6875 16.9688 19.5937 16.3594 19.5469C16.3125 19.6406 16.2656 19.7344 16.2187 19.875C14.6719 22.9219 13.4531 26.1562 12.6562 29.4844C12.7031 29.4844 12.75 29.4844 12.7969 29.4844C12.7969 29.4375 12.8437 29.3906 12.8437 29.3906C12.8906 29.1094 12.9844 28.875 13.0312 28.6406Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M15.4688 23.25C14.4375 24.9375 13.5937 26.7187 13.0312 28.6406C12.9844 28.875 12.8906 29.1094 12.8438 29.3437C14.4375 26.0625 16.2188 22.7812 18.3281 19.8281C18.2812 19.8281 18.2344 19.8281 18.1875 19.7812C17.1563 20.8594 16.2188 22.0312 15.4688 23.25Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M41.0156 16.9219C41.4375 17.7187 41.8125 18.5625 42.1406 19.3594L49.4531 7.35938L50.0625 6.51562C49.9219 6.51562 49.7812 6.5625 49.6875 6.5625C45.9375 9.32812 42.9844 12.8906 41.0156 16.9219Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M50.0156 6.51562L50.25 6.23438C50.2031 6.23438 50.1562 6.23438 50.1562 6.23438C49.9687 6.375 49.8281 6.46875 49.6406 6.60938C49.7344 6.5625 49.875 6.5625 50.0156 6.51562Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M38.2974 25.6406L42.0942 19.3594C41.7661 18.5156 41.3911 17.7188 40.9692 16.9219C39.6567 19.6406 38.7192 22.5938 38.2974 25.6406Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M50.3438 6.04688C50.25 6.09375 50.2031 6.14063 50.1094 6.23438C50.1562 6.23438 50.2031 6.23438 50.2031 6.23438L50.3438 6.04688Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M28.8281 6.70312C29.3438 6.89062 29.9063 7.07812 30.4219 7.26562C30.5156 5.71875 29.8594 4.125 28.5469 3.09375C28.4063 3.04687 28.2656 3.04687 28.0781 3H27.2344L28.8281 6.70312Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M30.1406 8.39063C30.1875 8.39063 30.1875 8.39063 30.2344 8.39063C30.3281 8.01563 30.4219 7.6875 30.4219 7.3125C29.9063 7.07813 29.3437 6.89063 28.8281 6.75L29.7188 8.8125C29.7656 8.57812 29.9063 8.39063 30.1406 8.39063Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M30.2344 8.39062C30.1875 8.39062 30.1875 8.39062 30.1406 8.39062C29.9063 8.39062 29.7656 8.57813 29.7188 8.76563L29.9062 9.1875C30.0469 8.90625 30.1406 8.67187 30.2344 8.39062Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M28.4531 3.04688H28.0781C28.2188 3.09375 28.3594 3.09375 28.5469 3.14062C28.5 3.09375 28.5 3.09375 28.4531 3.04688Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M24.0469 37.5937C24.7031 38.3437 25.2188 39.1875 25.5469 40.0781C27.0469 44.25 25.0781 49.5 22.3594 51.6562C22.2188 51.75 22.0312 51.7969 21.8906 51.7031C21.75 51.6094 21.6562 51.4688 21.6562 51.2812C21.8438 49.4062 21.4688 47.8594 20.7188 47.1562C19.1719 47.7187 18.1406 48.1875 16.9688 50.2031C16.6406 50.7656 16.4531 51.3281 16.2656 51.9844C15.8438 53.25 15.375 54.6562 13.8281 55.8281C13.8281 55.7812 13.7344 55.8281 13.6406 55.8281C13.5469 55.8281 13.5 55.8281 13.4063 55.7812C13.2656 55.6875 13.1719 55.5469 13.1719 55.3594C13.3594 52.4531 10.7344 49.9219 8.95312 48.2344L8.57812 47.9062C5.85937 45.2812 5.01563 42.2344 6.14063 39.0938C7.07813 36.375 9.32812 34.4063 12.0469 33.6563C12.0938 33.2813 12.1406 32.8594 12.1875 32.4844L10.9219 32.3438C8.0625 33.5625 5.90625 36 5.0625 39.0469C4.82813 39.8438 4.73437 40.6406 4.78125 41.4844C4.82812 42.3281 4.92188 43.1719 5.15625 44.0156C5.625 45.6563 6.46875 47.2031 7.54688 48.5156C8.10938 49.2188 8.71875 49.875 9.375 50.5781C10.0312 51.3281 10.6875 52.0781 11.2969 52.875C12 53.7656 12.4688 54.7969 12.6563 55.9219C12.75 56.4844 12.75 57.0938 12.6563 57.6562C13.0781 57.5156 13.4531 57.3281 13.8281 57.1406C14.625 56.6719 15.3281 56.0156 15.8438 55.2188C16.4062 54.375 16.9219 53.5312 17.3438 52.5937C17.5781 52.125 17.8125 51.6094 18.1406 51.0938C18.3281 50.8125 18.5156 50.5313 18.7031 50.2969C18.9844 49.9688 19.3125 49.7344 19.6875 49.5938C20.1562 49.4063 20.7188 49.6875 20.9062 50.1562C20.9531 50.3438 21 50.5312 20.9531 50.7187C20.7656 51.7031 20.8125 52.6875 21.0938 53.625C21.1875 53.9531 21.3281 54.2812 21.4688 54.6562C21.7969 54.0469 22.1719 53.4375 22.6406 52.9219C23.1094 52.4062 23.5781 51.9375 24 51.4688C24.4219 51 24.8438 50.625 25.2188 50.2031C25.5938 49.7812 25.9688 49.3125 26.2969 48.8437C26.625 48.4219 26.9531 47.9062 27.2344 47.4375C27.75 46.5 28.125 45.5156 28.2656 44.4375C28.3594 43.9219 28.3594 43.3594 28.3594 42.7969C28.3594 42.6563 28.3594 42.5625 28.3594 42.4219C28.3594 42.3281 28.3594 42.1875 28.3125 42.0469C28.2656 41.7656 28.2188 41.5312 28.125 41.2969C27.8438 40.2187 27.4219 39.1406 26.8594 38.2031C26.7188 37.9219 26.5781 37.6875 26.4375 37.4531C26.2031 37.6406 25.875 37.7812 25.5469 37.7344L24.0469 37.5937Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M22.0786 33.4688L14.0161 32.6719C13.9692 32.9062 13.9692 33.0938 13.9224 33.3281C14.9067 33.2344 15.938 33.2813 17.0161 33.5156C18.563 33.8438 20.0161 34.4062 21.2817 35.2031L24.7505 35.5312V35.4375C24.0005 34.6406 23.1099 33.9844 22.0786 33.4688C22.1255 33.4688 22.1255 33.4688 22.0786 33.4688Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.2192 32.5781L12.188 32.4844C12.1411 32.8594 12.0474 33.2812 12.0474 33.6562C12.3755 33.5625 12.7505 33.4688 13.1255 33.4219C13.1255 33.1406 13.1724 32.8594 13.2192 32.5781Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M22.8286 36.3281C23.2974 36.7031 23.7192 37.125 24.0942 37.5937L25.5942 37.7344C25.9224 37.7813 26.2505 37.6406 26.4849 37.4531C26.2505 37.0781 25.9692 36.7031 25.688 36.375C25.688 36.4687 25.6411 36.5156 25.6411 36.6094L22.8286 36.3281Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M24.8906 35.5313C24.8437 35.4844 24.7969 35.4375 24.7969 35.4375V35.5313H24.8906Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M24.75 35.5313L21.2812 35.2031C21.8438 35.5312 22.3594 35.9063 22.8281 36.3281L25.5937 36.6094C25.5937 36.5156 25.6406 36.4688 25.6406 36.375C25.5469 36.2344 25.4063 36.0937 25.2656 35.9531L24.6094 36.4688L24.75 35.5313Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.125 33.4219C13.4062 33.375 13.6875 33.3281 13.9687 33.3281C14.0156 33.0937 14.0156 32.9062 14.0625 32.6719L13.2656 32.5781C13.1719 32.8594 13.125 33.1406 13.125 33.4219Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M24.6094 36.4688L25.2656 35.9531C25.125 35.8125 25.0312 35.6719 24.8906 35.5312H24.75L24.6094 36.4688Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M12.2813 31.875C12.0938 31.9219 11.9063 31.9688 11.7656 32.0156C11.4844 32.1094 11.2031 32.2031 10.9219 32.3437L12.2344 32.4844C12.2344 32.25 12.2344 32.0625 12.2813 31.875Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M18.2344 31.9687L14.2969 31.5469H14.25C14.2031 31.9219 14.1094 32.25 14.0625 32.625L22.125 33.4219C22.0312 33.375 21.9375 33.3281 21.8906 33.2344C20.6719 32.7187 19.4531 32.25 18.2344 31.9687Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.2188 32.5781C13.2656 32.25 13.3125 31.9688 13.3594 31.6406C12.9844 31.6875 12.6094 31.7812 12.2813 31.875C12.2344 32.0625 12.2344 32.2969 12.1875 32.4844L13.2188 32.5781Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.3599 31.6406C13.313 31.9219 13.2661 32.25 13.2192 32.5781L14.0161 32.6719C14.063 32.2969 14.1099 31.9219 14.2036 31.5938C13.9224 31.5938 13.6411 31.5937 13.3599 31.6406Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M14.25 31.5469L18.1875 31.9687C17.7187 31.875 17.2969 31.7812 16.8281 31.6875C16.0313 31.5469 15.1406 31.5 14.25 31.5469Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M22.4531 56.4375C22.3125 56.25 22.1719 56.0156 22.0312 55.8281C21.9375 56.0625 21.8438 56.2969 21.75 56.5781L22.4531 56.4375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.2031 57.9844L11.4844 58.3125C11.5313 58.1719 11.5313 58.0312 11.5781 57.8906C11.4375 57.9375 11.3438 57.9844 11.2031 57.9844Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M20.7656 56.7656L21.4219 56.625C21.2813 56.4375 21.1406 56.1562 20.9531 55.8281C20.8594 56.1562 20.8125 56.4375 20.7656 56.7656Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.1875 59.25C12.2813 59.0625 12.3281 58.875 12.4219 58.6875C12.2344 58.7344 12.0469 58.7813 11.8594 58.8281L12.1875 59.25Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.9536 35.9531C28.8286 38.25 29.813 41.0156 29.8599 42.5625C30.0005 46.4063 28.3599 48.75 26.6255 50.7187C24.938 52.6406 23.0161 53.6719 22.0317 55.8281C22.1724 56.0625 22.313 56.25 22.4536 56.4375L21.7505 56.5781C21.7036 56.7187 21.6567 56.8125 21.6567 56.9531C21.6567 56.9531 21.563 56.8594 21.4224 56.625L20.7661 56.7656C20.813 56.4375 20.8599 56.1562 20.9536 55.8281C20.438 54.8906 19.8755 53.4844 19.8286 51.9844C19.7817 52.0312 19.7817 52.0781 19.7349 52.125C19.5005 52.5 19.313 52.9219 19.0786 53.3438C19.1255 53.625 19.1724 53.8594 19.2661 54.1406C19.4067 54.7031 19.6411 55.3125 19.9224 55.875C20.2036 56.4375 20.4849 57 20.8599 57.5156C20.9536 57.7031 21.0942 57.7969 21.2817 57.8906C21.7505 58.0781 22.2661 57.8906 22.4536 57.4219L22.5474 57.2344C22.9692 56.25 23.6255 55.3594 24.4224 54.6562C25.2661 53.9531 26.2974 53.2031 27.2817 52.2188C27.7974 51.75 28.2192 51.2344 28.6411 50.7187C29.063 50.1562 29.438 49.5938 29.813 48.9844C30.563 47.7188 31.0317 46.3594 31.2192 44.9063C31.313 44.2031 31.3599 43.5 31.313 42.7969C31.313 42.6563 31.313 42.4219 31.2661 42.2344C31.2192 42.0469 31.2192 41.8594 31.1724 41.6719C31.0786 41.2969 30.9849 40.9219 30.8911 40.5937C30.4692 39.2812 29.8599 38.0156 29.1099 36.8437C28.5474 36 27.938 35.2031 27.2349 34.5C27.188 34.6406 27.1411 34.7813 27.0942 34.9219L26.9536 35.9531Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M18.9845 51.4688C17.7188 53.4375 16.7345 57.5625 12.422 58.6875C12.3751 58.875 12.2813 59.0625 12.1876 59.25L11.8126 58.7813C11.6251 58.8281 11.4376 58.8281 11.297 58.875C11.3438 58.6875 11.4376 58.5 11.4845 58.3125L11.2032 57.9844C11.3438 57.9844 11.4376 57.9375 11.5782 57.9375C12.7501 52.2656 3.79697 50.5313 3.46884 41.3906C3.32822 37.7344 5.71884 33.3281 10.0313 31.3594C9.98447 30.9844 9.93759 30.6094 9.93759 30.1875C8.34384 30.7969 6.93759 31.7813 5.71884 32.9531C4.21884 34.5469 3.14072 36.375 2.57822 38.4375C2.29697 39.4688 2.15634 40.5469 2.20322 41.625C2.25009 42.6563 2.39072 43.6875 2.67197 44.7188C3.23447 46.7344 4.26572 48.5625 5.62509 50.1562C6.89072 51.7031 8.39072 52.9688 9.46884 54.3281C9.98447 54.9375 10.3595 55.6406 10.5938 56.3906C10.7345 57.1406 10.6876 57.9375 10.4532 58.6406L10.4063 58.7344C10.4063 58.875 10.3595 59.0156 10.4063 59.1562C10.4532 59.625 10.9688 59.9531 11.4376 59.8594C12.6563 59.7188 13.7813 59.3438 14.8126 58.7344C15.8438 58.0781 16.6876 57.2812 17.3907 56.2969C18.047 55.4062 18.6095 54.4219 19.0782 53.4375C19.0782 53.3906 19.1251 53.3906 19.1251 53.3438C19.0782 52.9688 19.0313 52.6406 18.9845 52.2656C18.9845 51.9844 18.9845 51.75 18.9845 51.4688Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M19.6406 50.7187L19.9219 51C19.9687 50.8125 19.9687 50.6719 20.0156 50.4844C19.875 50.5312 19.7344 50.625 19.6406 50.7187Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M19.875 51.9844C19.875 51.6563 19.875 51.3281 19.9219 51L19.6406 50.7188C19.4063 50.9062 19.2188 51.1406 18.9844 51.4688C18.9844 51.75 18.9844 51.9844 18.9844 52.2656C19.0312 52.6406 19.0781 53.0156 19.125 53.3438C19.3594 52.9219 19.5469 52.4531 19.7813 52.125C19.8281 52.0781 19.8281 52.0313 19.875 51.9844Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.25 32.9062C23.2969 32.9062 23.2969 32.9531 23.3438 32.9531C23.3906 32.7656 23.4375 32.625 23.3906 32.4375C23.3438 32.5312 23.3438 32.625 23.2969 32.7656C23.2969 32.8125 23.25 32.8594 23.25 32.9062Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.3906 32.4375C23.4375 32.625 23.3906 32.7656 23.3438 32.9531C23.9531 33.2813 24.5156 33.6562 25.0781 34.0781C25.1719 33.7031 25.3125 33.3281 25.4062 33C24.7969 32.625 24.1875 32.2969 23.5313 32.0156C23.4375 32.1563 23.4375 32.2969 23.3906 32.4375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.4375 33.75C26.3906 33.7031 26.2969 33.6562 26.25 33.6094C26.1094 33.9844 26.0156 34.4063 25.9219 34.8281C26.2969 35.1563 26.625 35.5313 26.9531 35.9062L27.1406 34.875C27.1875 34.7344 27.2344 34.5938 27.2812 34.4531C27 34.2656 26.7188 33.9844 26.4375 33.75Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M25.0781 34.0781C25.4063 34.3125 25.6875 34.5938 25.9688 34.8281C26.0625 34.4062 26.1562 33.9844 26.2969 33.6094C26.0156 33.375 25.7344 33.1875 25.4063 32.9531C25.2656 33.3281 25.1719 33.7031 25.0781 34.0781Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.4219 30.6094C12.4688 30.6094 12.5156 30.6094 12.5625 30.5625C12.6562 30.1875 12.75 29.8125 12.8438 29.4375C12.8438 29.4375 12.8437 29.4375 12.7969 29.4375C12.7031 29.625 12.6094 29.8125 12.5156 30C12.5625 29.8125 12.6094 29.625 12.6563 29.4375C12.5156 29.4375 12.375 29.4844 12.2344 29.5313C12.1875 29.8594 12.1406 30.1875 12.0938 30.5156L12.4219 30.6094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M14.7188 29.3438C14.625 29.6719 14.5312 30.0469 14.4375 30.375C16.125 30.3281 17.9531 30.6563 19.9219 31.3594L21.6094 31.5469C21.6562 31.4063 21.6562 31.2656 21.7031 31.1719C20.2969 30.4688 18.7969 29.9531 17.25 29.625C16.4531 29.4375 15.5625 29.3438 14.7188 29.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M13.9219 29.3438C13.5469 29.3438 13.1719 29.3906 12.8438 29.4375C12.75 29.8125 12.6563 30.1875 12.5625 30.5625C12.9375 30.5156 13.2656 30.4219 13.6406 30.4219C13.7344 30.0469 13.8281 29.7188 13.9219 29.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M13.9219 29.3438C13.8281 29.6719 13.7344 30.0469 13.6406 30.4219C13.9219 30.375 14.2031 30.375 14.4375 30.375C14.5312 30.0469 14.625 29.6719 14.7188 29.3438C14.4375 29.3437 14.1563 29.3438 13.9219 29.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M10.5474 31.1719C10.5474 30.75 10.5474 30.375 10.5942 30C10.3599 30.0938 10.1724 30.1406 9.93799 30.2344C9.98486 30.6094 9.98486 31.0312 10.0317 31.4062C10.2192 31.3125 10.3599 31.2188 10.5474 31.1719Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M22.4067 31.6875L21.9849 31.9687C21.938 32.0625 21.938 32.1563 21.8911 32.25C22.0317 32.3438 22.2192 32.3906 22.3599 32.4844L22.4536 32.5781C22.688 32.6719 22.9692 32.8125 23.2036 32.9062C23.2036 32.8594 23.2505 32.8125 23.2505 32.7656C23.2974 32.6719 23.2974 32.5781 23.3442 32.4375C23.2974 32.1562 23.1099 31.9219 22.8286 31.7813C22.7817 31.7813 22.7349 31.7344 22.688 31.7344C22.6411 31.6875 22.5005 31.6875 22.4067 31.6875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M22.4536 31.6406L22.4067 31.6875C22.5474 31.6875 22.6411 31.6875 22.7817 31.7344C22.5942 31.5937 22.3599 31.5 22.1724 31.4062C22.1724 31.5 22.1255 31.5469 22.1255 31.6406H22.4536Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.3906 32.4375C23.4375 32.2969 23.4844 32.1094 23.5313 31.9688C23.2969 31.875 23.1094 31.7812 22.875 31.7344C22.8281 31.7344 22.8281 31.7344 22.7812 31.7344C22.8281 31.7344 22.875 31.7813 22.9219 31.7813C23.1563 31.9219 23.3438 32.1562 23.3906 32.4375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M22.4062 31.6875L22.4531 31.6406L22.0781 31.5938C22.0781 31.6406 22.0312 31.7344 22.0312 31.7812C22.125 31.7344 22.2656 31.6875 22.4062 31.6875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.9844 31.9688L22.4062 31.6875C22.2656 31.6875 22.1719 31.7344 22.0312 31.7813C22.0312 31.8281 21.9844 31.9219 21.9844 31.9688Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.6724 30.5156L11.1099 30.4688L11.438 30.8438C11.5786 30.7969 11.6724 30.75 11.813 30.75C11.7661 30.6563 11.7192 30.6094 11.6724 30.5156Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.1094 30.4687L11.6719 30.5156C11.5312 30.2812 11.3906 30 11.25 29.7656C11.2031 29.7656 11.1563 29.7656 11.1094 29.8125C10.9219 29.8594 10.7813 29.9063 10.5938 29.9531C10.5938 30.3281 10.5469 30.75 10.5469 31.125C10.8281 31.0313 11.1562 30.8906 11.4375 30.7969L11.1094 30.4687Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.0469 30.7031C12.0469 30.6563 12.0469 30.6094 12.0469 30.6094L11.6719 30.5625C11.7188 30.6562 11.7656 30.7031 11.8125 30.7969C11.9063 30.7031 12 30.7031 12.0469 30.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.0474 30.7031C12.188 30.6563 12.2817 30.6563 12.4224 30.6094L12.0942 30.5625C12.0942 30.6094 12.0474 30.6563 12.0474 30.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.2344 29.5781C11.9063 29.625 11.5781 29.7188 11.25 29.8125C11.3906 30.0469 11.5312 30.3281 11.6719 30.5625L12.0469 30.6094C12.1406 30.2344 12.1875 29.9063 12.2344 29.5781Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.5156 32.0156C21.5625 31.875 21.6094 31.6875 21.6563 31.5469L19.9688 31.3594C20.4375 31.5937 20.9531 31.7813 21.5156 32.0156Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.9375 32.25C21.9844 32.1563 21.9844 32.0625 22.0312 31.9688L21.75 32.1562C21.7969 32.1562 21.8437 32.2031 21.9375 32.25Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.6567 32.1094C21.7036 32.1094 21.7036 32.1563 21.6567 32.1094L21.9849 31.9219C21.9849 31.875 22.0317 31.8281 22.0317 31.7344C21.8911 31.875 21.7505 31.9688 21.6567 32.1094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.6094 31.5469L22.0781 31.5938C22.0781 31.5 22.125 31.4531 22.125 31.3594C21.9844 31.2656 21.8438 31.2187 21.7031 31.1719C21.7031 31.3125 21.6563 31.4063 21.6094 31.5469Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.6563 32.1094C21.75 31.9687 21.8906 31.8281 22.0313 31.7812C22.0313 31.7344 22.0781 31.6406 22.0781 31.5937L21.6094 31.5469C21.5625 31.6875 21.5156 31.875 21.4688 32.0156C21.5625 32.0625 21.6094 32.1094 21.6563 32.1094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.5161 30.0469C12.6099 29.8594 12.7036 29.6719 12.7974 29.4844C12.7505 29.4844 12.7036 29.4844 12.6567 29.4844C12.6099 29.6719 12.563 29.8594 12.5161 30.0469Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.5781 57.9375C11.5313 58.0781 11.5312 58.2188 11.4844 58.3594L11.8594 58.8281C12.0469 58.7812 12.2344 58.7344 12.4219 58.6875C12.5156 58.3594 12.6094 58.0312 12.6562 57.7031C12.2812 57.7969 11.9531 57.8906 11.5781 57.9375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.6562 57.6563C12.7499 57.0938 12.7499 56.4844 12.6562 55.9219C12.4687 54.7969 11.9999 53.7656 11.2968 52.875C10.6874 52.0781 10.0312 51.3281 9.37491 50.5781C8.71866 49.875 8.10928 49.2188 7.54678 48.5156C6.46866 47.2031 5.62491 45.6563 5.15616 44.0156C4.92178 43.1719 4.82803 42.3281 4.78116 41.4844C4.73428 40.6406 4.82803 39.8438 5.06241 39.0469C5.85928 36 8.06241 33.5625 10.9218 32.3437H10.8749C10.4062 32.2969 10.0312 31.875 10.0312 31.4062C10.0312 31.4062 10.0312 31.4063 10.0312 31.3594C5.76553 33.3281 3.32803 37.7344 3.46866 41.3906C3.79678 50.5313 12.7499 52.2656 11.578 57.9375C11.953 57.8906 12.2812 57.7969 12.6562 57.6563Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M20.3906 51.4219L19.9219 51C19.875 51.3281 19.875 51.6562 19.875 51.9844C20.0156 51.75 20.1562 51.5625 20.3906 51.4219Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M18.9844 51.4688C19.1719 51.1406 19.4063 50.9062 19.6406 50.7187L19.1719 50.2969C19.0781 50.6719 18.9844 51.0469 18.9844 51.4688Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.7656 36.8438C26.7187 37.0781 26.5781 37.3125 26.4375 37.4531C26.5781 37.6875 26.7656 37.9688 26.8594 38.2031C27.4219 39.1406 27.8438 40.2188 28.125 41.2969C28.2188 41.5313 28.2656 41.7656 28.3125 42.0469C28.3594 42.1875 28.3594 42.3281 28.3594 42.4219C28.3594 42.5625 28.3594 42.6563 28.3594 42.7969C28.3594 43.3594 28.3594 43.9219 28.2656 44.4375C28.125 45.5156 27.75 46.5 27.2344 47.4375C26.9531 47.9062 26.625 48.4219 26.2969 48.8437C25.9687 49.3125 25.5937 49.7812 25.2187 50.2031C24.8437 50.625 24.4219 51 24 51.4688C23.5781 51.9375 23.1094 52.4063 22.6406 52.9219C22.125 53.4375 21.7969 54 21.4688 54.6562C21.6562 55.0781 21.8437 55.4531 22.0781 55.8281C23.0625 53.6719 24.9375 52.6406 26.6719 50.7187C28.4063 48.75 30.0469 46.4063 29.9062 42.5625C29.8594 40.9688 28.875 38.25 27 35.9531L26.7656 36.8438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.4688 54.6563C21.3281 54.3281 21.1875 54 21.0938 53.625C20.8125 52.6875 20.7656 51.7031 20.9531 50.7188C21 50.5313 20.9531 50.3438 20.9062 50.1563C20.7188 49.6875 20.1563 49.4063 19.6875 49.5938C19.3125 49.7344 18.9844 49.9688 18.7031 50.2969C18.5156 50.5313 18.3281 50.8125 18.1406 51.0938C17.8125 51.6094 17.5781 52.125 17.3438 52.5938C16.9219 53.5313 16.4062 54.375 15.8437 55.2188C15.3281 56.0156 14.625 56.6719 13.8281 57.1406C13.4531 57.375 13.0781 57.5156 12.6563 57.6563C12.6094 57.9844 12.5156 58.3125 12.4219 58.6406C16.7344 57.5625 17.7656 53.4375 18.9844 51.4219C18.9844 51 19.0781 50.625 19.1719 50.25L19.6406 50.6719C19.7813 50.5781 19.875 50.4844 20.0156 50.4375C19.9688 50.625 19.9688 50.7656 19.9219 50.9531L20.3906 51.375C20.1563 51.5156 20.0156 51.7031 19.875 51.9375C19.9219 53.4375 20.4844 54.8438 21 55.7813C21.0938 55.4063 21.2812 55.0313 21.4688 54.6563C21.4688 54.6563 21.4219 54.7031 21.4688 54.6563Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.2969 58.875C11.4844 58.875 11.6719 58.8281 11.8125 58.7813L11.4375 58.3125C11.4375 58.5 11.3437 58.6875 11.2969 58.875Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.4224 54.7031C21.2349 55.0781 21.0942 55.4531 20.9536 55.8281C21.1411 56.1563 21.2817 56.4375 21.4224 56.625L21.7505 56.5781C21.8442 56.2969 21.938 56.0625 22.0317 55.8281C21.7974 55.4531 21.6099 55.0313 21.4224 54.6562C21.4692 54.6562 21.4224 54.7031 21.4224 54.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.6567 56.9531C21.7036 56.8125 21.7505 56.7187 21.7505 56.5781L21.4224 56.625C21.563 56.8594 21.6567 56.9531 21.6567 56.9531Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M22.7812 33.4219C22.9687 33.375 23.1563 33.2344 23.2969 33.0469C23.2969 33 23.2969 33 23.3438 32.9531C23.2969 32.9531 23.2969 32.9062 23.25 32.9062C23.1562 33.1406 22.9687 33.3281 22.7812 33.4219Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.2974 33.0469C23.1567 33.2344 22.9692 33.3281 22.7817 33.4219H22.7349C22.5942 33.4688 22.4536 33.4687 22.313 33.4687H22.1255C22.1255 33.4687 22.1255 33.4687 22.1724 33.4687C23.1567 33.9844 24.0474 34.6406 24.8442 35.4375L25.0317 34.3125C25.0786 34.2187 25.0786 34.1719 25.1255 34.0781C24.6099 33.6562 24.0005 33.2813 23.3911 32.9531C23.2974 33 23.2974 33 23.2974 33.0469Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M26.438 37.4531C26.6255 37.3125 26.7661 37.0781 26.7661 36.8437V36.7969L26.9536 35.9531C26.6255 35.5781 26.2974 35.2031 25.9224 34.875C25.8286 35.3438 25.688 35.8594 25.6411 36.4219C25.9224 36.7031 26.1567 37.0781 26.438 37.4531Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M25.6875 35.625L24.8906 35.5312C25.0312 35.6719 25.125 35.8125 25.2656 35.9531L25.6875 35.625Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M24.9844 34.3125L24.7969 35.4375C24.8437 35.4844 24.8906 35.5313 24.8906 35.5313L25.6875 35.625L25.2656 35.9531C25.4062 36.0937 25.5 36.2344 25.6406 36.375C25.7344 35.8594 25.8281 35.3438 25.9219 34.8281C25.6406 34.5469 25.3594 34.3125 25.0312 34.0781C25.0312 34.1719 25.0312 34.2187 24.9844 34.3125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.4219 30.6094H12.5156V30.5625C12.5156 30.6094 12.4687 30.6094 12.4219 30.6094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M14.4375 30.375C14.3906 30.5156 14.3906 30.6562 14.3438 30.7969L19.9219 31.3594C17.9531 30.6562 16.125 30.3281 14.4375 30.375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.5625 30.5625C12.5625 30.6094 12.5625 30.6094 12.5625 30.5625L13.5938 30.7031C13.5938 30.6094 13.6406 30.5156 13.6406 30.4219C13.2656 30.4688 12.8906 30.5156 12.5625 30.5625Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M14.4375 30.375C14.1562 30.375 13.875 30.375 13.6406 30.4219C13.6406 30.5156 13.5938 30.6094 13.5938 30.7031L14.3906 30.7969C14.3906 30.6562 14.4375 30.5156 14.4375 30.375Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M10.875 32.3438C11.2031 32.2031 11.4844 32.1094 11.7656 32.0156C11.9531 31.9688 12.0938 31.9219 12.2813 31.875C12.3281 31.6875 12.3281 31.5469 12.375 31.3594H12.1875L11.9531 31.3125C11.9531 31.3594 11.9531 31.3594 11.9531 31.4062L11.8594 31.3125L10.5469 31.1719C10.3594 31.2188 10.2188 31.3125 10.0312 31.4062C10.0312 31.4062 10.0312 31.4062 10.0312 31.4531C10.0312 31.875 10.4063 32.2969 10.875 32.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.9531 31.4062C11.9531 31.3594 11.9531 31.3594 11.9531 31.3125H11.8594L11.9531 31.4062Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.4219 32.3438V32.2969L18.2344 31.9688C19.5 32.2969 20.7187 32.7188 21.8437 33.2812C21.6094 33.0469 21.4687 32.6719 21.6094 32.2969H21.5156L21.4219 32.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M23.2498 32.9062C23.0154 32.7656 22.781 32.6719 22.4998 32.5781L22.406 32.4844C22.2185 32.3906 22.0779 32.3438 21.9373 32.25C21.9373 32.2969 21.9373 32.2969 21.8904 32.3437L21.6092 32.2969C21.5154 32.625 21.6092 33.0469 21.8435 33.2813C21.8904 33.2813 21.8904 33.3281 21.9373 33.3281C22.1717 33.4688 22.4529 33.4688 22.6873 33.4219H22.7342C22.9685 33.3281 23.156 33.1406 23.2498 32.9062Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.9375 33.3281C21.8906 33.3281 21.8906 33.2812 21.8438 33.2812C21.9375 33.3281 21.9844 33.4219 22.0781 33.4688H22.2656C22.4063 33.5156 22.5469 33.4688 22.6875 33.4219C22.4531 33.4688 22.1719 33.4688 21.9375 33.3281Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.4224 32.3438L21.4692 32.2969H21.4224V32.3438Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M13.3599 31.6406C13.3599 31.5937 13.4067 31.5 13.4067 31.4531L12.3755 31.3594C12.3286 31.5469 12.2817 31.6875 12.2817 31.875C12.6567 31.7812 13.0317 31.6875 13.3599 31.6406Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M14.2031 31.5469L13.4063 31.4531C13.4063 31.5 13.3594 31.5938 13.3594 31.6406C13.6406 31.5938 13.9219 31.5938 14.2031 31.5469Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.8125 30.75C11.6719 30.7969 11.5781 30.7969 11.4375 30.8438L11.8594 31.3125H11.9531C11.9531 31.2188 12 31.125 12 31.0313C11.9531 30.9375 11.9063 30.8438 11.8125 30.75Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.8594 31.3125L11.4375 30.8438C11.1094 30.9375 10.8281 31.0312 10.5469 31.1719L11.8594 31.3125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M11.9531 31.3125L12.1875 31.3594C12.1406 31.2656 12.0469 31.1719 12 31.0312C12 31.125 12 31.2188 11.9531 31.3125Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.0005 31.0312C12.0005 30.8906 12.0474 30.7969 12.0474 30.6562C11.9536 30.6562 11.9067 30.7031 11.813 30.7031C11.9067 30.8438 11.9536 30.9375 12.0005 31.0312Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M12.4219 30.6094C12.2812 30.6562 12.1875 30.6562 12.0469 30.7031C12.0469 30.8437 12 30.9375 12 31.0781C12.0469 31.1719 12.1406 31.2656 12.1875 31.4062H12.375C12.4219 31.1719 12.4688 30.8906 12.5156 30.6562L12.4219 30.6094Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.7031 32.1562C21.7031 32.1562 21.7031 32.1093 21.7031 32.1562C21.6563 32.1562 21.6562 32.2031 21.6094 32.2031L21.7031 32.1562Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.6563 32.2031C21.6563 32.2031 21.6562 32.25 21.6094 32.25V32.2969L21.8906 32.3438C21.8906 32.2969 21.8906 32.2969 21.9375 32.25C21.8906 32.2031 21.7969 32.2031 21.75 32.1562L21.6563 32.2031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.6562 32.2031L21.5156 32.2969H21.6094V32.25C21.6094 32.25 21.6094 32.2031 21.6562 32.2031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.4692 32.2969L21.6099 32.2031C21.6099 32.1562 21.6567 32.1562 21.6567 32.1094C21.6099 32.0625 21.563 32.0625 21.4692 32.0156C21.4692 32.1094 21.4224 32.2031 21.4224 32.2969H21.4692Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M21.5156 32.0156C21 31.7813 20.4844 31.5469 19.9688 31.3594L14.3906 30.7969C14.3438 31.0312 14.2969 31.3125 14.25 31.5469H14.2969C15.1875 31.5 16.0312 31.5469 16.9219 31.6875C17.3906 31.7812 17.8125 31.875 18.2813 31.9687L21.4688 32.2969C21.4688 32.2031 21.4688 32.1094 21.5156 32.0156Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M13.5469 30.7031L12.5156 30.6094C12.4688 30.8437 12.4219 31.125 12.375 31.3594L13.4063 31.4531C13.4531 31.2187 13.5 30.9844 13.5469 30.7031Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M14.3438 30.7969L13.5469 30.7031C13.5 30.9375 13.4531 31.2188 13.4062 31.4531L14.2031 31.5469C14.25 31.3125 14.2969 31.0312 14.3438 30.7969Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M7.03133 39.3281C6.04695 42.1406 6.79695 44.8125 9.28133 47.25L9.65633 47.5781C11.3438 49.1719 13.7345 51.5625 14.1095 54.4219C14.9063 53.5781 15.2345 52.6406 15.5626 51.6094C15.797 50.9531 15.9845 50.2969 16.3595 49.6875C17.7188 47.2969 19.0782 46.7812 20.8126 46.1719C20.9532 46.125 21.0938 46.125 21.2345 46.2187C22.172 46.9219 22.7345 48.375 22.7345 50.2031C24.797 47.9531 26.1095 43.7344 24.8438 40.3594C24.422 39.3281 23.7657 38.2969 22.8751 37.4531L12.8907 36.375C12.2813 36.3281 11.8595 35.7656 11.9063 35.1562C11.9063 34.9687 11.9532 34.7813 11.9532 34.5938C9.65633 35.3438 7.8282 36.9844 7.03133 39.3281ZM10.0782 39.2813C10.8282 38.2969 11.8595 37.6406 13.0313 37.2656C14.6251 36.6562 16.4063 36.75 17.9063 37.5C19.3595 38.3437 20.297 40.125 19.8751 41.7187C19.5001 43.125 18.2345 44.0625 17.0626 44.9531C16.5001 45.3281 15.9845 45.7969 15.5157 46.4062C15.1876 46.7344 14.8595 47.6719 14.4845 47.9062C13.9688 48.1875 13.6876 47.2031 13.4063 46.875C12.9845 46.3594 12.5157 45.9375 12.0001 45.5625C10.9688 44.7656 9.84383 43.9219 9.42195 42.7031C9.09383 41.5312 9.3282 40.2656 10.0782 39.2813Z",
						fill: "#FFCA22"
					}), o.a.createElement("path", {
						d: "M19.0781 34.9688C18.375 34.6875 17.6719 34.4531 16.875 34.3125C16.1719 34.1719 15.5156 34.125 14.8125 34.125C14.4844 34.125 14.1563 34.125 13.875 34.1719C13.875 34.2656 13.875 34.3594 13.875 34.4531L19.0781 34.9688Z",
						fill: "#FFCA22"
					}), o.a.createElement("path", {
						d: "M12.891 36.375L22.8753 37.4531C22.4066 36.9844 21.8441 36.5625 21.2816 36.1406L12.9847 35.25C12.9847 34.9219 13.0316 34.5937 13.0785 34.3125C12.7035 34.4062 12.3753 34.5 12.0003 34.5938C12.0003 34.7813 11.9535 34.9688 11.9535 35.1563C11.8597 35.7656 12.2816 36.3281 12.891 36.375Z",
						fill: "#FFCA22"
					}), o.a.createElement("path", {
						d: "M21.2344 36.1406C20.5781 35.6719 19.8281 35.2969 19.0312 34.9687L13.7812 34.4531C13.7812 34.7344 13.7344 35.0156 13.7344 35.25L12.9844 34.3594L13.7812 34.4531C13.7812 34.3594 13.7812 34.2656 13.7812 34.1719C13.5 34.2188 13.2188 34.2187 12.9375 34.3125C12.8906 34.6406 12.8906 34.9219 12.8438 35.25L21.2344 36.1406Z",
						fill: "#FFCA22"
					}), o.a.createElement("path", {
						d: "M13.7812 35.2969C13.7812 35.0156 13.8281 34.7344 13.8281 34.5L13.0312 34.4062L13.7812 35.2969Z",
						fill: "#FFCA22"
					}), o.a.createElement("path", {
						d: "M25.2187 40.2188C26.625 44.0625 24.8906 49.1719 22.1719 51.2813C22.3594 49.125 21.9375 47.3906 20.9062 46.5938C19.125 47.25 17.9531 47.6719 16.6875 49.9219C15.7031 51.7031 15.7969 53.7656 13.6406 55.4062C13.8281 52.0781 10.6875 49.2656 8.9531 47.5781C6.98435 45.6562 5.34373 42.8437 6.60935 39.2344C7.49998 36.7031 9.5156 34.9219 12 34.125C12 33.9844 12.0469 33.7969 12.0469 33.6562C9.3281 34.4531 7.12498 36.375 6.1406 39.0938C5.0156 42.2344 5.85935 45.2812 8.5781 47.9062L8.9531 48.2344C10.7344 49.9219 13.3594 52.4531 13.1719 55.3594C13.1719 55.5469 13.2656 55.6875 13.4062 55.7813C13.5 55.8281 13.5469 55.8281 13.6406 55.8281C13.7344 55.8281 13.8281 55.7812 13.8281 55.8281C15.375 54.6562 15.8437 53.25 16.2656 51.9844C16.4531 51.3281 16.6406 50.7656 16.9687 50.2031C18.1406 48.1875 19.1719 47.7188 20.7187 47.1562C21.4687 47.8594 21.8437 49.4063 21.6562 51.2813C21.6562 51.4688 21.75 51.6094 21.8906 51.7031C22.0312 51.7969 22.2187 51.75 22.3594 51.6562C25.0781 49.5 27.0469 44.25 25.5469 40.0781C25.2187 39.1875 24.7031 38.3437 24.0469 37.5937L23.5312 37.5C24.2812 38.3437 24.8437 39.2344 25.2187 40.2188Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.875 33.75C14.8594 33.6562 15.8906 33.7031 16.9688 33.9375C18.1406 34.1719 19.2656 34.5937 20.3438 35.1094L21.2812 35.2031C20.0156 34.4062 18.5625 33.8437 17.0156 33.5156C15.9844 33.2812 14.9531 33.2344 13.9219 33.3281C13.9219 33.4687 13.9219 33.6094 13.875 33.75Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.0781 33.8906C13.0781 33.75 13.125 33.5625 13.125 33.4219C12.75 33.4688 12.4219 33.5625 12.0469 33.6562C12.0469 33.7969 12 33.9844 12 34.125C12.3281 34.0312 12.7031 33.9375 13.0781 33.8906Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M23.5313 37.5L24.0469 37.5469C23.6719 37.0781 23.25 36.6563 22.7812 36.2813L22.0781 36.1875C22.6406 36.6094 23.1094 37.0313 23.5313 37.5Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M22.125 36.2344L22.8281 36.3281C22.3594 35.9062 21.8438 35.5312 21.2813 35.2031L20.3438 35.1094C20.9531 35.4375 21.5625 35.8125 22.125 36.2344Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.125 33.4219C13.125 33.5625 13.0781 33.75 13.0781 33.8906C13.3594 33.8438 13.6406 33.7969 13.9219 33.7969C13.9219 33.6563 13.9688 33.5156 13.9688 33.3281C13.6406 33.3281 13.3594 33.375 13.125 33.4219Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M24.8442 40.3594C26.1098 43.7344 24.7973 47.9531 22.7348 50.2031C22.7348 48.375 22.1723 46.9219 21.2348 46.2187C21.0942 46.125 20.9536 46.125 20.813 46.1719C19.0786 46.7812 17.7192 47.2969 16.3598 49.6875C15.9848 50.2969 15.7973 50.9531 15.563 51.6094C15.2348 52.6406 14.9067 53.5781 14.1098 54.4219C13.7348 51.5625 11.3442 49.1719 9.65672 47.5781L9.28172 47.25C6.79735 44.8125 6.04735 42.1406 7.03172 39.3281C7.8286 36.9844 9.65672 35.3438 11.9536 34.5938C11.9536 34.4531 12.0005 34.3125 12.0005 34.1719C9.5161 34.9219 7.50047 36.7031 6.60985 39.2813C5.34422 42.8906 6.98485 45.7031 8.9536 47.625C10.688 49.3125 13.8286 52.125 13.6411 55.4531C15.7973 53.8125 15.7036 51.75 16.688 49.9687C17.9536 47.7187 19.1255 47.2969 20.9067 46.6406C21.938 47.4375 22.3598 49.1719 22.1723 51.3281C24.8911 49.2187 26.6255 44.1094 25.2192 40.2656C24.8442 39.2812 24.2817 38.3906 23.5317 37.5469L22.8755 37.4531C23.7661 38.2969 24.4223 39.3281 24.8442 40.3594Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M14.8125 34.125C15.5156 34.125 16.1719 34.1719 16.875 34.3125C17.625 34.4531 18.375 34.6875 19.0781 34.9687L20.3438 35.1094C19.3125 34.5937 18.1875 34.1719 16.9688 33.9375C15.9375 33.7031 14.8594 33.6562 13.875 33.75C13.875 33.8906 13.875 34.0312 13.8281 34.1719C14.1562 34.125 14.4844 34.125 14.8125 34.125Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M22.875 37.4531L23.5312 37.5469C23.1094 37.0781 22.6406 36.6563 22.125 36.2813L21.2812 36.1875C21.8438 36.5156 22.3594 36.9844 22.875 37.4531Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M11.9531 34.5938C12.2813 34.5 12.6562 34.4062 13.0312 34.3125C13.0312 34.1719 13.0312 34.0312 13.0781 33.8906C12.7031 33.9375 12.375 34.0312 12 34.125C12 34.2656 11.9531 34.4531 11.9531 34.5938Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M21.2344 36.1406L22.0781 36.2344C21.5156 35.8125 20.9063 35.4375 20.2969 35.1094L19.0312 34.9688C19.8281 35.2969 20.5781 35.6719 21.2344 36.1406Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M13.875 34.1719C13.875 34.0313 13.875 33.8906 13.9219 33.75C13.6406 33.7969 13.3594 33.7969 13.0781 33.8437C13.0781 33.9844 13.0312 34.125 13.0312 34.2656C13.3125 34.2656 13.5938 34.2188 13.875 34.1719Z",
						fill: "#FF4500"
					}), o.a.createElement("path", {
						d: "M12.0002 45.5625C12.5158 45.9375 12.9846 46.3593 13.4065 46.875C13.6877 47.2031 13.969 48.1875 14.4846 47.9062C14.8596 47.6718 15.1877 46.7343 15.5158 46.4062C15.9846 45.7968 16.5002 45.3281 17.0627 44.9531C18.2346 44.0625 19.5002 43.125 19.8752 41.7187C20.2971 40.125 19.3596 38.3437 17.9065 37.5C16.4065 36.75 14.6252 36.6562 13.0315 37.2656C11.8596 37.6406 10.8283 38.2968 10.0783 39.2812C9.32833 40.2656 9.09396 41.5312 9.42208 42.7031C9.84396 43.9218 10.969 44.7656 12.0002 45.5625Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M34.2188 19.4063H34.6875C34.5 18.375 34.1719 17.1563 33.1875 16.6875C32.2031 16.2188 31.125 16.7344 30.2344 17.2969C28.2656 18.5625 26.5312 20.1563 25.0781 21.9844C25.5469 22.2188 25.9687 22.4532 26.3906 22.6875C28.5 20.6719 31.3125 19.2188 34.2188 19.4063Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M21.0938 30.375C21.7031 29.2969 22.2656 28.2656 22.9219 27.1875C22.7344 26.9531 22.5469 26.7188 22.3594 26.4844C21.8438 27.75 21.375 29.0156 21.0938 30.375Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M22.9224 27.1875C23.8599 25.6406 24.8911 24.1875 26.1567 22.9219C26.2505 22.8281 26.2974 22.7813 26.3911 22.6875C25.9692 22.4531 25.5474 22.2188 25.0786 21.9844C24.0005 23.3438 23.1099 24.8437 22.3599 26.4844C22.5474 26.7188 22.7349 26.9531 22.9224 27.1875Z",
						fill: "white"
					})),
					TOP_ANSWER: e => o.a.createElement("svg", {
						className: e.className,
						width: "60",
						height: "60",
						viewBox: "0 0 60 60",
						fill: "none",
						xmlns: "http://www.w3.org/2000/svg"
					}, o.a.createElement("path", {
						d: "M56.7772 27.3752C56.7693 27.0217 56.766 26.3151 56.6623 25.7252C56.4681 24.5108 55.9891 23.3478 55.3038 22.345C53.9202 20.3398 51.6421 19.0463 49.287 18.8363C48.9946 18.7937 48.6997 18.8102 48.4074 18.8007C48.2454 18.7972 48.1479 18.8042 48.0397 18.8091L47.7149 18.8241L46.4157 18.8807L43.8172 18.9739L36.3039 19.2127C36.1307 19.1966 35.9574 19.1788 35.7841 19.1631C28.49 18.4383 21.196 18.3437 13.9019 18.3029L12.5343 18.2994L11.8505 18.3054L11.6795 18.3068L11.4424 18.3169L10.9533 18.3451C9.64966 18.4513 8.36452 18.8752 7.25585 19.5641C6.14943 20.2549 5.19282 21.1809 4.51118 22.2855C3.82342 23.384 3.38872 24.6414 3.25408 25.9221C3.21528 26.2414 3.21817 26.5628 3.20627 26.8825L3.21897 27.5807L3.25459 28.9483L3.32898 31.6836L3.47981 37.1542C3.53526 38.9777 3.5954 40.8012 3.69742 42.6247L3.83801 45.36L3.86024 45.7019L3.88948 46.0823C3.92218 46.3764 3.93526 46.67 4.00401 46.9583C4.05965 47.2478 4.12008 47.5346 4.21604 47.813C4.29529 48.0955 4.40266 48.3674 4.52197 48.6339C5.44393 50.7865 7.3912 52.3579 9.54778 52.8911C10.0899 53.0142 10.639 53.0971 11.1873 53.0965L11.5972 53.0948C11.7323 53.0933 11.831 53.0821 11.9497 53.0762L12.6335 53.0332L14.4945 52.9376C14.4871 53.1945 14.4545 53.4598 14.4008 53.728C14.2827 54.3161 14.0853 54.9148 13.8113 55.4895C13.5525 56.0698 13.2258 56.6322 12.8729 57.1792L12.3076 57.9831L11.6964 58.7608L10.7828 59.923L12.2215 59.9849C13.6762 60.0475 15.1309 59.915 16.543 59.6067C17.9579 59.3077 19.3337 58.8377 20.65 58.2281C21.9659 57.6161 23.2259 56.8643 24.3961 55.9467C24.6831 55.7098 24.9804 55.484 25.2485 55.2173C25.5261 54.9626 25.7993 54.7004 26.0517 54.409C26.3652 54.0863 26.6521 53.7265 26.9233 53.3452C30.8928 53.647 34.8623 53.9611 38.8318 54.0568C40.9324 54.1131 43.033 54.1318 45.1336 54.0951C46.1904 54.0841 47.2197 54.052 48.2991 54.0097C49.7064 53.9432 51.1167 53.5303 52.271 52.7472C52.86 52.3753 53.3726 51.9012 53.8341 51.3966C54.2794 50.8739 54.6622 50.3058 54.9583 49.6966C55.4186 48.7479 55.6594 47.6907 55.6892 46.6723C55.7159 46.5458 55.7387 46.4184 55.7513 46.2897L55.8024 45.8894L55.8374 45.5646L55.9726 44.2653C56.3129 40.8007 56.5471 37.336 56.6904 33.8714L56.7677 31.2729C56.789 30.4067 56.7821 29.5406 56.7907 28.6744C56.7978 28.2413 56.7827 27.8082 56.7772 27.3752Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M54.2431 26.18V45.1596C54.2431 48.4715 51.5579 51.1568 48.2424 51.1568H26.2283C24.4381 54.8553 18.5484 58.8544 12.2648 58.4892C16.2032 53.8348 15.369 51.1568 15.369 51.1568H11.6625C8.3506 51.1568 5.66531 48.4715 5.66531 45.1596V26.18C5.66531 22.8646 8.3506 20.1793 11.6625 20.1793H48.2424C51.5579 20.1793 54.2431 22.8646 54.2431 26.18Z",
						fill: "#14D8C3"
					}), o.a.createElement("path", {
						d: "M19.19 27.8132C18.703 27.4206 18.0835 27.1881 17.4447 27.1336C17.0512 27.1001 16.646 27.137 16.254 27.2388L16.8594 26.1252C16.8951 26.0594 16.9094 25.9811 16.8944 25.9019C16.8599 25.7192 16.6838 25.5991 16.5012 25.6336L16.473 25.639C16.0718 25.7148 15.6742 25.8104 15.2787 25.915L16.4174 24.901C16.534 24.796 16.6053 24.6389 16.5948 24.4702C16.5766 24.1765 16.3238 23.9533 16.0302 23.9715L16.0151 23.9724C15.1915 24.0236 14.3971 24.2181 13.6408 24.479C14.1053 24.0744 14.5755 23.6761 15.0582 23.2926L15.0697 23.2836C15.2087 23.1729 15.2764 22.9863 15.2268 22.8038C15.1603 22.5591 14.908 22.4147 14.6633 22.4812C13.4045 22.8232 12.2214 23.3562 11.1016 23.9641C10.9012 24.0732 10.7047 24.1874 10.5079 24.3011C11.4904 23.4141 12.5314 22.5904 13.6349 21.8551L13.6417 21.8507C13.7419 21.7839 13.7879 21.6553 13.7457 21.5367C13.6958 21.3967 13.542 21.3237 13.402 21.3736C11.4716 22.0615 9.62015 22.952 7.87 24.0049L10.8858 21.009C10.9062 20.9886 10.9071 20.9556 10.8873 20.9343C10.8671 20.9125 10.8332 20.9113 10.8114 20.9315L6.76305 24.692C6.71306 24.7384 6.7009 24.815 6.7379 24.8754C6.78004 24.9442 6.87002 24.9658 6.93883 24.9236L6.943 24.9211C8.43334 24.0081 10.0029 23.2317 11.6229 22.5892C10.2476 23.6092 8.96057 24.7515 7.79396 26.0105C7.68727 26.1258 7.66527 26.3024 7.75164 26.4426C7.85558 26.6114 8.07663 26.6639 8.2454 26.56L8.25304 26.5553C9.3206 25.8978 10.3833 25.246 11.4816 24.6836C11.7736 24.5335 12.0689 24.3916 12.3666 24.2568C11.7035 24.8183 11.0571 25.3999 10.4318 26.0044C10.2654 26.1655 10.2159 26.4229 10.3278 26.6391C10.4645 26.9033 10.7895 27.0066 11.0537 26.8699L11.0604 26.8665C11.8898 26.4372 12.7156 26.0367 13.545 25.693C13.8136 25.5836 14.0853 25.4886 14.3581 25.4015L13.0022 26.7145L12.9866 26.7295C12.851 26.8612 12.8067 27.0692 12.8911 27.2501C12.9978 27.4785 13.2694 27.5772 13.4979 27.4706C14.2861 27.1026 15.1005 26.7863 15.9333 26.5195L15.4455 27.6177L15.4362 27.6387C15.4024 27.7163 15.4069 27.8089 15.4563 27.8853C15.5347 28.0066 15.6966 28.0413 15.8179 27.9629C16.2846 27.661 16.8503 27.4809 17.4328 27.47C18.0137 27.4581 18.6089 27.5988 19.129 27.9016C19.1516 27.9148 19.1812 27.9099 19.1981 27.8889C19.2168 27.8658 19.2132 27.8318 19.19 27.8132Z",
						fill: "#008B85"
					}), o.a.createElement("path", {
						d: "M18.7358 49.6251L18.7172 49.6263L18.3382 49.6509C18.1419 49.4392 17.8845 49.3081 17.6526 49.2457C17.3471 49.1606 17.0549 49.1457 16.7729 49.156C16.5004 49.1615 16.1935 49.216 15.9691 49.2557C15.7365 49.293 15.4952 49.3174 15.2562 49.3373C14.7821 49.3732 14.288 49.3816 13.8792 49.3018C13.782 49.2812 13.6836 49.2552 13.6263 49.2239C13.5862 49.2105 13.5807 49.1944 13.5589 49.1861L13.4398 49.0837C13.2707 48.9311 13.0908 48.7447 12.8832 48.5629C12.6747 48.3824 12.4424 48.1912 12.1111 48.0556C11.9473 47.9872 11.7502 47.9456 11.5357 47.9497C11.3217 47.9582 11.1551 48.0144 11.0284 48.0556C10.8972 48.101 10.8229 48.1217 10.7325 48.1383C10.6432 48.1558 10.5494 48.161 10.4553 48.1612C10.2665 48.1592 10.0742 48.1199 9.89814 48.0538C9.53928 47.9116 9.29329 47.6665 9.23662 47.3723C9.17064 47.0729 9.28914 46.7361 9.5283 46.5252L9.53528 46.5192C9.55805 46.4988 9.57937 46.4762 9.59894 46.4514C9.7811 46.2205 9.74153 45.8856 9.51056 45.7034C9.20294 45.4608 8.87304 45.2063 8.75081 45.0126C8.6907 44.9175 8.67159 44.8578 8.67402 44.7384C8.67634 44.6223 8.71276 44.4652 8.76612 44.3033C8.81745 44.1485 8.90371 43.9639 8.98058 43.7333C9.05343 43.5005 9.12924 43.2146 9.04848 42.855C8.93727 42.4589 8.68842 42.2354 8.40423 42.0803C8.34443 42.05 8.27872 42.0264 8.21168 42.0048L8.46414 40.7914L8.656 39.8694C8.68472 39.7215 8.72979 39.546 8.73273 39.3152C8.73373 39.2012 8.7188 39.0702 8.67477 38.9392C8.63108 38.8069 8.54988 38.6811 8.48093 38.6007C8.33928 38.4385 8.23346 38.346 8.21311 38.3061C8.19143 38.2737 8.17343 38.2176 8.1853 38.1064C8.21271 37.8911 8.32466 37.5397 8.39602 37.249L8.86683 35.4245L8.87255 35.4024C8.88608 35.3493 8.88608 35.2919 8.86978 35.2354C8.82085 35.0661 8.64393 34.9684 8.47455 35.0173L7.96852 35.1634C8.05624 34.6561 8.13907 34.1477 8.2233 33.6396L8.22665 33.6196C8.22871 33.6066 8.22948 33.5933 8.22885 33.5796C8.22384 33.472 8.13252 33.3888 8.02489 33.3938L7.60772 33.4133C7.89857 32.5034 8.18739 31.5929 8.45644 30.6749C8.02503 31.6228 7.61642 32.5792 7.20906 33.5361C7.20177 33.5534 7.19702 33.5729 7.19602 33.5928C7.19147 33.6843 7.26196 33.7622 7.35349 33.7668L7.36968 33.7676L7.76428 33.7872C7.6121 34.3614 7.45752 34.935 7.3167 35.5116C7.30703 35.552 7.30562 35.5964 7.31489 35.6397C7.34811 35.7942 7.50035 35.8926 7.6549 35.8594L7.67307 35.8556L8.06915 35.7705L7.65767 37.0337C7.56649 37.3487 7.45837 37.5894 7.37695 37.9931C7.34247 38.19 7.34522 38.4643 7.47646 38.7095C7.61004 38.9461 7.75277 39.0571 7.80645 39.1398C7.8554 39.2146 7.84324 39.2018 7.84584 39.2977C7.84212 39.3818 7.80719 39.5127 7.76902 39.6708L7.54936 40.5866L7.11002 42.4181L7.87308 42.9392C7.8461 42.9566 7.85995 42.9372 7.93568 42.9782C8.00317 43.0107 8.05842 43.1021 8.0488 43.0988C8.05867 43.135 8.05218 43.2606 7.99848 43.4064L7.78178 43.9642C7.70843 44.1834 7.63928 44.4194 7.62675 44.7063C7.60663 44.9898 7.6981 45.3364 7.86052 45.5777C8.04772 45.8517 8.24084 46.0368 8.43018 46.1969C8.18284 46.6129 8.08548 47.1212 8.19835 47.6031C8.2742 47.9461 8.45859 48.2736 8.70392 48.5125C8.94559 48.7566 9.23212 48.918 9.52667 49.0324C9.8235 49.1409 10.134 49.1992 10.4497 49.1996C10.6077 49.1982 10.7667 49.1863 10.925 49.1544C11.0827 49.125 11.25 49.0708 11.3566 49.0319C11.5995 48.9551 11.5901 48.9529 11.7479 48.9992C11.8878 49.0488 12.0638 49.1686 12.237 49.315C12.4134 49.4606 12.5888 49.6334 12.7985 49.8141C12.8512 49.8597 12.9054 49.9044 12.9702 49.9534C13.0561 50.0105 13.1514 50.0727 13.2314 50.1011C13.4024 50.178 13.5529 50.208 13.7022 50.2367C14.2894 50.3303 14.8142 50.2941 15.3427 50.243C15.6059 50.2139 15.8652 50.1724 16.1289 50.1189C16.3985 50.0588 16.5886 50.0166 16.821 49.999C17.2612 49.9529 17.7053 50.0447 17.8242 50.2521C17.873 50.3369 17.9552 50.3976 18.0498 50.4247L17.742 50.9277L17.7179 50.967C17.6483 51.0806 17.6641 51.231 17.7637 51.3275C18.0076 51.5638 17.9067 52.0696 17.6812 52.5395C17.5723 52.7623 17.4222 53.095 17.406 53.3989C17.3767 53.709 17.4051 53.9795 17.3882 54.2364C17.363 54.7498 17.1794 55.2587 16.9355 55.7433C16.6864 56.2256 16.4003 56.6963 16.1001 57.1594C16.4635 56.7454 16.8303 56.3277 17.1333 55.857C17.4367 55.3918 17.7024 54.8682 17.799 54.2835C17.8492 53.9942 17.8545 53.7109 17.9064 53.476C17.9571 53.2284 18.0549 53.0582 18.1997 52.7954C18.334 52.5397 18.4625 52.2647 18.5216 51.9373C18.5718 51.694 18.5497 51.3909 18.4284 51.1274L19.065 50.2061C19.1109 50.1398 19.1357 50.0579 19.13 49.9712C19.1167 49.7668 18.9403 49.6118 18.7358 49.6251Z",
						fill: "#008B85"
					}), o.a.createElement("path", {
						d: "M54.9776 26.9323C54.9776 23.2185 51.9561 20.1975 48.2424 20.1975H46.7698L48.4214 16.5955C49.0015 15.6442 49.5954 14.6991 50.1616 13.7414L50.8492 12.5785L49.2823 11.8487C48.8945 11.6682 48.5713 11.3811 48.3322 11.0596L47.6708 10.1703L46.3495 10.8729C44.5805 11.8135 42.8484 12.8096 41.1511 13.8583C40.0462 14.5399 38.9481 15.2316 37.8541 15.9296C37.1685 14.913 36.4768 13.9005 35.7641 12.902C34.6582 11.3406 33.5584 9.7751 32.437 8.22399L30.422 7.4409C30.4318 7.43836 30.4419 7.43724 30.4519 7.43518L30.3316 7.44823L29.9543 7.47074L29.5757 7.47807L29.4211 7.47638C29.4055 7.47606 29.3779 7.47532 29.3855 7.47672C29.3911 7.47801 29.3726 7.47678 29.3977 7.48093C29.423 7.48533 29.448 7.49137 29.4725 7.49895L27.5215 8.25687C26.5085 9.88093 25.4891 11.5007 24.5211 13.155C24.041 13.9848 23.5445 14.8035 23.08 15.6437L22.1983 17.2092L20.9942 16.5361L12.5621 10.9392L11.9957 11.4923C11.6367 11.8427 11.1997 12.0965 10.7313 12.2265L9.62466 12.5334L12.8617 19.5931C12.897 19.691 12.9327 19.7887 12.9679 19.8867L12.5346 19.8872C12.0761 19.8896 11.6491 19.8777 11.0824 19.9173C10.0157 19.9971 8.96697 20.3401 8.05565 20.8982C6.21527 21.9981 4.96337 23.9828 4.73655 26.0987C4.70182 26.3614 4.70554 26.6272 4.69135 26.8911L4.69624 27.5806L4.7096 28.9482L4.73635 31.6835L4.79222 37.154L4.87831 42.6246L4.93101 45.1873V45.912C4.93101 49.6238 7.95065 52.6434 11.6625 52.6434H14.7046C14.6898 53.5718 14.3069 55.6918 11.7041 58.7673L10.7547 59.8892L12.2222 59.9743C12.5071 59.9911 12.7916 59.9992 13.0745 59.9992C19.0851 59.9992 24.6158 56.3529 26.6737 52.6434H32.6388C34.7032 52.6996 36.7677 52.7477 38.8321 52.7663C40.9327 52.7825 43.0333 52.7968 45.1339 52.78L48.2906 52.7465C49.4825 52.7101 50.6759 52.3777 51.6773 51.74C52.1657 51.4534 52.5948 51.0802 52.9894 50.6817C52.9965 50.6746 53.0038 50.6677 53.0108 50.6606C53.023 50.6483 53.0358 50.6366 53.0478 50.6243C53.0671 50.6028 53.0848 50.5801 53.1038 50.5585C54.2615 49.3491 54.9776 47.714 54.9776 45.912V26.9323ZM50.8929 50.4099C50.0985 50.8726 49.1799 51.0586 48.2789 51.0675L45.1339 51.0383C43.0333 51.0214 40.9327 51.0358 38.8321 51.0519C36.7661 51.0706 34.7002 51.1188 32.6342 51.175H25.7678L25.5671 51.5894C23.9676 54.8939 19.024 58.2238 13.7782 58.5102C16.7835 54.4131 16.1592 51.9771 16.0698 51.6907L15.9092 51.175H11.6625C8.76041 51.175 6.39949 48.814 6.39949 45.912V45.2012L6.45248 42.6246L6.53856 37.154L6.59444 31.6835L6.62119 28.9482L6.63455 27.5806L6.64302 26.9025C6.66122 26.7121 6.65747 26.5195 6.68782 26.3312C6.88209 24.8188 7.80385 23.4244 9.12081 22.6755C9.77009 22.2948 10.4988 22.046 11.2527 21.9961C11.5962 21.9701 12.0813 21.9753 12.5346 21.9762L13.714 21.9776C13.8599 22.391 14.0062 22.8044 14.1525 23.2177C14.4421 24.043 14.7383 24.8652 15.0439 25.6831L15.2764 26.295L15.3926 26.601L15.4507 26.754L15.548 26.9703C15.8225 27.5607 16.2257 28.0983 16.7187 28.5365C17.2153 28.9723 17.8021 29.3065 18.4356 29.5169C18.7543 29.6133 19.0814 29.6906 19.4143 29.7216C19.5763 29.7433 19.7559 29.7451 19.9056 29.752L20.2322 29.7581C21.1031 29.7628 21.9739 29.7688 22.8447 29.7456C26.0722 29.6991 29.2996 29.3634 32.5271 28.9787H40.019C41.6739 28.9787 43.1887 28.0069 43.8785 26.503L46.0964 21.6659H48.2424C51.1463 21.6659 53.5092 24.0283 53.5092 26.9323V45.912C53.5092 47.3509 52.9272 48.6557 51.9875 49.6067C51.6565 49.9199 51.2891 50.1914 50.8929 50.4099Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M42.9871 26.0949C42.4547 27.2557 41.2948 27.9998 40.0177 27.9998H19.8883C18.6112 27.9998 17.4513 27.2557 16.9189 26.0949L10.992 13.1699C11.6364 12.9908 12.2129 12.6471 12.6783 12.1924L22.6467 18.809L29.0382 9.27441C29.3318 9.34602 30.5742 9.34602 30.8678 9.27441L37.2557 18.809L47.2241 12.1924C47.6895 12.6471 48.2696 12.9908 48.914 13.1699L42.9871 26.0949Z",
						fill: "#FFD644"
					}), o.a.createElement("path", {
						d: "M55.036 6.55501C54.6019 5.93131 54.0535 5.39487 53.3999 5.05527C52.7511 4.71031 52.0241 4.5662 51.3458 4.56245C51.2313 4.56085 51.1205 4.56801 51.009 4.5735C50.6784 4.50312 50.3361 4.46449 49.9847 4.46449C48.5378 4.46449 47.2388 5.09652 46.3382 6.09456C46.2413 6.15281 46.1443 6.20957 46.0476 6.27452C45.4861 6.66081 44.9386 7.19299 44.6256 7.86914C44.3012 8.53848 44.2042 9.3161 44.3492 10.0451C44.4892 10.7792 44.9102 11.4468 45.458 11.9151C45.6191 12.0531 45.7895 12.1707 45.9631 12.2786C44.5786 13.1364 43.2009 14.0043 41.832 14.8857L37.4763 17.7269C36.5536 16.3542 35.6388 14.9763 34.6984 13.6154L32.1196 9.85612C32.7398 9.55357 33.2795 9.12885 33.7131 8.61415C33.9521 8.49321 34.1893 8.35697 34.4147 8.1848C34.9985 7.74254 35.4899 7.10115 35.714 6.35932C35.9365 5.61977 35.9662 4.82123 35.8146 4.04372C35.515 2.4675 34.3466 1.16098 32.9802 0.513564C32.2984 0.180455 31.5535 -0.0222774 30.8167 0.00195544C30.0821 0.019894 29.3837 0.247231 28.7881 0.573473C28.689 0.626774 28.5972 0.68614 28.5038 0.744219C26.8306 1.26078 25.5388 2.6488 25.1544 4.37514C25.102 4.46761 25.0485 4.55822 24.9994 4.65572C24.6996 5.2683 24.4793 5.99437 24.5351 6.73863C24.572 7.48244 24.8769 8.21132 25.3622 8.77457C25.8453 9.34216 26.5284 9.72217 27.2384 9.86107C27.426 9.89929 27.6122 9.92069 27.7961 9.93165C26.977 11.1891 26.1658 12.4518 25.3535 13.7137C24.8384 14.52 24.3133 15.3196 23.8077 16.1323L22.5077 18.1995L17.8209 15.2627C16.425 14.3787 15.0406 13.4775 13.6601 12.5704C14.246 11.8838 14.6228 11.0621 14.766 10.1792C14.9138 9.94644 15.0514 9.70059 15.158 9.42986C15.428 8.75237 15.5153 7.95231 15.3296 7.19854C15.1425 6.44778 14.751 5.74054 14.2213 5.1572C12.0498 2.72433 7.66595 3.21139 6.40905 5.80771C6.34519 5.9156 6.29063 6.02498 6.23564 6.13424C5.46983 7.00153 5.00079 8.1367 5.00079 9.38188C5.00079 9.92324 5.09215 10.4429 5.25448 10.9304C5.25717 11.0397 5.25811 11.1482 5.2665 11.2604C5.32469 11.9416 5.51672 12.6792 5.94527 13.2844C6.36024 13.8971 6.99021 14.3682 7.6986 14.6051C8.40701 14.8482 9.19668 14.8121 9.87274 14.5674C10.1044 14.4847 10.3214 14.3749 10.5308 14.2572C10.7504 14.23 10.9623 14.1875 11.1663 14.1317C12.4574 17.0246 13.6669 19.955 14.9031 22.8731L15.9199 25.281C16.0978 25.692 16.24 26.0619 16.4472 26.5066C16.6736 26.9706 17.0026 27.3853 17.3952 27.7238C17.789 28.0628 18.2524 28.32 18.7498 28.4802C19.0003 28.5522 19.2562 28.6121 19.5169 28.6329C19.6451 28.6495 19.7807 28.6481 19.9047 28.6535L20.2312 28.6546C21.1021 28.6557 21.9729 28.6668 22.8438 28.6513C24.5854 28.6404 26.3271 28.6009 28.0688 28.5455L33.2939 28.3325C35.0356 28.256 36.7773 28.1858 38.5189 28.141L39.8252 28.1119C40.263 28.1143 40.7216 28.0493 41.1399 27.8956C41.9836 27.5933 42.6888 26.9391 43.0541 26.1256C44.0559 23.9778 45.0718 21.8365 46.1433 19.7207L48.9711 14.181C49.2998 14.2518 49.6367 14.2993 49.9847 14.2993C50.5873 14.2993 51.1624 14.185 51.6964 13.9857C51.9721 13.9989 52.2543 13.9964 52.5434 13.9541C53.2706 13.8516 54.0029 13.5284 54.5635 12.9965C55.1203 12.4643 55.5425 11.7732 55.7862 11.0201C56.288 9.50198 55.9191 7.79604 55.036 6.55501ZM45.7585 19.5442C44.8543 21.7367 43.8946 23.9038 42.9207 26.0644C42.5611 26.8376 41.8814 27.4498 41.0796 27.7254C40.6772 27.8716 40.2576 27.9079 39.8252 27.8878L38.5189 27.8587C36.7773 27.8139 35.0356 27.7437 33.2939 27.6672L28.0688 27.4542C26.3271 27.3988 24.5854 27.3593 22.8438 27.3484C21.9729 27.3329 21.1021 27.344 20.2312 27.3451L19.9047 27.3462C19.8114 27.3414 19.7283 27.3455 19.6405 27.3338C19.4662 27.3228 19.296 27.281 19.128 27.2361C18.7927 27.1402 18.4744 26.9789 18.1999 26.7583C17.9268 26.5379 17.6915 26.2646 17.526 25.9508L16.9545 24.8065L15.7933 22.4648C14.3971 19.6412 12.9748 16.8295 11.6322 13.9813C12.2645 13.7471 12.8519 13.3854 13.3454 12.9079C14.7385 13.8416 16.1275 14.7814 17.5048 15.7388L22.4022 19.1778L22.7521 19.4235L23.0147 19.0555L24.6821 16.7184C25.2418 15.942 25.7819 15.1525 26.3321 14.3698C27.2796 13.0116 28.2297 11.6552 29.1671 10.2903C29.4241 10.3321 29.685 10.3609 29.9514 10.3609C30.205 10.3609 30.4531 10.3351 30.6975 10.2977L33.4258 14.4681C34.4676 16.0724 35.5451 17.6529 36.6031 19.2465L37.0394 19.9038L37.6908 19.4639L42.6485 16.1158C44.063 15.1482 45.4681 14.1667 46.8651 13.1728C47.23 13.4723 47.6307 13.7237 48.0621 13.9065L45.7585 19.5442Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M48.9152 13.1699C48.2708 12.9909 47.6908 12.6472 47.2253 12.1925C46.4985 11.4764 46.0474 10.4811 46.0474 9.3819C46.0474 7.20503 47.8125 5.44348 49.9858 5.44348C52.1627 5.44348 53.9242 7.20503 53.9242 9.3819C53.9242 11.5552 52.1627 13.3203 49.9858 13.3203C49.6134 13.3203 49.2554 13.2702 48.9152 13.1699Z",
						fill: "#FFD644"
					}), o.a.createElement("path", {
						d: "M30.8688 9.27443C30.5752 9.34604 30.2673 9.38184 29.9522 9.38184C29.6371 9.38184 29.3328 9.34604 29.0392 9.27443C27.3063 8.86268 26.0138 7.30164 26.0138 5.44342C26.0138 3.26655 27.7789 1.505 29.9522 1.505C32.1291 1.505 33.8906 3.26655 33.8906 5.44342C33.8906 7.30164 32.6017 8.86268 30.8688 9.27443Z",
						fill: "#FFD644"
					}), o.a.createElement("path", {
						d: "M12.6809 12.1925C12.2155 12.6472 11.639 12.9909 10.9946 13.1699C10.6544 13.2702 10.2928 13.3203 9.92044 13.3203C7.74715 13.3203 5.98203 11.5552 5.98203 9.3819C5.98203 7.20503 7.74715 5.44348 9.92044 5.44348C12.0973 5.44348 13.8589 7.20503 13.8589 9.3819C13.8589 10.4811 13.4077 11.4764 12.6809 12.1925Z",
						fill: "#FFD644"
					}), o.a.createElement("path", {
						d: "M53.8222 7.2343C53.2416 6.23358 52.215 5.53649 51.127 5.33624C50.0405 5.12135 48.9332 5.31442 47.9843 5.8076C47.0425 6.29506 46.1758 7.10756 45.8044 8.20156C45.6232 8.74126 45.5628 9.32729 45.6424 9.89368C45.7219 10.4612 45.9515 11.0019 46.2747 11.4571C46.9396 12.3711 47.9089 12.9291 48.9 13.2169C49.8937 13.5014 51.0152 13.5286 52.0633 13.0989C53.1192 12.6851 53.9448 11.7134 54.2738 10.5936C54.6077 9.46914 54.4219 8.21998 53.8222 7.2343ZM53.2688 10.3102C53.0452 11.1787 52.4955 11.9468 51.7482 12.5369C51.0001 13.1187 49.9151 13.4151 48.9269 13.1227C47.9273 12.8617 47.1549 12.0437 46.8189 11.1523C46.4674 10.2624 46.4037 9.32709 46.5887 8.4226C46.7693 7.52805 47.2783 6.60102 48.1395 6.08449C48.9871 5.55692 50.085 5.50387 50.9817 5.85217C51.8823 6.20342 52.596 6.88145 53.0188 7.68429C53.4385 8.49559 53.4987 9.45174 53.2688 10.3102Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M32.2516 1.69777C31.2566 1.10465 30.0204 1.00366 28.9741 1.35548C27.9182 1.69502 27.0525 2.41217 26.4632 3.30143C25.8765 4.18528 25.5205 5.31836 25.7269 6.45359C25.9178 7.58406 26.7091 8.59544 27.7293 9.06293C28.7571 9.53571 29.8712 9.55468 30.8792 9.32196C31.8811 9.07537 32.879 8.56165 33.5794 7.67118C33.9273 7.23296 34.1972 6.70507 34.3045 6.13627C34.4258 5.56979 34.4027 4.97816 34.2864 4.4071C34.0325 3.25954 33.2514 2.26519 32.2516 1.69777ZM33.0306 7.33361C32.6641 8.2128 31.8585 8.98911 30.8563 9.22678C30.3625 9.3504 29.8362 9.33615 29.3523 9.2095C28.8672 9.07806 28.4272 8.83107 28.0562 8.53181C27.6788 8.23658 27.3769 7.87466 27.1175 7.49786C26.8572 7.12004 26.6517 6.70759 26.5194 6.26416C26.2436 5.39375 26.2321 4.33703 26.7335 3.46777C27.2184 2.59679 28.1445 2.00704 29.0983 1.87687C30.057 1.74786 31.0108 1.98607 31.7693 2.4822C32.5303 2.98832 33.0559 3.78637 33.2706 4.64877C33.4942 5.51783 33.4036 6.45725 33.0306 7.33361Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M13.1001 6.25735C12.2936 5.40637 11.1079 4.94964 9.95825 4.9848C8.80206 4.99026 7.68468 5.53732 6.97177 6.38135C6.24224 7.21502 5.86276 8.27706 5.82233 9.34448C5.7759 10.4039 6.05462 11.5614 6.81908 12.4254C7.19548 12.852 7.67604 13.1941 8.20839 13.4063C8.74115 13.6189 9.32531 13.6864 9.88035 13.6303C11.0053 13.5113 11.9669 12.9406 12.7124 12.2273C13.4479 11.5024 14.0352 10.545 14.1773 9.42087C14.2473 8.86601 14.2024 8.27675 14.006 7.73213C13.821 7.18258 13.495 6.68502 13.1001 6.25735ZM12.6438 12.1574C11.9196 12.8907 10.826 13.1623 9.88578 13.0066C8.93735 12.8711 8.0937 12.4681 7.40036 11.8543C6.71194 11.251 6.15967 10.3528 6.13973 9.34734C6.10079 8.34862 6.59569 7.36783 7.34725 6.76381C8.10225 6.1553 9.04132 5.8734 9.94984 5.90562C10.8661 5.94247 11.7238 6.35875 12.3551 6.98889C13.0003 7.61748 13.3906 8.47107 13.533 9.41507C13.6711 10.3569 13.3842 11.4397 12.6438 12.1574Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M37.2932 41.7824C36.4262 42.1229 35.6665 42.5495 34.8848 42.8366C34.1352 43.2028 33.3994 43.4344 32.7187 43.7261C32.3666 43.8136 32.0389 43.9398 31.7065 44.0517C31.3773 44.1363 31.0567 44.2053 30.7367 44.2955C29.469 44.5791 28.2561 44.6421 26.7467 44.477C25.9902 44.4208 25.1893 44.2363 24.3058 44.0702L23.0424 43.7933C23.3128 43.3713 23.5069 42.9128 23.613 42.4515C23.8153 41.5583 23.7627 40.6524 23.3577 39.8043C22.6995 40.4756 22.2332 41.0706 21.7724 41.5709C21.3218 42.077 20.9041 42.4695 20.4763 42.8058C20.0476 43.1416 19.5915 43.447 19.0057 43.7564C18.4216 44.074 17.7316 44.3625 16.9008 44.8136C17.6001 45.4388 18.4687 45.7421 19.3992 45.7657C20.3247 45.7864 21.3248 45.4676 22.1015 44.8395C22.1733 44.7827 22.2406 44.7214 22.308 44.6604C22.6512 44.9429 23.0021 45.2174 23.3645 45.479C24.1441 45.9875 24.9501 46.4757 25.832 46.8088C27.567 47.5212 29.5405 47.7673 31.3996 47.348C31.853 47.2118 32.313 47.0936 32.7587 46.9404L34.0488 46.3654C34.8575 45.893 35.6771 45.4313 36.3905 44.829C37.1543 44.2885 37.8 43.6177 38.4774 42.9841C39.1237 42.3199 39.6955 41.589 40.3054 40.8971L40.066 40.6963C39.0058 40.9941 38.155 41.4228 37.2932 41.7824Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M19.6052 37.8742C20.7245 37.9478 21.8383 37.6332 22.703 37.1293C23.5708 36.6178 24.2506 35.9681 24.7887 35.2676C25.8589 33.86 26.4733 32.2908 26.6693 30.5907C25.244 31.5366 24.0687 32.5433 22.8967 33.2974C22.316 33.6721 21.7561 33.9878 21.2352 34.1793C20.9754 34.2647 20.7328 34.3517 20.4993 34.3726C20.2686 34.4246 20.0503 34.4207 19.8308 34.4086C18.98 34.3801 17.8828 33.8138 16.7541 32.9667C15.6095 32.1346 14.4695 31.0863 13.0756 30.0964C13.2249 31.8001 13.7884 33.3789 14.7651 34.8253C15.2585 35.5442 15.8756 36.2248 16.6724 36.7944C17.0655 37.0845 17.5246 37.3183 18.0119 37.5203C18.5098 37.7055 19.0487 37.8305 19.6052 37.8742Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M43.2708 33.2974C42.69 33.6721 42.1302 33.9878 41.6093 34.1793C41.3494 34.2647 41.1069 34.3517 40.8734 34.3726C40.6426 34.4246 40.4244 34.4207 40.2049 34.4086C39.3541 34.3801 38.2569 33.8138 37.1282 32.9667C35.9836 32.1346 34.8435 31.0863 33.4496 30.0964C33.599 31.8001 34.1625 33.3789 35.1392 34.8253C35.6326 35.5442 36.2496 36.2248 37.0465 36.7944C37.4396 37.0845 37.8987 37.3183 38.386 37.5203C38.8839 37.7055 39.4228 37.8305 39.9793 37.8742C41.0986 37.9478 42.2124 37.6332 43.0771 37.1293C43.9448 36.6178 44.6247 35.9681 45.1628 35.2676C46.2331 33.86 46.8474 32.2908 47.0434 30.5907C45.6181 31.5366 44.4428 32.5433 43.2708 33.2974Z",
						fill: "black"
					}), o.a.createElement("path", {
						d: "M24.8224 25.9735C24.5358 26.0342 24.2484 26.0396 24.0368 25.9234L24.3015 25.1803C24.3211 25.124 24.3151 25.0584 24.2789 25.0055C24.2184 24.9169 24.0975 24.8941 24.0089 24.9546L23.9976 24.9623C23.3442 25.4085 22.6404 25.7714 21.91 26.0574L23.9608 23.4759C24.0586 23.3521 24.0769 23.1756 23.9925 23.0312C23.8824 22.843 23.6407 22.7796 23.4525 22.8897L23.4388 22.8977C22.4524 23.4745 21.4696 24.0571 20.4856 24.6379C20.5715 24.5303 20.6516 24.421 20.7388 24.314C21.2485 23.6959 21.7739 23.0806 22.3059 22.4816C22.4632 22.3045 22.4835 22.036 22.3398 21.8352C22.1731 21.6022 21.849 21.5486 21.6161 21.7153L21.6138 21.7169C21.0163 22.1446 20.4055 22.5635 19.7896 22.9588C19.7765 22.9672 19.7632 22.9752 19.7501 22.9835C20.0953 22.5322 20.4602 22.0937 20.8399 21.6567L20.8438 21.6525C20.9836 21.4908 21.0148 21.2526 20.9042 21.0554C20.7632 20.804 20.445 20.7145 20.1936 20.8555C19.6888 21.1388 19.1793 21.389 18.6489 21.5923C18.4836 21.6559 18.3122 21.7116 18.1426 21.7694C18.2303 21.6413 18.3208 21.5118 18.4126 21.3799C18.5816 21.137 18.7545 20.8868 18.9147 20.613C19.0732 20.3388 19.2257 20.0426 19.3174 19.6873L19.319 19.6812C19.3407 19.5978 19.3391 19.5074 19.3094 19.4197C19.2283 19.1804 18.9686 19.0522 18.7294 19.1332C18.1896 19.3161 17.7092 19.556 17.2398 19.818C17.2229 19.8275 17.2069 19.8382 17.1902 19.8478C17.285 19.6431 17.3777 19.4361 17.4581 19.215C17.5439 18.9659 17.6309 18.7156 17.6424 18.3785C17.6451 18.3019 17.6246 18.2239 17.5789 18.1553C17.4628 17.9814 17.2277 17.9345 17.0537 18.0506L17.0472 18.055C16.6545 18.3171 16.2417 18.5728 15.8263 18.835C15.947 18.3735 16.1597 17.9034 16.3486 17.4024L16.3547 17.3863C16.3867 17.2994 16.376 17.1986 16.3174 17.1182C16.2241 16.9904 16.0449 16.9624 15.9171 17.0556C15.7753 17.159 15.528 17.2205 15.2721 17.2778C15.1393 17.3104 14.9977 17.3406 14.8522 17.3881C14.8738 17.1386 14.898 16.8859 14.9113 16.6223C14.9349 16.209 14.8874 15.7734 14.7513 15.3784L14.7486 15.3703C14.7317 15.3225 14.6918 15.2838 14.6389 15.2705C14.5551 15.2496 14.4703 15.3006 14.4493 15.3844C14.4283 15.4686 14.3146 15.6238 14.218 15.7346C14.1148 15.8528 14.0002 15.9664 13.8785 16.0551C13.8201 16.098 13.7498 16.1372 13.7089 16.1442C13.702 16.1434 13.7033 16.145 13.7024 16.1461C13.6973 16.1405 13.675 16.0931 13.6634 16.0624C13.6061 15.9152 13.5566 15.7559 13.5094 15.5982C13.3174 14.9651 13.1424 14.3228 12.9713 13.6808C13.085 14.3359 13.1956 14.991 13.3373 15.6435C13.3745 15.8068 13.4124 15.9683 13.4644 16.1346C13.4815 16.1806 13.4855 16.211 13.525 16.2769C13.559 16.3503 13.6758 16.3828 13.733 16.3716C13.858 16.3556 13.9346 16.3058 14.0144 16.2595C14.1682 16.1624 14.2985 16.0483 14.4225 15.9249C14.4535 15.8903 14.4843 15.8581 14.5145 15.8257C14.544 16.0777 14.5415 16.3317 14.5075 16.589C14.4594 16.9689 14.3731 17.3636 14.3258 17.7729C14.3198 17.8253 14.3306 17.8802 14.3603 17.9287C14.4308 18.0436 14.5812 18.0796 14.6962 18.0091L14.7131 17.9987C14.8737 17.9002 15.1225 17.8572 15.3812 17.8104C15.4339 17.7997 15.4887 17.7897 15.5439 17.7792C15.4698 17.9406 15.3952 18.1041 15.3261 18.2758C15.1711 18.6583 15.0498 19.0853 15.0294 19.5291C15.0262 19.5967 15.0427 19.6658 15.0811 19.7276C15.1819 19.8901 15.3953 19.94 15.5578 19.8392L15.5724 19.8301C15.9043 19.6242 16.2479 19.4243 16.5952 19.221C16.5432 19.3361 16.4963 19.4508 16.4386 19.5659C16.2272 19.9881 15.99 20.3922 15.7536 20.8428C15.6842 20.9757 15.6887 21.142 15.7799 21.2739C15.911 21.4633 16.1708 21.5107 16.3603 21.3796L16.375 21.3694C16.7817 21.0881 17.2186 20.83 17.6624 20.5974C17.7303 20.5624 17.799 20.5288 17.8675 20.4946C17.791 20.6046 17.7118 20.7148 17.632 20.8247C17.4614 21.0599 17.2835 21.299 17.1112 21.5596C16.9411 21.8225 16.7675 22.1 16.6498 22.4677C16.623 22.5525 16.6182 22.6475 16.6423 22.74C16.7103 23.0015 16.9774 23.1584 17.2389 23.0903L17.2559 23.086C17.7174 22.966 18.1849 22.8323 18.6504 22.6761C18.3074 23.1343 17.9787 23.5925 17.6582 24.0515L17.6446 24.0708L17.6328 24.0886C17.4799 24.33 17.5517 24.6496 17.793 24.8024C17.8498 24.8384 17.9148 24.8684 17.9802 24.8882C18.047 24.9075 18.0682 24.9054 18.1153 24.9114C18.2105 24.9196 18.2436 24.9104 18.301 24.9055C18.3952 24.8916 18.4649 24.8721 18.5257 24.8524C18.6504 24.8125 18.7494 24.7693 18.8464 24.7249C19.0381 24.636 19.2113 24.5421 19.3817 24.4457C19.3849 24.4439 19.3879 24.442 19.3911 24.4402C19.3311 24.5225 19.268 24.5996 19.209 24.6837C19.0882 24.8563 18.9695 25.0316 18.8548 25.2229C18.7973 25.3177 18.7411 25.4197 18.6858 25.536C18.6585 25.5941 18.6302 25.663 18.6046 25.7453C18.5913 25.804 18.5786 25.8366 18.5722 25.9234C18.5699 25.9695 18.5705 26.0138 18.5756 26.0612C18.5889 26.1407 18.6204 26.2244 18.6625 26.2928L18.6633 26.294C18.7977 26.5106 19.0822 26.5773 19.2989 26.4429L19.308 26.4373C20.2486 25.8538 21.1823 25.259 22.1177 24.667L20.7915 26.4953L20.7831 26.507C20.7293 26.5821 20.7109 26.681 20.7421 26.7755C20.794 26.9327 20.9634 27.0181 21.1207 26.9662C22.072 26.6524 22.9618 26.1835 23.7722 25.6109L23.6779 25.9459L23.6749 25.9567C23.6576 26.0186 23.6795 26.0874 23.7347 26.1272C24.1013 26.3914 24.5466 26.3182 24.8814 26.2254C25.2335 26.1262 25.5504 26.0066 25.8932 25.9678C26.5735 25.8781 27.2922 25.9884 27.9233 26.3083C27.3244 25.9353 26.6006 25.7399 25.8757 25.7819C25.5119 25.798 25.1542 25.9043 24.8224 25.9735Z",
						fill: "#C48C47"
					}), o.a.createElement("path", {
						d: "M27.969 12.7685C27.9204 12.8959 27.8915 13.0381 27.8907 13.1848C27.8902 13.3333 27.9321 13.4786 27.9564 13.581C27.9694 13.6343 27.9784 13.6799 27.9824 13.7186C27.9838 13.7373 27.985 13.755 27.9839 13.7696C27.9792 13.783 27.9612 13.7144 27.9764 13.6927C27.9501 13.7218 27.8812 13.8162 27.8192 13.892C27.2756 14.5512 26.6628 15.2131 26.0863 15.8883L25.8696 16.1469L25.8132 16.2155C25.7919 16.2456 25.7902 16.2326 25.712 16.3551L25.6917 16.3909L25.6822 16.4091L25.6777 16.4182C25.6803 16.4119 25.6722 16.4261 25.6563 16.4798C25.6323 16.5625 25.629 16.6703 25.6545 16.7632C25.6667 16.8096 25.6846 16.8519 25.7044 16.8878L25.7282 16.9263C25.7481 16.9551 25.7708 16.9828 25.7954 17.0082C25.8262 17.0395 25.8385 17.0485 25.8441 17.0531L25.8717 17.0748L25.9156 17.1059C25.9637 17.1377 25.9927 17.1536 26.0242 17.1715C26.2541 17.2968 26.4414 17.3862 26.6373 17.4872C26.7016 17.5181 26.7638 17.5498 26.8265 17.5814C26.6133 17.6893 26.3951 17.7925 26.1769 17.8804C25.7955 18.0374 25.3807 18.1927 25.0559 18.2046L24.9735 18.2076C24.8313 18.2133 24.7003 18.3039 24.65 18.4462C24.5842 18.6326 24.6819 18.8371 24.8684 18.903C25.7547 19.216 26.7 19.3396 27.6001 19.2028C27.1566 19.0899 26.7293 18.955 26.3207 18.7935C26.3744 18.7793 26.4286 18.7662 26.4822 18.7514C26.9369 18.6077 27.3661 18.4554 27.8061 18.2295C27.8635 18.1975 27.9188 18.169 28.0008 18.1135L28.0148 18.1042C28.0213 18.1 28.0528 18.0748 28.0696 18.0586C28.1099 18.0214 28.1467 17.9777 28.1764 17.932C28.2349 17.8458 28.2608 17.7308 28.264 17.6381C28.2657 17.5461 28.2446 17.4514 28.2236 17.4033C28.199 17.3366 28.1752 17.2976 28.1534 17.2641C27.9732 17.0194 27.8678 16.9798 27.7521 16.8907C27.5292 16.7428 27.3231 16.6349 27.117 16.527L26.9572 16.4505C27.4784 15.7655 27.9856 15.0775 28.4354 14.298C28.493 14.1853 28.546 14.0912 28.6078 13.9151C28.6315 13.8389 28.64 13.7165 28.6289 13.6747C28.6203 13.6339 28.6089 13.5971 28.5972 13.5616C28.5732 13.4921 28.546 13.4318 28.5213 13.38C28.4202 13.179 28.3816 13.075 28.3927 12.8825C28.4348 12.5187 28.7084 12.1296 28.9828 11.7749C28.5964 12.003 28.1832 12.2608 27.969 12.7685Z",
						fill: "#C48C47"
					}), o.a.createElement("path", {
						d: "M8.62621 9.99206C8.59061 9.88171 8.53002 9.76681 8.44905 9.59769C8.37306 9.42764 8.26191 9.21203 8.19857 8.85775L8.15354 8.87008C8.22335 8.76974 8.21891 8.59928 8.09363 8.47534L7.80595 8.55422C7.38266 8.66526 7.05511 9.01948 6.91655 9.4329C6.77267 9.84723 6.80236 10.3352 7.01954 10.756C7.23546 11.177 7.61381 11.4814 8.03252 11.5914C8.44739 11.6991 8.92121 11.6304 9.22991 11.2878C8.95047 10.9306 8.84573 10.67 8.76854 10.458C8.69501 10.2486 8.66277 10.1024 8.62621 9.99206ZM7.91104 8.93657C7.92843 8.87019 8.03269 8.82862 8.13949 8.87394L7.91104 8.93657Z",
						fill: "#C48C47"
					}), o.a.createElement("path", {
						d: "M28.7713 6.40881C28.6791 6.22816 28.6392 6.08837 28.5998 5.94601C28.5252 5.67126 28.4927 5.44459 28.4628 5.24142C28.4341 5.04416 28.4034 4.84649 28.4115 4.55137C28.4218 4.25637 28.4577 3.90953 28.6512 3.4015C28.1244 3.23648 27.5573 3.46805 27.1843 3.87188C26.8062 4.27274 26.6006 4.89533 26.6904 5.48907C26.7687 6.0767 27.1029 6.59918 27.5716 6.90731C27.8019 7.05892 28.0834 7.16309 28.3404 7.17493C28.4599 7.16807 28.5502 7.1586 28.6473 7.14312C28.7376 7.1331 28.847 7.1111 28.9556 7.2034C28.9964 7.15024 29.0204 7.07328 29.0212 6.99117C29.0173 6.91212 28.9938 6.83513 28.9667 6.76329C28.9102 6.62004 28.8251 6.51329 28.7713 6.40881Z",
						fill: "#C48C47"
					}), o.a.createElement("path", {
						d: "M48.7651 10.203C48.7158 9.9653 48.6808 9.78915 48.6241 9.63394C48.5695 9.47801 48.4824 9.32169 48.3667 9.10857C48.2484 8.89136 48.105 8.63581 47.922 8.19421C47.4453 8.27881 47.1292 8.61464 46.9634 8.99762C46.8002 9.38466 46.7909 9.8395 46.9436 10.2494C47.094 10.66 47.3944 11.0007 47.7689 11.1906C48.143 11.3752 48.6002 11.4276 49.0179 11.1865C48.8716 10.7334 48.8149 10.4459 48.7651 10.203Z",
						fill: "#C48C47"
					}), o.a.createElement("path", {
						d: "M51.6423 26.0542C51.7145 25.5609 51.4659 25.167 51.333 24.9558C51.0973 24.5819 50.7035 23.9562 50.0209 23.6933C49.5586 23.515 49.0089 23.5724 48.5863 23.8439C48.2235 24.0762 48.0003 24.4424 47.9745 24.8482C47.9549 25.1508 48.0462 25.4658 48.2336 25.7378C48.2847 25.8119 48.3421 25.8802 48.4042 25.9434C48.4276 26.0413 48.4539 26.1288 48.4759 26.202C48.5462 26.4395 48.7336 27.071 49.3411 27.2985C49.4893 27.354 49.6341 27.3741 49.7694 27.3741C50.0242 27.3741 50.2446 27.3019 50.3856 27.256C50.6662 27.1642 51.5204 26.8855 51.6423 26.0542Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M50.6463 9.42538C50.7343 9.47127 50.9484 9.58314 51.2147 9.58314C51.326 9.58314 51.446 9.56354 51.5698 9.51193C51.8882 9.37998 52.035 9.11181 52.089 9.01285C52.251 8.71745 52.4604 8.26381 52.4045 7.73369C52.3352 7.06398 51.8346 6.531 51.2147 6.46694C51.1014 6.45452 50.9895 6.45976 50.8805 6.4789C50.7166 6.44208 50.5421 6.44113 50.3695 6.4789C49.9947 6.56064 49.673 6.8092 49.5086 7.14429C49.271 7.62852 49.3537 8.2447 49.718 8.71362C49.9766 9.04727 50.3165 9.25235 50.6463 9.42538Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M31.007 5.55152C31.3024 5.54818 31.584 5.43488 31.8091 5.2351C31.8794 5.20497 31.9454 5.16386 32.0051 5.11033L32.2494 4.8914C32.4932 4.67199 32.5567 4.31536 32.4038 4.02522C32.366 3.95304 32.3173 3.88993 32.2604 3.8364C32.2556 3.81394 32.2499 3.79194 32.2441 3.76996C32.0969 3.22837 31.6643 2.77184 31.0257 2.48505C30.8497 2.4052 30.6495 2.40139 30.4692 2.47166C30.3713 2.51086 30.2838 2.57014 30.2126 2.64518L30.1528 2.66764C29.92 2.75464 29.7494 2.9554 29.7006 3.19873C29.6356 3.5252 29.5462 3.97215 29.6633 4.43487C29.8273 5.08452 30.3851 5.55152 30.9922 5.55152C30.997 5.55152 31.0022 5.55152 31.007 5.55152Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M11.9458 7.0123C11.7804 6.7924 11.5385 6.66142 11.2703 6.64277C11.0495 6.50799 10.8244 6.40138 10.6154 6.30196C10.3884 6.19393 10.1197 6.21353 9.91037 6.35309C9.53801 6.60214 9.26887 7.11029 9.48972 7.84357C9.48637 8.19776 9.49592 8.57542 9.64413 8.95399C9.85684 9.49893 10.3138 9.87896 10.8363 9.94588C10.8898 9.95257 10.9439 9.95592 10.9979 9.95592C11.3287 9.95592 11.6575 9.82735 11.9204 9.5912C12.1915 9.3479 12.3731 9.00563 12.4185 8.65238C12.4692 8.25848 12.3698 7.84549 12.1461 7.4793C12.1155 7.31582 12.0528 7.15475 11.9458 7.0123Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M36.0198 20.6824C35.947 20.5727 35.8226 20.3667 35.7316 20.205L35.4362 19.6872L34.8509 18.6462L33.6877 16.5611C33.5924 16.3814 33.4924 16.2258 33.4066 16.0423L33.1323 15.4919C32.9397 15.1413 32.8283 14.7503 32.6692 14.4129C32.5115 14.0745 32.2609 13.8143 32.0107 13.5542C31.7459 13.2901 31.4798 13.0785 31.1341 12.7088L31.1233 12.6972C31.1201 12.6939 31.1168 12.6907 31.1131 12.6878C31.0653 12.6483 30.9946 12.6551 30.9551 12.7029C30.6014 13.1316 30.5829 13.6948 30.6315 14.1565C30.6998 14.6245 30.8458 15.0554 31.1087 15.3903C31.3712 15.7263 31.7102 15.99 31.9685 16.2934L32.3634 16.7288C32.4947 16.8779 32.6177 17.051 32.7451 17.2002C33.2496 17.8216 33.757 18.4378 34.282 19.0426L35.0695 19.9496C35.2013 20.1004 35.3352 20.2499 35.4742 20.3959L35.6841 20.6148C35.7655 20.6913 35.8052 20.7497 35.9369 20.841C35.9635 20.8593 35.9997 20.8609 36.0282 20.842C36.0656 20.8171 36.0758 20.7667 36.051 20.7293L36.0198 20.6824Z",
						fill: "white"
					}), o.a.createElement("path", {
						d: "M51.2558 29.2501C51.2539 29.2249 51.2389 29.1987 51.2145 29.1868C51.1779 29.1688 51.1337 29.1839 51.1157 29.2205C50.8722 29.7159 50.7643 30.2747 50.716 30.8144C50.665 31.3576 50.6635 31.8965 50.6823 32.4227C50.7166 33.4731 50.804 34.4971 50.7725 35.3976C50.7624 35.6338 50.7449 35.8115 50.7044 36.0587L50.564 36.8194C50.464 37.3496 50.3547 37.9678 50.5119 38.6342C50.5543 38.7977 50.6145 38.96 50.6876 39.1104L50.8157 39.357C50.8201 39.3699 50.8434 39.3229 50.8155 39.4067C50.7887 39.4791 50.7086 39.5911 50.63 39.7734C50.3893 40.3778 50.5589 41.0221 50.9914 41.4285C50.7547 41.8757 50.6344 42.3741 50.636 42.8659L50.6367 43.0946C50.637 43.1663 50.6832 43.2328 50.7552 43.2555C50.8446 43.2838 50.9399 43.2342 50.9681 43.1449C50.976 43.1202 51.0647 43.1353 51.1309 43.25C51.1988 43.3577 51.1956 43.4579 51.1587 43.6611C51.1 44.0198 51.03 44.3884 50.9311 44.73C50.9187 44.7716 50.9056 44.8146 50.8913 44.85C50.8798 44.8755 50.843 44.9916 50.8496 45.032C50.8429 45.1474 50.8589 45.2418 50.8724 45.3401C50.9043 45.5324 50.9518 45.7161 51.005 45.8983C51.059 46.0801 51.1191 46.2593 51.1898 46.4356C51.2686 46.6121 51.3223 46.7849 51.4821 46.9532C51.5054 46.9778 51.5438 46.9823 51.5724 46.9623C51.6039 46.9403 51.6116 46.8969 51.5896 46.8654L51.5746 46.8438C51.3948 46.5865 51.3032 46.1865 51.2204 45.8429C51.1816 45.6645 51.1487 45.4839 51.1322 45.3069C51.1261 45.2206 51.1197 45.1285 51.1301 45.0583C51.1388 45.0055 51.131 45.0309 51.1571 44.9719C51.1824 44.923 51.2008 44.8782 51.2197 44.8322C51.3592 44.4681 51.4575 44.1095 51.551 43.7397C51.5733 43.6385 51.5953 43.5727 51.6124 43.4317C51.6218 43.3017 51.6004 43.1763 51.5546 43.0578C51.5086 42.9398 51.4345 42.8257 51.3166 42.732C51.2899 42.7096 51.2583 42.69 51.2245 42.6727C51.3203 42.2557 51.5214 41.8707 51.7912 41.5637C51.8044 41.5485 51.8178 41.5305 51.8286 41.5129C51.9327 41.3417 51.8785 41.1185 51.7073 41.0143L51.6738 40.9939C51.4137 40.8356 51.3219 40.3822 51.4718 40.1683C51.5006 40.1128 51.5823 40.0171 51.676 39.8586C51.7218 39.7772 51.7719 39.6767 51.8009 39.5477C51.8318 39.4195 51.831 39.272 51.8095 39.1561C51.765 38.921 51.6841 38.7766 51.651 38.6781C51.6211 38.5889 51.6009 38.5033 51.5872 38.4121C51.5389 38.0466 51.6521 37.6127 51.8093 37.1419L52.0681 36.3921C52.1135 36.2605 52.1465 36.1152 52.1762 35.9605C52.2123 35.8079 52.2328 35.6592 52.2436 35.5123C52.3522 34.3284 52.0927 33.2783 51.8642 32.2672C51.6334 31.2502 51.3331 30.2957 51.2558 29.2501Z",
						fill: "white"
					}))
				},
				i = {
					add: n.a.add,
					crosspost: n.a.crosspost,
					message: n.a.message,
					refresh: n.a.refresh,
					share: n.a.share,
					nsfw: n.a.nsfw,
					redditor: n.a.admin,
					comments: n.a.comments,
					comment: n.a.comments,
					community: n.a.community
				}
		},
		"./src/reddit/components/NotificationButton/index.m.less": function(e, t, s) {
			e.exports = {
				notificationButton: "_3KTYozwt91D81Yub-OQ4S3",
				icon: "SDzveG4fJf98RLE5vll2w",
				NotificationIcon: "H8V0P3uvgDxt7ZbIFf_Tv",
				notificationIcon: "H8V0P3uvgDxt7ZbIFf_Tv",
				NotificationIconFilled: "_13arOxnT-uyZ238frHLRM2",
				notificationIconFilled: "_13arOxnT-uyZ238frHLRM2"
			}
		},
		"./src/reddit/components/NotificationButton/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/components/InfoTextTooltip/Hooked.tsx"),
				i = s("./src/reddit/hooks/useInfoTextTooltip.ts"),
				c = s("./src/reddit/icons/fonts/index.tsx"),
				d = s("./src/reddit/components/NotificationButton/index.m.less"),
				l = s.n(d);
			t.a = e => {
				const t = Object(i.a)(),
					{
						isFilled: s,
						onClick: n,
						hasTooltip: d,
						tooltipText: m,
						className: u
					} = e;
				return r.a.createElement(r.a.Fragment, null, r.a.createElement("button", {
					className: Object(o.a)(l.a.notificationButton, u),
					ref: t.target.ref,
					onMouseEnter: t.show,
					onMouseLeave: t.hide,
					onClick: n
				}, r.a.createElement(c.a, {
					name: "notification",
					isFilled: s,
					className: l.a.icon,
					"aria-label": m
				})), d && r.a.createElement(a.a, {
					popperProps: t.popperProps,
					arrowProps: t.arrowProps,
					visible: t.visible
				}, m))
			}
		},
		"./src/reddit/components/Onboarding/LanguageCollection/LanguageCollection.m.less": function(e, t, s) {
			e.exports = {
				LanguageRow: "_1uqw13duLAypklZz9JuxH5",
				languageRow: "_1uqw13duLAypklZz9JuxH5",
				Selected: "C0ynfBku9Az2wYA9j1_PA",
				selected: "C0ynfBku9Az2wYA9j1_PA",
				NightModeSelected: "_3JYkv3aRJq9WBVU_Qu_O3K",
				nightModeSelected: "_3JYkv3aRJq9WBVU_Qu_O3K",
				ButtonSection: "_2go248Acx87AyaspT-IqC3",
				buttonSection: "_2go248Acx87AyaspT-IqC3",
				SelectedIcon: "Nqikdy52FO7Ok8SC7YbBy",
				selectedIcon: "Nqikdy52FO7Ok8SC7YbBy",
				FrontFlex: "_3qzPnI-sCnXtXXzmiLCUzt",
				frontFlex: "_3qzPnI-sCnXtXXzmiLCUzt",
				TextSection: "_5Rt2rPaHLuyB5smTxh9cS",
				textSection: "_5Rt2rPaHLuyB5smTxh9cS",
				Placeholder: "_3gtRwVx6uS2xZaynYajI9O",
				placeholder: "_3gtRwVx6uS2xZaynYajI9O",
				Icon: "_1ym0rG9P61fqq5EGeggDEg",
				icon: "_1ym0rG9P61fqq5EGeggDEg",
				isLeft: "_1wilU6X1e2oYYu84p5M0Bn",
				isRight: "_1N6ONFJor0MYB1AANfCh8M",
				LanguageListButtons: "_2GUwrGUdKWdruRBy2ogOPv",
				languageListButtons: "_2GUwrGUdKWdruRBy2ogOPv",
				HeaderBarImproved: "sKUGLH9bgXYnkNvi71PD6",
				headerBarImproved: "sKUGLH9bgXYnkNvi71PD6",
				MoreLanguages: "_34OOuEVRtCgQHxTw6Bm_SM",
				moreLanguages: "_34OOuEVRtCgQHxTw6Bm_SM",
				PromptContainer: "_2NBWDPVfLgJchMUSilY9hq",
				promptContainer: "_2NBWDPVfLgJchMUSilY9hq",
				PromptClose: "_1D3-VzG8d-pAsDFC2aDEqX",
				promptClose: "_1D3-VzG8d-pAsDFC2aDEqX",
				Close: "Z2DAjXDKT-rjUoOgPeR9b",
				close: "Z2DAjXDKT-rjUoOgPeR9b",
				PromptTitle: "_6pr2vYjViLknuzg7J_4II",
				promptTitle: "_6pr2vYjViLknuzg7J_4II",
				PromptSubtitle: "_1j479fpdJDH2JNDpssXW8Z",
				promptSubtitle: "_1j479fpdJDH2JNDpssXW8Z",
				PromptRow: "piSYz03CLXLD5jdQwPjUy",
				promptRow: "piSYz03CLXLD5jdQwPjUy",
				Dismiss: "Fssd937Pdx1KOrc1lhBS5",
				dismiss: "Fssd937Pdx1KOrc1lhBS5"
			}
		},
		"./src/reddit/components/Onboarding/LanguageCollection/prompt.tsx": function(e, t, s) {
			"use strict";
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/actions/eligibleUxExperiences/eligibleUxExperiences.ts"),
				c = s("./src/reddit/actions/toaster.ts"),
				d = s("./src/reddit/components/Onboarding/LanguageCollection/LanguageCollection.m.less"),
				l = s.n(d),
				m = s("./src/reddit/constants/componentTestIds.ts"),
				u = s("./src/reddit/contexts/ApiContext.tsx"),
				p = s("./src/reddit/endpoints/onboarding/languageSelections.ts"),
				C = s("./src/reddit/constants/tracking.ts"),
				b = s("./src/reddit/selectors/telemetry.ts");
			const h = "bottom_sheet";
			var f;
			! function(e) {
				e.ADD = "add", e.LATER = "maybe_later", e.SKIP = "skip"
			}(f || (f = {}));
			var g = s("./src/reddit/hooks/useTracking.ts"),
				x = s("./src/reddit/icons/svgs/Close/index.tsx"),
				v = s("./src/reddit/models/Toast/index.ts"),
				y = s("./src/reddit/selectors/eligibleUXExperiences.ts"),
				O = s("./src/reddit/selectors/experiments/uxtsIntegration.ts"),
				E = s("./src/reddit/selectors/meta.ts"),
				j = s("./src/redditGQL/types.ts");
			const {
				fbt: _
			} = s("./node_modules/fbt/lib/FbtPublic.js"), k = e => {
				const {
					gqlContext: t
				} = e, s = Object(o.d)(), d = Object(g.a)(), u = Object(o.e)(E.b), [y, O] = Object(n.useState)(!1), [k, L] = Object(n.useState)({}), [w, S] = Object(n.useState)({}), [I, P] = Object(n.useState)([]);
				let N = ["es"];
				const T = Object(n.useCallback)(async () => {
					const e = await Object(p.b)(t);
					e && (S(e.languages), P(e.preferences), O(!0))
				}, [t]);
				Object(n.useEffect)(() => {
					T()
				}, [T]);
				const M = e => {
						d("skip" === e ? (e => t => ({
							...Object(b.q)(t),
							source: h,
							action: C.c.CLICK,
							noun: f.SKIP,
							actionInfo: {
								...Object(b.d)(t),
								type: e
							}
						}))(u) : (e => t => ({
							...Object(b.q)(t),
							source: h,
							action: C.c.CLICK,
							noun: f.LATER,
							actionInfo: {
								...Object(b.d)(t),
								type: e
							}
						}))(u)), O(!1), s(Object(i.c)({
							experience: j.db.LanguagePreferenceBottomSheet,
							value: !1
						}))
					},
					R = () => {
						const e = Object.keys(k).join();
						d(((e, t) => s => ({
							...Object(b.q)(s),
							source: h,
							action: C.c.CLICK,
							noun: f.ADD,
							actionInfo: {
								...Object(b.d)(s),
								reason: t,
								type: e
							}
						}))(u, e)), (async () => {
							var e;
							const n = k;
							I.map(e => n[e] = !0);
							const r = await Object(p.d)(t, n);
							(null === (e = null == r ? void 0 : r.updateSpokenLanguagesPreference) || void 0 === e ? void 0 : e.ok) ? s(Object(c.f)({
								kind: v.b.SuccessCommunity,
								text: _._("Changes saved", null, {
									hk: "2isjrZ"
								})
							})): s(Object(c.f)({
								kind: v.b.Error,
								text: _._("Changes failed to save. Try adding content languages in user settings", null, {
									hk: "2YYdoj"
								})
							}))
						})(), O(!1), s(Object(i.c)({
							experience: j.db.LanguagePreferenceBottomSheet,
							value: !1
						}))
					};
				return N = N.filter(e => !I.includes(e)), y && 0 !== N.length ? (d((e => t => ({
					...Object(b.q)(t),
					source: h,
					action: C.c.VIEW,
					noun: C.b.SCREEN,
					actionInfo: {
						...Object(b.d)(t),
						type: e
					}
				}))(u)), s(Object(i.d)(j.db.LanguagePreferenceBottomSheet)), r.a.createElement("div", {
					className: l.a.PromptContainer
				}, r.a.createElement("div", {
					className: l.a.PromptClose
				}, r.a.createElement(x.a, {
					className: l.a.Close,
					onClick: () => M("skip"),
					"data-testid": m.e
				})), r.a.createElement("div", {
					className: l.a.PromptTitle
				}, _._("See content in more languages", null, {
					hk: "4uyzS1"
				})), r.a.createElement("div", {
					className: l.a.PromptSubtitle
				}, _._("Update your settings to make it easier to discover content in multiple languages", null, {
					hk: "3VhB1c"
				})), 1 === N.length ? r.a.createElement("div", {
					className: l.a.PromptRow,
					onClick: () => (e => {
						const t = k;
						t[e] = !0, L(t), R()
					})(N[0]),
					"data-testid": N[0]
				}, _._("Add {language}", [_._param("language", w[N[0]])], {
					hk: "2emiHZ"
				})) : null, r.a.createElement("div", {
					className: Object(a.a)(l.a.PromptRow, {
						[l.a.Dismiss]: !0
					}),
					onClick: () => M("later")
				}, _._("Maybe later", null, {
					hk: "2LjBDw"
				})))) : null
			};
			t.a = Object(u.b)(e => {
				var t;
				const {
					gqlContext: s
				} = e, n = Object(o.f)().getState();
				return (null === (t = Object(o.e)(e => Object(y.a)(e, {
					experience: j.db.LanguagePreferenceBottomSheet
				}))) || void 0 === t ? void 0 : t.value) && Object(O.b)(n) ? r.a.createElement(k, {
					gqlContext: s
				}) : null
			})
		},
		"./src/reddit/components/Pill/PillButton/index.m.less": function(e, t, s) {
			e.exports = {
				primaryButton: "cmR5BF4NpBUm3DBMZCmJS",
				active: "_2dj14FxV-bfkwopj1jV_fF",
				redditStyle: "C64b9palJF2n26mG_1q3D",
				DangerButtonColors: "_1aqI4zAQaNw-k6Jp5j3WJz",
				dangerButtonColors: "_1aqI4zAQaNw-k6Jp5j3WJz",
				GoldButtonColors: "Vi9jnbb9vJd6ugulSJIAD",
				goldButtonColors: "Vi9jnbb9vJd6ugulSJIAD",
				PremiumButtonColors: "ntawTzO-ZquMyaWgqE0je",
				premiumButtonColors: "ntawTzO-ZquMyaWgqE0je",
				Icon: "_1V9TNuAloX-Z3moRIXc8tO",
				icon: "_1V9TNuAloX-Z3moRIXc8tO",
				isLeft: "HjpiNF5rj_I6fiMfmW-X7",
				isRight: "_1A_npZJAxjfyiijZ14jtzh",
				tabGroup: "_2jNQT-6WbFOjX2hdDWV56w",
				inactive: "_1g3g98ViMb36cM-peU17Jk"
			}
		},
		"./src/reddit/components/Pill/PillButton/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return n
			})), s.d(t, "a", (function() {
				return u
			}));
			var n, r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/components/Pill/PillButton/index.m.less"),
				c = s.n(i);

			function d() {
				return (d = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}! function(e) {
				e.BUTTON = "BUTTON", e.TAB_GROUP = "TAB_GROUP"
			}(n || (n = {}));
			const l = {
					[n.BUTTON]: void 0,
					[n.TAB_GROUP]: c.a.tabGroup
				},
				m = (e, t) => {
					if (t !== n.BUTTON) return e ? c.a.active : c.a.inactive
				},
				u = e => {
					let {
						active: t = !0,
						children: s,
						className: n,
						disabled: r = !1,
						variant: i,
						...u
					} = e;
					return o.a.createElement("button", d({}, u, {
						className: Object(a.a)(c.a.primaryButton, l[i], m(t, i), n),
						disabled: r
					}), s)
				}
		},
		"./src/reddit/components/PostAuthorIsBlockedBanner/index.m.less": function(e, t, s) {
			e.exports = {
				bannerBase: "_1H6_lZclv3OiOYYLJ3oAEN",
				BlockIcon: "_3XxN6-i7j-QnWYRDuXOG5a",
				blockIcon: "_3XxN6-i7j-QnWYRDuXOG5a",
				blockedAuthorTextWrapper: "m2v6rWFRpijpyTUSArDdl",
				expandButton: "_1elWTUH22waxJo7g8N3y3J"
			}
		},
		"./src/reddit/components/PostBackgroundWrapper/index.m.less": function(e, t, s) {
			e.exports = {
				backgroundWrapper: "_1poyrkZ7g36PawDueRza-J",
				badge: "_1lLKAbRNH1mm32sVm7yCzQ"
			}
		},
		"./src/reddit/components/PostBackgroundWrapper/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				i = s("./src/reddit/helpers/styles/mixins/index.tsx"),
				c = s("./src/higherOrderComponents/withAdClickLocation/index.tsx"),
				d = s("./src/higherOrderComponents/withAdClickLocation/Locations.ts"),
				l = s("./src/reddit/components/PostBackgroundWrapper/index.m.less"),
				m = s.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = Object(c.a)(Object(a.a)(e => {
				const {
					children: t,
					className: s,
					flairStyleTemplate: n,
					onClick: a,
					post: c,
					redditStyle: l,
					theme: p,
					overrideBackgroundColor: C,
					...b
				} = e;
				return r.a.createElement("div", u({
					className: Object(o.a)(m.a.backgroundWrapper, s),
					style: C || Object(i.c)(n, e),
					onClick: a,
					"data-adclicklocation": d.a.BACKGROUND
				}, b), t)
			}))
		},
		"./src/reddit/components/PostContent/index.m.less": function(e, t, s) {
			e.exports = {
				content: "_3UMN4RCVY5288m_fOZlkcg",
				controlsContainer: "_1hwEKkB_38tIoal6fcdrt9",
				postNumbers: "_1svxG6WJ6vr-T9iN3rf5M6",
				flatlistContainer: "UPYG6UwB7XqTeGj4a4vBr",
				mainBody: "_3MC4c3Q_Y41YKtl1TcvyMt",
				leftPadding: "_1mK-LVHGTTlcFpMsjItjYJ",
				postContainer: "_2rszc84L136gWQrkwH6IaM",
				hasEventMeta: "qpc-hx5EvongRjYhe0TOO",
				AdSupplementaryText: "NmXBiC9unWsHj0GoWydry",
				adSupplementaryText: "NmXBiC9unWsHj0GoWydry",
				PostTitle: "_2v9pwVh0VUYrmhoMv1tHPm",
				postTitle: "_2v9pwVh0VUYrmhoMv1tHPm",
				ExpandoButton: "_1sq8G2ap3_yMYvXINVLxFm",
				expandoButton: "_1sq8G2ap3_yMYvXINVLxFm",
				ClassicExpandoMotion: "_2w7fkGYeZk22ZtKCTcGj_T",
				classicExpandoMotion: "_2w7fkGYeZk22ZtKCTcGj_T",
				ClassicPostMedia: "_3l9ryDzeuWyQEv-5287xPH",
				classicPostMedia: "_3l9ryDzeuWyQEv-5287xPH",
				FullWidthFlatlist: "_3P3ghhoNky7Bzspbfw7--R",
				fullWidthFlatlist: "_3P3ghhoNky7Bzspbfw7--R",
				LargePostMedia: "_1Ap4F5maDtT1E1YuCiaO0r",
				largePostMedia: "_1Ap4F5maDtT1E1YuCiaO0r",
				isCommentsPage: "D3IL3FD0RFy_mkKLPwL4",
				adLinkWrapper: "_3SVc61tFn_bE8SioJlUB-J",
				classicThumbnail: "_1FHUoxLVcplbcdYoOYbzlq",
				classicNotificationButton: "_3PPSzlne0JO99X7TQkgRgN",
				ThumbLink: "_3SCgQPuxXigmV7fEOhNHCN",
				thumbLink: "_3SCgQPuxXigmV7fEOhNHCN",
				VideoProcessingStatus: "_16S8F-ykERyNWpmVnAU9y0",
				videoProcessingStatus: "_16S8F-ykERyNWpmVnAU9y0",
				modModeBannerWrapper: "_2TM2Nmy6QisWK1nerxy26v"
			}
		},
		"./src/reddit/components/PostContent/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return Pt
			})), s.d(t, "b", (function() {
				return Nt
			})), s.d(t, "a", (function() {
				return Tt
			}));
			var n = s("./node_modules/lodash/noop.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				d = s("./src/reddit/hooks/useIsAvatarPost.ts"),
				l = s("./node_modules/reselect/es/index.js"),
				m = s("./src/lib/ads/index.ts"),
				u = s("./src/lib/classNames/index.ts"),
				p = s("./src/lib/lessComponent.tsx"),
				C = s("./src/lib/objectSelector/index.ts"),
				b = s("./src/lib/pubsub/index.ts"),
				h = s("./src/lib/timeAgo/index.ts"),
				f = s("./src/reddit/actions/post.ts"),
				g = s("./src/reddit/helpers/canRenderThumbnail.ts"),
				x = s("./src/reddit/models/User/index.ts"),
				v = s("./src/reddit/helpers/hasModFlairPermissions/index.ts"),
				y = s("./src/reddit/helpers/hasModFullPermissions/index.ts"),
				O = s("./src/reddit/helpers/hasModPostPermissions/index.ts"),
				E = s("./src/reddit/helpers/path/index.ts"),
				j = s("./src/reddit/helpers/trackers/lightbox.ts"),
				_ = s("./src/reddit/helpers/trackers/post.ts"),
				k = s("./src/reddit/components/ItemCarousel/index.tsx"),
				L = s("./src/reddit/actions/tooltip.ts"),
				w = s("./node_modules/lodash/find.js"),
				S = s.n(w),
				I = s("./node_modules/react-motion/lib/react-motion.js");
			const P = {
					stiffness: 300,
					damping: 5,
					precision: .005
				},
				N = "expando_content",
				T = {},
				M = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
						t = arguments.length > 1 ? arguments[1] : void 0;
					const s = S()(e, {
							key: N
						}),
						n = s && s.style ? s.style.opacity : 0;
					return t ? n >= 1 ? [{
						key: N,
						style: {
							opacity: 1
						}
					}] : n > 0 ? [{
						key: N,
						style: {
							opacity: Object(I.spring)(1, P)
						}
					}] : [{
						key: N,
						style: {
							opacity: .1
						}
					}] : n < .1 ? [] : [{
						key: N,
						style: {
							opacity: Object(I.spring)(0, P)
						}
					}]
				};
			class R extends a.a.Component {
				constructor(e) {
					super(e), this.onSizeChanged = () => (this.props.onSizeChanged && this.props.onSizeChanged(), T), this.state = {
						expanded: e.shouldExpand,
						renderTransitionMotion: e.shouldExpand
					}
				}
				componentWillReceiveProps(e) {
					e.shouldExpand && !this.state.renderTransitionMotion ? this.setState(() => ({
						renderTransitionMotion: !0
					}), () => {
						setTimeout(() => {
							this.setState({
								expanded: !0
							})
						})
					}) : e.shouldExpand !== this.state.expanded && this.setState({
						expanded: e.shouldExpand
					})
				}
				render() {
					const {
						renderTransitionMotion: e,
						expanded: t
					} = this.state;
					if (!e) return !1;
					const {
						className: s,
						content: n
					} = this.props;
					return a.a.createElement(I.TransitionMotion, {
						styles: e => M(e, t),
						didLeave: this.onSizeChanged,
						willEnter: this.onSizeChanged
					}, e => a.a.createElement("div", {
						className: s
					}, e.map(e => a.a.createElement("div", {
						key: e.key,
						style: e.style
					}, n))))
				}
			}
			var F = s("./src/reddit/models/Media/index.ts"),
				B = s("./src/reddit/models/Post/index.ts"),
				A = s("./src/reddit/models/Vote/index.ts"),
				D = s("./src/reddit/selectors/activeModalId.ts"),
				U = s("./src/reddit/selectors/experiments/intuitivePostTypes.ts"),
				W = s("./src/reddit/selectors/isModeratorOfSubreddit.ts"),
				H = s("./src/reddit/selectors/moderatorPermissions.ts"),
				V = s("./src/reddit/selectors/postCreations.ts"),
				Z = s("./src/reddit/selectors/posts.ts"),
				q = s("./src/reddit/selectors/user.ts"),
				z = s("./src/reddit/components/AdLinkWrapper/index.tsx"),
				K = s("./src/reddit/components/AdLinkWrapperContent/index.tsx"),
				G = s("./src/reddit/components/AdSupplementaryText/index.tsx"),
				Y = s("./src/reddit/components/BoostPost/index.ts"),
				J = s("./src/reddit/components/ClassicPost/Thumbnail.tsx"),
				Q = s("./src/reddit/components/DevvitCustomPost/index.tsx"),
				X = s("./src/reddit/components/Econ/Audio/async.ts"),
				$ = s("./src/reddit/components/Econ/Prediction/TournamentPostBody/async.ts"),
				ee = s("./src/reddit/components/Econ/Prediction/TournamentPostTitle/index.tsx"),
				te = s("./src/reddit/components/EventPost/EventMetaHeader/index.tsx"),
				se = s("./src/reddit/components/ExpandoButton/index.tsx"),
				ne = s("./src/reddit/components/FlairWrapper/index.tsx"),
				re = s("./src/reddit/components/Flatlist/index.tsx"),
				oe = s("./src/reddit/components/IntuitivePostTypes/OptionalText.tsx"),
				ae = s("./src/reddit/components/ItemCarousel/helpers.ts"),
				ie = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				ce = s("./src/reddit/components/MediumPost/MediumThumbnail.tsx"),
				de = s("./src/reddit/components/ModModeFilteredReason/index.tsx"),
				le = s("./src/reddit/components/ModModeFilteredReason/helpers.ts"),
				me = s("./src/reddit/components/ModModeReports/index.tsx"),
				ue = s("./src/reddit/components/ModModeReports/helpers.ts"),
				pe = s("./src/reddit/components/NotificationButton/index.tsx"),
				Ce = s("./src/reddit/components/PostContainer/index.tsx"),
				be = s("./src/higherOrderComponents/makeAsync.tsx"),
				he = s("./src/lib/loadWithRetries/index.ts"),
				fe = s("./src/reddit/components/RichTextEditor/Placeholder.tsx");
			const ge = Object(be.a)({
				ErrorComponent: () => a.a.createElement(fe.a, {
					isLoading: !1,
					toolbarPosition: "top"
				}),
				getComponent: () => Object(he.a)(() => Promise.all([s.e("vendors~ChatMessageInput~FlairEdit~MembershipPaywallPage~PostCreation~RichTextEditor"), s.e("CommentsPage~Reddit~RichTextEditor~reddit-components-LargePost~reddit-components-MediumPost~reddit-c~cad4f428"), s.e("ChatMessageInput~MembershipPaywallPage~RichTextEditor"), s.e("RichTextEditor")]).then(s.bind(null, "./src/reddit/components/PostEditForm/index.tsx")).then(e => e.default)),
				LoadingComponent: () => a.a.createElement(fe.a, {
					isLoading: !0,
					toolbarPosition: "top"
				})
			});
			var xe = e => a.a.createElement(ge, e),
				ve = s("./src/reddit/components/PostList/index.tsx"),
				ye = s("./src/reddit/components/PostMedia/index.tsx"),
				Oe = s("./src/reddit/components/PostOverflowMenu/index.tsx"),
				Ee = s("./src/reddit/components/PostRailAndVotes/index.tsx"),
				je = s("./src/reddit/components/PostTitle/index.tsx"),
				_e = s("./src/reddit/components/PostTopLine/index.tsx"),
				ke = s("./src/reddit/components/PostTopMeta/index.tsx"),
				Le = s("./src/reddit/components/SourceLink/index.tsx"),
				we = s("./src/reddit/components/TrackingHelper/index.tsx"),
				Se = s("./src/reddit/components/UsersCountIndicator/async.tsx"),
				Ie = s("./src/reddit/constants/componentSizes.ts"),
				Pe = s("./src/reddit/constants/componentTestIds.ts"),
				Ne = s("./src/reddit/constants/postLayout.ts"),
				Te = s("./src/reddit/contexts/PageLayer/index.tsx"),
				Me = s("./src/reddit/helpers/postEvent.ts"),
				Re = s("./src/reddit/hooks/useIntersectionObserver.ts"),
				Fe = s("./src/reddit/selectors/postFlair.ts"),
				Be = s("./src/reddit/models/Audio/index.ts"),
				Ae = s("./src/reddit/models/Prediction/Tournament/index.ts"),
				De = s("./src/reddit/selectors/experiments/postActionBarAnimation.ts"),
				Ue = s("./src/reddit/constants/experiments.ts"),
				We = s("./src/reddit/helpers/chooseVariant/index.ts"),
				He = s("./src/reddit/selectors/experiments/presence.ts");
			const Ve = e => {
					return Object(We.c)(e, {
						experimentEligibilitySelector: We.a,
						experimentName: Ue.qg
					}) === Ue.Rd
				},
				Ze = e => {
					if (Object(He.a)(e)) return !1;
					return Object(We.c)(e, {
						experimentEligibilitySelector: We.a,
						experimentName: Ue.pg
					}) === Ue.Rd
				},
				qe = (e, t) => {
					let {
						postId: s
					} = t;
					const n = Object(Z.F)(e, {
						postId: s
					});
					return !(Object(He.a)(e) || !n || n.isSponsored) && Object(We.c)(e, {
						experimentEligibilitySelector: We.a,
						experimentName: Ue.og
					}) === Ue.Rd
				};
			var ze = s("./src/reddit/selectors/experiments/typingIndicators.ts"),
				Ke = s("./node_modules/fbt/lib/FbtPublic.js"),
				Ge = s("./src/reddit/constants/colors.ts"),
				Ye = s("./src/reddit/icons/fonts/index.tsx"),
				Je = s("./src/reddit/components/InfoBanners/BannerBase/index.tsx"),
				Qe = s("./src/reddit/components/PostAuthorIsBlockedBanner/index.m.less"),
				Xe = s.n(Qe);
			const $e = a.a.createElement(Ye.a, {
				className: Xe.a.BlockIcon,
				name: "block"
			});
			var et = e => {
					const {
						onBannerClick: t,
						isExpandable: s
					} = e;
					return a.a.createElement(Je.a, {
						className: Xe.a.bannerBase,
						color: Ge.a.dayModeActionIcon,
						icon: $e,
						title: Ke.fbt._("Posted by a blocked user", null, {
							hk: "1Bg4AI"
						}),
						subtitle: s && a.a.createElement("button", {
							className: Xe.a.expandButton,
							onClick: t
						}, Ke.fbt._("EXPAND", null, {
							hk: "2t0KIg"
						})),
						textWrapperClassName: Xe.a.blockedAuthorTextWrapper
					})
				},
				tt = s("./src/reddit/components/InfoBanners/PostRemovalBanner/helpers.tsx"),
				st = s("./src/reddit/components/InfoBanners/PostRemovalBanner/index.m.less"),
				nt = s.n(st);
			var rt = e => {
				const {
					hasPerms: t,
					removedBy: s,
					removedByCategory: n,
					subredditName: r
				} = e, o = t ? Object(tt.e)(n, s, r) : Object(tt.f)(n, r), i = t ? Object(tt.c)(n) : Object(tt.d)(n, r), c = t ? Ge.a.warning : Ge.a.dayModeActionIcon, d = Object(tt.a)(n);
				return a.a.createElement(Je.a, {
					className: nt.a.BannerBase,
					color: c,
					icon: d,
					subtitle: i,
					title: o
				})
			};

			function ot(e) {
				const {
					isAdminOrMod: t,
					post: s,
					subredditOrProfile: n
				} = e;
				return a.a.createElement(a.a.Fragment, null, n && s.removedByCategory && a.a.createElement(rt, {
					hasPerms: t,
					removedBy: s.removedBy,
					removedByCategory: s.removedByCategory,
					subredditName: n.name
				}))
			}
			var at = s("./src/reddit/components/PostContent/ViewCount.tsx"),
				it = s("./src/reddit/actions/crosspostSubredditRec/index.ts"),
				ct = s("./src/reddit/actions/modal.ts"),
				dt = s("./src/reddit/components/CrosspostRecommendationsModal/constants.tsx"),
				lt = s("./src/reddit/selectors/experiments/crosspostRecommendations.ts"),
				mt = s("./src/reddit/selectors/experiments/nsfwBlockingExperiment.ts"),
				ut = s("./src/reddit/selectors/experiments/subredditDiscovery.ts"),
				pt = s("./src/redditGQL/types.ts"),
				Ct = s("./src/reddit/components/PostUnavailableBanner/index.m.less"),
				bt = s.n(Ct);
			const ht = a.a.createElement(Ye.a, {
				className: bt.a.RemoveIcon,
				name: "delete_fill"
			});
			var ft = () => a.a.createElement(Je.a, {
					className: bt.a.bannerBase,
					color: Ge.a.dayModeActionIcon,
					icon: ht,
					title: Ke.fbt._("Sorry, this post is no longer available.", null, {
						hk: "sb8eO"
					})
				}),
				gt = s("./src/reddit/components/PostContent/index.m.less"),
				xt = s.n(gt),
				vt = s("./src/reddit/actions/postGuidance/index.ts"),
				yt = s("./src/reddit/hooks/useIsRemovedOrDeletedPost.ts");
			const {
				fbt: Ot
			} = s("./node_modules/fbt/lib/FbtPublic.js"), Et = p.a.wrapped(je.c, "PostTitle", xt.a), jt = p.a.wrapped(se.a, "ExpandoButton", xt.a), _t = p.a.wrapped(R, "ClassicExpandoMotion", xt.a), kt = p.a.wrapped(re.c, "FullWidthFlatlist", xt.a), Lt = e => {
				var t;
				return a.a.createElement("p", {
					className: xt.a.VideoProcessingStatus
				}, (null === (t = e.post.mediaStatus) || void 0 === t ? void 0 : t.transcodingStatus) === pt.bb.Error ? Ot._("The video file submitted for this post failed to process successfully.", null, {
					hk: "2ybSik"
				}) : e.isAuthorCurrentUser ? Ot._("Your video is processing. We'll send you a notification when it's done.", null, {
					hk: "1rkfJE"
				}) : null)
			}, wt = Object(Te.v)({
				isCommentsPage: Te.y,
				pageLayer: e => e
			}), St = Object(i.b)(() => Object(l.c)({
				activeModalId: D.a,
				flairStyleTemplate: Te.Y,
				currentUser: q.m,
				crosspost: Z.d,
				hideNSFWPref: q.H,
				imageGalleryCurrentItem: Z.i,
				isAdminOrMod: (e, t) => {
					const s = Object(Z.U)(e, {
						postId: t.postId
					});
					return !!s && Object(W.c)(e, {
						subredditId: s.id
					})
				},
				isBlurredPreview: mt.b,
				isCurrentUserProfilePost: Z.l,
				isExpanded: Z.m,
				isFollowed: Z.t,
				isFollowedExpired: Z.o,
				post: Z.F,
				moderatorPermissions: H.m,
				modModeEnabled: Te.W,
				shouldTryToShowCrosspostModal: lt.e,
				showEditFlair: Fe.a,
				subredditOrProfile: Z.U,
				isEditing: V.M,
				userIsOp: q.Gb,
				isVoteCountAnimation: (e, t) => !!t.isActionBarAnimationEnabled && Object(De.f)(e, {
					postId: t.postId
				}),
				isCommentCountAnimation: (e, t) => !!t.isActionBarAnimationEnabled && Object(De.c)(e, {
					postId: t.postId
				}),
				isReadingIndicatorsExperimentEnabled: qe,
				isReadingIndicatorsReadTestEnabled: Ze,
				isReadingIndicatorsWriteTestEnabled: Ve,
				isTypingIndicatorsExperimentEnabled: ze.b,
				isTypingIndicatorsReadTestEnabled: ze.c
			}), (e, t) => {
				let {
					pageLayer: s,
					postId: n
				} = t;
				return {
					onIgnoreReports: () => e(Object(f.eb)(n)),
					onOpenReportsDropdown: t => e(Object(L.h)({
						tooltipId: t
					})),
					onVoteClick: t => {
						const s = t === A.a.upvoted ? Object(f.ib)(n) : Object(f.v)(n);
						e(s)
					},
					fireAdPixelsOfType: (t, s) => e(Object(f.y)(t, s)),
					openPost: t => e(Object(f.K)(t)),
					onFollowPost: t => e(Object(f.hb)(n, t)),
					onFollowPostExpired: () => e(Object(f.W)({
						id: n,
						expiresAt: 0
					}))
				}
			}), It = e => e.media && e.media.type === F.o.EMBED && e.media.provider === F.v.Imgur && e.media.height > 700, Pt = new b.a, Nt = "VISIBLE", Tt = "NOT_VISIBLE", Mt = e => Pt.publish(e ? Nt : Tt), Rt = {
				threshold: [.85, .001],
				rootMargin: `${1-Ie.f}px 0px 0px 0px`
			}, Ft = e => {
				for (const t of e) {
					const {
						intersectionRatio: e
					} = t;
					e >= .85 && Mt(!1), e <= .001 && Mt(!0)
				}
			}, Bt = Object(C.b)(e => ({
				renderingObjectInfo: e.post,
				pageLayer: e.pageLayer
			})), At = p.a.wrapped(c.a, "ThumbLink", xt.a), Dt = e => {
				let {
					post: t,
					templatePlaceholderImage: s,
					shouldShowFollowButton: n,
					isFollowed: r,
					onFollowPostClick: o
				} = e;
				const i = t.source ? a.a.createElement(J.a, {
					post: t,
					forceShowNSFW: !0,
					templatePlaceholderImage: s
				}) : a.a.createElement(At, {
					to: Object(E.b)(t.permalink)
				}, a.a.createElement(J.a, {
					post: t,
					forceShowNSFW: !0
				}));
				return a.a.createElement("div", {
					className: xt.a.classicThumbnail
				}, n && a.a.createElement(pe.a, {
					className: xt.a.classicNotificationButton,
					isFilled: !!r,
					onClick: o,
					hasTooltip: !0,
					tooltipText: Ot._("Follow post to stay updated", null, {
						hk: "26UP9Z"
					})
				}), i)
			}, Ut = e => {
				let {
					post: t,
					isExpanded: s,
					scrollerItemRef: n
				} = e;
				return a.a.createElement(_t, {
					content: a.a.createElement(a.a.Fragment, null, a.a.createElement(ye.a, {
						className: xt.a.ClassicPostMedia,
						isListing: !1,
						isNotCardView: !0,
						post: t,
						shouldLoad: !0,
						showFull: !0,
						showCentered: !0,
						scrollerItemRef: n
					})),
					shouldExpand: !!s
				})
			};
			t.c = wt(St(e => {
				const {
					className: t,
					crosspost: s,
					currentUser: n,
					fireAdPixelsOfType: c,
					flairStyleTemplate: l,
					forceOpenInNewTab: p,
					hideNSFWPref: C,
					imageGalleryCurrentItem: b,
					isAdminOrMod: f,
					isBlurredPreview: E,
					isCommentCountAnimation: L,
					isCommentsPage: w,
					isCountAnimShadowTestEnabled: S,
					isCrosspostRecommendationsExperimentEnabled: I,
					isCurrentUserProfilePost: P,
					isEditing: N,
					isExpanded: T,
					isFollowed: M,
					isFollowedExpired: R,
					isModWithUserNotesPermissions: A,
					isOverlay: D,
					isReadingIndicatorsExperimentEnabled: W,
					isReadingIndicatorsReadTestEnabled: H,
					isReadingIndicatorsWriteTestEnabled: V,
					isTypingIndicatorsExperimentEnabled: Z,
					isTypingIndicatorsReadTestEnabled: q,
					isVoteCountAnimation: J,
					moderatorPermissions: se,
					modModeEnabled: pe,
					onFollowPost: be,
					onFollowPostExpired: he,
					onIgnoreReports: fe,
					onOpenReportsDropdown: ge,
					openPost: Ie,
					onVoteClick: Te,
					post: Fe,
					scrollerItemRef: De,
					sendEvent: Ue,
					shouldTryToShowCrosspostModal: We,
					showEditFlair: He,
					subredditOrProfile: Ve,
					userIsOp: Ze,
					pageLayer: qe
				} = e, ze = Object(we.b)(), Ke = Object(o.useRef)(null), [Ge, Ye] = Object(o.useState)(Fe.authorIsBlocked), Je = Object(F.L)(Fe), Qe = Object(F.G)(Fe), Xe = Object(i.e)(e => Object(U.a)(e, {
					post: Fe,
					pageLayer: qe
				})), $e = Object(d.a)(Fe), tt = W || Z, st = tt || H || V || q, nt = !!(E && (null == Ve ? void 0 : Ve.isNSFW));
				Object(o.useEffect)(() => {
					R && he()
				}, []);
				const rt = Object(i.d)(),
					lt = Object(o.useRef)(null);
				Object(o.useEffect)(() => {
					if (I && We) return rt(Object(it.a)(Fe)), lt.current = setTimeout(() => {
						rt(Object(ct.h)(dt.a)), rt(Object(it.b)())
					}, dt.b), () => {
						rt(Object(it.b)()), rt(Object(ct.g)(dt.a)), lt.current && clearTimeout(lt.current)
					}
				}, [rt, I, Fe, We]), Object(o.useEffect)(() => {
					rt(Object(vt.a)())
				}, []), Object(Re.a)(Ke, Ft, Rt);
				const mt = Fe.isSponsored ? Object(ve.b)(Fe.id, {
						fireAdPixelsOfType: c,
						openPost: Ie
					}) : r.a,
					pt = Object(O.a)(se),
					Ct = Object(v.a)(se),
					bt = Object(y.a)(se),
					ht = pt || Ct,
					gt = ((e, t, s) => {
						const [n, r] = e ? [Object(x.e)(e) === s.author, e.isEmployee] : [!1, !1];
						return n || t || r
					})(n, ht, Fe),
					Ot = !!Fe.media && (Fe.media.type === F.o.RTJSON || Fe.media.type === F.o.TEXT),
					_t = Ze && Ot,
					wt = Object(le.a)(Fe),
					St = Object(ue.c)(Fe);
				let Pt;
				const Nt = Object(yt.a)(),
					Tt = !(pe && pt),
					Mt = Object(Oe.b)({
						hide: !tt && Tt,
						editPost: !tt && Tt,
						save: Tt,
						report: !tt && Tt
					}),
					At = Fe.removedByCategory === B.g.AuthorDeleted,
					Wt = n && (n.displayText === Fe.author || n.username === Fe.author),
					Ht = !!Fe.unrepliableReason,
					Vt = !Ge && !At && !It(Fe) && (Wt || f || !(Fe.removedByCategory && Fe.media && (Object(F.O)(Fe.media) || Object(F.M)(Fe.media) || Object(F.H)(Fe.media)))),
					Zt = Xe && Fe.source;
				let qt;
				Fe.media && Fe.media.type !== F.o.TEXT && (qt = Fe.media.richtextContent);
				const zt = Object(m.t)(Fe, b),
					Kt = Fe.removedByCategory === B.g.Reddit && Object(h.e)(Fe.created) > 24,
					Gt = Fe.removedByCategory && Fe.removedByCategory !== B.g.Reddit || Kt,
					Yt = !Gt && !Fe.isArchived,
					Jt = Object(o.useCallback)(() => {
						be(M ? B.f.UNFOLLOWED : B.f.FOLLOWED), ze(M ? Object(_.t)(Fe.id) : Object(_.f)(Fe.id))
					}, [be, ze, M, Fe.id]),
					Qt = a.a.createElement(a.a.Fragment, null, a.a.createElement(Et, {
						post: Fe,
						innerRef: Ke,
						size: je.b.ExtraLarge,
						isOverlay: D,
						disableVisited: !0,
						isCommentsPage: !0
					}), a.a.createElement(G.a, {
						className: xt.a.AdSupplementaryText,
						post: Fe,
						size: je.b.ExtraLarge
					})),
					Xt = a.a.createElement(at.a, {
						post: Fe,
						showViewCount: gt
					}),
					$t = (e => {
						const {
							crosspost: t,
							isCommentPermalink: s,
							post: n
						} = e;
						return s ? Ne.g.Classic : Object(Ae.c)(n) ? Ne.g.Large : Object(Be.b)(n) ? Ne.g.Large : t || Object(B.A)(n) ? Ne.g.Large : !n.media || Object(B.q)(n) || It(n) ? Ne.g.Medium : Ne.g.Large
					})(e),
					es = Object(i.e)(ut.b),
					ts = Object(ae.b)(Fe),
					ss = () => {
						const t = !(Ht && Ge),
							n = Object(F.K)(Fe);
						return Ht && n ? a.a.createElement(ft, null) : Ge ? a.a.createElement(et, {
							onBannerClick: () => Ye(!1),
							isExpandable: Je
						}) : Nt || !Fe.source || $t !== Ne.g.Medium || nt ? Vt && Qe ? a.a.createElement(Q.a, {
							post: Fe
						}) : Vt && !N && $t === Ne.g.Large ? a.a.createElement(ye.a, {
							className: Object(u.a)(xt.a.LargePostMedia, {
								[xt.a.isCommentsPage]: w
							}),
							isCommentsPage: !0,
							isListing: !1,
							isNotCardView: D,
							isOverlay: D,
							post: Fe,
							shouldLoad: !0,
							showFull: !0,
							shouldPause: !D,
							showCentered: !0,
							scrollerItemRef: De
						}) : t && $t === Ne.g.Classic ? a.a.createElement(a.a.Fragment, null, a.a.createElement(jt, {
							crosspost: s || void 0,
							isExpanded: !!T,
							post: Fe,
							useMediaIcons: !1
						}), Ut(e)) : null : a.a.createElement(Le.a, {
							post: Fe,
							isCommentsPage: w,
							pageLayer: qe
						})
					};
				if ($t === Ne.g.Classic) {
					const t = !Nt && Object(g.a)(Fe, Ge);
					Pt = a.a.createElement("div", {
						"data-test-id": Pe.f
					}, a.a.createElement(Ee.a, {
						model: Fe,
						handleVote: Te,
						isCountAnimShadowTestEnabled: S,
						isOverlay: D,
						isVoteCountAnimation: J,
						postId: Fe.id
					}), a.a.createElement("div", {
						className: xt.a.mainBody
					}, a.a.createElement("div", {
						className: xt.a.content
					}, a.a.createElement(_e.a, {
						hideNSFWPref: C,
						inSubredditOrProfile: !0,
						isCommentsPage: w,
						isCurrentUserProfilePost: P,
						isModWithUserNotesPermissions: !!A,
						isOverlay: !!D,
						isTopicPage: !1,
						post: Fe,
						shouldShowSubscribeButton: !1,
						showSubreddit: !!D && !Fe.isSponsored,
						showSubredditIcon: !0,
						subredditOrProfile: Ve,
						shouldShowFollowButton: Yt && !t,
						isFollowed: M,
						onFollowPostClick: Jt
					}), Qt, a.a.createElement(ne.a, {
						className: w ? xt.a.leftPadding : void 0,
						post: Fe,
						sendEvent: Ue
					}), Zt && qt && a.a.createElement(oe.a, {
						content: qt,
						rtJsonElementProps: Bt(e)
					}), pe && pt && St && a.a.createElement(me.a, {
						onIgnoreReports: fe,
						reportable: Fe
					}), a.a.createElement(ie.d, null), a.a.createElement("div", {
						className: xt.a.FlatlistContainer
					}, ss(), a.a.createElement(kt, {
						currentUser: n,
						hasModFlairPerms: Ct,
						hasModFullPerms: bt,
						hasModPostPerms: pt,
						isOverlay: D,
						onIgnoreReports: fe,
						onOpenReportsDropdown: ge,
						modModeEnabled: pe,
						post: Fe,
						showUpvotePercent: !0,
						showViewCount: gt,
						useFlatlistBreakpoints: Mt,
						isCommentCountAnimation: L,
						isCountAnimShadowTestEnabled: S
					}))), t && a.a.createElement(Dt, {
						post: Fe,
						templatePlaceholderImage: l && l.postPlaceholderImage,
						shouldShowFollowButton: Yt,
						isFollowed: M,
						onFollowPostClick: Jt
					})))
				} else if ($t === Ne.g.Medium) {
					const t = !Nt && Object(g.a)(Fe, Ge);
					Pt = a.a.createElement("div", {
						"data-test-id": Pe.f
					}, a.a.createElement(Ee.a, {
						model: Fe,
						handleVote: Te,
						isCountAnimShadowTestEnabled: S,
						isOverlay: D,
						shouldShowUpvoteRatioOnHover: tt,
						isVoteCountAnimation: J,
						postId: Fe.id
					}), a.a.createElement("div", {
						className: xt.a.mainBody
					}, a.a.createElement("div", {
						className: xt.a.content
					}, a.a.createElement(_e.a, {
						hideNSFWPref: C,
						inSubredditOrProfile: !0,
						isCommentsPage: w,
						isCurrentUserProfilePost: P,
						isModWithUserNotesPermissions: !!A,
						isOverlay: !!D,
						isTopicPage: !1,
						post: Fe,
						shouldShowSubscribeButton: !1,
						showSubreddit: !!D && !Fe.isSponsored,
						showSubredditIcon: !0,
						subredditOrProfile: Ve,
						shouldShowFollowButton: Yt && !t,
						isFollowed: M,
						onFollowPostClick: Jt
					}), Qt, ss(), Object(F.Q)(Fe) && a.a.createElement(Lt, {
						post: Fe,
						isAuthorCurrentUser: !!Wt
					}), a.a.createElement(ne.a, {
						className: w ? xt.a.leftPadding : void 0,
						post: Fe,
						sendEvent: Ue
					}), Ve && Gt && a.a.createElement(ot, {
						isAdminOrMod: f,
						post: Fe,
						subredditOrProfile: Ve
					}), pe && pt && St && a.a.createElement(me.a, {
						onIgnoreReports: fe,
						reportable: Fe
					})), t && !$e && a.a.createElement(ce.a, {
						post: Fe,
						forceShowNSFW: !0,
						hasModPostPerms: ht,
						isCommentsPage: w,
						isOverlay: !0,
						modModeEnabled: pe,
						templatePlaceholderImage: l && l.postPlaceholderImage,
						subredditOrProfile: Ve,
						shouldShowFollowButton: Yt,
						isFollowed: M,
						onFollowPostClick: Jt
					})), Zt && qt && !Gt && a.a.createElement(oe.a, {
						content: qt,
						rtJsonElementProps: Bt(e)
					}), a.a.createElement(ie.d, null), !!es && a.a.createElement(k.a, {
						itemIds: ts,
						hasSubredditNames: !0,
						hasPostIds: !0,
						isDiscovery: !0,
						post: Fe,
						size: "small"
					}), a.a.createElement("div", {
						className: xt.a.controlsContainer
					}, a.a.createElement(re.c, {
						currentUser: n,
						hasModFlairPerms: Ct,
						hasModFullPerms: bt,
						hasModPostPerms: pt,
						isOverlay: D,
						modModeEnabled: pe,
						onIgnoreReports: fe,
						onOpenReportsDropdown: ge,
						post: Fe,
						showEditPost: _t,
						showEditFlair: He,
						tooltipType: D ? ke.f.Lightbox : void 0,
						useFlatlistBreakpoints: Mt,
						isCommentCountAnimation: L,
						isCountAnimShadowTestEnabled: S,
						shouldHideItems: tt
					}), st && a.a.createElement(Se.a, {
						isReadingIndicatorsExperiment: W,
						isReadingIndicatorsReadLoadTest: H,
						isReadingIndicatorsWriteLoadTest: V,
						isTypingIndicatorsExperiment: Z,
						isTypingIndicatorsReadLoadTest: q,
						postId: Fe.id
					}), !tt && Xt), Object(Y.e)(Fe, n) && a.a.createElement(Y.a, {
						postId: Fe.id,
						user: n
					}))
				} else $t === Ne.g.Large && (Pt = a.a.createElement("div", {
					"data-test-id": Pe.f
				}, a.a.createElement(Ee.a, {
					model: Fe,
					handleVote: Te,
					isCountAnimShadowTestEnabled: S,
					isOverlay: D,
					shouldShowUpvoteRatioOnHover: tt,
					isVoteCountAnimation: J,
					postId: Fe.id
				}), Object(Ae.c)(Fe) && a.a.createElement(a.a.Fragment, null, a.a.createElement(ee.a, {
					post: Fe
				}), a.a.createElement($.a, {
					post: Fe
				})), !Object(Ae.c)(Fe) && a.a.createElement(a.a.Fragment, null, a.a.createElement(_e.a, {
					forceOpenInNewTab: p,
					hideNSFWPref: C,
					inSubredditOrProfile: !0,
					isCommentsPage: w,
					isCurrentUserProfilePost: P,
					isModWithUserNotesPermissions: !!A,
					isOverlay: !!D,
					isTopicPage: !1,
					post: Fe,
					shouldShowSubscribeButton: !1,
					showSubreddit: !!D && !Fe.isSponsored,
					showSubredditIcon: !0,
					subredditOrProfile: Ve,
					shouldShowFollowButton: Yt,
					isFollowed: M,
					onFollowPostClick: Jt
				}), Qt, ((e, t, s, n) => !Nt && e.source && !t && (s || n))(Fe, s, D, w) && !nt && a.a.createElement(Le.a, {
					post: Fe,
					isCommentsPage: w,
					pageLayer: qe
				})), a.a.createElement(ne.a, {
					className: w ? xt.a.leftPadding : void 0,
					post: Fe,
					sendEvent: Ue
				}), Ve && Gt && a.a.createElement(ot, {
					isAdminOrMod: f,
					post: Fe,
					subredditOrProfile: Ve
				}), N && a.a.createElement(xe, {
					post: Fe
				}), ss(), Object(m.v)(Fe, b) && a.a.createElement(z.a, {
					className: xt.a.adLinkWrapper
				}, a.a.createElement(K.a, {
					post: Fe,
					adLinkContent: zt
				})), pe && pt && wt && a.a.createElement("div", {
					className: xt.a.modModeBannerWrapper
				}, a.a.createElement(de.a, {
					thing: Fe
				})), pe && pt && St && a.a.createElement("div", {
					className: xt.a.modModeBannerWrapper
				}, a.a.createElement(me.a, {
					onIgnoreReports: fe,
					reportable: Fe
				})), Object(Be.b)(Fe) && a.a.createElement(X.a, null), a.a.createElement(ie.d, null), !!es && a.a.createElement(k.a, {
					itemIds: ts,
					hasSubredditNames: !0,
					hasPostIds: !0,
					isDiscovery: !0,
					post: Fe,
					size: "small"
				}), a.a.createElement("div", {
					className: xt.a.controlsContainer
				}, a.a.createElement(re.c, {
					currentUser: n,
					forceOpenInNewTab: p,
					hasModFlairPerms: Ct,
					hasModFullPerms: bt,
					hasModPostPerms: pt,
					isOverlay: D,
					modModeEnabled: pe,
					onIgnoreReports: fe,
					onOpenReportsDropdown: ge,
					post: Fe,
					showEditPost: _t,
					showEditFlair: He,
					tooltipType: D ? ke.f.Lightbox : void 0,
					useFlatlistBreakpoints: Mt,
					isCommentCountAnimation: L,
					isCountAnimShadowTestEnabled: S,
					shouldHideItems: tt
				}), st && a.a.createElement(Se.a, {
					isReadingIndicatorsExperiment: W,
					isReadingIndicatorsReadLoadTest: H,
					isReadingIndicatorsWriteLoadTest: V,
					isTypingIndicatorsExperiment: Z,
					isTypingIndicatorsReadLoadTest: q,
					postId: Fe.id
				}), !tt && Xt), Object(Y.e)(Fe, n) && a.a.createElement(Y.a, {
					postId: Fe.id,
					user: n
				})));
				const ns = Object(o.useCallback)((e, t) => Object(_.n)(e, t), []);
				return a.a.createElement(Ce.b, {
					className: Object(u.a)(t, xt.a.postContainer, {
						[xt.a.hasEventMeta]: Object(Me.a)(Fe)
					}),
					isOverlay: D,
					post: Fe,
					eventFactory: D ? j.b : ns,
					onClick: mt
				}, a.a.createElement(te.a, {
					post: Fe
				}), Pt)
			}))
		},
		"./src/reddit/components/PostDetailStickyHeader/async.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/reddit/selectors/experiments/joinOptimizations.ts");
			const c = Object(n.a)({
					resolved: {},
					chunkName: () => "PostDetailStickyHeader",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("PostDetailStickyHeader").then(s.bind(null, "./src/reddit/components/PostDetailStickyHeader/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/PostDetailStickyHeader/index.tsx"
					}
				}),
				d = e => {
					const t = Object(a.e)(i.c),
						s = Object(a.e)(i.a);
					return t || s ? o.a.createElement(c, e) : null
				}
		},
		"./src/reddit/components/PostMedia/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return re
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/components/CrosspostBox/index.tsx"),
				a = s("./src/reddit/components/Media/index.tsx"),
				i = s("./src/reddit/models/Media/index.ts"),
				c = s("./src/reddit/models/Post/index.ts"),
				d = s("./src/reddit/components/DevvitCustomPost/index.tsx"),
				l = s("./node_modules/react-redux/es/index.js"),
				m = s("./src/reddit/actions/post.ts"),
				u = s("./src/reddit/constants/adEvents.ts"),
				p = s("./src/reddit/constants/experiments.ts"),
				C = s("./src/reddit/helpers/chooseVariant/index.ts"),
				b = s("./node_modules/reselect/es/index.js");
			const h = Object(b.a)(e => Object(C.c)(e, {
				experimentEligibilitySelector: C.a,
				experimentName: p.zc
			}), e => e === p.Rd);
			var f = s("./node_modules/fbt/lib/FbtPublic.js"),
				g = s("./src/lib/classNames/index.ts"),
				x = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				v = s("./src/reddit/components/SubredditIcon/index.tsx"),
				y = s("./src/reddit/selectors/posts.ts"),
				O = s("./src/reddit/selectors/subreddit.ts"),
				E = s("./src/reddit/components/PromotedUserPostsAd/PromotedUserPostCommunityLink/index.m.less"),
				j = s.n(E);
			const _ = e => {
				let {
					postId: t,
					className: s
				} = e;
				const n = Object(l.e)(e => Object(y.F)(e, {
						postId: t
					})),
					o = Object(l.e)(e => "subreddit" === (null == n ? void 0 : n.belongsTo.type) ? Object(O.X)(e, {
						subredditId: n.belongsTo.id
					}) : null);
				return o ? r.a.createElement(x.a, {
					className: Object(g.a)(j.a.link, s),
					to: o.url
				}, f.fbt._("Posts via", null, {
					hk: "23e8m8"
				}), r.a.createElement(v.b, {
					className: j.a.subredditIcon,
					shouldHideNsfwIcon: !0,
					subredditOrProfile: o
				}), r.a.createElement("span", {
					className: j.a.subredditName
				}, o.displayText)) : null
			};
			var k = s("./src/lib/permalinkToOverlayLocation/index.ts"),
				L = s("./src/reddit/connectors/PostViewable/index.ts"),
				w = s("./src/reddit/contexts/PageLayer/index.tsx"),
				S = s("./src/reddit/contexts/Post/index.tsx"),
				I = s("./src/reddit/helpers/path/index.ts"),
				P = s("./src/reddit/hooks/useClickSourceData.ts"),
				N = s("./src/reddit/hooks/useIsOverlay.ts"),
				T = s("./src/reddit/hooks/usePageLayer.ts"),
				M = s("./src/lib/prettyPrintNumber/index.ts"),
				R = s("./src/reddit/components/PromotedUserPostsAd/PromotedUserPostInformation/index.m.less"),
				F = s.n(R);
			const B = e => {
				let {
					post: t
				} = e;
				const s = `${Object(M.b)(t.score)} ${f.fbt._("upvotes",null,{hk:"wJqPp"})}`,
					n = `${Object(M.b)(t.numComments)} ${f.fbt._("comments",null,{hk:"30aUyh"})}`;
				return r.a.createElement("div", {
					className: F.a.postInformation
				}, r.a.createElement("h5", {
					className: F.a.title
				}, t.title), r.a.createElement("div", {
					className: F.a.interactions
				}, r.a.createElement("p", null, s), r.a.createElement("p", null, n)))
			};
			var A = s("./src/lib/isUrl/index.ts"),
				D = s("./src/reddit/actions/profile/index.ts"),
				U = s("./src/reddit/components/Thumbnail/index.tsx"),
				W = s("./src/reddit/components/UserIcon/index.tsx"),
				H = s("./src/reddit/components/UserIcon/UserIcon.tsx"),
				V = s("./src/reddit/helpers/userSnoovatar/index.ts"),
				Z = s("./src/reddit/selectors/profile.ts"),
				q = s("./src/reddit/components/PromotedUserPostsAd/PromotedUserPostMedia/index.m.less"),
				z = s.n(q);
			const K = e => {
				let {
					post: t
				} = e;
				var s, o, a, i;
				const c = Object(l.d)(),
					d = Object(l.e)(Object(Z.l)(t.author)),
					m = Object(n.useMemo)(() => Object(U.c)({
						post: t
					}), [t]),
					u = Object(n.useMemo)(() => Object(A.a)(m), [m]);
				Object(n.useEffect)(() => {
					u || c(Object(D.d)(t.author))
				}, [c, t.author, u]);
				const p = !u && Object(V.a)(null === (s = null == d ? void 0 : d.icon) || void 0 === s ? void 0 : s.url),
					C = Object(H.c)(null === (o = null == d ? void 0 : d.icon) || void 0 === o ? void 0 : o.url);
				return r.a.createElement("div", {
					className: z.a.media
				}, u ? r.a.createElement(U.b, {
					post: t,
					url: m,
					className: z.a.mediaThumbnail,
					removeLink: !0,
					containerClassName: z.a.mediaThumbnailContainer
				}) : null, !u && (null === (a = null == d ? void 0 : d.icon) || void 0 === a ? void 0 : a.url) && r.a.createElement("div", {
					className: z.a.userIconContainer
				}, r.a.createElement(W.a, {
					className: Object(g.a)({
						[z.a.snoovatarUserIcon]: p,
						[z.a.defaultUserIcon]: C
					}, z.a.userIcon),
					iconUrl: null === (i = null == d ? void 0 : d.icon) || void 0 === i ? void 0 : i.url,
					userName: d.name,
					wrapperClassName: z.a.userIconWrapper,
					isNSFW: !1
				})))
			};
			var G = s("./src/reddit/components/PromotedUserPostsAd/PromotedUserPost/index.m.less"),
				Y = s.n(G);
			const J = Object(L.a)(null);
			var Q = Object(S.b)(J(e => {
					let {
						post: t
					} = e;
					const s = Object(T.a)(),
						n = Object(N.a)(),
						o = Object(P.a)(),
						a = Object(w.x)(s) && !n;
					return r.a.createElement(x.a, {
						"data-testid": `promoted-user-post-${t.id}`,
						to: a ? Object(I.b)(t.permalink) : Object(k.a)(t.permalink, !1, o)
					}, r.a.createElement("div", {
						className: Y.a.container
					}, r.a.createElement(B, {
						post: t
					}), r.a.createElement(K, {
						post: t
					})))
				})),
				X = s("./src/reddit/components/PromotedUserPostsAd/PromotedUserPosts/index.m.less"),
				$ = s.n(X);
			const ee = e => {
				let {
					postIds: t
				} = e;
				const s = t.map(e => r.a.createElement(Q, {
					postId: e,
					key: e
				}));
				return r.a.createElement("div", {
					className: $.a.container
				}, s)
			};
			var te = s("./src/reddit/components/PromotedUserPostsAd/index.m.less"),
				se = s.n(te);
			const ne = e => {
				let {
					post: t
				} = e;
				const s = Object(l.d)();
				if (!Object(l.e)(h) || !t.adPromotedUserPostIds || 0 === t.adPromotedUserPostIds.length) return null;
				const [n] = t.adPromotedUserPostIds;
				return r.a.createElement("div", {
					className: se.a.container,
					onClick: () => s(Object(m.y)(t, u.a.Click))
				}, r.a.createElement(ee, {
					postIds: t.adPromotedUserPostIds
				}), r.a.createElement(_, {
					postId: n,
					className: se.a.communityLink
				}))
			};

			function re(e) {
				const {
					post: t
				} = e;
				return t.crosspostRootId ? r.a.createElement(o.c, {
					postId: t.crosspostRootId,
					mediaProps: {
						...e,
						availableWidth: e.availableWidth ? e.availableWidth - 2 * o.b - 2 * o.a : void 0,
						crosspost: t,
						primaryContent: !1
					}
				}) : Object(c.B)(t) && Object(c.A)(t) ? r.a.createElement(ne, {
					post: t
				}) : Object(i.G)(t) ? r.a.createElement(d.a, {
					post: t
				}) : r.a.createElement(a.a, {
					...e,
					primaryContent: !!e.showFull
				})
			}
		},
		"./src/reddit/components/PostMeta/index.m.less": function(e, t, s) {
			e.exports = {
				metaContainer: "Ywkt6EDfNWINeTr9lP29H",
				postTopMeta: "iaAYGvTNtknkTxuHArCzL",
				subredditName: "_1L0pdcPf58t25Jy6ljHIKR",
				SubscribeButton: "_2r87gmhJ9n0MsylKHkgDcp",
				subscribeButton: "_2r87gmhJ9n0MsylKHkgDcp",
				addModNote: "CUh9f8Zri7XfZRUI18jS5"
			}
		},
		"./src/reddit/components/PostMeta/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/reddit/selectors/moderatorPermissions.ts"),
				i = s("./src/reddit/components/AwardBadges/index.tsx"),
				c = s("./src/reddit/components/CCM/AddModNoteCTA/index.tsx"),
				d = s("./src/reddit/components/Hovercards/SubredditHovercard/index.tsx"),
				l = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				m = s("./src/reddit/components/PostBadges/index.tsx"),
				u = s("./src/reddit/components/PostTopMeta/index.tsx"),
				p = s("./src/reddit/components/QuarantinedLabel/index.tsx"),
				C = s("./src/reddit/components/SubredditNameLink/index.tsx"),
				b = s("./src/reddit/components/SubscribeButton/Inline.tsx"),
				h = s("./src/reddit/constants/posts.ts"),
				f = s("./src/reddit/controls/Button/index.tsx"),
				g = s("./src/reddit/controls/MetaSeparator/index.tsx"),
				x = s("./src/reddit/helpers/trackers/post.ts"),
				v = s("./src/reddit/hooks/useClickSourceData.ts"),
				y = s("./src/reddit/models/Subreddit/index.ts"),
				O = s("./src/reddit/components/PostMeta/index.m.less"),
				E = s.n(O);
			t.a = e => {
				const {
					flairStyleTemplate: t,
					hideGildCta: s,
					inSubredditOrProfile: n,
					isCurrentUserProfilePost: O,
					isOverlay: j,
					isTopicPage: _,
					post: k,
					shouldShowSubscribeButton: L,
					subredditOrProfile: w,
					tooltipType: S
				} = e, I = !!_, P = Object(v.a)(), N = Object(o.e)(e => !!w && Object(a.i)(e, w.id)), T = !(!w || !Object(y.i)(w));
				return r.a.createElement("div", {
					className: E.a.metaContainer
				}, !n && !k.isSponsored && w && r.a.createElement(d.a, {
					postId: k.id,
					subredditName: w.name,
					isProfile: T
				}, r.a.createElement(C.a, {
					className: E.a.subredditName,
					"data-click-id": "subreddit",
					to: {
						pathname: w.url,
						state: P
					}
				}, w.displayText)), w && w.isQuarantined && r.a.createElement(p.a, null), !n && !k.isSponsored && w && L && !O && r.a.createElement(b.a, {
					className: E.a.SubscribeButton,
					getEventFactory: e => Object(x.n)(k.id, e ? "unsubscribe" : "subscribe"),
					identifier: {
						name: w.name,
						type: Object(y.i)(w) ? h.a.PROFILE : h.a.SUBREDDIT
					},
					postId: k.id,
					size: f.d.XXS,
					small: !0
				}), !n && !k.isSponsored && r.a.createElement(g.b, null), !n && !k.isSponsored && r.a.createElement(l.h, {
					type: k.belongsTo.type,
					id: k.belongsTo.id
				}), r.a.createElement(u.g, {
					className: E.a.postTopMeta,
					flairStyleTemplate: t,
					post: k,
					tooltipType: S,
					isModWithUserNotesPermissions: N
				}), r.a.createElement(m.a, {
					displayText: w ? w.displayText : null,
					inSubredditOrProfile: !!n,
					post: k,
					tooltipType: S
				}), !I && r.a.createElement(i.a, {
					hideCta: s,
					thing: k,
					tooltipType: j ? u.f.Lightbox : void 0
				}), N && r.a.createElement(c.a, {
					postOrComment: k,
					className: E.a.addModNote
				}))
			}
		},
		"./src/reddit/components/PostModModeDropdown/DropdownHelpers.m.less": function(e, t, s) {
			e.exports = {
				ListContainer: "VHCAEHBEuD8bln8MDFl35",
				listContainer: "VHCAEHBEuD8bln8MDFl35",
				Icon: "_3WbGqnEpw_ds1P508Qawma",
				icon: "_3WbGqnEpw_ds1P508Qawma",
				DropdownRow: "x_9o8pHUgKrlsT51QhLnG",
				dropdownRow: "x_9o8pHUgKrlsT51QhLnG",
				text: "_1llB9GXV3OPp_55xrtgYNh",
				svgIcon: "_2mkCGM7pDFARBtuKmKCBf0"
			}
		},
		"./src/reddit/components/PostModModeDropdown/DropdownHelpers.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return f
			})), s.d(t, "f", (function() {
				return g
			})), s.d(t, "h", (function() {
				return x
			})), s.d(t, "i", (function() {
				return v
			})), s.d(t, "j", (function() {
				return y
			})), s.d(t, "k", (function() {
				return O
			})), s.d(t, "d", (function() {
				return E
			})), s.d(t, "b", (function() {
				return j
			})), s.d(t, "c", (function() {
				return _
			})), s.d(t, "e", (function() {
				return k
			})), s.d(t, "g", (function() {
				return L
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/lessComponent.tsx"),
				a = s("./src/reddit/controls/Dropdown/Row.tsx"),
				i = s("./src/reddit/icons/fonts/index.tsx"),
				c = s("./src/reddit/icons/fonts/Approve/index.tsx"),
				d = s("./src/reddit/icons/fonts/Envelope/index.tsx"),
				l = s("./src/reddit/icons/fonts/Lock/index.tsx"),
				m = s("./src/reddit/icons/fonts/Remove/index.tsx"),
				u = s("./src/reddit/icons/fonts/Spam/index.tsx"),
				p = s("./src/reddit/icons/fonts/Tag/index.tsx"),
				C = s("./src/reddit/icons/svgs/CircleCheckLight/index.tsx"),
				b = s("./src/reddit/components/PostModModeDropdown/DropdownHelpers.m.less"),
				h = s.n(b);
			const f = o.a.wrapped(c.a, "Icon", h.a),
				g = o.a.wrapped(d.a, "Icon", h.a),
				x = o.a.wrapped(l.a, "Icon", h.a),
				v = o.a.wrapped(m.a, "Icon", h.a),
				y = o.a.wrapped(u.a, "Icon", h.a),
				O = o.a.wrapped(p.a, "Icon", h.a),
				E = () => r.a.createElement(i.a, {
					name: "mod_mute",
					className: h.a.Icon
				}),
				j = () => r.a.createElement(i.a, {
					name: "calendar",
					className: h.a.Icon
				}),
				_ = () => r.a.createElement(C.a, {
					className: h.a.svgIcon
				}),
				k = o.a.wrapped(a.b, "DropdownRow", h.a),
				L = o.a.div("ListContainer", h.a)
		},
		"./src/reddit/components/PostRailAndVotes/index.m.less": function(e, t, s) {
			e.exports = {
				score: "_3a2ZHWaih05DgAOtvu6cIo",
				allowPointerEvents: "_2iiIcja5xIjg-5sI4ECvcV",
				checkbox: "_25sIJZLIxTa3eolXDWieo5"
			}
		},
		"./src/reddit/components/PostRailAndVotes/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/components/PostLeftRail/index.tsx"),
				i = s("./src/reddit/components/VerticalVotes/index.tsx"),
				c = s("./src/reddit/controls/Checkbox/index.tsx"),
				d = s("./src/reddit/helpers/isPost.ts"),
				l = s("./src/reddit/helpers/showReportIndicator/index.ts"),
				m = s("./src/reddit/components/PostRailAndVotes/index.m.less"),
				u = s.n(m);
			t.a = e => {
				const {
					model: t,
					handleVote: s,
					showBulkActionCheckbox: n = !1,
					isCheckboxSelected: m = !1,
					isCountAnimShadowTestEnabled: p,
					toggleCheckbox: C = (() => {}),
					flairStyleTemplate: b,
					redditStyle: h,
					isOverlay: f,
					isVoteCountAnimation: g,
					postId: x,
					shouldShowUpvoteRatioOnHover: v
				} = e, y = `upvote-button-${t.id}${f?"-overlay":""}`;
				return r.a.createElement(a.b, {
					isRemoved: !!t.bannedBy,
					isReported: Object(l.a)(t),
					isSponsored: !!Object(d.b)(t) && t.isSponsored,
					redditStyle: h
				}, n && r.a.createElement(c.a, {
					className: u.a.checkbox,
					isCheckboxSelected: m,
					toggleCheckbox: C
				}), r.a.createElement(i.a, {
					flairStyleTemplate: b,
					model: t,
					onVoteClick: s,
					redditStyle: h,
					upvoteTooltipId: y,
					isVoteCountAnimation: g,
					isCountAnimShadowTestEnabled: p,
					postId: x,
					scoreClassName: Object(o.a)(u.a.score, {
						[u.a.allowPointerEvents]: v
					}),
					shouldShowUpvoteRatioOnHover: v
				}))
			}
		},
		"./src/reddit/components/PostTopLine/index.m.less": function(e, t, s) {
			e.exports = {
				everythingElseWrapper: "cZPZhMe-UCZ8htPodMyJ5",
				outboundLinkIcon: "_3z6z1xnp828wcarJXfzzjr",
				postBadges: "_2wFk1qX4e1cxk8Pkw1rAHk",
				postTopMeta: "nU4Je7n-eSXStTBAPMYt8",
				subredditIcon: "_1WX5Y5qFVBTdr6hCPpARDB",
				subredditIconWrapper: "_2dr_3pZUCk8KfJ-x0txT_l",
				container: "_14-YvdFiW5iVvfe5wdgmET",
				SubscribeButton: "_35dG7dsi4xKTT-_2MB74qq",
				subscribeButton: "_35dG7dsi4xKTT-_2MB74qq",
				addModNote: "_2ELu43PpvGnJxizg4n_k9E"
			}
		},
		"./src/reddit/components/PostTopLine/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/reddit/components/AwardBadges/index.tsx"),
				d = s("./src/reddit/components/CCM/AddModNoteCTA/index.tsx"),
				l = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				m = s("./src/reddit/components/NotificationButton/index.tsx"),
				u = s("./src/reddit/components/PostBadges/index.tsx"),
				p = s("./src/reddit/components/PostTopMeta/index.tsx"),
				C = s("./src/reddit/components/SubredditIcon/index.tsx"),
				b = s("./src/reddit/components/SubredditNameLink/index.tsx"),
				h = s("./src/reddit/components/SubscribeButton/Inline.tsx"),
				f = s("./src/reddit/constants/posts.ts"),
				g = s("./src/reddit/controls/Button/index.tsx"),
				x = s("./src/reddit/controls/OutboundLink/index.tsx"),
				v = s("./src/reddit/helpers/trackers/post.ts"),
				y = s("./src/reddit/icons/fonts/OutboundLink/index.tsx"),
				O = s("./src/reddit/models/Media/index.ts"),
				E = s("./src/reddit/models/Subreddit/index.ts"),
				j = s("./src/reddit/selectors/experiments/shredditParity.ts"),
				_ = s("./src/reddit/selectors/user.ts"),
				k = s("./src/reddit/components/PostTopLine/index.m.less"),
				L = s.n(k);
			t.a = e => {
				let {
					className: t,
					flairStyleTemplate: s,
					forceOpenInNewTab: r,
					hideNSFWPref: k,
					hostPostData: w,
					iconClassName: S,
					inSubredditOrProfile: I,
					isCommentsPage: P,
					isCompactPinnedPost: N,
					isCurrentUserProfilePost: T,
					isModQueuePage: M,
					isModWithUserNotesPermissions: R,
					isOverlay: F,
					isTopicPage: B,
					listingKey: A,
					post: D,
					shouldShowSubscribeButton: U,
					showCornerOutboundLink: W,
					showSubreddit: H,
					showSubredditIcon: V,
					subredditOrProfile: Z,
					isFollowed: q,
					shouldShowFollowButton: z,
					onFollowPostClick: K,
					onSubscribed: G
				} = e;
				const Y = B,
					J = !(!Z || !Object(E.i)(Z)),
					Q = Object(a.e)(e => {
						if (!J) return !0;
						const t = Object(_.Jb)(e, D.author || "");
						return !t || t.enableFollowers
					}),
					X = Object(a.e)(j.a);
				return o.a.createElement("div", {
					className: Object(i.a)(L.a.container, t)
				}, H && Z && o.a.createElement("div", {
					className: L.a.subredditIconWrapper
				}, o.a.createElement(b.a, {
					"data-click-id": "subreddit",
					to: Z.url
				}, V && o.a.createElement(C.b, {
					className: Object(i.a)(L.a.subredditIcon, S),
					shouldHideNsfwIcon: k,
					subredditOrProfile: Z
				}))), o.a.createElement("div", {
					className: L.a.everythingElseWrapper
				}, H && o.a.createElement(l.h, {
					type: D.belongsTo.type,
					id: D.belongsTo.id
				}), o.a.createElement(p.g, {
					className: L.a.postTopMeta,
					forceOpenInNewTab: r,
					flairStyleTemplate: s,
					isModWithUserNotesPermissions: R,
					tooltipType: F ? p.f.Lightbox : void 0,
					post: D,
					showSub: H,
					subredditOrProfile: Z
				}), o.a.createElement(u.a, {
					className: L.a.postBadges,
					displayText: Z ? Z.displayText : null,
					inSubredditOrProfile: I,
					isCompactPinnedPost: N,
					post: D,
					tooltipType: F ? p.f.Lightbox : void 0
				}), !Y && o.a.createElement(c.a, {
					isPostDetail: P,
					thing: D,
					tooltipType: F ? p.f.Lightbox : void 0
				}), R && o.a.createElement(d.a, {
					postOrComment: D,
					className: L.a.addModNote
				})), Z && Q && H && U && !T && o.a.createElement(h.a, {
					className: L.a.SubscribeButton,
					getEventFactory: e => (G && !e && G(), Object(v.n)(D.id, e ? "unsubscribe" : "subscribe", "post", A, w)),
					identifier: {
						name: Z.name,
						type: J ? f.a.PROFILE : f.a.SUBREDDIT
					},
					postId: D.id,
					size: g.d.XS,
					priority: X ? g.c.Secondary : void 0,
					isShredditParityEnabled: X
				}), W && o.a.createElement(x.b, {
					isSponsored: D.isSponsored,
					postId: D.id,
					href: Object(O.E)(D),
					source: D.source
				}, o.a.createElement(y.a, {
					className: L.a.outboundLinkIcon
				})), z && Q && o.a.createElement(m.a, {
					isFilled: !!q,
					onClick: K,
					hasTooltip: !0,
					tooltipText: n.fbt._("Follow post to stay updated", null, {
						hk: "26UP9Z"
					})
				}))
			}
		},
		"./src/reddit/components/PostUnavailableBanner/index.m.less": function(e, t, s) {
			e.exports = {
				bannerBase: "_3pCwayT6l9aM5Uh9YuCXeP",
				RemoveIcon: "YKKq2c1RnR-x1pamdskkg",
				removeIcon: "YKKq2c1RnR-x1pamdskkg"
			}
		},
		"./src/reddit/components/PrivateFeedPage/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			}));
			var n = s("./src/config.ts"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/reddit/selectors/userPrefs.ts");
			const c = e => {
				let {
					isLoggedIn: t,
					isNightmodeOn: s
				} = e;
				const r = Object(a.e)(i.c),
					c = t ? s ? `${n.a.assetPath}/img/private-feeds/dark_logged_in.jpg` : `${n.a.assetPath}/img/private-feeds/light_logged_in.jpg` : s ? `${n.a.assetPath}/img/private-feeds/dark_logged_out.jpg` : `${n.a.assetPath}/img/private-feeds/light_logged_out.jpg`,
					d = o.a.createElement("img", {
						className: "absolute",
						src: c,
						style: {
							height: "calc(100vh - 50px)"
						}
					});
				return o.a.createElement("div", {
					className: `absolute w-screen flex ${r?"":"justify-center"}`,
					style: {
						backgroundColor: "var(--newCommunityTheme-canvas)",
						height: "calc(100vh - 50px)"
					}
				}, d)
			}
		},
		"./src/reddit/components/PromotedUserPostsAd/PromotedUserPost/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_1FLO1Nek2YpspMr4ozmJCU"
			}
		},
		"./src/reddit/components/PromotedUserPostsAd/PromotedUserPostCommunityLink/index.m.less": function(e, t, s) {
			e.exports = {
				link: "_2sOYhKsA_6kr-jal5uxghX",
				subredditName: "Y6X1Z6XpPZ42HHxG6iPUg",
				subredditIcon: "_3KW4JGkWWYds_QkhJav3lV"
			}
		},
		"./src/reddit/components/PromotedUserPostsAd/PromotedUserPostInformation/index.m.less": function(e, t, s) {
			e.exports = {
				postInformation: "_1ykNwWxnTMBSi_9FpI1aS9",
				interactions: "_17rAVV4Z_xjSbW2Dnzd6GG",
				title: "_1hY0DyJaLGV23_ZN7lGZLl"
			}
		},
		"./src/reddit/components/PromotedUserPostsAd/PromotedUserPostMedia/index.m.less": function(e, t, s) {
			e.exports = {
				media: "N08zT4c39PJ7xCbcR2dhy",
				mediaThumbnail: "_9U9c34f1Ov1YZrnCNbH_e",
				mediaThumbnailContainer: "OBfGp3Y3pfXQbQtgTek4B",
				userIconContainer: "_1Xl-Y2ofyQhQDptuCNW3gg",
				userIconWrapper: "F_vBi78s0CDuAiX2g82hg",
				userIcon: "_3Ba5v_JdXj-iGcinxrYkz6",
				defaultUserIcon: "_2Jv4FE0k7dgPuiylbWWXJg",
				snoovatarUserIcon: "X3oFujh1WDeA5ZdMgFl_h"
			}
		},
		"./src/reddit/components/PromotedUserPostsAd/PromotedUserPosts/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_2trYWJQru0_I7CsxK5kt7W"
			}
		},
		"./src/reddit/components/PromotedUserPostsAd/index.m.less": function(e, t, s) {
			e.exports = {
				container: "sMTOozCI4j186nHWW2jp4",
				communityLink: "_1iVqrl2JSOJGHlr6UhojWd"
			}
		},
		"./src/reddit/components/RawHTMLDisplay/index.m.less": function(e, t, s) {
			e.exports = {
				StyledRawHTMLDisplay: "_3ms2Z8z8rPWLXaErcTJ9yH",
				styledRawHtmlDisplay: "_3ms2Z8z8rPWLXaErcTJ9yH"
			}
		},
		"./src/reddit/components/RawHTMLDisplay/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/polished/dist/polished.es.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				c = s("./src/lib/lessComponent.tsx"),
				d = s("./src/reddit/actions/urlRequested.ts"),
				l = s("./src/reddit/hooks/useOutboundClickTracking.ts"),
				m = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				u = s("./src/reddit/components/RawHTMLDisplay/index.m.less"),
				p = s.n(u);
			const C = Object(a.b)(null, e => ({
					onNavigate: t => e(Object(d.a)(t))
				})),
				b = c.a.wrapped(e => {
					const t = Object(l.a)();
					return o.a.createElement("div", {
						className: e.className,
						dangerouslySetInnerHTML: {
							__html: e.html
						},
						onClick: s => {
							((e, t, s, n, r) => {
								if (!e.ctrlKey && !e.metaKey && 1 !== e.button && "A" === e.target.tagName) {
									e.preventDefault();
									const s = e.target.getAttribute("href");
									r && n(s, r), t(s)
								}
								e.target.classList && e.target.classList.contains("md-spoiler-text") && (e.target.dataset.revealed = !0), s && s(e)
							})(s, e.onNavigate, e.onClick, t, e.sourceElement)
						},
						style: {
							...e.style,
							"--RawHTMLDisplay-tr-even": Object(n.f)(Object(m.a)(e).body, .8),
							"--RawHTMLDisplay-tr-odd": Object(n.f)(Object(m.a)(e).line, .8)
						}
					})
				}, "StyledRawHTMLDisplay", p.a);
			t.a = C(Object(i.a)(b))
		},
		"./src/reddit/components/RecommendedPostList/Footer/index.m.less": function(e, t, s) {
			e.exports = {
				footer: "_1khvWSB4GNuM2XwSjluHzO",
				background: "_3P_3k_jLv_J8ieIol9GqFL",
				layout: "_3CzLjB_82xAxB3iyad5yLM",
				arrow: "_3P6Ag4hY0u5ujhvLSAAVUH"
			}
		},
		"./src/reddit/components/RecommendedPostList/index.m.less": function(e, t, s) {
			e.exports = {
				topPostsHeader: "_1UbFWXvPTlrPngGxKndM-h",
				smallBanner: "_3O03kg0NTHcVFAyOQNoptz",
				footer: "Cvt0D6iVwU5TI0SY2nIGC",
				textBanner: "_1_-Wwc76dn19ch_lxyp8hf",
				container: "_2l7c_Oz0UVsamALvPrlznq",
				redditStyle: "_3f1Tk2rNUQGOPokixOdO6a",
				homeUpsellBanner: "HxVtNYGfeayfU1THFnAzK",
				homeUpsellBannerBorder: "_3afoK8x8kiKzCgwyofmvxu",
				postList: "_13FxmZ1xHIcRd_CuOaiyfo",
				loadMore: "_2gnvYSohivzo1V12YQI8DY"
			}
		},
		"./src/reddit/components/RecommendedPostList/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/lodash/noop.js"),
				o = s.n(r),
				a = s("./node_modules/react/index.js"),
				i = s.n(a),
				c = s("./node_modules/react-redux/es/index.js"),
				d = s("./node_modules/reselect/es/index.js"),
				l = s("./src/lib/constants/index.ts"),
				m = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				u = s("./src/lib/makeLinkedPostsListingKey/index.ts"),
				p = s("./src/lib/makeListingKey/index.ts"),
				C = s("./src/reddit/actions/subreddit.ts"),
				b = s("./src/reddit/components/ListingPostList/index.tsx"),
				h = s("./src/reddit/components/TrackingHelper/index.tsx"),
				f = s("./src/reddit/constants/elementIds.ts"),
				g = s("./src/reddit/constants/experiments.ts"),
				x = s("./src/reddit/constants/page.ts"),
				v = s("./src/reddit/constants/postLayout.ts"),
				y = s("./src/reddit/helpers/postCollection.ts"),
				O = s("./src/reddit/helpers/styles/smartTextColor.ts"),
				E = s("./src/reddit/helpers/trackers/lightbox.ts"),
				j = s("./src/reddit/helpers/trackers/screenview.ts"),
				_ = s("./src/reddit/selectors/chatPost.ts"),
				k = s("./src/reddit/selectors/commentsListTruncated.ts"),
				L = s("./src/reddit/selectors/dismissedTruncationList.ts"),
				w = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				S = s("./src/reddit/selectors/experiments/listingBelow.ts"),
				I = s("./src/reddit/selectors/experiments/nsfwListingBelow.ts"),
				P = s("./src/reddit/selectors/i18n/index.ts"),
				N = s("./src/reddit/selectors/telemetry.ts"),
				T = s("./src/reddit/selectors/user.ts"),
				M = s("./src/lib/classNames/index.ts"),
				R = s("./src/reddit/constants/listings.ts"),
				F = s("./src/reddit/controls/InternalLink/index.tsx"),
				B = s("./src/reddit/helpers/name/index.ts"),
				A = s("./src/reddit/icons/svgs/ArrowRight/index.tsx"),
				D = s("./src/reddit/components/RecommendedPostList/Footer/index.m.less"),
				U = s.n(D);
			const {
				fbt: W
			} = s("./node_modules/fbt/lib/FbtPublic.js");
			var H = Object(m.a)(e => {
					const {
						className: t,
						onClick: s,
						shouldDisplaySeeMore: n,
						shouldShowNsfwListingBelow: r,
						subredditOrProfile: o
					} = e, {
						primaryColor: a
					} = o;
					let c = null,
						d = o.url;
					return r ? (d = R.c[R.b.Popular], c = W._("Explore more of Reddit", null, {
						hk: "2wgFkH"
					})) : c = n ? W._("See more posts like this in {subredditName}", [W._param("subredditName", Object(B.d)(o.displayText))], {
						hk: "pLxW5"
					}) : W._("Continue browsing in {subredditName}", [W._param("subredditName", o.displayText)], {
						hk: "2gUyTU"
					}), i.a.createElement(F.default, {
						className: Object(M.a)(U.a.footer, t),
						onMouseDown: s,
						to: d,
						style: {
							backgroundColor: a
						}
					}, i.a.createElement("div", {
						className: U.a.background
					}), i.a.createElement("div", {
						className: U.a.layout
					}, c, i.a.createElement(A.a, {
						className: U.a.arrow
					})))
				}),
				V = s("./src/lib/makeNsfwLinkedPostsListingKey/index.ts"),
				Z = s("./src/reddit/components/RecommendedPostList/index.m.less"),
				q = s.n(Z);
			const z = Object(d.a)((e, t) => {
					let {
						isOverlay: s
					} = t;
					return s
				}, k.a, L.b, (e, t, s) => !((!t || s) && e)),
				K = Object(d.a)((e, t) => {
					let {
						post: s
					} = t;
					return !!s && Object(y.a)(s)
				}, (e, t) => {
					let {
						awaitAllCommentsRendered: s
					} = t;
					return s
				}, T.R, T.S, _.d, z, (e, t, s, n, r, o) => !t && !s && !n && !r && !e && o),
				G = Object(d.a)((e, t) => {
					let {
						post: s
					} = t;
					return s
				}, w.b, S.c, N.cb, N.nb, (e, t, s, n, r) => {
					const o = !!e;
					let a, i = "";
					if (e && (a = {
							hostPostId: e.id,
							shouldShowLinkedPosts: !1,
							subreddit: r
						}), (s || t) && e && o) {
						const {
							id: t
						} = e;
						i = Object(u.a)(t), a = {
							canonicalUrl: n.canonical_url,
							baseUrl: n.base_url,
							hostPostId: t,
							shouldShowLinkedPosts: !Object(g.Eg)(s) && !Object(S.a)(s),
							subreddit: r
						}
					}
					return {
						hostPostData: a,
						isEligibilityLoaded: o,
						listingBelowVariant: s,
						linkedPostsListingKey: i
					}
				}),
				Y = Object(d.c)({
					isD2xPdpSideRailRecsEnabled: w.b,
					listingBelowLinkedPostsData: G,
					nsfwListingBelowVariant: I.a,
					shouldShowListingBelow: K,
					shouldShowNsfwListingBelow: P.b
				}),
				J = Object(c.b)(Y, e => ({
					loadMorePosts: t => e(Object(C.r)({
						sort: l.ab.HOT,
						subredditName: t
					}))
				}));
			class Q extends i.a.Component {
				constructor() {
					super(...arguments), this.scrollContainer = () => this.props.isOverlay ? document.getElementById(f.e) : null, this.onViewed = (e, t) => Object(j.e)({
						key: this.listingKey(),
						sort: l.ab.TOP,
						timerType: t,
						timerMillis: e,
						timeSort: l.nc.WEEK
					}), this.onFooterClick = e => {
						this.props.sendEvent(Object(E.c)("recommended_footer"))
					}
				}
				listingKey() {
					const {
						isD2xPdpSideRailRecsEnabled: e,
						listingBelowLinkedPostsData: {
							linkedPostsListingKey: t,
							listingBelowVariant: s
						},
						post: n,
						shouldShowNsfwListingBelow: r,
						subredditOrProfile: o
					} = this.props;
					return s || e ? t : r && n && n.id ? Object(V.a)(n.id) : Object(p.a)(o.name, l.ab.TOP, {
						t: l.nc.WEEK
					})
				}
				renderSmallBanner() {
					const {
						listingBelowLinkedPostsData: e,
						nsfwListingBelowVariant: t,
						shouldShowNsfwListingBelow: s,
						subredditOrProfile: r,
						theme: o
					} = this.props, {
						isEligibilityLoaded: a,
						hostPostData: c,
						listingBelowVariant: d
					} = e;
					if (d && !Object(g.Eg)(d) && !Object(S.a)(d) && !a) return i.a.createElement("div", {
						className: q.a.smallBanner
					});
					const {
						name: l
					} = r, m = Object(O.a)(o.newCommunityTheme.canvas);
					let u = null;
					return u = !(null == c ? void 0 : c.shouldShowLinkedPosts) && !s ? n.fbt._("More posts from the {name} community", [n.fbt._param("name", l)], {
						hk: "2g363L"
					}) : Object(S.b)(d) ? n.fbt._("More posts like this", null, {
						hk: "Maj0v"
					}) : t === g.Te.DeRecs ? n.fbt._("Popular Posts Near You", null, {
						hk: "22vlW0"
					}) : n.fbt._("More posts you may like", null, {
						hk: "33WdfT"
					}), i.a.createElement("div", {
						className: q.a.smallBanner,
						style: {
							color: m
						}
					}, u)
				}
				render() {
					const {
						contentContainerRef: e,
						isD2xPdpSideRailRecsEnabled: t,
						listingBelowLinkedPostsData: s,
						shouldShowListingBelow: n,
						shouldShowNsfwListingBelow: r,
						subredditOrProfile: a
					} = this.props, {
						hostPostData: c,
						listingBelowVariant: d
					} = s;
					if (!n) return null;
					const l = !!(null == c ? void 0 : c.shouldShowLinkedPosts);
					return i.a.createElement("div", {
						className: q.a.container
					}, this.renderSmallBanner(), i.a.createElement(b.a, {
						className: q.a.postList,
						disablePlaceholder: !0,
						forcedLayout: v.g.Large,
						getScrollContainer: this.scrollContainer,
						hostPostData: c,
						isTruncated: !0,
						listingBelowVariant: d,
						listingKey: this.listingKey(),
						listingName: x.d.PostDetail,
						listingViewed: this.onViewed,
						loadMoreClassName: q.a.loadMore,
						noPostsComponent: () => null,
						onLoadMore: o.a,
						preventScrollOnMount: !0,
						inSubredditOrProfile: !0,
						scrollContentContainerRef: e,
						skipSubredditPosts: t ? 15 : 0,
						shouldHideFlair: !0
					}), i.a.createElement(H, {
						className: q.a.footer,
						onClick: this.onFooterClick,
						shouldDisplaySeeMore: l,
						shouldShowNsfwListingBelow: r,
						subredditOrProfile: a
					}))
				}
			}
			t.a = J(Object(m.a)(Object(h.c)(Q)))
		},
		"./src/reddit/components/ResizeSensor/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			}));
			var n = s("./node_modules/raf/index.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o);
			class i extends a.a.Component {
				constructor(e) {
					super(e), this.isIE = () => /Trident/.test(navigator.userAgent), this.setContainerRef = e => {
						this.containerRef || (this.containerRef = e, this.createSensor())
					}, this.handleResize = () => {
						void 0 !== this.frame && r.a.cancel(this.frame), this.frame = r()(this.props.onResize)
					}, this.containerRef = e.containerRef
				}
				shouldComponentUpdate() {
					return !1
				}
				componentDidMount() {
					this.createSensor()
				}
				createSensor() {
					if (!this.containerRef || this.sensor) return;
					this.sensor = document.createElement("object"), this.sensor.setAttribute("style", "\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      overflow: hidden;\n      pointer-events: none;\n      z-index: -1;\n      visibility: hidden;\n    "), this.sensor.setAttribute("tabindex", "-1"), this.sensor.onload = () => {
						this.props.onResize(), this.sensor && this.sensor.contentDocument && this.sensor.contentDocument.defaultView && this.sensor.contentDocument.defaultView.addEventListener("resize", this.handleResize)
					}, this.sensor.type = "text/html";
					const e = this.isIE();
					e && this.containerRef.appendChild(this.sensor), this.sensor.data = "about:blank", e || this.containerRef.appendChild(this.sensor), this.props.onResize()
				}
				componentWillUnmount() {
					this.sensor && (this.sensor && this.sensor.contentDocument && this.sensor.contentDocument.defaultView && this.sensor.contentDocument.defaultView.removeEventListener("resize", this.handleResize), this.containerRef && this.containerRef.removeChild(this.sensor))
				}
				render() {
					return a.a.createElement("div", {
						ref: this.setContainerRef
					})
				}
			}
		},
		"./src/reddit/components/RichTextEditor/Placeholder.m.less": function(e, t, s) {
			e.exports = {
				content: "_3Yo9aCwUoJBBuPKwf3r5cP",
				mCollapsed: "_225DoZxfrLcZu0fM8-Svk8",
				prompt: "_3CuuiBuYvA4VXTClabDCUK",
				toolbar: "_31gqZmjkDlF5-81EKQ7w_Y",
				topToolbar: "_6rO7u4xvTeWjMNR68asbw",
				bottomToolbar: "_2Qh8N3s0Z7NWIPCVBDCcxH"
			}
		},
		"./src/reddit/components/RichTextEditor/Placeholder.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/components/FocusableContent/index.tsx"),
				i = s("./src/reddit/helpers/styles/mixins/loading.ts"),
				c = s("./src/reddit/components/RichTextEditor/Placeholder.m.less"),
				d = s.n(c);
			t.a = e => {
				let {
					className: t,
					isCommentBoxDesignEnabled: s,
					isLoading: n,
					toolbarPosition: c
				} = e;
				return r.a.createElement("div", {
					className: t
				}, r.a.createElement(a.a, {
					isFocused: !1
				}, !s && "top" === c && r.a.createElement("div", {
					className: Object(o.a)(d.a.toolbar, d.a.topToolbar, Object(i.a)({
						isLoading: n
					}))
				}), r.a.createElement("div", {
					className: Object(o.a)(d.a.content, {
						[d.a.mCollapsed]: s
					})
				}, r.a.createElement("div", {
					className: Object(o.a)(d.a.prompt, Object(i.a)({
						isLoading: !0
					}))
				})), !s && "bottom" === c && r.a.createElement("div", {
					className: Object(o.a)(d.a.toolbar, d.a.bottomToolbar, Object(i.a)({
						isLoading: n
					}))
				})))
			}
		},
		"./src/reddit/components/SearchBanner/index.m.less": function(e, t, s) {
			e.exports = {
				announcement: "_1hUjYWB4NLdPs1k_qx-f0u"
			}
		},
		"./src/reddit/components/SearchDiscoveryUnits/HeroUnit/index.m.less": function(e, t, s) {
			e.exports = {
				postContainer: "_3W4fKI_ey_jDfiIO7ElMuP",
				eventMeta: "_2IeaiLn4GyfAXKD1TLrIS1",
				postContent: "_3zoWB97jg8GAUJCl4XA57a",
				postItemMetaContainer: "_3xctgCPJ_3knmtE3O9TQzE",
				postItemTitleContainer: "_3CAq9fn45Es59QdDzgtbhZ",
				postItemFlatlistContainer: "oNxebZMPvUlTJIOtprxhP",
				mediaWrapper: "_1eIKxpeFNBTQ699qAcQRbd",
				marginCancel: "_3IElQYxAJq_0qRyeyMDc_K",
				twitterEmbed: "Tzfi4PWE-V9cQ78MJ3GkX",
				promotedTrend: "_1yoxdnJLJUmMiTSTn_QkNJ",
				mediaContent: "_1zcwL6v8t8G0OHvf5D4WW-",
				textMediaWrapper: "_2ZlSdmjvWREfUPvdtzIAN_",
				textMedia: "_2dnz6aKPWeFF1opQ_XsTYW",
				seeMore: "_2oliTAoFFxS1mse-sOZinV",
				adLinkWrapper: "p35vRG-PK5zfK-G5gjGAr",
				outboundLink: "_16eWoJfxv365opQYh3dOAJ",
				ctaExperiment: "_1fSEjc0jhvt02_0z07145y",
				adCallToAction: "BMx4T197BjzZgmRjegR7y",
				active: "_28VWbryTIGJPb62Ey50lm8",
				redditStyle: "n1f3mSINfKiMWmz1fdi1o"
			}
		},
		"./src/reddit/components/SearchNSFWToggle/SearchNSFWToggle.m.less": function(e, t, s) {
			e.exports = {
				searchNSFWToggle: "S53DUJItOf0GhJnniZ_fP",
				searchNsfwToggle: "S53DUJItOf0GhJnniZ_fP",
				searchNSFWToggleLabel: "_21fWc_5nZQR--Hc7UhjtY9",
				searchNsfwToggleLabel: "_21fWc_5nZQR--Hc7UhjtY9"
			}
		},
		"./src/reddit/components/SearchNSFWToggle/SearchNSFWToggle.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return P
			})), s.d(t, "a", (function() {
				return N
			}));
			var n = s("./src/config.ts"),
				r = s("./node_modules/fbt/lib/FbtPublic.js"),
				o = s("./node_modules/history/esm/history.js"),
				a = s("./node_modules/js-cookie/dist/js.cookie.js"),
				i = s.n(a),
				c = s("./src/lib/addQueryParams/index.ts"),
				d = s("./src/lib/classNames/index.ts"),
				l = s("./src/lib/colors/constants.ts"),
				m = s("./src/lib/constants/colors.ts"),
				u = s("./node_modules/react/index.js"),
				p = s.n(u),
				C = s("./node_modules/react-redux/es/index.js"),
				b = s("./node_modules/react-router-redux/es/index.js"),
				h = s("./src/reddit/actions/search.ts"),
				f = s("./src/reddit/components/InfoTextTooltip/Hooked.tsx"),
				g = s("./src/reddit/constants/cookie.ts"),
				x = s("./src/reddit/controls/ToggleSwitch/index.tsx"),
				v = s("./src/reddit/helpers/search/searchResultsTabTo.ts"),
				y = s("./src/reddit/helpers/trackers/searchResults.ts"),
				O = s("./src/reddit/hooks/useInfoTextTooltip.ts"),
				E = s("./src/reddit/hooks/usePageLayer.ts"),
				j = s("./src/reddit/hooks/useTracking.ts"),
				_ = s("./src/reddit/selectors/user.ts"),
				k = s("./src/reddit/helpers/localStorage/index.ts");
			const L = e => {
				const [t, s] = Object(u.useState)(!1);
				return Object(u.useEffect)(() => {
					const t = Object(k.F)("should-show-tooltip") || {
						showTooltipOn: !0,
						showTooltipOff: !0
					};
					e ? (s(t.showTooltipOn), t.showTooltipOn && Object(k.Jb)("should-show-tooltip", {
						...t,
						showTooltipOn: !1
					})) : (s(t.showTooltipOff), t.showTooltipOff && Object(k.Jb)("should-show-tooltip", {
						...t,
						showTooltipOff: !1
					}))
				}, []), {
					shouldShowTooltip: t,
					resetShowTooltip() {
						t && s(!1)
					}
				}
			};
			var w = s("./src/reddit/components/SearchNSFWToggle/SearchNSFWToggle.m.less"),
				S = s.n(w);
			const I = "safe-search-toggle",
				P = () => {
					const e = new Date;
					e.setFullYear(e.getFullYear() + 2), i.a.set(g.h, !0, {
						expires: e,
						domain: n.a.cookieDomain,
						path: "/"
					})
				};

			function N(e) {
				let {
					searchOptions: t
				} = e;
				const s = Object(j.a)(),
					a = Object(C.d)(),
					k = Object(C.e)(e => Object(_.rb)(e)),
					[w, N] = Object(u.useState)(k),
					T = Object(O.a)({}),
					{
						shouldShowTooltip: M,
						resetShowTooltip: R
					} = L(!w);
				Object(u.useEffect)(() => {
					if (M) return window.addEventListener("click", R), () => {
						window.removeEventListener("click", R)
					}
				}, [M]);
				const F = Object(E.a)();
				return T.arrowProps.style = {
					...T.arrowProps.style,
					borderBottom: `3px solid ${m.a.alien600}`
				}, T.popperProps.style = {
					...T.popperProps.style,
					backgroundColor: m.a.alien600,
					top: "4px",
					maxWidth: "360px",
					textAlign: "center"
				}, p.a.createElement("div", {
					className: Object(d.a)(S.a.searchNSFWToggle),
					"data-testid": I,
					onMouseEnter: T.show,
					onMouseLeave: T.hide
				}, p.a.createElement("label", {
					htmlFor: I,
					className: Object(d.a)(S.a.searchNSFWToggleLabel)
				}, r.fbt._("Safe Search", null, {
					hk: "x1C2Y"
				})), p.a.createElement(x.a, {
					activeColorOverride: l.a,
					id: I,
					on: !w,
					onToggle: function() {
						var e;
						w ? (N(!1), i.a.remove(g.h, {
							domain: n.a.cookieDomain,
							path: "/"
						})) : (N(!0), P()), s(Object(y.h)(w, t, F)), a(Object(h.l)({
							searchOver18: !w
						})), a(Object(b.b)(Object(o.c)({
							pathname: (null === (e = null == F ? void 0 : F.routeMatch) || void 0 === e ? void 0 : e.match.url) || v.a,
							search: Object(c.a)("", (null == F ? void 0 : F.queryParams) || {})
						})))
					},
					redditStyle: !0,
					ref: T.target.ref
				}), p.a.createElement(f.a, {
					visible: M || T.visible,
					arrowProps: T.arrowProps,
					popperProps: T.popperProps
				}, w ? r.fbt._("You'll see adult and Not Safe for Work (NSFW) search results unless you turn Safe Search on", null, {
					hk: "tQoEJ"
				}) : r.fbt._("You won't see adult or Not Safe for Work (NSFW) search results unless you turn Safe Search off", null, {
					hk: "2FiDyW"
				})))
			}
		},
		"./src/reddit/components/SearchPost/index.m.less": function(e, t, s) {
			e.exports = {
				postContainer: "_2dkUkgRYbhbpU_2O2Wc5am",
				mFirst: "_28efb5XEIggTEMzT5v9i61",
				eventMeta: "_1rd6n9Xvtg4-5Vw7E3NhEh",
				postContent: "_2i5O0KNpb9tDq0bsNOZB_Q",
				postItemMetaContainer: "_37TF67KpZQl9SHbiAhz3mf",
				postItemWarningContainer: "_1nfcZWg35_OmccxqivQ1EN",
				postItemTitleContainer: "_19FzInkloQSdrf0rh3Omen",
				postItemFlatlistContainer: "HNL__wz5plDpzJe5Lnn",
				outboundLink: "a6Bzb7gqvN3mqBOAEyFIv",
				titleMedium: "_1FT0e6kh1BBb_oALAMW_l7",
				titleTextColor: "_1-SZ3VwLjbFwTzaZvU8FBX",
				thumbnail: "_2r9BZFotuBbLYnijAaskeZ",
				blurred: "rIj9lvusQvb0-Mf16X6ZL",
				container: "PrfaR-luawcEBK2dhGuDp",
				thumbnailContainer: "Gk-MlLujgqsaX1n-sGa_O",
				syntaxHighlight: "_1Nh8xLEUG3orjY1k1aijj",
				paddingSide: "_2n04GrCyhhQf-Kshn7akmH",
				paddingRight: "_1yBpz1MEPxxYTxjlEilGtB",
				postTitleVisibility: "_1SAKlLic4t9BBtiiE-Z6ob",
				postTitleColors: "nbO8VWsMIB-Mv-tIa37NF",
				backgroundWrapper: "UcytmAhLeRTIrWR81xl4P",
				inline: "_1AKeAGcglmBjK1SUUXNFti"
			}
		},
		"./src/reddit/components/SearchPostFlatlist/index.m.less": function(e, t, s) {
			e.exports = {
				flatlistContainer: "_2IpBiHtzKzIxk2fKI4UOv1",
				flatlistItem: "_vaFo96phV6L5Hltvwcox"
			}
		},
		"./src/reddit/components/SearchPostFlatlist/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return u
			})), s.d(t, "d", (function() {
				return p
			})), s.d(t, "a", (function() {
				return C
			})), s.d(t, "c", (function() {
				return b
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/lib/prettyPrintNumber/index.ts"),
				d = s("./src/reddit/selectors/experiments/econ/index.ts"),
				l = s("./src/reddit/components/SearchPostFlatlist/index.m.less"),
				m = s.n(l);
			const u = e => {
					let {
						children: t,
						className: s
					} = e;
					return o.a.createElement("div", {
						className: Object(i.a)(m.a.flatlistContainer, s)
					}, t)
				},
				p = e => {
					let {
						score: t
					} = e;
					return o.a.createElement("span", {
						className: Object(i.a)(m.a.flatlistItem)
					}, n.fbt._({
						"*": "{upvotesCount} upvotes",
						_1: "{upvotesCount} upvote"
					}, [n.fbt._param("upvotesCount", Object(c.b)(t)), n.fbt._plural(t)], {
						hk: "4rxl9Z"
					}))
				},
				C = e => {
					let {
						awardCountsById: t,
						awardingsTotal: s
					} = e;
					if (Object(a.e)(d.d)) return null;
					const r = s && s > 0 ? s : Object.values(t || {}).reduce((e, t) => e += t, 0);
					return o.a.createElement("span", {
						className: Object(i.a)(m.a.flatlistItem)
					}, n.fbt._({
						"*": "{awardsCount} awards",
						_1: "{awardsCount} award"
					}, [n.fbt._param("awardsCount", Object(c.b)(r)), n.fbt._plural(r)], {
						hk: "1jrEck"
					}))
				};

			function b(e) {
				let {
					post: t,
					className: s
				} = e;
				return o.a.createElement(u, {
					className: s
				}, o.a.createElement(p, {
					score: t.score
				}), o.a.createElement("span", {
					className: Object(i.a)(m.a.flatlistItem)
				}, n.fbt._({
					"*": "{commentsCount} comments",
					_1: "{commentsCount} comment"
				}, [n.fbt._param("commentsCount", Object(c.b)(t.numComments)), n.fbt._plural(t.numComments)], {
					hk: "4uhYwJ"
				})), o.a.createElement(C, {
					awardCountsById: t.awardCountsById,
					awardingsTotal: t.awardingsTotal
				}))
			}
		},
		"./src/reddit/components/SearchPostMeta/index.m.less": function(e, t, s) {
			e.exports = {
				crosspostIcon: "_1-Dnj_BC9slzHImx9Qex6x",
				hovercardContainer: "_3Wz607wX-KXslTUjYvTZWi",
				metaContainer: "_3xeOZ4NlqvpwzbB5E8QC6r",
				postTopMeta: "_1wxi9M8fCejzbsH0YGSer2",
				subredditName: "_305seOZmrgus3clHOXCmfs",
				enlargedSubredditName: "_2QZLJe3l7lBGN9JNI51gn9",
				subredditIcon: "id5ExZR7GqiUypGICnSYs",
				enlargedSubredditIcon: "_3dUPuwEf-ssCOozUxvm-HX",
				SubscribeButton: "_2vYQV4h1KDa5M62EoOG3t-",
				subscribeButton: "_2vYQV4h1KDa5M62EoOG3t-",
				metadataFont: "_3zxBrqnz24HT1z7OOcRXCS",
				metaSpacer: "_3-fo1J0EWS8TawiUkoZ9DH",
				defaultCommunityIcon: "_3hvmfTpZq_W24eaylznBmS",
				mNightmode: "_15ad3usdVw8bRqdw2I-vhN",
				blur: "_35xBFzll_c4A2_N9fEuuuY",
				contents: "_3d8GzWNAiVF7ncwmjHXlNf"
			}
		},
		"./src/reddit/components/SearchPostMeta/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return f
			})), s.d(t, "b", (function() {
				return g
			}));
			var n = s("./src/lib/classNames/index.ts"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/reddit/components/Hovercards/SubredditHovercard/index.tsx"),
				c = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				d = s("./src/reddit/components/PostTopMeta/index.tsx"),
				l = s("./src/reddit/components/SubredditNameLink/index.tsx"),
				m = s("./src/reddit/controls/MetaSeparator/index.tsx"),
				u = s("./src/reddit/hooks/useClickSourceData.ts"),
				p = s("./src/reddit/selectors/experiments/search/searchSubDiscovery.ts"),
				C = s("./src/reddit/components/SubredditMention/SubredditIcon/index.tsx"),
				b = s("./src/reddit/components/SearchPostMeta/index.m.less"),
				h = s.n(b);
			const f = "subreddit_icon_link",
				g = "subreddit-name";
			t.c = e => {
				const {
					className: t,
					flairStyleTemplate: s,
					onClickPostAuthor: r,
					onClickPostCommunity: b,
					post: x,
					subredditOrProfile: v,
					tooltipType: y
				} = e, O = Object(u.a)(), {
					isSubEnlarged: E
				} = Object(a.e)(p.a);
				return o.a.createElement("div", {
					className: Object(n.a)(t, h.a.metaContainer)
				}, !x.isSponsored && v && o.a.createElement(i.a, {
					className: Object(n.a)(h.a.hovercardContainer, h.a.hovercardContainer),
					postId: x.id,
					subredditName: v.name
				}, o.a.createElement(C.b, {
					className: Object(n.a)(h.a.subredditIcon, E && h.a.enlargedSubredditIcon),
					linkTo: v.url,
					linkProps: b ? {
						"data-testid": f,
						onClick: b
					} : void 0,
					subredditOrProfile: v
				}), o.a.createElement(l.a, {
					className: Object(n.a)(h.a.subredditName, E && h.a.enlargedSubredditName),
					"data-testid": g,
					"data-click-id": "subreddit",
					onClick: b,
					to: {
						pathname: v.url,
						state: O
					}
				}, v.displayText)), !x.isSponsored && o.a.createElement(o.a.Fragment, null, o.a.createElement(m.b, null), o.a.createElement(c.h, {
					type: x.belongsTo.type,
					id: x.belongsTo.id
				})), o.a.createElement(d.g, {
					className: h.a.postTopMeta,
					flairStyleTemplate: s,
					onClickPostAuthor: r,
					post: x,
					tooltipType: y
				}))
			}
		},
		"./src/reddit/components/SearchResultsContent/Comment/index.m.less": function(e, t, s) {
			e.exports = {
				commentContainer: "_2lwxooVpRNqH_bjx-Nm4m4",
				postTitleContainer: "_1nhxJR41hD8jXWqUVy3wTT",
				postTitle: "_1HsM08P8HBGOIPATQsthMA",
				commentContent: "_1i_lg5WToFS_KM8bSao5FB",
				commentAuthor: "q6Rzyt18sGpgOFFoG9gUg",
				commentFlatlist: "_3bkDvRYnc0SodO59dk5n3p",
				goToThreadLinkButton: "_3Yys9Taiw4B3XiXhmbLrra",
				mediaIcon: "_14gjyiBw0XSVan9XLN7ER-"
			}
		},
		"./src/reddit/components/SearchResultsContent/CommentPlaceholder/index.m.less": function(e, t, s) {
			e.exports = {
				postContainer: "_2u_haOaI877DTCSOfFouuF",
				commentContainer: "_2Uv1IcU4LjDH6OqbNZ0BwO",
				comment: "yNjWq2s_3V0N5m9u-Bx-D",
				link: "-fCtQc5X_zwd1tnX_0s4W",
				linkContainer: "tSwYm_NW9-rD1G91vZi4d"
			}
		},
		"./src/reddit/components/SearchResultsContent/CommentPlaceholder/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return m
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/helpers/styles/mixins/loading.ts"),
				i = s("./src/reddit/components/SearchPost/placeholder.m.less"),
				c = s.n(i),
				d = s("./src/reddit/components/SearchResultsContent/CommentPlaceholder/index.m.less"),
				l = s.n(d);
			const m = e => r.a.createElement("div", {
				className: Object(o.a)(e.className, l.a.postContainer),
				"data-testid": "comment-placeholder"
			}, r.a.createElement("div", {
				className: c.a.postContent
			}, r.a.createElement("div", {
				className: c.a.postItemMetaContainer
			}, r.a.createElement("div", {
				className: Object(o.a)(c.a.subredditName, Object(a.b)(e))
			}), r.a.createElement("div", {
				className: Object(o.a)(c.a.author, Object(a.b)(e))
			})), r.a.createElement("div", {
				className: Object(o.a)(c.a.title, Object(a.b)(e))
			}), r.a.createElement("div", {
				className: l.a.commentContainer
			}, r.a.createElement("div", {
				className: Object(o.a)(l.a.comment, Object(a.b)(e))
			})), r.a.createElement("div", {
				className: l.a.linkContainer
			}, r.a.createElement("div", {
				className: Object(o.a)(l.a.link, Object(a.b)(e))
			})), r.a.createElement("div", {
				className: c.a.flatlist
			}, r.a.createElement("div", {
				className: Object(o.a)(c.a.flatListItem, Object(a.b)(e))
			}), r.a.createElement("div", {
				className: Object(o.a)(c.a.flatListItem, Object(a.b)(e))
			}), r.a.createElement("div", {
				className: Object(o.a)(c.a.flatListItem, Object(a.b)(e))
			}))))
		},
		"./src/reddit/components/SearchResultsContent/Communities/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_2mO8vClBdPxiJ30y_C6od2",
				title: "_1hYBlRBooHG-eY5iAHen-R",
				separator: "_1LvQXvsxpSVi-JRudk3e4e",
				previewCommunityStyles: "_3MfNPE_vLKliHPkiYMAtZm",
				loadMoreItem: "_1mLDB-TFHMY0SRGTRD-ipK",
				viewMore: "DMHO9Pay4I5LSwZTtE4TY"
			}
		},
		"./src/reddit/components/SearchResultsContent/Community/index.m.less": function(e, t, s) {
			e.exports = {
				link: "_3BWq3z8_9gA3oThgYXnngR",
				sidebar: "iwmtpuJa21jtA4y_LuOVI",
				mFirst: "YLZe4_XS9hOtObp1VjEF-",
				container: "ei8_Bq_te0jjwNIqmk8Tw",
				subredditIcon: "_2YBzxh6YUsSdcmbcJ-kE5L",
				contentContainer: "_1Nla8vW02K39sy0E826Iug",
				subredditInfo: "_1nTSkRaTteYjCY91DwVEF3",
				title: "_2torGbn_fNOMbGw3UAasPl",
				subtitle: "_3CUjJH8t2eFynKUAv1ER7C",
				flair: "_3sOM1thDS-RiUzmUb8yzxN",
				description: "_3JYXhJlwZCvjZTBplEncbq",
				buttonContainer: "_3llSmEBMCJTcO537oPxHIH",
				warnings: "_1QstT010Ns0i6YkU4n5O25"
			}
		},
		"./src/reddit/components/SearchResultsContent/CommunityPlaceholder/index.m.less": function(e, t, s) {
			e.exports = {
				communityContainer: "_2-tXnoxd32Utasnz79k34",
				sidebar: "_2PlcVxaNCQS2-GyaX_mhOA",
				subreddtiIcon: "_3yGdKsP-cHl-Cb_SH-PyXp",
				contentContainer: "Lsafh1CsbqQ8tiuBPTucl",
				subredditInfo: "_1TKuN8SZONE4tjAoEul8sp",
				title: "_11V3zVIqp59I7JvzWnky0w",
				author: "_2GNPL8YTca77gPEWlF9nDb",
				description: "_3C8z4MmIB_gou30f3ojB0V",
				buttonContainer: "_14X6ixd8jgBYsNSxRPXTbL"
			}
		},
		"./src/reddit/components/SearchResultsContent/CommunityPlaceholder/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/helpers/styles/mixins/loading.ts"),
				i = s("./src/reddit/components/SearchResultsContent/CommunityPlaceholder/index.m.less"),
				c = s.n(i);
			const d = e => r.a.createElement("div", {
				className: Object(o.a)(c.a.communityContainer, e.sidebar && c.a.sidebar),
				"data-testid": "community-placeholder"
			}, r.a.createElement("div", {
				className: Object(o.a)(c.a.subreddtiIcon, Object(a.a)(e))
			}), r.a.createElement("div", {
				className: c.a.contentContainer
			}, r.a.createElement("div", {
				className: Object(o.a)(c.a.subredditInfo, e.sidebar && c.a.sidebar)
			}, r.a.createElement("div", {
				className: Object(o.a)(c.a.title, Object(a.b)(e))
			}), r.a.createElement("div", {
				className: Object(o.a)(c.a.author, Object(a.b)(e))
			})), !e.sidebar && r.a.createElement("div", {
				className: Object(o.a)(c.a.description, Object(a.b)(e))
			})), r.a.createElement("div", {
				className: Object(o.a)(c.a.buttonContainer, Object(a.a)(e))
			}))
		},
		"./src/reddit/components/SearchResultsContent/NoResults/index.m.less": function(e, t, s) {
			e.exports = {
				noResults: "_1VDJFxZ-XJSB8yo1UyJzsi",
				withSidebar: "_3C2YoevK_DDUuAyafjSuUs",
				header: "kKE_PXkpQNWEX-RiwWuTA",
				text: "_1tEoY-vmgG3yWH6hCdgy3p",
				image: "e6PSfRI3_H3v8fgbIqj-x",
				button: "_3FKXXAcRW_DvCNr6yMbF73",
				padding: "_2LEtmNuEePPvFdDfwPmBcx"
			}
		},
		"./src/reddit/components/SearchResultsContent/NoResults/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return g
			})), s.d(t, "a", (function() {
				return x
			}));
			var n = s("./src/config.ts"),
				r = s("./src/lib/classNames/index.ts"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/reddit/controls/Search/CommentSearch/index.tsx"),
				c = s("./src/reddit/controls/Search/SearchBar/index.tsx"),
				d = s("./src/reddit/helpers/search/searchClickSearchBarOriginElement.ts"),
				l = s("./src/reddit/helpers/trackers/searchResults.ts"),
				m = s("./src/reddit/hooks/useTracking.ts"),
				u = s("./src/reddit/pages/SearchResults/index.tsx"),
				p = s("./src/reddit/selectors/telemetry.ts"),
				C = s("./src/reddit/components/SearchResultsContent/NoResults/index.m.less"),
				b = s.n(C);
			const {
				fbt: h
			} = s("./node_modules/fbt/lib/FbtPublic.js"), f = `${n.a.assetPath}/img/telescope-snoo.png`;
			var g;

			function x(e) {
				let {
					query: t,
					type: s,
					searchBarId: n = c.a,
					searchOptions: C,
					tab: g
				} = e;
				const x = Object(m.a)();
				Object(o.useEffect)(() => {
					x(Object(l.n)(s, C))
				}, [s]);
				const v = C.restrict_sr || u.pageConfig[g].sidebar,
					y = n === i.a;
				return a.a.createElement("div", {
					className: Object(r.a)(y && b.a.padding)
				}, a.a.createElement("div", {
					className: Object(r.a)(b.a.noResults, v && b.a.withSidebar),
					"data-testid": "no-results"
				}, a.a.createElement("img", {
					alt: h._("No results image", null, {
						hk: "1BoGUJ"
					}),
					src: f,
					className: b.a.image
				}), a.a.createElement("h2", {
					className: b.a.header
				}, h._("Hm... we couldn’t find any results for “", null, {
					hk: "4fFM7J"
				}), h._("{search query}", [h._param("search query", t)], {
					hk: "4vP3YT"
				}), "”"), a.a.createElement("p", {
					className: b.a.text
				}, h._("Double-check your spelling or try different keywords to {=adjust your search}", [h._param("=adjust your search", a.a.createElement("button", {
					className: b.a.button,
					onClick: () => {
						var e;
						const t = document.querySelector(`input[type="search"][id=${n}]`);
						t || null === (e = document.getElementById(i.b)) || void 0 === e || e.click(), d.a.set(p.a.AdjustSearchButton), null == t || t.focus(), null == t || t.select()
					}
				}, h._("adjust your search", null, {
					hk: "1pUIox"
				})))], {
					hk: "33XStx"
				}))))
			}! function(e) {
				e.Comments = "comments", e.Communities = "communities", e.People = "people", e.Posts = "posts"
			}(g || (g = {}))
		},
		"./src/reddit/components/SearchResultsContent/PdpComment/index.m.less": function(e, t, s) {
			e.exports = {
				actionFont: "GdWkLdr7ToYAI7A1BuDdw",
				commentContent: "_2UJq3kiv6y_oSPPmQyFMxy",
				commentContainer: "_2nHutt97wCf1b9Txz8_Y67",
				first: "B1l5QN6o0c-5KGYHlANBw",
				iconSpacer: "vz6ezPSNwnMTVPF3HcJiw",
				leftSpacer: "_6PV9rgxHCsT7DD2OrVvJ0",
				marginTop: "_3jLdjJWF8IlmuZ7sysSq0g",
				marginContainer: "_3KLHXM3DEshAA3TDpGD_4a",
				metadataColor: "tuXecQytAjq5ReXeDFhPI",
				metadataFont: "_3bUukUiGtOzLXmGTBi1yXx",
				flex: "_3SUyRHeYoSqKJ0It_8jTAQ",
				separator: "_1UhP-2TSDqqzDUVoNfS4Nm",
				pdpUserIcon: "_3DCfB-ynh0K_m_xbYTL_Ne"
			}
		},
		"./src/reddit/components/SearchResultsContent/SearchPdpComments/index.m.less": function(e, t, s) {
			e.exports = {
				actionFont: "_3YO4K3yksC9xgvi4mQKYCO",
				bodySmall: "_1IiVmJGunQFDDo5CqSj2ud",
				flex: "_2IN7-71tvGQwNHh4GbHoXP",
				marginContainer: "_3AR3SCORiJ1YZwXmwHK9wz",
				paddingContainer: "Juhx_BGoavuj8fSl22xEj",
				truncate: "_1nweqL_PkreclINbtmmHgr",
				verticalDivider: "fkef5ZJjs6gmKJbkSmGtT"
			}
		},
		"./src/reddit/components/SearchResultsContent/SearchPdpComments/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return P
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./src/lib/classNames/index.ts"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./src/reddit/components/LinkOrOverlayLink/index.tsx"),
				d = s("./src/reddit/constants/page.ts"),
				l = s("./src/reddit/controls/Search/CommentSearch/index.tsx"),
				m = s("./src/reddit/helpers/path/index.ts"),
				u = s("./src/reddit/helpers/trackers/post.ts"),
				p = s("./src/reddit/hooks/usePageLayer.ts"),
				C = s("./src/reddit/hooks/useTracking.ts"),
				b = s("./src/reddit/selectors/searchResults.ts"),
				h = s("./src/reddit/components/SearchResultsContent/NoResults/index.tsx"),
				f = s("./node_modules/lodash/constant.js"),
				g = s.n(f),
				x = s("./node_modules/lodash/times.js"),
				v = s.n(x),
				y = s("./src/reddit/components/Comments/States/index.tsx"),
				O = s("./src/reddit/components/SearchResultsContent/SearchResultsList/index.tsx"),
				E = s("./src/reddit/components/SearchResultsContent/Communities/index.m.less"),
				j = s.n(E);
			const _ = e => {
				const {
					commentsPageKey: t,
					listingKey: s,
					searchOptions: n,
					originElement: r
				} = e, o = Object(i.e)(e => Object(b.d)(e, {
					listingKey: s
				})), c = Object(i.e)(e => Object(b.t)(e, {
					listingKey: s
				})), d = Boolean(c && c.token) && o.length > 0;
				return a.a.createElement("div", {
					className: j.a.container,
					"data-testid": "pdp-comments-list"
				}, a.a.createElement(O.b, {
					identifiers: o,
					listingKey: s,
					pageKey: t,
					searchOptions: n,
					componentType: O.c.PdpComments,
					originElement: r
				}), d && a.a.Children.toArray(v()(3, g()(a.a.createElement(y.a, {
					sidebar: !1
				})))))
			};
			var k = s("./src/reddit/components/SearchResultsContent/searchResultsPageTreatment/SearchResultsScreen.tsx"),
				L = s("./src/reddit/components/SearchResultsContent/SearchPdpComments/index.m.less"),
				w = s.n(L);
			const S = "view_all_comments_link",
				I = "back_to_pdp_comments_results";

			function P(e) {
				var t;
				const {
					commentsPageKey: s,
					isOverlay: o,
					post: f,
					listingKey: g,
					searchOptions: x
				} = e, v = Object(C.a)(), y = Object(p.a)(), O = Object(i.e)(e => Object(b.m)(e, {
					listingKey: g
				}));
				return a.a.createElement(a.a.Fragment, null, a.a.createElement("div", {
					className: Object(r.a)(w.a.flex, w.a.marginContainer, w.a.paddingContainer)
				}, a.a.createElement("p", {
					"data-testid": I,
					className: Object(r.a)(w.a.bodySmall, w.a.truncate)
				}, n.fbt._('Comments with "{current search query}"', [n.fbt._param("current search query", (null == x ? void 0 : x.q) || "")], {
					hk: "21uw6n"
				})), a.a.createElement("span", {
					className: w.a.verticalDivider
				}, "|"), a.a.createElement(c.a, {
					className: Object(r.a)(w.a.actionFont),
					"data-testid": S,
					isOverlay: o,
					to: {
						pathname: Object(m.b)(f.permalink),
						state: {
							...null === (t = e.prevLocation) || void 0 === t ? void 0 : t.state
						}
					},
					onClick: function() {
						v(Object(u.o)(f.id, void 0, y))
					}
				}, n.fbt._("All Comments", null, {
					hk: "4hJcyz"
				})), a.a.createElement("span", {
					className: w.a.verticalDivider
				}, "|")), a.a.createElement("div", null, a.a.createElement(k.a, {
					hasResults: O,
					searchBarId: l.a,
					searchOptions: x,
					noResultsType: h.b.Comments,
					searchResultsTab: d.h.Comments,
					listingKey: g,
					pendingSelector: b.f
				}, a.a.createElement(_, {
					commentsPageKey: s,
					listingKey: g,
					searchOptions: x,
					key: d.h.Comments
				}))))
			}
		},
		"./src/reddit/components/SearchResultsContent/SearchResultsList/index.m.less": function(e, t, s) {
			e.exports = {
				separatedCommunity: "_2kqt-kRLvKQ1Kqi8OjMEa7"
			}
		},
		"./src/reddit/components/SearchResultsContent/SearchResultsList/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return es
			})), s.d(t, "c", (function() {
				return os
			})), s.d(t, "b", (function() {
				return is
			}));
			var n = s("./node_modules/lodash/times.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./node_modules/reselect/es/index.js"),
				d = s("./src/lib/constants/index.ts"),
				l = s("./src/lib/hooks/usePrevious.ts"),
				m = s("./src/lib/LRUCache/index.ts"),
				u = s("./src/reddit/actions/search.ts"),
				p = s("./src/reddit/components/Comments/States/index.tsx"),
				C = s("./src/reddit/components/Scroller/Simple.tsx"),
				b = s("./src/config.ts"),
				h = s("./node_modules/lodash/noop.js"),
				f = s.n(h),
				g = s("./node_modules/polished/dist/polished.es.js"),
				x = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				v = s("./node_modules/node-libs-browser/node_modules/url/url.js"),
				y = s.n(v),
				O = s("./src/higherOrderComponents/withAdClickLocation/Locations.ts"),
				E = s("./src/lib/classNames/index.ts"),
				j = s("./src/lib/isUrl/index.ts"),
				_ = s("./src/lib/permalinkToOverlayLocation/index.ts"),
				k = s("./src/reddit/components/FlairList/index.tsx"),
				L = s("./src/reddit/components/PostBackgroundWrapper/index.tsx"),
				w = s("./src/reddit/components/PostContainer/index.tsx"),
				S = s("./src/reddit/components/SearchPostFlatlist/index.tsx"),
				I = s("./node_modules/fbt/lib/FbtPublic.js"),
				P = s("./src/reddit/components/Flair/index.tsx"),
				N = s("./src/reddit/components/Hovercards/SubredditHovercard/index.tsx"),
				T = s("./src/reddit/components/InfoTextTooltip/Hooked.tsx"),
				M = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				R = s("./src/reddit/controls/InternalLink/index.tsx"),
				F = s("./src/reddit/controls/MetaSeparator/index.tsx"),
				B = s("./src/reddit/controls/ScrollerTooltipPortal/index.tsx"),
				A = s("./src/reddit/hooks/useClickSourceData.ts"),
				D = s("./src/reddit/hooks/useInfoTextTooltip.ts"),
				U = s("./src/reddit/hooks/useTheme.ts"),
				W = s("./src/reddit/icons/fonts/index.tsx"),
				H = s("./src/reddit/selectors/experiments/search/searchSubDiscovery.ts"),
				V = s("./src/reddit/selectors/user.ts"),
				Z = s("./src/reddit/components/SearchPostMeta/index.tsx"),
				q = s("./src/reddit/components/AuthorLink/index.tsx"),
				z = s("./src/reddit/components/Hovercards/AuthorHovercard/index.tsx"),
				K = s("./src/reddit/components/HumanDate/HumanDateTime.tsx"),
				G = s("./src/reddit/components/HumanDate/TimeAgo.tsx"),
				Y = s("./src/reddit/components/PostTopMeta/index.tsx"),
				J = s("./src/reddit/components/SearchPostMeta/index.m.less"),
				Q = s.n(J);

			function X(e) {
				var t;
				const {
					className: s,
					clickSourceData: n,
					onClick: r,
					subredditOrProfile: o
				} = e, c = Object(i.e)(V.fb), d = null === (t = o.icon) || void 0 === t ? void 0 : t.url, l = null == o ? void 0 : o.color;
				let m;
				return m = d ? a.a.createElement("img", {
					alt: I.fbt._("Subreddit Icon", null, {
						hk: "134aM1"
					}),
					className: s,
					style: {
						backgroundColor: l
					},
					role: "presentation",
					src: d
				}) : a.a.createElement(W.a, {
					name: "community",
					isFilled: !c,
					className: Object(E.a)(Q.a.defaultCommunityIcon, s, c && Q.a.mNightmode)
				}), a.a.createElement(R.default, {
					className: Q.a.contents,
					"data-testid": Z.a,
					onClick: r,
					to: {
						pathname: o.url,
						state: n
					}
				}, m)
			}

			function $(e) {
				const {
					post: t,
					onClickPostAuthor: s
				} = e, n = Object(D.a)(Y.e), r = t.crosspostRootId ? I.fbt._("Crossposted by", null, {
					hk: "1r1JSX"
				}) : I.fbt._("Posted by", null, {
					hk: "3mow5F"
				});
				return a.a.createElement("div", {
					className: Q.a.metaContainer
				}, t.crosspostRootId && a.a.createElement(W.a, {
					name: "crosspost",
					className: Object(E.a)(Q.a.crosspostIcon, Q.a.metaSpacer)
				}), a.a.createElement("span", {
					className: Q.a.metaSpacer
				}, r), a.a.createElement(z.b, {
					postOrComment: t
				}, a.a.createElement(q.a, {
					author: t.author,
					className: Q.a.metaSpacer,
					isAuthorDeleted: t.author === d.F,
					isUnstyled: !0,
					linkProps: {
						"data-click-id": O.a.USER,
						"data-testid": Y.b
					},
					onClick: s
				}, `u/${t.author}`)), t.authorFlair && a.a.createElement("div", {
					className: Q.a.flairContainer
				}, a.a.createElement(P.c, {
					flair: t.authorFlair,
					forceSmallEmojis: !0
				})), !t.isSponsored && a.a.createElement(a.a.Fragment, null, a.a.createElement("span", {
					className: Q.a.timestamp,
					"data-testid": Y.c,
					"data-click-id": O.a.TIMESTAMP,
					onMouseEnter: n.show,
					onMouseLeave: n.hide,
					ref: n.target.ref
				}, a.a.createElement(G.a, {
					seconds: t.createdAt / d.Wb
				})), a.a.createElement(B.a, null, a.a.createElement(T.a, {
					arrowProps: n.arrowProps,
					popperProps: n.popperProps,
					visible: n.visible
				}, a.a.createElement(K.a, {
					seconds: t.createdAt / d.Wb
				})))))
			}

			function ee(e) {
				const {
					className: t,
					isOptimizedSerp: s,
					onClickPostAuthor: n,
					onClickPostCommunity: r,
					post: o,
					subredditOrProfile: c
				} = e, d = Object(A.a)(), {
					isSubEnlarged: l
				} = Object(i.e)(H.a), m = Object(U.a)();
				return a.a.createElement("div", {
					className: Object(E.a)(t, Q.a.metaContainer, Q.a.metadataFont)
				}, !o.isSponsored && c && a.a.createElement(N.a, {
					className: Object(E.a)(Q.a.hovercardContainer, Q.a.hovercardContainer),
					postId: o.id,
					subredditName: c.name
				}, a.a.createElement(X, {
					className: Object(E.a)(Q.a.subredditIcon, l && Q.a.enlargedSubredditIcon),
					"data-click-id": O.a.SUBREDDIT,
					clickSourceData: d,
					onClick: r,
					subredditOrProfile: c
				}), a.a.createElement(R.default, {
					className: Object(E.a)(Q.a.subredditName, l && Q.a.enlargedSubredditName),
					"data-testid": Z.b,
					"data-click-id": O.a.SUBREDDIT,
					onClick: r,
					to: {
						pathname: c.url,
						state: d
					}
				}, c.displayText)), !o.isSponsored && !s && a.a.createElement(a.a.Fragment, null, a.a.createElement(F.b, null), a.a.createElement(M.h, {
					type: o.belongsTo.type,
					id: o.belongsTo.id
				})), a.a.createElement(F.b, null), a.a.createElement($, {
					className: Q.a.postTopMeta,
					onClickPostAuthor: n,
					post: o,
					theme: m
				}))
			}
			var te = s("./src/reddit/icons/svgs/QuarantineWarning/index.tsx"),
				se = s("./src/reddit/components/SearchWarnings/index.m.less"),
				ne = s.n(se);
			const {
				fbt: re
			} = s("./node_modules/fbt/lib/FbtPublic.js");

			function oe(e) {
				let {
					className: t,
					isQuarantined: s,
					isNSFW: n,
					isSpoiler: r
				} = e;
				return s || n || r ? a.a.createElement("div", {
					className: t
				}, s ? a.a.createElement("span", {
					className: Object(E.a)(ne.a.warningText, ne.a.quarantineWarning)
				}, a.a.createElement(te.a, {
					className: Object(E.a)(ne.a.warningIcon, ne.a.quarantineIcon)
				}), re._("quarantined", null, {
					hk: "1j7soK"
				})) : null, n ? a.a.createElement("span", {
					className: Object(E.a)(ne.a.warningText, ne.a.nsfwWarning)
				}, a.a.createElement(W.a, {
					name: "nsfw_fill",
					className: Object(E.a)(ne.a.warningIcon)
				}), re._("nsfw", null, {
					hk: "2IetSA"
				})) : null, r ? a.a.createElement("span", {
					className: Object(E.a)(ne.a.warningText, ne.a.spoilerWarning)
				}, a.a.createElement(W.a, {
					name: "spoiler_fill",
					className: Object(E.a)(ne.a.warningIcon)
				}), re._("spoiler", null, {
					hk: "3SHbs3"
				})) : null) : null
			}
			var ae = s("./src/reddit/components/SEOTitle/index.tsx"),
				ie = s("./src/reddit/components/SEOTitle/constants.ts"),
				ce = s("./src/reddit/components/Thumbnail/index.tsx"),
				de = s("./src/reddit/components/TrackingHelper/index.tsx");
			const le = new m.a(250),
				me = (e, t, s) => {
					const n = e.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
					return e => {
						const r = `${e.id}-${n}`;
						let o = le.get(r);
						if (void 0 === o) {
							const i = new RegExp(`(\\b${n}\\b)`, "gi"),
								c = e.title.split(i);
							o = s(a.a.createElement(a.a.Fragment, null, a.a.Children.toArray(c.map((e, s) => s % 2 != 0 ? t(e) : e)))), le.set(r, o)
						}
						return o
					}
				};
			var ue = s("./src/reddit/contexts/PageLayer/index.tsx"),
				pe = s("./src/reddit/controls/OutboundLink/index.tsx"),
				Ce = s("./src/reddit/helpers/clickSourceData/index.ts"),
				be = s("./src/reddit/helpers/overlay/index.ts"),
				he = s("./src/reddit/helpers/path/index.ts"),
				fe = s("./src/reddit/helpers/trackers/searchResults.ts"),
				ge = s("./src/reddit/hooks/usePageLayer.ts"),
				xe = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				ve = s("./src/reddit/selectors/searchResults.ts"),
				ye = s("./src/telemetry/models/Outbound.ts"),
				Oe = s("./src/reddit/components/SearchPost/index.m.less"),
				Ee = s.n(Oe);

			function je() {
				return (je = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const _e = "post-title";

			function ke(e) {
				var t;
				const {
					isCommentsPage: s,
					post: n,
					searchQuery: r
				} = e, i = s ? ie.a.PostComments : ie.a.PostItem, c = Object(A.a)(), d = Object(_.a)(n.permalink, void 0, c), l = Object(U.a)(), m = Object(o.useMemo)(() => me(r, e => a.a.createElement("span", {
					className: Object(E.a)(Ee.a.syntaxHighlight)
				}, e), e => e), [r])(n);
				return a.a.createElement("div", {
					className: Object(E.a)(n.id, Ee.a.postTitleColors),
					"data-adclicklocation": O.a.TITLE
				}, a.a.createElement("style", {
					dangerouslySetInnerHTML: {
						__html: `\n        .${n.id}.${Ee.a.postTitleColors} {\n          --postTitle-VisitedLinkColor: ${Object(g.c)(.45,Object(xe.a)({theme:l}).titleText,"#FFFFFF")};\n          --postTitleLink-VisitedLinkColor: ${Object(g.c)(.45,Object(xe.a)({theme:l}).titleText,Object(xe.a)({theme:l}).body)};\n          --postBodyLink-VisitedLinkColor: ${Object(g.c)(.45,Object(xe.a)({theme:l}).bodyText,Object(xe.a)({theme:l}).body)};\n        }\n      `
					}
				}), a.a.createElement("div", {
					className: Ee.a.postTitleVisibility,
					dangerouslySetInnerHTML: {
						__html: `\n            <img alt="" src="${b.a.assetPath}/img/renderTimingPixel.png" style="width: 1px; height: 1px;" onLoad="(__markFirstPostVisible || function(){})();" />\n          `
					}
				}), a.a.createElement("div", {
					className: Ee.a.titleContainer
				}, a.a.createElement(x.a, {
					to: d
				}, a.a.createElement("div", {
					className: Object(E.a)(Ee.a.inline, Ee.a.titleTextColor, Ee.a.titleMedium, Ee.a.paddingRight),
					"data-testid": _e,
					style: {
						"--posttitletextcolor": Object(xe.a)({
							theme: l
						}).titleText
					}
				}, a.a.createElement(ae.b, {
					type: i
				}, m))), n.flair && a.a.createElement(k.a, {
					className: Ee.a.inline,
					subredditName: null === (t = n.subreddit) || void 0 === t ? void 0 : t.name,
					isFlairFilter: !0,
					flair: n.flair
				})))
			}

			function Le(e) {
				var t, s;
				const n = !e.theme.subredditContext.shouldShowNSFWContent && e.post.isNSFW,
					r = (null === (t = e.post.source) || void 0 === t ? void 0 : t.url) || "",
					o = (null === (s = e.post) || void 0 === s ? void 0 : s.mediaContentUrl) || "",
					i = a.a.createElement(ce.a, {
						alt: e.post.title,
						className: Object(E.a)(Ee.a.thumbnail, n && Ee.a.blurred),
						src: e.post.thumbnail.url,
						theme: e.theme,
						isOutbound: r && !e.post.isSponsored || !1
					});
				return a.a.createElement("div", {
					className: Ee.a.container,
					onClick: e.makeSendClickEventFn
				}, Object(j.a)(o) && !e.post.media ? a.a.createElement(pe.b, {
					href: r || o,
					isSponsored: e.post.isSponsored,
					postId: e.post.id,
					source: e.post.source,
					sourceElement: ye.SourceElement.PostImage
				}, i) : i)
			}
			var we = s("./src/reddit/components/SearchPost/Placeholder.tsx"),
				Se = s("./src/reddit/constants/elementIds.ts"),
				Ie = s("./src/reddit/helpers/trackers/screenview.ts"),
				Pe = s("./src/reddit/selectors/platform.ts"),
				Ne = s("./src/reddit/selectors/tracking.ts"),
				Te = s("./src/telemetry/index.ts"),
				Me = s("./src/telemetry/models/Timer.ts"),
				Re = s("./node_modules/react-router-redux/es/index.js"),
				Fe = s("./src/reddit/components/Comments/Comment/index.tsx"),
				Be = s("./src/reddit/components/PostList/index.tsx"),
				Ae = s("./src/reddit/components/PostTitle/index.tsx"),
				De = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				Ue = s("./src/lib/getShortenedLink.ts"),
				We = s("./src/reddit/components/EventPost/EventMetaHeader/index.tsx"),
				He = s("./src/reddit/components/ModModeFilteredReason/index.tsx"),
				Ve = s("./src/reddit/components/ModModeFilteredReason/helpers.ts"),
				Ze = s("./src/reddit/components/ModModeReports/index.tsx"),
				qe = s("./src/reddit/components/ModModeReports/helpers.ts"),
				ze = s("./src/reddit/actions/post.ts"),
				Ke = s("./src/reddit/selectors/moderatorPermissions.ts"),
				Ge = s("./src/reddit/selectors/poll/index.ts"),
				Ye = s("./src/reddit/selectors/postFlair.ts"),
				Je = s("./src/reddit/selectors/posts.ts");
			const Qe = {
					crosspost: Je.d,
					isActive: Je.j,
					isLoggedIn: V.S,
					moderatorPermissions: Ke.m,
					modModeEnabled: ue.W,
					poll: Ge.e,
					showEditFlair: Ye.a,
					flairStyleTemplate: ue.Y
				},
				Xe = () => Object(c.c)(Qe);
			var $e = s("./src/reddit/contexts/Post/index.tsx"),
				et = s("./src/reddit/controls/OutboundLink/styled.tsx"),
				tt = s("./src/reddit/helpers/hasModPostPermissions/index.ts"),
				st = s("./src/reddit/helpers/styles/mixins/index.tsx");

			function nt() {
				return (nt = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const rt = Object(De.a)(e => {
					const {
						className: t,
						crosspost: s,
						eventFactory: n,
						first: r,
						flairStyleTemplate: i,
						isLoggedIn: c,
						isOverlay: d,
						moderatorPermissions: l,
						modModeEnabled: m,
						onClickPost: u,
						onClickPostAuthor: p,
						onClickPostCommunity: C,
						onIgnoreReports: b,
						poll: h,
						post: f,
						redditStyle: g,
						searchQuery: x,
						showBulkActionCheckbox: v,
						subredditOrProfile: y,
						title: O
					} = e, _ = g ? void 0 : i, k = s || void 0, I = Object(tt.a)(l), P = Object(Ve.a)(f), N = Object(qe.c)(f), T = Object(ce.c)({
						crosspost: s,
						post: f,
						url: void 0,
						usePreview: !1
					}), R = T && Object(j.a)(T), F = !c, B = Object(o.useMemo)(() => O ? void 0 : me(x, e => a.a.createElement("span", {
						className: Object(E.a)(Ee.a.syntaxHighlight)
					}, e), e => e), [O, x]), A = {
						flairStyleTemplate: _,
						isOverlay: d,
						onClickPostAuthor: p,
						onClickPostCommunity: C,
						post: f,
						shouldShowSubscribeButton: F,
						subredditOrProfile: y
					}, D = null != O ? O : a.a.createElement("div", {
						className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemTitleContainer)
					}, a.a.createElement("div", null, a.a.createElement(Ae.c, {
						format: B,
						hideSourceLink: !0,
						poll: h,
						post: f,
						redditStyle: !0,
						size: Ae.b.Medium,
						isOverlay: d,
						hideNSFWSpoilerFlair: !0
					}), f.source && !k && a.a.createElement(et.a, {
						className: Ee.a.outboundLink,
						href: f.source.url,
						isSponsored: f.isSponsored,
						postId: f.id,
						source: f.source
					}, Object(Ue.a)(f))), R && a.a.createElement("div", {
						className: Ee.a.thumbnailContainer
					}, a.a.createElement(ce.b, {
						className: Ee.a.thumbnail,
						crosspost: k && f,
						isMeta: f.isMeta,
						post: k || f,
						redditStyle: g,
						templatePlaceholderImage: _ && _.postPlaceholderImage
					})));
					return a.a.createElement(w.b, {
						className: Object(E.a)(Ee.a.postContainer, Object(st.a)(e), r ? Ee.a.mFirst : void 0, t),
						eventFactory: n,
						isOverlay: d,
						onClick: u,
						post: f,
						style: {
							...Object(st.d)(e),
							...Object(st.b)(_)
						}
					}, a.a.createElement(L.a, {
						"data-click-id": "background",
						flairStyleTemplate: _,
						redditStyle: !0
					}, a.a.createElement(We.a, {
						className: Ee.a.eventMeta,
						post: f
					}), a.a.createElement("div", {
						className: Object(E.a)(Ee.a.postContent, {
							[Ee.a.showBulkActionCheckbox]: v
						}),
						"data-click-id": "body"
					}, a.a.createElement(Z.c, nt({
						className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemMetaContainer),
						key: "PostMeta"
					}, A)), a.a.createElement(oe, {
						className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemWarningContainer),
						isSpoiler: f.isSpoiler,
						isNSFW: f.isNSFW,
						isQuarantined: null == y ? void 0 : y.isQuarantined
					}), D, m && I && P && a.a.createElement(He.a, {
						thing: f
					}), m && I && N && a.a.createElement(Ze.a, {
						onIgnoreReports: b,
						reportable: f
					}), a.a.createElement(S.c, {
						className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemFlatlistContainer),
						post: f
					}), a.a.createElement(M.d, null))))
				}),
				ot = Object($e.b)((e => t => {
					const s = Object(ue.ib)(),
						n = ((e, t) => {
							let {
								postId: s
							} = t;
							return {
								onIgnoreReports: () => e(Object(ze.eb)(s))
							}
						})(Object(i.d)(), {
							...t
						}),
						r = Object(ue.cb)(s),
						o = Object(i.e)(Xe),
						c = {
							...t,
							...o,
							...n,
							searchQuery: r
						};
					return a.a.createElement(e, c)
				})(rt));
			var at = s("./src/reddit/connectors/PostList/index.ts"),
				it = s("./src/reddit/contexts/Visibility.tsx"),
				ct = s("./src/reddit/controls/Button/index.tsx"),
				dt = s("./src/reddit/controls/Button/index.m.less"),
				lt = s.n(dt),
				mt = s("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				ut = s("./src/reddit/hooks/useTracking.ts"),
				pt = s("./src/reddit/selectors/comments.ts"),
				Ct = s("./src/reddit/selectors/commentSelector.ts");

			function bt(e) {
				let {
					className: t,
					comment: s
				} = e;
				return a.a.createElement(S.b, {
					className: t
				}, a.a.createElement(S.d, {
					score: s.score
				}), a.a.createElement(S.a, {
					awardCountsById: s.awardCountsById
				}))
			}
			var ht = s("./src/reddit/components/SearchResultsContent/Comment/index.m.less"),
				ft = s.n(ht);
			var gt;
			! function(e) {
				e.COMMENT = "comment", e.COMMENT_AUTHOR = "comment_author", e.COMMENT_TIMESTAMP = "comment_timestamp", e.GO_TO_COMMENT_LINK = "go_to_comment_link", e.POST = "post", e.POST_AUTHOR = "post_author", e.POST_COMMUNITY = "post_community"
			}(gt || (gt = {}));
			var xt = s("./src/reddit/components/SearchResultsContent/CommentPlaceholder/index.tsx"),
				vt = s("./src/lib/truncateText/index.ts"),
				yt = s("./src/lib/prettyPrintNumber/index.ts"),
				Ot = s("./src/reddit/components/SubscribeButton/index.tsx"),
				Et = s("./src/reddit/helpers/karma.ts");
			var jt = s("./src/reddit/constants/tracking.ts"),
				_t = s("./src/reddit/helpers/correlationIdTracker.ts"),
				kt = s("./src/reddit/selectors/telemetry.ts");
			var Lt = s("./src/reddit/components/SubredditIcon/index.tsx"),
				wt = s("./src/reddit/constants/posts.ts"),
				St = s("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				It = s("./src/reddit/selectors/subreddit.ts"),
				Pt = s("./src/reddit/components/SearchResultsContent/Community/index.m.less"),
				Nt = s.n(Pt);
			const Tt = Object(c.c)({
					isBlockingInterstitialEnabled: St.b,
					isBlockingInterstitialV2Enabled: St.c,
					hideNSFWPref: V.H,
					subredditOrProfile: It.Q,
					subredditOrProfileAboutInfo: It.M,
					userIsSubscriber: It.jb
				}),
				Mt = e => {
					const {
						className: t,
						first: s,
						identifier: n,
						listingKey: r,
						searchOptions: c,
						sidebar: d
					} = e, l = Object(ue.ib)(), m = Object(ut.a)(), u = Object(A.a)(), {
						isBlockingInterstitialEnabled: p,
						isBlockingInterstitialV2Enabled: C,
						hideNSFWPref: b,
						subredditOrProfile: h,
						subredditOrProfileAboutInfo: f
					} = Object(i.e)(t => Tt(t, e)), {
						withCommunityDescription: g
					} = Object(i.e)(H.a), x = d && g, v = Object(i.d)(), y = Object(o.useCallback)(e => {
						h && n.type === wt.a.PROFILE && (p || C) && (e.preventDefault(), v(Object(ze.bb)(h.url))), m(Object(fe.q)(c, l, n, r))
					}, [m, c, l, r, n, p, C, v, h]);
					if (!h) return null;
					const O = h.displayText,
						j = f.publicDescription,
						_ = ((e, t) => {
							if ("subreddit" !== e) {
								const e = t,
									s = Object(Et.a)(e),
									n = Object(yt.b)(s);
								return I.fbt._({
									"*": "{karma count} Karma",
									_1: "1 Karma"
								}, [I.fbt._plural(s, "karma count", n)], {
									hk: "4r0tyT"
								})
							}
							const s = t;
							return "number" == typeof s.subscribers ? I.fbt._({
								"*": "{number of subscribers} Members",
								_1: "1 Member"
							}, [I.fbt._plural(s.subscribers, "number of subscribers", Object(yt.b)(s.subscribers))], {
								hk: "vb11y"
							}) : null
						})(n.type, f),
						k = (e => {
							let {
								identifierType: t,
								subredditOrProfile: s,
								subredditOrProfileAboutInfo: n,
								onSubscribeButtonClick: r,
								subscribeEventFactory: o,
								priority: i
							} = e;
							if ("subreddit" !== t) return s.acceptFollowers ? a.a.createElement(Ot.a, {
								getEventFactory: o,
								identifier: {
									name: s.name,
									type: "profile"
								},
								onClick: r,
								priority: i,
								small: !0
							}) : null;
							return "number" == typeof n.subscribers ? a.a.createElement(Ot.a, {
								getEventFactory: o,
								identifier: {
									name: s.name,
									type: "subreddit"
								},
								onClick: r,
								priority: i,
								small: !0
							}) : null
						})({
							identifierType: n.type,
							subredditOrProfile: h,
							subredditOrProfileAboutInfo: f,
							onSubscribeButtonClick: e => {
								e.preventDefault(), e.stopPropagation()
							},
							subscribeEventFactory: e => {
								return ((e, t, s) => n => {
									const r = kt.J(n, void 0);
									return {
										source: fe.c.SEARCH,
										action: jt.c.CLICK,
										noun: `${s}_${fe.d[e.type]}`,
										actionInfo: Object(fe.k)(n, void 0, r, void 0),
										correlationId: Object(_t.c)(_t.a.SearchResults),
										profile: "profile" === e.type ? kt.Z(n, e.id) : void 0,
										search: kt.fb(n, t, mt.a.SERP),
										subreddit: "subreddit" === e.type ? kt.rb(n, e.id) : void 0
									}
								})(n, c, e ? "unsubscribe" : "subscribe")
							},
							priority: ct.c.Tertiary
						});
					return a.a.createElement(R.default, {
						"data-testid": `${n.type}-link`,
						className: Object(E.a)(Nt.a.link, d && Nt.a.sidebar, s ? Nt.a.mFirst : void 0, t),
						onClick: y,
						to: {
							pathname: h.url,
							state: u
						}
					}, a.a.createElement("div", {
						className: Nt.a.container
					}, a.a.createElement(Lt.b, {
						className: Object(E.a)(Nt.a.subredditIcon, x && Nt.a.sidebar),
						shouldHideNsfwIcon: b,
						subredditOrProfile: h
					}), a.a.createElement("div", {
						className: Nt.a.contentContainer
					}, a.a.createElement("div", {
						className: Object(E.a)(Nt.a.subredditInfo, d && Nt.a.sidebar)
					}, a.a.createElement("h6", {
						className: Object(E.a)(Nt.a.title, d && Nt.a.sidebar)
					}, O), a.a.createElement(oe, {
						className: Object(E.a)(Nt.a.warnings, d && Nt.a.sidebar),
						isQuarantined: null == h ? void 0 : h.isQuarantined,
						isNSFW: null == h ? void 0 : h.isNSFW
					}), _ && a.a.createElement(a.a.Fragment, null, a.a.createElement("p", {
						className: Nt.a.subtitle
					}, !d && a.a.createElement(F.b, null), _))), !d && a.a.createElement("p", {
						className: Nt.a.description
					}, Object(vt.a)(j, 150, "..."))), a.a.createElement("div", {
						className: Nt.a.buttonContainer
					}, k)), x && n.type !== wt.a.PROFILE && a.a.createElement("p", {
						className: Object(E.a)(Nt.a.description, d && Nt.a.sidebar)
					}, Object(vt.a)(j, 75, "...")))
				};
			var Rt = s("./src/reddit/components/SearchResultsContent/CommunityPlaceholder/index.tsx"),
				Ft = s("./src/reddit/components/SearchResultsContent/helpers/viewSearchThingTracker.ts"),
				Bt = s("./src/lib/objectSelector/index.ts"),
				At = s("./src/reddit/components/Comments/Comment/TopMeta/Author.tsx"),
				Dt = s("./src/reddit/components/Comments/Comment/TopMeta/Created.tsx"),
				Ut = s("./src/reddit/components/Comments/Comment/TopMeta/Edited.tsx"),
				Wt = s("./src/reddit/components/Comments/Comment/TopMeta/Role.tsx"),
				Ht = s("./src/reddit/components/RichTextJson/index.tsx"),
				Vt = s("./src/reddit/components/UserIcon/constants.ts"),
				Zt = s("./src/reddit/components/UserIcon/UserIcon.tsx"),
				qt = s("./src/reddit/constants/componentTestIds.ts"),
				zt = s("./src/reddit/controls/MetaData/index.tsx"),
				Kt = s("./src/reddit/helpers/getRichTextContent/index.ts"),
				Gt = s("./src/reddit/models/User/index.ts"),
				Yt = s("./src/reddit/components/SearchResultsContent/PdpComment/index.m.less"),
				Jt = s.n(Yt);
			var Qt = s("./src/reddit/components/SearchResultsContent/SearchResultsList/index.m.less"),
				Xt = s.n(Qt),
				$t = s("./src/reddit/components/SearchResultsContent/SearchResultsList/utils.ts");
			const es = 5,
				ts = Object(c.c)({
					apiError: ve.b,
					apiPending: ve.c,
					loadMore: ve.s,
					viewportDataLoaded: Ne.b
				}),
				ss = Object(c.c)({
					apiError: ve.e,
					apiPending: ve.f,
					loadMore: ve.t,
					viewportDataLoaded: Ne.b
				}),
				ns = Object(c.c)({
					apiError: ve.h,
					apiPending: ve.i,
					loadMore: ve.u,
					viewportDataLoaded: Ne.b
				}),
				rs = Object(c.c)({
					apiError: ve.x,
					apiPending: ve.y,
					loadMore: ve.v,
					viewportDataLoaded: Ne.b
				});
			var os;
			! function(e) {
				e.Posts = "posts", e.Subreddits = "communities", e.Users = "authors", e.Comments = "comments", e.PdpComments = "pdp_comments"
			}(os || (os = {}));
			const as = {
				[os.Comments]: {
					cacheName: "comment",
					Component: e => {
						let {
							identifier: t,
							listingKey: s,
							searchOptions: n
						} = e;
						const r = Object(ue.ib)(),
							o = Object(ut.a)(),
							c = Object(i.d)(),
							d = Object(i.e)(e => Object(Ct.c)(e, {
								commentId: t
							})),
							l = Object(i.e)(e => Object(pt.m)(e, {
								commentId: t
							})),
							m = Object(i.e)(e => (null == d ? void 0 : d.postId) ? Object(Je.F)(e, {
								postId: null == d ? void 0 : d.postId
							}) : void 0),
							u = Object(i.e)(e => (null == d ? void 0 : d.postId) && Object(Je.E)(e, {
								postId: null == d ? void 0 : d.postId
							})),
							p = Object(i.e)(e => e.search.searchQuery),
							C = Object(A.a)();
						if (!(null == d ? void 0 : d.postId) || !u) return null;
						const b = Object(at.b)(c),
							h = function(e) {
								let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : f.a;
								return function() {
									o(Object(fe.p)({
										comment: d,
										key: s,
										originElement: e,
										pageLayer: r,
										searchOptions: n,
										telemetrySource: mt.a.SERP
									})), t(...arguments)
								}
							},
							g = Object(Be.b)(d.postId, b),
							x = e => h(e);
						return a.a.createElement(ot, {
							crosspost: void 0,
							isActive: !1,
							isLoggedIn: !1,
							modModeEnabled: !1,
							moderatorPermissions: void 0,
							onClickPost: h(gt.POST, null != g ? g : f.a),
							onClickPostAuthor: x(gt.POST_AUTHOR),
							onClickPostCommunity: x(gt.POST_COMMUNITY),
							onIgnoreReports: f.a,
							postId: d.postId,
							searchQuery: p,
							showEditFlair: !1,
							title: a.a.createElement(it.a, null, a.a.createElement("div", {
								className: ft.a.commentContainer,
								"data-testid": "search_comment_container"
							}, a.a.createElement("div", {
								className: ft.a.postTitleContainer,
								"data-testid": "search_comment_post_title_container",
								onClick: x(gt.POST)
							}, m && a.a.createElement(Ae.c, {
								className: ft.a.postTitle,
								hideSourceLink: !0,
								post: m,
								redditStyle: !0,
								disableFlair: !0,
								size: Ae.b.Metadata
							})), a.a.createElement("div", {
								className: ft.a.commentContent,
								"data-testid": "search_comment",
								onClick: h(gt.COMMENT, e => {
									e.stopPropagation(), c(Object(Re.b)(Object(_.a)(l, !0, C)))
								})
							}, a.a.createElement(Fe.a, {
								clearHovered: f.a,
								commentId: t,
								commentsPageKey: "",
								flatlist: a.a.createElement(bt, {
									className: ft.a.commentFlatlist,
									comment: d
								}),
								hasAwardGradient: !1,
								highlightTreatment: null,
								index: 0,
								isHighlighted: !1,
								isFirstInList: !0,
								isActive: !1,
								noFocus: !0,
								noSpacing: !0,
								onLineMouseOver: f.a,
								onCommentAuthorClick: e => (e.stopPropagation(), x(gt.COMMENT_AUTHOR)(e)),
								onCommentTimestampClick: e => (e.stopPropagation(), x(gt.COMMENT_TIMESTAMP)(e)),
								postId: d.postId,
								renderedInOverlay: !1,
								restrictHeight: !0,
								rtJSONRedditStyle: !0,
								scrollToAndRemeasure: f.a,
								showBlockingInterstitial: f.a,
								userIconSmall: !0,
								onClickRevealSpoilerText: () => {
									o(Object(fe.s)(n, d, s, r))
								}
							})), a.a.createElement(ct.t, {
								kind: ct.b.InternalLink,
								priority: ct.c.PlainLink,
								className: Object(E.a)(ft.a.goToThreadLinkButton, lt.a.PlainLinkButton),
								"data-testid": "go_to_thread_link",
								onClick: h(gt.GO_TO_COMMENT_LINK, e => {
									e.stopPropagation()
								}),
								to: Object(_.a)(u, !0, C)
							}, I.fbt._("Go to thread", null, {
								hk: "npBX6"
							}))))
						})
					},
					moreResultsTypes: [d.hc.Comments],
					Placeholder: xt.a,
					selector: ss,
					telemetryComponentName: "commentSearchResults",
					telemetryViewEvent: Ft.d
				},
				[os.Subreddits]: {
					cacheName: "community",
					Component: Mt,
					moreResultsTypes: [d.hc.Subreddits],
					Placeholder: Rt.a,
					selector: ns,
					telemetryComponentName: "communitySearchResults",
					telemetryViewEvent: Ft.e
				},
				[os.Users]: {
					cacheName: "author",
					Component: Mt,
					moreResultsTypes: [d.hc.Users],
					Placeholder: Rt.a,
					selector: ts,
					telemetryComponentName: "authorSearchResults",
					telemetryViewEvent: Ft.e
				},
				[os.Posts]: {
					cacheName: "post",
					Component: e => {
						var t, s;
						const {
							first: n,
							listingKey: r,
							searchOptions: o
						} = e, c = Object(i.e)(t => Object(ve.z)(t, e)), d = Object(i.e)(e => {
							if (c.crosspostRootId) return Object(ve.z)(e, {
								identifier: c.crosspostRootId
							})
						}), l = Object(i.e)(e => Object(V.lb)(e)), m = Object(ge.a)(), u = Object(i.d)(), p = Object(de.b)(), C = function(e) {
							var t;
							const s = (null === (t = e.source) || void 0 === t ? void 0 : t.url) || "",
								n = y.a.parse(s),
								r = n.path || "",
								o = r.length > 7 ? r.substring(0, 7) + "..." : r;
							return (n.hostname ? n.hostname.replace("www.", "") : "") + o
						}(c), b = Object(ue.cb)(m), h = d ? d.thumbnail.url : c.thumbnail.url, g = h && Object(j.a)(h), x = Object(U.a)(), v = function(e) {
							let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : f.a;
							return function() {
								p(Object(fe.r)(c.id, o, m, e || null, r)), t(...arguments)
							}
						}, _ = e => v(e), k = {
							isOptimizedSerp: !0,
							post: c,
							subredditOrProfile: c.subreddit || c.profile,
							onClickPostAuthor: e => (e.stopPropagation(), _(fe.e.POST_AUTHOR)(e)),
							onClickPostCommunity: e => (e.stopPropagation(), _(fe.e.POST_COMMUNITY)(e))
						};
						return a.a.createElement("div", {
							className: Object(E.a)(Ee.a.postContainer, n && Ee.a.mFirst),
							"data-adclicklocation": O.a.BACKGROUND,
							"data-click-id": O.a.BACKGROUND,
							"data-testid": w.a,
							id: c.id,
							onClick: v(fe.e.POST, e => {
								e.stopPropagation(), l ? window.open(c.permalink) : u(Object(be.a)({
									pathname: Object(he.b)(c.permalink),
									state: Object(Ce.b)(m)
								}))
							}),
							tabIndex: -1
						}, a.a.createElement(L.a, {
							"data-click-id": O.a.BACKGROUND,
							redditStyle: !0
						}, a.a.createElement("div", {
							className: Ee.a.postContent,
							"data-click-id": O.a.BODY
						}, a.a.createElement(ee, je({
							className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemMetaContainer),
							key: "PostMeta"
						}, k)), a.a.createElement(oe, {
							className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemWarningContainer),
							isQuarantined: (null === (t = c.subreddit) || void 0 === t ? void 0 : t.isQuarantined) || (null === (s = c.profile) || void 0 === s ? void 0 : s.isQuarantined),
							isNSFW: c.isNSFW,
							isSpoiler: c.isSpoiler
						}), a.a.createElement("div", {
							className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemTitleContainer)
						}, a.a.createElement("div", {
							className: Ee.a.postContent
						}, a.a.createElement(ke, {
							searchQuery: b,
							post: c
						}), c.source && !c.crosspostRootId && a.a.createElement(pe.b, {
							className: Ee.a.outboundLink,
							href: c.source.url,
							isSponsored: c.isSponsored,
							postId: c.id,
							source: c.source
						}, C)), g && a.a.createElement("div", {
							className: Ee.a.thumbnailContainer
						}, a.a.createElement(Le, {
							makeSendClickEventFn: e => (e.stopPropagation(), _(fe.e.POST)(e)),
							post: c,
							theme: x
						}))), a.a.createElement(S.c, {
							className: Object(E.a)(Ee.a.paddingSide, Ee.a.postItemFlatlistContainer),
							post: c
						}))))
					},
					moreResultsTypes: [d.hc.Posts],
					Placeholder: we.a,
					selector: rs,
					telemetryComponentName: "postList",
					telemetryViewEvent: Ft.g,
					trackOnEnteredViewportCallback: $t.b,
					trackOnExitedViewportCallback: $t.a
				},
				[os.PdpComments]: {
					cacheName: "pdp-comment",
					Component: e => {
						let {
							identifier: t,
							first: s,
							listingKey: n,
							searchOptions: r,
							pageKey: o
						} = e;
						const c = Object(ue.ib)(),
							d = Object(ut.a)(),
							l = Object(i.d)(),
							m = Object(i.e)(e => Object(Ct.c)(e, {
								commentId: t
							})),
							u = Object(i.e)(e => Object(pt.m)(e, {
								commentId: t
							})),
							p = Object(i.e)(e => Object(V.m)(e)),
							C = Object(i.e)(V.H),
							b = Object(i.e)(e => Object(Pe.i)(e)),
							h = Object(i.e)(e => (null == m ? void 0 : m.postId) && Object(Je.E)(e, {
								postId: null == m ? void 0 : m.postId
							})),
							g = Object(i.e)(e => Object(ue.s)(e, {
								pageLayer: c
							})),
							x = Object(A.a)();
						if (!(null == m ? void 0 : m.postId) || !h) return null;
						const v = !!p && Object(Gt.e)(p) === m.author,
							y = v ? null == p ? void 0 : p.accountIcon : m.profileImage,
							O = !v && m.profileOver18 && C ? Vt.a || Zt.a : y,
							j = Object(Kt.a)(m),
							k = Object(Bt.b)(e => {
								let {
									comment: t,
									pageLayer: s
								} = e;
								return {
									renderingObjectInfo: t,
									pageLayer: s
								}
							}),
							L = function(e) {
								let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : f.a;
								return function() {
									d(Object(fe.p)({
										comment: m,
										key: n,
										originElement: e,
										pageLayer: c,
										searchOptions: r,
										telemetrySource: mt.a.PdpCommentSearch
									})), t(...arguments)
								}
							},
							w = e => L(e);
						return a.a.createElement(it.a, null, a.a.createElement("div", {
							className: Object(E.a)(Jt.a.commentContainer, Jt.a.marginContainer, Jt.a.metadataFont, s && Jt.a.first),
							"data-testid": "search_pdp_comment_container"
						}, a.a.createElement("div", {
							"data-testid": "search_pdp_comment",
							onClick: L(gt.COMMENT, e => {
								e.stopPropagation(), l(Object(Re.b)(Object(_.a)(u, !0, x)))
							})
						}, a.a.createElement("div", {
							className: Jt.a.flex
						}, a.a.createElement("img", {
							alt: I.fbt._("User avatar", null, {
								hk: "X43nA"
							}),
							className: Object(E.a)(Jt.a.pdpUserIcon, Jt.a.iconSpacer),
							src: O
						}), a.a.createElement(At.a, {
							authorClassName: Jt.a.actionFont,
							collapsed: !1,
							comment: m,
							onClick: e => (e.stopPropagation(), w(gt.COMMENT_AUTHOR)(e)),
							renderedInOverlay: b
						}), a.a.createElement(Wt.a, {
							className: Jt.a.leftSpacer,
							comment: m,
							subredditDisplayText: (null == g ? void 0 : g.displayText) || "",
							renderContractorBadge: !0,
							renderedInOverlay: b
						}), a.a.createElement(zt.c, {
							className: Object(E.a)(Jt.a.separator, Jt.a.metadataColor)
						}), a.a.createElement(Dt.a, {
							className: Jt.a.metadataColor,
							key: "Created",
							comment: m,
							compact: !0,
							onClick: e => (e.stopPropagation(), w(gt.COMMENT_TIMESTAMP)(e)),
							permalink: u,
							renderedInOverlay: b
						}), m.editedAt && a.a.createElement(a.a.Fragment, null, a.a.createElement(zt.c, {
							className: Object(E.a)(Jt.a.separator, Jt.a.metadataColor)
						}), a.a.createElement(Ut.a, {
							className: Jt.a.metadataColor,
							compact: !0,
							editedAt: m.editedAt
						}))), a.a.createElement("div", {
							className: Object(E.a)(Jt.a.commentContent, Jt.a.marginTop),
							"data-testid": qt.d
						}, a.a.createElement(Ht.b, {
							className: Jt.a.background,
							content: j,
							mediaMetadata: m.media && m.media.mediaMetadata,
							rtJsonElementProps: k({
								comment: m,
								pageLayer: c
							}),
							mediaProps: {
								alignLeft: !0,
								renderSmallMedia: !0
							}
						}), a.a.createElement(bt, {
							className: Object(E.a)(Jt.a.metadataFont, Jt.a.marginTop),
							comment: m
						})), a.a.createElement(M.b, {
							commentId: m.id
						}), a.a.createElement(M.a, {
							commentId: m.id,
							commentsPageKey: o
						}))))
					},
					moreResultsTypes: [d.hc.Comments],
					Placeholder: p.a,
					selector: ss,
					telemetryComponentName: "pdpCommentSearchResults",
					telemetryViewEvent: Ft.f
				}
			};
			const is = e => {
				const t = new m.a(250),
					s = Object(o.useRef)(),
					n = Object(o.useRef)(null),
					c = Object(ue.ib)(),
					p = Object(de.b)(),
					b = Object(i.d)(),
					{
						identifiers: h,
						listingKey: f,
						searchOptions: g,
						componentType: x,
						sidebar: v,
						originElement: y,
						pageKey: O,
						fireScreenview: E
					} = e,
					{
						cacheName: j,
						Component: _,
						moreResultsTypes: k,
						Placeholder: L,
						selector: w,
						telemetryComponentName: S,
						telemetryViewEvent: I,
						trackOnEnteredViewportCallback: P,
						trackOnExitedViewportCallback: N
					} = as[x],
					{
						apiError: T,
						apiPending: M,
						loadMore: R
					} = Object(i.e)(t => w(t, e)),
					F = !!Object(i.e)(e => Object(Pe.i)(e)),
					B = v ? es : h.length,
					A = v ? es : 10,
					D = Object(l.a)(F),
					U = Object(l.a)(h.length),
					W = () => Boolean(T) || !1 === M,
					H = () => h.length > 0,
					V = !(H() || W()),
					Z = () => {
						if (!E) return;
						const e = Te.c.has(f) ? Te.c.end(f) : 0;
						p(Object(Ie.t)(f, g, Me.TimerType.InApp, e, c))
					};
				Object(o.useEffect)(() => {
					if (n.current && Te.c.has(n.current)) {
						const e = Te.c.end(n.current);
						if (e < 10) return;
						Object(Te.b)(d.n.Redesign, {
							duration: e,
							type: "mount",
							component: S
						})
					}
				}), Object(o.useEffect)(() => {
					V || Z()
				}, [V]), Object(o.useEffect)(() => {
					n.current && Te.c.cancel(n.current), h.length && (n.current = Te.c.start())
				}, [n, f, h.length, U]), Object(o.useEffect)(() => {
					D && !F && Z()
				}, [F, D]);
				const q = e => {
						s.current = e instanceof Element ? e : void 0
					},
					z = () => {
						const e = h.slice(0, B).map((e, s) => ((e, s) => {
							let n;
							n = function(e) {
								return void 0 !== e.type
							}(e) ? e.id : e;
							const r = `${j}-search-${s}-${f}`,
								o = Object(Ft.b)(n, f, () => {
									null == P || P(n, s), I(p, g, e, f, c, y)
								}),
								i = Object(Ft.c)(n, f, e => {
									null == N || N(p, n, f, g, c, e)
								}, s);
							let d;
							if (void 0 === (d = t.get(r))) {
								const t = `${j}-search-item-[id:${n}]`;
								d = {
									estHeight: 32,
									trackOnEnteredViewport: o,
									trackOnExitedViewport: i,
									id: n,
									render: () => a.a.createElement(_, {
										className: Xt.a.separatedCommunity,
										first: 0 === s,
										identifier: e,
										key: t,
										listingKey: f,
										searchOptions: g,
										sidebar: v,
										pageKey: O
									})
								}
							}
							return t.set(r, d), d
						})(e, s));
						return a.a.createElement(C.b, {
							getContainer: () => F ? document.getElementById(Se.e) : null,
							key: f,
							innerRef: q,
							loadMoreToken: R && R.token ? R.token : void 0,
							onLoadMore: () => {
								b(Object(u.p)(k))
							}
						}, e)
					};
				return H() ? z() : W() ? z() : (() => {
					const e = !T;
					return a.a.createElement("div", {
						"data-testid": `${x}-list-placeholder`
					}, r()(A, t => a.a.createElement(L, {
						key: t,
						isLoading: e,
						sidebar: !1
					})))
				})()
			}
		},
		"./src/reddit/components/SearchResultsContent/SearchResultsList/utils.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return l
			})), s.d(t, "a", (function() {
				return m
			}));
			var n = s("./src/config.ts"),
				r = s("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				o = s("./src/reddit/helpers/trackers/post.ts"),
				a = s("./src/reddit/helpers/trackers/searchResults.ts"),
				i = s("./src/reddit/selectors/telemetry.ts"),
				c = s("./src/telemetry/index.ts");
			const d = e => `search-result-${e}`;

			function l(e) {
				c.c.start(d(e))
			}

			function m(e, t, s, l, m, u) {
				const p = d(t);
				if (c.c.has(p)) {
					const d = c.c.end(p);
					!u && d > n.a.telemetry.postConsumedThreshold && e(e => {
						const n = Object(i.z)(e, t, s),
							c = Object(o.g)(t, d, !1, null != n ? n : void 0)(e);
						return c.actionInfo = Object(a.k)(e, m, Object(i.J)(e, m), {
							position: n
						}), c.search = Object(i.fb)(e, l, r.a.SERP, null != m ? m : void 0), c
					})
				}
			}
		},
		"./src/reddit/components/SearchResultsContent/helpers/viewSearchThingTracker.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			})), s.d(t, "b", (function() {
				return l
			})), s.d(t, "c", (function() {
				return m
			})), s.d(t, "e", (function() {
				return u
			})), s.d(t, "d", (function() {
				return p
			})), s.d(t, "f", (function() {
				return C
			})), s.d(t, "g", (function() {
				return b
			}));
			var n = s("./src/lib/LRUCache/index.ts"),
				r = s("./src/reddit/constants/tracking.ts"),
				o = s("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				a = s("./src/reddit/helpers/trackers/searchResults.ts"),
				i = s("./src/reddit/selectors/commentSelector.ts");
			const c = new n.a(250),
				d = new n.a(250),
				l = (e, t, s) => {
					const n = `entered-${e}-${`last-${t}`}`;
					let r = c.get(n);
					return void 0 === r && (r = s, c.set(n, r)), r
				},
				m = (e, t, s, n) => {
					const r = `left-${e}`;
					let o = d.get(r);
					return void 0 === o && (o = s, d.set(r, o)), o
				},
				u = (e, t, s, n, o) => e(e => Object(a.j)({
					action: r.c.VIEW,
					state: e,
					searchOptions: t,
					pageLayer: o,
					subredditOrProfileIdentifier: s,
					key: n
				})),
				p = (e, t, s, n, c, d) => e(e => {
					const l = Object(i.c)(e, {
						commentId: s
					});
					return Object(a.i)({
						action: r.c.VIEW,
						state: e,
						searchOptions: t,
						pageLayer: c,
						comment: l,
						key: n,
						originElement: d,
						telemetrySource: o.a.SERP
					})
				}),
				C = (e, t, s, n, c, d) => e(e => {
					const l = Object(i.c)(e, {
						commentId: s
					});
					return Object(a.i)({
						action: r.c.VIEW,
						state: e,
						searchOptions: t,
						pageLayer: c,
						comment: l,
						key: n,
						originElement: d,
						telemetrySource: o.a.PdpCommentSearch
					})
				}),
				b = (e, t, s, n, o) => e(e => ({
					...Object(a.l)({
						state: e,
						searchOptions: t,
						pageLayer: o,
						postId: s,
						key: n,
						useSearchPost: !0
					}),
					action: r.c.VIEW
				}))
		},
		"./src/reddit/components/SearchResultsContent/index.m.less": function(e, t, s) {
			e.exports = {
				resultsContainer: "_1MTbwSHIISfMYM16YhZ8kN"
			}
		},
		"./src/reddit/components/SearchResultsContent/searchResultsPageTreatment/SearchResultsScreen.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/search/index.ts"),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./src/reddit/components/SearchResultsContent/NoResults/index.tsx");

			function c(e) {
				const {
					hasResults: t,
					searchBarId: s,
					searchOptions: n,
					noResultsType: c,
					searchResultsTab: d,
					pendingSelector: l
				} = e, m = Object(o.a)(n.q || ""), u = Object(a.e)(t => l(t, e)), p = void 0 === u || u;
				return r.a.createElement(r.a.Fragment, null, t || p ? e.children : r.a.createElement(i.a, {
					searchBarId: s,
					searchOptions: n,
					query: m,
					type: c,
					tab: d
				}))
			}
		},
		"./src/reddit/components/SearchResultsNav/index.m.less": function(e, t, s) {
			e.exports = {
				searchResultsNav: "_21H_PIzpqfpibB_EcUDwpj",
				pillRow: "_3XkfKrHLCXvnVsLyBJXzzv",
				pillElement: "_1gui9gwvmz0Ta6TaySS6jf",
				nsfwToggleContainer: "_1nT46ChOZ3tgGqgs2CyMeJ",
				searchSwitcherContainer: "_10JrVcY3xBcUNO7dNh0Js2"
			}
		},
		"./src/reddit/components/SearchResultsSidebar/index.m.less": function(e, t, s) {
			e.exports = {
				container: "DpriHZnFiOfa0afZpg8vf",
				header: "_3n4VKjpr-iVnAmYcon-YbI",
				link: "_2tLIUcp3fYt74ZlVikNlz5",
				noResults: "YoadDFUejEmzEbJmjTvHn"
			}
		},
		"./src/reddit/components/SearchResultsSubNav/GlobalSearchResultsLink/index.m.less": function(e, t, s) {
			e.exports = {
				TertiaryButton: "_3t6mNXBt6sQ7oZpTvfpI-D",
				tertiaryButton: "_3t6mNXBt6sQ7oZpTvfpI-D",
				AllRedditResultsButton: "_3DJNcKXVcC9fp5NF4suS_j",
				allRedditResultsButton: "_3DJNcKXVcC9fp5NF4suS_j"
			}
		},
		"./src/reddit/components/SearchResultsSubNav/Select/SelectOption/index.m.less": function(e, t, s) {
			e.exports = {
				SelectOption: "_iuAkxGWujgYETf2Xyv89",
				selectOption: "_iuAkxGWujgYETf2Xyv89",
				mIsSelected: "hxyadGitKiIMfl81IVThw"
			}
		},
		"./src/reddit/components/SearchResultsSubNav/Select/index.m.less": function(e, t, s) {
			e.exports = {
				caret: "OGoNN0lGfOACQsVwIa1wo",
				Wrapper: "_3yqn7UgWZCfM22Sk-rcBbs",
				wrapper: "_3yqn7UgWZCfM22Sk-rcBbs",
				caretOpen: "_1ILOkGbdwmhXOmzBDCYXFT",
				filterButton: "BZDMD8yWu5imupa73nqYE",
				hasValue: "_1HyZhQLyitFqci_zC5jGCy",
				Dropdown: "_3RwR0q62tl_HktsM6eNnOn",
				dropdown: "_3RwR0q62tl_HktsM6eNnOn"
			}
		},
		"./src/reddit/components/SearchResultsSubNav/index.m.less": function(e, t, s) {
			e.exports = {
				RightLink: "_3AmQ4JXJufVLUdOsC6v61i",
				rightLink: "_3AmQ4JXJufVLUdOsC6v61i",
				ArrowRight: "FGX7ywlMTix8BeUr5G7TE",
				arrowRight: "FGX7ywlMTix8BeUr5G7TE",
				Component: "_1fPZw9wLFaCEzhzp2Hkx18",
				component: "_1fPZw9wLFaCEzhzp2Hkx18",
				ComponentRedesign: "_26jxFFm8Z3TxPyZxoddAGy",
				componentRedesign: "_26jxFFm8Z3TxPyZxoddAGy"
			}
		},
		"./src/reddit/components/SearchSwitcher/index.m.less": function(e, t, s) {
			e.exports = {
				searchSwitcher: "_1i7CStyaaHQU2aiG0GdpSA",
				mSr: "_3-pePLWUAV_CAVhht1dfup",
				redesign: "_3Tphf4AA5J39saIlrB1SYD",
				subredditIcon: "_3swS56fqtrGcixPfTzK_Cl",
				searchSwitcherText: "-V0kqUlRHvLoNRUAUmCy9",
				arrowIcon: "N0zmIZbfRSCGk2rUOGHSS"
			}
		},
		"./src/reddit/components/SearchWarnings/index.m.less": function(e, t, s) {
			e.exports = {
				warningText: "_3qUPSbrS00ULxlso5V3tIN",
				warningIcon: "_1fMbGLM3cAHfas4PNZTps4",
				quarantineIcon: "Ap9gKlmTQdcI17NgCE4yQ",
				quarantineWarning: "_2cvv3TnzlFQHZE4upgevMn",
				nsfwWarning: "_1-dYjh5S-IQybef811XyCF",
				spoilerWarning: "_1P0ASR__enq34IxkSim2Rk"
			}
		},
		"./src/reddit/components/SidebarAd/BaseSidebarAdDoNotUseOrYoureFired.m.less": function(e, t, s) {
			e.exports = {
				ThemedWidget: "avKlJzxZU3brq4nAX0_i1",
				themedWidget: "avKlJzxZU3brq4nAX0_i1"
			}
		},
		"./src/reddit/components/SidebarAd/BaseSidebarAdDoNotUseOrYoureFired.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/lodash/random.js"),
				o = s.n(r),
				a = s("./node_modules/react/index.js"),
				i = s.n(a),
				c = s("./node_modules/react-redux/es/index.js"),
				d = s("./node_modules/reselect/es/index.js"),
				l = s("./src/config.ts"),
				m = s("./src/reddit/components/FakeBannerAd/index.tsx"),
				u = s("./src/reddit/components/SidebarSpacer/index.tsx"),
				p = s("./src/reddit/components/TrackingHelper/index.tsx"),
				C = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				b = s("./src/reddit/helpers/adCount/index.ts"),
				h = s("./src/reddit/helpers/trackers/ads.ts"),
				f = s("./src/reddit/models/Media/index.ts"),
				g = s("./src/reddit/components/SidebarAd/BaseSidebarAdDoNotUseOrYoureFired.m.less"),
				x = s.n(g),
				v = s("./src/lib/lessComponent.tsx");
			const y = Object(n.a)({
					resolved: {},
					chunkName: () => "reddit-components-SidebarNativeAd",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => Promise.all([s.e("CollectionCommentsPage~CommentsPage~CountryPage~FramedGild~GildModal~GovernanceReleaseNotesModal~Hap~a5d6a3b8"), s.e("CollectionCommentsPage~CommentsPage~CountryPage~FramedGild~GildModal~GovernanceReleaseNotesModal~Hap~cb450973"), s.e("CollectionCommentsPage~CommentsPage~CountryPage~Frontpage~GovernanceReleaseNotesModal~ModListing~Mod~e3d63e32"), s.e("CollectionCommentsPage~CommentsPage~EconTopAwardersModal~ModQueuePages~ModerationPages~PostCreation~~bca2b657"), s.e("CollectionCommentsPage~CommentsPage~GovernanceReleaseNotesModal~ModerationPages~PostCreation~Profile~9a5d9fab"), s.e("reddit-components-SidebarNativeAd")]).then(s.bind(null, "./src/reddit/components/SidebarNativeAd/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/SidebarNativeAd/index.tsx"
					}
				}),
				O = Object(d.c)({
					post: (e, t) => {
						const {
							placement: s,
							placementIndex: n
						} = t, r = !!t.isOverlay;
						return e.sidebarPromotedPosts.models[Object(b.a)(s, r, n)]
					}
				}),
				E = Object(c.b)(O),
				j = v.a.wrapped(C.a, "ThemedWidget", x.a),
				_ = e => !(!e || e.isBlank) && (!e.isMediaOnly || !!(e.media && Object(f.I)(e.media) && e.media.content)),
				k = [{
					img: "/img/house-ads/eatcheapandhealthy.png",
					href: "/r/eatcheapandhealthy"
				}, {
					img: "/img/house-ads/streetwear.png",
					href: "/r/streetwear"
				}, {
					img: "/img/house-ads/castiron.png",
					href: "/r/castiron"
				}],
				L = Object(p.c)(class extends i.a.Component {
					shouldComponentUpdate(e) {
						const {
							className: t,
							redditStyle: s
						} = this.props;
						return t !== e.className || s !== e.redditStyle
					}
					trackViewability(e, t, s) {
						Math.random() <= l.a.telemetry.programmaticAdSampleRate && this.props.sendEvent(Object(h.b)(e, t, s))
					}
					render() {
						const e = o()(0, k.length - 1),
							{
								img: t,
								href: s
							} = k[e],
							{
								className: n,
								placement: r,
								redditStyle: a
							} = this.props;
						return i.a.createElement(j, {
							className: n,
							contentOnly: !0,
							redditStyle: a
						}, i.a.createElement(m.a, {
							img: t,
							href: s,
							trackSidebarHouseAdViewability: (e, t) => this.trackViewability(e, t, r)
						}))
					}
				});

			function w(e) {
				let {
					className: t,
					post: s,
					placementIndex: n,
					refreshKey: r,
					listingName: o,
					placement: a,
					redditStyle: c,
					awaitingBrandSafetyCheck: d,
					forceHouseAd: l,
					removeSidebarSpacer: m
				} = e;
				const p = m ? i.a.Fragment : u.a;
				if (!d && _(s)) {
					let e = null;
					return l ? e = i.a.createElement(L, {
						className: t,
						redditStyle: c,
						placement: a
					}) : s && (e = i.a.createElement(y, {
						post: s,
						postId: s.id,
						refreshKey: r,
						listingName: o,
						placement: a,
						placementIndex: n
					})), i.a.createElement(p, null, e)
				}
				return null
			}
			t.a = E(w)
		},
		"./src/reddit/components/SidebarAd/CommentsPageSidebarAd.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/reddit/selectors/brandSafety.ts"),
				i = s("./src/reddit/selectors/experiments/adsCardViewHoldout.ts"),
				c = s("./src/reddit/selectors/user.ts"),
				d = s("./src/reddit/components/SidebarAd/BaseSidebarAdDoNotUseOrYoureFired.tsx");
			t.a = Object(o.b)((e, t) => {
				let {
					postId: s
				} = t;
				return {
					canShowAd: Object(a.a)(e, {
						postId: s
					}) && !Object(c.G)(e) && !Object(i.a)(e)
				}
			})(e => {
				let {
					canShowAd: t,
					postId: s,
					commentsPageKey: n,
					...o
				} = e;
				return t ? r.a.createElement(d.a, o) : null
			})
		},
		"./src/reddit/components/SidebarContainer/index.m.less": function(e, t, s) {
			e.exports = {
				container: "_1FUNcfOeszr8eruqLxCMcR"
			}
		},
		"./src/reddit/components/SidebarContainer/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/lib/lessComponent.tsx"),
				r = s("./src/reddit/components/SidebarContainer/index.m.less"),
				o = s.n(r);
			t.a = n.a.div("container", o.a)
		},
		"./src/reddit/components/SidebarFooter/index.m.less": function(e, t, s) {
			e.exports = {
				GreyRereddit: "_3Y8af3R9_DE3lpXa6Hq5Ab",
				greyRereddit: "_3Y8af3R9_DE3lpXa6Hq5Ab",
				Widget: "_2wqyhtudP4weVGsZdVXJgt",
				widget: "_2wqyhtudP4weVGsZdVXJgt",
				LinkContainer: "_1KrMye71CT332tKKKUWAj6",
				linkContainer: "_1KrMye71CT332tKKKUWAj6",
				Column: "_3f2nSSsPBqVDV6Sz82qgrR",
				column: "_3f2nSSsPBqVDV6Sz82qgrR",
				Link: "_3Eyh3vRo5o4IfzVZXhaWAG",
				link: "_3Eyh3vRo5o4IfzVZXhaWAG",
				NoneCapitalizeLink: "_3GijmRx58E2GzbuzKVHDex",
				noneCapitalizeLink: "_3GijmRx58E2GzbuzKVHDex",
				Copyright: "_34dh2eyzMvJfjCBLeoWiDD",
				copyright: "_34dh2eyzMvJfjCBLeoWiDD"
			}
		},
		"./src/reddit/components/SidebarFooter/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/reselect/es/index.js"),
				i = s("./node_modules/@reddit/reddit-country-url-redirects/dist/esm/index.js"),
				c = s("./src/lib/lessComponent.tsx"),
				d = s("./src/reddit/components/Onboarding/LanguageCollection/prompt.tsx"),
				l = s("./src/reddit/components/TrackingHelper/index.tsx"),
				m = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				u = s("./src/reddit/constants/experiments.ts"),
				p = s("./src/reddit/constants/location.ts"),
				C = s("./src/reddit/contexts/PageLayer/index.tsx"),
				b = s("./src/reddit/helpers/trackers/navigation.ts"),
				h = s("./src/reddit/selectors/experiments/countrySites.ts"),
				f = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				g = s("./src/reddit/selectors/experiments/navbarLikeMweb.ts"),
				x = s("./src/reddit/selectors/meta.ts"),
				v = s("./src/redditGQL/types.ts"),
				y = s("./src/reddit/components/SidebarFooter/index.m.less"),
				O = s.n(y);
			const {
				fbt: E
			} = s("./node_modules/fbt/lib/FbtPublic.js"), j = c.a.a("Link", O.a), _ = Object(a.c)({
				countryCode: x.b,
				d2xPdpSideRailRecsVariant: f.a,
				isCountrySitesEnabled: h.b,
				isD2xPdpSideRailRecsEnabled: f.b,
				isNavbarLikeMwebEnabled: g.a
			}), k = Object(o.b)(_), L = Object(C.v)({
				isFrontpage: C.B,
				isCountrySitePage: C.z
			}), w = e => {
				let {
					countryCode: t,
					reredditContent: s
				} = e;
				return r.a.createElement("div", {
					className: O.a.GreyRereddit
				}, s, !!p.c[t] && r.a.createElement("div", {
					className: O.a.LinkContainer
				}, r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/impressum"
				}, E._("Impressum", null, {
					hk: "4cKXSI"
				})), t === v.i.De && r.a.createElement(j, {
					href: "https://reddit.zendesk.com/hc/de/requests/new?ticket_form_id=360000152352",
					className: O.a.NoneCapitalizeLink
				}, E._("Report NetzDG Content", null, {
					hk: "1nszCF"
				}))), r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.reddithelp.com"
				}, E._("help", null, {
					hk: "4lyYaD"
				})), t === v.i.De && r.a.createElement(j, {
					href: "https://reddit.zendesk.com/hc/de/articles/360045289772-Deutschland-Meldungen-nach-dem-Netzwerkdurchsetzungsgesetz-NetzDG-"
				}, E._("Transparency report", null, {
					hk: "3CgBdG"
				})))), r.a.createElement("div", {
					className: O.a.LinkContainer
				}, r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/user-agreement"
				}, E._("User Agreement", null, {
					hk: "2RA6JL"
				})), r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/privacy-policy"
				}, E._("Privacy policy", null, {
					hk: "10K04G"
				}))), r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/content-policy"
				}, E._("Content policy", null, {
					hk: "1DyxZS"
				})), r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/moderator-guidelines"
				}, E._("Moderator Code of Conduct", null, {
					hk: "tWEG"
				})))), r.a.createElement("div", {
					className: O.a.Copyright
				}, E._("Reddit, Inc. © {year}. All rights reserved.", [E._param("year", (new Date).getFullYear().toString())], {
					hk: "DPZBh"
				})))
			};
			t.a = L(k(Object(l.c)(e => {
				const t = Object(o.f)().getState(),
					s = Object(h.a)(t, Object(i.c)());
				if (e.isD2xPdpSideRailRecsEnabled) {
					const t = e.d2xPdpSideRailRecsVariant === u.kd.GreyRereddit || e.d2xPdpSideRailRecsVariant === u.kd.GreyRedditNoNsfw || e.d2xPdpSideRailRecsVariant === u.kd.LargeImagePreview ? e.reredditButtons : [];
					return r.a.createElement(w, {
						reredditContent: t,
						countryCode: e.countryCode
					})
				}
				if (!e.isFrontpage && !e.isCountrySitePage) return null;
				const n = t => {
					const n = {
						de: "Deutsch",
						fr: "Français",
						es: "Español",
						en: "English",
						it: "Italiano",
						pt: "Português"
					};
					return s.includes(t) || "en" === t ? r.a.createElement(j, {
						href: "en" === t ? "/" : `/${t}/`,
						onClick: () => e.sendEvent(Object(b.a)(t))
					}, n[t]) : null
				};
				return r.a.createElement(m.a, {
					className: O.a.Widget,
					redditStyle: e.redditStyle,
					contentOnly: !0
				}, !!p.c[e.countryCode] && r.a.createElement("div", {
					className: O.a.LinkContainer
				}, r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/impressum"
				}, E._("Impressum", null, {
					hk: "4cKXSI"
				})), e.countryCode === v.i.De && r.a.createElement(j, {
					href: "https://reddit.zendesk.com/hc/de/requests/new?ticket_form_id=360000152352",
					className: O.a.NoneCapitalizeLink
				}, E._("Report NetzDG Content", null, {
					hk: "1nszCF"
				}))), r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.reddithelp.com"
				}, E._("help", null, {
					hk: "4lyYaD"
				})), e.countryCode === v.i.De && r.a.createElement(j, {
					href: "https://reddit.zendesk.com/hc/de/articles/360045289772-Deutschland-Meldungen-nach-dem-Netzwerkdurchsetzungsgesetz-NetzDG-"
				}, E._("Transparency report", null, {
					hk: "3CgBdG"
				})))), r.a.createElement("div", {
					className: O.a.LinkContainer
				}, r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/user-agreement"
				}, E._("User Agreement", null, {
					hk: "2RA6JL"
				})), r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/privacy-policy"
				}, E._("Privacy policy", null, {
					hk: "10K04G"
				}))), r.a.createElement("div", {
					className: O.a.Column
				}, r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/content-policy"
				}, E._("Content policy", null, {
					hk: "1DyxZS"
				})), r.a.createElement(j, {
					href: "https://www.redditinc.com/policies/moderator-guidelines"
				}, E._("Moderator Code of Conduct", null, {
					hk: "tWEG"
				})))), (e.isCountrySitePage || e.isCountrySitesEnabled) && r.a.createElement("div", {
					className: O.a.LinkContainer
				}, r.a.createElement("div", {
					className: O.a.Column
				}, n("en"), n("fr"), n("it")), r.a.createElement("div", {
					className: O.a.Column
				}, n("de"), n("es"), n("pt"))), r.a.createElement("div", {
					className: O.a.Copyright
				}, E._("Reddit, Inc. © {year}. All rights reserved.", [E._param("year", (new Date).getFullYear().toString())], {
					hk: "DPZBh"
				})), r.a.createElement(d.a, null))
			})))
		},
		"./src/reddit/components/SidebarSpacer/index.m.less": function(e, t, s) {
			e.exports = {
				Component: "_2vEf-C2keJaBMY9qk_BxVn",
				component: "_2vEf-C2keJaBMY9qk_BxVn"
			}
		},
		"./src/reddit/components/SidebarSpacer/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/reddit/components/SidebarSpacer/index.m.less"),
				r = s.n(n),
				o = s("./src/lib/lessComponent.tsx");
			t.a = o.a.div("Component", r.a)
		},
		"./src/reddit/components/SidebarStickyBottom/index.m.less": function(e, t, s) {
			e.exports = {
				Container: "_1oRQu-aolgpPPJDblUGTw5",
				container: "_1oRQu-aolgpPPJDblUGTw5",
				BackToTop: "_3Tc8YYRhVDX9vlR0XePZfH",
				backToTop: "_3Tc8YYRhVDX9vlR0XePZfH",
				BottomStickyStyles: "xTKAJNhaO7iI3cnAQ1PpJ",
				bottomStickyStyles: "xTKAJNhaO7iI3cnAQ1PpJ",
				StickyStyles: "_1vYrJH5uc57mZQJPN4l34E",
				stickyStyles: "_1vYrJH5uc57mZQJPN4l34E",
				StickyStylesFakeOverlay: "_2s8GkMW_LrglF6lvNpBQgE",
				stickyStylesFakeOverlay: "_2s8GkMW_LrglF6lvNpBQgE",
				LargeOffset: "_2Fh9XKrAUp6CQHSgW98LEb",
				largeOffset: "_2Fh9XKrAUp6CQHSgW98LEb"
			}
		},
		"./src/reddit/components/SidebarStickyBottom/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/lib/classNames/index.ts"),
				r = s("./node_modules/lodash/throttle.js"),
				o = s.n(r),
				a = s("./node_modules/react/index.js"),
				i = s.n(a),
				c = s("./src/lib/constants/index.ts"),
				d = s("./src/reddit/components/BackToTop/index.tsx"),
				l = s("./src/reddit/components/SidebarFooter/index.tsx"),
				m = s("./src/reddit/constants/componentSizes.ts"),
				u = s("./src/reddit/contexts/PageLayer/index.tsx"),
				p = s("./src/reddit/components/SidebarStickyBottom/index.m.less"),
				C = s.n(p),
				b = s("./src/lib/lessComponent.tsx");

			function h() {
				return (h = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const f = c.g[1] + 24,
				g = m.f + 8,
				x = g + 152 + 16,
				v = x + f + 8,
				y = b.a.div("Container", C.a),
				O = b.a.wrapped(e => {
					let {
						className: t,
						isOverlay: s,
						...n
					} = e;
					return i.a.createElement(d.a, h({
						className: t,
						isOverlay: s,
						style: {
							top: `calc(100vh - ${s?g:8}px)`
						}
					}, n))
				}, "BackToTop", C.a),
				E = e => {
					let {
						children: t,
						className: s,
						isFakeOverlay: r,
						isSticky: o,
						shouldStickToBottom: a
					} = e;
					return i.a.createElement("div", {
						className: Object(n.a)(s, {
							[C.a.BottomStickyStyles]: a,
							[C.a.StickyStyles]: !a && o && !r,
							[C.a.StickyStylesFakeOverlay]: !a && !!r
						})
					}, t)
				};
			class j extends a.Component {
				constructor(e) {
					super(e), this.containerEl = null, this.windowHeight = 1 / 0, this.getStickyContents = () => ({
						shouldAdSticky: this.windowHeight > v,
						shouldFooterSticky: this.windowHeight > x
					}), this.updateState = () => {
						if (this.isHidden()) return;
						const {
							shouldAdSticky: e,
							shouldFooterSticky: t
						} = this.getStickyContents();
						e === this.state.isAdSticky && t === this.state.isFooterSticky || this.setState({
							isAdSticky: e,
							isFooterSticky: t
						})
					}, this.updateMeasurements = () => {
						this.windowHeight = window.innerHeight
					}, this.handleResize = o()(() => {
						this.updateMeasurements(), this.updateState()
					}, c.L), this.setWrapperRef = e => this.containerEl = e || null, this.state = {
						isAdSticky: !0,
						isBottomSticky: !1,
						isFooterSticky: !0
					}
				}
				isHidden() {
					return !this.containerEl || null === this.containerEl.offsetParent
				}
				componentDidMount() {
					this.isHidden() || this.handleResize(), window.addEventListener("resize", this.handleResize)
				}
				componentWillUnmount() {
					window.removeEventListener("resize", this.handleResize)
				}
				render() {
					var e;
					const {
						props: {
							adComponent: t,
							adComponentOnFakeOverlay: s,
							children: n,
							className: r,
							hideFooter: o,
							pageLayer: a,
							recommendationsComponent: c,
							reredditButtons: d
						}
					} = this, m = this.state.isAdSticky && !(!t && !n), u = this.state.isBottomSticky;
					return i.a.createElement(y, {
						className: r,
						innerRef: this.setWrapperRef
					}, i.a.createElement(E, {
						isFakeOverlay: s,
						isSticky: m,
						shouldStickToBottom: u
					}, t, n, c, !o && i.a.createElement(l.a, {
						reredditButtons: d
					})), !c && !this.props.hideBackToTop && i.a.createElement(O, {
						isOverlay: !!(null === (e = null == a ? void 0 : a.locationState) || void 0 === e ? void 0 : e.isOverlay)
					}))
				}
			}
			const _ = Object(u.v)();
			t.a = _(j)
		},
		"./src/reddit/components/StructuredStyles/BladeManager/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/connectors/connectClickToToggleEditor.ts");
			class a extends r.a.Component {
				constructor() {
					super(...arguments), this.onClickCapture = e => {
						this.props.isEditing && this.props.subredditId && !this.props.isModalOpen && (e.stopPropagation(), e.preventDefault(), this.props.requestCloseBlade())
					}
				}
				render() {
					return r.a.createElement("div", {
						className: this.props.className,
						onClickCapture: this.onClickCapture,
						children: this.props.children
					})
				}
			}
			var i = Object(o.a)(a);
			t.a = e => r.a.createElement(i, e)
		},
		"./src/reddit/components/SubredditNav/index.m.less": function(e, t, s) {
			e.exports = {
				metaNavLink: "_3K8jBMDp0QPnKaJK8FVP6a",
				navLink: "_1O30sSXmfkKMRZqSaESf0S",
				navLinkStyles: "_2NJL-agPg8YnfLMLdMbED5",
				subNavTitle: "_2wtKbmW1aPrT3MyHoaupQh",
				topBannerVariant: "uGdFXCHH-nwVp4gU3UaTw",
				mActive: "_1YpJV_aDQqujwuofx9-eAX",
				navDropdownIcon: "_3u_CcXw7slod9vNJKIlYvx",
				subNavLink: "_1p4TpHzWWRAkGYYw9_jU-B",
				subNavContainer: "hcJJEc0gVBKH5pWCFgdET",
				subNavList: "_1T423RClx-mTPxfuiCw4UN",
				mIsOpen: "_2azsE3I8rle1m5FBqLLHpN",
				outerContainer: "_1gVVmSnHZpkUgVShsn7-ua",
				innerContainer: "_1_TJAX-8zAT3vVN1Iz7cys",
				predictionsFilter: "jU3ijmuG8CyRDQhPOHdw4",
				liveIcon: "_39JxJrjNw5NY_Q0ARn8NRe"
			}
		},
		"./src/reddit/components/SubredditNav/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/reselect/es/index.js"),
				i = s("./src/reddit/components/TrackingHelper/index.tsx"),
				c = s("./src/reddit/contexts/PageLayer/index.tsx"),
				d = s("./src/reddit/featureFlags/component.tsx"),
				l = s("./src/reddit/selectors/widgets.ts"),
				m = s("./src/lib/linkMatchers/index.ts"),
				u = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				p = s("./src/lib/classNames/index.ts"),
				C = s("./src/reddit/controls/OutboundLink/index.tsx"),
				b = s("./src/reddit/icons/svgs/Dropdown/index.tsx"),
				h = s("./src/telemetry/models/Outbound.ts"),
				f = s("./src/reddit/components/SubredditNav/index.m.less"),
				g = s.n(f);

			function x() {
				return (x = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const v = (e, t, s) => Object(p.a)(e, {
					[g.a.mActive]: t
				}, {
					[g.a.topBannerVariant]: s
				}),
				y = e => {
					let {
						children: t,
						isActive: s,
						isTopBannerVariant: n,
						...o
					} = e;
					return r.a.createElement("div", x({
						className: v(g.a.subNavTitle, s, n)
					}, o), r.a.createElement("span", null, t), r.a.createElement(b.b, {
						className: g.a.navDropdownIcon
					}))
				},
				O = e => {
					let {
						className: t,
						href: s,
						isActive: n,
						to: o,
						isTopBannerVariant: a,
						...i
					} = e;
					const c = v(g.a.navLink, n, a);
					return o ? r.a.createElement(u.a, x({
						className: c,
						to: o
					}, i)) : s ? r.a.createElement(C.b, x({
						className: c,
						isSponsored: !1,
						sourceElement: h.SourceElement.NavigationMenu,
						href: s
					}, i)) : r.a.createElement("a", x({
						className: c
					}, i))
				},
				E = e => {
					let {
						className: t,
						isActive: s,
						...n
					} = e;
					return r.a.createElement(u.a, x({
						className: Object(p.a)(v(g.a.navLink, s), t)
					}, n))
				},
				j = e => {
					let {
						className: t,
						href: s,
						isActive: n,
						...o
					} = e;
					return s ? r.a.createElement(C.b, x({
						className: v(g.a.subNavLink, n),
						isSponsored: !1,
						sourceElement: h.SourceElement.NavigationMenu,
						href: s
					}, o)) : r.a.createElement("a", x({
						className: v(g.a.subNavLink, n)
					}, o))
				},
				_ = e => {
					let {
						className: t,
						...s
					} = e;
					return r.a.createElement("div", x({
						className: Object(p.a)(g.a.subNavContainer, t)
					}, s))
				},
				k = e => {
					let {
						className: t,
						isOpen: s,
						...n
					} = e;
					return r.a.createElement("div", x({
						className: Object(p.a)(g.a.subNavList, t, {
							[g.a.mIsOpen]: s
						})
					}, n))
				};
			class L extends r.a.Component {
				constructor() {
					super(...arguments), this.state = {
						isOpen: !1
					}, this.handleOpen = e => this.setState(() => ({
						isOpen: !0
					})), this.handleClose = e => this.setState(() => ({
						isOpen: !1
					}))
				}
				render() {
					const {
						props: e,
						state: t
					} = this;
					return r.a.createElement(_, {
						onClick: this.handleOpen,
						onMouseLeave: this.handleClose
					}, r.a.createElement(y, {
						isActive: e.isActive,
						isTopBannerVariant: e.isTopBannerVariant
					}, e.label), r.a.createElement(k, {
						isOpen: t.isOpen,
						"aria-hidden": !t.isOpen,
						role: "list"
					}, e.children))
				}
			}
			var w = L;
			const S = e => {
				const t = e.url && Object(m.e)(m.c, e.url);
				return t ? t.url : e.url
			};
			var I = e => e.menuItem.url ? r.a.createElement(O, {
					href: S(e.menuItem),
					isActive: !!e.isActive,
					isTopBannerVariant: e.isTopBannerVariant
				}, e.menuItem.text) : r.a.createElement(w, {
					isActive: !!e.isActive,
					isTopBannerVariant: e.isTopBannerVariant,
					label: e.menuItem.text
				}, e.menuItem.children && e.menuItem.children.map(e => r.a.createElement(j, {
					key: `${e.text}-${S(e)}`,
					role: "listitem",
					href: S(e),
					target: "_blank",
					rel: "noopener"
				}, e.text))),
				P = s("./src/reddit/selectors/subreddit.ts"),
				N = s("./src/reddit/actions/subreddit.ts"),
				T = s("./src/reddit/hooks/usePageLayer.ts");
			const {
				fbt: M
			} = s("./node_modules/fbt/lib/FbtPublic.js"), R = Object(a.c)({
				isActive: (e, t) => {
					let {
						subredditId: s
					} = t;
					return Boolean(e.subreddits.appliedFilters.meta[s])
				},
				subreddit: (e, t) => {
					let {
						subredditId: s
					} = t;
					return Object(P.X)(e, {
						subredditId: s
					})
				}
			});
			var F = Object(o.b)(R, (e, t) => ({
					onActivate: () => e(Object(N.p)({
						subredditId: t.subredditId,
						forceState: !0
					}))
				}))(e => {
					let {
						subreddit: t,
						isActive: s,
						onActivate: n
					} = e;
					const o = Object(T.a)();
					return t ? r.a.createElement(E, {
						className: g.a.metaNavLink,
						to: t.url,
						isActive: s,
						onClick: e => {
							Object(c.J)(o) && !Object(c.R)(o) && e.preventDefault(), n()
						}
					}, M._("Polls", null, {
						hk: "1vWsZx"
					})) : null
				}),
				B = s("./src/reddit/actions/economics/predictions/index.ts"),
				A = s("./src/reddit/components/Econ/Prediction/hooks/useTournamentsQuery.ts"),
				D = s("./src/reddit/contexts/PageLayer/selectors.ts"),
				U = s("./src/reddit/helpers/trackers/predictions.ts"),
				W = s("./src/reddit/hooks/useTracking.ts"),
				H = s("./src/reddit/selectors/features/predictions/tournaments/index.ts");
			const {
				fbt: V
			} = s("./node_modules/fbt/lib/FbtPublic.js"), Z = e => {
				let {
					subredditId: t
				} = e;
				const s = Object(o.d)(),
					a = Object(T.a)(),
					i = Object(W.a)(),
					c = Object(D.S)(a),
					[d, l] = Object(n.useState)(!1),
					m = Object(o.e)(e => Object(P.X)(e, {
						subredditId: t
					})),
					u = Object(o.e)(e => Object(P.S)(e, {
						subredditId: t
					})),
					p = Object(o.e)(e => Object(H.d)(e, {
						subredditId: t
					})),
					C = Object(o.e)(e => Object(H.e)(e, {
						subredditId: t
					}));
				Object(A.a)(t);
				return Object(n.useEffect)(() => {
					!u || d || p || c || (s(Object(B.m)(m.name)), l(!0))
				}, [u, d, p, c, s, m.name]), u && p ? r.a.createElement(E, {
					className: g.a.predictionsFilter,
					isActive: c,
					onClick: () => {
						s(Object(N.p)({
							subredditId: t,
							forceState: !1
						})), i(Object(U.h)())
					},
					to: `${m.url}predictions/`
				}, V._("Predictions", null, {
					hk: "Cv5GC"
				}), C && r.a.createElement("span", {
					className: g.a.liveIcon
				}, V._("Live", null, {
					hk: "1o89m4"
				}))) : null
			};
			var q = s("./src/lib/constants/index.ts");
			const {
				fbt: z
			} = s("./node_modules/fbt/lib/FbtPublic.js");
			const K = Object(c.v)(),
				G = [q.Sb.SUBREDDIT, q.Sb.COMMENTS, q.Sb.COLLECTION_COMMENTS],
				Y = Object(a.c)({
					isMetaFilterEnabled: (e, t) => !!e.subreddits.appliedFilters.meta[t.subredditId],
					isPostsRoute: (e, t) => !!t.pageLayer && !!t.pageLayer.meta && G.indexOf(t.pageLayer.meta.name) > -1,
					isPredictionsPage: (e, t) => !!t.pageLayer && Object(c.R)(t.pageLayer)
				});
			var J = K(Object(o.b)(Y, (e, t) => ({
					onTurnOffMetaFilter: () => e(Object(N.p)({
						subredditId: t.subredditId,
						forceState: !1
					}))
				}))((function(e) {
					const {
						homeUrl: t,
						isMetaFilterEnabled: s,
						isPostsRoute: n,
						isPredictionsPage: o,
						isTopBannerVariant: a,
						onTurnOffMetaFilter: i
					} = e, c = n && !s && !o;
					return r.a.createElement(O, {
						to: t,
						isActive: c,
						isTopBannerVariant: a,
						onClick: e => {
							s && (e.preventDefault(), i())
						}
					}, z._("Posts", null, {
						hk: "36nXSp"
					}))
				}))),
				Q = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				X = s("./src/higherOrderComponents/makeAsync.tsx");
			var $ = Object(X.a)({
					ErrorComponent: () => null,
					LoadingComponent: () => null,
					getComponent: () => s.e("HarbergerTaxBannerPurchaseCTA").then(s.bind(null, "./src/reddit/components/Governance/HarbergerTax/BannerPurchaseCTA/index.tsx")).then(e => e.default)
				}),
				ee = s("./src/reddit/constants/postLayout.ts"),
				te = s("./src/reddit/constants/screenWidths.ts"),
				se = s("./src/reddit/models/Theme/index.ts"),
				ne = s("./src/reddit/models/Theme/NewColorSystem/index.ts");
			const re = Object(Q.a)(e => {
				let {
					className: t,
					children: s,
					isTopBannerVariant: n,
					...o
				} = e;
				const a = Object(ne.a)(o);
				return r.a.createElement("div", {
					className: Object(p.a)(g.a.outerContainer, t),
					style: {
						position: a.navBar.useOverlay && !n ? "relative" : "static",
						...a.navBar.useOverlay && !n ? {
							marginTop: -26
						} : {},
						background: n ? "inherit" : Object(se.f)(a.navBar.backgroundColor, a.navBar.backgroundImage, "tiled")
					}
				}, s)
			});
			var oe = e => r.a.createElement(re, {
					className: e.className,
					isTopBannerVariant: e.isTopBannerVariant
				}, r.a.createElement("div", {
					className: g.a.innerContainer,
					style: {
						maxWidth: e.disableFullscreen || e.layout === ee.g.Large ? `${e.maxWidth||te.a}px` : "100%"
					}
				}, r.a.createElement("div", null, e.children), r.a.createElement($, null))),
				ae = s("./src/reddit/constants/wiki.ts"),
				ie = s("./src/reddit/helpers/trackers/subredditWiki.ts");
			const {
				fbt: ce
			} = s("./node_modules/fbt/lib/FbtPublic.js");
			var de = e => {
				const {
					homeUrl: t,
					isTopBannerVariant: s,
					pageLayer: n
				} = e, o = !!n && !!n.meta && n.meta.name === q.Sb.SUBREDDIT_WIKI, a = `wiki/${ae.i}`, i = t.endsWith("/") ? t + a : `${t}/${a}`;
				return r.a.createElement(O, {
					isActive: o,
					isTopBannerVariant: s,
					to: i,
					onClick: () => e.sendEvent(Object(ie.g)())
				}, ce._("Wiki", null, {
					hk: "1miZk"
				}))
			};
			const le = Object(d.a)("spPolls", F),
				me = Object(c.v)(),
				ue = Object(a.c)({
					layout: c.U,
					widget: l.f
				}),
				pe = Object(o.b)(ue);
			t.a = me(pe(Object(i.c)(e => r.a.createElement(oe, {
				className: e.subredditNavContainerClassName,
				isTopBannerVariant: e.isTopBannerVariant,
				layout: e.layout,
				disableFullscreen: e.disableFullscreen,
				maxWidth: e.maxWidth
			}, e.subredditId && r.a.createElement(r.a.Fragment, null, r.a.createElement(J, {
				homeUrl: e.homeUrl,
				isTopBannerVariant: e.isTopBannerVariant,
				subredditId: e.subredditId
			}), r.a.createElement(le, {
				subredditId: e.subredditId
			}), r.a.createElement(Z, {
				subredditId: e.subredditId
			})), e.widget && r.a.createElement(r.a.Fragment, null, e.widget.showWiki && r.a.createElement(de, {
				homeUrl: e.homeUrl,
				isTopBannerVariant: e.isTopBannerVariant,
				pageLayer: e.pageLayer,
				sendEvent: e.sendEvent
			}), !!e.widget.data.length && e.widget.data.map((t, s) => r.a.createElement(I, {
				isActive: !1,
				isTopBannerVariant: e.isTopBannerVariant,
				key: s,
				menuItem: t
			})))))))
		},
		"./src/reddit/components/SubscribeButton/Base.m.less": function(e, t, s) {
			e.exports = {
				BaseButton: "_1LHxa-yaHJwrPK8kuyv_Y4",
				baseButton: "_1LHxa-yaHJwrPK8kuyv_Y4",
				UnsubscribeButtonDefault: "_31L3r0EWsU0weoMZvEJcUA",
				unsubscribeButtonDefault: "_31L3r0EWsU0weoMZvEJcUA",
				UnsubscribeButtonHover: "_11Zy7Yp4S1ZArNqhUQ0jZW",
				unsubscribeButtonHover: "_11Zy7Yp4S1ZArNqhUQ0jZW"
			}
		},
		"./src/reddit/components/SubscribeButton/Base.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return h
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/reddit/controls/Button/index.tsx"),
				i = s("./src/reddit/components/SubscribeButton/helpers/actionTemplateSource.ts"),
				c = s("./src/reddit/components/SubscribeButton/Base.m.less"),
				d = s.n(c),
				l = s("./src/lib/classNames/index.ts");

			function m() {
				return (m = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const u = (e, t, s) => null != s ? s : t ? e : a.c.Plain,
				p = e => {
					let {
						border: t,
						priority: s,
						small: n,
						...r
					} = e;
					return o.a.createElement(a.t, m({}, r, {
						priority: u(a.c.Primary, t, s),
						className: Object(l.a)(r.className, d.a.BaseButton),
						size: n ? a.d.S : a.d.M
					}))
				},
				C = e => o.a.createElement(o.a.Fragment, null, o.a.createElement("span", {
					className: d.a.UnsubscribeButtonDefault
				}, "subreddit" === e ? n.fbt._("Joined", null, {
					hk: "1MTmIz"
				}) : n.fbt._("Following", null, {
					hk: "1wQlVR"
				})), o.a.createElement("span", {
					className: d.a.UnsubscribeButtonHover
				}, "subreddit" === e ? n.fbt._("Leave", null, {
					hk: "2lLnnn"
				}) : n.fbt._("Unfollow", null, {
					hk: "2b5ERD"
				}))),
				b = e => {
					let {
						buttonType: t,
						border: s,
						priority: n,
						small: r,
						...i
					} = e;
					return o.a.createElement(a.t, m({}, i, {
						priority: u(a.c.Secondary, s, n),
						className: Object(l.a)(i.className, d.a.BaseButton),
						size: r ? a.d.S : a.d.M,
						text: C(t)
					}))
				};
			class h extends o.a.Component {
				constructor() {
					super(...arguments), this.onClick = e => {
						if (this.props.userIsSubscriber ? (this.props.onUnsubscribe(), this.props.afterUnsubscribeAction && this.props.afterUnsubscribeAction()) : this.props.onSubscribe(), this.props.onClick && this.props.onClick(e), this.props.getEventFactory) {
							const e = this.props.getEventFactory(this.props.userIsSubscriber);
							e && this.props.sendEvent(e)
						}
					}
				}
				componentDidMount() {
					this.props.onSubscriptionsRequested()
				}
				render() {
					const {
						border: e = !0,
						className: t,
						id: s,
						priority: n,
						small: r = !1,
						isFullWidth: a = !1,
						style: c
					} = this.props, d = {
						border: e,
						className: t,
						onClick: this.onClick,
						priority: n,
						small: r,
						isFullWidth: a,
						style: c
					};
					return this.props.userIsSubscriber ? o.a.createElement(b, m({}, d, {
						buttonType: this.props.identifier.type
					})) : o.a.createElement(p, m({}, d, {
						id: s
					}), this.props.children, Object(i.a)({
						type: this.props.identifier.type,
						key: "subscribe"
					}))
				}
			}
		},
		"./src/reddit/components/SubscribeButton/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/reddit/components/TrackingHelper/index.tsx"),
				r = s("./src/reddit/connectors/SubscribeButton/index.ts"),
				o = s("./src/reddit/components/SubscribeButton/Base.tsx");
			t.a = Object(r.a)(Object(n.c)(o.a))
		},
		"./src/reddit/components/ThemeProvider/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return y
			}));
			var n = s("./node_modules/icepick/icepick.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/lib/objectSelector/index.ts"),
				d = s("./src/reddit/contexts/PageLayer/index.tsx"),
				l = s("./src/reddit/contexts/PageLayer/selectors.ts"),
				m = s("./src/reddit/models/StructuredStyles/index.ts"),
				u = s("./src/reddit/models/Theme/index.ts"),
				p = s("./src/reddit/selectors/structuredStyles.ts"),
				C = s("./src/reddit/selectors/subreddit.ts"),
				b = s("./src/reddit/selectors/user.ts"),
				h = s("./src/lib/CSSVariableProvider/index.tsx"),
				f = s("./src/lib/isAdHocMultireddit/index.ts");
			const g = (e, t) => t.forceRedditTheme ? void 0 : void 0 !== t.subredditName ? t.subredditName : Object(l.r)(e, t);
			class x extends o.a.Component {
				render() {
					const {
						children: e,
						isRootOrUniqueClassName: t,
						theme: s
					} = this.props;
					return o.a.createElement(h.e, {
						theme: s,
						isRootOrUniqueClassName: t
					}, e)
				}
			}
			const v = Object(a.b)(() => Object(i.a)(e => e.themes.current, e => !!Object(p.i)(e), e => {
				if (Object(p.i)(e)) return e.structuredStyles.draft
			}, (e, t) => {
				if (Object(p.i)(e)) return Object(p.f)(e, t)
			}, g, Object(c.a)((e, t) => {
				if (Object(p.i)(e) || Object(b.ub)(e)) return;
				const s = g(e, t);
				if (!s) return;
				const n = Object(C.I)(e, s);
				if (!n) return;
				if (Object(b.tb)(e, {
						subredditId: n
					})) return;
				const r = e.structuredStyles.models[n];
				return r || void 0
			}), (e, t) => {
				const s = g(e, t);
				if (!s) return;
				const n = Object(C.z)(e, {
					subredditName: s
				});
				return n ? n.emojisCustomSize : void 0
			}, (e, t) => {
				if (t.forceDayMode) return !1;
				return Object(b.Kb)(e).nightmode
			}, (e, t) => {
				const s = Object(b.Kb)(e);
				if (Object(b.S)(e)) return !s.hideNSFW;
				const n = g(e, t);
				if (n) {
					const t = Object(C.C)(e, {
						subredditName: n
					});
					return !(!t || !t.isNSFW)
				}
				const r = Object(l.e)(e, t);
				return !!r && r.isNSFW
			}, (e, t) => t.isOverlay, (e, t) => t.isCommentsPage, (e, t, s, r, o, a, i, c, d, l, p) => {
				const C = {
						...i ? {
							emojiWidth: i[0],
							emojiHeight: i[1]
						} : {},
						shouldShowNSFWContent: d,
						isCommentsPage: p,
						isOverlay: l
					},
					b = o && o.length && !Object(f.a)(o) ? `subredditvars-r-${o.toLocaleLowerCase()}` : h.c;
				if (t && s && r) {
					const e = Object(m.h)(s, r);
					return {
						isRootOrUniqueClassName: b,
						theme: Object(u.h)(e, C)
					}
				}
				if (a) {
					const e = Object(m.h)(a);
					let t;
					return {
						isRootOrUniqueClassName: b,
						theme: t = c ? Object(u.g)(e, C) : Object(u.h)(e, C)
					}
				}
				return {
					isRootOrUniqueClassName: b,
					theme: Object(n.merge)(e, {
						subredditContext: C
					})
				}
			}))(x);
			t.b = v;
			const y = Object(d.v)()(v)
		},
		"./src/reddit/components/Upsell/NsfwBlocking/index.m.less": function(e, t, s) {
			e.exports = {
				overlay: "_2Gv5G082cUjYdQRyoGXyAo",
				modal: "_1_2jhTQc4DA7TtWS6g9BMN",
				cta: "_2GSkrIFkojWV3L0GzQPQ78",
				container: "g5yPbEIdjTE_wRlUoB82A",
				mainCta: "_2apx5_qKmY03WoZFb8YVu1",
				contentTitle: "_3eTqEK57FN9xurcrP9z4",
				warning: "_3jyZ6ZfaXFxWYcy9cal-xq",
				cancel: "Dkz3nRKFsS5yIm6e4o93l",
				continue: "_2iLUa1DN5bY9-oFqq3UDXm",
				dismiss: "jUfd4Daob69A2WDKby-IL",
				logIn: "_2k4QV3liMMQG8PMmBZdd_g",
				footerWrapper: "_1pjB5spDy43eUJW4x-wgvf",
				qrCodeOuter: "_2d-IWyIU0ITjihi9gW-H",
				qrCodeInner: "_2j_QTfhxnvmU-5PbhFmkfw",
				qrCode: "_2jh657b-F4yvqS49IkMjU8",
				sneakySnoo: "_3ybMuGXl2IGX8TdC6DdPZL",
				copyLine1: "_1SEuCrIhIH261lEivbj87_",
				copyLine2: "_2qkRHAALu7ZMIjqb5wD8uk",
				skippable_buttons: "_1MAcix3j31wLzUvbdrW7Qn",
				skippableButtons: "_1MAcix3j31wLzUvbdrW7Qn",
				skippable_text: "_34buUN_wpZWBk7ZZDKk22N",
				skippableText: "_34buUN_wpZWBk7ZZDKk22N",
				divider: "_1JdIhyGz5k8UXyob0yI3eQ",
				dividerLine: "_2EgPyPNCnTr8g29n_87SnQ",
				dividerText: "_2XFvLCiMiPd0uBLWJYtxVx",
				no_border: "_2Mu2w6atAZCJ-gttdRheE",
				noBorder: "_2Mu2w6atAZCJ-gttdRheE",
				contentDescription: "_2jlY07_8wxFjuu6Ecrk9zV",
				warning__bypassable: "_38T2FKI5k99IDlivrOi6kk",
				warningBypassable: "_38T2FKI5k99IDlivrOi6kk"
			}
		},
		"./src/reddit/components/Upsell/NsfwBlocking/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return T
			}));
			var n = s("./src/config.ts"),
				r = s("./node_modules/fbt/lib/FbtPublic.js"),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./node_modules/react-router-redux/es/index.js"),
				d = s("./src/higherOrderComponents/asModal/helpers.ts"),
				l = s("./src/lib/classNames/index.ts"),
				m = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				u = s("./src/reddit/actions/login.ts"),
				p = s("./src/reddit/actions/modal.ts"),
				C = s("./src/reddit/components/Footer/index.tsx"),
				b = s("./src/reddit/components/TrackingHelper/index.tsx"),
				h = s("./src/reddit/constants/experiments.ts"),
				f = s("./src/reddit/controls/Button/index.tsx"),
				g = s("./src/reddit/helpers/counters/nsfwblocking.ts"),
				x = s("./src/reddit/helpers/counters/nsfwBypassableBlocking.ts"),
				v = s("./src/reddit/helpers/trackers/nsfwSignupBypassableUpsell.ts"),
				y = s("./src/reddit/helpers/trackers/nsfwSignupUpsell.ts"),
				O = s("./src/reddit/icons/svgs/NSFWWarningIcon/index.tsx"),
				E = s("./src/reddit/selectors/experiments/nsfwBlockingExperiment.ts"),
				j = s("./src/reddit/selectors/experiments/nsfwBypassableBlockingExperiment.ts"),
				_ = s("./src/reddit/actions/contentGate.ts"),
				k = s("./src/reddit/components/Upsell/NsfwBlocking/index.m.less"),
				L = s.n(k);
			const w = {
					d2x_nsfw_signup_blocking_de_v1: `${n.a.assetPath}/img/nsfw-blocking-promo/d2x_nsfw_signup_blocking_de_v1_QR-code.jpeg`,
					d2x_nsfw_signup_blocking_non_us_v1: `${n.a.assetPath}/img/nsfw-blocking-promo/d2x_nsfw_signup_blocking_de_v1_QR-code.jpeg`
				},
				S = () => r.fbt._("Log In", null, {
					hk: "4BITk"
				}),
				I = () => r.fbt._("I'm not over 18", null, {
					hk: "11UX9Q"
				}),
				P = e => {
					const t = Object(i.d)(),
						s = Object(b.b)(),
						n = Object(i.e)(E.g),
						l = Object(o.useCallback)(() => {
							n === E.a.Blurred && t(Object(p.k)({
								actionSource: p.a.NsfwBlockingModal
							}))
						}, [t, n]),
						m = (e => e ? a.a.createElement("div", {
							className: L.a.cta
						}, r.fbt._("To show mature content,", null, {
							hk: "5xfDy"
						}), a.a.createElement("br", null), r.fbt._("log in to confirm you're over 18", null, {
							hk: "29imoi"
						})) : a.a.createElement("div", {
							className: L.a.cta
						}, r.fbt._("Log in to confirm you're over 18", null, {
							hk: "RUR2Z"
						})))(n === E.a.Blurred);
					return Object(o.useEffect)(() => {
						Object(g.d)(n)
					}, [n]), a.a.createElement("div", {
						className: L.a.mainCta
					}, a.a.createElement(O.b, null), m, a.a.createElement("div", {
						className: L.a.contentTitle
					}, e.contentTitle), a.a.createElement("div", {
						className: L.a.warning
					}, (() => r.fbt._("This page may contain sensitive or adult content that's not for everyone. To view it, confirm your age.", null, {
						hk: "3cUxXS"
					}))()), a.a.createElement("div", {
						className: L.a.buttonContainer
					}, a.a.createElement(f.j, {
						className: L.a.logIn,
						onClick: () => {
							s(Object(y.a)()), l(), Object(g.c)(g.a.Login), t(Object(u.openLoginModal)())
						}
					}, S()), a.a.createElement(f.j, {
						className: L.a.cancel,
						onClick: () => {
							Object(d.b)(), s(Object(y.b)()), Object(g.c)(g.a.Dismiss), t(Object(c.b)("/"))
						}
					}, I())))
				},
				N = Object(m.a)(e => {
					const t = `${n.a.assetPath}/img/nsfw-blocking-promo/snoovatar_anonymous_cropped.png`;
					return a.a.createElement("div", {
						className: L.a.qrCodeOuter
					}, a.a.createElement("div", {
						className: L.a.qrCodeInner
					}, a.a.createElement("img", {
						className: L.a.qrCode,
						alt: r.fbt._("QR Code to get the Reddit app", null, {
							hk: "2uYhIL"
						}),
						src: e.qrCodeAsset
					}), a.a.createElement("div", {
						className: L.a.copyLine1
					}, (() => r.fbt._("Download the app to use", null, {
						hk: "4i9ZxV"
					}))()), a.a.createElement("div", {
						className: L.a.copyLine2
					}, (() => r.fbt._("Anonymous Browsing", null, {
						hk: "rTJ9j"
					}))()), a.a.createElement("img", {
						className: L.a.sneakySnoo,
						src: t
					})))
				}),
				T = e => {
					const t = Object(b.b)(),
						{
							contentTitle: s
						} = e,
						n = Object(i.e)(E.i),
						r = Object(i.e)(E.j),
						o = Object(i.e)(E.g),
						c = Object(i.e)(j.c);
					a.a.useEffect(() => {
						c.isNewDesignVariant ? t(Object(v.d)()) : t(Object(y.c)())
					}, [c, t]);
					const d = o === E.a.Blurred ? C.a.White : o === E.a.NoPreview ? C.a.Grey : void 0;
					return a.a.createElement("div", {
						className: L.a.container
					}, c.isNewDesignVariant ? a.a.createElement(M, {
						contentTitle: s
					}) : a.a.createElement(P, {
						contentTitle: s
					}), a.a.createElement("div", {
						className: Object(l.a)(L.a.footerWrapper, {
							[L.a.mIsModal]: o === E.a.Blurred
						})
					}, a.a.createElement(C.b, {
						textColor: d
					})), a.a.createElement(N, {
						qrCodeAsset: (() => n === h.hd.Enabled || r === h.hb.BlurredPreview || r === h.hb.NoPreview ? w.d2x_nsfw_signup_blocking_de_v1 : w.d2x_nsfw_signup_blocking_non_us_v1)()
					}))
				},
				M = e => {
					const t = Object(i.d)(),
						s = Object(b.b)(),
						n = Object(i.e)(E.h);
					return Object(o.useEffect)(() => {
						Object(x.c)(n)
					}, [n]), a.a.createElement("div", {
						className: Object(l.a)(L.a.mainCta, {
							[L.a.skippable_buttons]: n === h.ib.SkippableButtons,
							[L.a.skippable_text]: n === h.ib.SkippableText
						})
					}, a.a.createElement("div", {
						className: L.a.contentDescription
					}, a.a.createElement(O.b, {
						fill: O.a.BLACK
					}), a.a.createElement("span", {
						className: L.a.cta
					}, e.contentTitle), a.a.createElement("span", {
						className: Object(l.a)(L.a.warning, L.a.warning__bypassable)
					}, (() => r.fbt._("This page may contain sensitive or adult content that's not for everyone. To view it, confirm your age.", null, {
						hk: "2Wp5X6"
					}))())), a.a.createElement("div", {
						className: L.a.cta
					}, (() => r.fbt._("To continue, log in or confirm your age.", null, {
						hk: "4sHPuz"
					}))()), a.a.createElement("div", {
						className: L.a.buttonContainer
					}, a.a.createElement(f.j, {
						className: L.a.logIn,
						onClick: () => {
							s(Object(v.a)()), Object(x.b)(x.a.Login), t(Object(u.openLoginModal)())
						}
					}, S()), n === h.ib.SkippableButtons && a.a.createElement("div", {
						className: L.a.divider
					}, a.a.createElement("div", {
						className: L.a.dividerLine
					}), a.a.createElement("div", {
						className: L.a.dividerText
					}, (() => r.fbt._("OR", null, {
						hk: "2sn64l"
					}))()), a.a.createElement("div", {
						className: L.a.dividerLine
					})), a.a.createElement(f.j, {
						className: L.a.continue,
						onClick: async () => {
							s(Object(v.b)()), Object(x.b)(x.a.Continue), Object(_.q)(), Object(j.d)(), window.location.reload()
						}
					}, (() => r.fbt._("I'm over 18", null, {
						hk: "4nUG6S"
					}))()), a.a.createElement(f.j, {
						className: Object(l.a)(L.a.continue, L.a.dismiss, {
							[L.a.no_border]: n === h.ib.SkippableText
						}),
						onClick: () => {
							s(Object(v.c)()), Object(x.b)(x.a.Dismiss), t(Object(c.b)("/"))
						}
					}, n === h.ib.SkippableText ? (() => r.fbt._("Go back to home", null, {
						hk: "4yEgxF"
					}))() : I())))
				}
		},
		"./src/reddit/components/UserIcon/constants.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			const n = "https://www.redditstatic.com/avatars/avatar_default_02_24A0ED.png"
		},
		"./src/reddit/components/UsersCountIndicator/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "UsersCountIndicator",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => s.e("UsersCountIndicator").then(s.bind(null, "./src/reddit/components/UsersCountIndicator/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/UsersCountIndicator/index.tsx"
				}
			})
		},
		"./src/reddit/components/VerticalVotes/votes.m.less": function(e, t, s) {
			e.exports = {
				customDownvote: "ceU_3ot04pOVIcrrXH9fY",
				compact: "_3sO1xEnOT_9CQBjRzczQjS",
				voted: "_8dpZTfzgKPKCUTjp9SAn1",
				customUpvote: "_2k73nZrjAYiwAj9hv7K-kq"
			}
		},
		"./src/reddit/components/VerticalVotes/votes.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return I
			})), s.d(t, "b", (function() {
				return P
			})), s.d(t, "c", (function() {
				return N
			})), s.d(t, "d", (function() {
				return T
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/CSSVariableProvider/withTheme.tsx");
			const i = (e, t, s) => n => {
				const r = e(n),
					a = t(n),
					i = !r && a;
				return Object(o.a)(s.baseClassName, n.className, {
					[s.mIsInteractive]: a,
					[s.mIsActive]: r,
					[s.mIsVoteable]: i
				})
			};
			var c = s("./src/reddit/icons/fonts/Downvote/index.tsx"),
				d = s("./src/reddit/models/Vote/index.ts"),
				l = s("./src/reddit/controls/Downvote/index.m.less"),
				m = s.n(l);
			const u = {
					...m.a,
					baseClassName: m.a.Downvote
				},
				p = e => {
					let {
						voteState: t
					} = e;
					return t === d.a.downvoted
				},
				C = i(p, e => {
					let {
						interactive: t
					} = e;
					return !1 !== t
				}, u);
			var b = e => r.a.createElement(c.a, {
					className: C(e),
					compact: e.compact,
					isFilled: p(e)
				}),
				h = s("./src/reddit/icons/fonts/Upvote/index.tsx"),
				f = s("./src/reddit/controls/Upvote/index.m.less"),
				g = s.n(f);
			const x = {
					...g.a,
					baseClassName: g.a.Upvote
				},
				v = e => {
					let {
						voteState: t
					} = e;
					return t === d.a.upvoted
				},
				y = i(v, e => {
					let {
						interactive: t
					} = e;
					return !1 !== t
				}, x);
			var O = e => r.a.createElement(h.b, {
					className: y(e),
					compact: e.compact,
					isFilled: v(e)
				}),
				E = s("./src/reddit/helpers/styles/postBackgroundColor.ts"),
				j = s("./src/reddit/helpers/styles/smartTextColor.ts"),
				_ = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				k = s("./src/reddit/components/VerticalVotes/votes.m.less"),
				L = s.n(k);

			function w() {
				return (w = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const S = e => Object(o.a)({
					[L.a.compact]: e.compact,
					[L.a.dark]: Object(j.b)(Object(E.a)(e)),
					[L.a.nightmode]: e.isNightMode
				}),
				I = Object(a.a)(e => {
					const {
						voteIcons: t
					} = Object(_.a)(e), s = {
						"--verticalvotes-customdownvote-active": `url(${t.downvoteActive})`,
						"--verticalvotes-customdownvote-inactive": `url(${t.downvoteInactive})`
					}, {
						theme: n,
						isNightMode: a,
						voteState: i,
						compact: c,
						...l
					} = e;
					return r.a.createElement("button", w({}, l, {
						className: Object(o.a)(L.a.customDownvote, S(e), {
							[L.a.voted]: e.voteState === d.a.downvoted
						}, e.className),
						style: s
					}))
				}),
				P = Object(a.a)(e => {
					const {
						voteIcons: t
					} = Object(_.a)(e), s = {
						"--verticalvotes-customupvote-active": `url(${t.upvoteActive})`,
						"--verticalvotes-customupvote-inactive": `url(${t.upvoteInactive})`
					}, {
						theme: n,
						isNightMode: a,
						voteState: i,
						compact: c,
						...l
					} = e;
					return r.a.createElement("button", w({}, l, {
						className: Object(o.a)(L.a.customUpvote, S(e), {
							[L.a.voted]: e.voteState === d.a.upvoted
						}, e.className),
						style: s
					}))
				}),
				N = b,
				T = O
		},
		"./src/reddit/components/Widgets/AdRules/index.m.less": function(e, t, s) {
			e.exports = {
				Rule: "_3NwusXLUvLTrYmCFOYpDIA",
				rule: "_3NwusXLUvLTrYmCFOYpDIA",
				RuleIndex: "McQvObPSnfCkWc6C-ti6P",
				ruleIndex: "McQvObPSnfCkWc6C-ti6P",
				RuleTitle: "_2-jOphPs-FiWN_Da514451",
				ruleTitle: "_2-jOphPs-FiWN_Da514451"
			}
		},
		"./src/reddit/components/Widgets/AdRules/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/lib/lessComponent.tsx"),
				i = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				c = s("./src/reddit/components/Widgets/AdRules/index.m.less"),
				d = s.n(c);
			const l = a.a.div("Rule", d.a),
				m = a.a.div("RuleIndex", d.a),
				u = a.a.div("RuleTitle", d.a);
			t.a = e => o.a.createElement(i.a, {
				className: e.className,
				title: n.fbt._("Rules for Reddit Ads", null, {
					hk: "3IMHuS"
				}),
				redditStyle: !0
			}, o.a.createElement(l, null, o.a.createElement(m, null, 1, "."), o.a.createElement(u, null, n.fbt._("Keep language civil", null, {
				hk: "2poAMk"
			}))), o.a.createElement(l, null, o.a.createElement(m, null, 2, "."), o.a.createElement(u, null, n.fbt._("Comments must be relevant to the Promoted Post and contribute to discussion", null, {
				hk: "zAMr0"
			}))), o.a.createElement(l, null, o.a.createElement(m, null, 3, "."), o.a.createElement(u, null, n.fbt._("Comments can offer feedback or criticism, but personal or other attacks on the advertiser or its products may be removed", null, {
				hk: "19a5UD"
			}))), o.a.createElement(l, null, o.a.createElement(m, null, 4, "."), o.a.createElement(u, null, n.fbt._("No impersonating or masquerading as celebrities, brands, or other users. To verify yourself in a Promoted Post's thread, message the user promoting the post", null, {
				hk: "BvXoq"
			}))))
		},
		"./src/reddit/components/Widgets/Base/index.m.less": function(e, t, s) {
			e.exports = {
				WidgetBackground: "_3Im6OD67aKo33nql4FpSp_",
				widgetBackground: "_3Im6OD67aKo33nql4FpSp_",
				WidgetHeader: "lnK0-OzG7nLFydTWuXGcY",
				widgetHeader: "lnK0-OzG7nLFydTWuXGcY"
			}
		},
		"./src/reddit/components/Widgets/Base/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return l
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/lessComponent.tsx"),
				a = s("./src/reddit/components/SEOTitle/index.tsx"),
				i = s("./src/reddit/components/Widgets/Base/index.m.less"),
				c = s.n(i);
			const d = o.a.div("WidgetBackground", c.a),
				l = o.a.wrapped(e => {
					let {
						children: t,
						...s
					} = e;
					return r.a.createElement("div", s, r.a.createElement(a.b, {
						type: a.a.Widget
					}, t))
				}, "WidgetHeader", c.a);
			t.b = e => r.a.createElement("div", {
				className: e.className
			}, r.a.createElement(d, null, e.children))
		},
		"./src/reddit/components/Widgets/Button/index.m.less": function(e, t, s) {
			e.exports = {
				RawHTMLDisplay: "_3ZOXjQGKlSNE3Pk7JFNRS_",
				rawHtmlDisplay: "_3ZOXjQGKlSNE3Pk7JFNRS_",
				imageButton: "_1dcH2atgEZb6EIz1hPypif",
				textButton: "_3VvVLJHakguGRWc5JxUX40",
				textButtonHoverText: "_1csPJVJm94zTUzhy65Kbxo",
				vanishingTextButtonText: "_2rUZkzEG2dvopABpvgI8Zx"
			}
		},
		"./src/reddit/components/Widgets/Calendar/index.m.less": function(e, t, s) {
			e.exports = {
				RawHTMLDisplay: "_7Td52eDF6kOI7wbyoOGJV",
				rawHtmlDisplay: "_7Td52eDF6kOI7wbyoOGJV",
				EventContainer: "_1HzK-HxwbuIwNX-GXaBGDW",
				eventContainer: "_1HzK-HxwbuIwNX-GXaBGDW",
				EventTitle: "cCvnKc1bpNZv2J-DkHYuZ",
				eventTitle: "cCvnKc1bpNZv2J-DkHYuZ",
				EventDate: "_2VXwUwmJin6h1Pov4foGGE",
				eventDate: "_2VXwUwmJin6h1Pov4foGGE",
				EventLocation: "_3GYOq7iFgxtdLjpjVzjwko",
				eventLocation: "_3GYOq7iFgxtdLjpjVzjwko",
				EventDescription: "_2ZLwdDhx3dBm-ZVn7MXBYA",
				eventDescription: "_2ZLwdDhx3dBm-ZVn7MXBYA",
				ToggleDescription: "J6pcR7wS5Fc3tWloQuCxS",
				toggleDescription: "J6pcR7wS5Fc3tWloQuCxS"
			}
		},
		"./src/reddit/components/Widgets/CommunityList/SubredditList.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return k
			})), s.d(t, "a", (function() {
				return w
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				c = s("./node_modules/reselect/es/index.js"),
				d = s("./src/lib/classNames/index.ts"),
				l = s("./src/reddit/components/Flair/index.tsx"),
				m = s("./src/reddit/components/SubscribeButton/index.tsx"),
				u = s("./src/reddit/actions/subscription/index.ts");
			var p = Object(a.b)(null, (e, t) => {
					const s = t.widget.id || void 0;
					return {
						onSubscribe: () => e(u.d([t.identifier], !0, s)),
						onSubscriptionsRequested: () => e(u.e()),
						onUnsubscribe: () => e(u.d([t.identifier], !1, s))
					}
				})(s("./src/reddit/components/SubscribeButton/Base.tsx").a),
				C = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				b = s("./src/reddit/constants/componentSizes.ts"),
				h = s("./src/reddit/controls/Button/index.tsx"),
				f = s("./src/reddit/controls/LoadingIcon/index.tsx"),
				g = s("./src/reddit/icons/fonts/index.tsx"),
				x = s("./src/reddit/layout/threeCol/ExpandCenter/index.tsx"),
				v = s("./src/reddit/models/Flair/index.ts"),
				y = s("./src/reddit/selectors/user.ts"),
				O = s("./src/reddit/components/Widgets/CommunityList/helpers.ts"),
				E = s("./src/reddit/components/Widgets/CommunityList/index.m.less"),
				j = s.n(E);

			function _() {
				return (_ = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const k = e => o.a.createElement(C.a, {
					className: Object(d.a)(j.a.Container, e.className),
					noGradient: !0,
					styles: e.widget && e.widget.styles,
					title: e.title,
					truncateThreshold: e.truncateThreshold,
					widgetKind: e.widget && e.widget.kind
				}, o.a.createElement("div", {
					className: j.a.container
				}, e.isLoading ? o.a.createElement(f.a, {
					className: j.a.loadingIcon,
					sizePx: 32
				}) : o.a.createElement(o.a.Fragment, null, e.isError ? o.a.createElement("p", {
					className: j.a.errorMsg
				}, e.errorMsg || n.fbt._("Something went wrong.", null, {
					hk: "pHwDP"
				})) : o.a.createElement(o.a.Fragment, null, e.communities.map(t => o.a.createElement(w, _({
					key: t.name
				}, t, {
					getSubscribeEventFactory: e.getSubscribeEventFactoryHandler ? e.getSubscribeEventFactoryHandler(t) : void 0,
					widget: e.widget,
					sendEvent: e.sendEvent,
					type: t.type || "subreddit",
					buttonDisabled: e.itemButtonDisabled,
					isLoading: e.loadingItemName && e.loadingItemName.toLowerCase() === t.name.toLowerCase() || !1,
					isNSFW: t.isNSFW,
					onCommunityNameClick: e.getClickEventFactory ? () => e.sendEvent(e.getClickEventFactory(t)) : void 0,
					tertiaryButtonText: e.tertiaryButtonText,
					useTertiaryButton: e.useTertiaryButton,
					showTertiaryButtonOnHover: e.showTertiaryButtonOnHover,
					onTertiaryButtonClick: e.onTertiaryButtonClick
				})))), e.bottomButtonText && e.onBottomButtonClick && o.a.createElement(h.t, {
					className: j.a.bottomButton,
					kind: h.b.Button,
					priority: h.c.Plain,
					onClick: e.onBottomButtonClick
				}, e.bottomButtonText)))),
				L = Object(c.c)({
					hideNSFWPref: y.H,
					nightmode: y.fb
				}),
				w = Object(a.b)(L)(e => o.a.createElement("div", {
					className: Object(d.a)(j.a.communityItemContainer, {
						[j.a.withBottomFlair]: e.isNSFW
					})
				}, o.a.createElement(x.a, {
					className: j.a.communityItemExpandCenter,
					widthRight: b.s
				}, o.a.createElement("div", {
					className: j.a.iconContainer
				}, e.communityIcon || e.iconUrl ? o.a.createElement("img", {
					className: j.a.subredditIcon,
					src: e.iconUrl || e.communityIcon
				}) : o.a.createElement(g.a, {
					name: "community",
					isFilled: !e.nightmode,
					className: Object(d.a)(j.a.defaultCommunityIcon, {
						[j.a.mNightmode]: e.nightmode
					})
				})), o.a.createElement("div", {
					className: j.a.communityDescriptionContainer
				}, o.a.createElement(i.a, {
					className: j.a.communityName,
					onClick: e.onCommunityNameClick,
					title: Object(O.b)(e.name, e.type),
					to: Object(O.a)(e.name, e.type)
				}, Object(O.b)(e.name, e.type)), o.a.createElement("div", {
					className: j.a.communityInfoContainer
				}, !!e.subscribers && o.a.createElement("p", {
					className: j.a.subscriberCount
				}, n.fbt._({
					"*": "{number} members",
					_1: "1 member"
				}, [n.fbt._plural(e.subscribers, "number")], {
					hk: "6i1wh"
				})), e.isNSFW && o.a.createElement(l.c, {
					className: j.a.nsfwFlair,
					flair: {
						type: v.f.Nsfw,
						text: "nsfw"
					}
				}))), e.useTertiaryButton && e.tertiaryButtonText && e.onTertiaryButtonClick ? e.isLoading ? o.a.createElement(f.a, {
					className: Object(d.a)(j.a.communityCta, j.a.smallLoadingIcon),
					sizePx: 12
				}) : o.a.createElement(h.t, {
					className: j.a.communityCta,
					disabled: e.buttonDisabled,
					onClick: () => e.onTertiaryButtonClick(e)
				}, e.tertiaryButtonText) : e.widget ? o.a.createElement(p, {
					disabled: e.buttonDisabled,
					getEventFactory: e.getSubscribeEventFactory,
					identifier: {
						name: e.name,
						type: e.type
					},
					sendEvent: e.sendEvent,
					small: !0,
					userIsSubscriber: !!e.isSubscribed,
					widget: e.widget
				}) : o.a.createElement(m.a, {
					disabled: e.buttonDisabled,
					getEventFactory: e.getSubscribeEventFactory,
					identifier: {
						name: e.name,
						type: e.type
					},
					small: !0
				})), !!e.description && o.a.createElement("p", {
					title: e.description,
					className: j.a.communityDescription
				}, e.description)))
		},
		"./src/reddit/components/Widgets/CommunityList/helpers.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			}));
			var n = s("./src/reddit/constants/posts.ts"),
				r = s("./src/reddit/helpers/name/index.ts");

			function o(e, t) {
				return (t === n.a.PROFILE ? "/user/" : "/r/") + e + "/"
			}

			function a(e, t) {
				return t === n.a.PROFILE ? Object(r.e)(e) : Object(r.d)(e)
			}
		},
		"./src/reddit/components/Widgets/CommunityList/index.m.less": function(e, t, s) {
			e.exports = {
				communityItemContainer: "_3NFddqqrzfM8noBES52Qcy",
				communityCta: "_1edkK552-3m7bXOdDxtLx_",
				smallLoadingIcon: "_32ZA09sNmrGEXkOPMOCLst",
				communityItemExpandCenter: "oP8RhN61VEXVL8e6SIxK_",
				communityDescriptionContainer: "_3jEbHrUmHtMsZcfN-z_GpD",
				communityDescription: "_2IANzA2n-6eA5T8Tz0TEVE",
				withBottomFlair: "_14n0HZvxiP1OqS51zI7Sy3",
				communityName: "_3BFvyrImF3et_ZF21Xd8SC",
				container: "_3-1jy8hD77zNJUdEMxDrXC",
				isTruncated: "_3idiZ5DFVkbhhKjDBTQeq-",
				nsfwFlair: "_3wQmfxeBovEB3M5pcwt-pv",
				iconContainer: "_19EKcu4yel161081OGs8w9",
				iconStyles: "_9p_iPxnOh7HnkcLhtSCDs",
				planetIcon: "_3GFjQrq7t7DpW__ZFpU7xf",
				secondaryLinkButton: "_1Yi_hbFvk7YS9Op3tGVQq9",
				subredditIcon: "_2BR7Oy0CAj5EiSDYQ--CAE",
				subscriberCount: "e0X82913OdCTkFf2HU-WL",
				textArea: "_3X2QmclgxJpDGOG7vui_8z",
				textButton: "_3k6fSIkIt6-LCDmLz7Didp",
				trashIcon: "_3T0iddL64wHJU4Ri4QU80I",
				loadingIcon: "_1S__kHcDfbOdA2sCV8sn9U",
				errorMsg: "_2AlaL9JsHLdMUnGFOPta5H",
				bottomButton: "_1aWHRawTuRl2HMpanJbrrb",
				leftAligned: "T4XQNeAXcz6U72tv0Z5Z6",
				defaultCommunityIcon: "_1yiD4Wxo0icHUUftoUrBiM",
				mNightmode: "_1yugRWTZEox55lEcLyzzAo"
			}
		},
		"./src/reddit/components/Widgets/Image/ImageFrame.m.less": function(e, t, s) {
			e.exports = {
				ImageFrame: "_3NeWg805wFgqPuE_-LZKN4",
				imageFrame: "_3NeWg805wFgqPuE_-LZKN4"
			}
		},
		"./src/reddit/components/Widgets/Image/StyledImage.m.less": function(e, t, s) {
			e.exports = {
				StyledImage: "_3WqRAmto46uhALFWnn8-Pa",
				styledImage: "_3WqRAmto46uhALFWnn8-Pa"
			}
		},
		"./src/reddit/components/Widgets/Moderator/index.m.less": function(e, t, s) {
			e.exports = {
				ModeratorListItem: "_1Y_VNBcV1dWk6Y7xcJHQyQ",
				moderatorListItem: "_1Y_VNBcV1dWk6Y7xcJHQyQ",
				Username: "ULWj94BYSOqoJDetxgcnU",
				username: "ULWj94BYSOqoJDetxgcnU",
				FlairComponent: "_1vh4u-B3eHXE3-ko0huS20",
				flairComponent: "_1vh4u-B3eHXE3-ko0huS20",
				InternalLink: "_2GrMpxDnqcoKtPHot56EWQ",
				internalLink: "_2GrMpxDnqcoKtPHot56EWQ",
				HelpCenterMessage: "_22YTzkLimJkLqvbuH33-CG",
				helpCenterMessage: "_22YTzkLimJkLqvbuH33-CG",
				UnModeratedSubreddit: "_3w4o8BanXnhPSWMnEIMm30",
				unModeratedSubreddit: "_3w4o8BanXnhPSWMnEIMm30",
				ExternalLink: "_3OXPB4b47Z9dmM_sDTwXuR",
				externalLink: "_3OXPB4b47Z9dmM_sDTwXuR",
				LinkContainer: "_2pf-KRzaHwj_TjBcOIDrWG",
				linkContainer: "_2pf-KRzaHwj_TjBcOIDrWG",
				MessageModsButton: "_334yl59sgT7zkOwg0PsXVJ",
				messageModsButton: "_334yl59sgT7zkOwg0PsXVJ",
				MessageModsButtonIcon: "-q98D9g-c8Eatzem_wgvF",
				messageModsButtonIcon: "-q98D9g-c8Eatzem_wgvF"
			}
		},
		"./src/reddit/components/Widgets/PostFlair/index.m.less": function(e, t, s) {
			e.exports = {
				WidgetContent: "_2NAcQAOfOGlsoihoqpSHTh",
				widgetContent: "_2NAcQAOfOGlsoihoqpSHTh",
				TertiaryButton: "_1nkSNshm5FPoOguxeVwxcD",
				tertiaryButton: "_1nkSNshm5FPoOguxeVwxcD",
				StyledFlair: "ij57zT3Rtmsew_4V8vYmY",
				styledFlair: "ij57zT3Rtmsew_4V8vYmY",
				cloudDisplay: "l8B49A4v1dhWGGEwM7vYA",
				flairFilter: "_1Dpo5nORF-CHLCeoDHpZuR",
				Flair: "_3b9QdopIknN9AuNvj2kI9X",
				flair: "_3b9QdopIknN9AuNvj2kI9X",
				"m-selected": "XUSGYTFEMdkVpqVqn1ZsC",
				mSelected: "XUSGYTFEMdkVpqVqn1ZsC",
				flairFilterContainer: "qHKWh5t-0ZHqZ00w567bU",
				flairFilterButton: "_1Uh_u9ypgpntBJ_2RC1Ge3"
			}
		},
		"./src/reddit/components/Widgets/PostFlair/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./node_modules/react-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/lib/classNames/index.ts"),
				d = s("./src/lib/fastdom/index.ts"),
				l = s("./src/lib/lessComponent.tsx"),
				m = s("./src/reddit/components/Flair/index.tsx"),
				u = s("./src/reddit/components/TrackingHelper/index.tsx"),
				p = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				C = s("./src/reddit/constants/parameters.ts"),
				b = s("./src/reddit/contexts/PageLayer/index.tsx"),
				h = s("./src/reddit/controls/Button/index.tsx"),
				f = s("./src/reddit/helpers/correlationIdTracker.ts"),
				g = s("./src/reddit/helpers/flair.ts"),
				x = s("./src/reddit/helpers/trackers/postFlair.ts"),
				v = s("./src/reddit/models/Widgets/index.ts"),
				y = s("./src/reddit/selectors/subreddit.ts"),
				O = s("./src/reddit/components/Widgets/PostFlair/index.m.less"),
				E = s.n(O);

			function j() {
				return (j = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const _ = 129,
				k = Object(b.v)({
					filterName: e => Object(b.Z)(e)[C.j],
					url: e => Object(b.hb)(e)
				}),
				L = Object(i.c)({
					subredditId: (e, t) => Object(y.I)(e, t.subredditName)
				}),
				w = Object(a.b)(L),
				S = l.a.div("WidgetContent", E.a),
				I = e => {
					let {
						display: t,
						isFlairFilter: s,
						onMouseDown: n,
						onClick: r,
						...a
					} = e;
					return o.a.createElement("li", {
						className: Object(c.a)(E.a.StyledFlair, t === v.g.Cloud && E.a.cloudDisplay, {
							[E.a.flairFilter]: s,
							[E.a["m-selected"]]: a.isSelected
						}),
						onClick: () => null == r ? void 0 : r(Object(g.g)(a.flair)),
						onMouseDown: n
					}, o.a.createElement(m.c, j({}, a, {
						className: E.a.Flair,
						isFlairFilter: s,
						forceSmallEmojis: !0
					})))
				};
			class P extends o.a.Component {
				constructor(e) {
					super(e), this.flairListRef = o.a.createRef(), this.trackFlairWidgetClick = e => {
						this.props.sendEvent(Object(x.f)(e))
					}, this.trackFlairWidgetClear = e => this.props.sendEvent(Object(x.c)(e)), this.trackFlairOverflowClick = () => {
						this.props.sendEvent(Object(x.d)())
					}, this.onClickFlair = e => {
						const t = {
							id: this.props.subredditId,
							eventType: "subreddit",
							originElement: "post_flair_widget",
							postFlairName: e
						};
						Object(f.d)(f.a.SearchResults), this.props.sendEvent(Object(x.b)(t))
					}, this.onToggleCollapse = () => this.setState(e => ({
						isCollapsed: !e.isCollapsed
					})), this.handleCloseClick = (e, t) => this.trackFlairWidgetClear(t), this.getSelectedFlair = e => e.find(e => Object(g.j)(e) === this.props.filterName), this.getFlairsFromIds = e => e.map(e => this.props.widget.templates[e] && Object(g.c)(this.props.widget.templates[e])), this.state = {
						isCollapsed: !0
					}
				}
				componentDidMount() {
					d.a.read(() => {
						const e = this.flairListRef.current && this.flairListRef.current.offsetHeight;
						e && e > _ && this.setState({
							hasOverflow: !0
						})
					})
				}
				renderButton() {
					return o.a.createElement(h.r, {
						className: E.a.flairFilterButton,
						onMouseDown: this.trackFlairOverflowClick,
						onClick: this.onToggleCollapse
					}, this.state.isCollapsed ? n.fbt._("See more", null, {
						hk: "2fWFes"
					}) : n.fbt._("See less", null, {
						hk: "3oxSZ9"
					}))
				}
				renderFlairs(e) {
					const {
						subredditName: t,
						widget: s
					} = this.props;
					return o.a.createElement("ul", {
						ref: this.flairListRef
					}, e.map(e => o.a.createElement(I, {
						key: e.templateId,
						display: s.display,
						flair: e,
						isFlairFilter: !0,
						large: !0,
						onClick: this.onClickFlair,
						onMouseDown: () => this.trackFlairWidgetClick(e),
						subredditName: t,
						to: Object(g.e)(this.props.url, Object(g.j)(e))
					})))
				}
				renderFlairFilters(e) {
					const {
						isCollapsed: t
					} = this.state, s = t ? _ : this.flairListRef.current && this.flairListRef.current.offsetHeight || "none";
					return o.a.createElement("div", {
						className: E.a.flairFilterContainer,
						style: {
							maxHeight: s
						}
					}, this.renderFlairs(e))
				}
				renderSelectedFlairFilter(e) {
					const {
						subredditName: t,
						widget: s
					} = this.props;
					return o.a.createElement("ul", null, o.a.createElement(I, {
						key: e.templateId,
						display: s.display,
						flair: e,
						isFlairFilter: !0,
						isSelected: !0,
						large: !0,
						onCloseClick: t => this.handleCloseClick(t, e),
						subredditName: t,
						to: Object(g.e)(this.props.url, Object(g.j)(e))
					}))
				}
				render() {
					const {
						filterName: e,
						widget: t
					} = this.props, {
						hasOverflow: s
					} = this.state, n = t.order, r = this.getFlairsFromIds(n), a = e && this.getSelectedFlair(r) || void 0, i = t.order.length > n.length || s && !a;
					return o.a.createElement(p.a, {
						styles: t.styles,
						title: t.shortName,
						truncateThreshold: this.props.truncateThreshold,
						widgetKind: t.kind
					}, o.a.createElement(S, null, a && this.renderSelectedFlairFilter(a), !a && this.renderFlairFilters(r), i && this.renderButton()))
				}
			}
			t.a = k(w(Object(u.c)(P)))
		},
		"./src/reddit/components/Widgets/Recommendations/Sidebar/index.m.less": function(e, t, s) {
			e.exports = {
				RecommendationSidebar: "_3Ndcxbm5f0pPvNSI2kk7Ua",
				recommendationSidebar: "_3Ndcxbm5f0pPvNSI2kk7Ua",
				isSticky: "_11FHz1-jlbYJ0ogJJ8HlvS"
			}
		},
		"./src/reddit/components/Widgets/Recommendations/Sidebar/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/classnames/index.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/reddit/components/Widgets/Recommendations/Sidebar/index.m.less"),
				c = s.n(i);
			class d extends a.a.Component {
				constructor(e) {
					super(e), this.offset = 0, this.threshold = 0, this.ref = a.a.createRef(), this.measure = () => {
						if (!this.state.isSticky && this.ref && this.ref.current) {
							const e = this.ref.current.getBoundingClientRect(),
								t = document.documentElement.scrollTop,
								s = e.top + t,
								n = this.ref.current.clientHeight;
							this.offset = window.innerHeight - n, this.threshold = n + s - window.innerHeight
						}
					}, this.handleScroll = () => {
						this.measure(), this.setState({
							isSticky: this.threshold > 0 && window.scrollY >= this.threshold
						})
					}, this.ref = a.a.createRef(), this.state = {
						isSticky: !1
					}
				}
				componentDidMount() {
					this.measure(), window.addEventListener("scroll", this.handleScroll)
				}
				componentWillUnmount() {
					window.removeEventListener("scroll", this.handleScroll)
				}
				render() {
					return a.a.createElement("div", {
						style: this.ref.current ? {
							height: this.ref.current.clientHeight
						} : {}
					}, a.a.createElement("div", {
						ref: this.ref,
						style: this.state.isSticky ? {
							top: this.offset
						} : {},
						className: r()(this.props.className, c.a.recommendationSidebar, {
							[c.a.isSticky]: this.state.isSticky
						})
					}, this.props.children))
				}
			}
		},
		"./src/reddit/components/Widgets/Recommendations/index.m.less": function(e, t, s) {
			e.exports = {
				recommendationWidget: "_1WHlo0amI-5XpQrgGac9jY",
				postPreview: "_3G-DpckPZwPYm-VEwXS5uA",
				thumbnailWrapper: "FbUnsa6_9Y7zASOdkXBni",
				subredditTitle: "WfSCvRO60bnRAHFf76dCJ",
				subredditName: "_1AF1qgUDsTX_XHGNtb9eTD",
				subredditIcon: "bl4ZZFlSdSp0651LqnPbO",
				metaContainer: "BwvWQ18WXJeAju_oSfQGJ",
				metaSection: "BBzDU1DzKBAtxEtIy16cO",
				dotSpacer: "_2Dy7qlY8h2gM-idmKUvIwU",
				icon: "_3JBKdIEBBJDr8ks2UAEKb6",
				postTitle: "_16PE03zyTycZgJEtewpplw",
				shortTitle: "_2PD84jAIu_lwZaR50QQvOM",
				communityBannerPlaceholder: "_2D7zl_d54nzW6JddGmlL0v",
				glimmer: "_3TZhL8u0Es1uNC4NiTMq6T",
				placeholderWrapper: "_7E_JlVtw5vjKoE_zXOqOu",
				subredditIconLoading: "_1vB3FG5cxYqw1tOuiA4XY9",
				subredditNameLoading: "_1yeeGZiqTUF5R2CX3OeN-6",
				postTitleLoading: "_1XDqtC7PCill1D0glb6XnR",
				postMetaSectionLoading: "_2K21kGnTaAQg66D6rlbV2-",
				verticalPostPreviewContainer: "_1Rbe3T11RIqoP4Q5IhxfnO",
				verticalPostPreviewThumbnail: "_23aHU6t4uajlAh0CKp4cOP",
				thumbnail: "_2DBbsvO3jP7bcFqAftcbiQ",
				blur: "_1YTMtnzKujONiVS3cvsRJd"
			}
		},
		"./src/reddit/components/Widgets/Recommendations/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/lodash/isEqual.js"),
				o = s.n(r),
				a = s("./node_modules/lodash/pick.js"),
				i = s.n(a),
				c = s("./node_modules/react/index.js"),
				d = s.n(c),
				l = s("./node_modules/react-redux/es/index.js"),
				m = s("./node_modules/reselect/es/index.js"),
				u = s("./src/lib/makeLinkedPostsListingKey/index.ts"),
				p = s("./src/reddit/components/TrackingHelper/index.tsx"),
				C = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				b = s("./src/reddit/selectors/telemetry.ts");
			const h = e => ({
					...b.q(e),
					source: "global",
					noun: "discovery_unit",
					action: "view",
					actionInfo: {
						...b.d(e),
						type: "right_rail"
					}
				}),
				f = e => ({
					...b.q(e),
					source: "post",
					noun: "upvote",
					action: "click",
					actionInfo: {
						...b.d(e),
						type: "right_rail"
					}
				}),
				g = e => ({
					...b.q(e),
					source: "post",
					noun: "comments",
					action: "click",
					actionInfo: {
						...b.d(e),
						type: "right_rail"
					}
				});
			var x = s("./src/reddit/selectors/listings.ts"),
				v = s("./src/reddit/selectors/posts.ts"),
				y = s("./node_modules/lodash/once.js"),
				O = s.n(y),
				E = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				j = s("./src/lib/classNames/index.ts"),
				_ = s("./src/lib/isUrl/index.ts"),
				k = s("./src/lib/prettyPrintNumber/index.ts"),
				L = s("./src/lib/timeAgo/index.ts"),
				w = s("./src/lib/truncateText/index.ts"),
				S = s("./src/reddit/components/Flair/index.tsx"),
				I = s("./src/reddit/components/SubredditIcon/index.tsx"),
				P = s("./src/reddit/constants/thumbnails.ts"),
				N = s("./src/reddit/helpers/path/index.ts"),
				T = s("./src/reddit/helpers/trackers/post.ts"),
				M = s("./src/reddit/icons/fonts/Comment/index.tsx"),
				R = s("./src/reddit/icons/fonts/Upvote/index.tsx"),
				F = s("./src/reddit/models/Flair/index.ts"),
				B = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				A = s("./src/reddit/actions/linkedPosts/index.ts"),
				D = s("./src/reddit/constants/experiments.ts"),
				U = s("./src/reddit/components/Widgets/Recommendations/index.m.less"),
				W = s.n(U);
			const H = 2e3;
			class V {
				constructor(e, t) {
					this.intersectingRatio = -1, this.consumed = !1, this.maybeConsume = () => {
						this.clearConsumeTimeout(), this.isConsuming() && (this.onConsume(), this.consumed = !0, this.disconnect())
					}, this.handleIntersectionEvent = e => {
						this.intersectingRatio = e[0].intersectionRatio, this.isViewing() && this.onView(), !this.isConsuming() || this.consumed || this.consumeTimeoutId || (this.consumeTimeoutId = setTimeout(this.maybeConsume, H))
					}, this.onConsume = O()(t), this.onView = O()(e), this.observer = new IntersectionObserver(this.handleIntersectionEvent, {
						threshold: [0, 1]
					})
				}
				isConsuming() {
					return this.intersectingRatio >= 1
				}
				isViewing() {
					return this.intersectingRatio > 0
				}
				clearConsumeTimeout() {
					this.consumeTimeoutId && (clearTimeout(this.consumeTimeoutId), this.consumeTimeoutId = void 0)
				}
				connect(e) {
					this.observer.observe(e)
				}
				disconnect() {
					this.clearConsumeTimeout(), this.observer.disconnect()
				}
			}
			var Z = Object(p.c)(e => {
				const t = Object(l.d)(),
					{
						post: s,
						sendEvent: n
					} = e,
					r = Object(c.useRef)(null),
					o = Object(c.useRef)(null),
					a = Object(l.e)(e => e.subreddits.models[s.belongsTo.id]),
					i = Object(l.e)(B.a) === D.kd.LargeImagePreview;
				Object(c.useEffect)(() => {
					var e;
					null === (e = o.current) || void 0 === e || e.disconnect(), o.current = new V(() => {
						n(Object(T.j)(s.id))
					}, () => {
						n(Object(T.g)(s.id, H, !0))
					}), o.current.connect(r.current)
				}, [s, n]);
				const m = Object(c.useCallback)(() => {
						const e = Object(u.a)(s.id);
						t(Object(A.c)({
							key: e
						})), window.scroll(0, 0), n(Object(T.i)(s.id))
					}, [s, n, t]),
					p = Object(c.useCallback)(() => {
						n(f)
					}, [n]),
					C = Object(c.useCallback)(() => {
						n(g)
					}, [n]),
					{
						created: b,
						numComments: h,
						thumbnail: x,
						upvoteRatio: v,
						permalink: y,
						title: O
					} = s,
					U = v ? `${Math.round(100*v)}%` : "",
					Z = s.flair.length ? s.flair.findIndex(e => e.type === F.f.Nsfw) : -1,
					q = Z >= 0;
				return d.a.createElement("li", {
					className: W.a.postPreview,
					ref: r,
					onClick: m
				}, d.a.createElement(E.a, {
					to: Object(N.b)(y)
				}, i ? (() => d.a.createElement("div", {
					className: W.a.verticalPostPreviewContainer
				}, d.a.createElement("div", {
					className: W.a.verticalPostPreviewHeader
				}, d.a.createElement("div", {
					className: W.a.subredditTitle
				}, d.a.createElement(I.b, {
					className: W.a.subredditIcon,
					subredditOrProfile: a
				}), d.a.createElement("span", {
					className: W.a.subredditName
				}, a && `r/${a.name}`), q && d.a.createElement(S.c, {
					flair: s.flair[Z]
				}))), x && Object(_.a)(x.url) && d.a.createElement("div", {
					className: W.a.verticalPostPreviewThumbnail
				}, d.a.createElement("div", {
					className: W.a.thumbnailWrapper
				}, d.a.createElement("img", {
					"data-testid": "post-large-preview-image",
					className: Object(j.a)(W.a.thumbnail, {
						[W.a.blur]: q
					}),
					src: x.url
				}))), d.a.createElement("div", {
					className: Object(j.a)(W.a.postTitle, {
						[W.a.shortTitle]: x.url !== P.a.DEFAULT
					})
				}, Object(w.a)(O, 60, "..."))))() : (() => d.a.createElement(d.a.Fragment, null, x && Object(_.a)(x.url) && d.a.createElement("div", {
					className: W.a.thumbnailWrapper
				}, d.a.createElement("img", {
					"data-testid": "post-compact-preview-image",
					className: Object(j.a)(W.a.thumbnail, {
						[W.a.blur]: q
					}),
					src: x.url
				})), d.a.createElement("div", {
					className: W.a.subredditTitle
				}, d.a.createElement(I.b, {
					className: W.a.subredditIcon,
					subredditOrProfile: a
				}), d.a.createElement("span", {
					className: W.a.subredditName
				}, a && `r/${a.name}`), q && d.a.createElement(S.c, {
					flair: s.flair[Z]
				})), d.a.createElement("div", {
					className: Object(j.a)(W.a.postTitle, {
						[W.a.shortTitle]: x.url !== P.a.DEFAULT
					})
				}, Object(w.a)(O, 60, "..."))))(), d.a.createElement("div", {
					className: W.a.metaContainer
				}, d.a.createElement("div", {
					className: W.a.metaSection,
					onClick: p
				}, d.a.createElement(R.a, {
					className: W.a.icon
				}), d.a.createElement("span", null, U)), d.a.createElement("div", {
					className: W.a.metaSection,
					onClick: C
				}, d.a.createElement(M.a, {
					className: W.a.icon
				}), d.a.createElement("span", {
					className: W.a.meta
				}, Object(k.b)(h))), d.a.createElement("span", {
					className: W.a.dotSpacer
				}), d.a.createElement("div", {
					className: W.a.metaSection
				}, d.a.createElement("span", null, Object(L.a)(b / 1e3, !0))))))
			});
			var q = e => d.a.createElement("div", {
				className: Object(j.a)(W.a.placeholderWrapper)
			}, d.a.createElement("div", {
				className: W.a.header
			}, d.a.createElement("span", {
				className: W.a.subredditIconLoading
			}), d.a.createElement("span", {
				className: W.a.subredditNameLoading
			})), d.a.createElement("div", {
				className: W.a.postTitleLoading
			}), d.a.createElement("div", {
				className: W.a.postMetaSectionLoading
			}));
			const z = () => n.fbt._("Similar to this post", null, {
					hk: "XKYGj"
				}),
				K = [];
			for (let X = 0; X < 15; X++) K.push(d.a.createElement(q, {
				key: X
			}));
			const G = (e, t) => {
					const {
						post: s
					} = t;
					return Object(u.a)(s.id)
				},
				Y = Object(m.a)((e, t) => {
					const s = G(0, t);
					return Object(v.y)(e, {
						listingKey: s
					})
				}, e => e.posts.models, (e, t) => {
					const s = G(0, t);
					return Object(x.d)(e, {
						listingKey: s
					})
				}, (e, t, s) => {
					const n = [];
					let r = 0,
						o = 0;
					for (; r < 15 && o < e.length;) {
						const s = t[e[o++]];
						s && s.belongsTo && "subreddit" === s.belongsTo.type && (n.push(s), r++)
					}
					return {
						posts: n,
						isPending: s
					}
				});

			function J(e, t) {
				const s = ["posts", "isPending"];
				return o()(i()(e, s), i()(t, s))
			}
			const Q = d.a.memo((function(e) {
				let {
					post: t,
					subredditOrProfile: s
				} = e;
				const n = Object(p.b)(),
					{
						posts: r,
						isPending: o
					} = Object(l.e)(e => Y(e, {
						post: t,
						subredditOrProfile: s
					}), J);
				if (Object(c.useEffect)(() => {
						n(h)
					}, [n]), !r.length && !o) return null;
				const a = (null == r ? void 0 : r.length) && r.map((e, t) => d.a.createElement(Z, {
					post: e,
					key: t
				}));
				return d.a.createElement(C.a, {
					title: z()
				}, d.a.createElement("ul", null, o ? K : a))
			}));
			t.a = Q
		},
		"./src/reddit/components/Widgets/ReredditLink/ImageBlock/index.m.less": function(e, t, s) {
			e.exports = {
				ImageContainer: "_2ppRhKEnnVueVHY_G-Ursy",
				imageContainer: "_2ppRhKEnnVueVHY_G-Ursy",
				Center: "_2KLA5wMaJBHg0K2z1q0ci_",
				center: "_2KLA5wMaJBHg0K2z1q0ci_",
				Upvotes: "_1zdLtEEpuWI_Pnujn1lMF2",
				upvotes: "_1zdLtEEpuWI_Pnujn1lMF2",
				LineContainer: "_3s18OZ_KPHs2Ei416c7Q1l",
				lineContainer: "_3s18OZ_KPHs2Ei416c7Q1l",
				HorizontalLine: "LJjFa8EhquYX8xsTnb9n-",
				horizontalLine: "LJjFa8EhquYX8xsTnb9n-",
				CircleContainer: "_2Zjw1QfT_iMHH7rfaGsfBs",
				circleContainer: "_2Zjw1QfT_iMHH7rfaGsfBs",
				Circle: "_2gaJVJ6_j7vwKV945EABN9",
				circle: "_2gaJVJ6_j7vwKV945EABN9"
			}
		},
		"./src/reddit/components/Widgets/ReredditLink/ReredditButton/index.m.less": function(e, t, s) {
			e.exports = {
				Button: "_3gbb_EMFXxTYrxDZ2kusIp",
				button: "_3gbb_EMFXxTYrxDZ2kusIp"
			}
		},
		"./src/reddit/components/Widgets/ReredditLink/async.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(n.a)({
				resolved: {},
				chunkName: () => "ReredditLink",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!s.m[t]
				},
				importAsync: () => Promise.resolve().then(s.bind(null, "./src/reddit/components/Widgets/ReredditLink/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return s(t)
				},
				resolve() {
					return "./src/reddit/components/Widgets/ReredditLink/index.tsx"
				}
			})
		},
		"./src/reddit/components/Widgets/ReredditLink/index.m.less": function(e, t, s) {
			e.exports = {
				Widget: "_2YJDRz5rCYQfu8YdgB_neb",
				widget: "_2YJDRz5rCYQfu8YdgB_neb",
				ButtonContainer: "_37WD6iicVS6vGN0RomNTwh",
				buttonContainer: "_37WD6iicVS6vGN0RomNTwh"
			}
		},
		"./src/reddit/components/Widgets/ReredditLink/index.tsx": function(e, t, s) {
			"use strict";
			s.r(t), s.d(t, "ReredditButtons", (function() {
				return w
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/lessComponent.tsx"),
				a = s("./src/reddit/components/SidebarSpacer/index.tsx"),
				i = s("./src/config.ts"),
				c = s("./src/reddit/components/TrackingHelper/index.tsx"),
				d = s("./src/reddit/helpers/trackers/widgets.ts"),
				l = s("./src/reddit/components/Widgets/ReredditLink/ImageBlock/index.m.less"),
				m = s.n(l);
			const u = `${i.a.assetPath}/img/widgets/rereddit-promo/`;
			var p = e => {
					let {
						url: t,
						postId: s
					} = e;
					const o = Object(c.b)(),
						a = Object(n.useCallback)(() => {
							o(Object(d.a)(s))
						}, [s, o]),
						l = `${i.a.redditUrl}/posts/${t}`;
					return r.a.createElement("a", {
						href: l,
						onClick: a,
						target: "_blank",
						rel: "noopener noreferrer"
					}, r.a.createElement("div", {
						className: m.a.ImageContainer
					}, r.a.createElement("img", {
						src: `${u}left.png`
					}), r.a.createElement("img", {
						className: m.a.Center,
						src: `${u}center.png`
					}), r.a.createElement("img", {
						src: `${u}right.png`
					}), r.a.createElement("img", {
						className: m.a.Upvotes,
						src: `${u}upvotes.png`
					})), r.a.createElement("div", {
						className: m.a.LineContainer
					}, r.a.createElement("img", {
						className: m.a.HorizontalLine,
						src: `${u}line.png`
					}), r.a.createElement("div", {
						className: m.a.CircleContainer
					}, r.a.createElement("div", {
						className: m.a.Circle
					}))))
				},
				C = s("./src/reddit/components/SidebarFooter/index.m.less"),
				b = s.n(C),
				h = s("./src/reddit/controls/Button/index.tsx"),
				f = s("./src/reddit/components/Widgets/ReredditLink/ReredditButton/index.m.less"),
				g = s.n(f);
			const x = o.a.a("Link", b.a);
			var v = e => {
					let {
						buttonText: t,
						children: s,
						postId: o,
						renderAsPlainLink: a,
						url: l
					} = e;
					const m = Object(c.b)(),
						u = Object(n.useCallback)(() => {
							m(Object(d.a)(o, t))
						}, [o, t, m]);
					return a ? r.a.createElement(x, {
						href: `${i.a.redditUrl}/posts/${l}`,
						onClick: u,
						target: "_blank"
					}, s) : r.a.createElement(h.t, {
						className: g.a.Button,
						href: `${i.a.redditUrl}/posts/${l}`,
						kind: h.b.ExternalLink,
						onClick: u,
						target: "_blank"
					}, s)
				},
				y = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				O = s("./src/reddit/helpers/ordinal/index.ts"),
				E = s("./src/reddit/components/Widgets/ReredditLink/index.m.less"),
				j = s.n(E);
			const {
				fbt: _
			} = s("./node_modules/fbt/lib/FbtPublic.js"), k = ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"], L = o.a.div("ButtonContainer", j.a), w = e => {
				let {
					directoryTimestamp: t,
					postId: s,
					renderAsPlainLink: n
				} = e;
				const o = new Date(t),
					a = k[o.getMonth()],
					i = o.getFullYear(),
					c = o.getDate(),
					d = Object(O.a)(c),
					l = `${i}/${a}-${c}-1/`,
					m = `${i}/${a}/`,
					u = `${i}/`;
				return r.a.createElement(r.a.Fragment, null, r.a.createElement(v, {
					key: "ymd",
					buttonText: `top_posts_${a}_${d}_${i}`,
					postId: s,
					renderAsPlainLink: n,
					url: l
				}, _._("Top posts {date}", [_._param("date", `${a} ${d} ${i}`)], {
					hk: "4xgYoo"
				})), r.a.createElement(v, {
					key: "ym",
					buttonText: `top_posts_of_${a}_${i}`,
					postId: s,
					renderAsPlainLink: n,
					url: m
				}, _._("Top posts of {date}", [_._param("date", `${a}, ${i}`)], {
					hk: "HQnvs"
				})), r.a.createElement(v, {
					key: "y",
					buttonText: `top_posts_${i}`,
					postId: s,
					renderAsPlainLink: n,
					url: u
				}, _._("Top posts {date}", [_._param("date", `${i}`)], {
					hk: "4xgYoo"
				})))
			};
			t.default = e => {
				let {
					directoryTimestamp: t,
					postId: s
				} = e;
				const n = new Date(t),
					o = k[n.getMonth()],
					i = `${n.getFullYear()}/${o}-${n.getDate()}-1/`;
				return r.a.createElement(a.a, null, r.a.createElement(y.a, {
					className: j.a.Widget,
					contentOnly: !0
				}, r.a.createElement(p, {
					postId: s,
					url: i
				}), r.a.createElement(L, null, r.a.createElement(w, {
					directoryTimestamp: t,
					postId: s
				}))))
			}
		},
		"./src/reddit/components/Widgets/SubredditRules/Rule/index.m.less": function(e, t, s) {
			e.exports = {
				RawHTMLDisplay: "_2vztYwRKSDZV2ISjSixByA",
				rawHtmlDisplay: "_2vztYwRKSDZV2ISjSixByA",
				Chevron: "_2U-LBUvfr1W6MEMTGXgzmh",
				chevron: "_2U-LBUvfr1W6MEMTGXgzmh",
				RuleShortName: "_8ZLJI1-ZiP7pHJ_yO1L4Z",
				ruleShortName: "_8ZLJI1-ZiP7pHJ_yO1L4Z",
				pointerCursor: "_3osxlOKfiylmgqNqsW7erB",
				cleanStyle: "_12zeaxHNQC7XniG1qunPev",
				RuleIndex: "_36D5hmBSZbFxkFMkiWg6cY",
				ruleIndex: "_36D5hmBSZbFxkFMkiWg6cY",
				RuleTitle: "tbIApBd2DM_drfZQJjIum",
				ruleTitle: "tbIApBd2DM_drfZQJjIum",
				RuleDescription: "_2QhEclR_DjIrTv_oNU5MMN",
				ruleDescription: "_2QhEclR_DjIrTv_oNU5MMN"
			}
		},
		"./src/reddit/components/Widgets/SubredditRules/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return j
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/lib/lessComponent.tsx"),
				d = s("./src/reddit/components/RawHTMLDisplay/index.tsx"),
				l = s("./src/reddit/components/RichTextJson/index.tsx"),
				m = s("./src/reddit/helpers/dom/index.ts"),
				u = s("./src/reddit/icons/fonts/index.tsx"),
				p = s("./src/reddit/layout/threeCol/ExpandCenter/index.tsx"),
				C = s("./src/reddit/models/Widgets/index.ts"),
				b = s("./src/reddit/components/Widgets/SubredditRules/Rule/index.m.less"),
				h = s.n(b);
			const f = c.a.div("RuleShortName", h.a),
				g = c.a.div("RuleIndex", h.a),
				x = c.a.div("RuleTitle", h.a),
				v = c.a.div("RuleDescription", h.a),
				y = c.a.wrapped(d.a, "RawHTMLDisplay", h.a),
				O = {};
			class E extends o.a.Component {
				constructor(e) {
					super(e), this.onClick = () => {
						Object(m.f)() || this.setState({
							isVisible: !this.state.isVisible
						})
					}, this.state = {
						isVisible: this.shouldShowFullDisplay(e)
					}
				}
				shouldShowFullDisplay(e) {
					return e.display === C.h.FULL
				}
				render() {
					const {
						props: e,
						state: t,
						onClick: s,
						shouldShowFullDisplay: n
					} = this, r = !!(e.rule.descriptionRichText || e.rule.descriptionHtml || e.rule.description), a = !n(e) && !!r;
					return o.a.createElement(f, {
						className: Object(i.a)({
							[h.a.pointerCursor]: a,
							[h.a.cleanStyle]: e.cleanStyle
						}),
						onClick: n(e) || !r ? void 0 : s
					}, o.a.createElement(p.a, null, o.a.createElement(g, {
						className: Object(i.a)({
							[h.a.cleanStyle]: e.cleanStyle
						})
					}, `${e.humanIndex}.`), o.a.createElement(x, null, `${e.rule.shortName}`), o.a.createElement("div", null, !n(e) && r && o.a.createElement(u.a, {
						name: t.isVisible ? "caret_up" : "caret_down"
					}))), t.isVisible && o.a.createElement(v, {
						className: Object(i.a)({
							[h.a.cleanStyle]: e.cleanStyle
						})
					}, e.rule.descriptionRichText ? o.a.createElement(l.b, {
						content: JSON.parse(e.rule.descriptionRichText),
						useExplicitTextColor: !0,
						rtJsonElementProps: O
					}) : e.rule.descriptionHtml ? o.a.createElement(y, {
						html: e.rule.descriptionHtml
					}) : e.rule.description))
				}
			}
			const j = e => e.rules.length > 0 ? o.a.createElement(a.a, {
				className: e.className,
				styles: e.styles,
				title: n.fbt._("{subredditName} Rules", [n.fbt._param("subredditName", `r/${e.subredditName}`)], {
					hk: "2AwRLk"
				}),
				redditStyle: e.redditStyle
			}, e.rules.map((function(t, s) {
				return o.a.createElement(E, {
					key: `rule${t.shortName}${t.createdUtc}`,
					rule: t,
					display: e.display,
					humanIndex: s + 1
				})
			}))) : null;
			t.b = e => o.a.createElement(j, {
				rules: e.widget.data || [],
				subredditName: e.subredditName,
				display: e.widget.display,
				redditStyle: e.redditStyle,
				styles: e.widget.styles
			})
		},
		"./src/reddit/components/Widgets/TextArea/index.m.less": function(e, t, s) {
			e.exports = {
				WidgetContent: "_1UXMWx5AOkqbZJ00ctnRu",
				widgetContent: "_1UXMWx5AOkqbZJ00ctnRu",
				RawHTMLDisplay: "_1-yyC7m50efEvz4Q5I7jn5",
				rawHtmlDisplay: "_1-yyC7m50efEvz4Q5I7jn5"
			}
		},
		"./src/reddit/components/Widgets/ThemedWidget/index.m.less": function(e, t, s) {
			e.exports = {
				widgetBackground: "_1G4yU68P50vRZ4USXfaceV",
				clickable: "_2mtWlchu4uQf339v56bSha",
				redditStyle: "_2QeqBqfT5UbHBoViZUt-wX",
				truncatedGradient: "_1lvCNVth3dt5y8lu3vT95L",
				widgetHeader: "_ZhON3a3vplThB8NFwuJn",
				widgetTitle: "_2sggAEfRQLyoAl4J__5twU",
				widgetContent: "TmgZY6tDcdErbE5d7E0HJ",
				widgetContentOnly: "_3RPJ8hHnfFohktLZca18J6",
				truncated: "r5dzQq7dgZyAmve8abbbt",
				seeMore: "_3dbp6Cm9uKkkIBr9EsU-qS"
			}
		},
		"./src/reddit/components/Widgets/ThemedWidget/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/reselect/es/index.js"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				d = s("./src/reddit/components/SEOTitle/index.tsx"),
				l = s("./src/reddit/components/TrackingHelper/index.tsx"),
				m = s("./src/reddit/contexts/PageLayer/index.tsx"),
				u = s("./src/reddit/controls/Button/index.tsx"),
				p = s("./src/reddit/helpers/trackers/widgets.ts"),
				C = s("./src/reddit/models/NewStructuredStyles/index.ts"),
				b = s("./src/reddit/selectors/experiments/topPosts.ts"),
				h = s("./src/reddit/selectors/structuredStyles.ts"),
				f = s("./src/reddit/selectors/user.ts"),
				g = s("./src/reddit/models/Theme/index.ts"),
				x = s("./src/reddit/models/Theme/NewColorSystem/index.ts");
			const v = e => e.styles && e.styles.backgroundColor ? e.styles.backgroundColor : Object(x.a)(e).widgetColors.sidebarWidgetBackgroundColor,
				y = e => e.styles && e.styles.headerColor ? e.styles.headerColor : Object(x.a)(e).widgetColors.sidebarWidgetHeaderColor,
				O = e => {
					const t = v(e);
					return Object(g.e)(t)
				},
				E = e => {
					const t = y(e);
					return Object(g.e)(t)
				};
			var j = s("./src/reddit/components/Widgets/ThemedWidget/index.m.less"),
				_ = s.n(j);
			const {
				fbt: k
			} = s("./node_modules/fbt/lib/FbtPublic.js"), L = Object(m.v)(), w = Object(o.b)(() => Object(a.c)({
				forceRedditStyle: (e, t) => {
					const s = Object(m.o)(e, t) || void 0,
						n = t.redditStyle || Object(h.l)(e, {
							subredditId: s
						}),
						r = Object(f.fb)(e);
					return n || r
				},
				nigtmode: f.fb,
				subredditId: m.o,
				topPostVariant: b.d
			}));
			class S extends r.a.Component {
				constructor() {
					super(...arguments), this.contentRef = r.a.createRef(), this.state = {
						isTruncated: !1
					}, this.handleSeeMoreClick = () => {
						const {
							subredditId: e,
							widgetKind: t
						} = this.props;
						e && t && this.props.sendEvent(Object(p.b)(e, t)), this.setState({
							isTruncated: !1
						})
					}
				}
				componentDidMount() {
					const e = this.contentRef.current,
						t = e && e.offsetHeight;
					this.props.truncateThreshold && t && t > this.props.truncateThreshold && this.setState({
						isTruncated: !0
					})
				}
				getWidgetBackgroundStyles() {
					const e = {};
					return e.backgroundColor = v(this.props), e.borderColor = Object(C.d)(e.backgroundColor, this.props.nigtmode), e.color = e.fill = O(this.props), e
				}
				getWidgetHeaderStyles() {
					const e = {};
					return e.backgroundColor = y(this.props), e.color = e.fill = E(this.props), e
				}
				render() {
					const {
						children: e,
						className: t,
						contentOnly: s,
						forceRedditStyle: n,
						headerButton: o,
						id: a,
						onClick: c,
						onHeaderClick: l,
						title: m,
						titleClassName: p,
						truncateThreshold: C
					} = this.props, b = s ? _.a.widgetContentOnly : _.a.widgetContent, h = !n && this.props.styles, f = h ? this.getWidgetBackgroundStyles() : {}, g = h ? this.getWidgetHeaderStyles() : {};
					return r.a.createElement("div", {
						className: Object(i.a)(t, _.a.widgetBackground, {
							[_.a.redditStyle]: n,
							[_.a.clickable]: !!c,
							[_.a.truncatedGradient]: this.state.isTruncated && !this.props.noGradient
						}),
						"data-redditstyle": n,
						onClick: c,
						style: f
					}, m && r.a.createElement("div", {
						className: Object(i.a)(_.a.widgetHeader, {
							[_.a.clickable]: !!l
						}),
						id: a,
						style: {
							...g,
							...this.props.headerStyles
						},
						onClick: l
					}, r.a.createElement("div", {
						className: Object(i.a)(_.a.widgetTitle, p)
					}, r.a.createElement(d.b, {
						type: d.a.Widget
					}, m)), o), r.a.createElement("div", {
						className: Object(i.a)(b, {
							[_.a.truncated]: this.state.isTruncated
						}),
						ref: this.contentRef,
						style: {
							maxHeight: this.state.isTruncated ? C : "none"
						}
					}, e), this.state.isTruncated && r.a.createElement(u.r, {
						className: _.a.seeMore,
						onClick: this.handleSeeMoreClick
					}, k._("See More", null, {
						hk: "4w47Qu"
					})))
				}
			}
			t.a = L(w(Object(c.a)(Object(l.c)(S))))
		},
		"./src/reddit/components/Widgets/Widget/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return Be
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/reselect/es/index.js"),
				i = s("./src/reddit/components/RawHTMLDisplay/index.tsx"),
				c = s("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				d = s("./src/reddit/controls/Button/index.tsx"),
				l = s("./src/reddit/controls/OutboundLink/index.tsx"),
				m = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				u = s("./src/lib/lessComponent.tsx"),
				p = s("./src/lib/linkMatchers/index.ts"),
				C = s("./src/reddit/helpers/widgets/index.tsx"),
				b = s("./src/reddit/models/Image/index.tsx"),
				h = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				f = s("./src/reddit/models/Widgets/index.ts"),
				g = s("./src/reddit/selectors/structuredStyles.ts"),
				x = s("./src/reddit/selectors/user.ts"),
				v = s("./src/telemetry/models/Outbound.ts"),
				y = s("./src/reddit/components/Widgets/Button/index.m.less"),
				O = s.n(y);
			const E = (e, t, s) => {
					let n = {},
						r = {};
					n = e.kind === f.k.Image ? {
						"--widget-button-background-image": `url('${e.url}')`
					} : ((e, t, s) => {
						let {
							color: n,
							fillColor: r,
							textColor: o
						} = e;
						return t && (n = o = s, r = "transparent"), {
							"--widget-button-background-color": `${r||"transparent"}`,
							"--widget-button-border": `1px solid ${n}`,
							"--widget-button-color": `${o||n}`
						}
					})(e, t, s);
					const o = e.hoverState || e;
					if (o.kind === f.k.Image) r = {
						"--widget-button-hover-background-image": `url('${o.url}')`,
						"--widget-button-hover-border": "none"
					};
					else {
						let {
							color: e,
							fillColor: n,
							textColor: a
						} = o;
						t && (e = a = s, n = "transparent"), r = {
							"--widget-button-hover-background-color": `${n||"transparent"}`,
							"--widget-button-hover-background-image": "none",
							"--widget-button-hover-border": `1px solid ${e}`,
							"--widget-button-hover-color": `${a||e}`
						}
					}
					return {
						...n,
						...r
					}
				},
				j = e => e.kind === f.k.Image ? O.a.imageButton : O.a.textButton,
				_ = e => {
					const t = Object(C.h)(e),
						s = Object(p.e)(p.c, t);
					return s ? s.url : e.url
				},
				k = Object(m.a)(e => {
					const {
						button: t,
						overrideColors: s
					} = e, n = Object(h.a)(e).button;
					return r.a.createElement(d.t, {
						className: j(t),
						style: E(t, s, n),
						isFullWidth: !0,
						size: d.d.S,
						priority: d.c.Secondary
					}, t.kind === f.k.Text && r.a.createElement("span", {
						className: t.hoverState ? O.a.vanishingTextButtonText : void 0
					}, t.text), t.hoverState && t.hoverState.kind === f.k.Text && r.a.createElement("span", {
						className: O.a.textButtonHoverText
					}, t.hoverState.text))
				}),
				L = e => r.a.createElement(l.b, {
					href: _(e.button),
					sourceElement: v.SourceElement.SidebarWidget
				}, r.a.createElement(k, e)),
				w = u.a.wrapped(i.a, "RawHTMLDisplay", O.a);
			var S = Object(o.b)(() => Object(a.c)({
					forceRedditStyle: g.l,
					isNightmodeOn: x.fb
				}))(e => r.a.createElement(c.a, {
					styles: e.widget.styles,
					title: e.widget.shortName,
					truncateThreshold: e.truncateThreshold,
					widgetKind: e.widget.kind
				}, e.widget.descriptionHtml && r.a.createElement(w, {
					html: e.widget.descriptionHtml
				}), e.widget.buttons.filter(e => (e.kind !== f.k.Image || e.url !== b.c) && (!e.hoverState || e.hoverState.kind !== f.k.Image || e.hoverState.url !== b.c)).map(t => r.a.createElement(L, {
					key: `${t.text}-${t.url}`,
					button: t,
					overrideColors: e.forceRedditStyle || e.isNightmodeOn
				})))),
				I = s("./node_modules/fbt/lib/FbtPublic.js"),
				P = s("./src/reddit/components/HumanDate/index.tsx"),
				N = s("./src/reddit/controls/TextButton/index.tsx"),
				T = s("./src/reddit/components/Widgets/Calendar/index.m.less"),
				M = s.n(T);
			const R = 100,
				F = {
					isExpanded: !1
				},
				B = u.a.wrapped(i.a, "RawHTMLDisplay", M.a),
				A = u.a.div("EventContainer", M.a),
				D = u.a.div("EventTitle", M.a),
				U = u.a.div("EventDate", M.a),
				W = u.a.div("EventLocation", M.a),
				H = u.a.div("EventDescription", M.a),
				V = u.a.wrapped(N.a, "ToggleDescription", M.a);
			class Z extends r.a.Component {
				constructor(e) {
					super(e), this.toggleDescriptionView = () => {
						this.setState({
							isExpanded: !this.state.isExpanded
						})
					}, this.state = F
				}
				render() {
					const {
						props: e,
						state: t
					} = this;
					return e.text.length > R ? r.a.createElement(H, null, t.isExpanded ? e.text : e.text.slice(0, R), r.a.createElement(V, {
						onClick: this.toggleDescriptionView
					}, t.isExpanded ? I.fbt._("read less", null, {
						hk: "2KdNS6"
					}) : I.fbt._("...read more", null, {
						hk: "2MAis9"
					}))) : r.a.createElement(H, null, e.text)
				}
			}
			var q = e => r.a.createElement(c.a, {
					styles: e.widget.styles,
					title: e.widget.shortName,
					truncateThreshold: e.truncateThreshold,
					widgetKind: e.widget.kind
				}, e.widget.data.map((t, s) => r.a.createElement(A, {
					key: `${s}-${t.title}`
				}, r.a.createElement(D, null, t.titleHtml ? r.a.createElement(B, {
					html: t.titleHtml
				}) : t.title), e.widget.configuration.showDate && t.startTime && r.a.createElement(U, null, r.a.createElement(P.a, {
					seconds: t.startTime,
					showDay: !0
				}), !t.allDay && e.widget.configuration.showTime && r.a.createElement("span", null, " • ", (e => {
					const t = new Date(1e3 * e),
						s = t.getHours(),
						n = t.getMinutes();
					return n < 10 ? `${s}:0${n}` : `${s}:${n}`
				})(t.startTime), " ")), t.location && e.widget.configuration.showLocation && r.a.createElement(W, null, t.locationHtml ? r.a.createElement(B, {
					html: t.locationHtml
				}) : t.location), t.description && e.widget.configuration.showDescription && r.a.createElement(Z, {
					text: t.description
				})))),
				z = s("./src/reddit/components/TrackingHelper/index.tsx"),
				K = s("./src/reddit/components/Widgets/CommunityList/SubredditList.tsx");
			var G = Object(z.c)(e => r.a.createElement(K.b, {
				className: e.className,
				communities: e.widget.data,
				sendEvent: e.sendEvent,
				title: e.widget.shortName,
				truncateThreshold: e.truncateThreshold,
				widget: e.widget
			}));
			const Y = Object(a.c)({
					stylesheet: e => e.stylesheets
				}),
				J = Object(o.b)(Y),
				Q = (e, t, s) => `<head>\n  <link rel="stylesheet" href="${e}">\n  <link rel="stylesheet" href="${t}">\n  <base target="_blank">\n</head>\n<body>${s}</body>`;
			class X extends r.a.Component {
				constructor() {
					super(...arguments), this.storeRef = e => {
						this.iframe = e
					}
				}
				shouldComponentUpdate(e) {
					return (e.widget.stylesheetUrl !== this.props.widget.stylesheetUrl || e.widget.textHtml && e.widget.textHtml !== this.props.widget.textHtml) && (this.renderIframeContent(e), this.writeIFrameDocument()), e.widget.height !== this.props.widget.height
				}
				writeIFrameDocument() {
					this.iframe && this.iframe.contentWindow && void 0 !== this.iframeContent && (this.iframe.contentWindow.document.open(), this.iframe.contentWindow.document.write(this.iframeContent), this.iframe.contentWindow.document.close())
				}
				UNSAFE_componentWillMount() {
					this.renderIframeContent(this.props)
				}
				componentDidMount() {
					this.iframe && this.iframe.contentWindow && this.iframeContent && (this.iframe.contentWindow.document.body && this.iframe.contentWindow.document.body.childNodes.length || this.writeIFrameDocument())
				}
				renderIframeContent(e) {
					e.widget.stylesheetUrl && e.widget.textHtml && (this.iframeContent = Q(e.stylesheet, e.widget.stylesheetUrl, e.widget.textHtml))
				}
				render() {
					const {
						props: e
					} = this;
					return r.a.createElement(c.a, {
						contentOnly: !0,
						truncateThreshold: e.truncateThreshold,
						widgetKind: e.widget.kind
					}, r.a.createElement("iframe", {
						ref: this.storeRef,
						width: "100%",
						height: e.widget.height || 300,
						srcDoc: this.iframeContent
					}))
				}
			}
			var $ = J(X),
				ee = s("./src/reddit/components/Widgets/Image/ImageFrame.m.less"),
				te = s.n(ee);
			var se = u.a.div("ImageFrame", te.a),
				ne = s("./src/reddit/components/Widgets/Image/StyledImage.m.less"),
				re = s.n(ne);
			var oe = u.a.img("StyledImage", re.a);
			class ae extends r.a.Component {
				constructor(e) {
					super(e), this.state = {
						imageIndex: this.getRandomIndex(e)
					}
				}
				getRandomIndex(e) {
					if (!e.widget.data.length) return -1;
					let t = Math.floor(Math.random() * e.widget.data.length);
					if (e.widget.data[t].url === b.c) {
						t = -1;
						for (let t = 0; t < e.widget.data.length; t++)
							if (e.widget.data[t].url !== b.c) return t
					}
					return t
				}
				UNSAFE_componentWillReceiveProps(e) {
					const {
						props: t,
						state: s
					} = this;
					e.subredditName === t.subredditName && e.widget.data[s.imageIndex] && e.widget.data[s.imageIndex] === t.widget.data[s.imageIndex] || this.setState(t => ({
						imageIndex: this.getRandomIndex(e)
					}))
				}
				render() {
					const {
						props: e,
						state: t
					} = this;
					if (t.imageIndex < 0) return null;
					const s = e.widget.data[t.imageIndex],
						n = r.a.createElement(se, null, r.a.createElement(oe, {
							alt: I.fbt._("Widget image", null, {
								hk: "2H4O05"
							}),
							src: s.url
						}));
					return s.linkUrl ? r.a.createElement(l.b, {
						href: s.linkUrl
					}, n) : n
				}
			}
			var ie = ae,
				ce = s("./src/config.ts"),
				de = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				le = s("./src/lib/opener/index.ts"),
				me = s("./src/reddit/components/Flair/index.tsx"),
				ue = s("./src/reddit/controls/InternalLink/index.tsx"),
				pe = s("./src/reddit/icons/fonts/Envelope/index.tsx"),
				Ce = s("./src/reddit/models/Flair/index.ts"),
				be = s("./src/reddit/selectors/subreddit.ts"),
				he = s("./src/reddit/components/Widgets/Moderator/index.m.less"),
				fe = s.n(he);
			const ge = u.a.a("ExternalLink", fe.a),
				xe = u.a.div("ModeratorListItem", fe.a),
				ve = u.a.div("Username", fe.a),
				ye = u.a.wrapped(me.c, "FlairComponent", fe.a),
				Oe = e => e.authorFlairType === Ce.f.Richtext ? {
					backgroundColor: e.authorFlairBackgroundColor,
					richtext: e.authorFlairRichText,
					textColor: e.authorFlairTextColor,
					type: e.authorFlairType
				} : {
					backgroundColor: e.authorFlairBackgroundColor,
					text: e.authorFlairText || "",
					textColor: e.authorFlairTextColor,
					type: e.authorFlairType
				},
				Ee = e => r.a.createElement(ve, null, `u/${e}`),
				je = u.a.wrapped(ue.default, "InternalLink", fe.a),
				_e = u.a.div("LinkContainer", fe.a),
				ke = Object(a.c)({
					userIsBanned: be.hb,
					userIsLoggedIn: x.S
				});
			var Le = Object(o.b)(ke)(e => {
					const {
						subredditName: t,
						widget: s,
						userIsBanned: n,
						userIsLoggedIn: o
					} = e;
					return r.a.createElement(c.a, {
						styles: s.styles,
						title: I.fbt._("Moderators", null, {
							hk: "3AMICc"
						})
					}, (s.mods && s.mods.length || n) && r.a.createElement(d.t, {
						kind: d.b.InternalLink,
						priority: d.c.Secondary,
						className: fe.a.MessageModsButton,
						rel: le.c,
						target: le.d.BLANK,
						to: `${ce.a.redditUrl}/message/compose?to=/r/${t}`
					}, r.a.createElement(pe.a, {
						className: fe.a.MessageModsButtonIcon
					}), I.fbt._("Message the mods", null, {
						hk: "4xxTre"
					})), s.mods && s.mods.length && !n ? r.a.createElement(r.a.Fragment, null, s.mods.map(e => r.a.createElement(xe, {
						key: e.name
					}, (e => r.a.createElement(de.a, {
						to: `/user/${e.name}/`
					}, Ee(e.name)))(e), r.a.createElement(ye, {
						flair: Oe(e),
						forceSmallEmojis: !0
					}))), r.a.createElement(_e, null, r.a.createElement(je, {
						to: `/r/${t}/about/moderators/`
					}, I.fbt._("View All Moderators", null, {
						hk: "2DIeXE"
					})))) : n || !o ? r.a.createElement("div", {
						className: fe.a.HelpCenterMessage
					}, I.fbt._("Moderator list hidden.", null, {
						hk: "447TOY"
					}), " ", r.a.createElement(ge, {
						href: `${ce.a.redditHelpUrl}/hc/en-us/articles/360049499032`,
						rel: le.c,
						target: le.d.BLANK
					}, I.fbt._("Learn More", null, {
						hk: "2VxMRZ"
					}))) : r.a.createElement("div", {
						className: fe.a.UnModeratedSubreddit
					}, I.fbt._("This subreddit is unmoderated. Visit", null, {
						hk: "4rFABM"
					}), " ", r.a.createElement(ge, {
						href: `${ce.a.redditUrl}/r/redditrequest`,
						rel: le.c,
						target: le.d.BLANK
					}, I.fbt._("r/redditrequest", null, {
						hk: "32jGtr"
					})), " ", I.fbt._("to request it.", null, {
						hk: "1LPeZR"
					})))
				}),
				we = s("./src/reddit/components/Widgets/PostFlair/index.tsx"),
				Se = s("./src/reddit/components/Widgets/SubredditRules/index.tsx"),
				Ie = s("./src/reddit/components/Widgets/TextArea/index.m.less"),
				Pe = s.n(Ie);
			const Ne = u.a.div("WidgetContent", Pe.a),
				Te = u.a.wrapped(i.a, "RawHTMLDisplay", Pe.a);
			var Me = e => r.a.createElement(c.a, {
					styles: e.widget.styles,
					title: e.widget.shortName,
					truncateThreshold: e.truncateThreshold,
					widgetKind: e.widget.kind
				}, r.a.createElement(Ne, null, r.a.createElement(Te, {
					html: e.widget.textHtml || ""
				}))),
				Re = s("./src/reddit/components/Widgets/Base/index.tsx");
			var Fe = e => r.a.createElement(Re.b, null, "This widget hasn't been implemented yet!");

			function Be(e) {
				const t = function(e) {
					switch (e.kind) {
						case "moderators":
							return Le;
						case "textarea":
							return Me;
						case "button":
							return S;
						case "subreddit-rules":
							return Se.b;
						case "community-list":
							return G;
						case "calendar":
							return q;
						case "image":
							return ie;
						case "custom":
							return $;
						case "post-flair":
							return we.a;
						default:
							return Fe
					}
				}(e.widget);
				return r.a.createElement(t, {
					widget: e.widget,
					subredditName: e.subredditName,
					truncateThreshold: e.truncateThreshold
				})
			}
		},
		"./src/reddit/connectors/PostList/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return _
			})), s.d(t, "d", (function() {
				return L
			})), s.d(t, "b", (function() {
				return S
			}));
			var n = s("./node_modules/react-redux/es/index.js"),
				r = s("./node_modules/reselect/es/index.js"),
				o = s("./src/lib/objectSelector/index.ts"),
				a = s("./src/reddit/actions/ads/index.ts"),
				i = s("./src/reddit/actions/focusedVerticals/index.ts"),
				c = s("./src/reddit/actions/gold/tooltips.ts"),
				d = s("./src/reddit/actions/post.ts"),
				l = s("./src/reddit/actions/postList.ts"),
				m = s("./src/reddit/actions/survey/index.ts"),
				u = s("./src/reddit/components/TrackingHelper/index.tsx"),
				p = s("./src/reddit/contexts/PageLayer/index.tsx"),
				C = s("./src/reddit/helpers/postComponentForLayout/index.tsx"),
				b = s("./src/reddit/helpers/trackers/post.ts"),
				h = s("./src/reddit/components/PostList/Placeholder.tsx"),
				f = s("./src/reddit/featureFlags/index.ts"),
				g = s("./src/reddit/selectors/experiments/hidePostMitigation.ts"),
				x = s("./src/reddit/selectors/experiments/survey.ts"),
				v = s("./src/reddit/selectors/listings.ts"),
				y = s("./src/reddit/selectors/posts.ts"),
				O = s("./src/reddit/selectors/subreddit.ts"),
				E = s("./src/reddit/selectors/tracking.ts"),
				j = s("./src/reddit/selectors/user.ts");

			function _() {
				return Object(p.v)({
					currentProfileName: p.j,
					isCommentPermalink: p.x,
					isCommentsPage: p.y,
					isFrontpage: p.B,
					isProfilePostListing: p.N,
					isTopicPage: p.T,
					pageLayer: e => e
				})
			}
			const k = _(),
				L = {
					apiError: v.c,
					apiPending: v.d,
					measureScrollFPS: f.d.measureScrollFPS,
					layout: (e, t) => t.forcedLayout || Object(p.U)(e, t),
					loadMore: v.g,
					postsById: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(y.S)(e, {
							listingKey: s,
							keepHiddenPosts: Object(g.a)(e)
						})
					},
					postIds: Object(o.a)((e, t) => {
						let {
							listingKey: s,
							listingName: n,
							inSubredditOrProfile: r
						} = t;
						return Object(y.C)(e, s, n, r, Object(g.a)(e))
					}),
					subredditsById: O.eb,
					viewportDataLoaded: E.b,
					pageReferrer: p.X,
					postListPlaceholderComponent: () => h.a,
					isNpsScrollSurveyEnabled: x.e,
					isLoggedIn: j.S
				},
				w = Object(r.c)(L),
				S = e => ({
					onBottomViewed: (t, s) => e(l.c(t, s)),
					onFirstPostChanged: t => e(Object(c.a)(t)),
					adBrandSafetyStatusReceived: t => {
						e(a.d({
							isViewSafe: t
						}))
					},
					openPost: t => {
						t.isFrontpage && e(Object(i.a)({
							lastLoadedEnv: "server"
						})), e(d.K(t))
					},
					fireAdPixelsOfType: (t, s) => {
						e(d.y(t, s))
					},
					trackOnPostEnteredViewport: (t, s, n, r) => {
						e(d.M(t, n, r))
					},
					trackOnPostExitedViewport: (t, s, n, r) => {
						e(d.N(t, n, r))
					},
					showModalOnScroll: () => e(d.ab()),
					surveyTriggerScrollCounted: () => e(Object(m.l)())
				}),
				I = e => Object(C.b)({
					...e
				}),
				P = (e, t, s, n) => {
					const {
						listingKey: r,
						hostPostData: o,
						listingBelowVariant: a
					} = n;
					return Object(b.n)(e, t, "post", r, o, a, void 0)
				},
				N = Object(n.b)(w, S, (e, t, s) => ({
					...e,
					...t,
					...s,
					postComponentForLayout: I,
					postClickEventFactory: P
				}));
			t.a = e => Object(u.c)(k(N(e)))
		},
		"./src/reddit/connectors/connectClickToToggleEditor.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react-redux/es/index.js"),
				r = s("./node_modules/reselect/es/index.js"),
				o = s("./src/reddit/actions/structuredStyles/index.ts"),
				a = s("./src/reddit/selectors/activeModalId.ts"),
				i = s("./src/reddit/selectors/structuredStyles.ts"),
				c = s("./src/reddit/constants/modals.ts");
			const d = Object(r.c)({
				bladeHasUnsavedChanges: i.a,
				isEditing: i.i,
				isBladeEditorDirty: i.h,
				isModalOpen: Object(a.b)(c.a.BLADE_UNSAVED_CHANGES)
			});
			t.a = Object(n.b)(d, (e, t) => {
				let {
					subredditId: s
				} = t;
				return {
					requestCloseBlade: () => s && e(Object(o.h)(s))
				}
			})
		},
		"./src/reddit/constants/componentSizes.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			})), s.d(t, "c", (function() {
				return r
			})), s.d(t, "d", (function() {
				return o
			})), s.d(t, "e", (function() {
				return a
			})), s.d(t, "f", (function() {
				return i
			})), s.d(t, "g", (function() {
				return c
			})), s.d(t, "h", (function() {
				return d
			})), s.d(t, "i", (function() {
				return l
			})), s.d(t, "j", (function() {
				return m
			})), s.d(t, "l", (function() {
				return u
			})), s.d(t, "p", (function() {
				return p
			})), s.d(t, "q", (function() {
				return C
			})), s.d(t, "r", (function() {
				return b
			})), s.d(t, "t", (function() {
				return h
			})), s.d(t, "s", (function() {
				return f
			})), s.d(t, "u", (function() {
				return g
			})), s.d(t, "v", (function() {
				return x
			})), s.d(t, "k", (function() {
				return v
			})), s.d(t, "b", (function() {
				return y
			})), s.d(t, "m", (function() {
				return O
			})), s.d(t, "n", (function() {
				return E
			})), s.d(t, "o", (function() {
				return j
			}));
			const n = 284,
				r = 450,
				o = 800,
				a = 284,
				i = 48,
				c = 640,
				d = 1600,
				l = 40,
				m = 48,
				u = 24,
				p = 24,
				C = 312,
				b = 40,
				h = 270,
				f = 106,
				g = 5,
				x = 16,
				v = 1250,
				y = 82,
				O = 48,
				E = 36,
				j = 40
		},
		"./src/reddit/constants/gold.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			})), s.d(t, "b", (function() {
				return r
			})), s.d(t, "d", (function() {
				return o
			})), s.d(t, "e", (function() {
				return a
			})), s.d(t, "f", (function() {
				return i
			})), s.d(t, "c", (function() {
				return c
			})), s.d(t, "i", (function() {
				return d
			})), s.d(t, "h", (function() {
				return l
			})), s.d(t, "g", (function() {
				return m
			}));
			const n = "ModerationPage--Modal--AddAward",
				r = "ModerationPage--Modal--DeleteAwardConfirmation",
				o = 20,
				a = 4,
				i = 1e4,
				c = .2,
				d = .1,
				l = .1,
				m = 500
		},
		"./src/reddit/constants/keycodes.ts": function(e, t, s) {
			"use strict";
			var n, r;
			s.d(t, "a", (function() {
					return n
				})), s.d(t, "b", (function() {
					return r
				})),
				function(e) {
					e[e.ArrowDown = 40] = "ArrowDown", e[e.ArrowLeft = 37] = "ArrowLeft", e[e.ArrowRight = 39] = "ArrowRight", e[e.ArrowUp = 38] = "ArrowUp", e[e.Backspace = 8] = "Backspace", e[e.Delete = 46] = "Delete", e[e.Enter = 13] = "Enter", e[e.Escape = 27] = "Escape", e[e.F = 70] = "F", e[e.K = 75] = "K", e[e.Space = 32] = "Space", e[e.Tab = 9] = "Tab", e[e.Comma = 188] = "Comma"
				}(n || (n = {})),
				function(e) {
					e.ArrowDown = "ArrowDown", e.ArrowLeft = "ArrowLeft", e.ArrowRight = "ArrowRight", e.ArrowUp = "ArrowUp", e.Backspace = "Backspace", e.Enter = "Enter", e.Escape = "Escape", e.F = "f", e.Tab = "Tab", e.Space = " ", e.Comma = ","
				}(r || (r = {}))
		},
		"./src/reddit/constants/promo.ts": function(e, t, s) {
			"use strict";
			var n, r;
			s.d(t, "b", (function() {
					return n
				})), s.d(t, "a", (function() {
					return r
				})),
				function(e) {
					e.SignupUpsellCell = "signupUpsellBottomCell", e.SignupUpsellCellDismissible = "signupUpsellBottomCellDismissible", e.SignupUpsellBottomSheet = "signupUpsellBottomSheet"
				}(n || (n = {})),
				function(e) {
					e.Shown = "shown", e.Dismissed = "dismissed", e.Completed = "completed"
				}(r || (r = {}))
		},
		"./src/reddit/constants/screenWidths.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return n
			})), s.d(t, "c", (function() {
				return r
			})), s.d(t, "a", (function() {
				return o
			}));
			const n = 480,
				r = 960,
				o = 1200
		},
		"./src/reddit/contexts/ApiContext.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);

			function o() {
				return (o = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const a = {
					apiContext: () => {
						throw new Error("Component attempted to make an API request with no ApiContext")
					},
					gqlContext: () => {
						throw new Error("Component attempted to make an API request with no GqlContext")
					},
					gqlRealtime2Context: () => {
						throw new Error("Component attempted to make an API request with no GqlRealtime2Context")
					}
				},
				i = Object(n.createContext)(a);

			function c(e) {
				const t = t => r.a.createElement(i.Consumer, null, s => {
					let {
						apiContext: n,
						gqlContext: a,
						gqlRealtime2Context: i
					} = s;
					return r.a.createElement(e, o({
						apiContext: n,
						gqlContext: a,
						gqlRealtime2Context: i
					}, t))
				});
				return t.displayName = `WithApiContext(${e.displayName||e.name})`, t
			}
		},
		"./src/reddit/contexts/NavbarExp.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = r.a.createContext(!1)
		},
		"./src/reddit/contexts/Promo/index.ts": function(e, t, s) {
			"use strict";
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./node_modules/lodash/noop.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js");
			const a = o.createContext({
				showPromo: r.a,
				dismissPromo: r.a,
				completePromo: r.a,
				promos: new Map
			});
			t.a = a
		},
		"./src/reddit/contexts/TrackCommentsPageClick.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = r.a.createContext(() => () => {})
		},
		"./src/reddit/contexts/Visibility.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return m
			})), s.d(t, "b", (function() {
				return u
			}));
			var n = s("./node_modules/@researchgate/react-intersection-observer/lib/es/index.js"),
				r = s("./node_modules/raf/index.js"),
				o = s.n(r),
				a = s("./node_modules/react/index.js"),
				i = s.n(a);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const d = {
					rootMargin: "100px 0px",
					threshold: .01
				},
				l = i.a.createContext(!1);
			class m extends i.a.Component {
				constructor() {
					super(...arguments), this.state = {
						isVisible: !1
					}, this.fastIsVisible = !1, this.setVisible = () => {
						this.setState(e => e.isVisible ? null : {
							isVisible: !0
						})
					}, this.scheduleVisibilityChange = () => {
						this.state.isVisible || o()(this.setVisible)
					}, this.handleIntersectionChange = e => {
						const t = e.isIntersecting;
						!this.fastIsVisible && t && (this.scheduleVisibilityChange(), this.fastIsVisible = !0)
					}
				}
				render() {
					const {
						children: e,
						...t
					} = this.props, {
						isVisible: s
					} = this.state, r = {
						...d,
						...t
					};
					return i.a.createElement(n.a, c({}, r, {
						onChange: this.handleIntersectionChange
					}), i.a.createElement("div", null, i.a.createElement(l.Provider, {
						value: s
					}, e)))
				}
			}

			function u() {
				return Object(a.useContext)(l)
			}
		},
		"./src/reddit/controls/Downvote/index.m.less": function(e, t, s) {
			e.exports = {
				Downvote: "Q0BxYHtCOJ_rNSPJMU2Y7",
				downvote: "Q0BxYHtCOJ_rNSPJMU2Y7",
				mIsInteractive: "_2fe-KdD2OM0ciaiux-G1EL",
				mIsActive: "_3emIxnIscWEPB7o5LgU_rn",
				mIsVoteable: "_3yQIOwaIuF6gn8db96Gu7y"
			}
		},
		"./src/reddit/controls/Dropdown/Row.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return f
			}));
			var n = s("./node_modules/lodash/throttle.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/reddit/controls/UnstyledInternalLink/index.tsx"),
				d = s("./src/reddit/icons/fonts/DropdownTriangle/index.tsx"),
				l = s("./src/reddit/icons/svgs/Checkmark/index.tsx"),
				m = s("./src/reddit/layout/row/InlineButton/index.tsx"),
				u = s("./src/reddit/controls/Dropdown/index.m.less"),
				p = s.n(u),
				C = s("./src/reddit/controls/Dropdown/row.m.less"),
				b = s.n(C);

			function h() {
				return (h = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			class f extends a.a.Component {
				constructor() {
					super(...arguments), this.handleMouseMove = r()(() => {
						const {
							props: e
						} = this;
						e.handleActivateRow && e.handleActivateRow(e.index)
					}, 500)
				}
				render() {
					const {
						props: e
					} = this, t = e.skipRoleAttr ? null : {
						role: "menuitem"
					}, s = Object(i.a)(b.a.iconWrapper, e.iconWrapperClassName);
					return e.href ? a.a.createElement(c.a, h({}, t, {
						id: e.id,
						className: e.className,
						onBlur: e.onBlur,
						onClick: e.onClick,
						onMouseDown: e.onMouseDown,
						onMouseMove: this.handleMouseMove,
						onKeyDown: e.onKeydown,
						rel: e.rel,
						to: e.href,
						disabled: e.disabled
					}), e.children && a.a.createElement("span", {
						className: s
					}, e.children), a.a.createElement("span", {
						className: Object(i.a)(b.a.text, e.textClassName)
					}, e.displayText)) : a.a.createElement(m.a, h({}, t, {
						id: e.id,
						className: e.className,
						disabled: e.disabled,
						onBlur: e.onBlur,
						onClick: e.onClick,
						onKeyDown: e.onKeydown,
						onMouseDown: e.onMouseDown,
						onMouseMove: r()(this.handleMouseMove, 500)
					}), e.children && (e.noIcon ? a.a.createElement("div", null, e.children) : a.a.createElement("span", {
						className: s
					}, e.children)), e.displayText && a.a.createElement("span", {
						className: Object(i.a)(b.a.text, e.textClassName)
					}, e.displayText), e.showSelectedCheckmark && e.isSelected && a.a.createElement(l.a, {
						className: b.a.checkmark
					}), e.showDropdownTriangle && a.a.createElement(d.a, {
						className: p.a.dropdownTriangle
					}))
				}
			}
			t.b = e => {
				let {
					className: t,
					...s
				} = e;
				const n = Object(i.a)(b.a.row, t, {
					[b.a.mIsInteractive]: !s.noHover,
					[b.a.mIsSelected]: s.isSelected,
					[b.a.topics]: s.isTopicsStyle
				});
				return a.a.createElement(f, h({
					className: n
				}, s))
			}
		},
		"./src/reddit/controls/Dropdown/row.m.less": function(e, t, s) {
			e.exports = {
				iconWrapper: "pthKOcceozMuXLYrLlbL1",
				text: "_2-cXnP74241WI7fpcpfPmg",
				row: "_3LwUIE7yX7CZQKmD2L87vf",
				topics: "kR_ljR-F8vtc-ORj1uipB",
				checkmark: "_3Iua3qlR9JiTwjjk6NKye1",
				muteSubreddit: "ui39KJ4PwbdKkxvIBbLbV",
				modNotes: "sK8_uuNiAqPNlw-HoD2HG",
				mIsSelected: "_1IKtbRloF_LV1hPqMzP3MC",
				mIsInteractive: "_1oYEKCssGFjqxQ9jJMNj5G"
			}
		},
		"./src/reddit/controls/ImageInput/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			class o extends r.a.Component {
				constructor(e) {
					super(e), this.onFileInput = e => {
						const t = e.currentTarget.files,
							s = this.props.multiple ? [...t] : t[0];
						this.props.onChange(s), this.setState(() => ({
							value: s
						}))
					}, this.state = {
						value: e.value || ""
					}
				}
				static getDerivedStateFromProps(e, t) {
					return {
						value: t.value || e.value || ""
					}
				}
				render() {
					const {
						props: e,
						state: t
					} = this, s = "string" == typeof t.value ? t.value : "", n = "object" == typeof t.value ? t.value : null, o = s || n;
					return r.a.createElement("div", {
						className: e.className
					}, s && r.a.createElement("input", {
						id: e.inputId,
						ref: e.inputRef,
						name: e.name,
						readOnly: !0,
						type: "text",
						value: s,
						tabIndex: e.tabIndex
					}), (!o || e.multiple || void 0 !== e.isPending && !e.isPending) && r.a.createElement("input", {
						id: e.inputId,
						ref: e.inputRef,
						name: e.name,
						type: "file",
						onChange: this.onFileInput,
						accept: "image/x-png,image/jpeg",
						multiple: e.multiple || !1,
						tabIndex: e.tabIndex
					}))
				}
			}
		},
		"./src/reddit/controls/Input/ModalInput.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/actions/modal.ts"),
				c = s("./src/reddit/constants/keycodes.ts"),
				d = s("./src/reddit/controls/Input/index.m.less"),
				l = s.n(d);

			function m() {
				return (m = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			class u extends r.a.Component {
				constructor() {
					super(...arguments), this.handleKeyDown = e => {
						let {
							keyCode: t
						} = e;
						t === c.a.Escape && this.props.closeModal()
					}
				}
				render() {
					const {
						className: e,
						closeModal: t,
						...s
					} = this.props;
					return r.a.createElement("input", m({
						className: Object(a.a)(l.a.input, e),
						onKeyDown: this.handleKeyDown
					}, s))
				}
			}
			t.a = Object(o.b)(null, {
				closeModal: i.f
			})(u)
		},
		"./src/reddit/controls/Input/index.m.less": function(e, t, s) {
			e.exports = {
				input: "_3eoXtlBWKbkFYoOHUIcIgK"
			}
		},
		"./src/reddit/controls/MetaData/index.m.less": function(e, t, s) {
			e.exports = {
				metaText: "_2ETuFsVzMBxiHia6HfJCTQ"
			}
		},
		"./src/reddit/controls/MetaData/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return l
			})), s.d(t, "c", (function() {
				return m
			})), s.d(t, "b", (function() {
				return u
			})), s.d(t, "d", (function() {
				return p
			}));
			var n = s("./node_modules/fbt/lib/FbtPublic.js"),
				r = s("./node_modules/react/index.js"),
				o = s.n(r),
				a = s("./src/lib/lessComponent.tsx"),
				i = s("./src/lib/prettyPrintNumber/index.ts"),
				c = (s("./src/lib/timeAgo/index.ts"), s("./src/reddit/controls/MetaData/index.m.less")),
				d = s.n(c);
			const l = a.a.span("metaText", d.a),
				m = e => o.a.createElement(l, e, " · "),
				u = e => {
					let {
						isScoreHidden: t,
						score: s,
						useUpvotes: r,
						...a
					} = e;
					const c = Object(i.b)(s),
						d = n.fbt._({
							"*": "{number} upvotes",
							_1: "1 upvote"
						}, [n.fbt._plural(s, "number", c)], {
							hk: "2L3T21"
						}),
						m = t ? n.fbt._("Score hidden", null, {
							hk: "SDk6B"
						}) : r ? d : n.fbt._({
							"*": "{number} points",
							_1: "1 point"
						}, [n.fbt._plural(s, "number", c)], {
							hk: "gf67v"
						});
					return o.a.createElement(l, a, m)
				},
				p = e => o.a.createElement(l, null, n.fbt._({
					"*": "{number} comments",
					_1: "1 comment"
				}, [n.fbt._plural(e, "number", Object(i.b)(e))], {
					hk: "3bVMk9"
				}))
		},
		"./src/reddit/controls/TextButton/index.m.less": function(e, t, s) {
			e.exports = {
				textButton: "qYzY57HWQ8W424hj3s10-"
			}
		},
		"./src/reddit/controls/TextButton/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/controls/TextButton/index.m.less"),
				i = s.n(a);
			t.a = e => r.a.createElement("button", {
				children: e.children,
				className: Object(o.a)(i.a.textButton, e.className),
				disabled: e.disabled,
				onClick: e.onClick
			})
		},
		"./src/reddit/controls/UnstyledInternalLink/index.m.less": function(e, t, s) {
			e.exports = {
				unstyledInternalLink: "_39Glgtoolpdt4PIzcnjPSW"
			}
		},
		"./src/reddit/controls/UnstyledInternalLink/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/lib/lessComponent.tsx"),
				r = s("./src/reddit/controls/InternalLink/index.tsx"),
				o = s("./src/reddit/controls/UnstyledInternalLink/index.m.less"),
				a = s.n(o);
			t.a = n.a.wrapped(r.default, "unstyledInternalLink", a.a)
		},
		"./src/reddit/controls/Upvote/index.m.less": function(e, t, s) {
			e.exports = {
				Upvote: "_3SUsITjKNQ7Tp0Wi2jGxIM",
				upvote: "_3SUsITjKNQ7Tp0Wi2jGxIM",
				mIsInteractive: "qW0l8Af61EP35WIG6vnGk",
				mIsActive: "Z3lT0VGlALek4Q9j0ZQCr",
				mIsVoteable: "_3edNsMs0PNfyQYofMNVhsG"
			}
		},
		"./src/reddit/endpoints/eligibleUXExperiences/eligibleUxExperiences.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			})), s.d(t, "b", (function() {
				return d
			})), s.d(t, "c", (function() {
				return l
			}));
			var n = s("./src/lib/makeGqlRequest/index.ts"),
				r = s("./node_modules/react/index.js"),
				o = s("./src/reddit/hooks/useGqlContext.ts"),
				a = s("./src/redditGQL/operations/FetchEligibleUXExperiences.json"),
				i = s("./src/redditGQL/operations/StoreUxTargetingAction.json");
			const c = (e, t, s) => {
					const r = {
						experienceInputs: t
					};
					return s && (r.clientContext = s), Object(n.a)(e, {
						...a,
						variables: r
					})
				},
				d = (e, t) => Object(n.a)(e, {
					...i,
					variables: {
						input: t
					}
				}),
				l = (e, t, s) => {
					const n = Object(o.a)();
					return Object(r.useCallback)(() => d(n(), {
						action: t,
						eligibleExperience: e,
						source: s
					}), [n, e, t, s])
				}
		},
		"./src/reddit/endpoints/onboarding/languageSelections.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			})), s.d(t, "b", (function() {
				return c
			})), s.d(t, "c", (function() {
				return d
			})), s.d(t, "d", (function() {
				return l
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./src/lib/makeGqlRequest/index.ts");
			var r, o = s("./src/redditGQL/operations/LanguageSelections.json"),
				a = s("./src/redditGQL/operations/UpdateSpokenLanguagesPreference.json");
			! function(e) {
				e.ALL_KEY = "all_languages_simple", e.SUGGESTED_KEY = "suggested_languages", e.TOP_KEYS = "top_languages"
			}(r || (r = {}));
			const i = (e, t) => {
					const s = {
						allKey: e,
						suggestedKey: r.SUGGESTED_KEY
					};
					return Object(n.a)(t, {
						...o,
						variables: s
					})
				},
				c = async e => {
					const t = await i(r.ALL_KEY, e());
					if (!t.ok) return null;
					const s = t.body,
						n = null == s ? void 0 : s.data;
					return n ? (e => {
						const t = {},
							s = e.identity.preferences.spokenLanguages || [];
						return e.all.map(e => {
							t[e.isoCode] = e.translatedDisplayName
						}), {
							languages: t,
							preferences: s
						}
					})(n) : null
				}, d = async (e, t, s) => {
					const n = await i(e, t());
					if (!n.ok) return null;
					const o = n.body,
						a = null == o ? void 0 : o.data;
					if (a) {
						return ((e, t, s) => {
							let n = null,
								r = [];
							const o = [],
								a = [],
								i = {},
								c = {};
							if (!e) {
								t.identity.preferences.spokenLanguages.map(e => {
									c[e] = !0
								})
							}
							for (let d = 0; d < t.suggested.length; d++) {
								const r = t.suggested[d];
								if (i[r.isoCode] = !0, s === r.isoCode) n = r;
								else {
									if (!e && c[r.isoCode]) continue; {
										const t = !!(e || !e && c[r.isoCode]);
										o.push({
											selected: t,
											...r
										})
									}
								}
							}
							for (let d = 0; d < t.all.length; d++) {
								const o = t.all[d];
								o.isoCode === s ? (n = o, a.push({
									selected: !0,
									...o
								})) : !e && c[o.isoCode] ? a.push({
									selected: !0,
									...o
								}) : i[o.isoCode] || r.push({
									selected: !(e || !c[o.isoCode]),
									...o
								})
							}
							if (r = o.concat(r), null === n) {
								const e = s.split("-").shift();
								for (let t = 0; t < r.length; t++)
									if (r[t].isoCode === e) {
										n = r[t], r.splice(t, 1);
										break
									}
							}
							return n && ((e || !e && c[n.isoCode]) && (n.selected = !0), r.unshift(n)), e || (r = a.concat(r)), {
								sortedLanguages: r
							}
						})(e === r.TOP_KEYS, a, s)
					}
					return null
				}, l = async (e, t) => {
					const s = await ((e, t) => {
						const s = {
							input: {
								spokenLanguages: t
							}
						};
						return Object(n.a)(e, {
							...a,
							variables: s
						})
					})(e(), Object.keys(t));
					if (!s.ok) return null;
					const r = s.body;
					return null == r ? void 0 : r.data
				}
		},
		"./src/reddit/endpoints/subreddit/newCommunityProgress.ts": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return d
			})), s.d(t, "e", (function() {
				return l
			})), s.d(t, "a", (function() {
				return m
			})), s.d(t, "b", (function() {
				return u
			})), s.d(t, "c", (function() {
				return p
			}));
			var n = s("./src/redditGQL/operations/CompleteCommunityProgressCard.json"),
				r = s("./src/redditGQL/operations/CompleteCommunityProgressModule.json"),
				o = s("./src/redditGQL/operations/DismissCommunityProgressCard.json"),
				a = s("./src/redditGQL/operations/DismissCommunityProgressCardV2.json"),
				i = s("./src/lib/makeGqlRequest/index.ts"),
				c = s("./src/reddit/actions/subreddit/questions.ts");
			const d = (e, t) => Object(i.a)(e, {
					...o,
					variables: t
				}),
				l = (e, t) => Object(i.a)(e, {
					...a,
					variables: t
				}),
				m = (e, t) => Object(i.a)(e, {
					...n,
					variables: t
				}),
				u = (e, t) => Object(i.a)(e, {
					...r,
					variables: t
				}),
				p = (e, t) => async (s, n, r) => {
					let {
						gqlContext: o
					} = r;
					const a = {
						input: {
							subredditId: e,
							moduleId: t
						}
					};
					await u(o(), a), s(Object(c.b)(e))
				}
		},
		"./src/reddit/helpers/author.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			const n = e => !!e && e.endsWith("-ModTeam")
		},
		"./src/reddit/helpers/brandSafety/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			}));
			var n = s("./src/reddit/models/WhitelistStatus/index.ts");
			const r = (e, t) => {
				const s = e.some(e => e.isNSFW),
					r = t.some(e => e.wls === n.b.NO_ADS);
				return !s && !r
			}
		},
		"./src/reddit/helpers/chat/isEmbeddedLiveChat.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			})), s.d(t, "b", (function() {
				return o
			}));
			const n = ["true", "1"],
				r = e => {
					var t;
					return n.includes(null !== (t = new URLSearchParams(e).get("livechat_embed")) && void 0 !== t ? t : "")
				},
				o = e => {
					var t;
					return n.includes(null !== (t = e.queryParams.livechat_embed) && void 0 !== t ? t : "")
				}
		},
		"./src/reddit/helpers/counters/nsfwBypassableBlocking.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			})), s.d(t, "b", (function() {
				return c
			})), s.d(t, "c", (function() {
				return d
			}));
			var n, r = s("./src/lib/constants/index.ts"),
				o = s("./src/lib/sample/index.ts"),
				a = s("./src/reddit/helpers/counters/nsfwblocking.ts"),
				i = s("./src/telemetry/helpers/sendCounter.ts");
			! function(e) {
				e.Continue = "continue", e.Dismiss = "dismiss", e.Login = "login", e.View = "view"
			}(n || (n = {}));
			const c = e => {
					Object(a.b)() || Object(i.b)(r.n.Redesign, {
						type: i.a.NsfwBypassableBlocking,
						data: {
							action: e
						}
					})
				},
				d = e => {
					!Object(a.b)() && e && Object(o.b)(10) && Object(i.b)(r.n.Redesign, {
						type: i.a.NsfwBypassableBlocking,
						data: {
							action: n.View,
							variant: e
						}
					})
				}
		},
		"./src/reddit/helpers/counters/nsfwblocking.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return a
			})), s.d(t, "a", (function() {
				return i
			})), s.d(t, "c", (function() {
				return c
			})), s.d(t, "d", (function() {
				return d
			}));
			var n = s("./src/lib/constants/index.ts"),
				r = s("./src/lib/sample/index.ts"),
				o = s("./src/telemetry/helpers/sendCounter.ts");
			const a = () => !1;
			var i;
			! function(e) {
				e.Dismiss = "dismiss", e.Login = "login", e.Signup = "signup", e.View = "view"
			}(i || (i = {}));
			const c = e => {
					a() || Object(o.b)(n.n.Redesign, {
						type: o.a.NsfwBlocking,
						data: {
							action: e
						}
					})
				},
				d = e => {
					!a() && e && Object(r.b)(10) && Object(o.b)(n.n.Redesign, {
						type: o.a.NsfwBlocking,
						data: {
							action: i.View,
							variant: e
						}
					})
				}
		},
		"./src/reddit/helpers/createBannerProperties/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			s("./src/lib/isFakeSubreddit/index.ts"), s("./src/reddit/constants/postLayout.ts");
			Math.floor(100 * Math.random());
			var n;
			! function(e) {
				e.FIRST = "first", e.MIDDLE = "middle", e.BOTTOM = "bottom"
			}(n || (n = {}))
		},
		"./src/reddit/helpers/datadome.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n, r = s("./src/lib/constants/index.ts");
			! function(e) {
				e.Enabled = "datadome-bot-detection.enabled", e.Disabled = "datadome-bot-detection.disabled"
			}(n || (n = {}));
			const o = () => a() ? n.Enabled : n.Disabled,
				a = () => null !== document.getElementById(r.C)
		},
		"./src/reddit/helpers/getSubredditErrorProps/index.ts": function(e, t, s) {
			"use strict";
			var n = s("./src/reddit/models/ContentGate.ts");
			t.a = (e, t, s) => {
				let r, o, a, i, c, d, l, m, u, p, C, b;
				return e ? e.quarantinedSubreddit ? (a = n.a.QuarantinedSubreddit, c = e.quarantineMessage, d = e.quarantineMessageHtml, l = e.quarantineRequiresEmail) : e.privateSubreddit ? (a = n.a.PrivateSubreddit, i = e.subredditDescription, m = e.isContributorRequestsDisabled, u = e.isContributorRequestTimestamp) : e.goldSubreddit ? a = n.a.GoldSubreddit : e.subredditBanned ? (a = n.a.SubredditBanned, r = e.subredditBanMessage, o = e.subredditBanTitle) : e.subredditDoesNotExist ? a = n.a.SubredditDoesNotExist : e.subredditBlockedForLegalReason ? a = n.a.SubredditBlockedForLegalReason : e.interstitialWarningMessage && (a = n.a.GatedSubreddit, p = e.interstitialWarningMessage, C = e.interstitialWarningMessageHtml, b = e.interstitialWarningMessageRTJson) : t && (a = n.a.Nsfw), a && s ? {
					banMessage: r,
					banTitle: o,
					contentGateType: a,
					isContributorRequestsDisabled: m,
					isContributorRequestTimestamp: u,
					subredditDescription: i,
					subredditName: s,
					quarantineMessage: c,
					quarantineMessageHtml: d,
					quarantineRequiresEmail: l,
					interstitialWarningMessage: p,
					interstitialWarningMessageHtml: C,
					interstitialWarningMessageRTJson: b
				} : void 0
			}
		},
		"./src/reddit/helpers/getSubredditIcon/index.ts": function(e, t, s) {
			"use strict";
			var n = s("./src/reddit/models/Theme/NewColorSystem/index.ts");
			t.a = e => e.theme && Object(n.a)(e).banner.iconImage ? String(Object(n.a)(e).banner.iconImage) : e.subredditOrProfile ? e.subredditOrProfile.communityIcon || e.subredditOrProfile.icon.url : e.subreddit ? e.subreddit.communityIcon || e.subreddit.icon.url : void 0
		},
		"./src/reddit/helpers/graphql/normalizePostsFromGql/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			}));
			var n = s("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts");
			const r = e => {
				let {
					edges: t
				} = e;
				const s = [];
				for (const {
						node: r
					} of t) s.push(Object(n.f)(r));
				return s
			}
		},
		"./src/reddit/helpers/handleOtherDiscussionsResponse/index.ts": function(e, t, s) {
			"use strict";
			var n = s("./src/lib/makeListingKey/index.ts"),
				r = s("./src/reddit/helpers/graphql/normalizePostFlairFromGql/index.ts"),
				o = s("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts"),
				a = s("./src/reddit/helpers/graphql/normalizeProfileFromGql/index.ts"),
				i = s("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts"),
				c = s("./src/reddit/models/Post/index.ts");
			t.a = e => {
				let {
					getState: t,
					onFailure: s,
					onSuccess: d,
					postId: l,
					response: m
				} = e;
				if (!m.ok) return void s(m.error);
				const u = m.body,
					{
						post: p
					} = u && u.data,
					C = t(),
					b = Object(n.a)(l, null, {
						isOtherDiscussions: !0
					});
				if (p) {
					if (p.otherDiscussions && p.otherDiscussionsCount) {
						const {
							otherDiscussions: e,
							otherDiscussionsCount: t
						} = p, {
							postFlair: s,
							postIds: n,
							posts: m,
							profiles: u,
							subreddits: h
						} = (e => {
							const t = {
									postFlair: {},
									postIds: [],
									posts: {},
									profiles: {},
									subreddits: {}
								},
								s = e => {
									const s = Object(o.f)(e);
									t.posts[s.id] = s;
									const {
										crosspostRoot: n
									} = e;
									if (n && n.type === c.a.Post && n.postInfo) {
										const e = Object(o.f)(n.postInfo);
										t.posts[e.id] = e
									}
									return Object(c.l)(e) ? t.profiles[e.profile.id] || (t.profiles[e.profile.id] = Object(a.a)(e.profile)) : Object(c.n)(e) && (t.subreddits[e.subreddit.id] || (t.subreddits[e.subreddit.id] = Object(i.a)(e.subreddit)), t.postFlair[e.subreddit.id] || (t.postFlair[e.subreddit.id] = Object(r.a)(e.subreddit))), s.id
								};
							if (e && e.edges)
								for (const {
										node: n
									} of e.edges) {
									const e = s(n);
									e && t.postIds.push(e)
								}
							return t
						})(e);
						d({
							count: t,
							key: b,
							meta: C.meta,
							postFlair: s,
							postId: l,
							postIds: n,
							posts: m,
							profiles: u,
							subreddits: h
						})
					}
				} else d({
					count: 0,
					key: b,
					meta: C.meta,
					postFlair: {},
					postId: l,
					postIds: [],
					posts: {},
					profiles: {},
					subreddits: {}
				})
			}
		},
		"./src/reddit/helpers/karma.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			const n = e => {
				if (!e || !e.karma) return 0;
				const {
					total: t,
					...s
				} = e.karma;
				return t || Object.values(s).reduce((e, t) => e + (t || 0), 0)
			}
		},
		"./src/reddit/helpers/resonatePage/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			const n = e => {
				window.resonateAnalytics && window.resonateAnalytics.initialize || function() {
					const e = window.resonateAnalytics = window.resonateAnalytics || [];
					if (!e.initialize) {
						if (e.invoked) return;
						e.invoked = !0, e.methods = ["trackSubmit", "trackClick", "trackLink", "trackForm", "pageview", "identify", "reset", "group", "track", "ready", "alias", "debug", "page", "once", "off", "on", "profile"], e.factory = function(t) {
							return function() {
								const s = Array.prototype.slice.call(arguments);
								return s.unshift(t), e.push(s), e
							}
						};
						for (let t = 0; t < e.methods.length; t++) {
							const s = e.methods[t];
							e[s] = e.factory(s)
						}
						e.load = function(e) {
							const t = document.createElement("script");
							t.type = "text/javascript", t.async = !0, t.src = ("https:" === document.location.protocol ? "https://" : "http://") + "cdn.resonate.com/analytics.js/v1/" + e + "/analytics.min.js";
							const s = document.getElementsByTagName("script")[0];
							s.parentNode.insertBefore(t, s)
						}, e.SNIPPET_VERSION = "1.0.0", e.load("101117480")
					}
				}(), window.resonateAnalytics && window.resonateAnalytics.page && window.resonateAnalytics.page(e)
			}
		},
		"./src/reddit/helpers/search/searchResultsTabTo.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return a
			})), s.d(t, "b", (function() {
				return i
			}));
			var n = s("./src/lib/addQueryParams/index.ts"),
				r = s("./src/reddit/constants/history.ts"),
				o = s("./src/reddit/helpers/history/index.ts");
			const a = "/search/",
				i = e => {
					let {
						searchType: t,
						pageLayer: s
					} = e;
					var i;
					const {
						type: c,
						...d
					} = (null == s ? void 0 : s.queryParams) || {}, l = {
						...d,
						type: t,
						sort: void 0,
						t: void 0
					};
					return {
						pathname: (null === (i = null == s ? void 0 : s.routeMatch) || void 0 === i ? void 0 : i.match.url) || a,
						search: Object(n.a)("", {
							...l
						}),
						state: {
							[r.b.SearchOriginPage]: Object(o.b)(r.b.SearchOriginPage)
						}
					}
				}
		},
		"./src/reddit/helpers/styles/mixins/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "e", (function() {
				return u
			})), s.d(t, "c", (function() {
				return p
			})), s.d(t, "b", (function() {
				return b
			})), s.d(t, "a", (function() {
				return h
			})), s.d(t, "d", (function() {
				return f
			}));
			var n = s("./node_modules/polished/dist/polished.es.js"),
				r = s("./src/reddit/helpers/styles/postBackgroundColor.ts"),
				o = s("./src/reddit/helpers/styles/smartTextColor.ts"),
				a = s("./src/reddit/models/NewStructuredStyles/index.ts"),
				i = s("./src/reddit/models/Theme/index.ts"),
				c = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				d = s("./src/reddit/helpers/styles/mixins/index.m.less"),
				l = s.n(d);
			const m = {},
				u = e => Object(i.f)(Object(c.a)(e).post, Object(c.a)(e).backgroundImage, Object(c.a)(e).backgroundImagePosition),
				p = (e, t) => {
					if (e) {
						if (e.postBackgroundImage) return {
							background: Object(i.f)(e.postBackgroundColor || Object(c.a)(t).post, e.postBackgroundImage, Object(c.a)(t).backgroundImagePosition)
						};
						if (e.postBackgroundColor) return {
							background: Object(i.f)(e.postBackgroundColor, null, null)
						}
					}
					return {
						background: u(t)
					}
				},
				C = e => Object(n.k)(.2, e),
				b = e => e && e.postBackgroundColor ? {
					backgroundColor: C(e.postBackgroundColor)
				} : m,
				h = e => e.isActive ? l.a.mIsActive : void 0,
				f = e => {
					const t = Object(o.a)(Object(r.a)(e), a.a.actionIcon, a.b.actionIcon);
					return {
						color: t,
						cursor: "pointer",
						fill: t
					}
				}
		},
		"./src/reddit/helpers/styles/mixins/loading.m.less": function(e, t, s) {
			e.exports = {
				loadingBackground: "fzTkuBRFT8iIn1XnJX_Yn",
				"m-loading": "_34yMY7-6MNnz3utfjExvIq",
				mLoading: "_34yMY7-6MNnz3utfjExvIq",
				gradientAnimation: "vnt666wwqSK5qL63sBn9P",
				loadingBar: "_3giTODNeZ-Po90u8Ghs4aI",
				loadingContainer: "VRC9QT7CgUxvhK0ceQSrn"
			}
		},
		"./src/reddit/helpers/styles/mixins/loading.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return a
			})), s.d(t, "b", (function() {
				return i
			}));
			var n = s("./src/lib/classNames/index.ts"),
				r = s("./src/reddit/helpers/styles/mixins/loading.m.less"),
				o = s.n(r);
			const a = e => {
					let {
						isLoading: t
					} = e;
					return Object(n.a)(o.a.loadingBackground, {
						[o.a["m-loading"]]: t
					})
				},
				i = e => Object(n.a)(o.a.loadingBar, a(e))
		},
		"./src/reddit/helpers/styles/postBackgroundColor.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			}));
			s("./node_modules/polished/dist/polished.es.js");
			var n = s("./src/reddit/models/Theme/NewColorSystem/index.ts");

			function r(e) {
				return e.flairStyleTemplate && e.flairStyleTemplate.postBackgroundColor ? e.flairStyleTemplate.postBackgroundColor : Object(n.a)(e).post
			}
		},
		"./src/reddit/helpers/trackers/authControls.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			})), s.d(t, "c", (function() {
				return c
			})), s.d(t, "b", (function() {
				return d
			}));
			var n = s("./src/reddit/constants/tracking.ts"),
				r = s("./src/reddit/selectors/platform.ts"),
				o = s("./src/reddit/selectors/telemetry.ts");
			const a = e => {
					const t = Object(r.o)(e);
					return {
						actionInfo: Object(o.d)(e),
						post: t && Object(o.M)(e, t) || null,
						profile: Object(o.V)(e),
						screen: Object(o.eb)(e),
						subreddit: Object(o.nb)(e)
					}
				},
				i = e => t => ({
					source: e,
					action: n.c.CLICK,
					noun: "login",
					...a(t)
				}),
				c = e => t => ({
					source: e,
					action: n.c.CLICK,
					noun: "signup",
					...a(t)
				}),
				d = () => e => ({
					source: "user_dropdown",
					action: n.c.CLICK,
					noun: "login_signup",
					...a(e)
				})
		},
		"./src/reddit/helpers/trackers/communityProgressModule.ts": function(e, t, s) {
			"use strict";
			s.d(t, "g", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			})), s.d(t, "f", (function() {
				return i
			})), s.d(t, "c", (function() {
				return c
			})), s.d(t, "a", (function() {
				return d
			})), s.d(t, "e", (function() {
				return l
			})), s.d(t, "d", (function() {
				return m
			}));
			var n = s("./src/reddit/selectors/telemetry.ts");

			function r(e, t) {
				return {
					moduleName: e.id,
					cardName: t
				}
			}
			const o = (e, t) => s => ({
					...Object(n.q)(s),
					source: "new_community_setup",
					action: "view",
					noun: "progress_module",
					progressModule: r(e),
					actionInfo: {
						pageType: "community",
						reason: t
					},
					subreddit: Object(n.nb)(s)
				}),
				a = (e, t, s) => o => ({
					...Object(n.q)(o),
					source: "new_community_setup",
					action: "click",
					noun: "card_action_button",
					progressModule: r(e, t),
					actionInfo: {
						pageType: "community",
						...s && {
							reason: s
						}
					},
					subreddit: Object(n.nb)(o)
				}),
				i = e => t => ({
					...Object(n.q)(t),
					source: "new_community_setup",
					action: "click",
					noun: "expand_progress_module",
					progressModule: r(e),
					actionInfo: {
						pageType: "community",
						reason: "expanded_module"
					},
					subreddit: Object(n.nb)(t)
				}),
				c = e => t => ({
					...Object(n.q)(t),
					source: "new_community_setup",
					action: "click",
					noun: "collapse_progress_module",
					progressModule: r(e),
					actionInfo: {
						pageType: "community",
						reason: "collapses_module"
					},
					subreddit: Object(n.nb)(t)
				}),
				d = (e, t) => s => ({
					...Object(n.q)(s),
					source: "new_community_setup",
					action: "click",
					noun: "card_menu_button",
					progressModule: r(e, t),
					actionInfo: {
						pageType: "community"
					},
					subreddit: Object(n.nb)(s)
				}),
				l = (e, t) => s => ({
					...Object(n.q)(s),
					source: "new_community_setup",
					action: "click",
					noun: "dismiss",
					progressModule: r(e, t),
					actionInfo: {
						pageType: "community"
					},
					subreddit: Object(n.nb)(s)
				}),
				m = (e, t) => s => ({
					...Object(n.q)(s),
					source: "new_community_setup",
					action: "click",
					noun: "complete",
					progressModule: r(e, t),
					actionInfo: {
						pageType: "community"
					},
					subreddit: Object(n.nb)(s)
				})
		},
		"./src/reddit/helpers/trackers/features/expandedCrossposts.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return r
			})), s.d(t, "a", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			}));
			var n = s("./src/reddit/selectors/telemetry.ts");
			const r = (e, t) => s => ({
					source: "post_discovery",
					action: "view",
					noun: "crosspost",
					post: e,
					subreddit: t,
					...n.q(s)
				}),
				o = (e, t) => s => ({
					source: "post_discovery",
					action: "click",
					noun: "crosspost",
					post: e,
					subreddit: t,
					...n.q(s)
				}),
				a = () => e => ({
					source: "post_discovery",
					action: "click",
					noun: "crosspost_see_all",
					...n.q(e)
				})
		},
		"./src/reddit/helpers/trackers/features/powerupsFlair.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return i
			})), s.d(t, "a", (function() {
				return c
			}));
			var n = s("./src/reddit/helpers/flair.ts"),
				r = s("./src/reddit/selectors/comments.ts"),
				o = s("./src/reddit/selectors/gold/powerups/flairs.ts"),
				a = s("./src/reddit/selectors/telemetry.ts");
			const i = (e, t, s) => i => {
					const c = Object(r.e)(i, {
							commentId: e
						}),
						d = Object(o.f)(i, {
							subredditId: t,
							userId: s
						});
					return {
						source: "meta",
						action: "hover",
						noun: "achieve_flair",
						...a.q(i),
						subreddit: {
							id: t
						},
						userFlair: {
							id: null == c ? void 0 : c.templateId,
							title: c ? Object(n.g)(c) : void 0,
							achievementFlairId: null == d ? void 0 : d.type,
							achievementFlairTitle: null == d ? void 0 : d.name
						}
					}
				},
				c = () => e => ({
					source: "powerups",
					action: "click",
					noun: "view_your_achievements",
					...a.q(e)
				})
		},
		"./src/reddit/helpers/trackers/navigation.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return o
			})), s.d(t, "d", (function() {
				return a
			})), s.d(t, "b", (function() {
				return i
			})), s.d(t, "e", (function() {
				return c
			})), s.d(t, "a", (function() {
				return d
			}));
			s("./src/reddit/constants/categories.tsx");
			var n = s("./src/reddit/selectors/telemetry.ts");
			const r = e => ({
					screen: n.eb(e),
					profile: n.V(e),
					subreddit: n.nb(e)
				}),
				o = e => t => ({
					action: "click",
					source: "nav",
					noun: e,
					...r(t)
				}),
				a = (e, t) => s => ({
					action: "click",
					source: "nav",
					noun: e,
					...r(s),
					topicMetadata: {
						displayName: t
					}
				}),
				i = e => t => ({
					...r(t),
					source: "sort_switch",
					action: "click",
					noun: e
				}),
				c = e => t => ({
					...r(t),
					source: "time_sort_switch",
					action: "click",
					noun: e
				}),
				d = e => t => ({
					...r(t),
					source: "nav",
					action: "click",
					noun: `lang_${e}`
				})
		},
		"./src/reddit/helpers/trackers/nsfwSignupBypassableUpsell.ts": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return o
			})), s.d(t, "a", (function() {
				return a
			})), s.d(t, "c", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			}));
			var n = s("./src/reddit/selectors/telemetry.ts");
			const r = "nsfw_dialog_bypassable",
				o = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "view",
					noun: r,
					actionInfo: {
						...Object(n.d)(e)
					}
				}),
				a = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "click",
					noun: r,
					actionInfo: {
						...Object(n.d)(e),
						popupButtonText: "login"
					}
				}),
				i = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "dismiss",
					noun: r,
					actionInfo: {
						...Object(n.d)(e),
						popupButtonText: "back"
					}
				}),
				c = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "click",
					noun: r,
					actionInfo: {
						...Object(n.d)(e),
						popupButtonText: "continue"
					}
				})
		},
		"./src/reddit/helpers/trackers/nsfwSignupUpsell.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return o
			})), s.d(t, "a", (function() {
				return a
			})), s.d(t, "b", (function() {
				return i
			}));
			var n = s("./src/reddit/selectors/telemetry.ts");
			const r = "nsfw_dialog",
				o = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "view",
					noun: r,
					actionInfo: {
						...Object(n.d)(e)
					}
				}),
				a = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "click",
					noun: r,
					actionInfo: {
						...Object(n.d)(e)
					}
				}),
				i = () => e => ({
					...Object(n.q)(e),
					source: "xpromo",
					action: "dismiss",
					noun: r,
					actionInfo: {
						...Object(n.d)(e)
					}
				})
		},
		"./src/reddit/helpers/trackers/otherDiscussions.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			}));
			var n = s("./src/reddit/selectors/telemetry.ts");
			const r = (e, t) => ({
					...Object(n.q)(e),
					media: Object(n.E)(e, t),
					profile: Object(n.V)(e),
					subreddit: Object(n.nb)(e) || Object(n.qb)(e, t)
				}),
				o = e => t => ({
					source: "post",
					action: "click",
					noun: "other_discussions",
					post: Object(n.M)(t, e),
					...r(t, e)
				}),
				a = e => t => ({
					source: "other_discussions",
					action: "click",
					noun: "dismiss",
					post: Object(n.M)(t, e),
					...r(t, e)
				})
		},
		"./src/reddit/helpers/trackers/predictions.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return a
			})), s.d(t, "p", (function() {
				return i
			})), s.d(t, "m", (function() {
				return c
			})), s.d(t, "n", (function() {
				return d
			})), s.d(t, "l", (function() {
				return l
			})), s.d(t, "b", (function() {
				return m
			})), s.d(t, "f", (function() {
				return u
			})), s.d(t, "k", (function() {
				return p
			})), s.d(t, "q", (function() {
				return C
			})), s.d(t, "e", (function() {
				return b
			})), s.d(t, "i", (function() {
				return h
			})), s.d(t, "d", (function() {
				return f
			})), s.d(t, "g", (function() {
				return g
			})), s.d(t, "c", (function() {
				return x
			})), s.d(t, "j", (function() {
				return v
			})), s.d(t, "h", (function() {
				return y
			})), s.d(t, "o", (function() {
				return O
			}));
			var n = s("./src/reddit/models/Prediction/index.ts"),
				r = s("./src/reddit/selectors/telemetry.ts");
			const o = "poll",
				a = "predictions",
				i = e => ({
					...Object(r.q)(e),
					source: o,
					action: "view",
					noun: "predict_option_modal"
				}),
				c = e => {
					let {
						pollId: t,
						selectedNumberCoins: s,
						totalStakeAmount: n
					} = e;
					return e => ({
						...Object(r.q)(e),
						source: o,
						action: "confirm",
						noun: "predict",
						poll: Object(r.L)(e, t, !1, void 0, s),
						goldPurchase: {
							numberCoins: n
						}
					})
				},
				d = e => {
					let {
						pollId: t,
						selectedNumberTokens: s
					} = e;
					return e => ({
						...Object(r.q)(e),
						source: o,
						action: "confirm",
						noun: "predict",
						poll: Object(r.L)(e, t, !1, void 0, void 0, s)
					})
				},
				l = e => {
					let {
						pollId: t,
						currency: s,
						amount: a
					} = e;
					return e => {
						const i = s === n.a.Coins ? a : void 0,
							c = s === n.a.Tokens ? a : void 0;
						return {
							...Object(r.q)(e),
							source: o,
							action: "close",
							noun: "prediction_modal",
							poll: Object(r.L)(e, t, !1, i, c)
						}
					}
				},
				m = e => ({
					...Object(r.q)(e),
					source: o,
					action: "click",
					noun: "add_coins"
				}),
				u = e => {
					let {
						targetUserId: t
					} = e;
					return e => ({
						...Object(r.q)(e),
						source: a,
						action: "click",
						noun: "leaderboard_profile",
						targetUser: {
							id: t
						}
					})
				},
				p = e => {
					let {
						pageType: t
					} = e;
					return e => ({
						...Object(r.q)(e),
						source: a,
						action: "click",
						noun: "tournament",
						actionInfo: {
							pageType: t
						}
					})
				},
				C = () => e => ({
					...Object(r.q)(e),
					source: "global",
					action: "view",
					noun: "screen",
					actionInfo: {
						pageType: "mod_tool_predict"
					}
				}),
				b = () => e => ({
					...Object(r.q)(e),
					source: "mod_tool_predict",
					action: "click",
					noun: "end_tournament"
				}),
				h = () => e => ({
					...Object(r.q)(e),
					source: "mod_tool_predict",
					action: "click",
					noun: "rename_tournament"
				}),
				f = e => t => ({
					...Object(r.q)(t),
					source: "mod_tool_predict",
					action: "click",
					noun: "enable_predictions",
					actionInfo: {
						pageType: "predictions_picker"
					},
					setting: {
						value: e ? "1" : "0",
						oldValue: e ? "0" : "1"
					},
					subreddit: Object(r.nb)(t)
				}),
				g = () => e => ({
					...Object(r.q)(e),
					source: a,
					action: "click",
					noun: "next"
				}),
				x = () => e => ({
					...Object(r.q)(e),
					source: a,
					action: "click",
					noun: "add_more"
				}),
				v = () => e => ({
					...Object(r.q)(e),
					source: a,
					action: "click",
					noun: "start_tournament"
				}),
				y = () => e => ({
					...Object(r.q)(e),
					source: "menu_links_bar",
					action: "click",
					noun: "predictions_tab"
				}),
				O = () => e => ({
					...Object(r.q)(e),
					source: "predictions_tab",
					action: "view",
					noun: "predictions_how_it_works",
					subreddit: Object(r.nb)(e)
				})
		},
		"./src/reddit/helpers/trackers/subredditMuting.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			})), s.d(t, "b", (function() {
				return a
			}));
			var n = s("./src/reddit/selectors/telemetry.ts"),
				r = s("./src/telemetry/models/Event.ts");
			const o = e => {
					let {
						subredditId: t,
						postId: s
					} = e;
					return e => ({
						source: r.e.SubredditMuting,
						action: r.c.Mute,
						noun: r.d.Subreddit,
						subreddit: {
							id: t
						},
						...n.q(e),
						...s && {
							post: {
								id: s
							}
						}
					})
				},
				a = e => {
					let {
						subredditId: t,
						postId: s
					} = e;
					return e => ({
						source: r.e.SubredditMuting,
						action: r.c.Unmute,
						noun: r.d.Subreddit,
						subreddit: {
							id: t
						},
						...n.q(e),
						...s && {
							post: {
								id: s
							}
						}
					})
				}
		},
		"./src/reddit/helpers/trackers/subredditWiki.ts": function(e, t, s) {
			"use strict";
			s.d(t, "f", (function() {
				return a
			})), s.d(t, "g", (function() {
				return i
			})), s.d(t, "m", (function() {
				return d
			})), s.d(t, "d", (function() {
				return l
			})), s.d(t, "k", (function() {
				return m
			})), s.d(t, "q", (function() {
				return u
			})), s.d(t, "r", (function() {
				return p
			})), s.d(t, "c", (function() {
				return C
			})), s.d(t, "j", (function() {
				return b
			})), s.d(t, "p", (function() {
				return h
			})), s.d(t, "e", (function() {
				return f
			})), s.d(t, "b", (function() {
				return g
			})), s.d(t, "i", (function() {
				return x
			})), s.d(t, "a", (function() {
				return v
			})), s.d(t, "h", (function() {
				return y
			})), s.d(t, "l", (function() {
				return O
			})), s.d(t, "n", (function() {
				return j
			})), s.d(t, "o", (function() {
				return _
			}));
			var n = s("./src/reddit/models/SubredditWikiPage/index.ts"),
				r = s("./src/reddit/selectors/telemetry.ts");
			const o = e => ({
					...r.q(e),
					subreddit: r.nb(e),
					userSubreddit: r.wb(e)
				}),
				a = () => e => ({
					source: "wiki",
					action: "click",
					noun: "edit",
					...o(e)
				}),
				i = () => e => ({
					source: "menu_links_bar",
					action: "click",
					noun: "wiki",
					...o(e)
				}),
				c = e => t => ({
					source: "wiki",
					action: "click",
					noun: e,
					...o(t)
				}),
				d = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
					return c(e ? "create_wiki_page" : "save_wiki_page")
				},
				l = c("compare_wiki_pages"),
				m = c("revert_wiki_page"),
				u = c("view_wiki_page"),
				p = c("view_source"),
				C = c("add_wiki_page_contributor"),
				b = c("remove_wiki_page_contributor"),
				h = c("save_wiki_page_settings"),
				f = c("copy_url"),
				g = c("add_wiki_subreddit_contributor"),
				x = c("remove_wiki_subreddit_contributor"),
				v = c("ban_wiki_contributor"),
				y = c("unban_wiki_contributor"),
				O = e => c(e ? "show_wiki_revision" : "hide_wiki_revision"),
				E = {
					[n.a.Inherit]: "subreddit_wiki_perms",
					[n.a.Contributors]: "only_wiki_contributors",
					[n.a.Mods]: "only_mods"
				},
				j = e => t => ({
					...o(t),
					source: "wiki",
					action: "click",
					noun: "hide_show_page",
					actionInfo: r.d(t, {
						settingValue: e ? "show" : "hide"
					})
				}),
				_ = e => t => ({
					...o(t),
					source: "wiki",
					action: "click",
					noun: "editing_permissions",
					actionInfo: r.d(t, {
						settingValue: E[e]
					})
				})
		},
		"./src/reddit/helpers/trackers/widgets.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return i
			})), s.d(t, "a", (function() {
				return c
			})), s.d(t, "d", (function() {
				return d
			})), s.d(t, "c", (function() {
				return l
			}));
			var n, r, o = s("./src/reddit/constants/tracking.ts"),
				a = s("./src/reddit/selectors/telemetry.ts");
			! function(e) {
				e.REREDDIT_PROMO = "rereddit_promo", e.SEE_MORE = "see_more", e.TOPIC = "topic", e.TOPICS_WIDGET = "topics_widget"
			}(n || (n = {})),
			function(e) {
				e.COMMUNITY_WIDGETS = "community_widgets", e.POST = "post", e.SIDEBAR = "sidebar", e.TOPICS_WIDGET = "topics_widget"
			}(r || (r = {}));
			const i = (e, t) => s => ({
					source: r.COMMUNITY_WIDGETS,
					action: o.c.CLICK,
					noun: n.SEE_MORE,
					widget: Object(a.Ab)(s, {
						subredditId: e,
						widgetKind: t
					}),
					...a.q
				}),
				c = (e, t) => s => ({
					source: r.POST,
					action: o.c.CLICK,
					noun: n.REREDDIT_PROMO,
					post: a.M(s, e),
					subreddit: a.nb(s),
					...t && {
						banner: {
							buttonText: t,
							id: n.REREDDIT_PROMO
						}
					},
					...a.q(s)
				}),
				d = () => e => ({
					source: r.SIDEBAR,
					action: o.c.VIEW,
					noun: n.TOPICS_WIDGET,
					...a.q(e)
				}),
				l = e => t => ({
					source: r.TOPICS_WIDGET,
					action: o.c.CLICK,
					noun: n.TOPIC,
					...a.q(t),
					topicMetadata: {
						displayName: e
					}
				})
		},
		"./src/reddit/hooks/promo/useIsPromoShown.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./src/reddit/constants/promo.ts"),
				r = s("./src/reddit/hooks/usePromoContext.ts");

			function o(e) {
				const {
					promos: t
				} = Object(r.a)();
				return !!e && t.get(e) === n.a.Shown
			}
		},
		"./src/reddit/hooks/promo/useIsSignupUpsellVariantEligible.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./node_modules/react-redux/es/index.js"),
				r = s("./src/reddit/selectors/experiments/signupUpsellExperiment.ts");

			function o(e) {
				const t = Object(n.e)(r.a) === e,
					s = Object(n.e)(r.c) === e,
					o = Object(n.e)(r.e) === e;
				return t || s || o
			}
		},
		"./src/reddit/hooks/useGqlContext.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./node_modules/react/index.js"),
				r = s("./src/reddit/contexts/ApiContext.tsx");

			function o() {
				const {
					gqlContext: e
				} = Object(n.useContext)(r.a);
				return e
			}
		},
		"./src/reddit/hooks/useIsClient.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			}));
			var n = s("./node_modules/react/index.js");

			function r() {
				const [e, t] = Object(n.useState)(!1);
				return Object(n.useEffect)(() => {
					setTimeout(t, 1, !0)
				}, []), e
			}
		},
		"./src/reddit/hooks/usePromoContext.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s("./src/reddit/contexts/Promo/index.ts");
			t.a = function() {
				return Object(n.useContext)(r.a)
			}
		},
		"./src/reddit/icons/fonts/DistinguishShield/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => r.a.createElement("i", {
				className: Object(o.a)(Object(a.b)("distinguish", e.isFilled), e.className)
			})
		},
		"./src/reddit/icons/fonts/Downvote/index.m.less": function(e, t, s) {
			e.exports = {
				compactDownvote: "_2GCoZTwJW7199HSwNZwlHk",
				compactDownvoteWrapper: "jR747Vd1NbfaLusf5bHre",
				downvote: "ZyxIIl4FP5gHGrJDzNpUC",
				downvoteWrapper: "_1iKd82bq_nqObFvSH1iC_Q"
			}
		},
		"./src/reddit/icons/fonts/Downvote/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/fonts/helpers.tsx"),
				i = s("./src/reddit/icons/fonts/Downvote/index.m.less"),
				c = s.n(i);

			function d() {
				return (d = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const l = e => r.a.createElement("i", {
				className: Object(o.a)(Object(a.b)("downvote", e.isFilled), c.a.downvote, e.className)
			});
			t.a = e => {
				let {
					compact: t,
					isFilled: s,
					...n
				} = e;
				return t ? r.a.createElement("span", d({}, n, {
					className: Object(o.a)(c.a.compactDownvoteWrapper, n.className)
				}), r.a.createElement(l, {
					className: c.a.compactDownvote,
					isFilled: s
				})) : r.a.createElement("span", d({}, n, {
					className: Object(o.a)(c.a.downvoteWrapper, n.className)
				}), r.a.createElement(l, {
					isFilled: s
				}))
			}
		},
		"./src/reddit/icons/fonts/DropdownTriangle/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => r.a.createElement("i", {
				className: `${Object(o.b)("caret_down",e.isFilled)} ${e.className}`
			})
		},
		"./src/reddit/icons/fonts/Envelope/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => r.a.createElement("i", {
				className: `${Object(o.b)("message",e.isFilled)} ${e.className}`
			})
		},
		"./src/reddit/icons/fonts/Expand/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => r.a.createElement("i", {
				className: Object(o.a)(Object(a.b)("expand", e.isFilled), e.className)
			})
		},
		"./src/reddit/icons/fonts/IgnoreReport/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => r.a.createElement("i", {
				className: `${Object(o.b)("ignore_reports",e.isFilled)} ${e.className}`
			})
		},
		"./src/reddit/icons/fonts/ModSettings/index.m.less": function(e, t, s) {
			e.exports = {
				ModSettings: "_3-SW6hQX6gXK9G4FM74obr",
				modSettings: "_3-SW6hQX6gXK9G4FM74obr"
			}
		},
		"./src/reddit/icons/fonts/ModSettings/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/fonts/helpers.tsx"),
				i = s("./src/reddit/icons/fonts/ModSettings/index.m.less"),
				c = s.n(i);
			t.a = e => r.a.createElement("i", {
				className: Object(o.a)(c.a.ModSettings, Object(a.b)("mod", e.isFilled), e.className)
			})
		},
		"./src/reddit/icons/fonts/Upvote/index.m.less": function(e, t, s) {
			e.exports = {
				compactUpvote: "_39UOLMgvssWenwbRxz_iEn",
				compactUpvoteWrapper: "_3wVayy5JvIMI67DheMYra2",
				upvote: "_2Jxk822qXs4DaXwsN7yyHA",
				upvoteWrapper: "_2q7IQ0BUOWeEZoeAxN555e"
			}
		},
		"./src/reddit/icons/fonts/Upvote/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return l
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/fonts/helpers.tsx"),
				i = s("./src/reddit/icons/fonts/Upvote/index.m.less"),
				c = s.n(i);

			function d() {
				return (d = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const l = e => r.a.createElement("i", {
				className: Object(o.a)(Object(a.b)("upvote", e.isFilled), c.a.upvote, e.className)
			});
			t.b = e => {
				let {
					compact: t,
					isFilled: s,
					...n
				} = e;
				return t ? r.a.createElement("span", d({}, n, {
					className: Object(o.a)(c.a.compactUpvoteWrapper, n.className)
				}), r.a.createElement(l, {
					className: c.a.compactUpvote,
					isFilled: s
				})) : r.a.createElement("span", d({}, n, {
					className: Object(o.a)(c.a.upvoteWrapper, n.className)
				}), r.a.createElement(l, {
					isFilled: s
				}))
			}
		},
		"./src/reddit/icons/svgs/ArrowRight/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);

			function o() {
				return (o = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => r.a.createElement("svg", o({
				viewBox: "0 0 11.4 11.4",
				version: "1.1",
				xmlns: "http://www.w3.org/2000/svg"
			}, e), r.a.createElement("g", null, r.a.createElement("path", {
				fill: "inherit",
				d: "m11.17929,5.99479c0.08081,-0.19519 0.08081,-0.41599 0,-0.61118c-0.0408,-0.0984 -0.0992,-0.1864 -0.17361,-0.2608l-4.79963,-4.79911c-0.31283,-0.3128 -0.81847,-0.3128 -1.1313,0c-0.31283,0.31279 -0.31283,0.81918 0,1.13118l3.43471,3.43433l-7.66949,0c-0.44244,0 -0.80007,0.3584 -0.80007,0.79999c0,0.44159 0.35763,0.79999 0.80007,0.79999l7.66949,0l-3.43471,3.43433c-0.31283,0.3128 -0.31283,0.81919 0,1.13118c0.15601,0.156 0.36083,0.2344 0.56565,0.2344c0.20482,0 0.40964,-0.0784 0.56565,-0.2344l4.79963,-4.79911c0.07441,-0.0744 0.13281,-0.1624 0.17361,-0.2608"
			})))
		},
		"./src/reddit/icons/svgs/Checkmark/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 22",
				xmlns: "http://www.w3.org/2000/svg"
			}, r.a.createElement("g", null, r.a.createElement("path", {
				d: "M8.9310375,15.1995 C8.70135,15.41825 8.38963125,15.541375 8.0647875,15.541375 C8.052975,15.541375 8.04181875,15.54075 8.03000625,15.54075 C7.69335,15.531375 7.37506875,15.39075 7.15063125,15.151375 L4.0879125,11.88075 C3.637725,11.400125 3.68169375,10.662625 4.18700625,10.23325 C4.6916625,9.805125 5.4660375,9.846375 5.91688125,10.327625 L8.115975,12.676375 L14.8550063,6.25825 C15.3327563,5.802625 16.1091,5.802625 16.5875063,6.25825 C17.0659125,6.71325 17.0659125,7.452625 16.5875063,7.907625 L8.9310375,15.1995 Z",
				fill: "inherit"
			})))
		},
		"./src/reddit/icons/svgs/CircleCheckLight/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			const o = e => r.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, r.a.createElement("path", {
				d: "M18.04 7.67457C18.5905 9.55741 18.4654 11.5734 17.6865 13.3738C16.9076 15.1742 15.5238 16.6457 13.7746 17.5336C12.0254 18.4215 10.0209 18.67 8.1078 18.2362C6.19473 17.8023 4.49351 16.7133 3.29851 15.1576C2.10351 13.602 1.48992 11.6775 1.5639 9.71728C1.63788 7.75702 2.39478 5.88429 3.70364 4.42313C5.01249 2.96197 6.79095 2.00431 8.73128 1.71586C10.6716 1.42742 12.6517 1.82633 14.329 2.84357L15.189 1.90557C13.2556 0.658893 10.9412 0.141738 8.661 0.446834C6.38077 0.75193 4.2838 1.85932 2.74608 3.57044C1.20837 5.28156 0.330485 7.4845 0.269845 9.78425C0.209205 12.084 0.969774 14.3301 2.41518 16.1199C3.86058 17.9097 5.89628 19.1261 8.15726 19.5509C10.4182 19.9757 12.7566 19.5813 14.7531 18.4382C16.7496 17.2952 18.2736 15.4783 19.0519 13.3134C19.8301 11.1485 19.8118 8.77715 19 6.62457L18.04 7.67457Z",
				fill: "inherit"
			}), r.a.createElement("path", {
				d: "M9.99503 12.6426C9.91293 12.6427 9.83162 12.6266 9.75577 12.5952C9.67991 12.5638 9.61101 12.5177 9.55303 12.4596L5.54703 8.45257L6.43203 7.56957L9.97603 11.1146L19.013 1.24657L19.935 2.08957L10.456 12.4396C10.3989 12.5013 10.3298 12.5509 10.253 12.5852C10.1762 12.6196 10.0932 12.6381 10.009 12.6396L9.99503 12.6426Z",
				fill: "inherit"
			}))
		},
		"./src/reddit/icons/svgs/CircledPlanet/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);

			function o() {
				return (o = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => r.a.createElement("svg", o({
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}, e), r.a.createElement("path", {
				d: "M15.8286,15.8998 C15.3466,16.3788 12.6326,15.5598 8.5516,11.4798 C4.4706,7.3968 3.6486,4.6858 4.1316,4.2038 C4.3566,3.9788 4.9286,3.9208 5.9126,4.3518 C5.6166,4.5678 5.3306,4.8008 5.0666,5.0658 C5.0536,5.0798 5.0416,5.0948 5.0266,5.1098 C5.5756,6.4268 6.8946,8.4088 9.2596,10.7728 C11.6206,13.1338 13.6046,14.4538 14.9246,15.0028 C14.9376,14.9898 14.9526,14.9778 14.9666,14.9638 C15.2316,14.6988 15.4646,14.4128 15.6786,14.1178 C16.1096,15.1028 16.0526,15.6748 15.8286,15.8998 M16.7526,11.8998 C17.4066,9.5458 16.8136,6.9138 14.9666,5.0658 C13.6436,3.7438 11.8866,3.0148 10.0166,3.0148 C9.3686,3.0148 8.7356,3.1078 8.1286,3.2768 C5.7306,1.7598 3.9176,1.5898 2.7176,2.7898 C1.4036,4.1028 2.0736,6.1918 3.2866,8.1688 C2.6446,10.5128 3.2276,13.1258 5.0666,14.9638 C6.3886,16.2868 8.1456,17.0148 10.0166,17.0148 C10.6536,17.0148 11.2746,16.9178 11.8736,16.7518 C13.0856,17.4938 14.3406,18.0318 15.4316,18.0318 C16.1156,18.0318 16.7366,17.8198 17.2426,17.3138 C18.4416,16.1138 18.2706,14.2988 16.7526,11.8998"
			}))
		},
		"./src/reddit/icons/svgs/ClearFilled/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				onClick: e.onClick,
				onMouseUp: e.onMouseUp,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 40 40"
			}, r.a.createElement("path", {
				d: "M20 2.5C10.3 2.5 2.5 10.3 2.5 20c0 9.7 7.8 17.5 17.5 17.5S37.5 29.7 37.5 20C37.5 10.3 29.7 2.5 20 2.5zM24.2 27.7L20 23.5l-4.2 4.2c-1.1 1.1-2.5 1.1-3.5 0-1.1-1.1-1.1-2.4 0-3.5l4.2-4.2-4.2-4.2c-1.1-1.1-1.1-2.5 0-3.5 1.1-1.1 2.4-1.1 3.5 0l4.2 4.2 4.2-4.2c1.1-1.1 2.5-1.1 3.5 0 1.1 1.1 1.1 2.4 0 3.5L23.5 20l4.2 4.2c1.1 1.1 1.1 2.5 0 3.5C26.7 28.8 25.3 28.8 24.2 27.7z"
			}))
		},
		"./src/reddit/icons/svgs/Comments/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => {
				let {
					className: t
				} = e;
				return r.a.createElement("svg", {
					className: t,
					xmlns: "http://www.w3.org/2000/svg",
					viewBox: "0 0 20 20"
				}, r.a.createElement("path", {
					d: "M15 4V3a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h1V6a2 2 0 0 1 2-2z"
				}), r.a.createElement("path", {
					d: "M17 5H6a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h3.36l1.76 1.83a.5.5 0 0 0 .75 0L13.64 16H17a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1z"
				}))
			}
		},
		"./src/reddit/icons/svgs/CommunityDefault/filled.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);

			function o() {
				return (o = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => r.a.createElement("svg", o({
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}, e), r.a.createElement("path", {
				d: "M16.5,2.924,11.264,15.551H9.91L15.461,2.139h.074a9.721,9.721,0,1,0,.967.785ZM8.475,8.435a1.635,1.635,0,0,0-.233.868v4.2H6.629V6.2H8.174v.93h.041a2.927,2.927,0,0,1,1.008-.745,3.384,3.384,0,0,1,1.453-.294,3.244,3.244,0,0,1,.7.068,1.931,1.931,0,0,1,.458.151l-.656,1.558a2.174,2.174,0,0,0-1.067-.246,2.159,2.159,0,0,0-.981.215A1.59,1.59,0,0,0,8.475,8.435Z"
			}))
		},
		"./src/reddit/icons/svgs/LiveChat/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);

			function o() {
				return (o = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => r.a.createElement("svg", o({
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 16 16",
				stroke: "white"
			}, e), r.a.createElement("path", {
				d: "M1.17567 6.90708L1.17579 6.9071L1.17765 6.89503C1.61505 4.05191 3.95864 1.69386 6.90278 1.17649C11.5294 0.445398 15.5469 4.48817 14.7445 9.01081L14.7433 9.01787L14.7422 9.02495C14.3037 11.8753 11.9552 14.2237 9.10488 14.6623L9.10486 14.6621L9.09283 14.6642C7.41037 14.9568 5.80338 14.5919 4.48582 13.7867L4.249 13.642L3.98282 13.7206L1.45885 14.4663L2.19817 12.0209L2.27918 11.7529L2.13322 11.5141C1.31702 10.1785 0.886321 8.57086 1.17567 6.90708Z",
				strokeWidth: "1.25",
				strokeMiterlimit: "10",
				strokeLinecap: "square"
			}), r.a.createElement("path", {
				d: "M8.00018 12.3201C10.386 12.3201 12.3202 10.3859 12.3202 8.00005C12.3202 5.61418 10.386 3.68005 8.00018 3.68005C5.61431 3.68005 3.68018 5.61418 3.68018 8.00005C3.68018 10.3859 5.61431 12.3201 8.00018 12.3201Z",
				strokeWidth: "1.25",
				strokeMiterlimit: "10"
			}), r.a.createElement("path", {
				d: "M8.00008 9.92008C9.06047 9.92008 9.92008 9.06047 9.92008 8.00008C9.92008 6.93969 9.06047 6.08008 8.00008 6.08008C6.93969 6.08008 6.08008 6.93969 6.08008 8.00008C6.08008 9.06047 6.93969 9.92008 8.00008 9.92008Z",
				strokeWidth: "1.25",
				strokeMiterlimit: "10"
			}))
		},
		"./src/reddit/icons/svgs/ModRemove/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, r.a.createElement("g", null, r.a.createElement("path", {
				d: "M13.0303,11.4697 C13.3233,11.7627 13.3233,12.2377 13.0303,12.5307 C12.8843,12.6767 12.6923,12.7497 12.5003,12.7497 C12.3083,12.7497 12.1163,12.6767 11.9693,12.5307 L10.0003,10.5607 L8.0303,12.5307 C7.8843,12.6767 7.6923,12.7497 7.5003,12.7497 C7.3083,12.7497 7.1163,12.6767 6.9693,12.5307 C6.6763,12.2377 6.6763,11.7627 6.9693,11.4697 L8.9393,9.4997 L6.9693,7.5307 C6.6763,7.2377 6.6763,6.7627 6.9693,6.4697 C7.2623,6.1767 7.7373,6.1767 8.0303,6.4697 L10.0003,8.4397 L11.9693,6.4697 C12.2623,6.1767 12.7373,6.1767 13.0303,6.4697 C13.3233,6.7627 13.3233,7.2377 13.0303,7.5307 L11.0603,9.4997 L13.0303,11.4697 Z M17.2753,3.0377 L10.2753,1.0377 C10.0953,0.9877 9.9053,0.9877 9.7253,1.0377 L2.7253,3.0377 C2.2963,3.1607 2.0003,3.5537 2.0003,3.9997 L2.0003,10.9997 C2.0003,16.6887 9.4093,18.8707 9.7253,18.9617 C9.8153,18.9877 9.9073,18.9997 10.0003,18.9997 C10.0923,18.9997 10.1853,18.9877 10.2753,18.9617 C10.5903,18.8707 18.0003,16.6887 18.0003,10.9997 L18.0003,3.9997 C18.0003,3.5537 17.7043,3.1607 17.2753,3.0377 L17.2753,3.0377 Z",
				id: "path-1"
			})))
		},
		"./src/reddit/icons/svgs/Moderate/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/constants/colors.ts");
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, e.desc && r.a.createElement("desc", null, e.desc), r.a.createElement("path", {
				d: "M1.88,3.32V9a11.53,11.53,0,0,0,8,11L10,20l.08,0a11.53,11.53,0,0,0,8-11V3.32A11.57,11.57,0,0,1,10,0,11.57,11.57,0,0,1,1.88,3.32"
			}), r.a.createElement("circle", {
				cx: "18",
				cy: "3",
				r: "5",
				fill: e.isUnread ? "white" : "none"
			}), r.a.createElement("circle", {
				cx: "18",
				cy: "3",
				r: "4",
				fill: e.isUnread ? o.a.orangered : "none"
			}))
		},
		"./src/reddit/icons/svgs/NSFWWarningIcon/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			var n, r = s("./node_modules/react/index.js"),
				o = s.n(r);
			! function(e) {
				e.BLACK = "#0F1A1C", e.DEFAULT = "#FF585B"
			}(n || (n = {}));
			t.b = e => o.a.createElement("svg", {
				className: e.className,
				fill: "none",
				height: "60",
				viewBox: "0 0 60 60",
				xmlns: "http://www.w3.org/2000/svg",
				width: "60"
			}, o.a.createElement("path", {
				d: "M34.87 27.6302C35.4007 27.9589 36.0158 28.1257 36.64 28.1102C37.2902 28.1403 37.9354 27.9841 38.5 27.6602C38.9989 27.4003 39.4148 27.0052 39.7 26.5202C40.004 26.0401 40.1654 25.4835 40.1654 24.9152C40.1654 24.3469 40.004 23.7903 39.7 23.3102C39.4148 22.8252 38.9989 22.4302 38.5 22.1702C37.9681 21.8768 37.3671 21.7318 36.76 21.7502C36.1864 21.7434 35.6198 21.8773 35.11 22.1402C34.6039 22.3874 34.1776 22.7721 33.88 23.2502C33.5564 23.7276 33.3887 24.2936 33.4 24.8702C33.3891 25.429 33.5346 25.9797 33.82 26.4602C34.0597 26.9366 34.4222 27.3405 34.87 27.6302Z",
				fill: e.fill || n.DEFAULT
			}), o.a.createElement("path", {
				d: "M38.68 33.0002C38.0443 32.6933 37.3457 32.5392 36.64 32.5502C35.9438 32.5394 35.255 32.6936 34.63 33.0002C34.05 33.278 33.5609 33.715 33.22 34.2602C32.8649 34.7654 32.6744 35.3678 32.6744 35.9852C32.6744 36.6026 32.8649 37.205 33.22 37.7102C33.5748 38.2212 34.0623 38.6257 34.63 38.8802C35.2562 39.1836 35.9442 39.3376 36.64 39.3302C37.3454 39.3379 38.0432 39.184 38.68 38.8802C39.2591 38.6169 39.7565 38.2023 40.12 37.6802C40.4537 37.1836 40.6313 36.5985 40.63 36.0002C40.6324 35.383 40.4552 34.7784 40.12 34.2602C39.7602 33.7199 39.2632 33.2851 38.68 33.0002Z",
				fill: e.fill || n.DEFAULT
			}), o.a.createElement("path", {
				d: "M54.52 20.1902L39.31 4.9802C38.0246 3.68674 36.4962 2.66024 34.8126 1.95977C33.129 1.25929 31.3235 0.898682 29.5 0.898682C27.6765 0.898682 25.871 1.25929 24.1874 1.95977C22.5038 2.66024 20.9753 3.68674 19.69 4.9802L4.47996 20.1902C3.1865 21.4756 2.16 23.004 1.45952 24.6876C0.75905 26.3712 0.398438 28.1767 0.398438 30.0002C0.398438 31.8237 0.75905 33.6292 1.45952 35.3128C2.16 36.9964 3.1865 38.5249 4.47996 39.8102L19.69 55.0202C20.9753 56.3137 22.5038 57.3402 24.1874 58.0406C25.871 58.7411 27.6765 59.1017 29.5 59.1017C31.3235 59.1017 33.129 58.7411 34.8126 58.0406C36.4962 57.3402 38.0246 56.3137 39.31 55.0202L54.52 39.8102C55.8134 38.5249 56.8399 36.9964 57.5404 35.3128C58.2409 33.6292 58.6015 31.8237 58.6015 30.0002C58.6015 28.1767 58.2409 26.3712 57.5404 24.6876C56.8399 23.004 55.8134 21.4756 54.52 20.1902ZM23.92 43.5002H18.19V24.8402L13.27 27.0002V21.6602L22.27 17.5802H23.95L23.92 43.5002ZM44.92 40.1102C44.0432 41.3133 42.8485 42.2483 41.47 42.8102C39.9566 43.453 38.3292 43.7843 36.685 43.7843C35.0407 43.7843 33.4133 43.453 31.9 42.8102C30.5371 42.2355 29.3552 41.3025 28.48 40.1102C27.651 38.9798 27.2091 37.612 27.22 36.2102C27.2015 34.9552 27.5565 33.723 28.24 32.6702C28.9308 31.5703 29.8778 30.6542 31 30.0002C30.1811 29.3345 29.5237 28.4921 29.0768 27.5361C28.63 26.5801 28.4054 25.5354 28.42 24.4802C28.3942 23.1593 28.7708 21.8619 29.5 20.7602C30.2375 19.6425 31.2781 18.758 32.5 18.2102C33.8234 17.6075 35.2607 17.2956 36.715 17.2956C38.1692 17.2956 39.6065 17.6075 40.93 18.2102C42.1475 18.765 43.1863 19.648 43.93 20.7602C44.6492 21.8441 45.0255 23.1195 45.01 24.4202C45.0008 25.4585 44.7654 26.4823 44.32 27.4202C43.8573 28.3643 43.2034 29.202 42.4 29.8802C43.5275 30.5247 44.4842 31.43 45.19 32.5202C45.8864 33.5797 46.2519 34.8224 46.24 36.0902C46.2595 37.5496 45.7717 38.9705 44.86 40.1102H44.92Z",
				fill: e.fill || n.DEFAULT
			}))
		},
		"./src/reddit/icons/svgs/Show/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}, r.a.createElement("path", {
				d: "M17.71,10.29,14.95,7.54a7,7,0,0,0-9.9,0L2.29,10.29a1,1,0,0,0,1.41,1.41L6.46,8.95c.07-.07.14-.11.21-.17a4,4,0,1,0,6.65,0c.07.06.15.11.21.17l2.76,2.76a1,1,0,0,0,1.41-1.41Z"
			}))
		},
		"./src/reddit/icons/svgs/Snoo/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/constants/colors.ts");
			t.a = e => r.a.createElement("svg", {
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20",
				className: e.className
			}, r.a.createElement("g", null, r.a.createElement("circle", {
				fill: o.a.snoo,
				cx: "10",
				cy: "10",
				r: "10"
			}), r.a.createElement("path", {
				fill: "#FFF",
				d: "M16.67,10A1.46,1.46,0,0,0,14.2,9a7.12,7.12,0,0,0-3.85-1.23L11,4.65,13.14,5.1a1,1,0,1,0,.13-0.61L10.82,4a0.31,0.31,0,0,0-.37.24L9.71,7.71a7.14,7.14,0,0,0-3.9,1.23A1.46,1.46,0,1,0,4.2,11.33a2.87,2.87,0,0,0,0,.44c0,2.24,2.61,4.06,5.83,4.06s5.83-1.82,5.83-4.06a2.87,2.87,0,0,0,0-.44A1.46,1.46,0,0,0,16.67,10Zm-10,1a1,1,0,1,1,1,1A1,1,0,0,1,6.67,11Zm5.81,2.75a3.84,3.84,0,0,1-2.47.77,3.84,3.84,0,0,1-2.47-.77,0.27,0.27,0,0,1,.38-0.38A3.27,3.27,0,0,0,10,14a3.28,3.28,0,0,0,2.09-.61A0.27,0.27,0,1,1,12.48,13.79Zm-0.18-1.71a1,1,0,1,1,1-1A1,1,0,0,1,12.29,12.08Z"
			})))
		},
		"./src/reddit/icons/svgs/SnooFacepalm/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 24 21",
				xmlns: "http://www.w3.org/2000/svg"
			}, r.a.createElement("path", {
				fill: "#000",
				d: "M5.1 3.2c.5.3 1.1.3 1.7.1 1.4-.5 2.9-.9 4.5-.7 1.2.2 1.8.2 2.3.4 1 .4 2 .9 3 1.4.5.3 1 .8 1.5 1.2.2.2.5.4.7.4 2.4-.1 4.1 1 5 3.3.8 2-.5 4.5-2 5.1-.3.1-.6.4-.7.7-.6 2-1.9 3.3-3.7 4.2-.1.1-.2.1-.3.1-.7.3-3.9 1.7-7.9 1-4.8-.9-9.3-4.6-8.7-10.2.1-1 0-1.9-.3-2.9-.2-.2-.2-.5-.2-.8.1-2.7 2.9-4.6 5.1-3.3z"
			}), r.a.createElement("path", {
				fill: "#FFF",
				d: "M.7 7.5c.4 1.3.7.5.8.5-.1.6-.3 1.3-.3 1.9-.3 2.4.3 4.6 1.9 6.3 3.7 4 8.5 4.6 13.2 2.7 1.2-.5 2.6-1.7 3.3-2.8.8-1.4 1.3-2.8 1.2-4.4 0-.1 0-.2.1-.4.1.4.3.8.3 1.1.1.4 0 .8 0 1.3 1.4-.5 2.2-2.3 1.8-3.9-.5-2-2.1-3.3-3.9-3 .9.8 1.6 3.3 1.4 3.6-1.5-3.8-4.4-6.1-8.2-6.8-3.8-.8-7.2.4-10.1 3.2.6-1.2 1.7-2 2.9-2.9-.6-.1-1-.3-1.4-.3-1.8.1-3.5 2.1-3 3.9z"
			}), r.a.createElement("path", {
				fill: "#000",
				d: "M7.2 16.7c1.4.6 2.9.9 4.4 1 .6 0 1.3-.4.3-.5-1.2-.1-2.4-.3-3.5-.8-.3-.1-.7-.1-1 0-.1 0-.5.2-.2.3zM7.3 13.4c-.1 0-.2-.1-.3-.2-.1-.2-.2-.4-.4-.6-.6-.6-1.4-1.1-2.2-.9-.3.1-.5.2-.8.2h-.5c0-.1-.1-.3 0-.4.2-.2.5-.3.6-.4 1.6-.6 3.7.6 3.9 1.7v.3c0 .3-.2.3-.3.3zm9.8 1.1c-.1 0-.3 0-.4-.1-.1 0-.1-.1-.2-.1-.7-.5-1.5-.5-2.3 0-.2.1-.5.2-.7.3 0-.2 0-.4.1-.6.6-.6 1.7-.8 2.7-.5.3.1.7.5.9.8.1 0 0 .2-.1.2z"
			}), r.a.createElement("path", {
				fill: "#000",
				d: "M16.1 20.7c-2-.2-2.7-.9-2.9-2.5-.1-.9-.3-1.6-.7-2.4-.4-.9-.5-1.4-1.5-1.7-1.3-.5-1.9-1.6-2-2.6 0-.8.2-1.7.8-2.3 1.1-1.1 2.9-1.1 4.2-.5 1.3.6 3.8 3.2 4.3 4.5 1.6 4.2.8 7.2-2.2 7.5zM12 5.6c.1.2.1.7.6.5.4-.1.4-.6-.2-1.6-.3-.6-.5-1.6 0-2.2 1-1.3 2.3-1 3.5-.7.4.1 1.5.3 1.5.8 0 .7.6 1.8 1.2 2.2 1.2 1 3.5-.1 3.5-1.8 0-1.5-1.1-2.7-2.5-2.6-.6 0-1.6.7-2 1.2-.6-.2-1.2-.4-1.9-.5-1.3-.3-2.6-.3-3.7.7-1.2 1.1-.8 2.9 0 4-.1-.1-.2-.2-.3-.4.1.1.2.3.3.4.1.1-.6-.9 0 0z"
			}), r.a.createElement("path", {
				fill: "#FFF",
				d: "M21.3 3.1c-.2.5-.6.9-1 1-.4.1-.9 0-1.3-.3s-.7-.7-.7-1.1c0-.2 0-.8.8-1.4.5-.4 1.4 0 1.9.4.2.4.5.8.3 1.4zM18 14.6c-.5-2.5-3.8-6.4-6.8-5.3-1.4.5-1.7 2.4-.8 3.5.7.8 2.1 1.2 3 1.6-.3 0-.6.1-.9 0 1.2 1.6.6 4.7 2.8 5.2 2.5.7 3.4-1.7 2.7-5z"
			}))
		},
		"./src/reddit/icons/svgs/SquareLock/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, r.a.createElement("path", {
				d: "M16,9H15V7A5,5,0,0,0,5,7V9H4a1,1,0,0,0-1,1v7a1,1,0,0,0,1,1H16a1,1,0,0,0,1-1V10A1,1,0,0,0,16,9ZM7,7a3,3,0,0,1,6,0V9H7Z"
			}))
		},
		"./src/reddit/icons/svgs/Sticky/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 40 40"
			}, e.desc && r.a.createElement("desc", null, e.desc), r.a.createElement("g", null, r.a.createElement("g", {
				fill: "inherit"
			}, r.a.createElement("polygon", {
				points: "0,40 14.3,29.2 10.8,25.7"
			}), r.a.createElement("path", {
				d: "M23,27.6l10.8-10.8c2,1.1,4.5,0.8,6.2-0.9L24.1,0c-1.7,1.7-2,4.2-0.9,6.2L12.4,17c-2-1.1-4.5-0.8-6.2,0.9l15.9,15.9C23.8,32.1,24.1,29.6,23,27.6z"
			}))))
		},
		"./src/reddit/icons/svgs/TextPost/index.m.less": function(e, t, s) {
			e.exports = {
				icon: "_13NhOjx-Siom7MKe3Dex5y"
			}
		},
		"./src/reddit/icons/svgs/TextPost/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/svgs/TextPost/index.m.less"),
				i = s.n(a);
			t.a = e => r.a.createElement("svg", {
				className: Object(o.a)(i.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, r.a.createElement("path", {
				fill: "inherit",
				fillRule: "evenodd",
				d: "M16.8656 7.205H13.139c-.3428 0-.621-.2782-.621-.621 0-.343.2782-.621.621-.621h3.7266c.343 0 .621.278.621.621 0 .3428-.278.621-.621.621zm0 3.416H13.139c-.3428 0-.621-.2782-.621-.621s.2782-.621.621-.621h3.7266c.343 0 .621.2782.621.621s-.278.621-.621.621zm0 3.416H3.2016c-.343 0-.621-.278-.621-.621 0-.3428.278-.621.621-.621h13.664c.343 0 .621.2782.621.621 0 .343-.278.621-.621.621zm-13.664 3.416c-.343 0-.621-.278-.621-.621 0-.3428.278-.621.621-.621h13.664c.343 0 .621.2782.621.621 0 .343-.278.621-.621.621H3.2016zm-.621-14.285c0-.343.278-.621.621-.621h6.5997c.343 0 .621.278.621.621V10c0 .3428-.278.621-.621.621H3.2016c-.343 0-.621-.2782-.621-.621V3.168zM1.3382.0625C.6513.0625.096.6178.096 1.3047v17.3906c0 .687.5554 1.2422 1.2423 1.2422H18.729c.6868 0 1.242-.5553 1.242-1.2422V1.3047c0-.687-.5552-1.2422-1.242-1.2422H1.3382z"
			}))
		},
		"./src/reddit/icons/svgs/Trash2/index.m.less": function(e, t, s) {
			e.exports = {
				icon: "_1Fa4RPHlhrfUZuNaXK2-eP"
			}
		},
		"./src/reddit/icons/svgs/Trash2/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/icons/svgs/Trash2/index.m.less"),
				i = s.n(a);
			const c = e => r.a.createElement("svg", {
				className: Object(o.a)(i.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg",
				onClick: e.onClick
			}, r.a.createElement("path", {
				d: "M16.5,2H12.71l-.85-.85A.5.5,0,0,0,11.5,1h-3a.5.5,0,0,0-.35.15L7.29,2H3.5a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5h13a.5.5,0,0,0,.5-.5v-1A.5.5,0,0,0,16.5,2Z"
			}), r.a.createElement("path", {
				d: "M16.5,5H3.5a.5.5,0,0,0-.5.5v12A1.5,1.5,0,0,0,4.5,19h11A1.5,1.5,0,0,0,17,17.5V5.5A.5.5,0,0,0,16.5,5ZM6.75,15.5a.75.75,0,0,1-1.5,0v-7a.75.75,0,0,1,1.5,0Zm4,0a.75.75,0,0,1-1.5,0v-7a.75.75,0,0,1,1.5,0Zm4,0a.75.75,0,0,1-1.5,0v-7a.75.75,0,0,1,1.5,0Z"
			}));
			t.b = c
		},
		"./src/reddit/icons/svgs/Trophy/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n);
			t.a = e => r.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 40 40"
			}, r.a.createElement("g", null, r.a.createElement("path", {
				d: "M32,7.8l0.5-5.3h-25L8,7.8c-3.2,0.8-5.5,3.7-5.5,7.2v0.1c0,4,3.1,7.2,7,7.4l0,0c0.3,2.8,2.7,5,5.5,5h0.1 c1.3,0,2.4,1.1,2.4,2.4v0.1c0,1.3-1.1,2.4-2.4,2.4H15c-2.7,0-4.9,2.2-4.9,4.9v0.1h20v-0.1c0-2.7-2.2-4.9-4.9-4.9h-0.1 c-1.3,0-2.4-1.1-2.4-2.4v-0.1c0-1.3,1.1-2.4,2.4-2.4H25c2.8,0,5.2-2.2,5.5-5l0,0c3.9-0.2,7-3.4,7-7.4v-0.1 C37.5,11.5,35.2,8.6,32,7.8z M4.5,15.1v-0.1c0-2.4,1.6-4.4,3.7-5.1l1.1,10.7C6.6,20.1,4.5,17.9,4.5,15.1z M35.5,15.1 c0,2.8-2.1,5.1-4.8,5.4l1.1-10.7c2.2,0.7,3.7,2.8,3.7,5.1V15.1z"
			})))
		},
		"./src/reddit/layout/page/Lightbox/index.m.less": function(e, t, s) {
			e.exports = {
				lightboxContainer: "_1npCwF50X2J7Wt82SZi6J0",
				mIsCollectionLayout: "_2mmpCGz_MbQyZXoaIL_u6I",
				lightboxContent: "u35lf2ynn4jHsVUwPmNU",
				mNotCollectionLayout: "Dx3UxiK86VcfkFQVHNXNi",
				lightboxSidebar: "_2Xq-4oyrEvHjL5U_EeMnK8",
				defaultLightboxSidebar: "_20b4i5iUhjZQqDZ1BM_Q-9"
			}
		},
		"./src/reddit/layout/page/Lightbox/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/reddit/layout/page/Lightbox/index.m.less"),
				i = s.n(a);
			const c = e => r.a.createElement("div", {
					tabIndex: e.tabIndex,
					ref: e.innerRef,
					className: Object(o.a)(i.a.lightboxContainer, {
						[i.a.mIsCollectionLayout]: e.isCollectionLayout,
						[i.a.fakeOverlayContainer]: e.isFakeOverlay && !e.isCollectionLayout
					})
				}, e.children),
				d = e => r.a.createElement("div", {
					className: Object(o.a)(i.a.lightboxContent, {
						[i.a.mNotCollectionLayout]: !e.isCollectionLayout,
						[i.a.fakeOverlayContent]: e.isFakeOverlay && !e.isCollectionLayout
					})
				}, e.children),
				l = e => r.a.createElement("div", {
					className: Object(o.a)(i.a.lightboxSidebar, {
						[i.a.defaultLightboxSidebar]: !e.isCollectionLayout,
						[i.a.mIsCollectionLayout]: e.isCollectionLayout
					})
				}, e.children);
			class m extends r.a.PureComponent {
				constructor() {
					super(...arguments), this.container = null, this.setContainerRef = e => {
						this.container = e, this.props.containerRef && this.props.containerRef(e)
					}
				}
				render() {
					const {
						content: e,
						contentBanner: t,
						isCollectionLayout: s,
						isFakeOverlay: n,
						sidebar: o
					} = this.props;
					return r.a.createElement(c, {
						innerRef: this.setContainerRef,
						isCollectionLayout: s,
						isFakeOverlay: n,
						tabIndex: -1
					}, r.a.createElement(d, {
						isCollectionLayout: s,
						isFakeOverlay: n,
						redditStyle: !0
					}, t, e), o && r.a.createElement(l, {
						isCollectionLayout: s,
						isFakeOverlay: n
					}, o))
				}
			}
			t.a = m
		},
		"./src/reddit/layout/page/Listing/BackgroundContainer.m.less": function(e, t, s) {
			e.exports = {
				backgroundContainer: "_2wxsLGNmMLx6sEMLJyn2o9"
			}
		},
		"./src/reddit/layout/page/Listing/BackgroundContainer.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return u
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/lib/classNames/index.ts"),
				a = s("./src/lib/CSSVariableProvider/withTheme.tsx"),
				i = s("./src/reddit/models/Theme/index.ts"),
				c = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				d = s("./src/reddit/layout/page/Listing/BackgroundContainer.m.less"),
				l = s.n(d);

			function m() {
				return (m = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const u = Object(a.a)(e => {
				const {
					backgroundColor: t,
					className: s,
					redditStyle: n,
					theme: a,
					...d
				} = e, u = Object(c.a)(e), p = {
					"--pseudo-before-background": t || Object(i.f)(u.canvas, u.canvasImgUrl, u.canvasImgPosition)
				};
				return r.a.createElement("div", m({
					className: Object(o.a)(l.a.backgroundContainer, s),
					style: p
				}, d))
			})
		},
		"./src/reddit/layout/page/Listing/Content.m.less": function(e, t, s) {
			e.exports = {
				styledContent: "_1OVBBWLtHoSPfGCRaPzpTf",
				mCanFlexFullWidth: "PaJBYLqPf_Gie2aZntVQ7",
				mLargePostLayout: "_3nSp9cdBpqL13CqjdMr2L_",
				mDisableFullScreen: "_2udhMC-jldHp_EpAuBeSR1",
				mClassicWidth: "_1Tc65kRFm7a8piCXHVL4L4",
				mIsEditing: "_25-JsrYQ-pXWBM8eqpxeN7",
				onlyChildMargin: "_2OVNlZuUd8L9v0yVECZ2iA"
			}
		},
		"./src/reddit/layout/page/Listing/Content.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/reselect/es/index.js"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/reddit/constants/postLayout.ts"),
				d = s("./src/reddit/contexts/PageLayer/index.tsx"),
				l = s("./src/reddit/selectors/structuredStyles.ts"),
				m = s("./src/reddit/layout/page/Listing/Content.m.less"),
				u = s.n(m);

			function p() {
				return (p = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const C = Object(d.v)(),
				b = Object(a.c)({
					isEditing: l.i,
					layout: (e, t) => t.forcedLayout || Object(d.U)(e, t)
				}),
				h = Object(o.b)(b);
			t.a = C(h(e => {
				let {
					className: t,
					hideOnlyChildMargin: s,
					disableFullscreen: n,
					dispatch: o,
					fitPageToContent: a,
					forcedLayout: l,
					isCollectionLayout: m,
					isEditing: C,
					layout: b,
					pageLayer: h,
					...f
				} = e;
				return r.a.createElement("div", p({
					className: Object(i.a)(t, u.a.styledContent, {
						[u.a.mLargePostLayout]: b === c.g.Large || Object(d.R)(h),
						[u.a.mDisableFullScreen]: n && !m,
						[u.a.mClassicWidth]: m,
						[u.a.mIsEditing]: !!C,
						[u.a.mCanFlexFullWidth]: !a,
						[u.a.onlyChildMargin]: !s
					})
				}, f))
			}))
		},
		"./src/reddit/layout/page/Listing/index.m.less": function(e, t, s) {
			e.exports = {
				body: "_31N0dvxfpsO6Ur5AKx4O5d",
				sidebar: "_3Kd8DQpBIbsr5E1JcrMFTY",
				defaultLayout: "_1tvThPWQpORoc2taKebHxs",
				"m-collectionLayout": "K1OCXipJxqOt01sOdQXEx",
				mCollectionLayout: "K1OCXipJxqOt01sOdQXEx",
				outerContainer: "qYj03fU5CXf5t2Fc5iSvg",
				outerContainerExp: "_35NDNOyTzBcywfeEavUt6p",
				innerContainer: "_3ozFtOe6WpJEMUtxDOIvtU",
				bannerNavContainer: "q4a8asWOWdfdniAbgNhMh"
			}
		},
		"./src/reddit/layout/page/Listing/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/reddit/layout/page/Listing/BackgroundContainer.tsx"),
				a = s("./src/reddit/layout/page/Listing/Content.tsx"),
				i = s("./src/lib/classNames/index.ts"),
				c = s("./src/reddit/constants/componentSizes.ts"),
				d = s("./src/reddit/constants/elementClassNames.ts"),
				l = s("./src/reddit/constants/screenWidths.ts"),
				m = s("./src/reddit/contexts/NavbarExp.ts"),
				u = s("./node_modules/classnames/index.js"),
				p = s.n(u),
				C = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				b = s("./src/lib/constants/icons.ts"),
				h = s("./src/reddit/components/SubredditIcon/index.tsx"),
				f = s("./src/reddit/icons/fonts/index.tsx"),
				g = s("./src/reddit/components/BackToSubreddit/index.m.less"),
				x = s.n(g);
			var v = e => {
					const {
						subredditName: t
					} = e, s = `/${t}`;
					return r.a.createElement(C.a, {
						className: x.a.backToSubreddit,
						to: s
					}, r.a.createElement("div", {
						className: x.a.innerContainer
					}, r.a.createElement(f.a, {
						name: b.a.back,
						className: p()(x.a.content, x.a.back)
					}), r.a.createElement(h.b, {
						className: p()(x.a.content, x.a.subredditIcon)
					}), r.a.createElement("span", {
						className: p()(x.a.content, x.a.title)
					}, t)))
				},
				y = s("./src/reddit/components/StructuredStyles/BladeManager/index.tsx"),
				O = s("./src/reddit/layout/page/Listing/index.m.less"),
				E = s.n(O);
			t.a = e => {
				const {
					backgroundColor: t,
					backToSubredditName: s,
					className: u,
					containerRef: p,
					content: C,
					contentBanner: b,
					contentClassName: h,
					contentNavBar: f,
					disableFullscreen: g,
					fitPageToContent: x,
					forcedLayout: O,
					hideOnlyChildMargin: j,
					isCollectionLayout: _,
					isPageSwapped: k,
					maxWidth: L,
					navBar: w,
					redditStyle: S,
					sidebar: I,
					sidebars: P,
					trendingUnit: N,
					subredditId: T
				} = e, M = N ? "28px" : "0", R = k ? {
					marginRight: `${c.p}px`,
					marginTop: M
				} : {
					marginLeft: `${c.p}px`,
					marginTop: M
				}, F = I && r.a.createElement("div", {
					className: Object(i.a)(E.a.sidebar, _ ? E.a["m-collectionLayout"] : E.a.defaultLayout),
					style: R
				}, I), B = r.a.createElement(a.a, {
					hideOnlyChildMargin: j,
					className: h,
					disableFullscreen: g,
					fitPageToContent: x,
					forcedLayout: O,
					isCollectionLayout: _
				}, b, s && r.a.createElement(v, {
					subredditName: s
				}), C);
				let A;
				A = P ? r.a.createElement(r.a.Fragment, null, P[0], B, P[1]) : k ? r.a.createElement(r.a.Fragment, null, F, B) : r.a.createElement(r.a.Fragment, null, B, F);
				const D = g ? `${L||l.a+2*c.l}px` : "100%",
					U = Object(n.useContext)(m.a);
				return r.a.createElement(y.a, {
					subredditId: T
				}, r.a.createElement("div", {
					className: Object(i.a)(E.a.outerContainer, d.i, u, {
						[E.a.outerContainerExp]: U
					}),
					ref: p
				}, r.a.createElement(o.a, {
					className: d.h,
					redditStyle: S,
					backgroundColor: t
				}), r.a.createElement("div", {
					className: E.a.innerContainer
				}, w, f, (e => e.hero ? r.a.createElement(r.a.Fragment, null, e.hero) : null)(e), r.a.createElement("div", {
					style: {
						maxWidth: D
					}
				}, N), r.a.createElement("div", {
					className: E.a.body,
					style: {
						maxWidth: D
					}
				}, A))))
			}
		},
		"./src/reddit/layout/page/SearchResults/index.m.less": function(e, t, s) {
			e.exports = {
				bodyContainer: "eZLYleuk3b8ykGiskfpo3",
				contentContainer: "_3Up38k81YNBWQoW1ovMU88",
				content: "_2lzCpzHH0OvyFsvuESLurr",
				mainContent: "_1BJGsKulUQfhJyO19XsBph",
				withSidebar: "_3SktesklDBwXt2pEl0sHY8",
				sidebarContent: "_2iRJ8DI-3RTbsXRSDXE5ZG"
			}
		},
		"./src/reddit/layout/row/InlineButton/index.m.less": function(e, t, s) {
			e.exports = {
				inlineButton: "_10K5i7NW6qcm-UoCtpB3aK"
			}
		},
		"./src/reddit/layout/row/InlineButton/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./src/lib/lessComponent.tsx"),
				r = s("./src/reddit/layout/row/InlineButton/index.m.less"),
				o = s.n(r);
			t.a = n.a.button("inlineButton", o.a)
		},
		"./src/reddit/layout/threeCol/ExpandCenter/index.m.less": function(e, t, s) {
			e.exports = {
				leftAndRight: "_3P6gMBKOhtWWrytWm-8hc",
				center: "CEs01bewsmQQV7LRLaHib",
				expandedCenterContainer: "_2FZY7HXlkf-PdemHbQoAEt"
			}
		},
		"./src/reddit/layout/threeCol/ExpandCenter/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/higherOrderComponents/warnOnChildrenCount/index.tsx"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/layout/threeCol/ExpandCenter/index.m.less"),
				c = s.n(i);
			t.a = Object(o.a)(e => r.a.createElement("div", {
				className: Object(a.a)(c.a.expandedCenterContainer, e.className)
			}, r.a.createElement("div", {
				className: c.a.leftAndRight,
				style: {
					flexBasis: e.widthLeft
				}
			}, Array.isArray(e.children) && e.children[0]), r.a.createElement("div", {
				className: c.a.center
			}, Array.isArray(e.children) && e.children[1]), r.a.createElement("div", {
				className: c.a.leftAndRight,
				style: {
					flexBasis: e.widthRight
				}
			}, Array.isArray(e.children) && e.children[2])), 3)
		},
		"./src/reddit/layout/twoCol/ExpandLeft/index.m.less": function(e, t, s) {
			e.exports = {
				left: "_5gAwSCo7K8G413IoE78Ml",
				right: "_2ghjBMFIsORwdO3oh2Kq6g",
				exapndLeftContainer: "_1zTJo0Ndih4fp__5DjbClN"
			}
		},
		"./src/reddit/layout/twoCol/ExpandLeft/index.tsx": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./src/higherOrderComponents/warnOnChildrenCount/index.tsx"),
				a = s("./src/lib/classNames/index.ts"),
				i = s("./src/reddit/layout/twoCol/ExpandLeft/index.m.less"),
				c = s.n(i);
			t.a = Object(o.a)(e => r.a.createElement("div", {
				className: Object(a.a)(c.a.exapndLeftContainer, e.className)
			}, r.a.createElement("div", {
				className: c.a.left
			}, Array.isArray(e.children) && e.children[0]), r.a.createElement("div", {
				className: c.a.right,
				style: {
					flexBasis: e.widthRight
				}
			}, Array.isArray(e.children) && e.children[1])), 2)
		},
		"./src/reddit/models/ContentGate.ts": function(e, t, s) {
			"use strict";
			var n;
			s.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.CustomFeedDoesNotExist = "CustomFeedDoesNotExist", e.GoldSubreddit = "GoldSubreddit", e.Nsfw = "Nsfw", e.NsfwCustomFeed = "NsfwCustomFeed", e.PrivateSubreddit = "PrivateSubreddit", e.ProfileDoesNotExist = "ProfileDoesNotExist", e.ProfileDeleted = "ProfileDeleted", e.ProfileSuspended = "ProfileSuspended", e.ProfileBlockedForLegalReason = "ProfileBlockedForLegalReason", e.QuarantinedSubreddit = "QuarantinedSubreddit", e.GatedSubreddit = "GatedSubreddit", e.SubredditBanned = "SubredditBanned", e.SubredditBlockedForLegalReason = "SubredditBlockedForLegalReason", e.SubredditDoesNotExist = "SubredditDoesNotExist", e.PostBlockedForLegalReason = "PostBlockedForLegalReason"
				}(n || (n = {}))
		},
		"./src/reddit/models/SubredditWikiPage/index.ts": function(e, t, s) {
			"use strict";
			var n, r;
			s.d(t, "b", (function() {
					return n
				})), s.d(t, "a", (function() {
					return r
				})),
				function(e) {
					e.MayNotView = "MAY_NOT_VIEW", e.PageNotCreated = "PAGE_NOT_CREATED", e.PageNotFound = "PAGE_NOT_FOUND", e.RestrictedPage = "RESTRICTED_PAGE", e.Unknown = "UNKNOWN", e.Valid = "VALID", e.WikiDisabled = "WIKI_DISABLED"
				}(n || (n = {})),
				function(e) {
					e.Inherit = "INHERIT_SUBREDDIT_PERMS", e.Contributors = "CONTRIBUTORS", e.Mods = "MODS"
				}(r || (r = {}))
		},
		"./src/reddit/pages/CommentsPage/CommentsNavigationPane/index.m.less": function(e, t, s) {
			e.exports = {
				CommentsNavigationPane: "_1k2YW82YLtn1xvksm7RHIO",
				commentsNavigationPane: "_1k2YW82YLtn1xvksm7RHIO",
				linkOrOverlay: "_1eQ54MneFHfYv8GJO9o-jg",
				OtherDiscussionsLink: "_1WUTKdOO96akYfbq4CK6z6",
				otherDiscussionsLink: "_1WUTKdOO96akYfbq4CK6z6",
				discoveryExperimentLink: "_1aOgrREECvp9S07UGKx-jG",
				truncate: "xbzEgRwJcItjoGgB6XRNU",
				verticalDivider: "_20butL_jC4sxaGwRs5RrJX",
				flex: "upNIvLv83gYiOnXpgX0WH"
			}
		},
		"./src/reddit/pages/CommentsPage/CommentsNavigationPane/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return N
			}));
			var n = s("./node_modules/react/index.js"),
				r = s.n(n),
				o = s("./node_modules/react-redux/es/index.js"),
				a = s("./node_modules/react-router-redux/es/index.js"),
				i = s("./node_modules/reselect/es/index.js"),
				c = s("./src/lib/addQueryParams/index.ts"),
				d = s("./src/lib/classNames/index.ts"),
				l = s("./src/lib/constants/index.ts"),
				m = s("./src/reddit/actions/otherDiscussions/constants.ts"),
				u = s("./src/reddit/components/ExpandedCrossposts/async.tsx"),
				p = s("./src/reddit/components/LinkOrOverlayLink/index.tsx"),
				C = s("./src/reddit/components/SearchResultsContent/helpers/isCommentSearchRoute.ts"),
				b = s("./src/reddit/components/TrackingHelper/index.tsx"),
				h = s("./src/reddit/controls/Search/CommentSearch/index.tsx"),
				f = s("./src/reddit/helpers/path/index.ts"),
				g = s("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				x = s("./src/reddit/helpers/trackers/features/expandedCrossposts.ts"),
				v = s("./src/reddit/helpers/trackers/otherDiscussions.ts"),
				y = s("./src/reddit/helpers/trackers/post.ts"),
				O = s("./src/reddit/helpers/trackers/searchResults.ts"),
				E = s("./src/reddit/hooks/usePageLayer.ts"),
				j = s("./src/reddit/selectors/comments.ts"),
				_ = s("./src/reddit/selectors/experiments/commentSearchPdp.ts"),
				k = s("./src/reddit/selectors/experiments/subredditDiscovery.ts"),
				L = s("./src/reddit/selectors/platform.ts"),
				w = s("./src/reddit/pages/CommentsPage/CommentsNavigationPane/index.m.less"),
				S = s.n(w);
			const {
				fbt: I
			} = s("./node_modules/fbt/lib/FbtPublic.js"), P = Object(i.c)({
				commentSearchPdp: _.a,
				isSubredditDiscoveryCrosspostEnabled: k.a,
				headComment: j.x,
				lastPage: L.m,
				post: j.J
			}), N = e => {
				var t, s;
				const n = Object(E.a)(),
					{
						commentSearchPdp: i,
						isSubredditDiscoveryCrosspostEnabled: j,
						headComment: _,
						lastPage: k,
						post: L
					} = Object(o.e)(t => P(t, e)),
					w = Object(b.b)(),
					N = Object(o.d)(),
					{
						commentId: T,
						isOverlay: M,
						postId: R
					} = e;
				if (!L) return null;
				const F = null !== (t = L.numDuplicates) && void 0 !== t ? t : 0,
					B = void 0 !== T,
					A = L.permalink,
					D = F > 0,
					U = Object(f.b)(Object(m.e)(A));
				if (!B && !D) return null;
				const W = (null == k ? void 0 : k.queryParams.q) && (null === (s = k.meta) || void 0 === s ? void 0 : s.name) === l.Sb.COMMENTS,
					H = i.bucketed && Object(C.a)(n) && Object(C.b)(L),
					V = Object(c.a)(Object(f.b)(A), (null == k ? void 0 : k.queryParams) || {});
				return r.a.createElement("div", {
					className: S.a.CommentsNavigationPane
				}, W && B && r.a.createElement(r.a.Fragment, null, r.a.createElement("div", {
					className: S.a.flex
				}, r.a.createElement("button", {
					onClick: () => {
						w(Object(O.o)(O.a.BACK, Object(h.d)({
							searchValue: null == k ? void 0 : k.queryParams.q,
							post: L
						}), g.a.SERP, n || void 0)), N(Object(a.b)(V, {
							...null == k ? void 0 : k.locationState
						}))
					},
					className: Object(d.a)(S.a.linkOrOverlay, S.a.truncate),
					"data-testid": "back_to_comment_search_results"
				}, I._('Back to comments with "{current search query}"', [I._param("current search query", (null == k ? void 0 : k.queryParams.q) || "")], {
					hk: "4dHWeM"
				})), r.a.createElement("span", {
					className: S.a.verticalDivider
				}, "|"))), B && r.a.createElement("div", null, r.a.createElement(p.a, {
					className: S.a.linkOrOverlay,
					"data-testid": "view_all_comments_link",
					isOverlay: M,
					to: {
						pathname: Object(f.b)(A),
						state: null == k ? void 0 : k.locationState
					},
					onClick: () => w(Object(y.o)(R, _, n))
				}, I._("View all comments", null, {
					hk: "3I5IX9"
				})), !H && !!(null == _ ? void 0 : _.parentId) && r.a.createElement(p.a, {
					className: S.a.linkOrOverlay,
					isOverlay: M,
					to: Object(f.b)(_.permalink + "?context=8&depth=9")
				}, I._("Show parent comments", null, {
					hk: "AVRCa"
				}))), !H && D && r.a.createElement(r.a.Fragment, null, j && r.a.createElement(u.a, {
					postId: R
				}), r.a.createElement(p.a, {
					className: Object(d.a)(S.a.OtherDiscussionsLink, {
						[S.a.discoveryExperimentLink]: j
					}),
					isOverlay: M,
					onClick: () => w(j ? Object(x.b)() : Object(v.a)(R)),
					to: U,
					"data-testid": "view_other_discussions"
				}, j ? r.a.createElement(r.a.Fragment, null, I._("View all", null, {
					hk: "30twDK"
				}), ` (${F})`) : I._({
					"*": "View discussions in {other discussion communities count} other communities",
					_1: "View discussions in 1 other community"
				}, [I._plural(F, "other discussion communities count")], {
					hk: "3oofZ8"
				}))))
			}
		},
		"./src/reddit/pages/CommentsPage/index.m.less": function(e, t, s) {
			e.exports = {
				promoBanner: "_25nFZKgLc-Z-1ua1YEzuCL",
				DetailsPageSidebar: "RffBqG1xCvuy1r49wYhLr",
				detailsPageSidebar: "RffBqG1xCvuy1r49wYhLr",
				MoreCommentsButton: "_1ibjfCIu5PPqcaOiPleMRD",
				moreCommentsButton: "_1ibjfCIu5PPqcaOiPleMRD",
				PageContentWrapper: "uI_hDmU5GSiudtABRz_37",
				pageContentWrapper: "uI_hDmU5GSiudtABRz_37",
				LargePageContent: "_3vh3MfGCp46QUOtwrgRgUk",
				largePageContent: "_3vh3MfGCp46QUOtwrgRgUk",
				Spacer: "q6p33SkkiPu07qUoN_Kd",
				spacer: "q6p33SkkiPu07qUoN_Kd",
				CommentsPaneWrapper: "_2M2wOqmeoPVvcSsJ6Po9-V",
				commentsPaneWrapper: "_2M2wOqmeoPVvcSsJ6Po9-V",
				mIsInOverlay: "_3287nL7j7epK9JmDC3N1VR",
				CollectionBodyWrapper: "_3cBG1RcjxrEO-gLlwkn87S",
				collectionBodyWrapper: "_3cBG1RcjxrEO-gLlwkn87S",
				ChatLoggedOutForm: "_20TbWqEmJ0wq_AV7La7GWd",
				chatLoggedOutForm: "_20TbWqEmJ0wq_AV7La7GWd",
				OverviewCommentPost: "lfoKI-nM1Ps5Y1WhxJPc6",
				overviewCommentPost: "lfoKI-nM1Ps5Y1WhxJPc6",
				backgroundMargin: "_34i0o0-SanTnUOM8JXdW6f",
				isFirstInCommentList: "_22yjV_JLQY-BfOOW1wgsgI",
				isLastInCommentList: "_3QJoultgeMO-1x88lIzzSe",
				EmbeddedLiveChatContainer: "_2NpqPnGM9PjW4Bj7Eytjrn",
				embeddedLiveChatContainer: "_2NpqPnGM9PjW4Bj7Eytjrn"
			}
		},
		"./src/reddit/pages/CommentsPage/index.tsx": function(e, t, s) {
			"use strict";
			s.r(t), s.d(t, "getCommentsPageKeyById", (function() {
				return zt
			})), s.d(t, "_CommentsPage", (function() {
				return Xt
			})), s.d(t, "CommentsPage", (function() {
				return $t
			}));
			var n = s("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = s("./node_modules/fbt/lib/FbtPublic.js"),
				o = s.n(r),
				a = s("./src/lib/extractQueryParams/index.ts"),
				i = s("./node_modules/lodash/fromPairs.js"),
				c = s.n(i),
				d = s("./node_modules/lodash/get.js"),
				l = s.n(d),
				m = s("./node_modules/lodash/pick.js"),
				u = s.n(m),
				p = s("./node_modules/lodash/throttle.js"),
				C = s.n(p),
				b = s("./node_modules/react/index.js"),
				h = s.n(b),
				f = s("./node_modules/react-redux/es/index.js"),
				g = s("./node_modules/react-router-redux/es/index.js"),
				x = s("./node_modules/reselect/es/index.js"),
				v = s("./src/reddit/models/PostDraft/index.ts"),
				y = s("./src/telemetry/index.ts"),
				O = s("./src/telemetry/models/Timer.ts"),
				E = s("./src/higherOrderComponents/withLSWatcher.tsx"),
				j = s("./src/lib/classNames/index.ts"),
				_ = s("./src/lib/constants/index.ts"),
				k = s("./src/lib/domUtils/index.ts"),
				L = s("./src/lib/fastdom/index.ts"),
				w = s("./src/lib/lessComponent.tsx"),
				S = s("./src/lib/makeCommentsPageKey/index.ts"),
				I = s("./src/lib/makeDraftKey/index.ts"),
				P = s("./src/lib/performanceTimings/index.tsx"),
				N = s("./src/reddit/actions/ads/index.ts"),
				T = s("./src/reddit/actions/comment/index.ts"),
				M = s("./src/reddit/actions/comment/authoring.ts"),
				R = s("./src/reddit/actions/commentsListTruncated/index.ts"),
				F = s("./src/reddit/actions/eligibleUxExperiences/eligibleUxExperiences.ts"),
				B = s("./src/reddit/actions/isTrackingCrossposts.ts"),
				A = s("./src/reddit/actions/linkedPosts/index.ts"),
				D = s("./src/reddit/actions/login.ts"),
				U = s("./src/reddit/actions/modal.ts"),
				W = s("./src/reddit/actions/nsfwBlocking/async.tsx"),
				H = s("./src/reddit/actions/pages/comments.ts"),
				V = s("./src/reddit/actions/reportFlow/index.ts"),
				Z = s("./src/reddit/actions/tooltip.ts"),
				q = s("./src/reddit/actions/upvotePrompt.ts"),
				z = s("./src/reddit/components/CommentsPageNativeAd/async.tsx"),
				K = s("./src/reddit/components/CrosspostRecommendationsModal/async.tsx"),
				G = s("./src/reddit/components/CrosspostRecommendationsModal/constants.tsx"),
				Y = s("./src/reddit/components/Hovercards/AuthorHovercard/index.tsx"),
				J = s("./src/reddit/components/PrivateFeedPage/index.tsx"),
				Q = s("./src/reddit/components/RecommendedPostList/index.tsx"),
				X = s("./src/reddit/components/Upsell/NsfwBlocking/index.tsx"),
				$ = s("./src/reddit/constants/componentSizes.ts"),
				ee = s("./src/reddit/constants/elementIds.ts"),
				te = s("./src/reddit/constants/history.ts"),
				se = s("./src/reddit/constants/keycodes.ts"),
				ne = s("./src/reddit/constants/parameters.ts"),
				re = s("./src/reddit/constants/posts.ts"),
				oe = s("./src/reddit/constants/screenWidths.ts"),
				ae = s("./src/reddit/contexts/ApiContext.tsx"),
				ie = s("./src/reddit/contexts/PageLayer/index.tsx"),
				ce = s("./src/reddit/contexts/TrackCommentsPageClick.ts"),
				de = s("./src/reddit/helpers/sessionStorage/index.ts"),
				le = s("./src/reddit/selectors/experiments/contributeBeforeSignUp.ts"),
				me = s("./src/reddit/selectors/experiments/crosspostRecommendations.ts"),
				ue = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				pe = s("./src/reddit/selectors/experiments/nsfwBlockingExperiment.ts"),
				Ce = s("./src/reddit/selectors/experiments/nsfwBypassableBlockingExperiment.ts"),
				be = s("./src/reddit/selectors/experiments/postActionBarAnimation.ts"),
				he = s("./src/reddit/selectors/subreddit.ts"),
				fe = s("./src/reddit/selectors/upvotePrompt.ts"),
				ge = s("./src/reddit/featureFlags/profileCollections.ts"),
				xe = s("./src/lib/makeLinkedPostsListingKey/index.ts"),
				ve = s("./src/lib/makeSearchKey/index.ts"),
				ye = s("./src/reddit/contexts/Post/index.tsx"),
				Oe = s("./src/reddit/models/Comment/index.ts"),
				Ee = s("./src/reddit/models/Post/index.ts"),
				je = s("./src/reddit/models/Subreddit/index.ts"),
				_e = s("./src/reddit/selectors/chatPost.ts"),
				ke = s("./src/reddit/selectors/comments.ts"),
				Le = s("./src/reddit/selectors/commentSelector.ts"),
				we = s("./src/reddit/selectors/commentsListTruncated.ts"),
				Se = s("./src/reddit/selectors/creatorStats.ts"),
				Ie = s("./src/reddit/selectors/discoveryUnit.ts"),
				Pe = s("./src/reddit/selectors/dismissedTruncationList.ts"),
				Ne = s("./src/reddit/selectors/experiments/avatarsInComments.ts"),
				Te = s("./src/reddit/selectors/experiments/postSeo.ts"),
				Me = s("./src/reddit/selectors/experiments/resonatePilot.ts"),
				Re = s("./src/reddit/selectors/experiments/subredditDiscovery.ts"),
				Fe = s("./src/reddit/selectors/isEligibleForCommentTruncation.ts"),
				Be = s("./src/reddit/selectors/meta.ts"),
				Ae = s("./src/reddit/selectors/moderatorPermissions.ts"),
				De = s("./src/reddit/selectors/posts.ts"),
				Ue = s("./src/reddit/selectors/tooltip.ts"),
				We = s("./src/reddit/selectors/user.ts"),
				He = s("./src/reddit/actions/dismissedTruncationList/index.ts"),
				Ve = s("./src/reddit/actions/postLevelCrowdControl.ts"),
				Ze = s("./src/reddit/components/CommentCreation/Loader.tsx"),
				qe = s("./src/reddit/components/CommentCreation/LoggedOutCommentForm/index.tsx"),
				ze = s("./src/reddit/components/Comments/index.tsx"),
				Ke = s("./src/reddit/components/Comments/States/index.tsx"),
				Ge = s("./src/reddit/components/CommentsChat/Loader.ts"),
				Ye = s("./src/reddit/components/CommentsChat/MessageInput/Loader.tsx"),
				Je = s("./src/reddit/components/CommentSort/index.tsx"),
				Qe = s("./src/reddit/components/CommentsPageSidebar/index.tsx"),
				Xe = s("./src/reddit/components/CommentsWrapper/index.tsx"),
				$e = s("./src/reddit/components/CreatorStats/loader.tsx"),
				et = s("./src/reddit/components/HeaderImage/index.tsx"),
				tt = s("./src/reddit/components/Hovercards/helpers.ts"),
				st = s("./src/reddit/components/InfoBanners/CommentThreadArchivedBanner/index.tsx"),
				nt = s("./src/reddit/components/InfoBanners/CommentThreadLockedBanner/index.tsx"),
				rt = s("./src/reddit/components/InfoBanners/ContestModeEnabledBanner/index.tsx"),
				ot = s("./src/reddit/components/InfoBanners/QuarantinedSubredditBanner/index.tsx"),
				at = s("./src/reddit/components/JumpToContent/index.tsx"),
				it = s("./src/reddit/components/NewCommentPill/async.tsx"),
				ct = s("./src/reddit/components/PostContent/index.tsx"),
				dt = s("./src/reddit/components/PostDetailStickyHeader/async.tsx"),
				lt = s("./src/reddit/components/PostTopMeta/index.tsx"),
				mt = s("./src/reddit/components/SearchResultsContent/helpers/isCommentSearchRoute.ts"),
				ut = s("./src/reddit/components/SearchResultsContent/SearchPdpComments/index.tsx"),
				pt = s("./src/reddit/components/SubredditForkingCTA/index.tsx"),
				Ct = s("./src/reddit/components/SubredditNav/index.tsx"),
				bt = s("./src/reddit/components/TrackingHelper/index.tsx"),
				ht = s("./src/reddit/helpers/chat/isEmbeddedLiveChat.ts"),
				ft = s("./src/reddit/helpers/datadome.ts"),
				gt = s("./src/reddit/helpers/getSubredditErrorProps/index.ts"),
				xt = s("./src/reddit/helpers/history/index.ts"),
				vt = s("./src/reddit/helpers/matchRedditUrls/index.ts"),
				yt = s("./src/reddit/helpers/name/index.ts"),
				Ot = s("./src/reddit/helpers/postCollection.ts"),
				Et = s("./src/reddit/helpers/resonatePage/index.ts"),
				jt = s("./src/reddit/helpers/trackers/lightbox.ts"),
				_t = s("./src/reddit/helpers/trackers/screenview.ts"),
				kt = s("./src/reddit/layout/page/Lightbox/index.tsx"),
				Lt = s("./src/reddit/layout/page/Listing/index.tsx"),
				wt = s("./src/reddit/models/ContentGate.ts"),
				St = s("./src/reddit/pages/CommentsPage/CommentsNavigationPane/index.tsx"),
				It = s("./src/reddit/pages/CommentsPage/withPageSorting.tsx"),
				Pt = s("./src/reddit/selectors/experiments/chat.ts"),
				Nt = s("./src/reddit/selectors/experiments/cnc/index.ts"),
				Tt = s("./src/reddit/selectors/experiments/commentSearchPdp.ts"),
				Mt = s("./src/reddit/selectors/experiments/uxtsIntegration.ts"),
				Rt = s("./src/reddit/pages/CommentsPage/index.m.less"),
				Ft = s.n(Rt);

			function Bt() {
				return (Bt = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const At = {
					input: {
						channel: {
							teamOwner: "CONTENT_AND_COMMUNITIES",
							category: "POST_COUNT_UPDATE"
						}
					}
				},
				Dt = e => {
					let {
						condition: t,
						wrap: s,
						children: n
					} = e;
					return t ? s(n) : n
				},
				Ut = 200,
				Wt = 80,
				Ht = 32,
				Vt = Object(n.a)({
					resolved: {},
					chunkName: () => "reddit-pages-CommentsPage-OtherDiscussions",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("reddit-pages-CommentsPage-OtherDiscussions").then(s.bind(null, "./src/reddit/pages/CommentsPage/OtherDiscussions/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/pages/CommentsPage/OtherDiscussions/index.tsx"
					}
				}),
				Zt = Object(n.a)({
					resolved: {},
					chunkName: () => "reddit-components-Collection",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("reddit-components-Collection").then(s.bind(null, "./src/reddit/components/Collection/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/Collection/index.tsx"
					}
				}),
				qt = Object(n.a)({
					resolved: {},
					chunkName: () => "reddit-components-ContentGate",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!s.m[t]
					},
					importAsync: () => s.e("reddit-components-ContentGate").then(s.bind(null, "./src/reddit/components/ContentGate/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return s(t)
					},
					resolve() {
						return "./src/reddit/components/ContentGate/index.tsx"
					}
				}),
				zt = e => {
					let {
						postId: t,
						commentId: s,
						commentsPageKey: n
					} = e;
					return s ? Object(S.a)(t) : n
				},
				Kt = e => {
					const {
						state: t
					} = e.location, s = l()(t, te.b.IsOverlay, !1), n = l()(t, te.b.CloseLocation, null), r = l()(t, te.b.ScrollOnLoad, !1);
					r && Object(xt.c)(te.b.ScrollOnLoad);
					const {
						partialCommentId: o,
						partialPostId: a,
						subredditName: i
					} = e.match.params, c = Object(Ee.y)(a), d = o && Object(Oe.h)(o), m = Object(xe.a)(c), u = Object(f.e)(ue.b), p = Object(f.e)(e => Object(De.y)(e, {
						listingKey: m
					})), C = Object(f.d)(), g = Object(f.e)(e => Object(Tt.a)(e));
					return Object(b.useEffect)(() => {
						u && !p.length && C(Object(A.c)({
							key: m
						}))
					}, []), h.a.createElement(ye.a, {
						postId: c
					}, h.a.createElement($t, {
						closeLocation: n,
						commentId: d,
						commentsPageKey: e.commentsPageKey,
						isOverlay: s,
						pdpCommentSearchExperiment: g,
						location: e.location,
						onOtherDiscussions: e.onOtherDiscussions,
						postId: c,
						shouldScrollToComments: r,
						sort: e.sort,
						subredditName: i
					}))
				},
				Gt = Object(ie.v)(),
				Yt = () => Object(x.c)({
					apiError: ke.c,
					apiPending: ke.d,
					canCommentAsModerator: (e, t) => {
						let {
							postId: s
						} = t;
						const n = Object(De.U)(e, {
							postId: s
						});
						return !!(n && n.id && e.moderatingSubreddits[n.id])
					},
					canShowCrosspostRecommendationsModal: (e, t) => {
						let {
							postId: s
						} = t;
						return Object(me.a)(e, s)
					},
					canViewCreatorStats: (e, t) => {
						let {
							postId: s
						} = t;
						return Object(Se.a)(e, s)
					},
					comment: (e, t) => {
						let {
							commentId: s
						} = t;
						return s ? Object(Le.c)(e, {
							commentId: s
						}) : void 0
					},
					communityBannerDiscoveryUnit: Ie.a,
					isSubredditDiscoveryCrosspostEnabled: Re.a,
					contentGateInfo: (e, t) => {
						let {
							subredditName: s
						} = t;
						return Object(We.h)(e, s)
					},
					currentUserShowNSFW: We.mb,
					dismissedSubreddits: Pe.a,
					fullyLoaded: ke.u,
					hasModeratorPostPermissions: Ae.c,
					headComment: ke.x,
					isActionBarAnimationEnabled: be.b,
					isAvatarsInCommentsEnabled: Ne.a,
					isCommentBeforeSignUpEnabled: le.a,
					isCountAnimShadowTestEnabled: be.e,
					isCrawler: (e, t) => !!Object(Be.c)(e),
					isCrosspostRecommendationsExperimentEnabled: me.b,
					isD2xPdpSideRailRecsEnabled: ue.b,
					isEligibleForCommentTruncation: Fe.a,
					isChatPost: _e.d,
					isCommentsListTruncated: we.a,
					isLanguagePromptUxtsEnabled: Mt.a,
					isLiveChatNuxReactionsEnabled: Pt.c,
					isLoggedIn: We.S,
					isNightmodeOn: We.fb,
					isPrivateCommunityUXEnabled: Nt.c,
					isTooltipOpen: (e, t) => !!Object(Ue.a)(e),
					origin: Be.l,
					post: De.F,
					postSEOV2IdCardVariant: Te.h,
					profileCollectionsEnabled: ge.a,
					replyComment: (e, t) => {
						let {
							postId: s,
							commentId: n,
							commentsPageKey: r
						} = t;
						return Object(ke.s)(e, {
							commentsPageKey: zt({
								postId: s,
								commentId: n,
								commentsPageKey: r
							})
						})
					},
					shouldOpenPostInNewTab: We.lb,
					showNewDesignBlocking: Ce.a,
					subredditAboutInfo: (e, t) => {
						let {
							subredditName: s
						} = t;
						return s ? Object(he.z)(e, {
							subredditName: s
						}) : void 0
					},
					subredditOrProfile: De.U,
					userHovercardIsOpen: (e, t) => Object(Ue.b)(Object(tt.b)({
						itemId: t.postId,
						tooltipIdPrefix: Y.a,
						tooltipType: lt.f.StickyPost
					}))(e),
					userPrefs: We.Kb,
					inResonatePilot: Me.a,
					isQualifiedForUpvotePrompt: fe.c,
					isModWithUserNotesPermissions: (e, t) => {
						let {
							subredditName: s
						} = t;
						const n = Object(he.I)(e, s);
						return !!n && Object(Ae.i)(e, n)
					},
					isNsfwBlurSubreddit: pe.e,
					isNsfwFullPageInterstitial: (e, t) => {
						let {
							postId: s
						} = t;
						const n = Object(De.U)(e, {
								postId: s
							}),
							r = !(!n || !n.isNSFW),
							o = Object(pe.g)(e) === pe.a.NoPreview;
						return Object(pe.f)(e) ? o : r && o
					}
				}),
				Jt = (e, t) => ({
					closeCrosspostRecommendationsModal: () => e(Object(U.g)(G.a)),
					dismissTruncation: t => e(Object(He.a)({
						subredditId: t
					})),
					expandCommentsList: () => e(Object(R.a)()),
					setCommentFocus: t => e(T.g({
						commentListNodeId: t
					})),
					fullyLoadComments: () => e(Object(H.fullCommentsPageDataRequested)(t.postId, void 0, {
						subredditName: t.subredditName
					})),
					onHideTooltip: () => e(Object(Z.i)()),
					onToggleTooltip: t => e(Object(Z.h)({
						tooltipId: t
					})),
					openLoginModal: () => e(Object(D.openLoginModal)()),
					openNsfwModal: () => e(Object(W.a)()),
					openRegisterModal: () => e(Object(D.openRegisterModal)()),
					openReportFlow: (t, s) => e(Object(V.c)(t, s)),
					submitCommentAfterSignUp: () => e(M.m()),
					goToSubredditPage: t => e(Object(g.b)(t)),
					truncateCommentsList: () => e(Object(R.b)()),
					fetchCommentsNativeAd: t => e(Object(N.a)(t)),
					fetchUXExperiences: t => e(Object(F.b)(t)),
					getIsTrackingCrossposts: t => e(Object(B.b)(t)),
					getPostCrowdControlLevel: t => e(Object(Ve.b)(t)),
					triggerUpvotePrompt: (t, s, n) => {
						e(Object(q.b)(t, s, n))
					}
				}),
				Qt = Object(f.b)(Yt, Jt);
			class Xt extends h.a.Component {
				constructor(e) {
					super(e), this.collectionPostWrapperRef = null, this.didRenderLoading = !1, this.needsUpdatedMeasurements = !0, this.scrollY = null, this.recheckScrollTimer = -1, this.postPaused = !0, this.setPostScrollItemRef = e => {
						this.postScrollItemRef = e, setTimeout(this.handleScroll)
					}, this.setAdScrollItemRef = e => {
						this.adScrollItemRef = e, setTimeout(this.handleScroll), this.needsUpdatedMeasurements = !0
					}, this.setCommentAdRef = e => {
						this.commentAdRef = e
					}, this.handleScroll = C()(() => {
						if (!this.scrollContainerEl) return;
						this.needsUpdatedMeasurements && this.updateMeasurements();
						const {
							didPassAdScrollThreshold: e,
							didScrollPastPost: t,
							scrollContainerEl: s,
							scrollAdThreshold: n,
							scrollPostThreshold: r,
							props: {
								userHovercardIsOpen: o,
								onToggleTooltip: a,
								postId: i
							}
						} = this;
						clearTimeout(this.recheckScrollTimer), this.recheckScrollTimer = -1;
						const c = s === window ? s.scrollY : s ? s.scrollTop : 0;
						this.scrollY = c, this.state.commentNativeAdId && (!e && void 0 !== n && c >= n && (this.didPassAdScrollThreshold = !0, this.adScrollItemRef && this.adScrollItemRef.pauseContent()), e && void 0 !== n && c < n && (this.didPassAdScrollThreshold = !1, this.adScrollItemRef && this.adScrollItemRef.focusContent())), !t && void 0 !== r && c >= r && (this.didScrollPastPost = !0), t && void 0 !== r && c < r && (this.didScrollPastPost = !1, o && L.a.write(() => {
							a(Object(tt.b)({
								itemId: i,
								tooltipIdPrefix: Y.a,
								tooltipType: lt.f.StickyPost
							}))
						}))
					}, _.L), this.sendEventWithName = (e, t) => () => this.props.sendEvent(Object(jt.d)(this.props.postId, e, t)), this.updateWindowHeight = () => {
						this.needsUpdatedMeasurements = !0, this.handleScroll()
					}, this.updateCommentSortRef = e => {
						this.commentSortRef = e, this.needsUpdatedMeasurements = !0
					}, this.updateCommentFormRef = e => {
						this.commentFormRef = e, this.needsUpdatedMeasurements = !0
					}, this.updateCollPostWrapperRef = e => {
						this.collectionPostWrapperRef = e
					}, this.handleViewAllCommentsClick = () => {
						const {
							dismissTruncation: e,
							expandCommentsList: t,
							post: s
						} = this.props;
						t();
						const n = s && Object(Ee.w)(s) && s && s.belongsTo.id;
						n && e(n), this.sendEventWithName("view_all_comments")()
					}, this.handleContentClick = () => {
						this.props.isCommentsListTruncated && this.props.expandCommentsList()
					}, this.handleFindKeyPress = e => {
						const t = e.key === se.b.F || e.keyCode === se.a.F,
							s = e.ctrlKey || e.metaKey;
						t && s && this.props.expandCommentsList()
					}, this.setLayoutRef = e => {
						this.setState({
							layoutRef: e
						})
					}, this.onAllCommentsRendered = () => {
						this.props.isEligibleForCommentTruncation || this.state.allCommentsRendered || this.setState({
							allCommentsRendered: !0
						})
					}, this.didScrollPastPost = e.shouldScrollToComments && !!e.post && !!e.post.numComments, this.didPassAdScrollThreshold = e.shouldScrollToComments && !!e.post && !!e.post.numComments, this.state = {
						allCommentsRendered: !1,
						layoutRef: null,
						commentNativeAdId: null,
						isUpvotePromptTriggered: !1,
						isEmbeddedInLiveChatIframe: !1
					}
				}
				hasCommentAdRef() {
					return this.commentAdRef && this.commentAdRef.clientHeight > 0
				}
				UNSAFE_componentWillMount() {
					const {
						commentId: e,
						location: t,
						setCommentFocus: s
					} = this.props;
					e && s(e), Object(ht.a)(t.search) && this.setState({
						isEmbeddedInLiveChatIframe: !0
					})
				}
				async componentDidMount() {
					var e;
					this.props.isQualifiedForUpvotePrompt && (this.upvotePromptId = setTimeout(() => {
						this.props.triggerUpvotePrompt(this.props.postId, !1, () => this.setState({
							isUpvotePromptTriggered: !0
						}))
					}, fe.b));
					const {
						commentFormRef: t,
						commentSortRef: s,
						props: {
							isLanguagePromptUxtsEnabled: n,
							isLoggedIn: r,
							isNsfwBlurSubreddit: o,
							isOverlay: a,
							openNsfwModal: i,
							post: c,
							shouldScrollToComments: d,
							subredditName: l
						}
					} = this, m = new URLSearchParams(this.props.location.search).get("report") || "";
					if (["true", "1"].includes(m) && this.props.openReportFlow(this.props.postId, a), c && !c.isSponsored && !c.isRemoved && c.belongsTo.type !== re.a.PROFILE) {
						const e = await this.props.fetchCommentsNativeAd(c.id);
						e && this.setState({
							commentNativeAdId: e
						})
					}
					if (n && c && c.postId && this.props.fetchUXExperiences(c.postId), a ? (this.scrollContainerEl = document.getElementById(ee.e), d && (t || s || this.hasCommentAdRef()) && c && c.numComments ? this.scrollToComments() : L.a.write(() => {
							setTimeout(() => {
								Object(k.c)(this.scrollContainerEl, 0)
							})
						})) : this.scrollContainerEl = window, this.props.hasModeratorPostPermissions && this.props.post)
						if (this.props.getPostCrowdControlLevel(this.props.post.id), this.props.post.crosspostRootId) {
							const e = this.props.post.crosspostRootId;
							this.props.getIsTrackingCrossposts(e)
						} else if (this.props.post.source) {
						const t = this.props.post.source.url;
						if (t) {
							const s = null === (e = Object(vt.b)(t)[0]) || void 0 === e ? void 0 : e.components;
							if (s && s.hasOwnProperty("postID36")) {
								const e = Object(Ee.y)(s.postID36);
								this.props.getIsTrackingCrossposts(e)
							}
						}
					}
					if (this.needsUpdatedMeasurements = !0, this.addListeners(), this.checkAndSendScreenview(), L.a.read(() => {
							const e = [Object(ft.a)()];
							this.props.isOverlay || Object(P.d)(P.c.CommentsPage, r, e)
						}), this.props.inResonatePilot) {
						const e = this.props.subredditName ? this.props.subredditName.toLowerCase() : "";
						_.Rb.includes(e) && Object(Et.a)(e)
					}
					this.props.isLoggedIn && Object(de.c)() && this.props.submitCommentAfterSignUp(), (null == c ? void 0 : c.isNSFW) && l && o && i()
				}
				UNSAFE_componentWillReceiveProps(e) {
					e.postId !== this.props.postId && (this.didRenderLoading = !1), e.commentId && e.commentId !== this.props.commentId && this.props.setCommentFocus(e.commentId)
				}
				UNSAFE_componentWillUpdate(e) {
					this.removeListeners(e)
				}
				componentDidUpdate(e) {
					if (this.needsUpdatedMeasurements = !0, this.addListeners(), this.checkAndSendScreenview(), e.location.pathname !== this.props.location.pathname) {
						const e = new URLSearchParams(this.props.location.search).get("report") || "";
						["true", "1"].includes(e) && this.props.openReportFlow(this.props.postId, this.props.isOverlay)
					}
					if (e.location.search !== this.props.location.search && this.setState({
							isEmbeddedInLiveChatIframe: Object(ht.a)(this.props.location.search)
						}), e.postId !== this.props.postId) {
						const e = this.props.post && Object(Ot.a)(this.props.post);
						this.props.post && this.props.post.numComments ? L.a.read(this.handleScroll) : L.a.write(() => {
							e || Object(k.c)(this.scrollContainerEl, 0), L.a.read(this.handleScroll)
						}), this.props.isOverlay && !e && L.a.write(() => {
							setTimeout(() => {
								Object(k.c)(this.scrollContainerEl, 0)
							})
						});
						const t = this.collectionPostWrapperRef;
						if (e && t) {
							const e = $.b + (this.props.isOverlay ? $.m : 0),
								s = t.getBoundingClientRect().top;
							let n;
							const r = (n = this.props.isOverlay ? document.getElementById(ee.e) : document.getElementsByTagName("body")[0]) && n.getBoundingClientRect().top,
								o = Math.abs(r - s),
								a = this.props.isOverlay ? Ht : o - e;
							(this.props.isOverlay ? n && n.scrollTop || 0 : window.pageYOffset) >= a && L.a.write(() => {
								setTimeout(() => {
									this.props.isOverlay ? Object(k.c)(n, a) : Object(k.c)(document, a)
								})
							})
						}
					}
					this.truncateCommentList()
				}
				componentWillUnmount() {
					if (this.removeListeners(), this.needsUpdatedMeasurements = !1, this.scrollContainerEl = void 0, this.upvotePromptId && clearTimeout(this.upvotePromptId), this.props.isOverlay && this.props.isQualifiedForUpvotePrompt && !this.state.isUpvotePromptTriggered) {
						const e = !0;
						this.props.triggerUpvotePrompt(this.props.postId, e)
					}
					this.props.isCrosspostRecommendationsExperimentEnabled && this.props.closeCrosspostRecommendationsModal()
				}
				truncateCommentList() {
					const {
						dismissedSubreddits: e,
						subredditOrProfile: t,
						truncateCommentsList: s
					} = this.props, n = t && t.id;
					n && !e.includes(n) && s()
				}
				updateMeasurements() {
					this.needsUpdatedMeasurements = !1, this.windowHeight = window.innerHeight, this.commentFormRef ? this.scrollPostThreshold = this.commentFormRef.offsetTop : this.commentSortRef ? this.scrollPostThreshold = this.commentSortRef.offsetTop : this.scrollPostThreshold = Ut, this.state.commentNativeAdId && (this.commentAdRef ? this.scrollAdThreshold = this.commentAdRef.offsetTop + this.commentAdRef.clientHeight / 2 : this.scrollAdThreshold = Ut)
				}
				addListeners() {
					const {
						isOverlay: e
					} = this.props;
					e && window.addEventListener("resize", this.updateWindowHeight), this.props.isCommentsListTruncated && window.addEventListener("keydown", this.handleFindKeyPress), this.scrollContainerEl && this.scrollContainerEl.addEventListener("scroll", this.handleScroll)
				}
				removeListeners(e) {
					const {
						isOverlay: t
					} = this.props;
					t && window.removeEventListener("resize", this.updateWindowHeight), e && this.props.isCommentsListTruncated !== e.isCommentsListTruncated && window.removeEventListener("keydown", this.handleFindKeyPress), this.scrollContainerEl && this.scrollContainerEl.removeEventListener("scroll", this.handleScroll)
				}
				scrollToComments() {
					L.a.read(() => {
						const e = document.getElementById(ee.e);
						if (e) {
							let t, s;
							this.hasCommentAdRef() ? t = this.commentAdRef.offsetTop : this.commentFormRef ? (t = this.commentFormRef.offsetTop - Wt, s = this.commentFormRef.offsetParent) : this.commentSortRef ? (t = this.commentSortRef.offsetTop - Wt, s = this.commentSortRef.offsetParent) : t = 0, s && (t += s.offsetTop), L.a.write(() => {
								Object(k.c)(e, t), this.needsUpdatedMeasurements = !0, setTimeout(() => L.a.read(this.handleScroll))
							})
						}
					})
				}
				shouldSendScreenview() {
					const {
						apiError: e,
						apiPending: t,
						commentsPageKey: s,
						pageLayer: n
					} = this.props;
					return !Object(mt.a)(n) && y.c.has(s) && (e || !t || this.listLongEnoughForScreenView())
				}
				listLongEnoughForScreenView() {
					return !!this.commentSortRef && this.commentSortRef.getBoundingClientRect().bottom > window.innerHeight
				}
				checkAndSendScreenview() {
					L.a.read(() => {
						const {
							commentId: e,
							commentsPageKey: t,
							postId: s,
							sendEvent: n,
							sort: r
						} = this.props;
						if (!this.shouldSendScreenview()) return;
						const o = y.c.end(t);
						n(Object(_t.c)(t, s, e, O.TimerType.InApp, o, r))
					})
				}
				isCommentPermalink() {
					return void 0 !== this.props.commentId
				}
				renderPageError() {
					const {
						contentGateInfo: e,
						currentUserShowNSFW: t,
						isNsfwBlurSubreddit: s,
						isOverlay: n,
						post: r,
						subredditName: o
					} = this.props, a = !(!r || !r.isNSFW || t);
					if (!a || s) return null;
					const i = Object(gt.a)(e, a, o);
					if (!i) return null;
					let c = h.a.createElement(qt, i);
					return n && (c = h.a.createElement(kt.a, {
						content: c
					})), c
				}
				render() {
					const {
						apiError: e,
						apiPending: t,
						canShowCrosspostRecommendationsModal: s,
						closeCrosspostRecommendationsModal: n,
						closeLocation: r,
						commentId: o,
						commentsPageKey: a,
						isActionBarAnimationEnabled: i,
						isCountAnimShadowTestEnabled: c,
						isCrawler: d,
						isCrosspostRecommendationsExperimentEnabled: l,
						isD2xPdpSideRailRecsEnabled: m,
						isEligibleForCommentTruncation: u,
						isLoggedIn: p,
						isModWithUserNotesPermissions: C,
						isNightmodeOn: b,
						isNsfwBlurSubreddit: f,
						isNsfwFullPageInterstitial: g,
						isOverlay: x,
						isPrivateCommunityUXEnabled: v,
						post: y,
						postId: O,
						postSEOV2IdCardVariant: E,
						profileCollectionsEnabled: k,
						sendEvent: L,
						sort: w,
						subredditName: S,
						subredditOrProfile: I,
						showNewDesignBlocking: P
					} = this.props, {
						isEmbeddedInLiveChatIframe: N
					} = this.state;
					if ((null == y ? void 0 : y.isNSFW) && S && g && P) return h.a.createElement(X.a, {
						contentTitle: Object(yt.d)(S)
					});
					const T = Object(Te.f)(E);
					if (!y) {
						if (v && ((null == e ? void 0 : e.type) === _.k || (null == e ? void 0 : e.type) === _.wb)) return h.a.createElement(J.a, {
							isLoggedIn: p,
							isNightmodeOn: b
						});
						if (t) return h.a.createElement(Ke.f, null);
						const s = this.renderPageError();
						return s || (e ? e.type === _.o ? h.a.createElement(qt, {
							contentGateType: wt.a.PostBlockedForLegalReason
						}) : h.a.createElement(Ke.d, {
							postId: O,
							commentId: o,
							apiError: e,
							sort: w
						}) : h.a.createElement(Ke.f, null))
					} {
						const e = this.renderPageError();
						if (e) return e
					}
					const M = this.isCommentPermalink(),
						R = y.belongsTo.type === re.a.PROFILE,
						F = Object(Ot.a)(y) && (!R || k),
						B = !p,
						A = I && I.isQuarantined,
						D = !u && !this.state.allCommentsRendered && !d,
						U = l && s,
						W = y.isNSFW && f;
					return At.input.channel.postID = O, N ? h.a.createElement("div", {
						className: Ft.a.EmbeddedLiveChatContainer
					}, this.renderCommentPanes()) : h.a.createElement(ts, {
						closeLocation: r,
						commentsPageKey: a,
						containerRef: this.setLayoutRef,
						isD2xPdpSideRailRecsEnabled: m,
						isLoggedIn: p,
						isOverlay: x,
						isSwapVariant: T,
						post: y,
						shouldBlurHeaderImage: W,
						subredditOrProfile: I,
						shouldFitPageToContent: B,
						isCollectionLayout: F
					}, h.a.createElement(it.a, {
						postId: O,
						isNightMode: b,
						isOverlay: x,
						commentId: o
					}), !x && h.a.createElement(dt.a, {
						post: y
					}), A && h.a.createElement(ot.a, {
						subredditName: I.name
					}), h.a.createElement(at.a, null), h.a.createElement("div", {
						className: Object(j.a)(Ft.a.PageContentWrapper, {
							[Ft.a.LargePageContent]: F,
							[Ft.a.ChatPage]: this.props.isChatPost
						}),
						key: "PostContentWrapper"
					}, F && h.a.createElement(Zt, {
						isOverlay: x,
						isNightmodeOn: b,
						postId: O
					}), h.a.createElement(Dt, {
						condition: F,
						wrap: e => h.a.createElement("div", {
							ref: this.updateCollPostWrapperRef,
							className: Ft.a.CollectionBodyWrapper
						}, e)
					}, h.a.createElement(ct.c, {
						isCommentPermalink: M,
						isOverlay: x,
						isModWithUserNotesPermissions: C,
						postId: O,
						redditStyle: x,
						scrollerItemRef: this.setPostScrollItemRef,
						sendEvent: L,
						isActionBarAnimationEnabled: i,
						isCountAnimShadowTestEnabled: c,
						isCrosspostRecommendationsExperimentEnabled: l
					}), this.props.canViewCreatorStats && h.a.createElement($e.a, {
						post: y,
						subreddit: I
					}), this.state.commentNativeAdId && h.a.createElement("div", {
						ref: this.setCommentAdRef
					}, h.a.createElement(z.a, {
						key: `event-post-id-${y.id}`,
						isOverlay: x,
						postId: this.state.commentNativeAdId,
						scrollerItemRef: this.setAdScrollItemRef
					})), this.renderCommentPanes())), I && !Object(je.i)(I) && h.a.createElement(Q.a, {
						awaitAllCommentsRendered: D,
						contentContainerRef: this.state.layoutRef,
						isOverlay: x,
						post: y,
						subredditOrProfile: I
					}), U && h.a.createElement(K.a, {
						ignoreDefaultFocus: !0,
						onCloseModal: n,
						post: y,
						withOverlay: !0
					}))
				}
				renderCommentPanes() {
					const {
						apiError: e,
						apiPending: t,
						canCommentAsModerator: s,
						commentId: n,
						commentsPageKey: o,
						fullyLoaded: i,
						hasModeratorPostPermissions: d,
						headComment: l,
						isAvatarsInCommentsEnabled: m,
						isChatPost: p,
						isCommentsListTruncated: C,
						isCommentBeforeSignUpEnabled: b,
						isEligibleForCommentTruncation: f,
						isLoggedIn: g,
						isOverlay: x,
						pdpCommentSearchExperiment: y,
						location: O,
						onOtherDiscussions: E,
						openLoginModal: _,
						openRegisterModal: k,
						origin: L,
						pageLayer: w,
						post: S,
						postId: P,
						replyComment: N,
						sendEvent: T,
						sort: R,
						subredditAboutInfo: F,
						subredditOrProfile: B,
						userPrefs: A
					} = this.props, {
						isEmbeddedInLiveChatIframe: D
					} = this.state;
					if (!S) return null;
					let U, W = "";
					const H = (null == y ? void 0 : y.bucketed) && Object(mt.a)(w) && Object(mt.b)(S);
					if (H) {
						const e = c()([...Object(a.a)(O.search)]);
						U = Object(ve.e)(u()(e, ne.d)), W = Object(ve.b)(P, void 0, U, A.over18 && A.searchOver18)
					}
					const V = this.isCommentPermalink(),
						Z = [],
						q = S.isLocked && !s,
						z = !(V || S.isArchived || F && F.userIsBanned || S.authorIsBlocked || S.unrepliableReason);
					if (q) Z.push(h.a.createElement(nt.a, {
						key: "commentThreadBanner",
						subredditOrProfile: B
					}));
					else if (S.isArchived) Z.push(h.a.createElement(st.a, {
						key: "commentThreadBanner"
					}));
					else if (z && !p && !E)
						if (g || !g && b) {
							const e = Object(I.a)(v.c.replyToPost, P);
							Z.push(h.a.createElement(Ze.a, {
								autofocus: !1,
								isTopLevelComment: !0,
								depth: 0,
								draftKey: e,
								draftType: v.c.replyToPost,
								editorElementRef: this.updateCommentFormRef,
								key: "form" + e,
								parentCommentId: "replyToPost",
								postId: P,
								submitAction: (t, s) => {
									let {
										validate: n,
										...r
									} = t;
									return n ? M.w({
										postId: P,
										commentsPageKey: o,
										draftKey: e,
										formData: r,
										editorMode: s
									}) : M.q({
										postId: P,
										commentsPageKey: o,
										draftKey: e,
										formData: r,
										editorMode: s
									})
								},
								submitButtonText: r.fbt._("Comment", null, {
									hk: "m3FAA"
								})
							}))
						} else Z.push(h.a.createElement(qe.a, {
							key: "loggedOutCommentForm",
							location: O,
							openLoginModal: _,
							openRegisterModal: k,
							origin: L
						}));
					if (S.contestMode && Z.push(h.a.createElement(rt.a, {
							hasModeratorPostPermissions: d,
							key: "contestModeBanner"
						})), p || E || (this.props.isSubredditDiscoveryCrosspostEnabled ? Z.push(h.a.createElement(St.a, {
							commentId: n,
							commentsPageKey: o,
							isOverlay: x,
							key: "commentNavigation",
							postId: P
						}), h.a.createElement(Je.b, {
							commentId: n,
							elementRef: this.updateCommentSortRef,
							isOverlay: x,
							key: "commentSort",
							location: O,
							postId: P,
							sort: R,
							suggestedSort: S.suggestedSort
						})) : Z.push(h.a.createElement(Je.b, {
							commentId: n,
							elementRef: this.updateCommentSortRef,
							isOverlay: x,
							key: "commentSort",
							location: O,
							postId: P,
							sort: R,
							suggestedSort: S.suggestedSort
						}), h.a.createElement(St.a, {
							commentId: n,
							commentsPageKey: o,
							isOverlay: x,
							key: "commentNavigation",
							postId: P
						}))), Z.push(h.a.createElement(pt.a, {
							key: "subredditForkingCTA",
							postId: P
						})), !t || l || p || E)
						if (!e || l || E)
							if (E) Z.push(h.a.createElement(Vt, {
								commentSort: R,
								key: "otherDiscussions",
								postId: P,
								isOverlay: x,
								postPermalink: S.permalink
							}));
							else if (p) {
						if (B && B.id) {
							const e = N ? Object(I.a)(v.c.replyToComment, N.id) : Object(I.a)(v.c.replyToPost, P),
								s = zt({
									postId: P,
									commentId: n,
									commentsPageKey: o
								});
							Z.push(h.a.createElement(Ge.a, {
								commentId: n,
								commentsPageKey: s,
								draftKey: e,
								isLoading: t && !l || !i && t,
								key: "commentsChat",
								postId: P,
								renderedInOverlay: x,
								subredditId: B.id,
								isEmbeddedLiveChat: D
							}, t => {
								let {
									scrollToBottom: n
								} = t;
								return g ? h.a.createElement(Ye.a, {
									isV2: !0,
									isEmbeddedLiveChat: D,
									key: "chatCommentsForm",
									postId: P,
									replyComment: N,
									draftKey: e,
									commentsPageKey: s,
									isEditing: !1,
									scrollToBottom: n,
									sendEvent: T
								}) : h.a.createElement(qe.a, {
									key: "loggedOutCommentForm",
									className: Ft.a.ChatLoggedOutForm,
									location: O,
									openLoginModal: _,
									openRegisterModal: k,
									origin: L
								})
							}))
						}
					} else H && U ? Z.push(h.a.createElement(ut.a, {
						key: `search-pdp-comments-${o}`,
						commentsPageKey: o,
						isOverlay: x,
						prevLocation: O,
						listingKey: W,
						post: S,
						searchOptions: U
					})) : (Z.push(h.a.createElement("div", {
						className: Object(j.a)(Ft.a.CommentsPaneWrapper, {
							[Ft.a.mIsInOverlay]: x
						}),
						key: "commentsPaneWrapper"
					}, h.a.createElement(Xe.a, Bt({}, this.props, {
						shouldTruncateComments: f && C,
						handleViewAllCommentsClick: this.handleViewAllCommentsClick,
						numberOfComments: S.numComments,
						onClick: this.handleContentClick
					}), h.a.createElement(ze.a, {
						commentId: n,
						commentsPageKey: o,
						postId: P,
						onAllCommentsRendered: this.onAllCommentsRendered,
						renderedInOverlay: x
					})))), e && l ? Z.push(h.a.createElement(Ke.e, {
						key: "commentsErrorState",
						postId: P,
						commentId: n,
						sort: R,
						apiError: e
					})) : !i && t && Z.push(h.a.createElement(Ke.a, {
						isAvatarsInCommentsEnabled: m,
						key: "commentsPlaceholder"
					})));
					else Z.push(h.a.createElement(Ke.e, {
						key: "errorState",
						postId: P,
						commentId: n,
						sort: R,
						apiError: e
					}));
					else this.didRenderLoading = !0, Z.push(h.a.createElement(Ke.a, {
						isAvatarsInCommentsEnabled: m,
						key: "commentsPlaceholder"
					}));
					return h.a.createElement(ce.a.Provider, {
						value: this.sendEventWithName
					}, Z)
				}
			}
			const $t = Gt(Object(ae.b)(Qt(Object(bt.c)(Xt)))),
				es = w.a.wrapped(Qe.a, "DetailsPageSidebar", Ft.a),
				ts = e => {
					const {
						children: t,
						commentsPageKey: s,
						containerRef: n,
						isCollectionLayout: r,
						isD2xPdpSideRailRecsEnabled: o,
						isOverlay: a,
						isSwapVariant: i,
						post: c,
						shouldBlurHeaderImage: d,
						shouldFitPageToContent: l,
						subredditOrProfile: m
					} = e;
					if (a) return h.a.createElement(kt.a, {
						containerRef: n,
						content: t,
						isCollectionLayout: r,
						sidebar: m && h.a.createElement(Qe.a, {
							commentsPageKey: s,
							isOverlay: !0,
							post: c,
							subredditOrProfile: m,
							subredditName: m.name,
							subredditId: m.id
						})
					});
					const u = r ? $.h : oe.a,
						p = o && m && !Object(je.i)(m) ? `r/${m.name}` : void 0;
					return h.a.createElement(Lt.a, {
						backToSubredditName: p,
						containerRef: n,
						maxWidth: $.h,
						fitPageToContent: l,
						content: t,
						disableFullscreen: !0,
						isPageSwapped: i,
						isCollectionLayout: r,
						navBar: m && h.a.Children.toArray([h.a.createElement(et.a, {
							key: m.name,
							disableFullscreen: !0,
							headerText: m.name,
							maxWidth: u,
							prefixedHeaderText: m.displayText,
							shouldBlurHeaderImage: d,
							subredditOrProfile: m,
							url: m.url
						}), !Object(je.i)(m) && h.a.createElement(Ct.a, {
							disableFullscreen: !0,
							homeUrl: m.url,
							maxWidth: u,
							subredditId: m.id
						})]),
						sidebar: m && h.a.createElement(es, {
							commentsPageKey: s,
							post: c,
							subredditOrProfile: m,
							subredditName: m.name,
							subredditId: m.id
						})
					})
				};
			t.default = Object(E.a)(Object(It.a)(Kt))
		},
		"./src/reddit/pages/CommentsPage/withPageSorting.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return g
			}));
			var n = s("./node_modules/lodash/fromPairs.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./src/lib/extractQueryParams/index.ts"),
				d = s("./src/lib/makeCommentsPageKey/index.ts"),
				l = s("./src/lib/objectSelector/index.ts"),
				m = s("./src/reddit/actions/otherDiscussions/constants.ts"),
				u = s("./src/reddit/helpers/getCommentsPageSort/index.ts"),
				p = s("./src/reddit/models/Comment/index.ts"),
				C = s("./src/reddit/models/Post/index.ts");
			const b = e => {
					const {
						partialPostId: t
					} = e.match.params;
					return t && Object(C.y)(t)
				},
				h = (e, t, s) => {
					const n = b(e),
						o = (e => {
							const {
								partialCommentId: t
							} = e.match.params;
							return t && Object(p.h)(t)
						})(e),
						a = (e => {
							const {
								location: {
									search: t
								}
							} = e;
							return r()([...Object(c.a)(t)])
						})(e),
						i = {
							depth: a.depth && parseInt(a.depth, 10) || void 0,
							context: a.context && parseInt(a.context, 10) || void 0,
							hasSortParam: t,
							sort: s
						};
					return Object(d.a)(n, o, i)
				},
				f = Object(l.a)((e, t) => {
					const s = b(t);
					return Object(u.a)(e, s)
				});

			function g(e) {
				return t => {
					const {
						hasSortParam: s,
						sortToUse: n
					} = Object(i.e)(e => f(e, t)), r = h(t, s, n), o = Object(m.d)(t.match.path), c = {
						...t,
						commentsPageKey: r,
						hasSortParam: s,
						onOtherDiscussions: o,
						sort: n
					};
					return a.a.createElement(e, c)
				}
			}
		},
		"./src/reddit/pages/SearchResults/index.m.less": function(e, t, s) {
			e.exports = {
				sidebar: "_35ky2Wm3TP6kFdIh-DOxmA",
				searchSwitcherContainer: "_79QamRjUfUQIFHxCnTvSZ"
			}
		},
		"./src/reddit/pages/SearchResults/index.tsx": function(e, t, s) {
			"use strict";
			s.r(t), s.d(t, "pageConfig", (function() {
				return Mn
			})), s.d(t, "default", (function() {
				return Rn
			}));
			var n = s("./node_modules/lodash/pick.js"),
				r = s.n(n),
				o = s("./node_modules/react/index.js"),
				a = s.n(o),
				i = s("./node_modules/react-redux/es/index.js"),
				c = s("./src/lib/constants/index.ts"),
				d = s("./src/lib/hooks/usePrevious.ts"),
				l = s("./src/lib/makeSearchKey/index.ts"),
				m = s("./node_modules/lodash/isEqual.js"),
				u = s.n(m),
				p = s("./src/reddit/actions/searchQueryId/index.tsx"),
				C = s("./src/reddit/actions/survey/index.ts"),
				b = s("./src/reddit/components/JumpToContent/index.tsx"),
				h = s("./src/lib/classNames/index.ts"),
				f = s("./src/reddit/constants/page.ts"),
				g = s("./src/reddit/selectors/searchResults.ts"),
				x = s("./node_modules/lodash/constant.js"),
				v = s.n(x),
				y = s("./node_modules/lodash/times.js"),
				O = s.n(y),
				E = s("./src/reddit/components/SearchResultsContent/SearchResultsList/index.tsx"),
				j = s("./src/reddit/components/SearchResultsContent/CommentPlaceholder/index.tsx"),
				_ = s("./src/reddit/components/SearchResultsContent/Communities/index.m.less"),
				k = s.n(_);
			const L = e => {
				const {
					listingKey: t,
					searchOptions: s,
					originElement: n
				} = e, r = Object(i.e)(e => Object(g.d)(e, {
					listingKey: t
				})), o = Object(i.e)(e => Object(g.t)(e, {
					listingKey: t
				})), c = Boolean(o && o.token) && r.length > 0;
				return a.a.createElement("div", {
					className: k.a.container,
					"data-testid": "comments-list"
				}, a.a.createElement(E.b, {
					identifiers: r,
					listingKey: t,
					searchOptions: s,
					componentType: E.c.Comments,
					originElement: n,
					fireScreenview: !0
				}), c && a.a.Children.toArray(O()(3, v()(a.a.createElement(j.a, {
					className: k.a.loadMoreItem,
					isLoading: !0
				})))))
			};
			var w = s("./src/reddit/components/SearchResultsContent/CommunityPlaceholder/index.tsx");
			const S = (e, t) => Boolean(t && t.token) && e.length > 0,
				I = e => {
					const {
						listingKey: t,
						searchOptions: s
					} = e, n = Object(i.e)(e => Object(g.g)(e, {
						listingKey: t
					})), r = Object(i.e)(e => Object(g.u)(e, {
						listingKey: t
					}));
					return a.a.createElement("div", {
						className: k.a.container,
						"data-testid": "communities-list"
					}, !s.is_multi && a.a.createElement(E.b, {
						identifiers: n,
						listingKey: t,
						searchOptions: s,
						componentType: E.c.Subreddits,
						fireScreenview: !0
					}), S(n, r) && a.a.Children.toArray(O()(3, v()(a.a.createElement(w.a, {
						className: k.a.loadMoreItem,
						isLoading: !0
					})))))
				};
			var P = s("./src/reddit/components/SearchResultsContent/index.m.less"),
				N = s.n(P),
				T = s("./src/reddit/components/SearchResultsContent/NoResults/index.tsx");
			const M = e => {
				const {
					listingKey: t,
					searchOptions: s
				} = e, n = Object(i.e)(e => Object(g.a)(e, {
					listingKey: t
				})), r = Object(i.e)(e => Object(g.s)(e, {
					listingKey: t
				}));
				return a.a.createElement("div", {
					className: k.a.container,
					"data-testid": "people-list"
				}, !s.is_multi && a.a.createElement(E.b, {
					identifiers: n,
					listingKey: t,
					searchOptions: s,
					componentType: E.c.Users,
					fireScreenview: !0
				}), S(n, r) && a.a.Children.toArray(O()(3, v()(a.a.createElement(w.a, {
					className: k.a.loadMoreItem,
					isLoading: !0
				})))))
			};
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var R = s("./src/config.ts"),
				F = s("./src/lib/ads/index.ts"),
				B = s("./src/lib/intersectionObserver/index.ts"),
				A = s("./src/lib/isUrl/index.ts"),
				D = s("./src/lib/opener/index.ts"),
				U = s("./src/reddit/actions/post.ts"),
				W = s("./src/reddit/components/BlankPost/index.tsx"),
				H = s("./src/reddit/components/EventPost/EventMetaHeader/index.tsx"),
				V = s("./src/reddit/components/JSAPIContainers/index.tsx"),
				Z = s("./src/reddit/components/Media/index.tsx"),
				q = s("./src/reddit/components/PostContainer/index.tsx"),
				z = s("./src/reddit/components/Thumbnail/index.tsx"),
				K = s("./src/reddit/components/TrackingHelper/index.tsx"),
				G = s("./src/reddit/constants/adEvents.ts"),
				Y = s("./src/reddit/contexts/PageLayer/index.tsx"),
				J = s("./src/reddit/contexts/Post/index.tsx"),
				Q = s("./src/reddit/helpers/canPreviewSelfText/index.ts"),
				X = s("./src/reddit/helpers/clickSourceData/index.ts"),
				$ = s("./src/reddit/helpers/overlay/index.ts"),
				ee = s("./src/reddit/helpers/path/index.ts"),
				te = s("./src/reddit/helpers/trackers/discoveryUnit.ts"),
				se = s("./src/reddit/helpers/trackers/searchResults.ts"),
				ne = s("./src/reddit/models/Media/index.ts"),
				re = s("./src/reddit/selectors/experiments/web2x_cta.ts"),
				oe = s("./src/reddit/selectors/posts.ts"),
				ae = s("./src/reddit/selectors/user.ts"),
				ie = s("./node_modules/reselect/es/index.js"),
				ce = s("./src/lib/getShortenedLink.ts"),
				de = s("./src/reddit/components/PostBackgroundWrapper/index.tsx"),
				le = s("./src/reddit/components/PostTitle/index.tsx"),
				me = s("./src/reddit/components/SearchPostFlatlist/index.tsx"),
				ue = s("./src/reddit/components/SearchPostMeta/index.tsx"),
				pe = s("./src/reddit/controls/OutboundLink/styled.tsx"),
				Ce = s("./src/reddit/components/AdLinkWrapper/index.tsx"),
				be = s("./src/reddit/components/CallToActionButton/index.tsx"),
				he = s("./src/reddit/helpers/styles/mixins/index.tsx"),
				fe = s("./src/reddit/hooks/useTheme.ts"),
				ge = s("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				xe = s("./src/reddit/components/SearchDiscoveryUnits/HeroUnit/index.m.less"),
				ve = s.n(xe);
			const {
				fbt: ye
			} = s("./node_modules/fbt/lib/FbtPublic.js"), Oe = `${R.a.assetPath}/img/link-placeholder.png`, Ee = Object(ie.c)({
				autoplayPref: ae.d,
				flairStyleTemplate: Y.Y,
				showCTAExperiment: re.a
			});

			function je(e) {
				var t;
				const {
					postId: s,
					listingKey: n,
					searchOptions: r,
					discoveryUnit: c
				} = e, d = Object(o.useRef)(), l = Object(o.useRef)(), {
					autoplayPref: m,
					flairStyleTemplate: u,
					showCTAExperiment: p
				} = Object(i.e)(t => Ee(t, e)), C = Object(i.e)(e => Object(g.z)(e, {
					identifier: s
				})), b = Object(i.e)(e => Object(oe.d)(e, {
					postId: s
				})), f = Object(i.e)(ge.b), x = Object(i.e)(ge.c), v = Object(Y.ib)(), y = Object(K.b)(), O = Object(i.d)(), E = Object(fe.a)(), {
					post: j,
					subredditOrProfile: _
				} = Object(J.d)(s), k = Object(F.w)(j), L = Object(o.useCallback)((e, t) => {
					O(Object(U.O)(e, t))
				}, [O]), w = !!j.source && !b;
				if (Object(o.useEffect)(() => (d.current && Object(B.a)(d.current, (e, t) => {
						l.current && (t ? l.current.focusContent() : l.current.pauseContent())
					}), Object(se.w)(n, j.id, r, v, c), () => {
						d.current && Object(B.b)(d.current), l.current && l.current.stopContent(), d.current = null, l.current = null
					}), []), !j) return null;
				const {
					media: S
				} = b || j || {}, I = (null == S ? void 0 : S.type) === ne.o.EMBED && (null == S ? void 0 : S.provider) === ne.v.Twitter, P = (null == S ? void 0 : S.type) === ne.o.VIDEO || (null == S ? void 0 : S.type) === ne.o.GIFVIDEO;

				function N(e) {
					e.stopPropagation(), e.preventDefault(), j.isSponsored ? (O(Object(U.y)(j, G.a.Click)), j.source ? j.source.outboundUrl ? Object(D.e)(j.source.outboundUrl, D.d.BLANK) : Object(D.e)(j.source.url, D.d.BLANK) : Object(D.e)(j.permalink, D.d.BLANK)) : O(f || x ? Object(U.Z)(Object(ee.b)(j.permalink), j.id) : Object($.a)({
						pathname: Object(ee.b)(j.permalink),
						state: Object(X.b)(v)
					}))
				}

				function T(e) {
					j.isSponsored && P || N(e), j.isSponsored && function(e) {
						P || (e.stopPropagation(), e.preventDefault()), y(Object(se.y)(j.id, r, c, n, v))
					}(e)
				}
				return j.isBlank ? a.a.createElement(W.BlankPost, {
					onPostViewable: L,
					post: j,
					postId: j.id
				}) : a.a.createElement(J.a, {
					postId: s
				}, a.a.createElement(q.b, {
					className: ve.a.postContainer,
					eventFactory: function(e, t) {
						var s;
						let o = null,
							a = te.r;
						return j.isSponsored || (a = te.t, o = null !== (s = se.E[t]) && void 0 !== s ? s : se.e.POST), a(r, v, o, n, c)(e)
					},
					onClick: N,
					post: j,
					"data-click-id": "hero_unit",
					style: {
						...Object(he.d)({
							theme: E,
							flairStyleTemplate: u,
							redditStyle: !1
						}),
						...Object(he.b)(u)
					}
				}, a.a.createElement(de.a, {
					"data-click-id": "background"
				}, a.a.createElement(H.a, {
					className: ve.a.eventMeta,
					post: j
				}), a.a.createElement("div", {
					className: Object(h.a)(ve.a.postContent, {}),
					"data-click-id": "body"
				}, a.a.createElement(ue.c, {
					className: ve.a.postItemMetaContainer,
					key: "PostMeta",
					shouldShowSubscribeButton: !1,
					post: j,
					subredditOrProfile: _
				}), a.a.createElement("div", {
					className: ve.a.postItemTitleContainer
				}, a.a.createElement(le.c, {
					hideSourceLink: !0,
					post: j,
					size: le.b.Medium,
					isOverlay: !1
				}), !k && w && a.a.createElement(pe.a, {
					className: ve.a.outboundLink,
					href: (null === (t = null == j ? void 0 : j.source) || void 0 === t ? void 0 : t.url) || "",
					isSponsored: j.isSponsored,
					postId: j.id,
					source: j.source
				}, Object(ce.a)(j))), function() {
					let e = a.a.createElement(a.a.Fragment, null);
					const t = !!j.source && Object(A.a)(j.source.url) || !!j.thumbnail && Object(A.a)(j.thumbnail.url),
						s = !(null == S ? void 0 : S.type) && t,
						n = Object(h.a)(ve.a.mediaWrapper, {
							[ve.a.marginCancel]: k && !!j.source,
							[ve.a.promotedTrend]: j.isSponsored
						});
					if (s) e = a.a.createElement("div", {
						className: n
					}, a.a.createElement(z.b, {
						className: ve.a.thumbnail,
						post: j,
						templatePlaceholderImage: Oe,
						usePreview: !0
					}));
					else if (S)
						if (S.type !== ne.o.RTJSON && S.type !== ne.o.TEXT) e = a.a.createElement("div", {
							className: Object(h.a)(n, I && ve.a.twitterEmbed),
							onClickCapture: T,
							ref: e => d.current = e
						}, a.a.createElement(Z.a, {
							className: ve.a.mediaContent,
							autoplayPref: m,
							isListing: !1,
							isMiniCard: !1,
							isNotCardView: !0,
							isPromotedTrend: j.isSponsored,
							post: b || j,
							primaryContent: !0,
							scrollerItemRef: e => l.current = e,
							shouldLoad: !0,
							shouldPause: !0,
							showCentered: !0,
							showFull: !0
						}));
						else {
							e = a.a.createElement("div", {
								className: ve.a.mediaPlaceholder
							}), (S.type === ne.o.RTJSON && S.richtextContent || S.type === ne.o.TEXT && S.content) && Object(Q.a)(j, null == E ? void 0 : E.subredditContext) && (e = a.a.createElement("div", {
								className: n,
								onClickCapture: N,
								ref: e => d.current = e
							}, a.a.createElement(Z.a, {
								autoplayPref: m,
								className: ve.a.textMedia,
								isListing: !1,
								isMiniCard: !1,
								isNotCardView: !1,
								post: b || j,
								shouldPause: !0,
								shouldLoad: !0,
								showCentered: !0,
								showFull: !0
							}), a.a.createElement("div", {
								className: ve.a.seeMore
							}, ye._("More", null, {
								hk: "362mDE"
							}))))
						} return e
				}(), k && j.source && a.a.createElement(Ce.a, {
					className: ve.a.adLinkWrapper,
					ctaExperimentDesign: p && "card"
				}, a.a.createElement(pe.a, {
					className: Object(h.a)(ve.a.outboundLink, {
						[ve.a.ctaExperiment]: p
					}),
					href: j.source.url.replace(R.a.redditUrl, ""),
					isSponsored: j.isSponsored,
					postId: j.id,
					source: j.source
				}, j.source.displayText), j.callToAction && a.a.createElement(be.a, {
					className: ve.a.adCallToAction,
					href: j.source.url.replace(R.a.redditUrl, ""),
					isSponsored: j.isSponsored,
					postId: j.id,
					source: j.source,
					showCTAExperiment: p
				}, j.callToAction)), !j.isSponsored && a.a.createElement(me.c, {
					className: Object(h.a)(ve.a.postItemFlatlistContainer),
					post: C || j
				}), a.a.createElement(V.d, null)))))
			}
			var _e = s("./src/lib/LRUCache/index.ts"),
				ke = s("./src/reddit/components/Scroller/Simple.tsx"),
				Le = s("./src/reddit/components/SearchResultsContent/helpers/viewSearchThingTracker.ts"),
				we = s("./src/reddit/components/SearchResultsContent/SearchResultsList/utils.ts"),
				Se = s("./src/reddit/hooks/usePageLayer.ts"),
				Ie = s("./src/reddit/models/SearchDiscoveryUnit/index.ts");
			const Pe = 376,
				Ne = new _e.a(1);

			function Te(e) {
				let {
					discoveryUnit: t,
					listingKey: s,
					searchOptions: n,
					postId: r,
					children: o
				} = e;
				const c = Object(i.d)(),
					d = Object(Se.a)(),
					l = Object(K.b)();
				if (!t || !r) return null;
				const m = () => {
					const e = `entered-hero-unit-${r}`;
					let o = Le.a.get(e);
					if (void 0 === o) {
						const a = t.layout.viewTypeWeb === Ie.b.PromotedTrendHero;
						o = () => {
							c((e, o) => {
								Object(we.b)(r), Object(te.u)(o(), t, r, n, d, s, a)
							})
						}, Le.a.set(e, o)
					}
					return o
				};
				return a.a.createElement(ke.b, null, (() => {
					const e = `hero-unit-search-${s}`;
					let a;
					return void 0 === (a = Ne.get(e)) && (a = {
						estHeight: Pe,
						trackOnEnteredViewport: m(),
						trackOnExitedViewport: Object(Le.c)(r, s, e => Object(we.a)(l, r, s, n, d, e), 0),
						id: t.id,
						render: () => o
					}), Ne.set(e, a), [a]
				})())
			}
			var Me = s("./src/reddit/components/SearchPost/Placeholder.tsx"),
				Re = s("./src/reddit/models/DiscoveryUnit/index.ts");
			const {
				Hero: Fe,
				PromotedTrendHero: Be
			} = Ie.b;
			const Ae = e => {
				const {
					listingKey: t,
					searchOptions: s
				} = e;
				let n = Object(i.e)(e => Object(g.w)(e, {
					listingKey: t
				}));
				const r = Object(i.e)(e => Object(g.v)(e, {
						listingKey: t
					})),
					c = Object(i.e)(e => Object(g.C)(e)),
					d = Object(i.e)(e => (e => {
						const t = e.listings.activeKey,
							s = e.searchDiscoveryUnits.models[t];
						return s || {}
					})(e));
				let l;
				c === Ie.c.Trending && (l = function(e) {
					const t = Object.values(e).find(e => e.layout.viewTypeWeb === Fe || e.layout.viewTypeWeb === Be);
					if (null == t ? void 0 : t.postOrder) return t.postOrder[0]
				}(d));
				const m = Object(o.useMemo)(() => Object.values(d).find(e => e.name === Re.l || e.name === Re.f), [d]);
				if (l && m) {
					const e = (n = [...n]).indexOf(l);
					n.splice(e, 1)
				}
				return a.a.createElement(a.a.Fragment, null, l && m && a.a.createElement(Te, {
					key: l,
					postId: l,
					discoveryUnit: m,
					searchOptions: s,
					listingKey: t
				}, a.a.createElement(je, {
					key: l,
					discoveryUnit: m,
					postId: l,
					listingKey: t,
					searchOptions: s
				})), a.a.createElement("div", {
					className: k.a.container,
					"data-testid": "posts-list"
				}, a.a.createElement(E.b, {
					identifiers: n,
					listingKey: t,
					searchOptions: s,
					componentType: E.c.Posts,
					fireScreenview: !0
				}), function(e, t) {
					return Boolean(t && t.token) && e.length > 0
				}(n, r) && a.a.Children.toArray(O()(3, v()(a.a.createElement(Me.a, {
					className: k.a.loadMoreItem,
					isLoading: !0
				}))))))
			};
			var De = s("./src/reddit/components/SearchResultsContent/searchResultsPageTreatment/SearchResultsScreen.tsx");

			function Ue(e) {
				const {
					listingKey: t,
					searchOptions: s,
					tab: n
				} = e, r = Object(i.e)(e => Object(g.n)(e, {
					listingKey: t
				})), o = Object(i.e)(e => Object(g.l)(e, {
					listingKey: t
				})), c = Object(i.e)(e => Object(g.m)(e, {
					listingKey: t
				})), d = Object(i.e)(e => Object(g.o)(e, {
					listingKey: t
				}));
				return a.a.createElement("div", {
					className: Object(h.a)(N.a.resultsContainer)
				}, n === f.h.Listings ? a.a.createElement(De.a, {
					hasResults: r,
					searchOptions: s,
					noResultsType: T.b.Communities,
					searchResultsTab: f.h.Listings,
					listingKey: t,
					pendingSelector: g.i
				}, a.a.createElement(I, {
					listingKey: t,
					searchOptions: s,
					key: f.h.Listings
				})) : n === f.h.People ? a.a.createElement(De.a, {
					hasResults: o,
					searchOptions: s,
					noResultsType: T.b.People,
					searchResultsTab: f.h.People,
					listingKey: t,
					pendingSelector: g.c
				}, a.a.createElement(M, {
					listingKey: t,
					searchOptions: s,
					key: f.h.People
				})) : n === f.h.Comments ? a.a.createElement(De.a, {
					hasResults: c,
					searchOptions: s,
					noResultsType: T.b.Comments,
					searchResultsTab: f.h.Comments,
					listingKey: t,
					pendingSelector: g.f
				}, a.a.createElement(L, {
					listingKey: t,
					searchOptions: s,
					key: f.h.Comments
				})) : a.a.createElement(De.a, {
					hasResults: d,
					searchOptions: s,
					noResultsType: T.b.Posts,
					searchResultsTab: f.h.Posts,
					listingKey: t,
					pendingSelector: g.y
				}, a.a.createElement(Ae, {
					listingKey: t,
					searchOptions: s,
					key: f.h.Comments
				})))
			}
			var We = s("./src/reddit/selectors/searchFix.ts"),
				He = s("./src/reddit/selectors/subreddit.ts");
			const Ve = (e, t) => {
				const s = Object(We.a)(e, t);
				return s ? Object(He.C)(e, {
					subredditName: s
				}) : null
			};
			var Ze = s("./node_modules/fbt/lib/FbtPublic.js"),
				qe = s("./node_modules/lodash/noop.js"),
				ze = s.n(qe),
				Ke = s("./src/lib/constants/colors.ts"),
				Ge = s("./src/reddit/components/InfoTextTooltip/Hooked.tsx"),
				Ye = s("./src/reddit/helpers/localStorage/index.ts");
			const Je = () => {
				const [e, t] = Object(o.useState)(!1);
				return Object(o.useEffect)(() => {
					var e;
					const s = null !== (e = Object(Ye.F)("should-show-comment-tab-tooltip")) && void 0 !== e ? e : 2;
					t(Boolean(s)), 2 === s ? Object(Ye.Jb)("should-show-comment-tab-tooltip", 1) : 1 === s && Object(Ye.Jb)("should-show-comment-tab-tooltip", !1)
				}, []), {
					get shouldShowCommentTabTooltip() {
						return e
					},
					resetShowCommentTabTooltip() {
						e && t(!1)
					}
				}
			};
			var Qe = s("./src/reddit/controls/InternalLink/index.tsx"),
				Xe = s("./src/reddit/helpers/search/searchResultsTabTo.ts"),
				$e = s("./src/reddit/hooks/useInfoTextTooltip.ts"),
				et = s("./src/reddit/hooks/useTracking.ts"),
				tt = s("./src/reddit/components/Pill/PillButton/index.tsx"),
				st = s("./src/reddit/components/SearchNSFWToggle/SearchNSFWToggle.tsx"),
				nt = s("./src/reddit/components/SearchResultsNav/index.m.less"),
				rt = s.n(nt);

			function ot(e) {
				let {
					activeTab: t,
					searchOptions: s,
					searchSwitcher: n
				} = e;
				const r = Object(et.a)(),
					d = Object(i.e)(ae.mb),
					m = Object(i.e)(g.C),
					u = Object(Y.ib)(),
					p = m === Ie.c.Trending,
					C = Object($e.a)({}),
					{
						shouldShowCommentTabTooltip: b,
						resetShowCommentTabTooltip: h
					} = Je();
				C.arrowProps.style = {
					...C.arrowProps.style,
					borderLeft: "4px solid transparent",
					borderRight: "4px solid transparent",
					top: "-3px",
					left: "50%",
					transform: "translateX(-50%)",
					borderBottom: `3px solid ${Ke.a.alien600}`
				}, C.popperProps.style = {
					...C.popperProps.style,
					backgroundColor: Ke.a.alien600,
					top: "100%",
					left: "50%",
					transform: "translateX(-50%)",
					whiteSpace: "nowrap"
				}, Object(o.useEffect)(() => {
					if (b) return window.addEventListener("click", h), () => {
						window.removeEventListener("click", h)
					}
				}, [b]);
				const x = {
						condition: !0,
						active: t === f.h.Posts,
						target: se.b.Posts,
						contentType: c.hc.Posts,
						text: Ze.fbt._("Posts", null, {
							hk: "vNVpl"
						})
					},
					v = {
						condition: !s.is_multi && !s.restrict_sr,
						active: t === f.h.Listings,
						target: se.b.Communities,
						contentType: c.hc.Subreddits,
						text: Ze.fbt._("Communities", null, {
							hk: "45NgGC"
						})
					},
					y = {
						condition: !s.is_multi && !s.restrict_sr,
						active: t === f.h.People,
						target: se.b.People,
						contentType: c.hc.Users,
						text: Ze.fbt._("People", null, {
							hk: "Ttxbf"
						})
					},
					O = [x, {
						condition: !(s.source === l.a.Trending || s.source === l.a.PromotedTrend),
						active: t === f.h.Comments,
						target: se.b.Comments,
						contentType: c.hc.Comments,
						text: Ze.fbt._("Comments", null, {
							hk: "z0DGA"
						}),
						showTooltip: !0
					}, v, y],
					E = d && !p;
				return a.a.createElement("div", {
					"data-testid": "search-results-nav",
					className: rt.a.searchResultsNav
				}, a.a.createElement("div", {
					className: rt.a.pillRow,
					role: "tablist"
				}, O.filter(e => e.condition).map(e => {
					const {
						active: t,
						target: n,
						text: o,
						contentType: i
					} = e;
					return a.a.createElement(Qe.default, {
						key: n,
						"data-testid": n,
						to: Object(Xe.b)({
							searchType: i,
							pageLayer: u
						}),
						"aria-selected": t,
						role: "tab",
						className: rt.a.pillElement,
						onClick: () => (e => {
							e.active || r(Object(se.m)(e.target, s))
						})(e)
					}, a.a.createElement(Ge.a, {
						visible: Boolean(e.showTooltip) && b,
						arrowProps: C.arrowProps,
						popperProps: C.popperProps
					}, Ze.fbt._("Now you can search comments!", null, {
						hk: "LePo6"
					})), a.a.createElement(tt.a, {
						active: t,
						onClick: ze.a,
						variant: tt.b.TAB_GROUP
					}, o))
				})), n && a.a.createElement("div", {
					className: rt.a.searchSwitcherContainer
				}, n), E && a.a.createElement("div", {
					className: rt.a.nsfwToggleContainer
				}, a.a.createElement(st.a, {
					searchOptions: s
				})))
			}
			var at = s("./src/reddit/components/CreateCommunityButton/index.tsx"),
				it = s("./src/reddit/components/CreateCommunitySidebar/index.m.less"),
				ct = s.n(it),
				dt = s("./src/lib/lessComponent.tsx");
			const {
				fbt: lt
			} = s("./node_modules/fbt/lib/FbtPublic.js"), mt = dt.a.div("ButtonContainer", ct.a), ut = dt.a.div("Container", ct.a), pt = dt.a.img("BannerImg", ct.a), Ct = dt.a.img("SnooImg", ct.a), bt = dt.a.div("CommunityText", ct.a);
			var ht = () => a.a.createElement(ut, null, a.a.createElement(pt, {
					src: `${R.a.assetPath}/img/search-results-community-banner.png`
				}), a.a.createElement(Ct, {
					src: `${R.a.assetPath}/img/snoo-thinking.png`
				}), a.a.createElement(bt, null, lt._("Have an idea for a new community?", null, {
					hk: "LfgUP"
				})), a.a.createElement(mt, null, a.a.createElement(at.a, {
					className: ct.a.Button,
					eventSource: "sidebar"
				}))),
				ft = s("./src/reddit/components/IdCard/async.tsx"),
				gt = s("./src/reddit/components/SidebarContainer/index.tsx"),
				xt = s("./src/reddit/components/SidebarSpacer/index.tsx"),
				vt = s("./src/reddit/components/SidebarStickyBottom/index.tsx"),
				yt = s("./src/reddit/components/Widgets/PostFlair/index.tsx"),
				Ot = s("./src/reddit/selectors/platform.ts"),
				Et = s("./src/reddit/selectors/widgets.ts"),
				jt = s("./src/reddit/components/SearchResultsSidebar/index.m.less"),
				_t = s.n(jt);
			const kt = Object(ie.c)({
					authorIdentifiers: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(g.a)(e, {
							listingKey: s
						})
					},
					authorLoadMore: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(g.s)(e, {
							listingKey: s
						})
					},
					communityIdentifiers: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(g.g)(e, {
							listingKey: s
						})
					},
					communitiesLoadMore: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(g.u)(e, {
							listingKey: s
						})
					},
					currentSubreddit: Ot.e,
					isLoggedIn: ae.S,
					hasCommunityResults: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(g.n)(e, {
							listingKey: s
						})
					},
					hasAuthorResults: (e, t) => {
						let {
							listingKey: s
						} = t;
						return Object(g.l)(e, {
							listingKey: s
						})
					},
					subredditId: (e, t) => {
						let {
							listingName: s
						} = t;
						return Object(He.I)(e, s)
					},
					postFlairWidgets: (e, t) => {
						let {
							listingName: s
						} = t;
						const n = Object(He.I)(e, s);
						return Object(Et.g)(e, {
							subredditId: n
						})
					},
					idCardWidget: (e, t) => {
						let {
							listingName: s
						} = t;
						return Object(Et.d)(e, {
							subredditName: s
						})
					}
				}),
				Lt = e => {
					let {
						authorIdentifiers: t,
						authorLoadMore: s,
						className: n,
						communityIdentifiers: r,
						communitiesLoadMore: o,
						hasAuthorResults: i,
						hasCommunityResults: d,
						listingKey: l,
						listingName: m,
						idCardWidget: u,
						isLoggedIn: p,
						postFlairWidgets: C,
						searchOptions: b,
						currentSubreddit: h
					} = e;
					const f = Boolean(h && m === h.name && b.restrict_sr),
						g = !!b.is_multi,
						x = r.length > E.a || !!o,
						v = t.length > E.a || !!s;
					let y;
					const O = Object(Se.a)();
					return f ? y = a.a.createElement(a.a.Fragment, null, u && a.a.createElement(ft.a, {
						listingName: m
					}), C && C.map((e, t) => a.a.createElement(xt.a, {
						key: `widgetSpacer-${t}`
					}, a.a.createElement(yt.a, {
						subredditName: m,
						widget: e
					})))) : g || (y = a.a.createElement(a.a.Fragment, null, a.a.createElement("div", {
						className: _t.a.container,
						"data-testid": "communities-list"
					}, a.a.createElement("h4", {
						className: _t.a.header
					}, Ze.fbt._("Communities", null, {
						hk: "3cMR66"
					})), d ? a.a.createElement(a.a.Fragment, null, !b.is_multi && a.a.createElement(E.b, {
						componentType: E.c.Subreddits,
						identifiers: r,
						listingKey: l,
						searchOptions: b,
						sidebar: !0
					}), x && a.a.createElement(Qe.default, {
						to: Object(Xe.b)({
							searchType: c.hc.Subreddits,
							pageLayer: O
						})
					}, a.a.createElement("p", {
						className: _t.a.link
					}, Ze.fbt._("See more communities", null, {
						hk: "2VoaHj"
					})))) : a.a.createElement("p", {
						className: _t.a.noResults
					}, Ze.fbt._("No results", null, {
						hk: "3feoKq"
					}))), a.a.createElement("div", {
						className: _t.a.container,
						"data-testid": "authors-list"
					}, a.a.createElement("h4", {
						className: _t.a.header
					}, Ze.fbt._("People", null, {
						hk: "2M8TqB"
					})), i ? a.a.createElement(a.a.Fragment, null, !b.is_multi && a.a.createElement(E.b, {
						componentType: E.c.Users,
						identifiers: t,
						listingKey: l,
						searchOptions: b,
						sidebar: !0
					}), v && a.a.createElement(Qe.default, {
						to: Object(Xe.b)({
							searchType: c.hc.Users,
							pageLayer: O
						})
					}, a.a.createElement("p", {
						className: _t.a.link
					}, Ze.fbt._("See more people", null, {
						hk: "yjtZU"
					})))) : a.a.createElement("p", {
						className: _t.a.noResults
					}, Ze.fbt._("No results", null, {
						hk: "3qx6oy"
					}))), p && a.a.createElement("div", {
						className: _t.a.container
					}, a.a.createElement(ht, null)))), a.a.createElement(gt.a, {
						"data-testid": "search-results-sidebar",
						className: n
					}, y, a.a.createElement(vt.a, null))
				},
				wt = e => {
					const t = Object(i.e)(t => kt(t, e)),
						s = {
							...e,
							...t
						};
					return a.a.createElement(Lt, s)
				};
			var St = s("./src/reddit/layout/row/Inline/index.tsx"),
				It = s("./src/reddit/constants/parameters.ts"),
				Pt = s("./src/lib/addQueryParams/index.ts");
			const Nt = (e, t, s, n, r, o) => {
				const a = e && e[s],
					i = {};
				let c = Object(Pt.a)(t, {
					[s]: r
				});
				const d = [];
				for (const l of n) {
					const e = Object(Pt.a)(t, {
						[s]: l
					});
					i[e] = o[l](), d.push(e), a === l && (c = e)
				}
				return {
					optionLabels: i,
					options: d,
					value: c
				}
			};
			var Tt = s("./src/higherOrderComponents/asTooltip.tsx"),
				Mt = s("./src/reddit/controls/Dropdown/index.tsx"),
				Rt = s("./src/reddit/icons/fonts/index.tsx"),
				Ft = s("./src/reddit/actions/tooltip.ts"),
				Bt = s("./src/reddit/selectors/tooltip.ts");
			const At = Object(ie.c)({
				isOpen: (e, t) => {
					let {
						tooltipId: s
					} = t;
					return Object(Bt.b)(s)(e)
				}
			});
			var Dt = s("./src/reddit/components/SearchResultsSubNav/Select/index.m.less"),
				Ut = s.n(Dt),
				Wt = s("./node_modules/query-string/index.js"),
				Ht = s.n(Wt),
				Vt = s("./node_modules/react-router-dom/esm/react-router-dom.js"),
				Zt = s("./src/reddit/constants/history.ts"),
				qt = s("./src/reddit/controls/Dropdown/Row.tsx"),
				zt = s("./src/reddit/helpers/history/index.ts"),
				Kt = s("./node_modules/lodash/fromPairs.js"),
				Gt = s.n(Kt),
				Yt = s("./src/lib/extractQueryParams/index.ts"),
				Jt = s("./src/reddit/helpers/correlationIdTracker.ts"),
				Qt = s("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				Xt = s("./src/reddit/selectors/telemetry.ts");
			const $t = (e, t) => {
					const s = Gt()([...Object(Yt.a)(e)]);
					return Object(c.yc)(s.sort) && (t.sort = s.sort), Object(c.zc)(s.t) && (t.t = s.t), t
				},
				es = (e, t, s, n) => () => e(e => {
					const r = Xt.J(e, null);
					return {
						...Object(se.f)(e),
						source: "search",
						action: "click",
						noun: t,
						correlationId: Object(Jt.c)(Jt.a.SearchResults),
						actionInfo: Object(se.k)(e, null, r),
						search: Xt.fb(e, $t(s, n), Qt.a.SERP)
					}
				}),
				ts = e => {
					let {
						isSelected: t,
						option: s,
						searchOptions: n,
						type: r,
						styles: o,
						displayText: i
					} = e;
					const c = Object(K.b)();
					return a.a.createElement(Vt.a, {
						key: s,
						to: {
							pathname: Ht.a.parseUrl(s).url,
							state: {
								[Zt.b.SearchOriginPage]: Object(zt.b)(Zt.b.SearchOriginPage)
							},
							search: s.replace(Ht.a.parseUrl(s).url + "?", "")
						},
						onClick: es(c, r, s, n)
					}, a.a.createElement(qt.b, {
						className: Object(h.a)(o.SelectOption, t && o.mIsSelected),
						displayText: i,
						isSelected: t
					}))
				};
			var ss = s("./src/reddit/components/SearchResultsSubNav/Select/SelectOption/index.m.less"),
				ns = s.n(ss);

			function rs() {
				return (rs = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const os = Object(Tt.a)(e => a.a.createElement(Mt.a, rs({
					className: Ut.a.Component
				}, e))),
				as = e => {
					let {
						active: t,
						label: s,
						options: n,
						optionLabels: r,
						searchOptions: o,
						tooltipId: c,
						type: d,
						value: l,
						...m
					} = e;
					const {
						isOpen: u,
						onClick: p
					} = (e => {
						const {
							isOpen: t
						} = Object(i.e)(t => At(t, {
							tooltipId: e
						})), s = Object(i.d)();
						return {
							isOpen: t,
							onClick: t ? () => s(Object(Ft.i)()) : () => s(Object(Ft.f)({
								tooltipId: e
							}))
						}
					})(c);
					return a.a.createElement("div", {
						className: Ut.a.Wrapper
					}, a.a.createElement(tt.a, rs({}, m, {
						active: u,
						className: Object(h.a)(Ut.a.filterButton, t && Ut.a.hasValue),
						onClick: p,
						variant: tt.b.TAB_GROUP
					}), s, a.a.createElement(Rt.a, {
						name: "caret_down",
						className: Object(h.a)(Ut.a.caret, u && Ut.a.caretOpen)
					})), a.a.createElement("div", {
						id: c
					}, a.a.createElement(os, {
						className: Ut.a.Dropdown,
						isOpen: u,
						tooltipId: c
					}, n.map((e, t) => a.a.createElement(ts, {
						displayText: r[e],
						key: t,
						isSelected: e === l,
						option: e,
						searchOptions: o,
						styles: {
							mIsSelected: ns.a.mIsSelected,
							SelectOption: ns.a.SelectOption
						},
						type: d
					})))))
				},
				is = {
					[f.h.Posts]: [c.ec.Relevance, c.ec.Hot, c.ec.Top, c.ec.New, c.ec.Comments],
					[f.h.Comments]: [c.ec.Relevance, c.ec.Top, c.ec.New]
				},
				cs = {
					[c.ec.Hot]: () => Ze.fbt._("Hot", null, {
						hk: "3c99Ga"
					}),
					[c.ec.Relevance]: () => Ze.fbt._("Relevance", null, {
						hk: "LvJkD"
					}),
					[c.ec.Top]: () => Ze.fbt._("Top", null, {
						hk: "bijGV"
					}),
					[c.ec.New]: () => Ze.fbt._("New", null, {
						hk: "23egpt"
					}),
					[c.ec.Comments]: () => Ze.fbt._("Most Comments", null, {
						hk: "4k1FoM"
					})
				};

			function ds() {
				return (ds = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const ls = [c.nc.HOUR, c.nc.DAY, c.nc.WEEK, c.nc.MONTH, c.nc.YEAR, c.nc.ALL],
				ms = {
					[c.nc.HOUR]: () => Ze.fbt._("Past Hour", null, {
						hk: "4qCarL"
					}),
					[c.nc.DAY]: () => Ze.fbt._("Past 24 Hours", null, {
						hk: "GI5qN"
					}),
					[c.nc.WEEK]: () => Ze.fbt._("Past Week", null, {
						hk: "3jQHYQ"
					}),
					[c.nc.MONTH]: () => Ze.fbt._("Past Month", null, {
						hk: "11eVJy"
					}),
					[c.nc.YEAR]: () => Ze.fbt._("Past Year", null, {
						hk: "38MavC"
					}),
					[c.nc.ALL]: () => Ze.fbt._("All Time", null, {
						hk: "2buTB7"
					})
				};

			function us() {
				return (us = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const ps = {
					[f.h.Posts]: [c.dc.Sort, c.dc.Time],
					[f.h.Comments]: [c.dc.Sort]
				},
				Cs = {
					[c.dc.Sort]: e => {
						let t = Object(i.e)(g.B);
						t = t !== c.Ub ? t : void 0;
						const {
							options: s,
							optionLabels: n,
							value: r
						} = Nt(e.queryParams, e.url, It.D, is[e.tab], t || c.Ub, cs), o = {
							"data-testid": "search-results-filter-sort",
							options: s,
							optionLabels: n,
							searchOptions: e.searchOptions,
							tooltipId: "search-results-sort",
							value: r
						}, d = Boolean(e.queryParams[It.D] || t);
						return a.a.createElement(as, ds({}, o, {
							active: d,
							label: d ? n[r] : Ze.fbt._("Sort", null, {
								hk: "2COMme"
							}),
							type: c.dc.Sort
						}))
					},
					[c.dc.Time]: e => {
						const t = Object(i.e)(g.B),
							{
								options: s,
								optionLabels: n,
								value: r
							} = Nt(e.queryParams, e.url, It.H, ls.slice().reverse(), c.Vb, ms);
						if (!e.searchOptions || e.searchOptions.sort === c.ab.NEW || e.searchOptions.sort === c.ab.HOT || t === c.ab.NEW || t === c.ab.HOT) return null;
						const o = {
							"data-testid": "search-results-filter-time",
							options: s,
							optionLabels: n,
							searchOptions: e.searchOptions,
							tooltipId: "search-results-time",
							value: r
						};
						return a.a.createElement(as, us({}, o, {
							active: Boolean(e.queryParams[It.H]),
							label: e.queryParams[It.H] ? n[r] : Ze.fbt._("Time", null, {
								hk: "3hL0P3"
							}),
							type: c.dc.Filter
						}))
					}
				};
			var bs = s("./src/reddit/controls/Button/index.tsx");

			function hs(e, t) {
				let s = "/search/",
					n = "",
					r = e && e[It.w] || "";
				return t ? (r = r.replace("flair:", "flair_name:"), s = `/r/${t}/search`, n = "1", Object(Pt.a)(s, {
					[It.w]: r,
					[It.x]: n
				})) : (r = r.replace("flair_name:", "flair:"), Object(Pt.a)(s, {
					[It.w]: r
				}))
			}
			var fs = s("./src/reddit/components/SearchResultsSubNav/GlobalSearchResultsLink/index.m.less"),
				gs = s.n(fs);
			const {
				fbt: xs
			} = s("./node_modules/fbt/lib/FbtPublic.js"), vs = dt.a.wrapped(bs.r, "TertiaryButton", gs.a), ys = dt.a.wrapped(vs, "AllRedditResultsButton", gs.a), Os = e => {
				const t = Object(K.b)();
				return a.a.createElement(Vt.a, {
					to: hs(e.queryParams)
				}, a.a.createElement(ys, {
					onClick: () => {
						t(t => ({
							...Object(se.f)(t, e.searchOptions),
							action: "click",
							noun: "unrestrict_to_subreddit",
							source: "search_results"
						}))
					},
					"data-redditstyle": !0
				}, xs._("All reddit results", null, {
					hk: "2IBCsX"
				}), a.a.createElement(Rt.a, {
					name: "forward"
				})))
			};
			var Es = s("./src/reddit/components/SearchResultsSubNav/index.m.less"),
				js = s.n(Es);
			const _s = Object(ie.c)({
					subreddit: He.C
				}),
				ks = e => {
					var t;
					const {
						subreddit: s
					} = Object(i.e)(t => _s(t, e)), n = Object(Y.ib)(), r = Object(Y.Z)(n), o = Object(Y.hb)(n), c = s && !!e.searchOptions.restrict_sr && !e.shouldHideGlobalSearchLink;
					return a.a.createElement(St.a, {
						className: Object(h.a)(js.a.ComponentRedesign),
						"data-testid": "search-results-subnav"
					}, null === (t = ps[e.tab]) || void 0 === t ? void 0 : t.map((t, s) => {
						const n = Cs[t];
						return a.a.createElement(n, {
							key: s,
							queryParams: r,
							searchOptions: e.searchOptions,
							tab: e.tab,
							url: o
						})
					}), c && a.a.createElement(Os, {
						queryParams: r,
						searchOptions: e.searchOptions
					}))
				};
			var Ls = s("./node_modules/node-libs-browser/node_modules/url/url.js"),
				ws = s.n(Ls),
				Ss = s("./src/reddit/components/SubredditIcon/index.tsx"),
				Is = s("./src/reddit/components/ThemeProvider/index.tsx"),
				Ps = s("./src/reddit/components/SearchSwitcher/index.m.less"),
				Ns = s.n(Ps);
			const {
				fbt: Ts
			} = s("./node_modules/fbt/lib/FbtPublic.js");
			class Ms extends a.a.Component {
				constructor() {
					super(...arguments), this.onClick = () => {
						const {
							searchOptions: e,
							sendEvent: t,
							subreddit: s
						} = this.props;
						t(Object(se.C)(!!s, e))
					}
				}
				render() {
					const {
						redesign: e,
						subreddit: t,
						url: s
					} = this.props, n = {
						[Ns.a.mSr]: !!t
					}, {
						pathname: r,
						search: o
					} = ws.a.parse(s), i = t ? c.fc.ToSubreddit : c.fc.ToGlobal, d = t ? a.a.createElement(a.a.Fragment, null, a.a.createElement("span", null, Ts._("Show results from", null, {
						hk: "3aVDvz"
					})), a.a.createElement(Ss.b, {
						className: Ns.a.subredditIcon,
						subredditOrProfile: t
					}), a.a.createElement("p", {
						className: Object(h.a)(Ns.a.searchSwitcherText, n)
					}, t.displayText)) : a.a.createElement(a.a.Fragment, null, Ts._("{=Show results from}{=all of Reddit}", [Ts._param("=Show results from", a.a.createElement("span", null, Ts._("Show results from", null, {
						hk: "4l8fSw"
					}))), Ts._param("=all of Reddit", a.a.createElement("p", {
						className: Object(h.a)(Ns.a.searchSwitcherText, n)
					}, Ts._("all of Reddit", null, {
						hk: "rc9dH"
					})))], {
						hk: "2NDUqb"
					}));
					return a.a.createElement(Qe.default, {
						className: Object(h.a)(Ns.a.searchSwitcher, e && Ns.a.redesign, n),
						"data-testid": "search-switcher-link",
						onClick: this.onClick,
						to: {
							pathname: r,
							search: o,
							state: {
								searchSwitcherType: i,
								[Zt.b.SearchOriginPage]: Object(zt.b)(Zt.b.SearchOriginPage)
							}
						}
					}, d, a.a.createElement(Rt.a, {
						name: "forward",
						className: Object(h.a)(Ns.a.arrowIcon, n)
					}))
				}
			}
			var Rs = Object(K.c)(e => e.subreddit ? a.a.createElement(Is.b, {
					subredditName: e.subreddit.name
				}, a.a.createElement(Ms, e)) : a.a.createElement(Ms, e)),
				Fs = s("./src/reddit/helpers/search/searchConversationId.ts"),
				Bs = s("./src/reddit/helpers/search/searchImpressionId.ts"),
				As = s("./src/reddit/helpers/search/searchQueryId.ts");
			const Ds = (e, t) => e.includes(c.hc.Comments) ? f.h.Comments : t || e.includes(c.hc.Posts) ? f.h.Posts : e.includes(c.hc.Users) && !e.includes(c.hc.Subreddits) ? f.h.People : f.h.Listings;
			var Us = s("./src/reddit/hooks/useSessionBlockingModal.tsx"),
				Ws = s("./src/reddit/components/StructuredStyles/BladeManager/index.tsx"),
				Hs = s("./src/reddit/constants/elementClassNames.ts"),
				Vs = s("./src/reddit/contexts/NavbarExp.ts"),
				Zs = s("./src/reddit/layout/page/Listing/BackgroundContainer.tsx"),
				qs = s("./src/reddit/layout/page/Listing/index.m.less"),
				zs = s.n(qs),
				Ks = s("./src/reddit/layout/page/SearchResults/index.m.less"),
				Gs = s.n(Ks);
			var Ys = e => {
					let {
						backgroundColor: t,
						className: s,
						containerRef: n,
						content: r,
						navBar: i,
						redditStyle: c,
						sidebar: d,
						subredditId: l
					} = e;
					const m = Object(o.useContext)(Vs.a),
						u = Boolean(d);
					return a.a.createElement(Ws.a, {
						subredditId: l
					}, a.a.createElement("div", {
						className: Object(h.a)(zs.a.outerContainer, Hs.i, s, {
							[zs.a.outerContainerExp]: m
						}),
						ref: n
					}, a.a.createElement(Zs.a, {
						className: Hs.h,
						redditStyle: c,
						backgroundColor: t
					}), a.a.createElement("div", {
						className: zs.a.innerContainer
					}, a.a.createElement("div", {
						className: Gs.a.bodyContainer
					}, a.a.createElement("div", {
						className: Gs.a.contentContainer
					}, a.a.createElement("div", {
						className: Gs.a.navContent
					}, i), a.a.createElement("div", {
						className: Object(h.a)(Gs.a.content, u && Gs.a.withSidebar)
					}, a.a.createElement("div", {
						className: Object(h.a)(Gs.a.mainContent, u && Gs.a.withSidebar)
					}, r), u && a.a.createElement("div", {
						className: Gs.a.sidebarContent
					}, d)))))))
				},
				Js = s("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				Qs = s("./src/reddit/constants/experiments.ts"),
				Xs = s("./src/reddit/helpers/chooseVariant/index.ts");
			const $s = e => {
				return Object(Xs.c)(e, {
					experimentEligibilitySelector: Xs.a,
					experimentName: Qs.E
				}) === Qs.Rd
			};
			var en = s("./src/reddit/selectors/searchQueryId.ts"),
				tn = s("./node_modules/lodash/isEmpty.js"),
				sn = s.n(tn),
				nn = s("./src/reddit/actions/modal.ts"),
				rn = s("./src/reddit/icons/svgs/Close/index.tsx"),
				on = s("./src/reddit/icons/svgs/Comments/index.tsx"),
				an = s("./src/reddit/icons/svgs/Moderate/index.tsx"),
				cn = s("./src/reddit/icons/svgs/Snoo/index.tsx"),
				dn = s("./src/reddit/icons/svgs/Sticky/index.tsx"),
				ln = s("./src/reddit/icons/svgs/TextPost/index.tsx"),
				mn = s("./src/reddit/models/Live/index.ts"),
				un = s("./src/reddit/components/FeaturedLiveEntrypoint/LegacyAnnouncement/index.m.less"),
				pn = s.n(un);

			function Cn(e) {
				const {
					announcement: t,
					className: s,
					onBtnClick: n,
					onClose: r
				} = e, o = {
					[mn.b.Announcement]: a.a.createElement(dn.a, {
						className: pn.a.iconStyles
					}),
					[mn.b.Document]: a.a.createElement(ln.a, {
						className: pn.a.iconStyles
					}),
					[mn.b.Snoo]: a.a.createElement(cn.a, {
						className: pn.a.iconStyles
					}),
					[mn.b.Ama]: a.a.createElement(on.a, {
						className: pn.a.iconStyles
					}),
					[mn.b.Moderation]: a.a.createElement(an.a, {
						className: pn.a.iconStyles
					})
				};
				return a.a.createElement("div", {
					"data-testid": "legacy-announcement",
					className: Object(h.a)(s, pn.a.AnnouncementContainer)
				}, a.a.createElement(St.a, null, o[t.icon], a.a.createElement("div", {
					className: Object(h.a)(pn.a.Title, pn.a.isAnnouncement)
				}, "function" == typeof t.title ? t.title() : t.title), a.a.createElement(rn.a, {
					className: pn.a.CloseButton,
					onClick: r
				})), a.a.createElement("div", {
					className: Object(h.a)(pn.a.Description, pn.a.isAnnouncement)
				}, "function" == typeof t.description ? t.description() : t.description), a.a.createElement(bs.m, {
					className: pn.a.Button,
					target: "_blank",
					href: t.url,
					onClick: n
				}, "function" == typeof t.callToAction ? t.callToAction() : t.callToAction))
			}
			var bn = s("./src/reddit/constants/covid.ts"),
				hn = s("./src/reddit/constants/mFeedBanner.ts"),
				fn = s("./src/reddit/constants/modals.ts"),
				gn = s("./src/reddit/constants/nsfwBanner.ts"),
				xn = s("./src/reddit/helpers/installGoodVisitFeedSearchTracker/index.ts"),
				vn = s("./src/reddit/selectors/experiments/search/searchSingleVariant.ts");
			const yn = e => Object(vn.a)(e, Qs.Oc),
				On = Object(ie.a)(e => Object(Xs.c)(e, {
					experimentEligibilitySelector: Xs.a,
					experimentName: Qs.Oc,
					expEventOverride: !1
				}), e => !!e),
				En = e => Object(vn.a)(e, Qs.Le),
				jn = Object(ie.a)(e => Object(Xs.c)(e, {
					experimentEligibilitySelector: Xs.a,
					experimentName: Qs.Le,
					expEventOverride: !1
				}), e => !!e);
			var _n, kn = s("./src/reddit/components/SearchBanner/index.m.less"),
				Ln = s.n(kn);
			! function(e) {
				e.Covid = "covid", e.NSFW = "nsfw", e.MFeed = "mfeed"
			}(_n || (_n = {}));
			const wn = {
				[_n.Covid]: {
					visible: !1,
					dismissed: !1,
					seen: !1,
					announcement: bn.a
				},
				[_n.NSFW]: {
					visible: !1,
					dismissed: !1,
					seen: !1,
					announcement: gn.b
				},
				[_n.MFeed]: {
					visible: !1,
					dismissed: !1,
					seen: !1,
					announcement: hn.b
				}
			};

			function Sn() {
				const e = Object(et.a)(),
					t = Object(Y.ib)(),
					s = Object(i.f)(),
					n = Object(i.d)(),
					[c, d] = Object(o.useState)(null),
					m = Object(o.useRef)(wn),
					u = Object(Y.Z)(t),
					p = Object(i.e)(jn),
					C = Object(i.e)(On),
					b = Object(i.e)(ae.mb),
					h = Object(i.e)(ae.rb);
				if (Object(o.useEffect)(() => {
						Object(Y.db)(t) ? d(_n.Covid) : p && Object(Y.eb)(t) && h && b && En(s.getState()) ? d(_n.MFeed) : C && Object(Y.fb)(t) && !b && yn(s.getState()) ? d(_n.NSFW) : d(null)
					}, [t, u, b, h, p, C]), !c || m.current[c].dismissed) return null;

				function f(t) {
					c && e(Object(se.x)(t, c, Object(l.e)(r()(u || {}, It.y))))
				}
				const g = m.current[c];
				return g.seen || (f("view"), g.seen = !0), a.a.createElement(Cn, {
					announcement: g.announcement,
					className: Ln.a.announcement,
					onBtnClick: function() {
						c === _n.NSFW && n(Object(nn.h)(fn.a.NSFW_SEARCH_MODAL)), f("click"), Object(xn.e)(X.a.SEARCH_RESULTS, s.getState(), Object(l.e)(u))
					},
					onClose: function() {
						f("dismiss"), g.dismissed = !0, d(null)
					}
				})
			}
			var In = s("./src/reddit/pages/SearchResults/index.m.less"),
				Pn = s.n(In);

			function Nn() {
				return (Nn = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var s = arguments[t];
						for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n])
					}
					return e
				}).apply(this, arguments)
			}
			const Tn = 3e3,
				Mn = {
					[f.h.Listings]: {
						tab: f.h.Listings,
						sidebar: !1,
						filterNav: !1
					},
					[f.h.People]: {
						tab: f.h.People,
						sidebar: !1,
						filterNav: !1
					},
					[f.h.Posts]: {
						tab: f.h.Posts,
						sidebar: !0,
						filterNav: !0
					},
					[f.h.Comments]: {
						tab: f.h.Comments,
						sidebar: !1,
						filterNav: !1
					}
				};

			function Rn(e) {
				let {
					location: t,
					match: s
				} = e;
				const n = Object(i.d)(),
					m = Object(Y.ib)(),
					h = Object(fe.a)(),
					g = Object(o.useRef)(!1),
					x = Object(i.e)(e => Object(He.C)(e, {
						subredditName: s.params.subredditName
					})),
					v = Object(i.e)(e => Ve(e, {
						pageLayer: m
					})),
					y = Object(i.e)(e => Object(We.c)(e, {
						pageLayer: m
					})),
					{
						searchQueryId: O
					} = Object(i.e)(e => Object(en.a)(e)),
					E = Object(i.e)($s),
					j = (Object(i.e)(e => Object(vn.a)(e, Qs.Nc)), Object(i.e)(e => Object(ae.mb)(e))),
					_ = Object(i.e)(e => Object(ae.rb)(e)),
					k = j && _,
					L = Object(Y.Z)(m),
					w = Object(d.a)(L) || null,
					S = s.params.multiredditName,
					I = s.params.subredditName || S || "",
					P = s.params.username,
					N = Object(l.e)(r()(L || {}, It.y)),
					T = Object(l.b)(I, P, N, k),
					M = x && N.restrict_sr,
					R = Ds(N.type, M),
					F = {
						...N,
						type: [c.hc.Posts, c.hc.Subreddits, c.hc.Users]
					},
					B = Object(l.b)(I, P, F, k),
					A = {
						redesign: !0,
						searchOptions: N
					},
					D = Mn[R].tab,
					U = Boolean(M) || Mn[R].sidebar && !S,
					W = Mn[R].filterNav || R === f.h.Comments && E,
					H = Object(Js.a)({
						redditStyle: !0,
						theme: h
					});
				let V;
				return O && (As.a.set(Qt.a.SERP, T, O), n(Object(p.c)())), Object(Y.S)(m) || Object(Y.D)(m) ? V = a.a.createElement(Rs, Nn({}, A, {
					url: hs(L)
				})) : v && y && (V = a.a.createElement(Rs, Nn({}, A, {
					subreddit: v,
					url: hs(L, v.name)
				}))), Object(Us.c)(), Object(o.useEffect)((function() {
					return () => {
						Bs.a.clear(Qt.a.SERP)
					}
				}), []), Object(o.useEffect)(() => (Fs.a.set(N.q || ""), () => {
					Fs.a.reset()
				}), []), Object(o.useEffect)(() => {
					let e = 0;
					return e = window.setTimeout(() => n(Object(C.j)()), Tn), () => {
						Object(Jt.b)(Jt.a.SearchResults), window.clearTimeout(e)
					}
				}, []), Object(o.useEffect)(() => {
					L && w && L[It.w] !== w[It.w] && (Object(Jt.b)(Jt.a.SearchResults), Object(Jt.d)(Jt.a.SearchResults))
				}, [L, w]), Object(o.useEffect)(() => {
					const e = {
							...L,
							type: void 0
						},
						t = {
							...w,
							type: void 0
						};
					!u()(e, t) && !sn()(w) && Bs.a.update(Qt.a.SERP)
				}, [L, w]), Object(o.useEffect)(() => {
					if (D === f.h.Comments && !g.current) {
						let e = 0;
						return e = window.setTimeout(() => {
							g.current = !0, n(Object(C.i)())
						}, Tn), () => {
							window.clearTimeout(e)
						}
					}
				}, [D]), a.a.createElement(Ys, {
					backgroundColor: H.canvas,
					content: a.a.createElement(a.a.Fragment, null, a.a.createElement(b.a, null), a.a.createElement(Sn, null), a.a.createElement(Ue, {
						listingKey: T,
						listingName: I,
						location: t,
						searchOptions: N,
						tab: D
					})),
					navBar: a.a.createElement(a.a.Fragment, null, a.a.createElement(ot, {
						activeTab: D,
						searchOptions: N,
						searchSwitcher: V
					}), W && a.a.createElement(ks, {
						key: "subNav",
						searchOptions: N,
						shouldHideGlobalSearchLink: !0,
						subredditName: I,
						tab: D
					}), V && a.a.createElement("div", {
						className: Pn.a.searchSwitcherContainer
					}, V)),
					sidebar: U && a.a.createElement(wt, {
						className: Pn.a.sidebar,
						listingKey: B,
						listingName: I || f.c,
						searchOptions: F,
						tab: D
					})
				})
			}
		},
		"./src/reddit/reducers/features/eligibleUXExperiences/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			}));
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = s("./src/reddit/actions/eligibleUxExperiences/constants.ts");
			const r = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
						experiences: {}
					},
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case n.a: {
						const s = Date.now(),
							{
								experiences: n
							} = t.payload;
						return {
							...e,
							experiences: {
								...e.experiences,
								...Object.keys(n).reduce((e, t) => ({
									...e,
									[t]: {
										value: n[t],
										fetched: s
									}
								}), {})
							}
						}
					}
					case n.b: {
						const {
							experience: s,
							value: n
						} = t.payload;
						return {
							...e,
							experiences: {
								...e.experiences,
								[s]: {
									...e.experiences[s],
									value: n
								}
							}
						}
					}
				}
				return e
			}
		},
		"./src/reddit/reducers/pages/modHub/index.ts": function(e, t, s) {
			"use strict";
			var n = s("./node_modules/redux/es/redux.js"),
				r = s("./src/reddit/actions/subredditModeration/constants.ts");
			var o = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.g:
						case r.f:
							return null;
						case r.e:
							return t.payload;
						default:
							return e
					}
				},
				a = s("./src/reddit/models/SubredditModeration/index.ts");
			const i = {};
			var c = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : i,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.g: {
							const {
								subredditId: s,
								fetchedToken: n
							} = t.payload, r = Object(a.e)(s, n);
							return {
								...e,
								[r]: !0
							}
						}
						case r.f:
						case r.e: {
							const {
								subredditId: s,
								fetchedToken: n
							} = t.payload, r = Object(a.e)(s, n);
							return {
								...e,
								[r]: !1
							}
						}
						default:
							return e
					}
				},
				d = Object(n.c)({
					error: o,
					pending: c
				});
			const l = {};
			var m = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : l,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.f: {
						const {
							fetchedToken: s,
							subredditId: n
						} = t.payload, r = Object(a.e)(n, s);
						return {
							...e,
							[r]: !0
						}
					}
					default:
						return e
				}
			};
			const u = {};
			var p = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : u,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.f: {
							const {
								subredditId: e,
								after: s
							} = t.payload;
							return {
								[e]: s
							}
						}
						default:
							return e
					}
				},
				C = s("./node_modules/icepick/icepick.js");
			const b = {};
			var h = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : b,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.d:
					case r.f: {
						const {
							subredditId: s,
							approvedSubmitters: n
						} = t.payload, r = {
							[s]: n
						};
						return Object(C.merge)(e, r)
					}
					case r.k: {
						const {
							subredditId: s,
							userId: n
						} = t.payload;
						return Object(C.unsetIn)(e, [s, n])
					}
					default:
						return e
				}
			};
			var f = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.j:
					case r.i:
						return null;
					case r.h:
						return t.payload;
					default:
						return e
				}
			};
			var g = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.j:
							return !0;
						case r.i:
						case r.h:
							return !1;
						default:
							return e
					}
				},
				x = Object(n.c)({
					error: f,
					pending: g
				});
			var v = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.j:
							return null;
						case r.i: {
							const e = t.payload.approvedSubmitterIds[0];
							return e ? t.payload.approvedSubmitters[e] : null
						}
						default:
							return e
					}
				},
				y = Object(n.c)({
					api: x,
					result: v
				});
			const O = {};
			var E = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : O,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.f: {
							const {
								subredditId: s,
								approvedSubmitterIds: n
							} = t.payload;
							return e[s] ? {
								...e,
								[s]: [...e[s], ...n]
							} : {
								...e,
								[s]: n
							}
						}
						case r.k: {
							const {
								subredditId: s,
								userId: n
							} = t.payload;
							return {
								[s]: e[s].filter(e => e !== n)
							}
						}
						case r.d: {
							const {
								subredditId: s,
								approvedSubmitterIds: n
							} = t.payload, r = n[0];
							return r && e[s] && -1 === e[s].indexOf(r) ? {
								[s]: [r, ...e[s]]
							} : e
						}
						default:
							return e
					}
				},
				j = Object(n.c)({
					api: d,
					fetchedTokens: m,
					loadMore: p,
					models: h,
					search: y,
					userOrder: E
				});
			var _ = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.n:
					case r.m:
						return null;
					case r.l:
						return t.payload;
					default:
						return e
				}
			};
			const k = {};
			var L = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : k,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.n: {
							const {
								subredditId: s,
								fetchedToken: n
							} = t.payload, r = Object(a.f)(s, n);
							return {
								...e,
								[r]: !0
							}
						}
						case r.m:
						case r.l: {
							const {
								subredditId: s,
								fetchedToken: n
							} = t.payload, r = Object(a.f)(s, n);
							return {
								...e,
								[r]: !1
							}
						}
						default:
							return e
					}
				},
				w = Object(n.c)({
					error: _,
					pending: L
				});
			const S = {};
			var I = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : S,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.m: {
						const {
							fetchedToken: s,
							subredditId: n
						} = t.payload, r = Object(a.f)(n, s);
						return {
							...e,
							[r]: !0
						}
					}
					default:
						return e
				}
			};
			const P = {};
			var N = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : P,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.m: {
						const {
							subredditId: e,
							loadMoreToken: s
						} = t.payload;
						return {
							[e]: s
						}
					}
					default:
						return e
				}
			};
			const T = {};
			var M = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : T,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.m: {
							const {
								subredditId: s,
								approvedTalkHosts: n,
								forceRefresh: r
							} = t.payload, o = {
								[s]: [...r ? [] : e[s] || [], ...n]
							};
							return Object(C.merge)(e, o)
						}
						case r.o: {
							const {
								subredditId: s,
								userId: n
							} = t.payload, r = {
								[s]: e[s].filter(e => e.redditor.id !== n)
							};
							return Object(C.merge)(e, r)
						}
						default:
							return e
					}
				},
				R = Object(n.c)({
					api: w,
					fetchedTokens: I,
					loadMore: N,
					models: M
				}),
				F = s("./src/reddit/actions/grantUserFlair/constants.ts");
			var B = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case F.g:
					case F.i:
						return null;
					case F.f:
						return t.payload;
					default:
						return e
				}
			};
			var A = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case F.i:
							return !0;
						case F.g:
						case F.f:
							return !1;
						default:
							return e
					}
				},
				D = Object(n.c)({
					error: B,
					pending: A
				}),
				U = s("./node_modules/lodash/merge.js"),
				W = s.n(U),
				H = s("./node_modules/lodash/omit.js"),
				V = s.n(H);
			const Z = {};
			var q = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Z,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case F.g:
					case F.k: {
						const {
							subredditId: s,
							flairedUsers: n
						} = t.payload;
						return W()({
							...e
						}, {
							[s]: n
						})
					}
					case F.c: {
						const {
							subredditId: s,
							userName: n
						} = t.payload, r = V()(e[s], n);
						return {
							...e,
							[s]: r
						}
					}
					case F.a:
					case F.b:
					case F.h:
						const {
							subredditId: s, userName: n, applied: r
						} = t.payload;
						return r ? {
							...e,
							[s]: {
								...e[s],
								[n]: r
							}
						} : e;
					default:
						return e
				}
			};
			const z = {};
			var K = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : z,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case F.g: {
						const {
							key: s,
							pageInfo: n
						} = t.payload;
						return {
							...e,
							[s]: n
						}
					}
					default:
						return e
				}
			};
			var G = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case F.l:
					case F.k:
						return null;
					case F.j:
						return t.payload;
					default:
						return e
				}
			};
			var Y = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case F.l:
							return !0;
						case F.k:
						case F.j:
							return !1;
						default:
							return e
					}
				},
				J = Object(n.c)({
					error: G,
					pending: Y
				});
			var Q = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case F.k: {
							const {
								searchResult: e
							} = t.payload;
							return e
						}
						case F.c: {
							const {
								userName: s
							} = t.payload;
							return e === s ? null : e
						}
						default:
							return e
					}
				},
				X = Object(n.c)({
					api: J,
					result: Q
				});
			const $ = {};
			var ee = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : $,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case F.g: {
							const {
								key: s,
								userOrder: n
							} = t.payload;
							return {
								...e,
								[s]: n
							}
						}
						case F.a: {
							const {
								key: s,
								userName: n
							} = t.payload;
							if (!s) return e;
							if (!e[s].includes(n)) {
								const t = [...e[s], n];
								return {
									...e,
									[s]: t
								}
							}
							return e
						}
						case F.c: {
							const {
								userName: s
							} = t.payload, n = {};
							for (const t in e) n[t] = e[t].filter(e => e !== s);
							return n
						}
						default:
							return e
					}
				},
				te = Object(n.c)({
					api: D,
					models: q,
					pageInfo: K,
					search: X,
					userOrder: ee
				}),
				se = s("./src/reddit/actions/moderationLog/constants.ts");
			const ne = {};
			var re = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ne,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.b: {
						const {
							normalizedCategories: s
						} = t.payload;
						return Object(C.merge)(e, s)
					}
					default:
						return e
				}
			};
			const oe = {};
			var ae = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : oe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.c: {
						const {
							actionIds: s,
							key: n,
							subredditId: r
						} = t.payload;
						return {
							...e,
							[r]: {
								...e[r] || {},
								[n]: s
							}
						}
					}
					default:
						return e
				}
			};
			const ie = {};
			var ce = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ie,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case se.c: {
							const {
								normalizedModerationLog: s,
								subredditId: n
							} = t.payload, r = {};
							s.forEach(e => {
								r[e.id] = e
							});
							const o = {
								[n]: r
							};
							return W()({
								...e
							}, o)
						}
						default:
							return e
					}
				},
				de = Object(n.c)({
					itemOrder: ae,
					models: ce
				});
			var le = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.c: {
						const {
							approximateCount: e
						} = t.payload;
						return e
					}
					default:
						return e
				}
			};
			var me = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.c: {
						const {
							endCursor: e
						} = t.payload;
						return e
					}
					default:
						return e
				}
			};
			const ue = {};
			var pe = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ue,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.c: {
						const {
							hasNextPage: s,
							subredditId: n
						} = t.payload;
						return {
							...e,
							[n]: s
						}
					}
					default:
						return e
				}
			};
			const Ce = {};
			var be = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ce,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.c: {
						const {
							hasPreviousPage: s,
							subredditId: n
						} = t.payload;
						return {
							...e,
							[n]: s
						}
					}
					default:
						return e
				}
			};
			var he = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.c: {
						const {
							subredditId: s,
							insightsData: n
						} = t.payload;
						return {
							...e,
							[s]: n
						}
					}
					default:
						return e
				}
			};
			const fe = [];
			var ge = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : fe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case se.a: {
						const {
							normalizedModerators: s,
							subredditId: n
						} = t.payload;
						return {
							...e,
							[n]: s
						}
					}
					default:
						return e
				}
			};
			var xe = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case se.c: {
							const {
								startCursor: e
							} = t.payload;
							return e
						}
						default:
							return e
					}
				},
				ve = Object(n.c)({
					actionCategories: re,
					actions: de,
					approximateCount: le,
					endCursor: me,
					hasNextPage: pe,
					hasPreviousPage: be,
					moderators: ge,
					startCursor: xe,
					insightsEntrypoint: he
				});
			const ye = {};
			var Oe = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ye,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.O:
					case r.y: {
						const {
							subredditId: s,
							moderators: n
						} = t.payload.response || t.payload, r = {
							[s]: n
						};
						return Object(C.merge)(e, r)
					}
					case r.C: {
						const {
							subredditId: s,
							userId: n,
							permissions: r
						} = t.payload;
						return Object(C.setIn)(e, [s, n, "modPermissions"], r)
					}
					case r.jb: {
						const {
							subredditId: s,
							userId: n
						} = t.payload;
						return Object(C.unsetIn)(e, [s, n])
					}
					default:
						return e
				}
			};
			const Ee = {};
			var je = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ee,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.z:
					case r.y: {
						const {
							key: s,
							subredditId: n
						} = t.payload;
						return n ? {
							...e,
							[s]: null
						} : e
					}
					case r.x: {
						const {
							error: s,
							key: n,
							subredditId: r
						} = t.payload;
						return r ? {
							...e,
							[n]: s
						} : e
					}
					default:
						return e
				}
			};
			const _e = {};
			var ke = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _e,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.x:
						case r.y: {
							const {
								subredditId: s,
								key: n
							} = t.payload;
							return s ? {
								...e,
								[n]: !1
							} : e
						}
						case r.z: {
							const {
								subredditId: s,
								key: n
							} = t.payload;
							return s ? {
								...e,
								[n]: !0
							} : e
						}
						default:
							return e
					}
				},
				Le = Object(n.c)({
					error: je,
					pending: ke
				});
			const we = {};
			var Se = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : we,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.y: {
							const {
								subredditId: s,
								response: n,
								key: r
							} = t.payload;
							return Object(C.setIn)(e, [s, r], n.moderatorIds)
						}
						case r.jb: {
							const {
								subredditId: s,
								userId: n,
								key: r
							} = t.payload, o = e[s][r].filter(e => e !== n);
							return Object(C.setIn)(e, [s, r], o)
						}
						default:
							return e
					}
				},
				Ie = Object(n.c)({
					data: Se,
					api: Le
				});
			var Pe = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.F:
					case r.E:
						return null;
					case r.D:
						return t.payload;
					default:
						return e
				}
			};
			var Ne = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.E:
						case r.D:
							return !1;
						case r.F:
							return !0;
						default:
							return e
					}
				},
				Te = Object(n.c)({
					error: Pe,
					pending: Ne
				});
			const Me = {};
			var Re = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Me,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.E: {
						const {
							subredditId: s,
							moderators: n
						} = t.payload;
						return Object(C.set)(e, s, n)
					}
					case r.gb: {
						const {
							subredditId: s,
							userId: n
						} = t.payload;
						return Object(C.unsetIn)(e, [s, n])
					}
					case r.c: {
						const s = t.payload,
							{
								subredditId: n,
								moderators: r
							} = s,
							o = {
								[n]: r
							};
						return Object(C.merge)(e, o)
					}
					default:
						return e
				}
			};
			const Fe = {};
			var Be = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Fe,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.E: {
							const {
								subredditId: s,
								moderatorIds: n
							} = t.payload;
							return {
								...e,
								[s]: n
							}
						}
						case r.gb: {
							const {
								subredditId: s,
								userId: n
							} = t.payload, r = e[s].filter(e => e !== n);
							return {
								...e,
								[s]: r
							}
						}
						case r.c: {
							const s = t.payload,
								{
									subredditId: n,
									moderatorIds: r
								} = s,
								o = [...e[n] || [], ...r];
							return {
								...e,
								[n]: o
							}
						}
						default:
							return e
					}
				},
				Ae = Object(n.c)({
					api: Te,
					models: Re,
					userOrder: Be
				});
			const De = {};
			var Ue = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : De,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.L: {
						const {
							subredditId: s,
							response: n
						} = t.payload, {
							invitePending: r
						} = n, o = {
							[s]: r
						};
						return Object(C.merge)(e, o)
					}
					case r.I:
					case r.J: {
						const {
							subredditId: s
						} = t.payload;
						return Object(C.unset)(e, s)
					}
					default:
						return e
				}
			};
			const We = {};
			var He = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : We,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.y: {
						const {
							response: e
						} = t.payload;
						return {
							[e.subredditId]: {
								after: e.after,
								before: e.before
							}
						}
					}
					default:
						return e
				}
			};
			const Ve = {};
			var Ze = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ve,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.L: {
						const {
							response: e
						} = t.payload;
						return {
							[e.subredditId]: {
								after: e.after,
								before: e.before
							}
						}
					}
					default:
						return e
				}
			};
			const qe = {};
			var ze = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : qe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.L: {
						const {
							response: s
						} = t.payload, n = {
							[s.subredditId]: s.moderators
						};
						return Object(C.merge)({
							...e
						}, n)
					}
					case r.C: {
						const s = t.payload,
							{
								subredditId: n,
								userId: r,
								permissions: o
							} = s;
						return e[n] && e[n][r] ? Object(C.setIn)(e, [n, r, "modPermissions"], o) : e
					}
					default:
						return e
				}
			};
			var Ke = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.P:
					case r.O:
						return null;
					case r.N:
						return t.payload;
					default:
						return e
				}
			};
			var Ge = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.P:
							return !0;
						case r.O:
						case r.N:
							return !1;
						default:
							return e
					}
				},
				Ye = Object(n.c)({
					error: Ke,
					pending: Ge
				}),
				Je = s("./node_modules/lodash/isEqual.js"),
				Qe = s.n(Je);
			var Xe = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.P:
						case r.N:
						case r.jb:
							return null;
						case r.O: {
							const e = t.payload.moderatorIds[0];
							return e ? t.payload.moderators[e] : null
						}
						case r.C: {
							const {
								userId: s,
								permissions: n
							} = t.payload;
							return e && e.id === s && !Qe()(e.modPermissions, n) ? {
								...e,
								modPermissions: n
							} : e
						}
						default:
							return e
					}
				},
				$e = Object(n.c)({
					api: Ye,
					result: Xe
				});
			const et = {};
			var tt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : et,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.M:
					case r.L: {
						const {
							subredditId: s,
							key: n
						} = t.payload;
						return s ? {
							...e,
							[n]: null
						} : e
					}
					case r.K: {
						const {
							error: s,
							subredditId: n,
							key: r
						} = t.payload;
						return n ? {
							...e,
							[r]: s
						} : e
					}
					default:
						return e
				}
			};
			const st = {};
			var nt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : st,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.K:
						case r.L: {
							const {
								subredditId: s,
								key: n
							} = t.payload;
							return s ? {
								...e,
								[n]: !1
							} : e
						}
						case r.M: {
							const {
								subredditId: s,
								key: n
							} = t.payload;
							return s ? {
								...e,
								[n]: !0
							} : e
						}
						default:
							return e
					}
				},
				rt = Object(n.c)({
					error: tt,
					pending: nt
				});
			s("./node_modules/core-js/modules/web.dom.iterable.js");
			const ot = {};
			var at = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ot,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.L: {
							const {
								response: s,
								subredditId: n,
								key: r
							} = t.payload, {
								moderatorIds: o
							} = s;
							return Object(C.merge)(e, {
								[n]: {
									[r]: o
								}
							})
						}
						case r.jb: {
							const {
								subredditId: s,
								userId: n
							} = t.payload, r = {
								...e[s]
							};
							return Object.keys(e[s]).forEach(t => {
								const o = e[s][t].filter(e => e !== n);
								r[t] = o
							}), Object(C.set)(e, s, r)
						}
						default:
							return e
					}
				},
				it = Object(n.c)({
					data: at,
					api: rt
				}),
				ct = Object(n.c)({
					editableModerators: Oe,
					editableUserOrder: Ie,
					invitedModerators: Ae,
					invitePending: Ue,
					loadMoreModerators: Ze,
					loadMoreEditableModerators: He,
					models: ze,
					search: $e,
					userOrder: it
				}),
				dt = s("./src/reddit/actions/bulkActions/constants.ts");
			var lt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case dt.c:
						case dt.b:
							return null;
						case dt.a:
							return t.payload;
						default:
							return e
					}
				},
				mt = s("./src/reddit/actions/modQueue/constants.ts");
			var ut = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case dt.c:
							return !0;
						case dt.b:
						case dt.a:
						case mt.x:
						case mt.w:
							return !1;
						default:
							return e
					}
				},
				pt = Object(n.c)({
					error: lt,
					pending: ut
				});
			const Ct = {};
			var bt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ct,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.a: {
							const {
								ids: s
							} = t.payload, n = {};
							return s.forEach(e => n[e] = !0), {
								...e,
								...n
							}
						}
						case mt.d: {
							const {
								ids: s
							} = t.payload;
							return V()(e, s)
						}
						case mt.c: {
							const {
								ids: e
							} = t.payload, s = {};
							return e.forEach(e => s[e] = !0), s
						}
						default:
							return e
					}
				},
				ht = s("./src/reddit/models/ModQueue/index.ts");
			const ft = {};
			var gt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ft,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case dt.b: {
							const {
								operation: e,
								ids: s
							} = t.payload;
							return "approve" === e ? ft : {
								[ht.c[e]]: s
							}
						}
						default:
							return e
					}
				},
				xt = Object(n.c)({
					api: pt,
					selectedItems: bt,
					undoLastAction: gt
				});
			var vt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.g:
					case mt.f:
						return null;
					case mt.e:
						return t.payload;
					default:
						return e
				}
			};
			var yt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.g:
							return !0;
						case mt.f:
						case mt.e:
							return !1;
						default:
							return e
					}
				},
				Ot = Object(n.c)({
					error: vt,
					pending: yt
				});
			const Et = {};
			var jt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Et,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.f: {
						const {
							listingKey: s,
							page: n,
							response: r
						} = t.payload, {
							modqueue: o
						} = r;
						return {
							...e,
							[s]: {
								...e[s] || {},
								[n]: o
							}
						}
					}
					default:
						return e
				}
			};
			const _t = {};
			var kt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _t,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.f: {
							const {
								listingKey: s,
								response: n
							} = t.payload, {
								modqueue: r
							} = n, o = r[r.length - 1] || null;
							return {
								...e,
								[s]: o
							}
						}
						default:
							return e
					}
				},
				Lt = Object(n.c)({
					api: Ot,
					itemOrder: jt,
					loadMore: kt
				}),
				wt = s("./src/reddit/actions/pages/modListing/constants.ts");
			var St = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case wt.e: {
						const s = t.payload,
							{
								moderatingSubreddits: n
							} = s;
						return n ? null : e
					}
					case mt.i:
					case mt.f:
					case mt.r:
					case mt.u:
					case mt.A: {
						const {
							response: e
						} = t.payload, {
							moderatedAfter: s
						} = e;
						return s
					}
					case mt.n: {
						const e = t.payload,
							{
								moderatedAfter: s
							} = e;
						return s
					}
					default:
						return e
				}
			};
			const It = [];
			var Pt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : It,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.i:
					case mt.f:
					case mt.r:
					case mt.u:
					case mt.A: {
						const {
							response: e
						} = t.payload, {
							listingOrder: s
						} = e;
						return s
					}
					case mt.n: {
						const s = t.payload,
							{
								listingOrder: n
							} = s;
						return [...e, ...n]
					}
					case wt.e: {
						const s = t.payload,
							{
								listingOrder: n
							} = s;
						return n || e
					}
					default:
						return e
				}
			};
			var Nt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.b:
						return !0;
					default:
						return e
				}
			};
			var Tt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.n:
							return !0;
						case mt.b:
							return !1;
						default:
							return e
					}
				},
				Mt = Object(n.c)({
					after: St,
					data: Pt,
					loaded: Nt,
					pending: Tt
				});
			var Rt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.j:
					case mt.i:
						return null;
					case mt.h:
						return t.payload;
					default:
						return e
				}
			};
			var Ft = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.j:
							return !0;
						case mt.i:
						case mt.h:
							return !1;
						default:
							return e
					}
				},
				Bt = Object(n.c)({
					error: Rt,
					pending: Ft
				});
			const At = {};
			var Dt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : At,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.i: {
						const {
							listingKey: s,
							page: n,
							response: r
						} = t.payload, {
							modqueue: o
						} = r;
						return {
							...e,
							[s]: {
								...e[s] || {},
								[n]: o
							}
						}
					}
					default:
						return e
				}
			};
			const Ut = {};
			var Wt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ut,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.i: {
							const {
								listingKey: s,
								response: n
							} = t.payload, {
								modqueue: r
							} = n, o = r[r.length - 1] || null;
							return {
								...e,
								[s]: o
							}
						}
						default:
							return e
					}
				},
				Ht = Object(n.c)({
					api: Bt,
					itemOrder: Dt,
					loadMore: Wt
				});
			var Vt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.s:
					case mt.r:
						return null;
					case mt.q:
						return t.payload;
					default:
						return e
				}
			};
			var Zt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.s:
							return !0;
						case mt.r:
						case mt.q:
							return !1;
						default:
							return e
					}
				},
				qt = Object(n.c)({
					error: Vt,
					pending: Zt
				});
			const zt = {};
			var Kt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : zt,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.r: {
						const {
							listingKey: s,
							page: n,
							response: r
						} = t.payload, {
							modqueue: o
						} = r;
						return {
							...e,
							[s]: {
								...e[s] || {},
								[n]: o
							}
						}
					}
					default:
						return e
				}
			};
			const Gt = {};
			var Yt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Gt,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.r: {
							const {
								listingKey: s,
								response: n
							} = t.payload, {
								modqueue: r
							} = n, o = r[r.length - 1] || null;
							return {
								...e,
								[s]: o
							}
						}
						default:
							return e
					}
				},
				Jt = Object(n.c)({
					api: qt,
					itemOrder: Kt,
					loadMore: Yt
				});
			var Qt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.v:
					case mt.u:
						return null;
					case mt.t:
						return t.payload;
					default:
						return e
				}
			};
			var Xt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.v:
							return !0;
						case mt.u:
						case mt.t:
							return !1;
						default:
							return e
					}
				},
				$t = Object(n.c)({
					error: Qt,
					pending: Xt
				});
			const es = {};
			var ts = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : es,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.u: {
						const {
							listingKey: s,
							page: n,
							response: r
						} = t.payload, {
							modqueue: o
						} = r;
						return {
							...e,
							[s]: {
								...e[s] || {},
								[n]: o
							}
						}
					}
					default:
						return e
				}
			};
			const ss = {};
			var ns = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ss,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.u: {
							const {
								listingKey: s,
								response: n
							} = t.payload, {
								modqueue: r
							} = n, o = r[r.length - 1] || null;
							return {
								...e,
								[s]: o
							}
						}
						default:
							return e
					}
				},
				rs = Object(n.c)({
					api: $t,
					itemOrder: ts,
					loadMore: ns
				});
			var os = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.B:
					case mt.A:
						return null;
					case mt.z:
						return t.payload;
					default:
						return e
				}
			};
			var as = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.B:
							return !0;
						case mt.A:
						case mt.z:
							return !1;
						default:
							return e
					}
				},
				is = Object(n.c)({
					error: os,
					pending: as
				});
			const cs = {};
			var ds = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : cs,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case mt.A: {
						const {
							listingKey: s,
							page: n,
							response: r
						} = t.payload, {
							modqueue: o
						} = r;
						return {
							...e,
							[s]: {
								...e[s] || {},
								[n]: o
							}
						}
					}
					default:
						return e
				}
			};
			const ls = {};
			var ms = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ls,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case mt.A: {
							const {
								listingKey: s,
								response: n
							} = t.payload, {
								modqueue: r
							} = n, o = r[r.length - 1] || null;
							return {
								...e,
								[s]: o
							}
						}
						default:
							return e
					}
				},
				us = Object(n.c)({
					api: is,
					itemOrder: ds,
					loadMore: ms
				}),
				ps = Object(n.c)({
					bulkAction: xt,
					edited: Lt,
					moderatedCommunitiesOrder: Mt,
					modqueue: Ht,
					reports: Jt,
					spam: rs,
					unmoderated: us
				});
			var Cs = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.Y:
					case r.W:
						return null;
					case r.V:
						return t.payload;
					default:
						return e
				}
			};
			const bs = {};
			var hs = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : bs,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.Y: {
							const {
								subredditId: s,
								fetchedToken: n
							} = t.payload, r = Object(a.e)(s, n);
							return {
								...e,
								[r]: !0
							}
						}
						case r.W:
						case r.V: {
							const {
								subredditId: s,
								fetchedToken: n
							} = t.payload, r = Object(a.e)(s, n);
							return {
								...e,
								[r]: !1
							}
						}
						default:
							return e
					}
				},
				fs = Object(n.c)({
					error: Cs,
					pending: hs
				});
			const gs = {};
			var xs = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : gs,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.W: {
							const {
								fetchedToken: s,
								subredditId: n
							} = t.payload, r = Object(a.e)(n, s);
							return {
								...e,
								[r]: !0
							}
						}
						default:
							return e
					}
				},
				vs = s("./src/reddit/actions/inContextModeration.ts");
			var ys = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case vs.b:
						return t.payload;
					default:
						return e
				}
			};
			const Os = {};
			var Es = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Os,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.W: {
						const {
							subredditId: e,
							after: s
						} = t.payload;
						return {
							[e]: s
						}
					}
					default:
						return e
				}
			};
			const js = {};
			var _s = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : js,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.X:
					case r.W: {
						const {
							subredditId: s,
							mutedUsers: n
						} = t.payload, r = {
							[s]: n
						};
						return Object(C.merge)(e, r)
					}
					case r.cb: {
						const {
							subredditId: s,
							userId: n
						} = t.payload;
						return Object(C.unsetIn)(e, [s, n])
					}
					default:
						return e
				}
			};
			var ks = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case r.bb:
					case r.ab:
						return null;
					case r.Z:
						return t.payload;
					default:
						return e
				}
			};
			var Ls = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.bb:
							return !0;
						case r.ab:
						case r.Z:
							return !1;
						default:
							return e
					}
				},
				ws = Object(n.c)({
					error: ks,
					pending: Ls
				});
			var Ss = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.bb:
						case r.Z:
							return null;
						case r.ab: {
							const e = t.payload.mutedUserIds[0];
							return e ? t.payload.mutedUsers[e] : null
						}
						default:
							return e
					}
				},
				Is = Object(n.c)({
					api: ws,
					result: Ss
				});
			const Ps = {};
			var Ns = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ps,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case r.W: {
							const {
								subredditId: s,
								mutedUserIds: n
							} = t.payload;
							return e[s] ? {
								...e,
								[s]: [...e[s], ...n]
							} : {
								...e,
								[s]: n
							}
						}
						case r.cb: {
							const {
								subredditId: s,
								userId: n
							} = t.payload;
							return {
								[s]: e[s].filter(e => e !== n)
							}
						}
						case r.X: {
							const {
								subredditId: s,
								mutedUserIds: n
							} = t.payload, r = n[0];
							return r && e[s] && -1 === e[s].indexOf(r) ? {
								[s]: [r, ...e[s]]
							} : e
						}
						default:
							return e
					}
				},
				Ts = Object(n.c)({
					api: fs,
					fetchedTokens: xs,
					inContext: ys,
					loadMore: Es,
					models: _s,
					search: Is,
					userOrder: Ns
				});
			t.a = Object(n.c)({
				approvedSubmitters: j,
				approvedTalkHosts: R,
				flairedUsers: te,
				moderationLog: ve,
				moderators: ct,
				modQueue: ps,
				muted: Ts
			})
		},
		"./src/reddit/selectors/commentsListTruncated.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			const n = e => e.commentsListTruncated
		},
		"./src/reddit/selectors/dismissedTruncationList.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return r
			})), s.d(t, "b", (function() {
				return o
			}));
			var n = s("./node_modules/reselect/es/index.js");
			const r = e => e.dismissedTruncationList,
				o = Object(n.a)((e, t) => {
					let {
						subredditOrProfile: s
					} = t;
					return s
				}, r, (e, t) => {
					const s = e && e.id;
					return !!s && t.includes(s)
				})
		},
		"./src/reddit/selectors/eligibleUXExperiences.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./src/lib/initializeClient/installReducer.ts"),
				r = s("./src/reddit/reducers/features/eligibleUXExperiences/index.ts");
			Object(n.a)({
				features: {
					eligibleUXExperiences: r.a
				}
			});
			const o = (e, t) => {
				var s, n, r;
				return (null === (r = null === (n = null === (s = e.features) || void 0 === s ? void 0 : s.eligibleUXExperiences) || void 0 === n ? void 0 : n.experiences) || void 0 === r ? void 0 : r[t.experience]) || null
			}
		},
		"./src/reddit/selectors/experiments/adsCardViewHoldout.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/constants/postLayout.ts"),
				o = s("./src/reddit/contexts/PageLayer/index.tsx"),
				a = s("./src/reddit/helpers/chooseVariant/index.ts");
			const i = e => r.e[Object(o.U)(e, {})] === r.d.Card,
				c = e => Object(a.c)(e, {
					experimentEligibilitySelector: i,
					experimentName: n.ob
				}) === n.Yc.Treatment
		},
		"./src/reddit/selectors/experiments/antievil/index.tsx": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts");
			const o = e => {
				return Object(r.c)(e, {
					experimentEligibilitySelector: r.a,
					experimentName: n.I
				}) === n.Rd
			}
		},
		"./src/reddit/selectors/experiments/commentBox.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/helpers/chooseVariant/index.ts"),
				a = s("./src/reddit/selectors/user.ts");
			const i = Object(n.a)(a.S, a.R, (e, t) => e || t),
				c = Object(n.a)(e => Object(o.c)(e, {
					experimentEligibilitySelector: i,
					experimentName: r.D
				}), e => e === r.O.Enabled)
		},
		"./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return m
			})), s.d(t, "b", (function() {
				return u
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./src/reddit/selectors/experiments/index.ts"),
				a = s("./src/reddit/selectors/experiments/utils.ts"),
				i = s("./src/reddit/selectors/meta.ts"),
				c = s("./node_modules/reselect/es/index.js");
			const d = Object(c.a)(e => Object(r.c)(e, {
					experimentEligibilitySelector: e => Object(i.h)(e) && Object(o.f)(e),
					experimentName: n.pc
				}), a.a),
				l = Object(c.a)(e => Object(r.c)(e, {
					experimentEligibilitySelector: e => !Object(i.h)(e) && Object(o.f)(e),
					experimentName: n.oc
				}), a.a),
				m = Object(c.a)(d, l, (e, t) => e || t),
				u = Object(c.a)(d, l, (e, t) => !(!e && !t))
		},
		"./src/reddit/selectors/experiments/joinOptimizations.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			})), s.d(t, "c", (function() {
				return d
			})), s.d(t, "d", (function() {
				return l
			})), s.d(t, "f", (function() {
				return m
			})), s.d(t, "e", (function() {
				return u
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/helpers/chooseVariant/index.ts"),
				a = s("./src/reddit/selectors/experiments/index.ts");
			const i = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.Rb,
					experimentEligibilitySelector: a.e
				}), e => e === r.V.Enabled),
				c = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.Sb,
					experimentEligibilitySelector: a.e
				}), e => e === r.W.Enabled),
				d = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.Tb,
					experimentEligibilitySelector: a.e
				}), e => e === r.X.Enabled),
				l = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.Ub,
					experimentEligibilitySelector: a.e
				}), e => e === r.Y.Enabled),
				m = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.Wb,
					experimentEligibilitySelector: a.e
				}), e => e === r.ab.Enabled),
				u = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.Vb,
					experimentEligibilitySelector: a.e
				}), e => e === r.Z.Enabled)
		},
		"./src/reddit/selectors/experiments/navbarLikeMweb.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return o
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts");
			const o = e => Object(r.c)(e, {
				experimentName: n.Ne,
				experimentEligibilitySelector: r.a
			}) === n.We.Enabled
		},
		"./src/reddit/selectors/experiments/nsfwBypassableBlockingExperiment.ts": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return m
			})), s.d(t, "b", (function() {
				return u
			})), s.d(t, "c", (function() {
				return b
			})), s.d(t, "a", (function() {
				return h
			}));
			var n = s("./src/lib/constants/index.ts"),
				r = s("./src/lib/localStorageAvailable/index.ts"),
				o = s("./src/reddit/constants/experiments.ts"),
				a = s("./src/reddit/constants/localStorage.ts"),
				i = s("./src/reddit/selectors/experiments/nsfwBlockingExperiment.ts"),
				c = s("./src/reddit/selectors/userPrefs.ts"),
				d = s("./node_modules/reselect/es/index.js");
			const l = 30 * n.ob,
				m = () => {
					localStorage.setItem(a.b.XpromoConsolidation, (new Date).toString())
				},
				u = () => {
					if (!Object(r.a)()) return !1;
					const e = localStorage.getItem(a.b.XpromoConsolidation);
					if (!e) return !0;
					const t = Date.parse(e);
					return Number.isNaN(t) ? (localStorage.removeItem(a.b.XpromoConsolidation), !0) : Date.now() > t + l
				},
				p = (e, t) => t === i.a.NoPreview && (e === o.ib.SkippableButtons || e === o.ib.SkippableText),
				C = (e, t) => t === i.a.NoPreview && e === o.ib.NoUpsell,
				b = Object(d.a)(i.h, i.g, (e, t) => {
					return {
						isControlVariant: !(!e || !t) && ((e, t) => t === i.a.NoPreview && !p(e, t) && !C(e, t))(e, t),
						isNewDesignVariant: !(!e || !t) && p(e, t),
						isOldDesignVariant: !(!e || !t) && C(e, t),
						variant: e
					}
				}),
				h = Object(d.a)(b, c.a, (e, t) => !e.isOldDesignVariant && (!e.isNewDesignVariant || !t))
		},
		"./src/reddit/selectors/experiments/onlineIndicator.ts": function(e, t, s) {
			"use strict";
			s.d(t, "d", (function() {
				return a
			})), s.d(t, "c", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			})), s.d(t, "a", (function() {
				return d
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./src/reddit/selectors/experiments/presence.ts");
			const a = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: r.a,
						experimentName: n.mf
					}) === n.Rd
				},
				i = e => {
					if (Object(o.a)(e)) return !1;
					return Object(r.c)(e, {
						experimentEligibilitySelector: r.a,
						experimentName: n.lf
					}) === n.Rd
				},
				c = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: r.a,
						experimentName: n.Ze
					}) === n.Rd
				},
				d = e => {
					if (Object(o.a)(e)) return !1;
					return Object(r.c)(e, {
						experimentEligibilitySelector: r.a,
						experimentName: n.Ye
					}) === n.Rd
				}
		},
		"./src/reddit/selectors/experiments/resonatePilot.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return a
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./src/reddit/selectors/meta.ts");
			const a = e => Object(r.c)(e, {
				experimentEligibilitySelector: e => !Object(o.d)(e) && "US" === Object(o.b)(e),
				experimentName: n.vf
			}) === n.Af.Enabled
		},
		"./src/reddit/selectors/experiments/search/searchSubDiscovery.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return a
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./node_modules/reselect/es/index.js");
			const a = Object(o.a)(e => Object(r.c)(e, {
				experimentEligibilitySelector: r.a,
				experimentName: n.Cf
			}), e => ({
				isSubEnlarged: e === n.Yf.Variant1 || e === n.Yf.Variant3,
				withCommunityDescription: e === n.Yf.Variant2 || e === n.Yf.Variant3
			}))
		},
		"./src/reddit/selectors/experiments/shredditMigration.ts": function(e, t, s) {
			"use strict";
			s.d(t, "e", (function() {
				return C
			})), s.d(t, "c", (function() {
				return b
			})), s.d(t, "d", (function() {
				return h
			})), s.d(t, "b", (function() {
				return f
			})), s.d(t, "f", (function() {
				return g
			})), s.d(t, "g", (function() {
				return v
			})), s.d(t, "a", (function() {
				return y
			})), s.d(t, "h", (function() {
				return O
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./src/reddit/selectors/experiments/index.ts");
			const a = /^\/?(new|top|hot|controversial|rising|best)?\/?$/,
				i = /^\/r\/all\/?((new|top|hot|controversial|rising|best)\/?)?$/,
				c = /^\/r\/popular\/?((new|top|hot|controversial|rising|best)\/?)?$/,
				d = /^\/r\/[^/]+\/?((controversial|new|about|top)\/?)?$/,
				l = /^\/r\/[^/]+\/w(iki)?\/?([^/]+\/?)?$/,
				m = /^\/u(?:ser)?\/[^/]+(\/[^/]+)?\/?$/,
				u = e => !!e.match(a) || !!e.match(c),
				p = e => !e.match(c) && (!e.match(i) && (!!e.match(d) || !!e.match(l))),
				C = (e, t) => !!u(t) && [n.Zf.Enabled, n.Zf.HardReload].includes(Object(r.c)(e, {
					experimentEligibilitySelector: o.f,
					experimentName: n.If
				})),
				b = (e, t) => !!t.match(i) && [n.Zf.Enabled, n.Zf.HardReload].includes(Object(r.c)(e, {
					experimentEligibilitySelector: o.f,
					experimentName: n.Gf
				})),
				h = (e, t) => !!p(t) && [n.Zf.Enabled, n.Zf.HardReload].includes(Object(r.c)(e, {
					experimentEligibilitySelector: o.f,
					experimentName: n.Hf
				})),
				f = (e, t) => !(!p(t) && !u(t)) && Object(r.c)(e, {
					experimentEligibilitySelector: o.f,
					experimentName: n.pe
				}) === n.Rd,
				g = (e, t) => (e => {
					return /^(?:\/r\/[^\/]+)?\/search\/?$/i.test(e) || /^\/u(?:ser)?\/[^\/]+\/m\/[^\/]+\/search\/?$/i.test(e)
				})(t) && Object(o.f)(e),
				x = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: o.f,
						experimentName: n.Jf
					})
				},
				v = (e, t) => !!(e => !!e.match(m))(t) && (x(e) === n.Zf.Enabled || x(e) === n.Zf.HardReload),
				y = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: o.e,
						experimentName: n.Mf
					})
				},
				O = (e, t) => !!(e => !!e.match(m))(t) && y(e) === n.Zf.Enabled
		},
		"./src/reddit/selectors/experiments/shredditParity.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			}));
			var n = s("./src/reddit/helpers/installGoodVisitFeedSearchTracker/index.ts"),
				r = s("./node_modules/reselect/es/index.js"),
				o = s("./src/reddit/selectors/user.ts"),
				a = s("./src/reddit/selectors/experiments/shredditMigration.ts");
			const i = Object(r.a)(o.S, e => !e),
				c = (e, t) => {
					const s = t();
					e.block(e => {
						let t = !1;
						if (Object(o.S)(s)) {
							Object(a.h)(s, e.pathname) && (t = !0)
						} else {
							const n = (e => !!e.match(/^\/(?:r\/[^\/]+\/)?comments\/([a-z0-9]*)/i) || !!e.match(/^\/u(?:ser)?\/[^/]+\/comments\/[a-z0-9]+/i))(e.pathname),
								r = Object(a.b)(s, e.pathname),
								o = Object(a.e)(s, e.pathname),
								i = Object(a.c)(s, e.pathname),
								c = Object(a.d)(s, e.pathname),
								d = Object(a.f)(s, e.pathname),
								l = Object(a.g)(s, e.pathname);
							(r || n || o || i || c || d || l) && (t = !0)
						}
						if (t) {
							const t = e.pathname + e.search;
							return Object(n.f)(s), window.location.href = t, !1
						}
					})
				}
		},
		"./src/reddit/selectors/experiments/signupUpsellExperiment.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return l
			})), s.d(t, "c", (function() {
				return m
			})), s.d(t, "e", (function() {
				return u
			})), s.d(t, "b", (function() {
				return p
			})), s.d(t, "d", (function() {
				return C
			})), s.d(t, "f", (function() {
				return b
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/helpers/chooseVariant/index.ts"),
				a = s("./src/reddit/selectors/meta.ts"),
				i = s("./src/reddit/selectors/experiments/index.ts");
			const c = Object(n.a)(a.h, a.d, i.e, (e, t, s) => !e && !t && !s);

			function d(e, t) {
				return s => Object(o.c)(s, {
					experimentName: e,
					experimentEligibilitySelector: c,
					throttledVariants: {
						[r.dd.Bottom_cell_dismissible]: e,
						[r.dd.Bottom_cell_dismissible_immediate_trigger]: e,
						[r.dd.Bottom_sheet]: e
					},
					expEventOverride: t
				})
			}
			const l = d(r.Db, !0),
				m = d(r.Eb, !0),
				u = d(r.Fb, !0),
				p = d(r.Db, !1),
				C = d(r.Eb, !1),
				b = d(r.Fb, !1)
		},
		"./src/reddit/selectors/experiments/subredditDiscovery.ts": function(e, t, s) {
			"use strict";
			s.d(t, "b", (function() {
				return a
			})), s.d(t, "a", (function() {
				return i
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./src/reddit/selectors/experiments/index.ts");
			const a = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: r.a,
						experimentName: n.Sf
					}) === n.Rd
				},
				i = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: o.e,
						experimentName: n.Rf
					}) === n.Rd
				}
		},
		"./src/reddit/selectors/experiments/typingIndicators.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return i
			})), s.d(t, "d", (function() {
				return c
			})), s.d(t, "b", (function() {
				return d
			})), s.d(t, "a", (function() {
				return l
			}));
			var n = s("./src/reddit/constants/experiments.ts"),
				r = s("./src/reddit/helpers/chooseVariant/index.ts"),
				o = s("./src/reddit/selectors/experiments/index.ts"),
				a = s("./src/reddit/selectors/experiments/presence.ts");
			const i = e => {
					if (Object(a.a)(e)) return !1;
					return Object(r.c)(e, {
						experimentEligibilitySelector: o.e,
						experimentName: n.sg
					}) === n.Rd
				},
				c = e => {
					return Object(r.c)(e, {
						experimentEligibilitySelector: o.e,
						experimentName: n.tg
					}) === n.Rd
				},
				d = e => {
					if (Object(a.a)(e)) return !1;
					const t = Object(r.c)(e, {
						experimentEligibilitySelector: o.e,
						experimentName: n.rg
					});
					return t === n.kg.TypingIndicators || t === n.kg.IndicatorsPlusCTA
				},
				l = e => {
					if (Object(a.a)(e)) return !1;
					const t = Object(o.d)(e, {
						experimentName: n.rg
					});
					return (null == t ? void 0 : t.variant) === n.kg.IndicatorsPlusCTA
				}
		},
		"./src/reddit/selectors/experiments/uxtsIntegration.ts": function(e, t, s) {
			"use strict";
			s.d(t, "c", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			})), s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/helpers/chooseVariant/index.ts"),
				a = s("./src/reddit/selectors/user.ts");
			const i = e => {
					var t;
					return (null === (t = null == e ? void 0 : e.user.experiments.byName[r.Wc]) || void 0 === t ? void 0 : t.variant) === r.Rd
				},
				c = Object(n.a)(e => Object(o.c)(e, {
					experimentEligibilitySelector: a.S,
					experimentName: r.Xb
				}), e => e === r.gd.BottomSheet),
				d = Object(n.a)(e => Object(o.c)(e, {
					experimentEligibilitySelector: a.S,
					experimentName: r.Xb,
					expEventOverride: !1
				}), e => !!e)
		},
		"./src/reddit/selectors/experiments/web2x_cta.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/helpers/chooseVariant/index.ts");
			const a = Object(n.a)(e => Object(o.c)(e, {
					experimentName: r.ng,
					experimentEligibilitySelector: o.a
				}), e => e),
				i = Object(n.a)(a, e => e === r.hg)
		},
		"./src/reddit/selectors/i18n/index.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return i
			})), s.d(t, "b", (function() {
				return c
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/selectors/chatPost.ts"),
				a = s("./src/reddit/selectors/experiments/nsfwListingBelow.ts");
			const i = e => {
					const t = Object(a.a)(e);
					return Boolean(t) && !Object(r.Eg)(t)
				},
				c = Object(n.a)(i, o.d, (e, t) => e && !t)
		},
		"./src/reddit/selectors/isEligibleForCommentTruncation.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return d
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/selectors/dismissedTruncationList.ts"),
				o = s("./src/reddit/selectors/meta.ts"),
				a = s("./src/reddit/selectors/posts.ts"),
				i = s("./src/reddit/selectors/user.ts"),
				c = s("./src/reddit/models/Subreddit/index.ts");
			const d = Object(n.a)((e, t) => t.isOverlay, (e, t) => {
				const s = Object(a.U)(e, {
					postId: t.postId
				});
				return Object(r.b)(e, {
					...t,
					subredditOrProfile: s
				})
			}, a.U, a.F, i.R, i.S, o.h, (e, t, s, n, r, o, a) => {
				if (!n) return !1;
				const i = !(!s || Object(c.i)(s)),
					d = n.numComments >= 3 && !e || !t;
				return a && i && d && (!r && !o)
			})
		},
		"./src/reddit/selectors/searchFix.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return c
			})), s.d(t, "b", (function() {
				return l
			})), s.d(t, "c", (function() {
				return m
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/lib/constants/index.ts"),
				o = s("./src/reddit/contexts/PageLayer/index.tsx");
			const a = {},
				i = e => {
					let {
						pageLayer: t
					} = e;
					return t && t.locationState || a
				},
				c = Object(n.a)((e, t) => i(t), e => e.fromPage && e.fromPage.subredditName),
				d = Object(n.a)((e, t) => i(t), e => e.fromPage && e.fromPage.routeName),
				l = e => {
					let {
						pageLayer: t
					} = e;
					return t && t.locationState && t.locationState.searchSwitcherType
				},
				m = Object(n.a)(d, (e, t) => {
					let {
						pageLayer: s
					} = t;
					return Object(o.C)(s)
				}, (e, t) => t && (e === r.Sb.COMMENTS || e === r.Sb.SUBREDDIT))
		},
		"./src/reddit/selectors/searchQueryId.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return n
			}));
			const n = e => e.searchQueryId
		},
		"./src/reddit/selectors/seo/reredditPromo.ts": function(e, t, s) {
			"use strict";
			s.d(t, "a", (function() {
				return b
			}));
			var n = s("./node_modules/reselect/es/index.js"),
				r = s("./src/reddit/constants/experiments.ts"),
				o = s("./src/reddit/helpers/getPostFromRouteMatch/index.ts"),
				a = s("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				i = s("./src/reddit/selectors/platform.ts"),
				c = s("./src/reddit/selectors/posts.ts");
			const d = new Date,
				l = d.getUTCFullYear(),
				m = d.getUTCMonth(),
				u = d.getUTCDate(),
				p = Date.UTC(2008, 0, 1),
				C = Date.UTC(l, m - 7, u),
				b = Object(n.a)(e => Object(i.f)(e), e => Object(o.a)(e), (e, t) => {
					let {
						post: s
					} = t;
					return s && Object(c.U)(e, {
						postId: s.id,
						disallowProfile: !0
					})
				}, e => Object(a.a)(e), (e, t, s, n) => e && !!t && (!t.isNSFW || t.isNSFW && n === r.kd.GreyRedditNoNsfw) && !!s && (!s.isNSFW || s.isNSFW && n === r.kd.GreyRedditNoNsfw) && !!t.created && t.created > p && t.created < C)
		},
		"./src/redditGQL/operations/CommentsPageExtra.json": function(e) {
			e.exports = JSON.parse('{"id":"abbb27126771"}')
		},
		"./src/redditGQL/operations/CompleteCommunityProgressCard.json": function(e) {
			e.exports = JSON.parse('{"id":"de7c5c2c6959"}')
		},
		"./src/redditGQL/operations/CompleteCommunityProgressModule.json": function(e) {
			e.exports = JSON.parse('{"id":"662c7500e8b7"}')
		},
		"./src/redditGQL/operations/DeleteSubredditMuteSettings.json": function(e) {
			e.exports = JSON.parse('{"id":"c518a45f60a5"}')
		},
		"./src/redditGQL/operations/DismissCommunityProgressCard.json": function(e) {
			e.exports = JSON.parse('{"id":"d43940dddaf7"}')
		},
		"./src/redditGQL/operations/DismissCommunityProgressCardV2.json": function(e) {
			e.exports = JSON.parse('{"id":"af0a685394e2"}')
		},
		"./src/redditGQL/operations/FetchEligibleUXExperiences.json": function(e) {
			e.exports = JSON.parse('{"id":"388d61b2a794"}')
		},
		"./src/redditGQL/operations/LanguageSelections.json": function(e) {
			e.exports = JSON.parse('{"id":"40df26b7117b"}')
		},
		"./src/redditGQL/operations/MutedSubreddits.json": function(e) {
			e.exports = JSON.parse('{"id":"c09ff0d041c1"}')
		},
		"./src/redditGQL/operations/OtherDiscussions.json": function(e) {
			e.exports = JSON.parse('{"id":"a67c9b37646a"}')
		},
		"./src/redditGQL/operations/PostFeedAndOtherDiscussions.json": function(e) {
			e.exports = JSON.parse('{"id":"41973b2a5a8f"}')
		},
		"./src/redditGQL/operations/StoreUxTargetingAction.json": function(e) {
			e.exports = JSON.parse('{"id":"e734e21836ec"}')
		},
		"./src/redditGQL/operations/SubredditGeoRecommendationViaFocusVertical.json": function(e) {
			e.exports = JSON.parse('{"id":"be09d1d59e65"}')
		},
		"./src/redditGQL/operations/SubredditPosts.json": function(e) {
			e.exports = JSON.parse('{"id":"2c1754c5026c"}')
		},
		"./src/redditGQL/operations/SubredditUserAchievements.json": function(e) {
			e.exports = JSON.parse('{"id":"7288c5f50973"}')
		},
		"./src/redditGQL/operations/SubredditsPosts.json": function(e) {
			e.exports = JSON.parse('{"id":"e289f23cc495"}')
		},
		"./src/redditGQL/operations/UpdateAchievementFlairPreference.json": function(e) {
			e.exports = JSON.parse('{"id":"1bc1df66f049"}')
		},
		"./src/redditGQL/operations/UpdateSpokenLanguagesPreference.json": function(e) {
			e.exports = JSON.parse('{"id":"6d0707c83164"}')
		},
		"./src/redditGQL/operations/UpdateSubredditMuteAndNotificationLevelSettings.json": function(e) {
			e.exports = JSON.parse('{"id":"2620d72fd633"}')
		},
		"./src/redditGQL/operations/UpdateSubredditMuteSettings.json": function(e) {
			e.exports = JSON.parse('{"id":"432f6b475ece"}')
		}
	}
]);
//# sourceMappingURL=https://www.redditstatic.com/desktop2x/CommentsPage.8a388940cd624f9805cd.js.map