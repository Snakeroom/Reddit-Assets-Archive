// https://www.redditstatic.com/desktop2x/PostCreation.09dc613acf2cebc3ddc9.js
// Retrieved at 8/10/2023, 11:00:04 AM by Reddit Dataminer v1.0.0
(window.__LOADABLE_LOADED_CHUNKS__ = window.__LOADABLE_LOADED_CHUNKS__ || []).push([
	["PostCreation", "CommentsPage~Reddit~RichTextEditor~reddit-components-LargePost~reddit-components-MediumPost~reddit-c~cad4f428", "ModListing~Reddit~StandalonePostPage~Subreddit", "ChatMessageInput~MembershipPaywallPage~RichTextEditor", "ContributorRequestButton"], {
		"./src/higherOrderComponents/asModal/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			}));
			var o = n("./src/reddit/constants/elementIds.ts");
			const s = () => {
					const e = document.getElementById(o.a);
					e && (e.style.filter = "blur(10px)")
				},
				r = () => {
					const e = document.getElementById(o.a);
					e && e.style.removeProperty("filter")
				}
		},
		"./src/higherOrderComponents/asModal/index.m.less": function(e, t, n) {
			e.exports = {
				overlay: "_1DK52RbaamLOWw5UPaht_S",
				mIsVisible: "_1acwN_tUhJ8w-n7oCp-Aw3",
				mIsBlurred: "_3Tq-_9917Q-o0iyzcNAeZn",
				modal: "_2Bejocqb-InO8686E2ehf"
			}
		},
		"./src/higherOrderComponents/asModal/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return f
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/higherOrderComponents/asModal/helpers.ts"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/lib/FocusTrap/index.ts"),
				c = n("./src/lib/portal/index.tsx"),
				l = n("./src/reddit/actions/shortcuts/utils.ts"),
				d = n("./src/reddit/constants/shortcuts.ts"),
				u = n("./src/reddit/helpers/toggleBodyScroll/index.ts"),
				p = n("./src/higherOrderComponents/asModal/index.m.less"),
				m = n.n(p);

			function h() {
				return (h = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const b = e => {
				let {
					className: t,
					shouldBlurBackground: n,
					isVisible: o,
					...r
				} = e;
				return s.a.createElement("div", h({
					className: Object(i.a)(m.a.overlay, t, {
						[m.a.mIsVisible]: o,
						[m.a.mIsBlurred]: n
					})
				}, r))
			};

			function f(e) {
				class t extends o.Component {
					constructor(e) {
						super(e), this.getRef = e => this.ref = e, this.onClick = e => e.stopPropagation(), this.onOverlayClick = e => {
							this.props.onOverlayClick && this.props.onOverlayClick(), e.stopPropagation()
						}, this.state = {
							mounted: !1
						}
					}
					componentDidMount() {
						this.props.ignoreDefaultFocus || this.ref && this.ref.focus(), this.setState({
							mounted: !0
						}), Object(u.a)(), this.ref && (this.focusTrap = new a.b(this.ref), this.focusTrap.activate()), this.props.shouldBlurBackground && Object(r.a)()
					}
					componentWillUnmount() {
						this.setState({
							mounted: !1
						}), Object(u.b)(), Object(l.d)(), this.focusTrap && this.focusTrap.deactivate(), this.props.shouldBlurBackground && Object(r.b)()
					}
					render() {
						const {
							props: t
						} = this, {
							className: n,
							ignoreDefaultFocus: o,
							onOverlayClick: r,
							overlayClassName: a,
							overlayCustomStyles: l,
							shouldBlurBackground: u,
							withOverlay: p,
							...h
						} = t, f = h;
						return s.a.createElement(c.a, {
							container: document.getElementById(d.b)
						}, s.a.createElement(b, {
							className: a,
							isVisible: p,
							onClick: this.onOverlayClick,
							shouldBlurBackground: u,
							style: l
						}, s.a.createElement("div", {
							"aria-modal": !0,
							className: Object(i.a)(m.a.modal, n),
							onClick: this.onClick,
							ref: this.getRef,
							role: "dialog",
							tabIndex: -1
						}, s.a.createElement(e, f))))
					}
				}
				return t
			}
		},
		"./src/higherOrderComponents/warnOnChildrenCount/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			n("./src/lib/logs/console.ts");
			t.a = function(e, t) {
				return t => s.a.createElement(e, t)
			}
		},
		"./src/lib/FocusTrap/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			}));
			const o = ['input:not([type="hidden"]):not([disabled])', "select:not([disabled])", "textarea:not([disabled])", "a[href]", "button:not([disabled])", '[tabindex]:not([tabindex="-1"]):not([disabled])', "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join();
			class s {
				constructor(e) {
					this.active = !1, this.onKeyDown = e => {
						if ("Tab" === e.key || 9 === e.keyCode) {
							const [t, n] = this.getTabbableNodes();
							if (!t || !n) return;
							e.shiftKey && e.target === t ? (e.preventDefault(), this.tryToFocusNode(n)) : e.shiftKey || e.target !== n || (e.preventDefault(), this.tryToFocusNode(t))
						}
					}, this.container = e
				}
				activate() {
					this.active || (this.active = !0, document.addEventListener("keydown", this.onKeyDown, !0))
				}
				deactivate() {
					this.active && (document.removeEventListener("keydown", this.onKeyDown, !0), this.active = !1)
				}
				getTabbableNodes() {
					const e = this.container.querySelectorAll(o);
					return [e[0], e[e.length - 1]]
				}
				tryToFocusNode(e) {
					e !== document.activeElement && e.focus && e.focus()
				}
			}
		},
		"./src/lib/LinkedListMap/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			class o {
				constructor(e) {
					this.value = e, this.next = void 0, this.prev = void 0
				}
			}
			class s {
				constructor(e) {
					this.key = e, this.tail = void 0, this.head = void 0, this.length = 0, this.itemsByKey = {}
				}
				static fromArray(e, t) {
					const n = new s(t);
					return e.forEach(e => n.push(e)), n
				}
				first() {
					if (this.tail) return this.tail.value
				}
				firstNode() {
					if (this.tail) return this.tail
				}
				forEach(e) {
					let t = this.tail;
					for (; t;) e(t.value), t = t.next
				}
				get(e) {
					const t = this.getNode(e);
					if (t) return t.value
				}
				getNode(e) {
					return this.itemsByKey[e]
				}
				has(e) {
					return e in this.itemsByKey
				}
				insertAfter(e, t) {
					const n = t instanceof o ? t : new o(t),
						s = this.getNode(e);
					if (!s) throw new Error(`Cannot find item with key ${e}`);
					n.prev = s, n.next = s.next, s.next = n, n.next && (n.next.prev = n);
					const r = t instanceof o ? t.value[this.key] : t[this.key];
					this.itemsByKey[r] = n, this.length++
				}
				insertBefore(e, t) {
					const n = t instanceof o ? t : new o(t),
						s = this.getNode(e);
					if (!s) throw new Error(`Cannot find item with key ${e}`);
					n.next = s, n.prev = s.prev, s.prev = n, n.prev && (n.prev.next = n);
					const r = t instanceof o ? t.value[this.key] : t[this.key];
					this.itemsByKey[r] = n, this.length++
				}
				last() {
					if (this.head) return this.head.value
				}
				lastNode() {
					if (this.head) return this.head
				}
				pop() {
					if (!this.head) return;
					return this.removeNode(this.head).value
				}
				push(e) {
					const t = e instanceof o ? e : new o(e);
					t.prev = this.head, this.head ? this.head.next = t : this.tail = t, this.head = t;
					const n = e instanceof o ? t.value[this.key] : e[this.key];
					this.itemsByKey[n] = t, this.length++
				}
				remove(e) {
					const t = this.getNode(e);
					if (t) return this.removeNode(t).value
				}
				removeNode(e) {
					return e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), e === this.tail && (this.tail = e.next), e === this.head && (this.head = e.prev), e.next = void 0, e.prev = void 0, this.itemsByKey[e.value[this.key]] = void 0, this.length--, e
				}
				shift() {
					if (!this.tail) return;
					return this.removeNode(this.tail).value
				}
				toArray() {
					const e = [];
					return this.forEach(t => e.push(t)), e
				}
				unshift(e) {
					const t = e instanceof o ? e : new o(e);
					t.next = this.tail, this.tail ? this.tail.prev = t : this.head = t, this.tail = t;
					const n = e instanceof o ? t.value[this.key] : e[this.key];
					this.itemsByKey[n] = t, this.length++
				}
			}
		},
		"./src/lib/avatarShareImages.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			}));
			const o = 16765092,
				s = "https://i.redd.it/snoovatar",
				r = "snoovatars",
				i = "avatars";

			function a(e) {
				return `${s}/${+e>=o?i:r}/shared/${e}.png`
			}
		},
		"./src/lib/colors/constants.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return o
			})), n.d(t, "e", (function() {
				return s
			})), n.d(t, "c", (function() {
				return r
			})), n.d(t, "a", (function() {
				return i
			})), n.d(t, "d", (function() {
				return a
			})), n.d(t, "f", (function() {
				return c
			})), n.d(t, "g", (function() {
				return l
			}));
			const o = "#000",
				s = "#FFF",
				r = "#FF4500",
				i = "#0079D3",
				a = "#46D160",
				c = {
					black: o,
					white: s,
					orangered: r,
					alienblue: i,
					tone1: "#1A1A1B",
					tone2: "#6A6D6F",
					tone3: "#878A8C",
					tone4: "#D3D6DA",
					tone5: "#EDEFF1",
					tone6: "#F6F7F8",
					tone7: "#FFFFFF",
					primary: "#24A0ED",
					secondary: "#006CBF",
					upvote: r,
					downvote: "#7193FF",
					positive: a,
					negative: "#EA0027",
					caution: "#FFB000",
					admin: r,
					moderator: "#46D160",
					self: "#0DD3BB",
					coins: "#DDBD37",
					live: r,
					nsfw: "#FF585B",
					spoiler: "#1A1A1B"
				},
				l = {
					...c,
					tone1: "#D7DADC",
					tone2: "#818384",
					tone3: "#565758",
					tone4: "#3A3A3C",
					tone5: "#272729",
					tone6: "#1A1A1B",
					tone7: "#121213",
					primary: "#006CBF",
					secondary: "#24A0ED",
					coins: "#FFE600",
					spoiler: "#D7DADC"
				}
		},
		"./src/lib/combineRefs/index.tsx": function(e, t, n) {
			"use strict";
			t.a = function() {
				for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
				return e => {
					t.forEach(t => {
						if (t) return "function" == typeof t ? t(e) : void(t.current = e)
					})
				}
			}
		},
		"./src/lib/forEachGroup/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			const o = e => e;

			function s(e, t, n) {
				const [s, r] = Array.isArray(e) ? [e.length, t => e[t]] : [e.size, t => e.get(t)], {
					keyFn: i = o
				} = t || {};
				let {
					start: a = 0,
					end: c = s
				} = t || {};
				if ((a = a < 0 ? 0 : a) >= (c = c > s ? s : c)) return;
				let l = r(a),
					d = i(l, a),
					u = a;
				for (let o = a + 1; o < c; o++) {
					const e = r(o),
						t = i(e, o);
					if (t !== d) {
						if (!1 === n(l, d, u, o)) return;
						d = t, u = o, l = e
					}
				}
				n(l, d, u, c)
			}
		},
		"./src/lib/hooks/usePrevious.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./node_modules/react/index.js");

			function s(e) {
				const t = Object(o.useRef)();
				return Object(o.useEffect)(() => {
					t.current = e
				}), t.current
			}
		},
		"./src/lib/hooks/useTooltip.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			})), n.d(t, "b", (function() {
				return c
			}));
			var o = n("./node_modules/icepick/icepick.js"),
				s = n("./node_modules/react/index.js"),
				r = n("./node_modules/react-popper/lib/esm/usePopper.js");
			const i = Object(o.freeze)({
				modifiers: []
			});

			function a(e) {
				let t = "object" == typeof e ? e : i;
				return Array.isArray(t.modifiers) || (t = Object(o.assoc)(t, "modifiers", i.modifiers)), t
			}

			function c(e) {
				const [t, n] = Object(s.useState)(null), [i, c] = Object(s.useState)(null), [l, d] = Object(s.useState)(null), [u, p] = Object(s.useState)(!1), m = Object(s.useCallback)(async () => p(!0), []), h = Object(s.useCallback)(() => p(!1), []), b = Object(s.useCallback)(() => p(!u), [u]), f = Object(s.useMemo)(() => {
					const t = a(e);
					return l ? Object(o.updateIn)(t, ["modifiers"], e => Object(o.push)(e, {
						name: "arrow",
						options: {
							element: l
						}
					})) : t
				}, [l, e]), {
					attributes: g,
					styles: v,
					update: x
				} = Object(r.a)(t, i, f);
				return Object(s.useMemo)(() => ({
					arrowProps: {
						ref: d,
						style: v.arrow,
						...g.arrow
					},
					hide: h,
					popperProps: {
						ref: c,
						style: v.popper,
						...g.popper
					},
					show: m,
					target: {
						element: t,
						ref: n
					},
					toggle: b,
					visible: u,
					update: x
				}), [d, g, c, h, m, v, t, n, b, u, x])
			}
		},
		"./src/lib/linkMatchers/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return d
			})), n.d(t, "b", (function() {
				return u
			})), n.d(t, "d", (function() {
				return p
			})), n.d(t, "g", (function() {
				return m
			})), n.d(t, "a", (function() {
				return h
			})), n.d(t, "e", (function() {
				return f
			})), n.d(t, "f", (function() {
				return g
			}));
			var o = n("./node_modules/linkify-it/index.js"),
				s = n.n(o),
				r = n("./node_modules/tlds/index.js"),
				i = n.n(r),
				a = n("./src/lib/linkMatchers/customLinks.ts");
			n("./node_modules/lodash/values.js");
			const c = ["//", "ftp:", "http:", "https:", "mailto:"],
				l = e => ((e, t) => (t.forEach(t => e.add(t, null)), e))(e, c),
				d = s()().tlds(i.a).set({
					fuzzyIP: !0
				}),
				u = s()().set({
					fuzzyIP: !0,
					fuzzyEmail: !1
				}).add(a.g.mention.prefix, a.g.mention.config),
				p = l(s()()).set({
					fuzzyLink: !1,
					fuzzyEmail: !1
				}).add(a.g.subreddit.prefix, a.g.subreddit.config).add(a.g.subredditFull.prefix, a.g.subreddit.config),
				m = l(s()()).set({
					fuzzyLink: !1,
					fuzzyEmail: !1
				}).add(a.g.profile.prefix, a.g.profile.config).add(a.g.profileFull.prefix, a.g.profile.config),
				h = s()().tlds(i.a).set({
					fuzzyIP: !0
				}).add(a.g.subreddit.prefix, a.g.subreddit.config).add(a.g.subredditFull.prefix, a.g.subreddit.config).add(a.g.profile.prefix, a.g.profile.config).add(a.g.profileFull.prefix, a.g.profile.config).add(a.g.mention.prefix, a.g.mention.config),
				b = (s()().tlds(i.a).set({
					fuzzyIP: !0,
					fuzzyEmail: !1
				}).add(a.g.subreddit.prefix, a.g.subredditFullUrl.config).add(a.g.subredditFull.prefix, a.g.subredditFullUrl.config), d.normalize);
			d.normalize = e => {
				b.call(d, e), !e.schema && e.url.startsWith("http:") && (e.url = `https:${e.url.slice(5)}`)
			};
			const f = (e, t) => {
					const n = e.match(t);
					if (n && 1 === n.length && 0 === n[0].index && n[0].lastIndex === t.length) return n[0]
				},
				g = e => {
					const t = d.match(e);
					if (t && 1 === t.length && 0 === t[0].index) {
						const n = t[0];
						return n.lastIndex === e.length ? n : ((e, t) => {
							const n = e.substring(t.lastIndex);
							if (/.*\/\/.*\/.*/.test(t.url) && /^(\?|\!)+$/.test(n)) return t.lastIndex += n.length, t.url += n, t
						})(e, n)
					}
				}
		},
		"./src/lib/memoizeByReference/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./node_modules/lodash/every.js"),
				s = n.n(o);

			function r(e) {
				let t = null,
					n = null;
				return function() {
					for (var o = arguments.length, r = new Array(o), i = 0; i < o; i++) r[i] = arguments[i];
					return null !== t && r.length === t.length && s()(r, (e, n) => e === t[n]) || (t = r, n = e(...r)), n
				}
			}
		},
		"./src/lib/postParentMessage/index.ts": function(e, t, n) {
			"use strict";
			t.a = function(e, t) {
				let {
					type: n,
					data: o = {}
				} = e, s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "*", r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : window.parent;
				if (r !== window) {
					const e = {
						type: t ? `${n}.${t}` : n,
						data: o
					};
					r.postMessage(JSON.stringify(e), s)
				}
			}
		},
		"./src/lib/scroll/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return a
			})), n.d(t, "a", (function() {
				return c
			}));
			var o = n("./src/lib/domUtils/index.ts"),
				s = n("./src/lib/fastdom/index.ts"),
				r = n("./src/reddit/components/CommentSort/index.tsx"),
				i = n("./src/reddit/constants/elementIds.ts");
			const a = () => {
					s.a.write(() => {
						const e = document.getElementById(i.e);
						e ? Object(o.c)(e, 0) : Object(o.c)(document, 0)
					})
				},
				c = e => {
					s.a.read(() => {
						const t = e ? document.getElementById(i.e) : window,
							n = document.getElementById(r.a);
						if (t && n) {
							const o = e ? n.offsetTop : n.offsetTop - 50;
							s.a.write(() => t.scrollTo({
								top: o,
								behavior: "smooth"
							}))
						}
					})
				}
		},
		"./src/reddit/actions/comment/authoring.ts": function(e, t, n) {
			"use strict";
			n.d(t, "f", (function() {
				return ge
			})), n.d(t, "r", (function() {
				return Ce
			})), n.d(t, "p", (function() {
				return Ee
			})), n.d(t, "t", (function() {
				return ke
			})), n.d(t, "w", (function() {
				return _e
			})), n.d(t, "q", (function() {
				return je
			})), n.d(t, "v", (function() {
				return we
			})), n.d(t, "o", (function() {
				return Ie
			})), n.d(t, "m", (function() {
				return Me
			})), n.d(t, "b", (function() {
				return Ne
			})), n.d(t, "c", (function() {
				return Ae
			})), n.d(t, "s", (function() {
				return Be
			})), n.d(t, "g", (function() {
				return Fe
			})), n.d(t, "h", (function() {
				return Ue
			})), n.d(t, "k", (function() {
				return Ke
			})), n.d(t, "e", (function() {
				return He
			})), n.d(t, "d", (function() {
				return Ve
			})), n.d(t, "a", (function() {
				return Qe
			})), n.d(t, "j", (function() {
				return Je
			})), n.d(t, "i", (function() {
				return $e
			})), n.d(t, "l", (function() {
				return et
			})), n.d(t, "u", (function() {
				return tt
			})), n.d(t, "n", (function() {
				return nt
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/lib/makeDraftKey/index.ts"),
				i = n("./src/lib/reCaptchaEnterprise/index.ts"),
				a = n("./src/lib/scroll/index.ts"),
				c = n("./src/reddit/actions/changeUsername.ts"),
				l = n("./src/reddit/actions/login.ts"),
				d = n("./src/reddit/actions/modal.ts"),
				u = n("./src/reddit/actions/onboarding/index.ts"),
				p = n("./src/reddit/actions/post.ts"),
				m = n("./src/reddit/actions/postCreation/editorContent.ts"),
				h = n("./src/reddit/actions/reCaptchaEnterprise.ts"),
				b = n("./src/reddit/actions/shortcuts/utils.ts"),
				f = n("./src/reddit/actions/toaster.ts"),
				g = n("./src/reddit/constants/adEvents.ts"),
				v = n("./src/reddit/constants/experiments.ts"),
				x = n("./src/reddit/constants/localStorage.ts"),
				C = n("./src/redditGQL/operations/CommentToxicity.json"),
				E = n("./src/lib/constants/index.ts"),
				y = n("./src/lib/makeApiRequest/index.ts"),
				O = n("./src/lib/makeGqlRequest/index.ts"),
				k = n("./src/lib/omitHeaders/index.ts"),
				_ = n("./src/reddit/components/RichTextEditor/RTEState/index.tsx"),
				j = n("./src/reddit/constants/headers.ts"),
				S = n("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				T = n("./src/reddit/helpers/genericServerError/index.ts"),
				w = n("./src/reddit/helpers/r2/normalizeCommentFromR2/index.ts"),
				I = n("./src/reddit/helpers/r2/normalizeR2APIErrors/index.ts"),
				P = n("./src/reddit/models/PostCreationForm/index.ts"),
				M = n("./src/reddit/models/RichTextJson/addEmotesAsImagesParam.ts"),
				R = n("./src/reddit/models/RichTextJson/addRTJParam.ts"),
				N = n("./src/reddit/helpers/graphql/helpers.ts"),
				D = n("./src/reddit/helpers/graphql/normalizeCommentFromGql/index.ts"),
				L = n("./src/redditGQL/operations/CreateComment.json");
			const A = (e, t, n, o) => {
					let s, r;
					if (o === P.i.MARKDOWN) s = n.text, r = null;
					else {
						s = null;
						let e = null;
						n.rteState && (e = _.a.toRichTextJSON(n.rteState).document), r = JSON.stringify({
							document: e
						})
					}
					return Object(O.a)(e, {
						...C,
						variables: {
							subredditName: t,
							markdown: s,
							richText: r
						}
					}).then(e => !e.ok || e.body.data.isValidComment)
				},
				B = async (e, t, n, o, s) => {
					const r = {
						api_type: "json",
						return_rtjson: !0,
						thing_id: t,
						recaptcha_token: s
					};
					return n.commentMode === P.i.MARKDOWN ? r.text = n.text : (r.text = null, r.richtext_json = o), Object(y.a)(Object(k.a)(e, [j.a]), {
						method: E.nb.POST,
						endpoint: Object(S.a)(Object(M.a)(Object(R.a)(`${e.apiUrl}/api/comment.json`))),
						data: r
					}).then(e => e.ok ? e.body.json ? e.body.json.errors.length ? {
						...e,
						ok: !1,
						error: Object(I.a)(e)
					} : {
						...e,
						body: {
							comment: Object(w.a)(e.body.json.data.things[0].data)
						}
					} : {
						...e,
						body: {
							comment: Object(w.a)(e.body)
						}
					} : {
						...e,
						error: e.error || Object(T.a)()
					})
				}, F = async (e, t, n, o, s) => {
					const r = o.commentMode === P.i.MARKDOWN,
						i = {
							postId: t || null,
							parentId: n || null,
							content: {
								markdown: r ? o.text : null,
								richText: r ? null : s
							}
						};
					return Object(O.a)(e, {
						...L,
						variables: {
							input: i
						}
					}).then(e => {
						if (e.ok) {
							const t = e.body.data.createComment;
							if ((null == t ? void 0 : t.fieldErrors) && t.fieldErrors.length > 0) return {
								...e,
								ok: !1,
								error: Object(N.e)(t.fieldErrors)
							};
							if ((null == t ? void 0 : t.errors) && t.errors.length > 0) return {
								...e,
								ok: !1,
								error: Object(N.f)(t.errors)
							};
							if (t.ok) return {
								...e,
								body: {
									comment: Object(D.a)(t.commentInfo)
								}
							}
						}
						return {
							...e,
							ok: !1,
							error: e.error || Object(T.a)()
						}
					})
				};
			var U = n("./src/redditGQL/operations/UpdateComment.json");
			var K = n("./src/redditGQL/operations/UpdateCommentFollowState.json");
			var W = n("./src/reddit/endpoints/post/index.tsx"),
				H = n("./src/reddit/endpoints/post/convert.ts"),
				q = n("./src/reddit/featureFlags/index.ts"),
				z = n("./src/reddit/helpers/comment/index.ts"),
				G = n("./src/reddit/helpers/correlationIdTracker.ts"),
				V = n("./src/reddit/helpers/dom/index.ts"),
				Q = n("./src/reddit/helpers/localStorage/index.ts"),
				J = n("./src/reddit/helpers/sessionStorage/index.ts"),
				X = n("./src/reddit/helpers/trackers/commentsPage.ts"),
				Z = n("./src/reddit/models/Comment/index.ts"),
				Y = n("./src/reddit/models/PostDraft/index.ts"),
				$ = n("./src/reddit/models/RichTextJson/index.ts"),
				ee = n("./src/reddit/models/RichTextJson/nodeMakers.ts"),
				te = n("./src/reddit/models/Toast/index.ts"),
				ne = n("./src/reddit/selectors/chatPost.ts"),
				oe = n("./src/reddit/selectors/comments.ts"),
				se = n("./src/reddit/selectors/commentSelector.ts"),
				re = n("./src/reddit/selectors/experiments/chat.ts"),
				ie = n("./src/reddit/helpers/chooseVariant/index.ts"),
				ae = n("./node_modules/reselect/es/index.js");
			const ce = Object(ae.a)(e => Object(ie.c)(e, {
				experimentEligibilitySelector: ie.a,
				experimentName: v.Hb
			}), e => e === v.Rd);
			var le = n("./src/reddit/selectors/experiments/contributeBeforeSignUp.ts"),
				de = n("./src/reddit/selectors/platform.ts"),
				ue = n("./src/reddit/selectors/posts.ts"),
				pe = n("./src/reddit/selectors/tracking.ts"),
				me = n("./src/reddit/selectors/user.ts"),
				he = n("./src/reddit/actions/comment/index.ts"),
				be = n("./src/reddit/actions/comment/constants.ts");
			const fe = Object(s.a)(be.m),
				ge = e => {
					let {
						hasFocus: t,
						draftKey: n
					} = e;
					return async (e, o) => {
						const s = o();
						if (!!s.features.comments.drafts[n])
							if (Object(me.U)(s) && t) {
								const o = fe({
									hasFocus: t,
									draftKey: n
								});
								e(Object(c.startChangeUsernameFlow)(o))
							} else e(fe({
								hasFocus: t,
								draftKey: n
							}))
					}
				},
				ve = Object(s.a)(be.L),
				xe = Object(s.a)(be.H),
				Ce = Object(s.a)(be.N),
				Ee = Object(s.a)(be.M),
				ye = Object(s.a)(be.K),
				Oe = async (e, t, n, o, s) => {
					const r = o.ok && o.body,
						i = r && r.comment && r.comment.id;
					await X.g(e, n, t, s, i)
				}, ke = "Toxicity_Warning__Modal", _e = e => async (t, n, o) => {
					let {
						gqlContext: s
					} = o;
					const r = n(),
						i = Object(de.e)(r);
					let a = "";
					i && (a = i.name);
					const {
						formData: c,
						editorMode: l
					} = e;
					if (q.d.enableToxicityWarning(r)) {
						if (!(await A(s(), a, c, l))) return void t(Object(d.i)(ke))
					}
					t(je(e))
				}, je = e => async (t, n) => {
					t(Object(d.g)(ke));
					const o = n(),
						s = Object(le.a)(o),
						r = Object(le.c)(o);
					if (!o.user.account && s) {
						const n = Object(z.e)(e.formData, o.uploads),
							s = Object(z.d)(e.formData, o.uploads);
						t(Object(d.k)({
							actionSource: d.a.Reply
						})), t(Object(l.openRegisterModal)()), Object(J.d)({
							comment: {
								...e,
								richTextJSONData: n,
								commentBodyText: s
							},
							isSkipOnboarding: r
						})
					} else t(Te(e, !1))
				};

			function Se(e, t) {
				return e === P.i.MARKDOWN && ce(t)
			}
			const Te = (e, t, n, s) => {
					let {
						postId: r,
						commentsPageKey: c,
						draftKey: l,
						formData: d,
						editorMode: u,
						disableAutofocus: m
					} = e;
					return async (e, x, C) => {
						let {
							apiContext: E,
							gqlContext: y
						} = C;
						var O;
						await e(Object(h.b)({
							action: i.a.CommentSubmit,
							catchAndLogError: !0,
							experiment: v.F
						}));
						const k = x(),
							_ = Object(ne.d)(k, {
								postId: r
							}),
							j = _ ? Object(z.b)() : l,
							S = Object(se.f)(k, {
								commentId: j
							}),
							T = Object(me.m)(k);
						if (!T) return;
						if (S && !_) return;
						t || e(ve({
							draftKey: j,
							draft: d,
							commentsPageKey: c,
							optimisticComment: _ ? Object(z.c)({
								temporalId: j,
								draft: d,
								post: Object(ue.F)(k, {
									postId: r
								}),
								author: T,
								subredditId: (null === (O = Object(de.e)(k)) || void 0 === O ? void 0 : O.id) || ""
							}) : void 0
						}));
						const w = d.commentMode;
						let I;
						const M = t && n ? n : Object(z.e)(d, k.uploads),
							R = Object(z.f)(M, k.uploads);
						if ((I = Se(w, k) ? await F(y(), r, null, d, M) : await B(E(), r, d, M, Object(pe.a)(k))).ok) {
							const n = I.body;
							if (e(Ce({
									...n,
									headCommentId: Object(oe.w)(k, {
										commentsPageKey: c
									}),
									commentsPageKey: c,
									draftKey: j,
									upload: R
								})), t) {
								const e = Object(de.i)(k);
								Object(a.a)(!!e)
							}
							const o = Object(ue.F)(x(), {
								postId: r
							});
							e(Object(p.y)(o, g.a.CommentSubmitted))
						} else {
							if (I.error) {
								const e = t && s ? s : Object(z.d)(d, k.uploads);
								X.f({
									state: k,
									bodyText: e,
									postId: r,
									error: I.error,
									uploadMetadata: null == R ? void 0 : R.metadata
								})
							}
							const n = I.error && I.error.fields && I.error.fields[0] ? I.error.fields[0].msg : o.fbt._("Something went wrong", null, {
								hk: "LWFS0"
							});
							e(ye({
								draftKey: j,
								error: I.error
							})), _ || e(Object(f.f)({
								duration: f.a,
								kind: te.b.Error,
								text: n
							}))
						}
						Oe(x(), c, u, I, null == R ? void 0 : R.metadata).then(() => I.ok && u === P.i.RICH_TEXT ? Object(G.b)(G.a.CommentComposer) : void 0), m || Object(b.d)(), t && Object(J.a)()
					}
				},
				we = e => async (t, n, o) => {
					let {
						gqlContext: s
					} = o;
					const {
						parentCommentId: r,
						commentsPageKey: i,
						parentCommentDepth: a,
						draftKey: c,
						formData: l,
						editorMode: u
					} = e, p = n(), m = Object(de.e)(p);
					let h = "";
					if (m && (h = m.name), q.d.enableToxicityWarning(p)) {
						if (!(await A(s(), h, l, u))) return void t(Object(d.i)(ke))
					}
					t(Ie({
						commentsPageKey: i,
						draftKey: c,
						parentCommentDepth: a,
						parentCommentId: r,
						formData: l,
						editorMode: u
					}))
				}, Ie = e => async (t, n) => {
					t(Object(d.g)(ke));
					const o = n(),
						s = Object(le.a)(o),
						r = Object(le.c)(o);
					if (!o.user.account && s) {
						const n = Object(z.e)(e.formData, o.uploads),
							s = Object(z.d)(e.formData, o.uploads);
						t(Object(d.k)({
							actionSource: d.a.Reply
						})), t(Object(l.openRegisterModal)()), Object(J.d)({
							comment: {
								...e,
								richTextJSONData: n,
								commentBodyText: s
							},
							isSkipOnboarding: r
						})
					} else t(Pe(e, !1))
				}, Pe = (e, t, n, o) => async (s, r, c) => {
					let {
						apiContext: l,
						gqlContext: d
					} = c;
					var u;
					const {
						parentCommentId: p,
						commentsPageKey: m,
						parentCommentDepth: f,
						draftKey: g,
						formData: x,
						editorMode: C
					} = e;
					await s(Object(h.b)({
						action: i.a.CommentSubmit,
						catchAndLogError: !0,
						experiment: v.F
					}));
					const E = r(),
						y = Object(se.c)(E, {
							commentId: p
						}),
						O = y && Object(ne.d)(E, {
							postId: y.postId
						}) && Object(re.d)(E),
						k = y && Object(ne.d)(E, {
							postId: y.postId
						}),
						_ = k ? Object(z.b)() : g,
						j = Object(se.f)(E, {
							commentId: _
						}),
						S = Object(me.m)(E);
					if (!S) return;
					if (j && !k) return;
					t || s(ve({
						draftKey: _,
						draft: x,
						commentsPageKey: m,
						optimisticComment: k && y ? Object(z.c)({
							temporalId: _,
							draft: x,
							post: Object(ue.F)(E, {
								postId: y.postId
							}),
							author: S,
							subredditId: (null === (u = Object(de.e)(E)) || void 0 === u ? void 0 : u.id) || "",
							parentId: y.id
						}) : void 0
					})), O || s(Ne({
						parentCommentId: p,
						commentsPageKey: m
					}));
					const T = x.commentMode,
						w = t && n ? n : Object(z.e)(x, E.uploads),
						I = Object(z.f)(w, E.uploads);
					let P;
					if ((P = Se(T, E) ? await F(d(), null, p, x, w) : await B(l(), p, x, w, Object(pe.a)(E))).ok) {
						if (s(Ee({
								...P.body,
								parentCommentId: p,
								commentsPageKey: m,
								draftKey: _,
								depth: f + 1,
								upload: I
							})), t) {
							const e = Object(de.i)(E);
							Object(a.a)(!!e)
						}
					} else {
						if (P.error) {
							if (!y) return;
							const e = t && o ? o : Object(z.d)(x, E.uploads);
							X.f({
								state: E,
								bodyText: e,
								postId: y.postId,
								parentId: p,
								error: P.error,
								uploadMetadata: null == I ? void 0 : I.metadata
							})
						}
						s(ye({
							draftKey: _,
							error: P.error
						}))
					}
					Oe(r(), m, C, P, null == I ? void 0 : I.metadata), O || Object(b.d)(), t && Object(J.a)()
				}, Me = () => async e => {
					const t = Object(J.b)();
					if (t) {
						const {
							comment: {
								parentCommentDepth: n,
								parentCommentId: o,
								postId: s,
								richTextJSONData: r,
								commentBodyText: i
							},
							isSkipOnboarding: a
						} = t;
						a && e(Object(u.skipOnboardingModal)()), s ? await e(Te({
							...t.comment,
							postId: s
						}, !0, r, i)) : o && void 0 !== n && await e(Pe({
							...t.comment,
							parentCommentId: o,
							parentCommentDepth: n
						}, !0, r, i))
					}
				}, Re = Object(s.a)(be.s), Ne = Object(s.a)(be.r), De = Object(s.a)(be.n), Le = (Object(s.a)(be.i), Object(s.a)(be.o)), Ae = (Object(s.a)(be.v), (e, t, n) => async (s, r, i) => {
					let {
						apiContext: a
					} = i;
					const c = e === P.i.RICH_TEXT;
					if (!t || "object" == typeof t && Object($.I)(t)) s(Le({
						editorMode: e,
						draftKey: n,
						content: c ? $.j : ""
					})), s(Object(m.c)(e));
					else {
						s(Object(m.b)(n));
						const r = await Object(H.a)(a(), e, c ? t : JSON.stringify(t));
						if (r.ok) {
							const t = r.body.output;
							s(Object(m.a)(n)), s(Le({
								editorMode: e,
								draftKey: n,
								content: t
							})), s(Object(m.c)(e))
						} else s(Object(m.a)(n)), s(Object(f.f)({
							duration: f.a,
							kind: te.b.Error,
							text: o.fbt._("Something went wrong", null, {
								hk: "LWFS0"
							})
						}))
					}
				}), Be = e => {
					let {
						commentsPageKey: t,
						parentCommentId: n,
						singleOpen: o
					} = e;
					return async (e, s) => {
						const i = s(),
							a = Object(r.a)(Y.c.replyToComment, n);
						if (!Object(me.S)(s()) && !Object(le.a)(i)) return e(Object(l.openRegisterModal)()), void e(Object(d.k)({
							actionSource: d.a.Reply,
							redirectUrl: Object(oe.m)(s(), {
								commentId: n
							})
						}));
						const u = i.features.comments.replyFormOpen[t],
							p = u && u[n];
						if ((p || u && o) && (Object.keys(u).forEach(n => u[n] && e(Ne({
								parentCommentId: n,
								commentsPageKey: t
							}))), p)) return;
						let m = "",
							h = null;
						const b = i.user.prefs.commentMode,
							f = Object(V.d)();
						if (f) {
							const e = f.filter(e => !!e && 10 !== e.charCodeAt(0));
							if (b === P.i.MARKDOWN) m = e.map(e => `> ${e}\n`).join("");
							else {
								const t = e.map(e => ee.s(e, null)).map(e => ee.l([e])),
									n = ee.s("", null),
									o = ee.l([n]);
								h = {
									document: [ee.c(t), o]
								}
							}
						}
						const g = i.features.comments.drafts[a];
						let v;
						if (v = f ? {
								commentMode: b,
								draftType: Y.c.replyToComment,
								rtJson: h,
								text: `${m}\n`
							} : g || {
								commentMode: b,
								draftType: Y.c.replyToComment,
								rtJson: h,
								text: ""
							}, Object(me.U)(i)) {
							const o = Re({
								parentCommentId: n,
								commentsPageKey: t,
								draftKey: a,
								formData: v
							});
							e(Object(c.startChangeUsernameFlow)(o))
						} else e(Re({
							parentCommentId: n,
							commentsPageKey: t,
							draftKey: a,
							formData: v
						}))
					}
				}, Fe = e => async t => {
					t(Object(he.r)(e)), t(He(e))
				}, Ue = e => {
					let {
						parentCommentId: t,
						commentsPageKey: n
					} = e;
					return async e => {
						e(Ne({
							parentCommentId: t,
							commentsPageKey: n
						})), e(Be({
							parentCommentId: t,
							commentsPageKey: n
						})), e(Object(he.r)({
							commentId: t,
							commentsPageKey: n
						}))
					}
				}, Ke = (e, t) => n => n(De({
					draftKey: e,
					formData: t
				})), We = Object(s.a)(be.u), He = e => {
					let {
						commentId: t,
						commentMode: n,
						commentsPageKey: o,
						draftKey: s,
						text: r
					} = e;
					return async (e, i) => {
						const a = i();
						a.user.account && (X.c(a), e(We({
							commentId: t,
							commentsPageKey: o,
							draftKey: s,
							formData: {
								text: r,
								commentMode: n,
								rteState: null,
								draftType: Y.c.edit,
								hasFocus: !0
							}
						})))
					}
				}, qe = Object(s.a)(be.F), ze = Object(s.a)(be.E), Ge = Object(s.a)(be.G), Ve = Object(s.a)(be.j), Qe = Object(s.a)(be.f), Je = e => {
					let {
						id: t,
						commentsPageKey: n,
						draftKey: o,
						formData: s
					} = e;
					return async (e, r, i) => {
						let {
							apiContext: a,
							gqlContext: c
						} = i;
						const l = r();
						if (!l.user.account) return;
						e(qe({
							draftKey: o
						})), X.d(l);
						const d = Object(z.e)(s, l.uploads),
							u = s.commentMode;
						let p;
						if ((p = Se(u, l) ? await (async (e, t, n, o, s) => {
								const r = s === P.i.MARKDOWN,
									i = {
										commentId: t,
										content: {
											markdown: r ? n.text : null,
											richText: r ? null : o
										}
									};
								return Object(O.a)(e, {
									...U,
									variables: {
										input: i
									}
								}).then(e => {
									if (e.ok) {
										const t = e.body.data.updateComment;
										if ((null == t ? void 0 : t.fieldErrors) && t.fieldErrors.length > 0) return {
											...e,
											ok: !1,
											error: Object(N.e)(t.fieldErrors)
										};
										if ((null == t ? void 0 : t.errors) && t.errors.length > 0) return {
											...e,
											ok: !1,
											error: Object(N.f)(t.errors)
										};
										if (t.ok) return {
											...e,
											body: {
												comment: {
													...Object(D.c)(t.content)
												}
											}
										}
									}
									return {
										...e,
										ok: !1,
										error: e.error || Object(T.a)()
									}
								})
							})(c(), t, s, d, u) : await (async (e, t, n, o, s) => {
								const r = {
									api_type: "json",
									return_rtjson: !0,
									thing_id: t
								};
								return s === P.i.MARKDOWN ? r.text = n.text : (r.text = null, r.richtext_json = o), Object(y.a)(Object(k.a)(e, [j.a]), {
									endpoint: Object(S.a)(Object(R.a)(Object(M.a)(`${e.apiUrl}/api/editusertext`))),
									method: E.nb.POST,
									data: r
								}).then(e => e.ok ? e.body.json ? e.body.json.errors.length ? {
									...e,
									ok: !1,
									error: Object(I.a)(e)
								} : {
									...e,
									body: {
										comment: Object(w.a)(e.body.json.data.things[0].data)
									}
								} : {
									...e,
									body: {
										comment: Object(w.a)(e.body)
									}
								} : {
									...e,
									error: e.error || Object(T.a)()
								})
							})(a(), t, s, d, u)).ok) {
							const s = p.body;
							e(Ge({
								commentId: t,
								commentsPageKey: n,
								draftKey: o
							})), e(Object(he.j)({
								[t]: {
									...s.comment
								}
							}))
						} else e(ze({
							draftKey: o,
							error: p.error
						}))
					}
				}, Xe = Object(s.a)(be.C), Ze = Object(s.a)(be.B), Ye = Object(s.a)(be.D), $e = (e, t) => async (n, o, s) => {
					let {
						apiContext: r
					} = s;
					const i = o();
					n(Xe({
						id: e
					})), X.a(e, i);
					const a = await ((e, t) => Object(y.a)(Object(k.a)(e, [j.a]), {
						endpoint: Object(S.a)(`${e.apiUrl}/api/del`),
						method: E.nb.POST,
						data: {
							id: t
						}
					}).then(e => e.ok ? e.body.json && e.body.json.errors.length ? {
						...e,
						ok: !1,
						error: Object(I.a)(e)
					} : {
						...e,
						body: {}
					} : {
						...e,
						error: e.error || Object(T.a)()
					}))(r(), e);
					a.ok ? n(Ye({
						id: e,
						postId: t
					})) : n(Ze({
						id: e,
						error: a.error
					}))
				}, et = e => async (t, n, o) => {
					let {
						apiContext: s
					} = o;
					const r = !n().features.comments.models[e].sendReplies;
					t(Object(he.j)({
						[e]: {
							sendReplies: r
						}
					})), (await Object(W.p)(s(), e, r)).ok || t(Object(he.j)({
						[e]: {
							sendReplies: !r
						}
					}))
				}, tt = (e, t) => async (n, s, r) => {
					let {
						gqlContext: i
					} = r;
					var a, c, l, d, u, p;
					n(Object(he.c)());
					const m = e => Object(f.f)(Object(f.e)(e, te.b.Error));
					if (((null === (c = null === (a = s().pages) || void 0 === a ? void 0 : a.comments) || void 0 === c ? void 0 : c.followed) || []).length === x.a) n(m(o.fbt._("You've reached your post follow limit", null, {
						hk: "3ebRql"
					})));
					else {
						const r = t === Z.a.FOLLOWED,
							a = {
								id: e,
								expiresAt: Date.now() + 6048e5
							};
						if (n(Object(he.p)(a)), (await ((e, t) => Object(O.a)(e, {
								...K,
								variables: {
									input: t
								}
							}))(i(), {
								commentId: e,
								followState: t
							})).ok) {
							Object(Q.xb)(null !== (u = null === (d = null === (l = s().pages) || void 0 === l ? void 0 : l.comments) || void 0 === d ? void 0 : d.followed) && void 0 !== u ? u : [], null === (p = s().user.account) || void 0 === p ? void 0 : p.id);
							const e = r ? o.fbt._("Followed! You’ll get updates when there’s new activity.", null, {
								hk: "2O1Ou3"
							}) : o.fbt._("Unfollowed. You won’t get updates on this comment anymore.", null, {
								hk: "4EAz6O"
							});
							n(Object(f.f)({
								kind: te.b.SuccessCommunityGreen,
								text: e
							}))
						} else n(Object(he.p)(a)), n(m(o.fbt._("Sorry, we had trouble doing that. Please try again.", null, {
							hk: "2N0vVk"
						})))
					}
				};

			function nt(e) {
				let {
					commentId: t,
					commentsPageKey: n
				} = e;
				return async (e, o) => {
					const s = o(),
						r = Object(se.c)(s, {
							commentId: t
						});
					if (!r) return;
					e(xe({
						commentId: t,
						commentsPageKey: n
					}));
					const i = {
						commentMode: r.media.rteMode,
						draftType: r.parentId ? Y.c.replyToComment : Y.c.replyToPost,
						rtJson: r.media.richtextContent,
						hasFocus: !0,
						text: ""
					};
					if (r.parentId) {
						const t = Object(se.c)(s, {
								commentId: r.parentId
							}),
							o = Object(oe.j)(s, {
								commentId: r.parentId,
								commentLink: void 0,
								commentsPageKey: n
							});
						if (!t || null === o) return;
						await e(Ie({
							commentsPageKey: n,
							draftKey: r.id,
							parentCommentDepth: o,
							parentCommentId: t.id,
							formData: i,
							editorMode: r.media.rteMode
						}))
					} else await e(je({
						postId: r.postId,
						commentsPageKey: n,
						draftKey: r.id,
						formData: i,
						editorMode: r.media.rteMode,
						disableAutofocus: !0
					}))
				}
			}
		},
		"./src/reddit/actions/economics/me/thunkedActions.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return p
			})), n.d(t, "a", (function() {
				return m
			}));
			var o = n("./src/lib/constants/index.ts"),
				s = n("./src/lib/makeRequest/index.ts"),
				r = n("./src/config.ts"),
				i = n("./src/reddit/endpoints/governance/requester.ts");
			var a = n("./src/lib/makeActionCreator/index.ts"),
				c = n("./src/reddit/actions/economics/me/constants.ts");
			const l = Object(a.a)(c.a),
				d = Object(a.a)(c.b),
				u = Object(a.a)(c.c),
				p = e => async (t, n, o) => {
					let {
						apiContext: s
					} = o;
					const a = e && e.includeMemberships || !1,
						c = e && e.forceFetch || !1,
						d = n();
					if (!d.economics.me.fetched || a && !d.economics.me.data.specialMemberships || c) {
						const e = await
						function(e, t) {
							return Object(i.a)(e, {
								method: "get",
								endpoint: `${r.a.metaUrl}/users/me${t?"?fields=specialMemberships":""}`
							})
						}(s(), a);
						if (e.ok) {
							const n = e.body;
							a && !n.specialMemberships && (n.specialMemberships = {}), t(l(n))
						}
					}
				}, m = () => async (e, t) => {
					const n = t(),
						r = n.economics.me.data;
					if (!r) throw new Error("me data required for copy to be fetched");
					if (!n.economics.pointsCopy.fetched) {
						e(d());
						const t = `https://${r.pointsDocsBaseUrl}v1.json?web`,
							n = await Object(s.b)({
								endpoint: t,
								method: o.nb.GET
							});
						n.ok && n.body && e(u(n.body))
					}
				}
		},
		"./src/reddit/actions/economics/subredditPremium/thunkedActions.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return O
			})), n.d(t, "g", (function() {
				return k
			})), n.d(t, "b", (function() {
				return _
			})), n.d(t, "d", (function() {
				return j
			})), n.d(t, "e", (function() {
				return S
			})), n.d(t, "c", (function() {
				return T
			})), n.d(t, "f", (function() {
				return w
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/lodash/forOwn.js"),
				s = n.n(o),
				r = n("./src/reddit/actions/governance/errorToast.ts"),
				i = n("./src/reddit/endpoints/economics/emojis.ts"),
				a = n("./src/reddit/endpoints/economics/specialMembership.ts"),
				c = n("./src/reddit/endpoints/economics/subredditPremium.ts"),
				l = n("./src/reddit/endpoints/governance/badges.ts"),
				d = n("./src/config.ts"),
				u = n("./src/reddit/endpoints/governance/requester.ts");

			function p(e, t, n) {
				return Object(u.a)(e, {
					method: "get",
					endpoint: `${d.a.metaUrl}/products/${t}?owners=${n}` + "&types=emotes_pack,giphy"
				})
			}
			var m = n("./src/reddit/models/Badge/index.ts"),
				h = n("./src/reddit/models/Badge/managementPage.ts"),
				b = n("./src/reddit/models/Product/index.ts"),
				f = n("./src/reddit/reducers/economics/subredditPremium/index.ts"),
				g = n("./src/reddit/selectors/economics.ts"),
				v = n("./src/reddit/selectors/products.ts"),
				x = n("./src/reddit/actions/economics/me/thunkedActions.ts"),
				C = n("./src/reddit/actions/economics/subredditPremium/actionCreators.ts");

			function E(e) {
				return !!e && "removeBadge" === e.type
			}

			function y(e) {
				if (!E(e)) return e
			}
			const O = () => async (e, t, n) => {
				let {
					apiContext: o
				} = n;
				if (!t().user.account) return;
				await e(Object(x.b)({
					includeMemberships: !0
				}));
				const s = t().economics.me.data.specialMemberships || {},
					r = Object.keys(s);
				if (r.length) {
					const t = await Object(a.e)(o(), r);
					t.ok && e(Object(C.g)(t.body))
				}
			}, k = (e, t) => async (n, o, s) => {
				let {
					apiContext: r
				} = s;
				const i = o().user.account,
					a = o().economics.subredditPremium[e],
					l = !a || a.status !== f.a.Fetched || t;
				if (i && l) {
					const t = await Object(c.a)(r(), e, i.id);
					n(Object(C.i)(t))
				}
			}, _ = e => async (t, n, o) => {
				let {
					apiContext: s
				} = o;
				const i = n(),
					a = i.user.account,
					c = Object(g.f)(i, e.subredditId),
					d = Object.keys(c).map(e => c[e]).filter(Boolean);
				if (a && e.badge) {
					let n, o;
					n = e.placement === m.a.First ? c[h.a.Loyalty] : e.placement === m.a.Second ? c[h.a.Achievement] : c[h.a.Cosmetic], t(Object(C.a)({
						...e,
						badge: y(e.badge),
						currentAppliedBadges: d,
						userId: a.id
					})), E(e.badge) && n ? o = await Object(l.a)(s(), e.subredditId, n.id, !1) : E(e.badge) || (o = await Object(l.a)(s(), e.subredditId, e.badge.id)), o && !o.ok && (t(Object(C.a)({
						...e,
						badge: n,
						currentAppliedBadges: d,
						userId: a.id
					})), Object(r.a)(t, o.error))
				}
			}, j = (e, t) => async (n, o, s) => {
				let {
					apiContext: r
				} = s;
				await n(k(e, !0));
				const i = o().economics.subredditPremium[e];
				if (i && i.status === f.a.Fetched) {
					const o = i.data.userOwnedBadges.find(e => e.type === t.id);
					o && (n(_({
						badge: o,
						subredditId: e,
						placement: o.placement
					})), n(Object(C.d)(h.c.MyBadges)))
				}
			}, S = e => async (t, n, o) => {
				let {
					apiContext: a
				} = o;
				const c = n().user.account,
					l = !n().economics.emotes[e],
					d = !n().economics.gifs[e];
				if (c && (l || d)) {
					const [n, o] = await Promise.all([Object(i.b)(a(), e), p(a(), e, c.id)]);
					if (!o.ok) return void Object(r.a)(t, o.error);
					const l = {
						emotes: [],
						emoteCollections: n.ok ? n.body : {},
						giphy: []
					};
					s()(o.body, e => {
						e.type === b.a.EmotesPack ? l.emotes.push(e) : e.type === b.a.Giphy && l.giphy.push(e)
					}), t(Object(C.e)({
						subredditId: e,
						products: l
					}))
				}
			}, T = (e, t, n) => async (o, s, r) => {
				let {
					apiContext: i
				} = r;
				if (await o(k(e, !0)), n && t) {
					const n = s(),
						r = Object(g.f)(n, e),
						i = Object(v.a)(n, t);
					if (!r[Object(h.d)(i.placement)] && i) {
						const t = Object(g.l)(n, {
							subredditId: e,
							badge: i
						});
						t && await o(_({
							badge: t,
							subredditId: e
						}))
					}
					o(Object(C.c)({
						subredditId: e,
						initialView: h.c.MyBadges
					}))
				}
			}, w = e => async (t, n, o) => {
				let {
					apiContext: s
				} = o;
				const {
					wallet: r
				} = await Object(a.c)(s(), e);
				t(Object(C.f)({
					wallet: r
				})), await t(k(e.subredditId, !0))
			}
		},
		"./src/reddit/actions/eligibleUxExperiences/constants.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			}));
			const o = "ELIGIBLE_UX_EXPERIENCES__FETCH_UX_EXPERIENCES_SUCCESS",
				s = "ELIGIBLE_UX_EXPERIENCES__UPDATE_UX_EXPERIENCE_VALUE"
		},
		"./src/reddit/actions/eligibleUxExperiences/eligibleUxExperiences.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return u
			})), n.d(t, "a", (function() {
				return h
			})), n.d(t, "b", (function() {
				return b
			})), n.d(t, "d", (function() {
				return f
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./src/lib/initializeClient/installReducer.ts"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/lib/sentry/index.ts"),
				i = n("./src/reddit/endpoints/eligibleUXExperiences/eligibleUxExperiences.ts"),
				a = n("./src/reddit/reducers/features/eligibleUXExperiences/index.ts"),
				c = n("./src/reddit/selectors/eligibleUXExperiences.ts"),
				l = n("./src/redditGQL/types.ts"),
				d = n("./src/reddit/actions/eligibleUxExperiences/constants.ts");
			Object(o.a)({
				features: {
					eligibleUXExperiences: a.a
				}
			});
			const u = Object(s.a)(d.b),
				p = Object(s.a)(d.a),
				m = e => {
					let {
						experiences: t,
						clientContext: n
					} = e;
					return async (e, o, s) => {
						let {
							gqlContext: a
						} = s;
						var d, u;
						const m = o(),
							h = Object.keys(t).filter(e => {
								const n = Object(c.a)(m, {
									experience: e
								});
								return (e !== l.db.LanguagePreferenceBottomSheet || null == n || !n.value) && !(t[e].allowCached && (null == n ? void 0 : n.fetched))
							});
						if (!h.length) return;
						const b = await Object(i.a)(a(), h, n);
						if (b.ok) {
							const t = b.body,
								n = (null === (u = null === (d = null == t ? void 0 : t.data) || void 0 === d ? void 0 : d.eligibleUxExperiences) || void 0 === u ? void 0 : u.map(e => null == e ? void 0 : e.experience)) || [],
								o = null == n ? void 0 : n.reduce((e, t) => ({
									...e,
									[t]: !0
								}), {}),
								s = h.reduce((e, t) => o[t] ? e : {
									...e,
									[t]: !1
								}, {});
							e(p({
								experiences: {
									...o,
									...s
								}
							}))
						} else r.c.captureException(b.error)
					}
				},
				h = () => m({
					experiences: {
						[l.db.LiveChatVideoEdu]: {
							allowCached: !0
						},
						[l.db.LiveChatReactionEdu]: {
							allowCached: !0
						}
					}
				}),
				b = e => m({
					experiences: {
						[l.db.LanguagePreferenceBottomSheet]: {
							allowCached: !1
						}
					},
					clientContext: {
						postId: e
					}
				}),
				f = e => async (t, n, o) => {
					let {
						gqlContext: s
					} = o;
					Object(i.b)(s(), {
						action: l.a.View,
						eligibleExperience: {
							experience: e
						}
					})
				}
		},
		"./src/reddit/actions/gold/communityAwards/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			})), n.d(t, "i", (function() {
				return i
			})), n.d(t, "d", (function() {
				return a
			})), n.d(t, "e", (function() {
				return c
			})), n.d(t, "f", (function() {
				return l
			})), n.d(t, "b", (function() {
				return d
			})), n.d(t, "c", (function() {
				return u
			})), n.d(t, "j", (function() {
				return p
			})), n.d(t, "g", (function() {
				return m
			})), n.d(t, "h", (function() {
				return h
			}));
			var o = n("./src/lib/loadableAction/index.ts");
			const s = e => () => n.e("CommunityAwards").then(n.bind(null, "./src/reddit/actions/gold/communityAwards/communityAwards.ts")).then(t => t[e]),
				r = Object(o.a)(s("awardSheetInfoRequested")),
				i = Object(o.a)(s("manageableAwardsRequested")),
				a = Object(o.a)(s("createCommunityAward")),
				c = Object(o.a)(s("createGlobalAward")),
				l = Object(o.a)(s("createModAward")),
				d = Object(o.a)(s("createAwardFailed")),
				u = Object(o.a)(s("createAwardSuccessful")),
				p = Object(o.a)(s("removeCommunityAward")),
				m = Object(o.a)(s("disableAwardinCommunity")),
				h = Object(o.a)(s("enableAwardinCommunity"))
		},
		"./src/reddit/actions/gold/modals.ts": function(e, t, n) {
			"use strict";
			n.d(t, "e", (function() {
				return v
			})), n.d(t, "b", (function() {
				return C
			})), n.d(t, "d", (function() {
				return y
			})), n.d(t, "c", (function() {
				return k
			})), n.d(t, "a", (function() {
				return _
			})), n.d(t, "f", (function() {
				return j
			}));
			var o = n("./src/lib/makeActionCreator/index.ts"),
				s = n("./src/lib/postParentMessage/index.ts"),
				r = n("./src/reddit/helpers/isPost.ts"),
				i = n("./src/reddit/constants/modals.ts"),
				a = n("./src/reddit/selectors/gild.ts"),
				c = n("./src/reddit/helpers/correlationIdTracker.ts"),
				l = n("./src/reddit/actions/gold/communityAwards/index.ts"),
				d = n("./src/reddit/actions/modal.ts"),
				u = n("./src/reddit/selectors/communityAwards.ts"),
				p = n("./src/reddit/selectors/experiments/econ/index.ts"),
				m = n("./src/reddit/selectors/posts.ts"),
				h = n("./src/reddit/selectors/subreddit.ts"),
				b = n("./src/telemetry/index.ts"),
				f = n("./src/reddit/actions/gold/constants.ts");
			const g = Object(o.a)(f.J),
				v = e => async (t, n) => {
					const o = n();
					Object(p.d)(o) || t(g(e))
				}, x = Object(o.a)(f.f), C = () => async (e, t) => {
					const o = t();
					e(x()), Object(c.b)(c.a.GiftPremiumFlow);
					const {
						clickCloseModalEvent: s
					} = await n.e("givePremiumTrackers").then(n.bind(null, "./src/reddit/helpers/trackers/givePremium.ts"));
					Object(b.a)(s()(o))
				}, E = Object(o.a)(f.I), y = e => {
					let {
						awardId: t,
						correlationId: n,
						thingId: o
					} = e;
					return async (e, s) => {
						const a = s();
						if (Object(p.d)(a)) return;
						const c = t ? Object(u.a)(a, t) : void 0;
						e(E({
							award: c && c.isEnabled ? c : void 0,
							thingId: o,
							correlationId: n
						})), e(Object(d.h)(i.a.GOLD_GILD_MODAL));
						const b = Object(h.O)(a, {
							thingId: o
						});
						let f = null;
						if (b) f = b.id;
						else if (Object(r.a)(o)) {
							const e = Object(m.F)(a, {
								postId: o
							});
							e && (f = e.belongsTo.id)
						}
						f && Object(l.a)(f, o)
					}
				}, O = Object(o.a)(f.e), k = Object(o.a)(f.H), _ = () => async (e, t) => {
					const o = t(),
						r = Object(a.d)(o);
					if (Object(a.g)(o)) {
						const e = "close.gild";
						Object(s.a)({
							type: e
						})
					}
					e(O()), e(Object(d.g)(i.a.GOLD_GILD_MODAL));
					const {
						clickCloseGildModalEvent: l
					} = await Promise.resolve().then(n.bind(null, "./src/reddit/helpers/trackers/gild.ts"));
					Object(b.a)(l(r)(o)), Object(c.b)(c.a.GildingFlow)
				}, j = () => async () => {
					Object(s.a)({
						type: "login.gild"
					})
				}
		},
		"./src/reddit/actions/inContextModeration.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			})), n.d(t, "c", (function() {
				return i
			})), n.d(t, "d", (function() {
				return a
			}));
			var o = n("./src/lib/makeActionCreator/index.ts");
			const s = "INCONTEXT__BANNED",
				r = "INCONTEXT__MUTED",
				i = Object(o.a)(s),
				a = Object(o.a)(r)
		},
		"./src/reddit/actions/moderationLog/constants.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return o
			})), n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			}));
			const o = "SUBREDDIT__MODERATION_LOG_LOADED",
				s = "SUBREDDIT__ALL_MODERATORS_LOADED",
				r = "SUBREDDIT__MODERATION_CATEGORY_ACTIONS_LOADED"
		},
		"./src/reddit/actions/postCollection/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return D
			})), n.d(t, "e", (function() {
				return A
			})), n.d(t, "g", (function() {
				return F
			})), n.d(t, "a", (function() {
				return W
			})), n.d(t, "c", (function() {
				return q
			})), n.d(t, "h", (function() {
				return Q
			})), n.d(t, "f", (function() {
				return Y
			})), n.d(t, "d", (function() {
				return re
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react-router-redux/es/index.js"),
				r = n("./src/lib/filterQueryParams/index.ts"),
				i = n("./src/lib/makeActionCreator/index.ts"),
				a = n("./src/reddit/actions/post.ts"),
				c = n("./src/reddit/actions/postCollection/constants.ts"),
				l = n("./src/reddit/actions/toaster.ts"),
				d = n("./src/reddit/constants/history.ts"),
				u = n("./src/lib/constants/index.ts"),
				p = n("./src/lib/makeApiRequest/index.ts"),
				m = n("./src/lib/omitHeaders/index.ts"),
				h = n("./src/reddit/constants/headers.ts");
			var b = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${e.apiUrl}/api/v1/collections/add_post_to_collection.json`,
				method: u.nb.POST,
				data: {
					collection_id: t,
					link_fullname: n
				}
			});
			var f = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${e.apiUrl}/api/v1/collections/create_collection.json`,
				method: u.nb.POST,
				data: {
					title: t,
					sr_fullname: n
				}
			});
			var g = (e, t) => Object(p.a)(Object(m.a)(e, [h.a]), {
					endpoint: `${e.apiUrl}/api/v1/collections/delete_collection.json`,
					method: u.nb.POST,
					data: {
						collection_id: t
					}
				}),
				v = n("./src/config.ts");
			var x = (e, t) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${v.a.gatewayUrl}/desktopapi/v1/subreddit_collections/${t}`,
				method: u.nb.GET
			});
			var C = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${e.apiUrl}/api/v1/collections/remove_post_in_collection.json`,
				method: u.nb.POST,
				data: {
					collection_id: t,
					link_fullname: n
				}
			});
			var E = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${e.apiUrl}/api/v1/collections/update_collection_title.json`,
				method: u.nb.POST,
				data: {
					collection_id: t,
					title: n
				}
			});
			var y = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${e.apiUrl}/api/v1/collections/reorder_collection.json`,
				method: u.nb.POST,
				data: {
					collection_id: t,
					link_ids: n.join(",")
				}
			});
			var O = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
				endpoint: `${e.apiUrl}/api/v1/collections/update_collection_description.json`,
				method: u.nb.POST,
				data: {
					collection_id: t,
					description: n
				}
			});
			var k = (e, t, n) => Object(p.a)(Object(m.a)(e, [h.a]), {
					endpoint: `${e.apiUrl}/api/v1/collections/update_collection_display_layout.json`,
					method: u.nb.POST,
					data: {
						collection_id: t,
						display_layout: n
					}
				}),
				_ = n("./src/reddit/helpers/overlay/index.ts"),
				j = n("./src/reddit/helpers/path/index.ts"),
				S = n("./src/reddit/models/Toast/index.ts"),
				T = n("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				w = n("./src/reddit/selectors/postCollection.ts"),
				I = n("./src/reddit/selectors/posts.ts"),
				P = n("./src/reddit/selectors/subreddit.ts");
			const M = Object(i.a)(c.c),
				R = Object(i.a)(c.b),
				N = Object(i.a)(c.d),
				D = (e, t) => async (n, o, s) => {
					let {
						apiContext: r
					} = s;
					n(M());
					const i = await f(r(), e, t);
					let a;
					if (i.ok) {
						const e = o().meta,
							t = (e => ({
								author: e.author_name || void 0,
								createdAtUTC: e.created_at_utc,
								description: e.description,
								displayLayout: e.display_layout,
								id: e.collection_id,
								lastUpdateUTC: e.last_update_utc,
								permalink: e.permalink,
								postIds: e.link_ids,
								primaryPostId: e.primary_link_id || void 0,
								subredditId: e.subreddit_id,
								title: e.title
							}))(i.body);
						n(N({
							collection: t,
							meta: e
						})), a = t
					} else {
						const e = i.error;
						n(R(e))
					}
					return a
				}, L = Object(i.a)(c.f), A = e => async (t, n, s) => {
					let {
						apiContext: r
					} = s;
					const i = n().postCollection.subredditToIds || {};
					if (Object.keys(i).length > 0) return;
					const a = await x(r(), e);
					a.ok ? t(L(a.body)) : t(Object(l.f)({
						kind: S.b.Error,
						text: o.fbt._("Something went wrong. Just don't panic.", null, {
							hk: "4Ck6Cm"
						})
					}))
				}, B = Object(i.a)(c.g), F = (e, t, n) => async (s, r, i) => {
					let {
						apiContext: a
					} = i;
					if ((await C(a(), e, t)).ok) {
						const i = r(),
							a = Object(I.F)(i, {
								postId: t
							}),
							c = a && a.title || "",
							d = Object(w.q)(i, {
								collectionId: e
							}),
							u = (d && d.postIds && d.postIds.indexOf(t) || -1) - 1;
						if (s(B({
								collectionId: e,
								postId: t
							})), n && u >= 0) {
							const t = r(),
								n = Object(w.q)(t, {
									collectionId: e
								}),
								o = n && n.postIds && n.postIds[u] || "",
								i = Object(I.F)(t, {
									postId: o
								});
							i && i.permalink && s(Object(_.a)(i.permalink))
						}
						s(Object(l.f)({
							kind: S.b.SuccessMod,
							text: o.fbt._("Following post removed from collection successfully: {postTitle}", [o.fbt._param("postTitle", c)], {
								hk: "8e1lV"
							}),
							buttonText: o.fbt._("UNDO", null, {
								hk: "3KPLib"
							}),
							buttonAction: W(e, t)
						}))
					} else s(Object(l.f)({
						kind: S.b.Error,
						text: o.fbt._("Something went wrong. Just don't panic.", null, {
							hk: "4Ck6Cm"
						})
					}))
				}, U = Object(i.a)(c.a), K = Object(i.a)(c.t), W = (e, t) => async (n, s, r) => {
					let {
						apiContext: i
					} = r;
					const a = s();
					if ((await b(i(), e, t)).ok) {
						n(U({
							collectionId: e,
							postId: t
						})), n(K({
							collectionId: e,
							postId: t
						}));
						const s = Object(I.F)(a, {
								postId: t
							}),
							r = Object(w.q)(a, {
								collectionId: e
							}),
							i = r && r.title || "";
						n(Object(l.f)({
							kind: S.b.SuccessMod,
							text: o.fbt._("Success! You added a post to the collection: {title}", [o.fbt._param("title", i)], {
								hk: "3KNJWi"
							}),
							buttonText: o.fbt._("VIEW", null, {
								hk: "1SSkgL"
							}),
							buttonAction: Object(_.a)(s.permalink)
						}))
					} else n(Object(l.f)({
						kind: S.b.Error,
						text: o.fbt._("Something went wrong. Just don't panic.", null, {
							hk: "4Ck6Cm"
						})
					}))
				}, H = Object(i.a)(c.e), q = (e, t) => async (n, i, a) => {
					let {
						apiContext: c
					} = a;
					const d = i();
					if ((await g(c(), e)).ok) {
						const {
							url: i
						} = d.platform.currentPage, a = Object(w.q)(d, {
							collectionId: e
						}), c = a && a.title || "", u = a && a.subredditId, p = u ? Object(P.c)(d, u) : "/";
						n(H({
							collectionId: e,
							collection: a
						})), n(t ? Object(s.c)(Object(r.a)(i, ["collection"])) : Object(s.b)(p)), n(Object(l.f)({
							kind: S.b.SuccessMod,
							text: o.fbt._("Collection deleted successfully: {title}", [o.fbt._param("title", c)], {
								hk: "4tcOKB"
							})
						}))
					} else n(Object(l.f)({
						kind: S.b.Error,
						text: o.fbt._("Something went wrong. Just don't panic.", null, {
							hk: "4Ck6Cm"
						})
					}))
				}, z = Object(i.a)(c.r), G = Object(i.a)(c.n), V = Object(i.a)(c.s), Q = (e, t) => async (n, s, r) => {
					let {
						apiContext: i
					} = r;
					n(z());
					const a = await E(i(), e, t);
					let c = !1;
					if (a.ok) n(V({
						collectionId: e,
						newTitle: t
					})), n(Object(l.f)({
						kind: S.b.SuccessMod,
						text: o.fbt._("Collection title updated successfully", null, {
							hk: "2hKzKl"
						})
					})), c = !0;
					else {
						const e = a.error;
						n(G(e)), n(Object(l.f)({
							kind: S.b.Error,
							text: o.fbt._("Something went wrong. Just don't panic.", null, {
								hk: "4Ck6Cm"
							})
						}))
					}
					return c
				}, J = Object(i.a)(c.l), X = Object(i.a)(c.m), Z = Object(i.a)(c.k), Y = e => async (t, n) => {
					const o = n();
					if (Object(T.b)(o) || Object(T.c)(o)) return void t(Object(a.Z)(Object(j.b)(e.permalink), e.id));
					const r = o.platform.currentPage.locationState;
					t(!(!r || !r[d.b.IsOverlay]) ? Object(_.a)(e.permalink) : Object(s.b)(Object(j.b)(e.permalink)))
				}, $ = Object(i.a)(c.i), ee = Object(i.a)(c.j), te = Object(i.a)(c.h), ne = Object(i.a)(c.p), oe = Object(i.a)(c.o), se = Object(i.a)(c.q), re = e => async t => {
					const n = [],
						{
							collectionId: s,
							description: r,
							displayLayout: i,
							postIds: a,
							title: c
						} = e;
					a && n.push(t(((e, t) => async (n, s, r) => {
						let {
							apiContext: i
						} = r;
						n($());
						const a = await y(i(), e, t);
						let c = !1;
						return a.ok ? (n(ee({
							collectionId: e,
							postIds: t
						})), n(Object(l.f)({
							kind: S.b.SuccessMod,
							text: o.fbt._("Collection order updated successfully", null, {
								hk: "4ccHEL"
							})
						})), c = !0) : (n(te({
							error: a.error
						})), n(Object(l.f)({
							kind: S.b.Error,
							text: o.fbt._("Something went wrong. Just don't panic.", null, {
								hk: "4Ck6Cm"
							})
						}))), c
					})(s, a))), c && n.push(t(Q(s, c))), void 0 !== r && n.push(t(((e, t) => async (n, s, r) => {
						let {
							apiContext: i
						} = r;
						n(J());
						const a = await O(i(), e, t);
						let c = !1;
						if (a.ok) n(X({
							collectionId: e,
							newDescription: t
						})), n(Object(l.f)({
							kind: S.b.SuccessMod,
							text: o.fbt._("Collection description updated successfully", null, {
								hk: "1rIDCC"
							})
						})), c = !0;
						else {
							const e = a.error;
							n(Z(e)), n(Object(l.f)({
								kind: S.b.Error,
								text: o.fbt._("Something went wrong. Just don't panic.", null, {
									hk: "4Ck6Cm"
								})
							}))
						}
						return c
					})(s, r))), i && n.push(t(((e, t) => async (n, s, r) => {
						let {
							apiContext: i
						} = r;
						n(ne());
						const a = await k(i(), e, t);
						let c = !1;
						if (a.ok) n(se({
							collectionId: e,
							newLayout: t
						})), n(Object(l.f)({
							kind: S.b.SuccessMod,
							text: o.fbt._("Collection layout updated successfully", null, {
								hk: "1Rs19j"
							})
						})), c = !0;
						else {
							const e = a.error;
							n(oe(e)), n(Object(l.f)({
								kind: S.b.Error,
								text: o.fbt._("Something went wrong. Just don't panic.", null, {
									hk: "4Ck6Cm"
								})
							}))
						}
						return c
					})(s, i)));
					let d = !0;
					return await Promise.all(n).then(e => {
						e.forEach(e => {
							e || (d = !1)
						})
					}), d
				}
		},
		"./src/reddit/actions/postCreation/editorContent.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return m
			})), n.d(t, "a", (function() {
				return h
			})), n.d(t, "d", (function() {
				return f
			})), n.d(t, "c", (function() {
				return g
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/reddit/actions/toaster.ts"),
				i = n("./src/reddit/endpoints/post/convert.ts"),
				a = n("./src/reddit/helpers/localStorage/index.ts"),
				c = n("./src/reddit/helpers/trackers/postComposer.ts"),
				l = n("./src/reddit/models/PostCreationForm/index.ts"),
				d = n("./src/reddit/models/RichTextJson/index.ts"),
				u = n("./src/reddit/models/Toast/index.ts"),
				p = n("./src/reddit/actions/postCreation/constants.ts");
			const m = Object(s.a)(p.H),
				h = Object(s.a)(p.p),
				b = Object(s.a)(p.R),
				f = (e, t, n) => async (s, a, f) => {
					let {
						apiContext: v
					} = f;
					c.m(a(), t);
					const x = t === l.i.MARKDOWN,
						C = t === l.i.RICH_TEXT,
						E = p.k;
					if (x && Object(d.I)(n)) return s(b({
						editorKey: e,
						editorMode: l.i.MARKDOWN,
						content: ""
					})), void s(g(t));
					if (C && !n) return s(b({
						editorKey: e,
						editorMode: l.i.RICH_TEXT,
						content: d.j
					})), void s(g(t));
					s(m(E));
					const y = await Object(i.a)(v(), t, x ? JSON.stringify(n) : n);
					y.ok ? (s(h(E)), s(b({
						editorKey: e,
						editorMode: t,
						content: y.body.output
					})), s(g(t))) : (s(h(E)), s(Object(r.f)({
						duration: r.a,
						kind: u.b.Error,
						text: o.fbt._("Something went wrong", null, {
							hk: "3UtpxU"
						})
					})))
				}, g = e => async (t, n) => {
					const s = Object(a.l)();
					if (s >= 3) return;
					const i = n().user.prefs.useMarkdown ? l.i.MARKDOWN : l.i.RICH_TEXT;
					if (e === i) return;
					const c = e === l.i.MARKDOWN ? o.fbt._("You can set Markdown as the default editor mode in the settings", null, {
						hk: "yvN18"
					}) : o.fbt._("You can set Fancy Pants as the default editor mode in the settings", null, {
						hk: "4kQi5k"
					});
					t(Object(r.f)({
						buttonAction: async () => {
							window.open("/settings/feed")
						},
						buttonText: o.fbt._("Open Settings", null, {
							hk: "1CKz9o"
						}),
						kind: u.b.SuccessCommunity,
						text: c
					})), Object(a.vb)(s + 1)
				}
		},
		"./src/reddit/actions/postCreation/postGuidance.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return f
			})), n.d(t, "b", (function() {
				return g
			}));
			var o = n("./src/lib/constants/index.ts"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/reddit/components/RichTextEditor/RTEState/index.tsx"),
				i = n("./src/reddit/contexts/PageLayer/selectors.ts"),
				a = n("./src/lib/makeGqlRequest/index.ts"),
				c = n("./src/redditGQL/operations/PostGuidanceValidation.json"),
				l = (e, t) => Object(a.a)(e, {
					...c,
					variables: t
				}).then(e => {
					var t, n;
					if (e.ok) {
						const o = null === (n = null === (t = e.body) || void 0 === t ? void 0 : t.data) || void 0 === n ? void 0 : n.validatePostGuidanceRules;
						return {
							...e,
							body: {
								data: {
									...o || {}
								}
							}
						}
					}
					return e
				}),
				d = n("./src/reddit/endpoints/subreddit/about.ts"),
				u = n("./src/reddit/models/PostCreationForm/index.ts"),
				p = n("./src/reddit/selectors/postCreations.ts"),
				m = n("./src/reddit/selectors/subreddit.ts"),
				h = n("./src/reddit/actions/postCreation/constants.ts");
			const b = Object(s.a)(h.D),
				f = e => async (t, n, s) => {
					let {
						gqlContext: a
					} = s;
					const c = n(),
						h = Object(i.u)(c, {
							pageLayer: e
						});
					if (!h) return;
					let f = Object(m.I)(n(), h.name);
					if (!f) {
						const e = await Object(d.a)(a(), h.name, !1);
						if (e.ok) {
							f = e.body.data.subreddit.id
						}
						if (!f) return
					}
					const g = Object(p.q)(c, {
							field: o.Bb.TITLE
						}),
						v = Object(p.n)(c),
						x = Object(p.lb)(c),
						C = v === u.i.RICH_TEXT ? r.a.getRawText(x, " ") : Object(p.Y)(c),
						E = await l(a(), {
							input: {
								subredditId: f,
								postTitle: (null == g ? void 0 : g.title) || "",
								postBody: C
							}
						});
					if (E.ok) {
						const e = E.body;
						t(b(null == e ? void 0 : e.data))
					}
				}, g = (e, t, n) => async (o, s, r) => {
					let {
						gqlContext: i
					} = r;
					const a = await l(i(), {
						input: {
							subredditId: e,
							postTitle: t,
							postBody: n
						}
					});
					if (a.ok) {
						const e = a.body;
						o(b(null == e ? void 0 : e.data))
					}
				}
		},
		"./src/reddit/actions/snoovatar.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return h
			})), n.d(t, "a", (function() {
				return f
			})), n.d(t, "e", (function() {
				return v
			})), n.d(t, "c", (function() {
				return x
			})), n.d(t, "d", (function() {
				return C
			}));
			var o = n("./src/lib/initializeClient/installReducer.ts"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/lib/sentry/index.ts"),
				i = n("./src/config.ts"),
				a = n("./src/lib/constants/index.ts"),
				c = n("./src/lib/makeApiRequest/index.ts"),
				l = n("./src/lib/omitHeaders/index.ts"),
				d = n("./src/reddit/constants/headers.ts");
			var u = n("./src/reddit/reducers/features/avatar/index.ts"),
				p = n("./src/reddit/selectors/avatar.ts"),
				m = n("./src/reddit/actions/users.ts");
			Object(o.a)({
				features: {
					avatar: u.a
				}
			});
			const h = "SET_AVATAR_USER",
				b = Object(s.a)(h),
				f = "RANDOM_AVATAR_LOADED",
				g = Object(s.a)(f),
				v = (e, t, n) => async (o, s, r) => {
					let {
						apiContext: u
					} = r;
					var h, b, f, g;
					const v = Object(p.b)(s()),
						x = await (async (e, t, n, o, s) => Object(c.a)(Object(l.a)(e, [d.a]), {
							endpoint: `${i.a.snoovatarUrl}/api/snoovatar?skip_telemetry=true`,
							method: a.nb.POST,
							headers: {
								"Content-Type": "application/json ",
								"X-CSRF-Token": s || ""
							},
							data: {
								accessory_ids: t,
								styles: n,
								...o
							}
						}))(u(), e, t, n, v);
					if (!x.ok) throw new Error("User avatar failed to save");
					return o(Object(m.y)(x.body)), {
						accountIcon: null === (b = null === (h = x.body) || void 0 === h ? void 0 : h.avatar) || void 0 === b ? void 0 : b.headshot_image_url,
						fullBodySnoovatar: null === (g = null === (f = x.body) || void 0 === f ? void 0 : f.avatar) || void 0 === g ? void 0 : g.image_url
					}
				}, x = () => async (e, t, n) => {
					let {
						apiContext: o
					} = n;
					try {
						const t = await (async e => Object(c.a)(Object(l.a)(e, [d.a]), {
							endpoint: `${i.a.snoovatarUrl}/api/account`,
							method: a.nb.GET
						}))(o());
						t.ok && e(b(t.body))
					} catch (s) {
						r.c.captureException(s)
					}
				}, C = () => async (e, t, n) => {
					let {
						apiContext: o
					} = n;
					try {
						const t = await (async e => Object(c.a)(Object(l.a)(e, [d.a]), {
							endpoint: `${i.a.snoovatarUrl}/api/snoovatars/random:byId`,
							method: a.nb.GET
						}))(o());
						t.ok && e(g(t.body))
					} catch (s) {
						r.c.captureException(s)
					}
				}
		},
		"./src/reddit/actions/snoovatarModal.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return p
			})), n.d(t, "b", (function() {
				return m
			}));
			var o = n("./src/lib/pageTitle/index.ts"),
				s = n("./src/reddit/actions/login.ts"),
				r = n("./src/reddit/actions/modal.ts"),
				i = n("./src/reddit/actions/platform.ts"),
				a = n("./src/reddit/actions/users.ts"),
				c = n("./src/reddit/constants/modals.ts"),
				l = n("./src/reddit/helpers/trackers/snoovatar.ts"),
				d = n("./src/reddit/selectors/user.ts"),
				u = n("./src/telemetry/index.ts");
			const p = () => async (e, t) => {
				const n = t();
				Object(u.a)(Object(l.l)(n)), e(Object(a.s)({
					forceFetch: !0
				})), await e(Object(r.g)(c.a.SNOOVATAR_MODAL))
			};

			function m() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
				return async (t, n) => {
					const {
						clickSource: a,
						share: p,
						source: m,
						activeTab: h,
						activeMeSubpage: b,
						activeDetails: f,
						shopTabState: g
					} = e, v = n();
					a && Object(u.a)(Object(l.g)(a)(v)), Object(d.S)(v) ? (await t(Object(r.h)(c.a.SNOOVATAR_MODAL, {
						share: p,
						source: m,
						activeTab: h,
						activeMeSubpage: b,
						activeDetails: f,
						shopTabState: g
					})), t(Object(i.n)({
						title: Object(o.n)()
					}))) : await t(Object(s.openLoginModal)())
				}
			}
		},
		"./src/reddit/actions/subreddit/muting.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return j
			})), n.d(t, "d", (function() {
				return T
			})), n.d(t, "e", (function() {
				return w
			})), n.d(t, "g", (function() {
				return I
			})), n.d(t, "a", (function() {
				return P
			})), n.d(t, "f", (function() {
				return M
			})), n.d(t, "b", (function() {
				return R
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/reddit/actions/toaster.ts"),
				i = n("./src/lib/makeGqlRequest/index.ts"),
				a = n("./src/redditGQL/operations/DeleteSubredditMuteSettings.json"),
				c = n("./src/redditGQL/operations/MutedSubreddits.json"),
				l = n("./src/redditGQL/operations/UpdateSubredditMuteAndNotificationLevelSettings.json"),
				d = n("./src/redditGQL/operations/UpdateSubredditMuteSettings.json");
			const u = (e, t) => Object(i.a)(e, {
					...d,
					variables: {
						input: {
							subredditId: t
						}
					}
				}),
				p = (e, t) => Object(i.a)(e, {
					...a,
					variables: {
						input: {
							subredditId: t
						}
					}
				});
			var m = n("./src/reddit/models/Toast/index.ts"),
				h = n("./src/reddit/actions/subreddit/constants.ts"),
				b = n("./src/reddit/actions/subreddit/notifications.ts"),
				f = n("./src/reddit/selectors/subreddit.ts");
			const g = e => Object(r.f)({
					id: e,
					kind: m.b.Error,
					duration: r.a,
					text: o.fbt._("An error has occured. Please try again later", null, {
						hk: "2FpsLy"
					})
				}),
				v = (e, t) => Object(r.f)({
					kind: m.b.SuccessCommunityGreen,
					text: o.fbt._("Muted r/{subreddit name}", [o.fbt._param("subreddit name", e)], {
						hk: "Mg9mO"
					}),
					...t ? {
						buttonText: o.fbt._("Undo", null, {
							hk: "2siioQ"
						}),
						buttonAction: t
					} : {}
				}),
				x = (e, t) => Object(r.f)({
					kind: m.b.SuccessCommunityGreen,
					text: o.fbt._("Unmuted r/{subreddit name}", [o.fbt._param("subreddit name", e)], {
						hk: "Fhnht"
					}),
					...t ? {
						buttonText: o.fbt._("Undo", null, {
							hk: "2siioQ"
						}),
						buttonAction: t
					} : {}
				});
			var C = n("./src/reddit/endpoints/subreddit/about.ts");
			const E = Object(s.a)(h.i),
				y = Object(s.a)(h.h),
				O = Object(s.a)(h.G),
				k = (Object(s.a)(h.j), Object(s.a)(h.F), Object(s.a)(h.g)),
				_ = Object(s.a)(h.f),
				j = e => {
					let {
						subredditId: t,
						subredditName: n,
						successCallback: o
					} = e;
					return async (e, s, r) => {
						let {
							gqlContext: i
						} = r;
						var a, c;
						const l = await u(i(), t);
						if (l.ok && l.body && (null === (c = null === (a = l.body) || void 0 === a ? void 0 : a.data.updateSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) o && o(), e(v(n, S({
							subredditId: t,
							subredditName: n
						})));
						else {
							e(g(`error-muting-${t}`))
						}
					}
				},
				S = e => {
					let {
						subredditId: t,
						subredditName: n,
						successCallback: o
					} = e;
					return async (e, s, r) => {
						let {
							gqlContext: i
						} = r;
						var a, c;
						const l = await p(i(), t);
						if (l.ok && l.body && (null === (c = null === (a = l.body) || void 0 === a ? void 0 : a.data.deleteSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) o && o(), e(x(n, j({
							subredditId: t,
							subredditName: n
						})));
						else {
							e(g(`error-muting-${t}`))
						}
					}
				},
				T = e => {
					let {
						subredditId: t,
						subredditName: n,
						successCallback: o
					} = e;
					return async (e, s, r) => {
						let {
							gqlContext: i
						} = r;
						var a, c;
						const l = await u(i(), t);
						if (l.ok && l.body && (null === (c = null === (a = l.body) || void 0 === a ? void 0 : a.data.updateSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) o && o(), e(Object(b.c)({
							subredditAboutInfo: {
								[t]: {
									isMuted: !0
								}
							}
						})), e(v(n, w({
							subredditId: t,
							subredditName: n
						})));
						else {
							e(g(`error-muting-${t}`))
						}
					}
				},
				w = e => {
					let {
						subredditId: t,
						subredditName: n,
						successCallback: o
					} = e;
					return async (e, s, r) => {
						let {
							gqlContext: i
						} = r;
						var a, c;
						const l = await p(i(), t);
						if (l.ok && l.body && (null === (c = null === (a = l.body) || void 0 === a ? void 0 : a.data.deleteSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) o && o(), e(Object(b.c)({
							subredditAboutInfo: {
								[t]: {
									isMuted: !1
								}
							}
						})), e(x(n, T({
							subredditId: t,
							subredditName: n
						})));
						else {
							e(g(`error-muting-${t}`))
						}
					}
				},
				I = e => {
					let {
						subredditId: t,
						notificationLevel: n
					} = e;
					return async (e, s, a) => {
						let {
							gqlContext: c
						} = a;
						var d, u;
						const p = Object(b.a)(n),
							h = await ((e, t, n) => Object(i.a)(e, {
								...l,
								variables: {
									input: {
										...n,
										subredditId: t
									}
								}
							}))(c(), t, p);
						h.ok && h.body && (null === (u = null === (d = h.body) || void 0 === d ? void 0 : d.data.updateSubredditMuteAndNotificationLevelSettings) || void 0 === u ? void 0 : u.ok) ? (e(O({
							subredditId: t,
							notificationLevel: n
						})), e(Object(r.f)({
							kind: m.b.SuccessCommunityGreen,
							text: Object(b.b)(n)
						}))) : e(Object(r.f)({
							kind: m.b.Error,
							text: o.fbt._("Failed to change the frequency of notifications from this community, please try again.", null, {
								hk: "4avFFV"
							})
						}))
					}
				},
				P = () => async (e, t, n) => {
					let {
						gqlContext: s
					} = n;
					const a = await (e => Object(i.a)(e, c))(s());
					if (a.ok && a.body && a.body.data) {
						const {
							data: t
						} = a.body, n = (t && t.identity.mutedSubreddits).edges.map(e => e.node);
						e(E({
							nodes: n
						}))
					} else e(y()), e(Object(r.f)({
						duration: r.a,
						kind: m.b.Error,
						text: o.fbt._("Failed to get muted subreddits, please try again.", null, {
							hk: "2dCj3Q"
						})
					}))
				}, M = e => {
					let {
						subredditId: t,
						subredditName: n
					} = e;
					return async (e, o, s) => {
						let {
							gqlContext: r
						} = s;
						var i, a;
						const c = await p(r(), t);
						if (c.ok && c.body && (null === (a = null === (i = c.body) || void 0 === i ? void 0 : i.data.deleteSubredditMuteSettings) || void 0 === a ? void 0 : a.ok)) e(k(t)), e(x(n));
						else {
							e(g(`error-unmuting-${t}`))
						}
					}
				}, R = e => {
					let {
						subredditName: t
					} = e;
					return async (e, n, s) => {
						let {
							gqlContext: i
						} = s;
						var a, c;
						const l = n(),
							d = Object(f.t)(l).find(e => e.name.toLowerCase() === t.toLowerCase());
						if (d) {
							const t = d.name,
								n = `error-muting-duplicate-${t}`;
							return e(Object(r.f)({
								id: n,
								kind: m.b.Error,
								duration: r.a,
								text: o.fbt._("Sorry, r/{subreddit name} is already muted.", [o.fbt._param("subreddit name", t)], {
									hk: "4n64wl"
								})
							}))
						}
						const p = await Object(C.a)(i(), t, !0),
							{
								data: h
							} = p.body,
							b = h && h.subreddit;
						if (!p.ok || null === b) {
							return e(((e, t) => Object(r.f)({
								id: e,
								kind: m.b.Error,
								duration: r.a,
								text: o.fbt._("Sorry, r/{subreddit name} isn't a community.", [o.fbt._param("subreddit name", t)], {
									hk: "3UtglL"
								})
							}))(`error-muting-${t}`, t))
						}
						const x = b.id,
							E = await u(i(), x);
						if (E.ok && E.body && (null === (c = null === (a = E.body) || void 0 === a ? void 0 : a.data.updateSubredditMuteSettings) || void 0 === c ? void 0 : c.ok)) e(_([b])), e(v(b.name));
						else {
							e(g(`error-muting-${x}`))
						}
					}
				}
		},
		"./src/reddit/actions/subreddit/notifications.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return p
			})), n.d(t, "a", (function() {
				return b
			})), n.d(t, "b", (function() {
				return f
			})), n.d(t, "d", (function() {
				return g
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./src/lib/makeActionCreator/index.ts"),
				r = n("./src/reddit/actions/notificationSettingsLayout/index.ts"),
				i = n("./src/reddit/actions/notificationsInbox/index.ts"),
				a = n("./src/reddit/actions/subreddit/constants.ts"),
				c = n("./src/reddit/actions/toaster.ts"),
				l = n("./src/reddit/endpoints/subreddit/notificationSettings.ts"),
				d = n("./src/reddit/models/Subreddit/index.ts"),
				u = n("./src/reddit/models/Toast/index.ts");
			const p = Object(s.a)(a.z),
				m = Object(s.a)(a.y),
				h = Object(s.a)(a.x),
				b = e => {
					switch (e) {
						case d.c.FREQUENT:
							return {
								isSubredditUpdatesInterestingPostEnabled: !0, isUpdateFromSubredditEnabled: !0
							};
						case d.c.LOW:
							return {
								isSubredditUpdatesInterestingPostEnabled: !1, isUpdateFromSubredditEnabled: !0
							};
						case d.c.OFF:
						default:
							return {
								isSubredditUpdatesInterestingPostEnabled: !1, isUpdateFromSubredditEnabled: !1
							}
					}
				},
				f = e => {
					switch (e) {
						case d.c.OFF:
							return o.fbt._("Unfollowed. You won’t get updates on new activity anymore.", null, {
								hk: "3e1CJR"
							});
						case d.c.FREQUENT:
							return o.fbt._("Followed! Now you’ll get updates on new activity.", null, {
								hk: "3JzOOa"
							});
						case d.c.LOW:
							return o.fbt._("Success! You will see fewer notifications from this community in the future.", null, {
								hk: "4x3TS8"
							});
						default:
							return null
					}
				};
			const g = e => {
				let {
					subredditId: t,
					notificationLevel: n,
					successCallback: s,
					undoCallback: a
				} = e;
				return async (e, d, g) => {
					let {
						gqlContext: v
					} = g;
					var x, C, E;
					e(m());
					const y = b(n),
						O = await Object(l.b)(v(), t, y);
					if ((null === (C = null === (x = O.error) || void 0 === x ? void 0 : x.fields) || void 0 === C ? void 0 : C.length) || function(e) {
							return Boolean(e && e.data && e.data.updateSubredditNotificationSettings)
						}(O.body) && (null === (E = O.body.data.updateSubredditNotificationSettings.errors) || void 0 === E ? void 0 : E.length)) return e(h()), e(Object(c.f)({
						kind: u.b.Error,
						text: o.fbt._("Failed to change the frequency of notifications from this community, please try again.", null, {
							hk: "4avFFV"
						})
					}));
					O.ok && (e(Object(r.c)({
						subredditId: t,
						notificationLevel: n
					})), e(p({
						subredditAboutInfo: {
							[t]: {
								notificationLevel: n
							}
						}
					})), s && s(), e(a ? Object(c.f)(Object(c.e)(f(n), u.b.Undo, o.fbt._("Undo", null, {
						hk: "46OwLP"
					}), Object(i.i)(t, a))) : Object(c.f)(Object(c.e)(f(n), u.b.SuccessCommunityGreen))))
				}
			}
		},
		"./src/reddit/actions/subredditAutocomplete/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return b
			}));
			var o = n("./src/lib/makeActionCreator/index.ts"),
				s = n("./src/lib/makeGqlRequest/index.ts"),
				r = n("./src/redditGQL/operations/SubredditTypeaheadSearch.json"),
				i = (e, t) => Object(s.a)(e, {
					...r,
					variables: t
				}),
				a = n("./src/reddit/helpers/graphql/normalizeAllowedPostTypesFromGql/index.ts"),
				c = e => {
					let {
						allowedPostTypes: t,
						id: n,
						isCrosspostDestination: o,
						isNsfw: s,
						name: r,
						styles: i,
						subscribersCount: c
					} = e;
					return {
						allowedPostTypes: Object(a.a)(t),
						communityIcon: i && i.icon || "",
						icon: i && i.legacyIcon && i.legacyIcon.url || "",
						id: n,
						isCrosspostDestination: o,
						isNsfw: s,
						name: r,
						primaryColor: i && i.primaryColor || "",
						subscribers: c
					}
				},
				l = n("./src/reddit/helpers/name/index.ts"),
				d = n("./src/reddit/selectors/subredditAutocomplete.ts"),
				u = n("./src/reddit/actions/subredditAutocomplete/constants.ts");
			const p = Object(o.a)(u.c),
				m = Object(o.a)(u.b),
				h = Object(o.a)(u.a),
				b = function(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					return async (n, o, s) => {
						let {
							gqlContext: r
						} = s;
						const a = Object(l.i)(e);
						if (!a) return;
						const u = o(),
							b = u.subredditAutocomplete;
						if (b.api.pending[a] || b.models[a]) return;
						if (Object(d.b)(u, {
								substring: a
							})) return;
						n(p({
							key: a
						}));
						const f = await i(r(), {
							query: a,
							includeNsfw: t
						});
						if (f.ok) {
							const e = f.body.data.subredditTypeahead.subreddits.edges.map(e => c(e.node));
							n(m({
								key: a,
								subreddits: e
							}))
						} else n(h({
							key: a,
							error: f.error
						}))
					}
				}
		},
		"./src/reddit/components/AvatarPost/index.m.less": function(e, t, n) {
			e.exports = {
				avatarPostContainer: "_2nck8non0VYnkIkyUpuvpw",
				avatarPostImage: "_2yQLdTnHA0y3hZ3I588oUM"
			}
		},
		"./src/reddit/components/BackToSubreddit/index.m.less": function(e, t, n) {
			e.exports = {
				backToSubreddit: "_3aAvvioBKBNnlJqKytAVAd",
				innerContainer: "_3aVffPeM6Nkqs7D0RJ5FBs",
				back: "_17MxNCYEMmDof9NnT6ffxl",
				title: "_2VB8YvVdvxx0h0VGYVrpBX",
				subredditIcon: "_2Aw3HO2EUDcP7F481ZxyYl",
				content: "uhMLc-O1VODjzminrp8py"
			}
		},
		"./src/reddit/components/CCM/AddModNoteCTA/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./src/reddit/hooks/useTracking.ts"),
				c = n("./src/reddit/helpers/trackers/modTools.ts"),
				l = n("./src/lib/constants/index.ts"),
				d = n("./src/reddit/contexts/PageLayer/index.tsx"),
				u = n("./src/reddit/actions/tooltip.ts"),
				p = n("./src/reddit/components/Hovercards/AuthorHovercard/ModIdCard/async.tsx"),
				m = n("./src/reddit/components/Hovercards/helpers.ts"),
				h = n("./src/reddit/components/PostTopMeta/index.tsx"),
				b = n("./src/reddit/hooks/useIsOverlay.ts"),
				f = n("./src/reddit/models/Post/index.ts"),
				g = n("./src/redditGQL/types.ts");
			const v = Object(d.v)();
			t.a = v(e => {
				let {
					pageLayer: t,
					postOrComment: n,
					className: d
				} = e;
				var v;
				const x = Object(b.a)(),
					C = Object(i.d)(),
					E = Object(a.a)(),
					y = (null === (v = null == t ? void 0 : t.urlParams) || void 0 === v ? void 0 : v.pageName) === l.vb.Modqueue,
					O = Object(s.useCallback)(() => {
						const e = Object(m.b)({
							itemId: n.id,
							tooltipIdPrefix: p.a,
							tooltipType: x ? h.f.Lightbox : void 0
						});
						C(Object(u.h)({
							tooltipId: e,
							args: {
								isModNotesView: !0,
								modNotesFilter: g.z.Note
							}
						})), E(Object(c.a)(n.id, n.authorId))
					}, [n, C, x, E]);
				return !y || Object(f.p)(n.author) ? null : r.a.createElement("button", {
					className: d,
					onClick: O
				}, o.fbt._("Add a note", null, {
					hk: "1dmmma"
				}))
			})
		},
		"./src/reddit/components/CollapseIntoOverflow/index.m.less": function(e, t, n) {
			e.exports = {
				hidden: "_2x_bJPl7Q970NCRxOS36QB",
				innerWrapper: "_3oLr47tuKGv2mNpavCZ2X0",
				outerWrapper: "_1wi_3uF8fUynqe5reIop-G",
				overflowMenu: "_2aOuodBenLHlceR3j0AlIM",
				overflowMenuWrapper: "_3nQ7w1VIzZvzFawddOYgBC",
				row: "_2IirhjIkZ7hgWGtpr087xZ",
				postWrap: "WaTxGJXojt1RbZOH3q6eC"
			}
		},
		"./src/reddit/components/CollapseIntoOverflow/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return h
			}));
			var o = n("./src/lib/fastdom/index.ts"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/components/OverflowMenu/index.tsx"),
				c = n("./src/reddit/helpers/richTextEditor/index.ts"),
				l = n("./src/reddit/components/CollapseIntoOverflow/index.m.less"),
				d = n.n(l);
			const u = 33,
				p = e => e.preventDefault(),
				m = (e, t) => `${e===c.a.Post?"Post":"Comment"}--Overflow-Dropdown__${t}`;
			class h extends r.a.Component {
				constructor(e) {
					super(e), this.breakpoints = [], this.updateCurrentBreakpoint = () => {
						o.a.read(() => {
							if (!this.container) return;
							const {
								indexOfCurrentBreakpoint: e,
								totalNumCollapsibleItems: t
							} = this.state, n = this.container.clientWidth;
							let s = this.breakpoints.findIndex((e, o) => {
								const s = o + 1 < t - 1,
									r = this.breakpoints[o + 1] + (s ? u : 0);
								return n < r
							});
							s < 0 && (s = t - 1), s !== e && o.a.write(() => {
								this.setState({
									indexOfCurrentBreakpoint: s,
									shouldShowOverflow: s < t - 1
								})
							})
						})
					};
					const t = this.getTotalNumCollapsibleItems();
					this.state = this.calculateOverflowState(t)
				}
				calculateOverflowState(e) {
					return {
						indexOfCurrentBreakpoint: e - 1,
						shouldShowOverflow: !1,
						totalNumCollapsibleItems: e
					}
				}
				componentDidMount() {
					window.addEventListener("resize", this.updateCurrentBreakpoint)
				}
				componentWillUnmount() {
					window.removeEventListener("resize", this.updateCurrentBreakpoint)
				}
				componentDidUpdate() {
					const e = this.getTotalNumCollapsibleItems();
					e !== this.state.totalNumCollapsibleItems && o.a.write(() => {
						this.breakpoints = [], this.setState(this.calculateOverflowState(e))
					})
				}
				getTotalNumCollapsibleItems() {
					return Array.isArray(this.props.children) ? this.props.children.reduce((e, t) => (Array.isArray(t) ? e += t.length : t && e++, e), 0) : 1
				}
				registerBreakpoint(e, t) {
					this.breakpoints[t] = 0, o.a.read(() => {
						if (e && e.clientWidth) {
							const n = e.clientWidth;
							this.breakpoints[t] = 0 === t ? n : this.breakpoints[t - 1] + n, this.breakpoints[this.state.totalNumCollapsibleItems - 1] && this.updateCurrentBreakpoint()
						}
					})
				}
				render() {
					const {
						children: e,
						className: t,
						oveflowMenuDropdownId: n,
						onOverflowMenuClick: o,
						renderOverflowMenuTooltip: s,
						editorType: l
					} = this.props, {
						indexOfCurrentBreakpoint: u,
						shouldShowOverflow: h
					} = this.state, b = r.a.Children.toArray(e).filter(Boolean);
					return r.a.createElement("div", {
						className: Object(i.a)(d.a.outerWrapper, t),
						ref: e => this.container = e
					}, r.a.createElement("div", {
						className: d.a.innerWrapper
					}, b.map((e, t) => r.a.createElement("span", {
						className: t > u ? d.a.hidden : void 0,
						key: t,
						ref: e => this.registerBreakpoint(e, t)
					}, e)), h && r.a.createElement("div", {
						className: d.a.overflowMenuWrapper,
						key: "overflowMenuWrapper"
					}, s && s(), r.a.createElement(a.b, {
						className: d.a.overflowMenu,
						dropdownId: m(l, n),
						isFixed: !1,
						handleMouseDown: p,
						onClick: o
					}, r.a.createElement("div", {
						className: Object(i.a)(d.a.row, {
							[d.a.postWrap]: l === c.a.Post
						})
					}, b.map((e, t) => r.a.createElement("span", {
						className: t <= u ? d.a.hidden : void 0,
						key: t
					}, e)))))))
				}
			}
		},
		"./src/reddit/components/CommentCreation/ExpandingFormDiv.m.less": function(e, t, n) {
			e.exports = {
				breakout: "_1VBLErIxAjOke05q8yLOyf"
			}
		},
		"./src/reddit/components/CommentCreation/ExpandingFormDiv.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/components/CommentCreation/ExpandingFormDiv.m.less"),
				a = n.n(i);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const l = (e, t) => 21 * e + 33 + (t ? 10 : 0);
			t.a = e => {
				let {
					breakOut: t,
					depth: n,
					isEditing: o,
					...i
				} = e;
				return s.a.createElement("div", c({
					className: Object(r.a)({
						[a.a.breakout]: t
					}),
					style: {
						left: l(n, o)
					}
				}, i))
			}
		},
		"./src/reddit/components/CommentCreation/FormFooter/index.m.less": function(e, t, n) {
			e.exports = {
				BaseFooterButton: "_2vw1scWo_wiHUpczRL3dho",
				baseFooterButton: "_2vw1scWo_wiHUpczRL3dho",
				SubmitButton: "_22S4OsoDdOqiM-hPTeOURa",
				submitButton: "_22S4OsoDdOqiM-hPTeOURa",
				LoadingIcon: "_2qsMO_C_HwxgUgktaOeqZ2",
				loadingIcon: "_2qsMO_C_HwxgUgktaOeqZ2",
				CancelButton: "cZz52cPDbNgzrR1Oo1k27",
				cancelButton: "cZz52cPDbNgzrR1Oo1k27",
				ButtonWrapper: "_3SNMf5ZJL_5F1qxcZkD0Cp",
				buttonWrapper: "_3SNMf5ZJL_5F1qxcZkD0Cp",
				FormFooterWrapper: "_17TqawK-44tH0psnHPIhzS",
				formFooterWrapper: "_17TqawK-44tH0psnHPIhzS",
				pending: "_5p2VqxvUAZTtPIXr7XU5p"
			}
		},
		"./src/reddit/components/CommentCreation/FormFooter/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/controls/Button/index.tsx"),
				c = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				l = n("./src/reddit/components/CommentCreation/FormFooter/index.m.less"),
				d = n.n(l);
			const {
				fbt: u
			} = n("./node_modules/fbt/lib/FbtPublic.js"), p = i.a.wrapped(c.a, "LoadingIcon", d.a), m = i.a.wrapped(a.t, "CancelButton", d.a), h = e => e.preventDefault();
			t.a = e => {
				let {
					pending: t,
					cancelButtonEnabled: n = !0,
					children: o,
					className: i,
					submitButtonText: c,
					canSubmit: l,
					onSubmit: b,
					onCancel: f
				} = e;
				return s.a.createElement("div", {
					className: Object(r.a)(d.a.FormFooterWrapper, i, {
						[d.a.pending]: t
					})
				}, s.a.createElement("div", {
					className: d.a.ButtonWrapper
				}, s.a.createElement(a.t, {
					className: d.a.SubmitButton,
					size: a.d.XS,
					type: "submit",
					disabled: !l,
					onClick: e => {
						b && b(e)
					},
					onMouseDown: h
				}, t ? s.a.createElement(p, {
					sizePx: 10
				}) : c), n && s.a.createElement(m, {
					priority: a.c.Secondary,
					size: a.d.XS,
					type: "reset",
					disabled: t,
					onClick: f,
					onMouseDown: h
				}, u._("Cancel", null, {
					hk: "2TSLl5"
				}))), o)
			}
		},
		"./src/reddit/components/CommentCreation/MarkdownCommentForm/MarkdownModeButton.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "_3oZ5XBWSc3x7cXsvdt3fJ",
				wrapper: "_3oZ5XBWSc3x7cXsvdt3fJ",
				MarkdownModeIcon: "_1EifMLRAKpii4eqciAhY4q",
				markdownModeIcon: "_1EifMLRAKpii4eqciAhY4q",
				Button: "_1Q2Vq3gesOWZA73NbspEiQ",
				button: "_1Q2Vq3gesOWZA73NbspEiQ"
			}
		},
		"./src/reddit/components/CommentCreation/MarkdownCommentForm/index.m.less": function(e, t, n) {
			e.exports = {
				LoadingIcon: "_2izw1tRcQRvnfuR1E05Cy4",
				loadingIcon: "_2izw1tRcQRvnfuR1E05Cy4",
				CommentHeader: "PN-j_b1WdWATQha3fOgkV",
				commentHeader: "PN-j_b1WdWATQha3fOgkV",
				HelpButton: "MQruKnjMvMoDlmee_nF40",
				helpButton: "MQruKnjMvMoDlmee_nF40",
				SwitchModeButton: "_2UH-_HmB6X-2cCsOZVDtC5",
				switchModeButton: "_2UH-_HmB6X-2cCsOZVDtC5",
				FormHeaderText: "_1EQf9w-o91arfThHA8fn-N",
				formHeaderText: "_1EQf9w-o91arfThHA8fn-N",
				HelpIcon: "_3TI2tdRj3loY834ns393zu",
				helpIcon: "_3TI2tdRj3loY834ns393zu",
				Wrapper: "B0932G-wzdOKwoaSaKsKU",
				wrapper: "B0932G-wzdOKwoaSaKsKU",
				isTopLevelComment: "_3-O087Fe8Gpv51vkui03iG",
				mRedesign: "dDb_knwHdpaUGniyi2rvM",
				FormWrapper: "_2LoNYeXgOQfq1adQ3jWSbi",
				formWrapper: "_2LoNYeXgOQfq1adQ3jWSbi",
				ResizableAutosizeTextarea: "AISc5olsWsxMr-ZvG8ywU",
				resizableAutosizeTextarea: "AISc5olsWsxMr-ZvG8ywU",
				mExpanded: "_2FiN5dLqiHVqs1l1NeoU-W",
				FormFooter: "OQubMtSYxy2qH2Q1upQvp",
				formFooter: "OQubMtSYxy2qH2Q1upQvp",
				userIcon: "_1LJWM5yPEtZv26nvbB_mvr",
				CurrentUserIcon: "_6R8kWvljXn9F_7IAh1RG4",
				currentUserIcon: "_6R8kWvljXn9F_7IAh1RG4",
				pending: "_1N53zdZlGyvjHMUoXkJa42",
				focused: "_2sPOgUISlhUYTMcHhUPCTP"
			}
		},
		"./src/reddit/components/CommentCreation/MarkdownCommentForm/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return be
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/lodash/debounce.js"),
				r = n.n(s),
				i = n("./node_modules/lodash/noop.js"),
				a = n.n(i),
				c = n("./node_modules/react/index.js"),
				l = n.n(c),
				d = n("./node_modules/react-dom/index.js"),
				u = n("./node_modules/react-redux/es/index.js"),
				p = n("./node_modules/reselect/es/index.js"),
				m = n("./src/reddit/actions/comment/authoring.ts"),
				h = n("./src/reddit/components/AuthorLink/index.tsx"),
				b = n("./src/reddit/components/CommentCreation/NavigationModule/index.ts"),
				f = n("./src/reddit/components/CommentCreation/ToxicityWarningModal.tsx"),
				g = n("./src/reddit/components/ConfirmUserActionModal/index.tsx"),
				v = n("./src/reddit/components/MarkdownHelp/index.tsx"),
				x = n("./src/reddit/components/UserIcon/CurrentUserIcon.tsx"),
				C = n("./src/reddit/controls/ErrorText/index.tsx"),
				E = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				y = n("./src/reddit/icons/svgs/Help/index.tsx"),
				O = n("./src/reddit/components/CommentCreation/ExpandingFormDiv.tsx"),
				k = n("./src/reddit/components/CommentCreation/FormFooter/index.tsx"),
				_ = n("./src/lib/fastdom/index.ts"),
				j = n("./src/reddit/components/CommentCreation/ToolbarSelector.m.less"),
				S = n.n(j),
				T = n("./src/lib/lessComponent.tsx");
			const w = 310,
				I = T.a.div("Container", S.a);
			class P extends l.a.Component {
				constructor() {
					super(...arguments), this.state = {
						toolbarType: null
					}, this.setContainerRef = e => this.container = e, this.selectToolbar = () => {
						const e = this.container && this.container.parentElement;
						if (!e) return;
						const {
							width: t
						} = e.getBoundingClientRect(), n = t < w ? "compact" : "full";
						n !== this.state.toolbarType && _.a.write(() => {
							this.setState({
								toolbarType: n
							})
						})
					}
				}
				componentDidMount() {
					_.a.read(this.selectToolbar), window.addEventListener("resize", this.selectToolbar)
				}
				componentWillUnmount() {
					window.removeEventListener("resize", this.selectToolbar)
				}
				render() {
					return l.a.createElement(I, {
						innerRef: this.setContainerRef
					}, this.state.toolbarType ? this.props.children(this.state.toolbarType) : null)
				}
			}
			var M = n("./src/reddit/icons/svgs/MarkdownMode/index.tsx"),
				R = n("./src/reddit/components/RichTextEditor/HoverTooltip/index.tsx"),
				N = n("./src/reddit/components/CommentCreation/MarkdownCommentForm/MarkdownModeButton.m.less"),
				D = n.n(N),
				L = n("./src/reddit/controls/Button/index.tsx");
			const A = T.a.wrapped(E.a, "LoadingIcon", D.a),
				B = e => {
					let {
						isFilled: t,
						...n
					} = e;
					return l.a.createElement(A, n)
				},
				F = T.a.div("Wrapper", D.a),
				U = T.a.wrapped(M.a, "MarkdownModeIcon", D.a),
				K = e => {
					let {
						isFilled: t,
						...n
					} = e;
					return l.a.createElement(U, n)
				};
			var W = l.a.memo((function(e) {
					const t = o.fbt._("Switch to fancy pants editor", null, {
						hk: "1XOb4H"
					});
					return l.a.createElement(F, null, l.a.createElement(L.t, {
						priority: L.c.Plain,
						size: L.d.XS,
						"aria-label": t,
						innerRef: e.buttonRef,
						className: e.className,
						onClick: e.onClick,
						Icon: e.isConverting ? B : K
					}, l.a.createElement(R.a, {
						text: t
					})))
				})),
				H = n("./src/lib/classNames/index.ts"),
				q = n("./src/reddit/constants/keycodes.ts"),
				z = n("./src/reddit/components/CommentCreation/getCancelModalId.ts"),
				G = n("./src/realtime/GQLSubscription/async.tsx"),
				V = n("./src/reddit/components/UsersCountIndicator/constants.ts"),
				Q = n("./src/reddit/constants/componentSizes.ts"),
				J = n("./src/reddit/constants/componentTestIds.ts"),
				X = n("./src/reddit/selectors/activeModalId.ts"),
				Z = n("./src/reddit/selectors/comments.ts"),
				Y = n("./src/reddit/selectors/editorContent.ts"),
				$ = n("./src/reddit/selectors/experiments/typingIndicators.ts"),
				ee = n("./src/reddit/actions/modal.ts"),
				te = n("./src/reddit/components/ResizableAutosizeTextarea/index.tsx"),
				ne = n("./src/reddit/models/PostCreationForm/index.ts"),
				oe = n("./src/reddit/models/PostDraft/index.ts"),
				se = n("./src/reddit/models/User/index.ts"),
				re = n("./src/reddit/components/CommentCreation/MarkdownCommentForm/index.m.less"),
				ie = n.n(re);
			const ae = T.a.button("SwitchModeButton", ie.a),
				ce = T.a.wrapped(E.a, "LoadingIcon", ie.a),
				le = T.a.div("CommentHeader", ie.a),
				de = T.a.span("FormHeaderText", ie.a),
				ue = T.a.button("HelpButton", ie.a),
				pe = T.a.wrapped(y.a, "HelpIcon", ie.a),
				me = T.a.wrapped(te.a, "ResizableAutosizeTextarea", ie.a),
				he = T.a.wrapped(x.a, "CurrentUserIcon", ie.a),
				be = e => l.a.createElement(ue, {
					className: e.className,
					onClick: e.onClick
				}, l.a.createElement(pe, null)),
				fe = 8,
				ge = 16,
				ve = Object(u.b)(() => Object(p.c)({
					activeModalId: X.a,
					userName: e => e.user.account ? Object(se.e)(e.user.account) : "",
					pending: (e, t) => e.features.comments.submit.pending[t.draftKey],
					draft: Z.i,
					isConverting: (e, t) => Object(Y.a)(e, t.draftKey),
					isTypingIndicatorsWriteTestEnabled: (e, t) => !!t.isTopLevelComment && Object($.d)(e)
				}), (e, t) => ({
					cancelModalToggled: () => e(Object(ee.i)(Object(z.a)(t.draftKey))),
					helpModalToggled: () => e(Object(ee.i)(v.b))
				}));
			class xe extends l.a.Component {
				constructor(e) {
					super(e), this.textAreaRef = null, this.realtimeGQLVariables = void 0, this.cancelForm = () => {
						this.props.onCancel(), this.onBlur()
					}, this.setUserStoppedTyping = r()(() => this.setState({
						isUserTyping: !1
					}), V.c), this.detectBreakout = () => {
						if (!this.wrapperEl || !this.wrapperEl.parentElement || this.props.isTopLevelComment) return;
						const e = this.wrapperEl.parentElement.getBoundingClientRect().width < Q.c,
							t = this.getWrapperHeight();
						e === this.state.breakOut && t === this.state.wrapperHeight || _.a.write(() => {
							this.setState({
								breakOut: e,
								wrapperHeight: t
							})
						})
					}, this.focus = () => {
						this.textAreaRef && this.textAreaRef.focus()
					}, this.onChange = e => {
						const {
							value: t
						} = e.currentTarget;
						this.props.onChange && this.props.onChange({
							text: t,
							editorState: null
						}), this.setState(() => ({
							text: t,
							hasChanged: !0,
							showError: !1
						}), () => {
							_.a.read(this.detectBreakout)
						}), this.props.isTypingIndicatorsWriteTestEnabled && (this.state.isUserTyping || this.setState({
							isUserTyping: !0
						}), this.setUserStoppedTyping())
					}, this.shouldConfirmCancel = () => this.userHasEnteredText() && this.state.hasChanged && this.props.draftType === oe.c.edit, this.onCancel = () => {
						this.shouldConfirmCancel() ? this.props.cancelModalToggled() : this.cancelForm()
					}, this.onBlur = e => {
						(!e || e && e.relatedTarget !== this.switchModeBtn) && (this.textAreaRef && this.textAreaRef.blur(), this.props.onFocusChanged(!1))
					}, this.onFocus = () => {
						this.props.onFocus(), this.props.onFocusChanged(!0)
					}, this.handleKeyDown = e => {
						const {
							ctrlKey: t,
							metaKey: n,
							keyCode: o
						} = e;
						(t || n) && o === q.a.Enter && this.onSubmit()
					}, this.onSubmit = () => {
						this.props.onSubmit({
							commentMode: ne.i.MARKDOWN,
							draftType: this.props.draftType,
							editorState: null,
							text: this.getCurrentText(),
							validate: this.props.showWarningModal
						}), this.onBlur()
					}, this.userHasEnteredText = () => {
						const {
							text: e
						} = this.state;
						return !!e.trim()
					}, this.setWrapperRef = e => {
						this.wrapperEl = e, this.props.editorElementRef && this.props.editorElementRef(e)
					}, this.setTextAreaRef = e => this.textAreaRef = e;
					const {
						postId: t,
						isTypingIndicatorsWriteTestEnabled: n
					} = e;
					n && (this.realtimeGQLVariables = {
						input: {
							channel: {
								teamOwner: "CONTENT_AND_COMMUNITIES",
								category: "USER_IS_TYPING_ON_POST",
								postID: t
							}
						}
					});
					const {
						draftType: s,
						hasError: i,
						initialText: a
					} = e;
					this.state = {
						text: a || "",
						autofocusDisabled: !1,
						hasChanged: !1,
						showError: i,
						breakOut: !1,
						wrapperHeight: void 0,
						formHeight: null,
						cancelModalText: s === oe.c.edit ? o.fbt._("Are you sure that you want to discard your edits?", null, {
							hk: "3RHatI"
						}) : o.fbt._("Are you sure that you want to discard your comment?", null, {
							hk: "38Df9h"
						}),
						isUserTyping: !1
					}
				}
				componentDidMount() {
					this.props.onMount(), window.addEventListener("resize", this.detectBreakout), _.a.read(this.detectBreakout), _.a.write(() => {
						this.props.draft.hasFocus && this.textAreaRef && this.textAreaRef.focus()
					}), this.props.instanceRef && this.props.instanceRef(this)
				}
				componentWillUnmount() {
					this.props.onUnmount({
						text: this.getCurrentText()
					}), window.removeEventListener("resize", this.detectBreakout), this.props.instanceRef && this.props.instanceRef(null), this.props.isTypingIndicatorsWriteTestEnabled && this.setUserStoppedTyping.cancel()
				}
				componentDidUpdate(e) {
					const t = e.pending,
						{
							hasError: n,
							pending: o
						} = this.props;
					t && !o && !n ? this.setState({
						text: "",
						showError: !1
					}) : e.hasError !== this.props.hasError && this.setState({
						showError: this.props.hasError
					})
				}
				getCurrentText() {
					const {
						draft: e
					} = this.props, t = e && e.text;
					return this.state.text || t
				}
				getWrapperHeight() {
					if (!this.textAreaRef) return;
					const e = Object(d.findDOMNode)(this.textAreaRef);
					return e instanceof Element ? e.getBoundingClientRect().height + fe + ge + Q.n : void 0
				}
				render() {
					const {
						activeModalId: e,
						autofocus: t,
						cancelModalToggled: n,
						className: s,
						disableAutofocus: r,
						depth: i,
						draft: c,
						draftKey: d,
						draftType: u,
						errorMsgs: p,
						pending: x,
						modalSeen: E,
						submitButtonText: y,
						isCommentBoxDesignEnabled: _,
						isExpanded: j,
						isTopLevelComment: S,
						isTypingIndicatorsWriteTestEnabled: T,
						onSwitchMode: w,
						userName: I
					} = this.props, {
						cancelModalText: M,
						showError: R,
						text: N,
						breakOut: D,
						wrapperHeight: L,
						isUserTyping: A
					} = this.state, B = Object(z.a)(d), F = c.draftType === oe.c.edit;
					return l.a.createElement("div", {
						"data-test-id": J.b,
						className: Object(H.a)(ie.a.Wrapper, s, {
							[ie.a.isTopLevelComment]: S,
							[ie.a.mExpanded]: j,
							[ie.a.mRedesign]: _
						}),
						ref: this.setWrapperRef,
						style: {
							height: D ? L : void 0
						}
					}, T && A && l.a.createElement(G.a, {
						variables: this.realtimeGQLVariables,
						onData: a.a,
						queryKey: "userIsTypingOnPost"
					}), !_ && S && I && l.a.createElement(le, null, l.a.createElement(de, null, o.fbt._("Comment as {authorLink}", [o.fbt._param("authorLink", l.a.createElement(h.a, {
						author: I,
						isAuthorDeleted: !1
					}, I))], {
						hk: "4pMWAk"
					}))), l.a.createElement(O.a, {
						breakOut: D,
						depth: i,
						isEditing: F
					}, _ && l.a.createElement("div", {
						className: ie.a.userIcon
					}, l.a.createElement(he, null)), l.a.createElement("div", {
						className: Object(H.a)(ie.a.FormWrapper, {
							[ie.a.pending]: x,
							[ie.a.focused]: c.hasFocus
						})
					}, l.a.createElement(me, {
						innerRef: this.setTextAreaRef,
						autoFocus: t && !r,
						disabled: x,
						initialHeight: this.props.initialHeight,
						onBlur: this.onBlur,
						onChange: this.onChange,
						onEditorResize: this.props.onEditorResize,
						onFocus: this.onFocus,
						onKeyDown: this.handleKeyDown,
						placeholder: _ ? o.fbt._("Add a comment", null, {
							hk: "39ZBm0"
						}) : o.fbt._("What are your thoughts?", null, {
							hk: "4or1AH"
						}),
						value: N
					}), (!_ || j) && l.a.createElement(k.a, {
						className: ie.a.FormFooter,
						cancelButtonEnabled: u !== oe.c.replyToPost,
						onSubmit: this.onSubmit,
						onCancel: this.onCancel,
						pending: x,
						submitButtonText: y,
						canSubmit: this.userHasEnteredText()
					}, l.a.createElement(P, null, e => "compact" === e ? l.a.createElement(W, {
						buttonRef: e => this.switchModeBtn = e,
						onClick: () => w(ne.i.RICH_TEXT, N, d),
						isConverting: this.props.isConverting
					}) : l.a.createElement("div", null, l.a.createElement(ae, {
						innerRef: e => this.switchModeBtn = e,
						onClick: () => w(ne.i.RICH_TEXT, N, d)
					}, o.fbt._("Switch to Fancy Pants Editor", null, {
						hk: "ousUG"
					}), this.props.isConverting && l.a.createElement(ce, {
						sizePx: 12
					})))), l.a.createElement(be, {
						onClick: this.props.helpModalToggled
					})))), R && Object(C.c)(p), e === B && l.a.createElement(g.a, {
						actionText: o.fbt._("Discard", null, {
							hk: "1kJ5PR"
						}),
						cancelActionText: o.fbt._("keep", null, {
							hk: "J0ER1"
						}),
						modalText: M,
						onConfirm: () => this.cancelForm(),
						toggleModal: n,
						trackClick: () => {}
					}), e === v.b && l.a.createElement(v.a, {
						withOverlay: !0
					}), e === m.t && l.a.createElement(f.a, {
						onSubmit: this.onSubmit,
						modalSeen: E,
						withOverlay: !0
					}), l.a.createElement(b.a, {
						editKey: d,
						hasValue: !!N
					}))
				}
			}
			t.b = ve(xe)
		},
		"./src/reddit/components/CommentCreation/NavigationModule/index.ts": function(e, t, n) {
			"use strict";
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-router/esm/react-router.js");
			let a = null;
			class c extends r.a.PureComponent {
				constructor() {
					super(...arguments), this.unblock = e => {
						c.blockers.delete(e), c.blockers.size || (a && a(), a = null, window.removeEventListener("beforeunload", c.navigationBlocker))
					}
				}
				componentDidUpdate(e) {
					this.props.skipBlockingOnPageReload ? this.unblock(this.props.editKey) : !e.hasValue && this.props.hasValue ? this.block(this.props.editKey) : e.hasValue && !this.props.hasValue && this.unblock(this.props.editKey)
				}
				componentWillUnmount() {
					this.unblock(this.props.editKey)
				}
				componentDidMount() {
					this.props.hasValue && this.block(this.props.editKey)
				}
				block(e) {
					c.blockers.add(e), a || (window.addEventListener("beforeunload", c.navigationBlocker), a = this.props.history.block(() => {
						const e = this.props.isPostEdit ? o.fbt._("You have a post edit in progress, are you sure you want to discard it?", null, {
							hk: "4u5L7p"
						}) : o.fbt._("You have a comment in progress, are you sure you want to discard it?", null, {
							hk: "rgscd"
						});
						return !!window.confirm(e) && void 0
					}))
				}
				render() {
					return null
				}
			}
			c.blockers = new Set, c.navigationBlocker = e => {
				const t = "Are you sure you want to leave?";
				return e.returnValue = t, t
			}, t.a = Object(i.i)(c)
		},
		"./src/reddit/components/CommentCreation/ToolbarSelector.m.less": function(e, t, n) {
			e.exports = {
				Container: "_1XC-wMQsKPqfaPcfWQCZdW",
				container: "_1XC-wMQsKPqfaPcfWQCZdW"
			}
		},
		"./src/reddit/components/CommentCreation/ToxicityWarningModal.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/uuid/dist/esm-browser/v4.js"),
				a = n("./src/higherOrderComponents/asModal/index.tsx"),
				c = n("./src/reddit/actions/comment/authoring.ts"),
				l = n("./src/reddit/actions/modal.ts"),
				d = n("./src/reddit/components/ModalStyledComponents/index.tsx"),
				u = n("./src/reddit/components/TrackingHelper/index.tsx"),
				p = n("./src/reddit/controls/TextButton/index.tsx"),
				m = n("./src/reddit/constants/tracking.ts"),
				h = n("./src/reddit/selectors/telemetry.ts");
			const b = e => ({
					source: "toxicity_modal",
					...h.q(e),
					screen: h.eb(e),
					subreddit: h.nb(e)
				}),
				f = e => t => ({
					action: m.c.VIEW,
					noun: "modal",
					correlationId: e,
					...b(t)
				}),
				g = e => t => ({
					action: m.c.CLICK,
					noun: "submit",
					correlationId: e,
					...b(t)
				}),
				v = e => t => ({
					action: m.c.CLICK,
					noun: "edit",
					correlationId: e,
					...b(t)
				}),
				x = e => t => ({
					action: m.c.CLICK,
					noun: "close",
					correlationId: e,
					...b(t)
				});
			var C = n("./src/reddit/layout/twoCol/ExpandLeft/index.tsx");
			const {
				fbt: E
			} = n("./node_modules/fbt/lib/FbtPublic.js"), y = Object(r.b)(null, (e, t) => ({
				closeModal: () => {
					e(Object(l.g)(c.t))
				},
				continue: () => {
					t.onSubmit()
				}
			}));
			class O extends s.a.Component {
				constructor(e) {
					super(e), this.state = {
						correlationId: Object(i.a)()
					}
				}
				componentDidMount() {
					this.props.modalSeen(), this.props.sendEvent(f(this.state.correlationId))
				}
				render() {
					return s.a.createElement(d.e, null, s.a.createElement(d.i, null, s.a.createElement(C.a, null, s.a.createElement(d.q, null, E._("Are you sure you want to post that?", null, {
						hk: "4yXqtu"
					})), s.a.createElement(p.a, {
						onClick: () => {
							this.props.sendEvent(x(this.state.correlationId)), this.props.closeModal()
						}
					}, s.a.createElement(d.b, null)))), s.a.createElement(d.l, null, s.a.createElement(d.p, null, E._("A reminder from the mods: Please follow community rules when commenting.", null, {
						hk: "Hdi9f"
					}))), s.a.createElement(d.g, null, s.a.createElement(d.a, {
						onClick: () => {
							this.props.sendEvent(v(this.state.correlationId)), this.props.closeModal()
						},
						"data-redditstyle": !0
					}, E._("Go back and edit", null, {
						hk: "3nGNI7"
					})), s.a.createElement(d.r, {
						onClick: () => {
							this.props.sendEvent(g(this.state.correlationId)), this.props.continue()
						},
						"data-redditstyle": !0
					}, E._("Comment", null, {
						hk: "1leYg7"
					}))))
				}
			}
			t.a = Object(a.a)(y(Object(u.c)(O)))
		},
		"./src/reddit/components/CommentCreation/getCancelModalId.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			}));
			const o = e => `Comment-cancelModal__${e}`
		},
		"./src/reddit/components/CommentSort/CommentSort.m.less": function(e, t, n) {
			e.exports = {
				container: "_2ulKn_zs7Y3LWsOqoFLHPo",
				mHasOtherDiscussions: "_3iO3U_i4YUx-2qahK_BTu1",
				HighlightPicker: "_1n6gZPmNQU56UBglU718cx",
				highlightPicker: "_1n6gZPmNQU56UBglU718cx",
				Row: "zW82EsY6Pakxpq4WWvsUG",
				row: "zW82EsY6Pakxpq4WWvsUG",
				SortPicker: "_1nMYOibX9neGRqvcaCrPDz",
				sortPicker: "_1nMYOibX9neGRqvcaCrPDz",
				containerRow: "_1avwNy0RnwlEwVEW-fwKCI",
				DropdownContainer: "_3N0NZT0gc58Hq7p0XRUjsH",
				dropdownContainer: "_3N0NZT0gc58Hq7p0XRUjsH",
				ContestMode: "_3dAMO_XZMVp2K1JSO53ohA",
				contestMode: "_3dAMO_XZMVp2K1JSO53ohA",
				SortOptionDropdownText: "_3LRBCA71BwLLXBNsSlY7HW",
				sortOptionDropdownText: "_3LRBCA71BwLLXBNsSlY7HW",
				commentSearchMargin: "_2_QzTCgd5SYB-X8CTqZf9T",
				ToggleSwitch: "JVPG0c9TNru5TLSq9sdUG",
				toggleSwitch: "JVPG0c9TNru5TLSq9sdUG",
				DropdownTriangle: "_2MGxQvIhmM2I5CzPdSJTtM",
				dropdownTriangle: "_2MGxQvIhmM2I5CzPdSJTtM",
				hideCommentSort: "uAIheeoxWlq57lu5ghv43",
				HighlightWrapper: "_201SpO3todaXvcWUHaLymN",
				highlightWrapper: "_201SpO3todaXvcWUHaLymN",
				Info: "_1urK6AxAk9Sl76RgLUHOqh",
				info: "_1urK6AxAk9Sl76RgLUHOqh",
				paddingBottom: "_233thT4kQqtwrHDoMY0Dbv",
				SetSort: "_1Pn7_008tGFVitpaAxNI9b",
				setSort: "_1Pn7_008tGFVitpaAxNI9b",
				SingleCommentText: "_2iOrDLLjWlyPdmGh4fQMuE",
				singleCommentText: "_2iOrDLLjWlyPdmGh4fQMuE",
				SortLink: "_2C0TYCrsi0B3m8sQW0hmFv",
				sortLink: "_2C0TYCrsi0B3m8sQW0hmFv",
				Title: "_1MfL8RlT7Bsr76qYvR-nqM",
				title: "_1MfL8RlT7Bsr76qYvR-nqM",
				Tooltip: "_2PA6P-upB6MB4B4I4WgZGA",
				tooltip: "_2PA6P-upB6MB4B4I4WgZGA",
				ViewFullLinkContainer: "_2Cjk95J3a3LyPUHsLEhO37",
				viewFullLinkContainer: "_2Cjk95J3a3LyPUHsLEhO37",
				ViewFullLinkOrOverlayLink: "_3P3T6fdpdL6GGPyCM7zs9q",
				viewFullLinkOrOverlayLink: "_3P3T6fdpdL6GGPyCM7zs9q",
				verticalDivider: "_3v-KNQB_UvJqSbWcQZmc0U"
			}
		},
		"./src/reddit/components/CommentSort/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return $
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/lib/constants/index.ts"),
				d = n("./src/reddit/actions/tooltip.ts"),
				u = n("./src/reddit/actions/comment/index.ts"),
				p = n("./src/reddit/actions/modal.ts"),
				m = n("./src/reddit/actions/post.ts"),
				h = n("./src/reddit/actions/toaster.ts"),
				b = n("./src/lib/makeApiRequest/index.ts"),
				f = n("./src/lib/omitHeaders/index.ts"),
				g = n("./src/reddit/constants/headers.ts"),
				v = n("./src/reddit/models/Toast/index.ts");
			const x = (e, t) => async (n, s, r) => {
				let {
					apiContext: i
				} = r;
				const a = await (async (e, t, n) => Object(b.a)(Object(f.a)(e, [g.a]), {
						endpoint: `${e.apiUrl}/api/set_suggested_sort/`,
						method: l.nb.POST,
						data: {
							api_type: "json",
							id: t,
							sort: n
						}
					}))(i(), e, t),
					c = `error-block-${t}`,
					d = `success-block-${t}`;
				if (a.ok) {
					n(Object(m.Q)({
						[e]: {
							suggestedSort: t
						}
					}));
					const s = t ? o.fbt._("Suggested sort is on.", null, {
						hk: "tW1Rb"
					}) : o.fbt._("Suggested sort is off.", null, {
						hk: "4fwvgj"
					});
					n(h.f({
						id: d,
						kind: v.b.SuccessCommunityGreen,
						text: s
					}))
				} else n(h.f({
					id: c,
					kind: v.b.Error,
					text: o.fbt._("Try again later", null, {
						hk: "1Lqlj2"
					}),
					buttonText: o.fbt._("Retry", null, {
						hk: "44HF9e"
					}),
					buttonAction: x(e, t)
				}))
			};
			var C = n("./src/reddit/components/ConfirmUserActionModal/index.tsx"),
				E = n("./src/reddit/components/InfoTextTooltip/index.tsx"),
				y = n("./src/reddit/components/LinkOrOverlayLink/index.tsx"),
				O = n("./src/reddit/components/OverlayAwareTooltip/index.tsx"),
				k = n("./src/reddit/components/SearchResultsContent/helpers/isCommentSearchRoute.ts"),
				_ = n("./src/reddit/components/TrackingHelper/index.tsx"),
				j = n("./src/reddit/contexts/PageLayer/index.tsx"),
				S = n("./src/reddit/controls/Dropdown/index.tsx"),
				T = n("./src/reddit/controls/Dropdown/Row.tsx"),
				w = n("./src/reddit/controls/Search/CommentSearch/index.tsx"),
				I = n("./src/reddit/controls/ToggleSwitch/index.tsx"),
				P = n("./src/reddit/helpers/path/index.ts"),
				M = n("./src/reddit/selectors/telemetry.ts");
			n("./src/telemetry/models/Event.ts");
			const R = (e, t, n, o, s) => r => ({
					source: "comment_sort",
					action: "click",
					noun: e,
					actionInfo: {
						pageType: t ? "post_detail" : "home"
					},
					listing: Object(M.B)(r, void 0, {
						oldSort: n,
						sort: o,
						source: s
					}),
					userSubreddit: Object(M.wb)(r)
				}),
				N = (e, t) => n => ({
					source: "comment_highlighting",
					action: t,
					noun: e
				}),
				D = e => ({
					subreddit: Object(M.nb)(e),
					userSubreddit: Object(M.wb)(e)
				}),
				L = e => t => ({
					source: "contest_mode",
					action: "click",
					noun: e ? "enable" : "disable",
					...D
				});
			var A = n("./src/reddit/icons/svgs/Dropdown/index.tsx"),
				B = n("./src/reddit/icons/svgs/Info/index.tsx"),
				F = n("./src/reddit/selectors/activeModalId.ts"),
				U = n("./src/reddit/selectors/comments.ts"),
				K = n("./src/reddit/selectors/experiments/commentSearchPdp.ts"),
				W = n("./src/reddit/selectors/moderatorPermissions.ts"),
				H = n("./src/reddit/selectors/posts.ts"),
				q = n("./src/reddit/selectors/tooltip.ts"),
				z = n("./src/reddit/selectors/user.ts"),
				G = n("./src/reddit/components/CommentSort/CommentSort.m.less"),
				V = n.n(G),
				Q = n("./src/reddit/reducers/features/comments/visitHighlightingFilter/index.ts");
			const J = Object(O.a)(S.a),
				X = e => e === Q.a.First ? o.fbt._("First Visit", null, {
					hk: "HdDSr"
				}) : e === Q.a.Last ? o.fbt._("Last Visit", null, {
					hk: "3ubIq3"
				}) : o.fbt._("None", null, {
					hk: "4jwXNg"
				});
			class Z extends r.a.Component {
				constructor() {
					super(...arguments), this.track = () => {
						const {
							trackHighlight: e,
							selectedSort: t
						} = this.props;
						if (t !== Q.a.None) {
							e(t === Q.a.Last ? "since_last_visit" : "since_first_visit", "view")
						}
					}, this.onDropdownClick = (e, t) => {
						this.props.trackHighlight(e, "click"), this.props.changeHighlightSort(t)
					}, this.onDropdownClickFirst = () => {
						this.onDropdownClick("since_first_visit", Q.a.First)
					}, this.onDropdownClickLast = () => {
						this.onDropdownClick("since_last_visit", Q.a.Last)
					}, this.onDropdownClickNone = () => {
						this.onDropdownClick("do_not_highlight", Q.a.None)
					}
				}
				componentDidMount() {
					this.track()
				}
				componentDidUpdate(e) {
					e.selectedSort !== this.props.selectedSort && this.track()
				}
				render() {
					const {
						highlightIsOpen: e,
						id: t,
						onOpen: n,
						selectedSort: s
					} = this.props;
					return r.a.createElement("div", {
						className: V.a.HighlightWrapper
					}, r.a.createElement(T.b, {
						className: Object(c.a)(V.a.HighlightPicker, V.a.Row),
						textClassName: V.a.SortOptionDropdownText,
						displayText: `${o.fbt._("Highlight",null,{hk:"2ZiUE8"})}: ${X(s)}`,
						id: t,
						noHover: !0,
						onClick: n
					}), r.a.createElement(A.b, {
						className: V.a.DropdownTriangle,
						onClick: n
					}), r.a.createElement(J, {
						isOpen: e,
						renderContentsHidden: !0,
						tooltipId: t
					}, r.a.createElement(T.b, {
						displayText: X(Q.a.First),
						isSelected: s === Q.a.First,
						onClick: this.onDropdownClickFirst
					}), r.a.createElement(T.b, {
						displayText: X(Q.a.Last),
						isSelected: s === Q.a.Last,
						onClick: this.onDropdownClickLast
					}), r.a.createElement(T.b, {
						displayText: X(Q.a.None),
						isSelected: s === Q.a.None,
						onClick: this.onDropdownClickNone
					})))
				}
			}
			var Y = Z;
			const $ = "CommentSort--SortPicker",
				ee = "CommentSort--HighlightPicker",
				te = "CommentSort--Tooltip",
				ne = Object(O.a)(S.a),
				oe = Object(j.v)(),
				se = Object(a.c)({
					commentPermalink: (e, t) => {
						let {
							commentId: n
						} = t;
						return n && Object(U.m)(e, {
							commentId: n
						})
					},
					commentSearchPdp: e => Object(K.a)(e),
					contestModeModalIsOpen: Object(F.b)("CommentSort--ContestMode--Modal"),
					dropdownIsOpen: Object(q.b)($),
					highlightIsOpen: Object(q.b)(ee),
					hasModeratorPostPermissions: (e, t) => {
						let {
							postId: n
						} = t;
						const o = Object(W.m)(e, {
							postId: n
						});
						return !!o && o.posts
					},
					post: H.F,
					postPermalink: H.E,
					showCommentHighlighter: (e, t) => {
						let {
							postId: n
						} = t;
						const o = Object(z.x)(e),
							s = !!Object(W.m)(e, {
								postId: n
							}),
							r = Object(H.F)(e, {
								postId: n
							});
						return (s || o) && !!r && !!r.previousVisits && r.previousVisits.length > 0
					},
					selectedHighlightSort: U.p
				}),
				re = Object(i.b)(se, (e, t) => {
					let {
						postId: n
					} = t;
					return {
						changeHighlightSort: t => e(Object(u.b)({
							sort: t
						})),
						onOpenDropdown: () => e(Object(d.h)({
							tooltipId: $
						})),
						onOpenHighlightDropdown: t => {
							e(Object(d.h)({
								tooltipId: ee
							})), t()
						},
						onSetSuggestedSort: t => e(x(n, t)),
						hideTooltip: () => e(Object(d.i)()),
						setContestMode: t => e(Object(m.V)(t, n)),
						showTooltip: () => e(Object(d.h)({
							tooltipId: te
						})),
						toggleContestModeModal: () => e(Object(p.i)("CommentSort--ContestMode--Modal"))
					}
				});
			class ie extends r.a.Component {
				constructor() {
					super(...arguments), this.tooltipTargetElement = null, this.sendCommentSortEvent = (e, t, n, o) => this.props.sendEvent(R(e, this.props.isOverlay, t, n, o)), this.onOpenDropdownClick = () => {
						this.props.onOpenDropdown(), this.sendCommentSortEvent("sorting", void 0, this.props.sort, "post_detail")
					}, this.onSortOptionClick = e => this.sendCommentSortEvent("sort_by", this.props.sort, e, "post_detail"), this.clearSortOnClick = () => {
						this.props.onSetSuggestedSort(null), this.sendCommentSortEvent("clear_suggested_sort", this.props.sort)
					}, this.setSortOnClick = () => {
						const e = this.props.suggestedSort || void 0;
						this.props.onSetSuggestedSort(this.props.sort), this.sendCommentSortEvent("set_suggested_sort", e, this.props.sort)
					}, this.setTooltipTargetRef = e => this.tooltipTargetElement = e, this.onOpenHighlightSelector = () => {
						this.props.onOpenHighlightDropdown(N("dropdown", "click"))
					}, this.setContestMode = () => {
						this.props.sendEvent(L(!this.props.post.contestMode)), this.props.setContestMode(!this.props.post.contestMode)
					}
				}
				addSuggestedLabel(e) {
					return o.fbt._("{sort name} (suggested)", [o.fbt._param("sort name", e)], {
						hk: "3pDfQ9"
					})
				}
				render() {
					var e;
					const {
						changeHighlightSort: t,
						className: n,
						commentId: s,
						commentPermalink: i,
						commentSearchPdp: a,
						contestModeModalIsOpen: d,
						dropdownIsOpen: u,
						elementRef: p,
						hideTooltip: m,
						highlightIsOpen: h,
						hasModeratorPostPermissions: b,
						isOverlay: f,
						location: g,
						pageLayer: v,
						post: x,
						postPermalink: O,
						selectedHighlightSort: _,
						showCommentHighlighter: j,
						sort: S,
						suggestedSort: M,
						showTooltip: R,
						toggleContestModeModal: D
					} = this.props, L = x.contestMode, F = null == s, U = a.bucketed && Object(k.a)(v) && Object(k.b)(x), K = a.bucketed && Object(k.b)(x) && F, W = !(null === (e = g.search) || void 0 === e ? void 0 : e.includes(l.v.CONFIDENCE)), H = S === l.v.CONFIDENCE && W, q = b && !H, z = l.x[S], G = z ? z() : "", Q = M && S === M && !H ? this.addSuggestedLabel(G) : G, J = L ? o.fbt._("End contest mode?", null, {
						hk: "2AkJRZ"
					}) : o.fbt._("Start contest?", null, {
						hk: "2PQPOu"
					}), X = L ? o.fbt._("End", null, {
						hk: "1Q8KqM"
					}) : o.fbt._("Start", null, {
						hk: "Mjvpj"
					}), Z = L ? o.fbt._("Ending contest mode will make comment vote scores visible and disable random comment ordering.", null, {
						hk: "3PXrGq"
					}) : o.fbt._("Starting a contest will hide comment vote scores and randomize the order of the comments for non-mods.", null, {
						hk: "EDqlf"
					}), oe = L && !b, se = r.a.createElement(r.a.Fragment, null, r.a.createElement("div", {
						className: V.a.DropdownContainer
					}, r.a.createElement(T.b, {
						className: Object(c.a)(V.a.SortPicker, V.a.Row),
						textClassName: V.a.SortOptionDropdownText,
						displayText: `${o.fbt._("Sort by",null,{hk:"E6T9r"})}: ${Q}`,
						id: $,
						noHover: !0,
						skipRoleAttr: !0,
						onClick: this.onOpenDropdownClick
					}), r.a.createElement(A.b, {
						className: V.a.DropdownTriangle,
						onClick: this.onOpenDropdownClick
					})), r.a.createElement(ne, {
						isOpen: u,
						tooltipId: $
					}, [l.v.CONFIDENCE, l.v.TOP, l.v.NEW, l.v.CONTROVERSIAL, l.v.OLD, l.v.QA].map(e => {
						const t = i || O,
							n = Object(P.b)(t),
							o = l.x[e],
							s = o ? o() : "";
						return r.a.createElement(y.a, {
							className: V.a.ViewFullLinkOrOverlayLink,
							isOverlay: f,
							key: e,
							onClick: () => this.onSortOptionClick(e),
							role: "menuitem",
							tabIndex: -1,
							to: `${n}?sort=${e}`
						}, r.a.createElement(T.b, {
							displayText: s,
							isSelected: S === e,
							skipRoleAttr: !0
						}))
					})));
					return r.a.createElement("div", {
						className: Object(c.a)(n, V.a.container, {
							[V.a.hideCommentSort]: !j && oe,
							[V.a.paddingBottom]: U
						}),
						ref: p
					}, r.a.createElement(r.a.Fragment, null, r.a.createElement("div", {
						className: V.a.containerRow
					}, !oe && !U && se, q && !oe && !U && (M ? r.a.createElement("button", {
						className: V.a.SortLink,
						onClick: S !== M ? this.setSortOnClick : this.clearSortOnClick
					}, S !== M ? o.fbt._("Set new suggested sort", null, {
						hk: "13BpoB"
					}) : o.fbt._("Clear suggested sort", null, {
						hk: "3WWQBy"
					})) : r.a.createElement("button", {
						className: V.a.SetSort
					}, r.a.createElement("button", {
						className: V.a.SortLink,
						onClick: this.setSortOnClick
					}, o.fbt._("Set as suggested sort", null, {
						hk: "3qLzxp"
					})), r.a.createElement("span", {
						id: te,
						onMouseEnter: R,
						onMouseLeave: m
					}, r.a.createElement(E.c, {
						className: V.a.Tooltip,
						text: o.fbt._("Suggested sort defaults Redditors to a specific way of sorting comments within this post", null, {
							hk: "3KM0ma"
						}),
						tooltipId: te
					}), r.a.createElement(B.a, {
						className: V.a.Info
					})))), b && r.a.createElement("button", {
						className: Object(c.a)(V.a.ContestMode, U && V.a.commentSearchMargin),
						onClick: this.props.toggleContestModeModal
					}, o.fbt._("Contest", null, {
						hk: "1KrhdJ"
					}), r.a.createElement(I.a, {
						className: V.a.ToggleSwitch,
						on: L
					})), U || K ? r.a.createElement("div", {
						className: V.a.containerRow
					}, !U && r.a.createElement(r.a.Fragment, null, r.a.createElement("span", {
						className: V.a.verticalDivider
					}, "|")), r.a.createElement("div", null, r.a.createElement(w.c, {
						experiment: a,
						commentId: s,
						prevLocation: g,
						postId: this.props.postId
					}))) : null), j && r.a.createElement("div", {
						className: V.a.containerRow
					}, r.a.createElement(Y, {
						changeHighlightSort: t,
						highlightIsOpen: h,
						id: ee,
						onOpen: this.onOpenHighlightSelector,
						selectedSort: _,
						trackHighlight: N
					})), d && r.a.createElement(C.a, {
						actionText: X,
						headerText: J,
						modalText: Z,
						onConfirm: this.setContestMode,
						toggleModal: D,
						withOverlay: !0
					})))
				}
			}
			t.b = oe(re(Object(_.c)(ie)))
		},
		"./src/reddit/components/ConfirmUserActionModal/index.m.less": function(e, t, n) {
			e.exports = {
				buttonWidth: "ogOEj4x-0BpDZWeccJwxx",
				ModalText: "_2YxEi97B6Nm7NCgLG6pCud",
				modalText: "_2YxEi97B6Nm7NCgLG6pCud"
			}
		},
		"./src/reddit/components/ConfirmUserActionModal/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/higherOrderComponents/asModal/index.tsx"),
				a = n("./src/reddit/components/ModalStyledComponents/index.tsx"),
				c = n("./src/reddit/controls/TextButton/index.tsx"),
				l = n("./src/reddit/layout/twoCol/ExpandLeft/index.tsx"),
				d = n("./src/reddit/components/ConfirmUserActionModal/index.m.less"),
				u = n.n(d);
			const p = e => e.preventDefault();
			t.a = Object(i.a)(e => r.a.createElement(a.e, null, r.a.createElement(a.i, null, r.a.createElement(l.a, null, r.a.createElement(a.q, null, e.headerText || o.fbt._("Confirm", null, {
				hk: "2zlvKa"
			})), r.a.createElement(c.a, {
				onClick: t => {
					e.onClose && e.onClose(t), e.toggleModal && e.toggleModal()
				}
			}, r.a.createElement(a.b, null)))), r.a.createElement(a.l, null, r.a.createElement(a.p, {
				className: u.a.ModalText
			}, e.modalText)), r.a.createElement(a.g, null, !e.hideCancelButton && r.a.createElement(a.a, {
				className: u.a.buttonWidth,
				onMouseDown: p,
				onClick: () => {
					e.onCancel && e.onCancel(), e.toggleModal && e.toggleModal()
				},
				"data-redditstyle": !e.disableRedditStyle
			}, e.cancelActionText || o.fbt._("Cancel", null, {
				hk: "2TSLl5"
			})), r.a.createElement(a.u, {
				className: u.a.buttonWidth,
				onMouseDown: p,
				onClick: t => {
					e.onConfirm(t), e.toggleModal && e.toggleModal(), e.trackClick && e.trackClick()
				},
				"data-redditstyle": !e.disableRedditStyle,
				disabled: e.isDisabled
			}, e.actionText))))
		},
		"./src/reddit/components/ContentTooltip/index.m.less": function(e, t, n) {
			e.exports = {
				StyledTooltipContainer: "_2uSuNRa3OeptFDJCKQ3vU6",
				styledTooltipContainer: "_2uSuNRa3OeptFDJCKQ3vU6",
				fadeIn: "_2bkYZH_kJx5pIHW0Ts5P6e",
				caretOnBottom: "_1rF-A55THyDL-rQ9ZUDQ4_",
				caretOnTop: "_1MHCyMQAMeqRqf5DPWWeq3",
				hideCaret: "dExJJiXRwxVrKsDJRWSQl",
				caretOnLeft: "nVD-oexLbZI_4QjhrkLFz",
				caretOnRight: "KRVDnoE1RIC5qyqQLXxGG"
			}
		},
		"./src/reddit/components/ContentTooltip/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/higherOrderComponents/addOverlayEvents.tsx"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/lib/CSSVariableProvider/withTheme.tsx"),
				d = n("./src/lib/fastdom/index.ts"),
				u = n("./src/reddit/components/OverlayAwareTooltip/index.tsx"),
				p = n("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				m = n("./src/reddit/selectors/tooltip.ts"),
				h = n("./src/reddit/components/ContentTooltip/index.m.less"),
				b = n.n(h);

			function f() {
				return (f = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const g = {
					height: 200,
					width: 200
				},
				v = e => {
					switch (e) {
						case "top":
							return "bottom";
						case "right":
							return "left";
						case "left":
							return "right";
						case "bottom":
						default:
							return "top"
					}
				},
				x = Object(l.a)(e => {
					const {
						children: t,
						className: n,
						style: o,
						caretPosition: s,
						caretColor: i,
						onClick: a,
						hideCaret: l
					} = e;
					return r.a.createElement("div", {
						onClick: a,
						className: Object(c.a)(n, b.a.StyledTooltipContainer, {
							[b.a.caretOnTop]: "top" === s,
							[b.a.caretOnLeft]: "left" === s,
							[b.a.caretOnRight]: "right" === s,
							[b.a.caretOnBottom]: "bottom" === s,
							[b.a.hideCaret]: l
						}),
						style: {
							...o,
							"--contentTooltip-caretColor": i && i[s] ? i[s] : Object(p.a)(e).body
						}
					}, t)
				}),
				C = Object(a.c)({
					isOpen: (e, t) => {
						let {
							tooltipId: n
						} = t;
						return Object(m.b)(n)(e)
					}
				}),
				E = Object(u.a)(x, [o.a.Click, o.a.Keydown]),
				y = Object(i.b)(C);
			class O extends r.a.Component {
				constructor(e) {
					super(e), this.checkAndSetPosition = () => {
						const {
							tooltipId: e,
							tooltipSizeEstimate: t = g
						} = this.props;
						d.a.read(() => {
							const n = document.getElementById(e);
							if (!n) return;
							const o = n.getBoundingClientRect();
							if (!("undefined" != typeof window)) return void this.setState({
								position: this.props.defaultTooltipPosition
							});
							let s = !0;
							switch (this.props.defaultTooltipPosition) {
								case "bottom":
									s = window.innerHeight - o.bottom > t.height;
									break;
								case "left":
									s = o.left > t.width;
									break;
								case "right":
									s = o.right <= window.innerWidth - t.width;
									break;
								case "top":
								default:
									s = o.top > t.height
							}
							this.setState({
								position: s ? this.props.defaultTooltipPosition : v(this.props.defaultTooltipPosition)
							})
						})
					}, this.state = {
						position: null
					}
				}
				componentDidUpdate(e) {
					!e.isOpen && this.props.isOpen && this.checkAndSetPosition(), e.isOpen && !this.props.isOpen && this.setState({
						position: null
					})
				}
				getPositions(e) {
					switch (e || this.props.defaultTooltipPosition) {
						case "bottom":
							return {
								tooltipPosition: ["center", "top"], targetPosition: ["center", "bottom"], caretPosition: "top"
							};
						case "left":
							return {
								tooltipPosition: ["right", "center"], targetPosition: ["left", "center"], caretPosition: "right"
							};
						case "right":
							return {
								tooltipPosition: ["left", "center"], targetPosition: ["right", "center"], caretPosition: "left"
							};
						case "top":
						default:
							return {
								tooltipPosition: ["center", "bottom"], targetPosition: ["center", "top"], caretPosition: "bottom"
							}
					}
				}
				render() {
					const {
						position: e
					} = this.state, {
						targetPosition: t,
						tooltipPosition: n,
						caretPosition: o
					} = this.getPositions(e);
					return r.a.createElement(E, f({}, this.props, {
						caretPosition: o,
						targetPosition: t,
						tooltipPosition: n
					}))
				}
			}
			t.a = y(O)
		},
		"./src/reddit/components/ContributorRequestFlow/ContributorRequestButton/index.m.less": function(e, t, n) {
			e.exports = {
				RequestButton: "_3K2ydhts9_ES4s9UpcXqBi",
				requestButton: "_3K2ydhts9_ES4s9UpcXqBi"
			}
		},
		"./src/reddit/components/ContributorRequestFlow/ContributorRequestButton/index.tsx": function(e, t, n) {
			"use strict";
			n.r(t);
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/reddit/actions/modal.ts"),
				l = n("./src/reddit/components/TrackingHelper/index.tsx"),
				d = n("./src/reddit/constants/modals.ts"),
				u = n("./src/reddit/controls/Button/index.tsx"),
				p = n("./src/reddit/helpers/trackers/privateCommunity.ts"),
				m = n("./src/reddit/helpers/trackers/restrictedCommunity.ts"),
				h = n("./src/reddit/models/SubredditRestrictions/index.ts"),
				b = n("./src/reddit/components/ContributorRequestFlow/ContributorRequestButton/index.m.less"),
				f = n.n(b);
			const g = () => ({
				[h.b.Comment]: o.fbt._("Request to Comment", null, {
					hk: "3KRhw5"
				}),
				[h.b.IdCard]: o.fbt._("Request to Post", null, {
					hk: "2xsrGd"
				}),
				[h.b.PostSubmission]: o.fbt._("Request to Post", null, {
					hk: "2xsrGd"
				}),
				[h.b.ContentGate]: o.fbt._("Request to Join", null, {
					hk: "1nK8Vv"
				})
			});
			class v extends r.a.Component {
				constructor() {
					super(...arguments), this.onRequest = () => {
						const {
							sendEvent: e,
							eventSource: t,
							openRequestToJoinSubredditModal: n,
							openContributorRequestModal: o
						} = this.props;
						t === h.b.ContentGate ? (e(Object(p.a)(t)), n()) : (e(Object(m.a)(t)), o())
					}
				}
				render() {
					const {
						eventSource: e,
						smallButton: t,
						className: n,
						isContributorRequestPending: s
					} = this.props;
					return r.a.createElement(u.t, {
						priority: e === h.b.ContentGate ? u.c.Secondary : u.c.Primary,
						className: Object(a.a)(t ? null : f.a.RequestButton, n),
						onClick: this.onRequest,
						size: t ? u.d.S : u.d.M,
						disabled: s
					}, s ? o.fbt._("Request Pending", null, {
						hk: "hVswi"
					}) : g()[e])
				}
			}
			t.default = Object(i.b)(null, e => ({
				openContributorRequestModal: () => e(Object(c.i)(d.a.CONTRIBUTOR_REQUEST)),
				openRequestToJoinSubredditModal: () => e(Object(c.i)(d.a.CONTRIBUTOR_REQUEST_PRIVATE_SUREDDIT))
			}))(Object(l.c)(v))
		},
		"./src/reddit/components/CrosspostBox/index.m.less": function(e, t, n) {
			e.exports = {
				mediaContainer: "P8p9Nku0-ZbYCsaCOSE2t",
				Container: "_2ED-O3JtIcOqp8iIL1G5cg",
				container: "_2ED-O3JtIcOqp8iIL1G5cg",
				PostMetaWrapper: "_1u_4ufj_H3WJW2TXEZ6a3n",
				postMetaWrapper: "_1u_4ufj_H3WJW2TXEZ6a3n",
				PostTitle: "_2akYJO5RtMK_ptA408seyG",
				postTitle: "_2akYJO5RtMK_ptA408seyG",
				FlatList: "_3Dd3XvAr-WcOJyMTx4y35x",
				flatList: "_3Dd3XvAr-WcOJyMTx4y35x",
				FlatItem: "_2Pkdj4FrQFtK8COeODi_kK",
				flatItem: "_2Pkdj4FrQFtK8COeODi_kK",
				FlatListDotSpacer: "_3w73P89exX_1mpdhQCURo6",
				flatListDotSpacer: "_3w73P89exX_1mpdhQCURo6",
				LinkContainer: "CsZ0mP84ULF0bBJJa0PFy",
				linkContainer: "CsZ0mP84ULF0bBJJa0PFy",
				Content: "_379A_08LTBsR4c8POTldR_",
				content: "_379A_08LTBsR4c8POTldR_",
				ThumbnailContainer: "_7bo--rwqP4Z7K1s_8dGPX",
				thumbnailContainer: "_7bo--rwqP4Z7K1s_8dGPX"
			}
		},
		"./src/reddit/components/CrosspostBox/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return k
			})), n.d(t, "a", (function() {
				return _
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/react-router-dom/esm/react-router-dom.js"),
				c = n("./node_modules/reselect/es/index.js"),
				l = n("./src/lib/permalinkToOverlayLocation/index.ts"),
				d = n("./src/lib/prettyPrintNumber/index.ts"),
				u = n("./src/reddit/components/Media/index.tsx"),
				p = n("./src/reddit/components/PostMeta/index.tsx"),
				m = n("./src/reddit/components/PostTitle/index.tsx"),
				h = n("./src/reddit/components/SourceLink/index.tsx"),
				b = n("./src/reddit/components/Thumbnail/index.tsx"),
				f = n("./src/lib/constants/index.ts"),
				g = n("./src/reddit/contexts/Post/index.tsx"),
				v = n("./src/reddit/selectors/posts.ts"),
				x = n("./src/reddit/selectors/user.ts"),
				C = n("./src/reddit/components/CrosspostBox/index.m.less"),
				E = n.n(C),
				y = n("./src/lib/lessComponent.tsx");

			function O() {
				return (O = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const k = 8,
				_ = 1,
				j = y.a.div("Container", E.a),
				S = y.a.div("PostMetaWrapper", E.a),
				T = y.a.wrapped(m.c, "PostTitle", E.a),
				w = y.a.div("FlatList", E.a),
				I = y.a.div("FlatItem", E.a),
				P = y.a.span("FlatListDotSpacer", E.a),
				M = y.a.wrapped(j, "LinkContainer", E.a),
				R = y.a.div("Content", E.a),
				N = y.a.div("ThumbnailContainer", E.a),
				D = Object(c.c)({
					isCurrentUserProfilePost: v.l,
					isTopicPage: e => !(!e.platform.currentPage || !e.platform.currentPage.meta || e.platform.currentPage.meta.name !== f.Sb.TOPIC),
					shouldOpenPostInNewTab: x.lb
				}),
				L = Object(i.b)(D);
			t.c = Object(g.b)(L(e => {
				const {
					className: t,
					isCurrentUserProfilePost: n,
					isTopicPage: o,
					mediaProps: s,
					post: i,
					subredditOrProfile: a
				} = e;
				if (!i) return null;
				const c = {
						post: i,
						hideGildCta: !0,
						inSubredditOrProfile: !1,
						isCurrentUserProfilePost: n,
						isTopicPage: o,
						shouldShowSubscribeButton: !1,
						subredditOrProfile: a,
						tooltipType: `CrosspostBox--${s.isListing}`
					},
					l = t;
				return i && !i.media ? r.a.createElement(M, {
					className: l
				}, r.a.createElement(R, null, r.a.createElement(S, null, r.a.createElement(p.a, c)), A(i), i.source && r.a.createElement(h.a, {
					post: i
				}), F(e)), K(e)) : r.a.createElement(j, {
					className: l
				}, r.a.createElement(S, null, r.a.createElement(p.a, c)), A(i), B(e), F(e))
			}));
			const A = e => r.a.createElement(T, {
					isCrosspost: !0,
					post: e,
					shouldLinkWrap: !0,
					size: m.b.Small
				}),
				B = e => {
					const {
						mediaProps: t,
						post: n
					} = e, o = {
						...t,
						post: n,
						crosspost: t.post
					};
					return r.a.createElement("div", null, r.a.createElement(u.a, O({}, o, {
						className: E.a.mediaContainer,
						scrollerItemRef: t.scrollerItemRef
					})))
				},
				F = e => {
					const {
						post: t
					} = e, {
						score: n
					} = t;
					return r.a.createElement(w, null, r.a.createElement(I, null, o.fbt._({
						"*": "{point count} points",
						_1: "1 point"
					}, [o.fbt._plural(n, "point count", Object(d.b)(n))], {
						hk: "PNZhd"
					})), r.a.createElement(P, null), r.a.createElement(I, null, U(e)))
				},
				U = e => {
					const {
						post: t,
						shouldOpenPostInNewTab: n
					} = e, {
						numComments: s
					} = t;
					return r.a.createElement(a.a, {
						"data-click-id": "comments",
						to: Object(l.a)(t.permalink, !0),
						target: n ? "_blank" : void 0
					}, o.fbt._({
						"*": "{comment count} comments",
						_1: "1 comment"
					}, [o.fbt._plural(s, "comment count", Object(d.b)(s))], {
						hk: "xPYWL"
					}))
				},
				K = e => r.a.createElement(N, null, r.a.createElement(b.b, {
					post: e.post
				}))
		},
		"./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/constants.ts": function(e, t, n) {
			"use strict";
			var o;
			n.d(t, "a", (function() {
					return o
				})),
				function(e) {
					e.nonDismissable = "predictionEducationNonDismissable", e.creation = "predictionEducationCreation", e.feature = "predictionEducationFeature"
				}(o || (o = {}))
		},
		"./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/index.m.less": function(e, t, n) {
			e.exports = {
				educationMessage: "_3fy4maW8GQWdzcWGdeMbsa",
				isShortWidth: "_28YkWXOPICkzcS5IobwdZx",
				titleRow: "_1OeK7ZGX2fnKzdqjn-5gQD",
				header: "_1Y7_NWRItnxdsOq9DSlCDi",
				title: "_2ZZDhQ9qffZd-pGxZE6R4I",
				newBadge: "_1cHmK8KSQMLT0mELC910oM",
				closeButton: "_1C2XLQWgnLb_MVlB0fwAc_"
			}
		},
		"./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return m
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/hooks/useLocalStorage.ts"),
				a = n("./src/reddit/controls/Button/index.tsx"),
				c = n("./src/reddit/icons/fonts/index.tsx"),
				l = n("./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/constants.ts"),
				d = n("./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/index.m.less"),
				u = n.n(d);
			const {
				fbt: p
			} = n("./node_modules/fbt/lib/FbtPublic.js");

			function m(e) {
				let {
					message: t,
					newBadge: n,
					onClose: d,
					onView: m,
					storageKey: h = l.a.nonDismissable,
					title: b,
					isFullWidth: f
				} = e;
				const g = h !== l.a.nonDismissable,
					[v, x] = Object(i.a)(h, !g || !1),
					[C, E] = Object(o.useState)(!1);
				return Object(o.useEffect)(() => {
					v || C || !m || (m(), E(!0))
				}, [v, C, m]), g && v ? null : s.a.createElement("div", {
					className: Object(r.a)(u.a.educationMessage, {
						[u.a.isShortWidth]: !f
					})
				}, s.a.createElement("div", {
					className: u.a.titleRow
				}, s.a.createElement("div", {
					className: u.a.header
				}, s.a.createElement("h3", {
					className: u.a.title
				}, b), n && s.a.createElement("div", {
					className: u.a.newBadge
				}, p._("New", null, {
					hk: "2N0EBb"
				}))), g && s.a.createElement(a.t, {
					"aria-label": p._("Close", null, {
						hk: "2UjnU"
					}),
					className: u.a.closeButton,
					Icon: Object(c.b)("close"),
					onClick: () => {
						x(!0), d && d()
					},
					priority: a.c.Plain
				})), t)
			}
		},
		"./src/reddit/components/Econ/Prediction/TournamentTokenIcon/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return l
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./src/reddit/components/Econ/Prediction/UnicornIcon/index.tsx"),
				c = n("./src/reddit/selectors/features/predictions/tournaments/index.ts");
			const l = e => {
				let {
					tournamentId: t,
					className: n
				} = e;
				const s = Object(i.e)(e => Object(c.a)(e, t));
				return s && s.tokenIconUrl ? r.a.createElement("img", {
					className: n,
					alt: o.fbt._("Tournament token", null, {
						hk: "3cgDZy"
					}),
					src: s.tokenIconUrl
				}) : r.a.createElement(a.a, {
					className: n
				})
			}
		},
		"./src/reddit/components/Econ/Prediction/UnicornIcon/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./src/reddit/selectors/experiments/econ/index.ts");
			const a = e => {
					let {
						className: t
					} = e;
					return s.a.createElement("svg", {
						className: t,
						fill: "none",
						height: "20",
						viewBox: "0 0 20 20",
						width: "20",
						xmlns: "http://www.w3.org/2000/svg"
					}, s.a.createElement("path", {
						d: "m11.8373 7.17254c-.0381-2.14805-1.2066-4.26563-3.12608-5.6611-.7001 1.14224-1.0571 2.46166-1.02847 3.80108.02863 1.33941.44168 2.64237 1.18995 3.75365",
						fill: "#ffc2dd"
					}), s.a.createElement("path", {
						d: "m8.87285 9.06578c-.03047.01981-.17672-.13254-.39609-.43722-.29757-.44864-.53424-.93481-.70383-1.44575-.25319-.76597-.37124-1.57014-.34887-2.37656.0185-.47751.08381-.95205.195-1.4168.12075-.49951.29704-.98393.52559-1.44421.04547-.10166.09632-.20083.15234-.29708l.16453-.28792c.0182-.03202.04253-.06014.07159-.08276.02907-.02261.06231-.03928.09782-.04904s.0726-.01243.10914-.00785c.03655.00458.07183.01631.10384.03453l.02742.01828c.38016.28079.73681.5921 1.0664.93082.30177.31806.57737.65991.82417 1.02223.4117.60733.7253 1.27566.9293 1.98046.1388.46809.2126.95301.2194 1.44118 0 .34277-.0396.52863-.0731.52863-.0336 0-.0762-.18281-.1402-.50731-.0876-.45579-.214-.90328-.3778-1.33757-.2445-.64356-.5745-1.25128-.9811-1.8068-.2427-.32728-.50846-.63681-.79524-.92625-.31294-.30838-.64797-.59352-1.00242-.85313l.41742-.08226-.15234.2666c-.05268.08874-.10048.18028-.1432.27422-.20887.42313-.37327.8668-.49055 1.32387-.10969.42749-.18107.8639-.21328 1.30406-.04198.75145.02993 1.50493.21328 2.23488.31535 1.25684.78762 1.94696.70078 1.99875z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m15.6001 5.87727c-.8963-.80295-1.9238-1.44605-3.0378-1.90125-.8516-.34734-1.7854-.585-2.69037-.41742-1.00242.18586-1.84945.84246-2.58984 1.55086-.89883.86988-1.70321 1.87383-2.14196 3.04687-.34277.91407-.45703 1.93177-1.02984 2.72697-.44789.6292-1.12582 1.0481-1.73672 1.5234s-1.19894 1.0664-1.32691 1.8281c-.134064.7983.2666 1.5905.76172 2.2349.43629.6039.99546 1.1085 1.64074 1.4808.65104.3698 1.41006.5028 2.14805.3763 1.28273-.2544 2.18918-1.3711 3.33937-2.0018.91406-.4966 1.98046-.6657 2.93876-1.0664 1.7105-.7343 3.0622-2.1139 3.7613-3.8391.6813-1.72672.7474-3.63533.1874-5.40512",
						fill: "#ffc2dd"
					}), s.a.createElement("path", {
						d: "m11.9928 5.88635c-.9902.47227-2.10078.77238-3.13214.36105-.44942-.17824-.91407-.48597-.99633-.96281-.08836-.53777.35648-1.01156.81047-1.31472 1.4823-.98567 3.3333-1.06641 5.0669-.66422 1.7337.40218 3.2663 2.19375 3.4842 3.95941 1.1699.23309 1.6178 1.90582 1.4396 3.08494-.0975.649-.4647 1.2416-.5027 1.8967-.0595 1.042.7175 1.9591.8302 2.9966.0424.4433-.0361.8899-.2271 1.2922-.1909.4024-.4873.7455-.8576.993-.7449.4829-2.1998.8653-2.9661.4174-.5408.5408-1.0664.8531-1.953.5621-.4365-.1597-.8123-.4516-1.075-.835s-.3992-.8392-.3906-1.3039c.0251-.4645.1826-.9122.4539-1.2901.2713-.378.645-.6704 1.0772-.8427-.118-.6928-.0689-1.4038.143-2.0739.212-.6701.5808-1.2799 1.0757-1.7789.4357-.4311.6475-1.2568.8623-1.82809.3184-.84551.0792-1.3589-.7115-1.79461-.7906-.4357-.6322-.91406-1.5356-.93234",
						fill: "#7e53c1"
					}), s.a.createElement("path", {
						d: "m2.93455 11.5232c-.76172.5652-1.73063 2.1861-1.73063 2.1861-.335154.9887-.09293 2.174.67184 2.8839.30469.2803.66879.4814.97347.7617.24375.2209.4479.489.72973.6581.29688.1598.6324.2336.96891.2133 1.02679-.0183 1.96523-.5515 2.83207-1.1014.52711-.3337.74496-.3748 1.08469-.8973.33972-.5226.44179-1.2508.08074-1.7596-.10551-.1489-.24341-.2718-.40332-.3597s-.33766-.1383-.51989-.1476c.14706-.1759.25646-.3801.32145-.5999.06499-.2199.08417-.4507.05637-.6783-.03221-.2274-.1238-.4424-.26556-.6232-.14175-.1808-.32865-.321-.54187-.4066-.21517-.0769-.44922-.0833-.66831-.0184s-.41185.1978-.55044.3795c-.12035-.4571-.26812-.9415-.66117-1.1929-.39304-.2514-.95672-.1706-1.36043.0899s-.73429.2133-1.01156.6094",
						fill: "#ff85c6"
					}), s.a.createElement("g", {
						fill: "#000"
					}, s.a.createElement("path", {
						d: "m12.0369 5.96144c.0076.01828-.0975.08074-.3047.18129-.1051.04875-.2422.09598-.4022.15234-.1874.06167-.3781.11253-.5713.15235l-.1691.03351-.1813.01524-.1904.02133-.2011.00761c-.29982.01193-.59992-.01521-.89273-.08074-.34868-.0711-.67773-.21717-.96434-.42809-.33198-.24583-.57949-.58862-.7084-.98109-.00992-.03112-.01206-.0642-.00622-.09634.00585-.03215.01949-.06236.03974-.088l.18129-.22699.09293-.11578c.03351-.03656.06855-.0716.10359-.10816l.21176-.21633.23613-.20109c.33521-.27221.70445-.49959 1.0984-.67641.86515-.37673 1.79855-.5717 2.74215-.57281.2458 0 .4946.00761.7465.02285.1249.01066.2514.02437.3778.03656l.3885.06703c.5231.11861 1.0247.31749 1.4869.58957.4807.27702.916.62643 1.2903 1.03594.3946.42526.6993.9258.8958 1.47164.1606.44653.2128.92481.1524 1.39547l-.2225-.32449c.3024.07237.582.21897.8136.42656.2182.19639.3962.43337.524.69773.2368.4925.3602 1.03182.3611 1.57828.0036.26324-.0198.52618-.0701.78458-.0515.2498-.1265.4941-.224.7297-.1751.4479-.3458.8471-.3351 1.231.0236.4021.1338.7945.323 1.1502.1736.3762.3762.748.5149 1.1486.0732.1995.1243.4064.1523.617.025.2054.025.4131 0 .6185-.049.3813-.1783.7479-.3793 1.0756-.1803.2992-.4198.5584-.7038.7617-.2515.1695-.5267.3009-.8166.39-.4515.1462-.9263.2072-1.4.1798-.2998-.0157-.5927-.0952-.8593-.2331-.0441-.0259-.0837-.0472-.1142-.0701l-.0747-.064c-.0381-.035-.0548-.0564-.0487-.064s.0335 0 .0792.0168l.0838.0366c.0335.0137.0746.0259.1203.0426.265.0859.5427.1261.8212.1188.4422-.0126.879-.1002 1.2919-.2589.253-.0934.4915-.2222.7083-.3824.2336-.1832.4283-.4111.5729-.6703.1596-.2843.2582-.5987.2894-.9232.0316-.3501-.0206-.7025-.1523-1.0284-.131-.3519-.3321-.7038-.5256-1.0953-.2303-.4174-.366-.8802-.3976-1.3559-.0049-.2555.0316-.5102.1081-.7541.0701-.2376.1524-.457.2407-.6779.083-.2069.1462-.4211.1889-.6399.0401-.2216.0575-.44666.0518-.67179-.0025-.45984-.1065-.91345-.3046-1.32843-.089-.19841-.2208-.37466-.386-.5161-.1651-.14144-.3595-.24457-.5692-.30199-.0707-.01706-.1324-.05965-.1735-.11957s-.0585-.13291-.049-.20492c.0449-.37936.0001-.76396-.131-1.12278-.1711-.47191-.4347-.90491-.7754-1.27359-.3334-.36724-.7207-.68161-1.1487-.93234-.4116-.24365-.858-.42295-1.3238-.53168l-.3504-.06704-.352-.0396c-.2346-.0193-.4671-.02946-.6977-.03047-.8711-.0115-1.7356.15167-2.5426.47988-.69944.29292-1.31358.75772-1.78547 1.35129l.03199-.18738c.09268.31809.28096.59997.5393.80742.23935.19093.5167.32857.81351.40371.26464.07357.53739.114.81197.12035h.1874l.1798-.00762.1721-.00761.163-.01981c.2118-.01828.3976-.06246.5607-.08988.163-.02742.3046-.06856.4082-.0975.2194-.05942.3398-.08379.3474-.06551z"
					}), s.a.createElement("path", {
						d: "m15.1617 6.80064c.032-.01066.16.18738.2529.60938.0533.25693.0661.52062.0381.78152-.0428.34276-.1325.678-.2666.99633-.159.38683-.3724.749-.6338 1.07553-.2727.3504-.5713.684-.8318 1.0664-.1345.1968-.2591.4001-.3732.6094-.1109.2057-.1964.4241-.2544.6505-.126.4741-.116.9741.0289 1.4427l.0549.1523.0655.1524v.0107c.0153.035.0235.0728.0241.1111s-.0063.0763-.0205.1118c-.0142.0356-.0352.068-.062.0954-.0268.0273-.0587.0491-.094.064l-.0228.0092c-.4112.1591-.7588.4486-.9897.8242s-.3322.8166-.2885 1.2553c.0443.3877.1928.7562.4296 1.0664.21.2635.5015.4499.8288.5301.0736.0194.1484.0342.2239.0442.0792.0102.1564.0183.2316.0244.1384.0097.2774.0097.4159 0 .2139-.0066.4231-.0652.6093-.1706.3047-.1874.4007-.3977.4434-.3702.0167.0076.0091.0655-.029.166-.0649.1473-.1623.2781-.2849.3824-.2014.1636-.4437.2689-.7007.3047-.1541.0256-.31.0389-.4662.0396-.0823 0-.1656 0-.2499 0-.0935-.0045-.1866-.0152-.2787-.032-.4244-.0768-.8101-.2954-1.0939-.62-.3157-.3695-.521-.8204-.5926-1.3011-.0783-.5443.0291-1.0992.3047-1.5752.2866-.522.7517-.9233 1.3101-1.1304l-.1645.4022-.0838-.1858c-.0228-.064-.0487-.1265-.0701-.192-.1795-.573-.1895-1.1856-.0289-1.7641.0739-.272.1819-.5336.3215-.7785.1288-.2228.2697-.4385.4219-.646.2956-.4067.6231-.7464.8943-1.06636.2517-.28403.4648-.60009.6337-.93996.1414-.27918.2488-.57429.32-.87903.0485-.23077.0679-.4667.0579-.7023-.0198-.38695-.0732-.6109-.0305-.62461z"
					}), s.a.createElement("path", {
						d: "m11.7475 15.5359c.0397.0198-.0121.1751-.0487.457-.0497.3816-.0079.7696.1219 1.1319.0832.2572.2266.4908.4181.6816.1916.1907.4258.3331.6833.4153.2964.1041.6157.1251.9232.0609.3275-.0754.6263-.2436.8608-.4844.0439-.0439.1008-.0725.1623-.0816.0614-.009.1242.0019.1789.0313l.0229.0122.131.0716c.3301.1294.6855.1815 1.039.1523.3483-.0224.6927-.0874 1.0252-.1935.2948-.0892.572-.2283.8196-.4113.2096-.1663.3885-.3678.5287-.5957.2115-.3484.3397-.741.3747-1.1471.0275-.2879.0153-.457.0595-.4677.0441-.0107.1233.1523.1675.457.0501.4566-.033.918-.2392 1.3285-.1429.2883-.3393.5468-.5789.7617-.2813.2401-.6046.426-.9536.5484-.3748.137-.7663.2231-1.1639.256-.4489.0469-.9024-.017-1.3209-.1859-.07-.0335-.1371-.0746-.2056-.1112l.3626-.0381c-.3113.3274-.7135.554-1.1548.6505-.409.0775-.8316.0374-1.2188-.1158-.1777-.0673-.3469-.1553-.5042-.262-.1473-.1097-.279-.2388-.3915-.3839-.2342-.2994-.39-.6525-.4534-1.0273-.0633-.3748-.0321-.7595.0908-1.1192.1112-.291.2346-.4083.2635-.3915z"
					}), s.a.createElement("path", {
						d: "m12.5288 4.12384c.0335.12188-.6551.38696-1.2964.98567-.6414.59871-.9766 1.24922-1.0939 1.20504-.0533-.01981-.0411-.2209.0792-.51797.1677-.38261.4134-.72603.7214-1.00828.3079-.28226.6714-.49715 1.0672-.63094.3062-.09902.5073-.08836.5225-.03352z"
					}), s.a.createElement("path", {
						d: "m11.1488 3.92917c.0243.12492-.6734.33058-1.32543.89273s-.98262 1.20199-1.10145 1.15781c-.05332-.0198-.04265-.21937.07922-.51187.171-.37717.42374-.71159.73992-.97903.31619-.26744.68794-.4612 1.08824-.56726.3107-.0716.5088-.04723.5195.00762z"
					}), s.a.createElement("path", {
						d: "m16.3803 10.1901c-.1097-.067.3915-.97041.5347-2.19678s-.1005-2.22269.0229-2.26078c.0533-.01676.1935.2148.3047.63223.0647.24543.1066.49635.1249.74953.0464.62313-.0318 1.24927-.23 1.84183-.0799.24049-.1819.47305-.3047.69469-.2118.37938-.4053.56978-.4525.53928z"
					}), s.a.createElement("path", {
						d: "m18.9885 16.1546c-.064-.0137-.0412-.2773-.1036-.6749-.0645-.5111-.2722-.9936-.5992-1.3918-.327-.3981-.7599-.6957-1.2488-.8583-.3793-.1356-.6413-.163-.6429-.23-.0015-.0671.2697-.1402.7191-.0686.5932.102 1.1302.4135 1.5132.8779.383.4643.5866 1.0507.5739 1.6525-.0167.4555-.1538.7069-.2117.6932z"
					}), s.a.createElement("path", {
						d: "m14.8916 15.5424c0 .0549-.2575.0945-.6475-.0213-.5113-.1635-.9518-.4959-1.2494-.9426-.2976-.4468-.4345-.9814-.3882-1.5162.0426-.4038.1767-.6216.2285-.6094s.0411.2513.0792.6094c.0371.4555.1895.8941.443 1.2745.2535.3803.5996.6898 1.0058.8994.3138.1721.5377.2483.5286.3062z"
					}), s.a.createElement("path", {
						d: "m17.5289 17.9844c.0198.0518-.1813.1919-.5546.3047-.2195.0627-.4453.1005-.6733.1127-.2821.0127-.5646-.0104-.841-.0685-.5039-.1057-.972-.3398-1.3589-.6795-.2879-.2651-.4021-.4799-.3625-.5164.0396-.0366.2376.0883.5454.2681.3936.2324.8213.4016 1.2675.5012.2454.051.4945.082.7449.0929.2078.0059.4158.0008.6231-.0152.358-.029.5896-.0625.6094 0z"
					}), s.a.createElement("path", {
						d: "m2.90817 17.6644c.02743-.0336.16758.0441.422.1447.35517.1372.73285.207 1.11363.2056.2607-.0006.52062-.0286.77543-.0837.29447-.0691.58245-.1634.86074-.2819.6451-.2903 1.25785-.6478 1.82813-1.0664.3184-.2194.63527-.4357.95215-.6337.16005-.1033.32643-.1964.49816-.2788.16632-.0783.33786-.145.5134-.1996.33819-.1066.66119-.1691.94909-.2316.2657-.0562.5281-.1269.7861-.2117.9461-.291 1.3894-.7419 1.4503-.6856.0274.0229-.0411.1783-.2529.39-.3054.2895-.6618.5198-1.0511.6795-.2631.1148-.5339.2111-.8105.2879-.2925.0838-.5957.1615-.8943.2712-.1517.0544-.29977.1185-.44329.1919-.15014.0784-.29562.1654-.43571.2605-.30468.1966-.60937.4114-.92929.6323-.60607.446-1.26645.8131-1.96524 1.0923-.31459.118-.64019.2042-.97195.2574-.29262.0427-.58936.0493-.8836.0198-.42771-.0359-.83949-.1789-1.19742-.4159-.24527-.1751-.33668-.3168-.31383-.3442z"
					}), s.a.createElement("path", {
						d: "m6.225 5.96731c.03504.03047-.11882.24832-.27269.70688-.15387.45855-.32906 1.14257-.64289 1.98046-.35795 1.00905-.94757 1.92005-1.72149 2.65995-.44789.4128-.98261.7419-1.41984 1.1365-.22006.1952-.41046.4216-.5652.6718-.15641.2581-.27396.5379-.34886.8303-.1496.5767-.109 1.1864.11578 1.7382.2033.5106.57035.9393 1.04355 1.2188.43841.246.94.3563 1.44117.3168.4522-.035.89467-.1495 1.30711-.3382.62316-.2632 1.19822-.6282 1.70168-1.0801.36106-.3214.55149-.521.585-.4921.03352.029-.09902.2682-.42351.6521-.46912.5411-1.04342.9812-1.68797 1.2934-.4486.2367-.93728.3881-1.44117.4463-.60087.0697-1.20871-.0451-1.74282-.329-.59015-.3284-1.05149-.8472-1.308628-1.4717-.279975-.664-.334037-1.4015-.153867-2.0993.089401-.3498.231157-.6842.420465-.9917.18513-.296.41307-.563.67641-.7922.24386-.2077.49809-.403.76172-.585.24527-.1767.47683-.3473.68707-.5286.39554-.3476.74199-.7474 1.02984-1.18832.25632-.38967.48001-.79986.66879-1.22636.34278-.78153.57586-1.46707.81199-1.91344.23614-.44637.45551-.63984.47836-.61547z"
					}), s.a.createElement("path", {
						d: "m7.61001 17.0368c-.01371-.0229.07312-.096.22852-.227.21967-.1779.4162-.3826.585-.6094.11178-.1553.19769-.3276.25441-.5103.06503-.2047.08222-.4215.05027-.6338-.0336-.226-.14711-.4325-.31992-.5819-.08594-.0808-.18875-.1414-.30099-.1775-.11225-.0361-.23111-.0467-.34799-.0312-.04085.0077-.08309.0029-.12121-.0136-.03812-.0166-.07037-.0443-.09255-.0795-.02219-.0351-.03328-.0762-.03183-.1177.00144-.0416.01535-.0817.03992-.1153.15099-.206.25783-.4409.31383-.6901.0588-.2522.04721-.5157-.03352-.7617-.06006-.1925-.16964-.3659-.31775-.5028s-.32957-.2325-.52623-.2772c-.18409-.0295-.37273-.0078-.54539.0625-.16009.0641-.29709.1751-.39305.3184v.0076c-.02289.0359-.05711.0632-.09724.0776-.04014.0144-.08391.0149-.12442.0017-.0405-.0133-.07544-.0397-.0993-.075s-.03529-.0776-.03247-.1201c.00897-.1905-.02689-.3804-.10468-.5545s-.19534-.3275-.34321-.4479c-.2408-.1906-.54594-.2806-.85161-.2514-.20637.0174-.40675.0781-.58804.1783-.12797.07-.195.1203-.21176.1035-.01676-.0167.02437-.0914.14168-.2026.17711-.1566.39359-.2619.62613-.3047.16814-.034.3411-.0371.51035-.0091.2035.0334.39676.1126.5652.2316.2034.1439.36838.3356.48046.5582.11209.2226.16786.4693.16243.7184l-.35801-.1097c.1399-.2193.34103-.3927.5785-.4989.23747-.1061.50086-.1403.75756-.0983.27463.053.52991.1791.73901.3648.2091.1858.36429.4245.44927.691.10765.3236.12191.671.04113 1.0024-.07296.3061-.21004.5932-.40219.8425l-.20109-.3306c.17731-.0238.3577-.0071.52763.0488s.32497.1497.45346.2741c.2323.2134.37995.5033.4159.8166.02715.2664-.00994.5354-.10816.7846-.08209.2088-.20017.4017-.34887.5697-.20103.2307-.44204.4232-.71145.5683-.18586.099-.29707.131-.30773.1112z"
					}), s.a.createElement("path", {
						d: "m1.63036 14.9239c-.05028-.0671.02742-.2026.10054-.4037.0973-.242.14496-.501.14016-.7618-.00623-.1382-.03082-.275-.07313-.4067-.02438-.0824-.06591-.1587-.12187-.224-.04305-.0401-.0954-.0689-.15235-.0837-.05179-.0153-.10207-.0122-.13253-.0381-.03047-.0259-.03657-.0899.03503-.1646.05278-.0478.11654-.0819.18564-.0991.06909-.0173.14139-.0173.21046.0001.09781.0283.18881.0762.26741.1409s.14313.1448.18962.2354c.14254.2601.1987.5588.16036.8529-.03833.2941-.16918.5684-.37364.7833-.20414.2026-.39305.23-.4357.1691z"
					}), s.a.createElement("path", {
						d: "m3.30922 14.9463c.00761-.0838.2148-.1218.47836-.2529.15103-.0716.29108-.1645.41589-.2757.14195-.126.25387-.2821.32754-.457.02539-.0616.03666-.1281.033-.1946-.00367-.0666-.02218-.1314-.05417-.1899-.03199-.0584-.07666-.1089-.13073-.1479-.05407-.0389-.11616-.0652-.18173-.077-.24375-.0457-.42504.0685-.48598.0152-.02894-.0243-.02742-.0959.04266-.1889.10853-.1306.26266-.215.43113-.2361.1238-.0188.25029-.0073.36868.0335.13848.0489.26222.1322.35953.2422.10996.1238.18329.2757.21175.4388.02862.1723.0102.3491-.05332.5119-.09984.2397-.25932.45-.4633.6108-.20397.1607-.44567.2667-.70213.3078-.15219.0271-.30857.0187-.45703-.0244-.09445-.035-.1432-.0777-.14015-.1158z"
					})), s.a.createElement("path", {
						d: "m3.53778 4.27334c.35264.00703.70225-.06643 1.02223-.2148.5652-.30469.58653-1.05879.69317-1.70473l-.68707-.57586-.29098-.29097c-.40265-.06883-.81671-.01302-1.18676.15996-.11314.03509-.21026.109-.27422.20871-.04419.13436-.03491.28058.0259.40828.20871.67336.43723 1.34824.69773 2.00941z",
						fill: "#fcff78"
					}), s.a.createElement("path", {
						d: "m6.92588 3.76312-1.45336-1.21875c-.08836.62309-.10817 1.28121-.66879 1.66207-.31535.21481-.73582.28793-1.16848.30469.28754.71505.63298 1.40543 1.03289 2.06426.56368.13254 1.12582.15234 1.6636-.21176.81047-.54691.7084-1.71844.59414-2.60051z",
						fill: "#34e2ac"
					}), s.a.createElement("path", {
						d: "m8.74027 5.59247c-.30468-.5591-.8059-.98262-1.2934-1.39242l-.24832-.20719c.0975.87293.10665 1.89668-.59871 2.47558-.54843.45704-1.14867.49665-1.75804.39.19381.29675.40386.58258.62918.85618.30468.35953.64593.70839 1.0923.8455.39305.12036.81809.06246 1.21875 0 .23991-.04098.4642-.14628.64899-.30468.23423-.14822.41471-.36769.51492-.62614.19905-.67984.12528-1.4105-.20567-2.03683z",
						fill: "#4ab6ff"
					}), s.a.createElement("path", {
						d: "m3.63372 1.50807c-.00915.02133-.07922 0-.20262.01066-.17338.01719-.33517.09486-.45703.21938-.08963.10119-.15545.22118-.19262.35115s-.04475.26662-.02219.3999c.03199.32297.21176.66727.45703 1.05117.47989.78 1.04203 1.71387 1.65903 2.75438l.47226.79828c.14562.26333.3215.50874.52407.73125.09393.10008.20166.18626.31992.25594.12269.06894.2545.12023.39152.15234.29024.05902.59075.04276.87293-.04723.14265-.04381.27929-.10522.40676-.18281.12585-.08503.24364-.18141.35191-.28793.21371-.19425.37641-.43804.47379-.70992.18434-.52102 0-1.09231-.33515-1.52344-.33516-.43113-.79067-.79371-1.1959-1.13648l-1.15782-.94149c-1.42593-1.13953-2.32629-1.82812-2.28515-1.89668.04113-.06855 1.02832.50578 2.52586 1.56914.37324.26661.78.56368 1.20961.89121.42961.32754.91406.67336 1.32082 1.18981.21796.26961.37913.58054.47379.91406.0477.17942.07177.36431.0716.54996-.00338.19142-.03469.38131-.09293.56368-.12117.36293-.33056.6901-.60938.95214-.1406.13226-.29366.25062-.45703.35344-.16878.10363-.34998.18553-.53929.24375-.37848.12012-.78173.13955-1.17001.05637-.19307-.04362-.37883-.11494-.55148-.21176-.16901-.097-.32297-.21811-.45703-.35953-.23145-.25682-.43095-.54072-.59414-.84551l-.45703-.81047c-.5911-1.05574-1.11668-2.01093-1.55086-2.81683-.2209-.40067-.41438-.82266-.42047-1.23551-.0138-.17693.01449-.35461.08254-.51851.06804-.16391.17393-.30937.30898-.4245.08602-.06939.18569-.1199.29251-.14825.10683-.02835.21842-.03389.32753-.01628.15844.03047.21328.09141.20567.10512z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m4.46393 6.19913c-.07008.03961-.40371-.44332-.88664-1.25836-.24223-.40675-.52102-.8973-.82266-1.44574-.07617-.13558-.15234-.27879-.22395-.43722-.07862-.16703-.13841-.34229-.17824-.52254-.04674-.20918-.04674-.4261 0-.63528.05176-.237.17898-.45082.36258-.60937.19251-.15305.43201-.23486.67793-.23156.21542.00414.42722.05618.62004.15234.16671.07743.32497.17188.47226.28184.13711.10359.25747.20261.38086.30468.4875.38848.91407.74496 1.27969 1.05117.71906.60938 1.13801 1.02223 1.09078 1.08622-.04722.06398-.55605-.23157-1.3391-.76172-.39152-.26356-.85008-.58653-1.35586-.95215-.23758-.19065-.49262-.35846-.76172-.50121-.24527-.11426-.53929-.11578-.69164.01676-.08628.07832-.14594.18165-.17062.29554-.02806.12849-.02806.26152 0 .39.07188.29274.18147.5749.32601.83942.2727.55757.51188 1.0664.70535 1.49144.38086.85617.585 1.40766.51493 1.44574z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m3.32259 4.185c.04265-.05027.22089.06856.50425.05637.17023-.01048.33705-.05232.49207-.1234.09475-.04162.18639-.08999.27422-.14473.08767-.05455.16761-.12065.23766-.19652.24239-.29049.364-.66295.33973-1.04051-.00975-.12051-.03484-.23928-.07465-.35343-.02743-.08836-.03809-.15235-.01371-.16454.02437-.01218.07921 0 .15234.07161.11052.10274.19152.23319.23461.37781.06054.21354.072.43801.03351.6566-.04331.27667-.16671.53459-.35496.74191-.09867.10747-.21387.1985-.34125.26965-.11202.0622-.22989.11323-.35191.15235-.21234.07339-.43982.09174-.66117.05332-.1515-.02712-.29151-.09872-.40219-.20567-.07008-.07008-.09445-.12492-.06855-.15082z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m4.604 6.28436c.03047-.00914.0716.05637.13864.15234.03548.05467.08035.10264.13253.14168.06723.04371.1441.07037.22395.0777.05049.00737.10135.01195.15234.01371.05353.00107.10705-.00249.15996-.01067.12363-.02073.24399-.05761.35801-.10968.26973-.11881.50848-.29813.69774-.52407.18908-.22808.32585-.49485.40066-.78152.06123-.2426.09295-.49171.09445-.74191 0-.42047-.15234-.67184-.09445-.7084.02285-.01523.09141.02437.1752.13406.11597.16041.19315.34554.22546.54082.04641.28689.0428.57965-.01066.86531-.06644.35874-.2238.69444-.45703.975-.23468.28133-.54026.49486-.88512.61852-.15255.05626-.31288.08863-.47531.09598-.077.00278-.15408-.00232-.23004-.01524-.06368-.0138-.1263-.03213-.18738-.05484-.12349-.03615-.23401-.10701-.3184-.20414-.05878-.07254-.09904-.15829-.11731-.24985-.02742-.13254-.01066-.20718.01676-.2148z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m14.8962 8.86965c.8394-1.7809.3564-5.85914-2.2502-7.58672-.6194.71264-1.0159 1.59151-1.1402 2.5275s.029 1.88788.441 2.7375",
						fill: "#ffc2dd"
					}), s.a.createElement("path", {
						d: "m11.9471 6.54651c-.0289.01371-.1264-.10816-.2575-.35953-.178-.36602-.3017-.75607-.3671-1.15781-.1063-.61415-.0898-1.24329.0487-1.85098.1786-.77188.5449-1.48774 1.0664-2.08406v-.00762c.0445-.05081.1065-.08307.1736-.090408.0672-.007334.1346.010798.189.050798l.2956.21937c.1024.07061.1991.14905.2894.23461.1902.16824.367.3511.5287.54692.0807.09902.1675.19347.2391.29707l.2103.30469c.0335.05179.07.10207.102.15234l.0884.16148.1691.32602c.099.21633.195.43113.2773.64441l.1081.32145c.0376.10373.0691.20953.0945.31687.2039.74383.2933 1.5144.2651 2.28516-.0097.52011-.106 1.03497-.2849 1.52344-.0465.13373-.1094.26116-.1874.37933-.0518.08227-.0884.11883-.1066.11121-.0183-.00761-.0183-.06246 0-.15234.0182-.08988.0563-.2209.0777-.39609.0863-.48239.117-.97311.0914-1.4625-.0309-.72382-.1548-1.44065-.3687-2.13282-.0269-.09929-.0594-.19695-.0975-.2925l-.1097-.29554c-.0807-.19653-.1737-.39153-.2681-.58957l-.163-.28946-.0823-.15234c-.0289-.04723-.0625-.09293-.0945-.14016l-.1843-.28031c-.0655-.09293-.1523-.17672-.2163-.2666-.1443-.1766-.3017-.34211-.4708-.49512-.0811-.07598-.1682-.14527-.2605-.20718l-.2589-.19957.3762-.05028c-.4697.52458-.8126 1.15003-1.0024 1.82813-.1534.54814-.2101 1.11883-.1676 1.68644.0747.97196.3382 1.52953.2575 1.56305z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m12.4756 10.9713c.6932-.9314.556-2.20692-.3066-2.84893-.8626-.642-2.1238-.40739-2.81708.52403-.69325.93142-.55598 2.2069.30659 2.8489.86259.6421 2.12379.4074 2.81709-.524z",
						fill: "#b8e7ff"
					}), s.a.createElement("path", {
						d: "m12.6477 11.0997c-.3495.475-.8556.8112-1.429.9491-.2925.0698-.596.0806-.8927.032-.3037-.0513-.59239-.1689-.84553-.3443-.256-.1803-.47062-.4131-.62955-.6829s-.25852-.5704-.29213-.8817c-.0368-.31289-.01301-.62995.07008-.93385.16819-.60576.55597-1.12715 1.08773-1.4625.26428-.1668.558-.28159.8653-.33821.308-.05723.6247-.04811.9289.02676s.589.21377.8353.40742c.2408.1922.4364.43511.5728.71145.1316.27014.2083.56376.2254.86379.036.59244-.1401 1.17834-.4966 1.65294zm-.3458-.2575c.1408-.1938.2465-.4109.3123-.6413.0626-.22856.0807-.46699.0533-.70234-.0262-.22746-.1011-.4466-.2197-.64247-.1185-.19586-.278-.36385-.4674-.4925-.1832-.12067-.39-.20124-.6066-.23642s-.4382-.02418-.6502.03228c-.4264.11149-.80187.3653-1.06425.71939s-.39591.7872-.37845 1.22756c.00711.2192.06045.4345.15654.6316.09609.1972.23275.3718.40104.5125.17772.143.38412.2461.60512.3023.2211.0562.4516.0643.6761.0237.2336-.0413.457-.1271.6581-.2529.2016-.1291.379-.2925.5241-.4829z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m11.734 10.3357c.3564-.72954.0761-1.59909-.6262-1.94222-.7023-.34314-1.56058-.02993-1.91701.69958-.35643.7295-.07606 1.59904.62623 1.94214.70228.3432 1.56058.03 1.91698-.6995z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m10.6281 9.66417c.0662-.43647-.2192-.84166-.63736-.90502-.41814-.06335-.81073.23912-.87686.67559s.21923.84166.63738.90506c.41814.0633.81074-.2392.87684-.67563z",
						fill: "#fff"
					}), s.a.createElement("path", {
						d: "m11.5831 11.1074c.3374 0 .6109-.2851.6109-.6368s-.2735-.6368-.6109-.6368-.6109.2851-.6109.6368.2735.6368.6109.6368z",
						fill: "#fff"
					}), s.a.createElement("path", {
						d: "m12.8948 6.65901c-.0594-.02894.0366-.31687.1158-.78304l.0305-.18282.0228-.20109c.0214-.13711.0244-.28793.0366-.44332.0143-.33972.0097-.67997-.0137-1.01918-.0458-.61737-.1478-1.22927-.3047-1.82812-.1204-.45704-.2224-.74801-.1661-.78.0564-.032.2529.2148.4571.67793.2577.60474.4122 1.24843.457 1.90429.0235.35959.0148.72055-.0259 1.0786-.0259.16605-.0427.32449-.0807.46922l-.0503.21023-.061.19043c-.1706.48293-.3732.73277-.4174.70687z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m1.41844 16.2901c.07617-.0472.30469.2834.83789.5652.30658.1598.63944.263.98262.3047.42089.046.8467.0098 1.25379-.1066.88359-.2438 1.57828-.7617 2.06425-1.1639.48598-.4022.7861-.6734.85008-.6201.06399.0534-.12797.4129-.56519.9141-.26033.2951-.55316.5598-.87293.7891-.40061.2889-.84865.5054-1.32387.6399-.48542.1386-.99614.1641-1.49297.0746-.40609-.0764-.78949-.2442-1.12125-.4905-.222-.1628-.40729-.3704-.54387-.6094-.08836-.1676-.10054-.2773-.06855-.2971z",
						fill: "#000"
					}), s.a.createElement("path", {
						d: "m1.2085 15.8394c.70843.486 1.55388.7323 2.4125.703s1.68528-.3328 2.3589-.8661c.23004-.2064.4744-.3963.73125-.5682.12943-.0849.27578-.1405.42889-.1632.15311-.0226.30931-.0116.45775.0322.15254.0661.2835.1737.37801.3105s.14881.2973.15672.4634c.00895.3331-.1037.658-.31688.9141-.21295.2544-.46491.4734-.74648.6489-.83941.5637-1.8525.9933-2.84426.7998-.54082-.1051-1.02984-.3884-1.50515-.6657-.21368-.1179-.41747-.2529-.60938-.4037-.3144-.2606-.5528-.6011-.69012-.9857",
						fill: "#ff85c6"
					}), s.a.createElement("path", {
						d: "m13.3224 5.51322c-.0032.29968-.0637.59597-.1782.87293-.0542.13337-.1411.25098-.2526.34202-.1116.09103-.2442.15259-.3857.179-.3321.03351-.6445-.22242-.7983-.54082-.134-.3332-.1968-.69074-.1844-1.04965-.0259-.98719.061-2.0216.4571-2.92348.1523-.35496.457-1.05422.7845-.45703.2514.45703.3596 1.10754.4479 1.62856.1099.64328.1467 1.29692.1097 1.94847z",
						fill: "#ffc2dd"
					}), s.a.createElement("path", {
						d: "m2.43311 1.8313c.4357-.66727 5.62605 6.34054 5.62605 6.34054l-.4677.41742-1.76566-.26507z",
						fill: "#fff"
					}), s.a.createElement("path", {
						d: "m15.2968 5.96724c1.0832.9293 1.5783 2.68734 1.1944 4.06296 1.4335-1.13034 1.0999 1.88 0 2.9631.2803-.1081.844.2057 1.0222.4479.163.2547.2526.5493.259.8516.0566.6477-.0536 1.2991-.3199 1.8921-.6414 1.4062-2.9829 1.4808-3.6776.972-.1356.5332-.5698.9658-1.3071 1.106.9262.5225 1.7184.4951 2.4253-.3047.8805.2544 2.3628 0 3.1337-.4875s1.2584-1.4579 1.0664-2.3522c-.1341-.6093-.55-1.1197-.7389-1.7154-.227-.7145-.1112-1.4899.0336-2.2257.1447-.7358.3168-1.4884.195-2.22879-.1219-.74039-.6201-1.47622-1.3559-1.62094.0186-.79515-.2157-1.57567-.6691-2.22917-.4533-.6535-1.1024-1.14624-1.8537-1.40728l.5515 2.145",
						fill: "#7e53c1",
						opacity: ".67"
					}), s.a.createElement("path", {
						d: "m14.8307 4.86442c.113 1.0501.0543 2.11159-.1737 3.14285-.2483 1.02375-.7724 1.69559-1.5889 2.96003-1.3666 2.1145-4.16206 4.2123-4.16206 4.2123l-.21024 1.106s3.0012-.914 3.9229-1.5539c.1995-.361.2909-1.2187.3382-1.6316.0895-.7608.3635-1.4883.7982-2.1191.3443-.4997.7298-.8927 1.0375-1.41678.4246-.75116.6314-1.60579.5972-2.46797-.0544-.8398-.2078-1.67024-.457-2.47406",
						fill: "#ffc2dd"
					}), s.a.createElement("path", {
						d: "m13.8086 14.0707c-.0274 0-.0761-.0807-.1173-.2514-.0508-.2446-.058-.4963-.0213-.7434.0512-.3631.1538-.717.3047-1.0512.1823-.399.3931-.7844.6307-1.1532.2422-.387.4677-.7511.6444-1.09233.1603-.2979.29-.61131.387-.93539.1523-.55148.1173-.9232.1858-.93387.0274 0 .0731.08227.1097.25442.0428.24545.0428.49646 0 .74191-.0594.36166-.1686.71336-.3245 1.04508-.1865.39658-.3992.78038-.6368 1.14868-.2422.3854-.457.751-.6368 1.0938-.156.299-.2801.6135-.3702.9385-.1417.5545-.0883.9262-.1554.9384z",
						fill: "#c676ff"
					}), s.a.createElement("path", {
						d: "m14.9072 14.0231c-.0564 0-.1326-.1752-.1524-.4829-.0454-.8133.2322-1.6116.7724-2.2212.2102-.2255.3824-.3199.4235-.2803.0914.0868-.3458.652-.6185 1.4579s-.3047 1.5143-.425 1.5265z",
						fill: "#c676ff"
					}), s.a.createElement("path", {
						d: "m6.19165 7.1707c-.01219-.06246.12949-.13559.32297-.2666.24618-.1607.45882-.36765.62613-.60938.15866-.24732.26783-.52308.32144-.81199.04723-.22852.05942-.38848.12036-.40067.06093-.01218.15234.13407.18738.41133.03174.3671-.06183.73413-.26546 1.04123-.20362.30709-.50528.53614-.85579.64979-.27117.07312-.44637.04266-.45703-.01371z",
						fill: "#fff"
					}), s.a.createElement("path", {
						d: "m4.43023 4.76671c0-.12035.43114-.18434.76172-.50273.33059-.3184.43571-.72821.55758-.72668.05789 0 .11731.1234.10207.33058-.03163.27398-.1599.52771-.36178.71562-.20187.18791-.46413.2977-.73966.30966-.20567 0-.32297-.07313-.31993-.12645z",
						fill: "#fff"
					}), s.a.createElement("path", {
						d: "m3.40812 2.70883c.30037 0 .54387-.2435.54387-.54387s-.2435-.54387-.54387-.54387c-.30036 0-.54386.2435-.54386.54387s.2435.54387.54386.54387z",
						fill: "#fff"
					}), s.a.createElement("path", {
						d: "m16.4716 14.2914c.0168-.0213.0915-.0076.192.0808.1373.1344.2244.3119.2468.5027.0418.2872-.0268.5795-.192.8181-.202.2785-.4875.4856-.815.5911-.5639.1875-1.1772.1593-1.7215-.0792-.4067-.1844-.585-.4037-.5515-.4464.0336-.0427.2682.0625.6521.1523.2215.0538.4484.082.6764.0838.2721.0041.543-.0376.8013-.1234.2476-.0783.4686-.2238.6383-.4204.1276-.1591.2003-.3553.2072-.5591.0152-.3641-.1782-.5515-.1341-.6003z",
						fill: "#c676ff"
					}), s.a.createElement("path", {
						d: "m12.6798 17.3567c-.0442.0365-.1813-.0305-.3199-.2255-.1735-.264-.2528-.5787-.2251-.8933.0276-.3146.1606-.6107.3774-.8404.1691-.1691.3169-.2117.3535-.1691.0365.0427-.0229.1676-.1021.3458-.2153.4435-.2582.9512-.1204 1.4245.0412.1904.0854.3138.0366.358z",
						fill: "#c676ff"
					}), s.a.createElement("path", {
						d: "m12.6432.993331c.0549.001261.1081.019339.1524.051799l.2955.21937c.1024.0706.1992.14904.2895.23461.1902.16823.3669.3511.5286.54692.0807.09902.1676.19347.2392.29707l.2102.30468c.0335.0518.0701.10207.1021.15235l.0883.16148.1311.24223c.1523.0716.3123.15234.457.23613.4808.277.916.62641 1.2903 1.03594.3946.42526.6993.9258.8958 1.47164.1365.37028.2007.76334.1889 1.15781.2065.0822.3969.20031.5622.34887.2183.19639.3963.43337.524.69773.2368.4925.3602 1.03182.3611 1.57829.0037.26323-.0198.52615-.0701.78455-.0515.2498-.1264.4941-.2239.7297-.1752.4479-.3459.8471-.3352 1.231.0236.4022.1338.7945.323 1.1502.1737.3763.3763.748.5149 1.1486.0732.1995.1243.4064.1523.617.0251.2055.0251.4131 0 .6186-.049.3813-.1782.7478-.3793 1.0755-.1265.2034-.2802.3884-.457.55-.032.032-.0625.0655-.096.0959-.2813.2401-.6047.4261-.9537.5485-.3748.1369-.7662.223-1.1639.2559-.096 0-.1935.0107-.2925.0107-.3527.0071-.703-.0598-1.0283-.1965-.2835.2425-.6235.4096-.9887.4859-.1309.0263-.2641.0396-.3976.0396-.1308 0-.2613-.0118-.39-.035-.0691-.0034-.1379-.0121-.2057-.0259-.4243-.0768-.81-.2954-1.0938-.62-.3157-.3695-.5211-.8204-.5926-1.3011-.0692-.4618-.0031-.9338.1904-1.3589-.1661.0625-.3413.1219-.5256.1737-.2925.0838-.5957.1615-.8942.2712-.15177.0544-.29985.1185-.44337.1919-.15013.0784-.29561.1654-.4357.2605-.30469.1966-.60938.4114-.9293.6323-.60606.446-1.26645.8131-1.96523 1.0923-.31459.118-.6402.2042-.97196.2574-.1751.0251-.35174.0378-.52863.0381-.11856.0001-.23704-.006-.35496-.0183-.42771-.0359-.8395-.1789-1.19742-.4159-.24527-.1736-.3382-.3168-.31535-.3427.0035-.0009.00716-.0009.01066 0-.26616-.056-.52276-.1504-.76172-.2803-.59015-.3284-1.05149-.8472-1.308629-1.4717-.285418-.6678-.341666-1.4113-.159961-2.1145.089401-.3499.231157-.6843.42047-.9918.18512-.296.41306-.5629.6764-.7922.24386-.2077.49809-.403.76172-.585.24528-.1767.47684-.3473.68707-.5286.39554-.3476.742-.7473 1.02985-1.18827.25631-.38968.48-.79987.66879-1.22637.09293-.21023.17672-.41133.25593-.60937-.11902-.16844-.22936-.34285-.33058-.52254l-.45703-.81047c-.5911-1.05574-1.11668-2.01094-1.55086-2.81684-.12458-.21556-.23059-.44134-.31688-.67488-.08052-.16829-.14184-.3451-.18281-.52711-.04675-.20918-.04675-.4261 0-.63527.05176-.237.17898-.45082.36258-.60938.19129-.15206.429-.2338.67336-.23156h.00914c.2118.00575.41978.05775.60937.15234.16882.07706.32914.17152.47836.28184.13711.10359.25746.20262.38086.30469.4875.38847.91406.74496 1.27969 1.05117.40066.34125.7084.62004.89273.81047l.41743.30773.04418.03352c.02807-.2051.06723-.40852.1173-.60938.12074-.49951.29704-.98394.52559-1.44422.04547-.10165.09632-.20082.15234-.29707l.16453-.28793c.0182-.03202.04252-.06014.07159-.08275.02907-.02262.06231-.03928.09782-.04904s.0726-.01243.10914-.00785c.03654.00457.07183.01631.10383.03453l.02743.01828c.38016.28079.7368.59209 1.0664.93082.21773.22749.42123.46813.60933.72058.3091-.0716.6226-.12249.9385-.15234.2026-.61813.5268-1.18947.9537-1.68035v-.00762c.0251-.02912.0562-.05248.0911-.06852.035-.01603.073-.024358.1115-.024409zm-7.59736 2.437499c.06405-.15644.10312-.32197.11578-.49055-.02525.16638-.06397.33044-.11578.49055zm-.73125 7.08097.03351-.0076c.02133-.0397.04114-.0808.06094-.1204l-.09293.128zm-.28793.3565c.04937-.0282.10023-.0536.15234-.0762l.02285-.0351c-.03808.0092-.07312.0183-.10664.029l-.07008.0807zm-1.00395 6.8143h-.00761zm9.62049-16.910168c-.0696-.000201-.1385.014672-.2019.043598s-.1197.07122-.1652.123981v.007617c-.4115.478212-.7312 1.028242-.943 1.622462-.2316.02742-.4571.06551-.6902.11426-.1682-.21931-.3483-.42934-.5392-.62918-.33831-.34598-.70412-.6639-1.09388-.95063l-.05027-.03199c-.05671-.03237-.11923-.05323-.18401-.06141-.06478-.00817-.13053-.00349-.1935.01377-.06296.01726-.12191.04677-.17346.08684-.05155.04006-.09469.0899-.12696.14666l-.1691.28336c-.06001.09869-.11492.20038-.16453.30469-.2348.4748-.4152.97461-.53778 1.48992-.02285.08988-.04418.18129-.06246.27726l-.16301-.12187c-.19195-.195-.49359-.4677-.8973-.80438-.36715-.30468-.79981-.66726-1.28578-1.05574l-.09598-.07617c-.08531-.08684-.18586-.15539-.28945-.23918-.15921-.11881-.33023-.22091-.51035-.30469-.22066-.10615-.46202-.162328-.70688-.164529l-.00914.216329v-.223946c-.29523-.003494-.58241.096186-.81199.281836-.21874.18764-.37103.44092-.43418.72211-.0536.24029-.0536.48944 0 .72973.04217.19688.10603.38848.19043.57128.08802.24388.19657.47984.32449.70536.44027.81808.96281 1.76414 1.55238 2.81683l.45704.81199c.0716.12493.16453.28184.27421.44333-.07464.18281-.14168.33972-.20871.48902-.18354.41537-.40112.81486-.65051 1.19437-.2769.42478-.61058.80968-.99175 1.14408-.21328.1844-.44942.358-.67184.518l-.0716.0518c-.24432.1701-.47974.3527-.70535.5469-.27965.2431-.52148.5265-.717541.8409-.201003.3259-.351499.6803-.446367 1.0512-.191573.7431-.132671 1.5287.167578 2.2349.277385.6687.77228 1.2242 1.40461 1.5768.21839.1184.45074.2089.69164.2696.09693.1355.21773.2521.35648.3443.38841.2581.83506.4151 1.2995.457.1255.0132.25161.0198.37781.0198.18655-.0002.37287-.0134.55758-.0396.34488-.0565.68324-.1473 1.01004-.2711.7161-.2867 1.39326-.6624 2.0155-1.1182l.18586-.128c.25594-.1767.49817-.3443.73887-.5012.13372-.0908.27259-.1737.4159-.2483.1356-.0694.27554-.13.41896-.1813.227-.0823.457-.1524.6871-.2118l.1934-.0548.1173-.0351c-.0901.3419-.1088.6987-.0548 1.0481.0765.5219.3 1.0113.6444 1.4107.3166.3609.7463.6037 1.2188.6886.0723.015.1456.0246.2193.029.1379.0242.2775.0364.4175.0366.1478.0002.2952-.0141.4402-.0427.3588-.0709.6965-.2231.9872-.4448.3197.1159.6578.1727.9979.1675.0959 0 .1965 0 .3047-.0106.4164-.0353.8263-.126 1.2187-.2697.375-.1317.7222-.3322 1.0238-.5911.0289-.0259.0533-.0518.0776-.0777l.0244-.0259c.1885-.174.3525-.3729.4875-.5911.2169-.3543.3565-.7504.4098-1.1623.0271-.2227.0271-.4477 0-.6704-.0266-.2257-.0777-.4479-.1523-.6627-.107-.2909-.2312-.5753-.3717-.8516-.0518-.1066-.1036-.2117-.1524-.3184-.176-.3298-.2798-.6933-.3047-1.0664-.0091-.3184.125-.6596.2819-1.0542l.0396-.099c.1028-.2484.1819-.506.2361-.7693.0531-.2709.0776-.54668.0731-.8227-.0008-.5803-.132-1.153-.3839-1.67578-.1406-.28852-.3356-.54716-.5743-.76172-.1482-.13199-.3144-.24227-.4936-.32753-.0056-.36454-.0704-.72574-.192-1.06946-.2059-.57305-.5256-1.09851-.9399-1.54476-.3892-.42647-.8419-.79028-1.3422-1.0786-.1249-.0716-.2589-.14168-.4159-.2148l-.0304-.05789-.0655-.12035-.0884-.16149c-.0228-.03808-.0472-.07465-.0716-.11121l-.0396-.06246-.2118-.31383c-.0548-.07922-.1127-.15234-.1706-.2148l-.0807-.09598c-.139-.17453-.2919-.33755-.4571-.4875l-.0807-.0777c-.0754-.07432-.1569-.14211-.2438-.20261l-.067-.05028-.2437-.176714-.0579-.042657c-.0834-.06156-.1843-.094675-.288-.094453z",
						fill: "#fff"
					}))
				},
				c = e => {
					let {
						className: t
					} = e;
					return Object(r.e)(i.k) ? s.a.createElement(l, {
						className: t
					}) : s.a.createElement(a, {
						className: t
					})
				},
				l = e => {
					let {
						className: t
					} = e;
					return s.a.createElement("svg", {
						className: t,
						fill: "#000",
						xmlns: "http://www.w3.org/2000/svg",
						viewBox: "0 0 40 40",
						height: "40",
						width: "40"
					}, s.a.createElement("path", {
						fill: "#ffdce2",
						d: "M11.76,15.15c.91-19.36,7.94-9.23,8-.71"
					}), s.a.createElement("path", {
						d: "M19.8,14.44a8.73,8.73,0,0,1-.45-2.07,14,14,0,0,0-.79-2.82,20,20,0,0,0-1.71-3.19,5.07,5.07,0,0,0-1.11-1.18,1.22,1.22,0,0,0-.47-.2c-.11,0-.17,0-.28.11a2.27,2.27,0,0,0-.65.88,8.65,8.65,0,0,0-.53,1.32c-.29.94-.53,1.91-.72,2.85-.4,1.87-.71,3.62-1.06,5a8.26,8.26,0,0,1-.83-4.73A30,30,0,0,1,13,5.56a6.5,6.5,0,0,1,.68-1c.13-.16.32-.3.47-.45a2.23,2.23,0,0,1,.62-.3A1.73,1.73,0,0,1,16,3.89a3.23,3.23,0,0,1,.95.69A10.88,10.88,0,0,1,19.1,8a13.48,13.48,0,0,1,.9,3.33A9.87,9.87,0,0,1,19.8,14.44Z"
					}), s.a.createElement("path", {
						fill: "#ffdce2",
						d: "M31.58,11.79c-3.31-3.6-8.69-4.11-13.65-2.9-5.63,1.4-7.87,6.7-10.6,10.93C5.6,21.92,3.57,23.67,2.11,26c-2.82,4.11.11,10.29,5.22,11.11,4.86.78,6.84-2.16,9.1-2.71,7.74-1.87,14.39-5.19,16-9.73C33.35,20.6,32.16,15.94,31.58,11.79Z"
					}), s.a.createElement("path", {
						d: "M31.59,11.78a19.39,19.39,0,0,1,.6,2.63A45.81,45.81,0,0,1,33,20a18.12,18.12,0,0,1,0,3.29,9.38,9.38,0,0,1-.31,1.67c-.11.26-.21.52-.32.77l-.41.72a14.17,14.17,0,0,1-3.83,3.82,29.56,29.56,0,0,1-6.61,3.36c-1.18.46-2.4.84-3.64,1.2a17.58,17.58,0,0,0-1.72.51,12.05,12.05,0,0,0-1.56.88,11.7,11.7,0,0,1-3.72,1.68,9.47,9.47,0,0,1-4.17,0A8.55,8.55,0,0,1,.63,32.57,8.24,8.24,0,0,1,.06,29a7,7,0,0,1,1.13-3.45,32.4,32.4,0,0,1,4.12-5c.35-.37.69-.75,1-1.12l.21-.25L6.7,19l.4-.64c.54-.86,1.07-1.73,1.6-2.58A22.63,22.63,0,0,1,12.5,11a11.46,11.46,0,0,1,5.28-2.83,20.36,20.36,0,0,1,5.45-.45,14.1,14.1,0,0,1,4.92,1.18,10.62,10.62,0,0,1,3.64,2.74,12.11,12.11,0,0,0-3.94-2.05,15,15,0,0,0-5-.52,22,22,0,0,0-4.59.76,12.15,12.15,0,0,0-3,1.28,12.59,12.59,0,0,0-3.54,3.18,44.59,44.59,0,0,0-2.77,4l-.66,1-.33.51L7.88,20s-.07.11-.12.17l-.11.12c-.54.61-1.1,1.2-1.65,1.76a34.28,34.28,0,0,0-3,3.43,8.73,8.73,0,0,0-.62.92,4.17,4.17,0,0,0-.48.94,5.91,5.91,0,0,0-.44,2,7.32,7.32,0,0,0,4,6.63,7.71,7.71,0,0,0,3.78.76,8.15,8.15,0,0,0,3.59-1,19.91,19.91,0,0,1,3.47-1.83,50.13,50.13,0,0,0,6.86-2.26,24.52,24.52,0,0,0,5.74-3.3A10.83,10.83,0,0,0,31,26.17a4.09,4.09,0,0,0,.4-.62,2.84,2.84,0,0,0,.33-.65l.15-.33a.34.34,0,0,0,0-.12l0-.18c0-.24.11-.48.14-.72C32.79,19.85,31.58,13.09,31.59,11.78Z"
					}), s.a.createElement("path", {
						fill: "#f9a",
						d: "M15,33.5c-.06-.16.39-.71,1.08-1.17a15.64,15.64,0,0,1,2-1c1.64-.84,3.65-1.16,5.09-1.87a12.34,12.34,0,0,0,3.33-2.36,7.84,7.84,0,0,0,2-2.77,2.59,2.59,0,0,1,.44,2,2.84,2.84,0,0,1-.7,1.6,16.44,16.44,0,0,1-6.26,3.36c-1.95.55-3.56,1-4.89,1.48-.31.13-.76.25-1.16.39S15.07,33.45,15,33.5Z"
					}), s.a.createElement("path", {
						fill: "#6a5cff",
						d: "M16.82,8.12c9.76-1.89,17.3,3.72,16.34,8,5,0,8.71,6.76,4.08,11.49,4.43,5.08,1.94,10.32-4.3,11.6-4.37.89-8.32-.76-9.83-4-1.71-3.65,1.08-7.29,5.78-7.42-5.56-5.2,3.42-8.34-.58-16.55"
					}), s.a.createElement("path", {
						d: "M28.32,11.28a2.88,2.88,0,0,1,.36.62,5.92,5.92,0,0,1,.57,1.41A8.27,8.27,0,0,1,29.32,18c-.43,1.8-1.46,3.56-1.82,5.3a4,4,0,0,0,.31,2.41c.09.17.21.33.31.5a5.45,5.45,0,0,0,.57.72l1.22,1.28c-.94.08-1.81.19-2.58.33a6.13,6.13,0,0,0-2.77,1.56,4,4,0,0,0-1.2,2.74,4.69,4.69,0,0,0,1,2.92,6.42,6.42,0,0,0,2.53,2,9.53,9.53,0,0,0,6.62.3c2.16-.61,4.1-2,4.68-3.84a5.58,5.58,0,0,0-1-4.93,9,9,0,0,0-.59-.77l-.47-.6-.23-.3c-.08-.05,0-.1.05-.15l.12-.14L37,26.28a3.29,3.29,0,0,0,.38-.54,5.5,5.5,0,0,0,.87-2.38A5.24,5.24,0,0,0,38,20.88a5.67,5.67,0,0,0-1.29-2.13,5.58,5.58,0,0,0-2-1.35A5.68,5.68,0,0,0,33,17.09L32.32,17l-.17,0a.92.92,0,0,1,0-.16l0-.34a12.4,12.4,0,0,0,.1-1.27,5.77,5.77,0,0,0-2.43-3.86,13.29,13.29,0,0,0-4.27-2.25,19.73,19.73,0,0,0-8.71-.71,16.24,16.24,0,0,1,9.39-.59,13.49,13.49,0,0,1,4.61,2,7.82,7.82,0,0,1,2.62,2.84l.28.58.2.64a5.36,5.36,0,0,1,.2,1.34s-.08.11,0,.11a2.28,2.28,0,0,0,.49.15,7.13,7.13,0,0,1,3.83,2.69,7.49,7.49,0,0,1,1.45,4.22,7.13,7.13,0,0,1-1.18,4.13l-.29.44a3.51,3.51,0,0,1-.3.36l-.19.21-.09.1s.05.07.07.11l.43.57.53.86a7.58,7.58,0,0,1,1,3.88,5.83,5.83,0,0,1-1.44,3.62,8.16,8.16,0,0,1-3,2.2,11.93,11.93,0,0,1-7,.82,8,8,0,0,1-5.53-3.76,5.77,5.77,0,0,1-.81-3.25,5.11,5.11,0,0,1,1.27-3,6.56,6.56,0,0,1,2.58-1.81,6.13,6.13,0,0,1,.72-.25L27,27.5l.15,0a3.27,3.27,0,0,1,.62-.07,4,4,0,0,1-.46-.55l-.18-.28a2.77,2.77,0,0,1-.22-.37l-.29-.82a5.64,5.64,0,0,1,.23-3.18c.64-1.87,2.06-4,2.21-6.23a8.74,8.74,0,0,0-.19-3C28.66,12.2,28.41,11.59,28.32,11.28Z"
					}), s.a.createElement("path", {
						d: "M21.44,26c4.39-2,1-8.4-3.18-5.83C15,22.4,17.62,27.75,21.44,26Z"
					}), s.a.createElement("path", {
						d: "M21.44,26a2.7,2.7,0,0,1-1.81.47A3.26,3.26,0,0,1,18.2,26a4.74,4.74,0,0,1-.94-.83,3.7,3.7,0,0,1-.74-3.43,3.84,3.84,0,0,1,2.65-2.54,3.49,3.49,0,0,1,3.12.51,4.05,4.05,0,0,1,1.58,2.53,3.41,3.41,0,0,1-.58,2.61,3.64,3.64,0,0,1-1.79,1.27,5.15,5.15,0,0,0,1.21-1.71,4.21,4.21,0,0,0,.23-1.55A3.07,3.07,0,0,0,22.4,21a2.89,2.89,0,0,0-1.53-1.1A3.08,3.08,0,0,0,17.68,21,3,3,0,0,0,17.22,24,3.49,3.49,0,0,0,19,25.89a3.7,3.7,0,0,0,1.39.27h.37L21,26.1Z"
					}), s.a.createElement("path", {
						fill: "#f9a",
						d: "M10.33,26.53c-2.77-.86-3.6-1.91-2.94-3.47C.11,25.47.07,33.88,7.18,36.34,13,38.34,17.35,28.69,10.33,26.53Z"
					}), s.a.createElement("path", {
						fill: "#f9a",
						d: "M10.33,26.52a6,6,0,0,1,1.09.35,7.15,7.15,0,0,1,.93.56,6.61,6.61,0,0,1,.93.91A4.92,4.92,0,0,1,14.13,31,7,7,0,0,1,14,32.23c-.11.37-.17.72-.28,1a6.35,6.35,0,0,1-1.83,2.6A4.9,4.9,0,0,1,8.76,37,5.92,5.92,0,0,1,7,36.75c-.51-.22-1-.39-1.54-.66a8.58,8.58,0,0,1-1.39-.92A7.55,7.55,0,0,1,2.94,34a6.86,6.86,0,0,1-1.51-3.62,6.46,6.46,0,0,1,.74-3.72A7.73,7.73,0,0,1,4.53,24a14.66,14.66,0,0,1,1.41-.82l1-.36.58-.22A1.88,1.88,0,0,1,8,22.47a8.28,8.28,0,0,0-.48,1.43,1.39,1.39,0,0,0,.07.59,2.1,2.1,0,0,0,.76.89,8.54,8.54,0,0,0,2,1A6.6,6.6,0,0,1,8,25.7a2.26,2.26,0,0,1-1-1.14,1.91,1.91,0,0,1-.11-.41c0-.11,0-.31,0-.28s0-.06,0-.07-.07.05-.07.06h0L6.41,24c-.34.18-.61.36-.83.46A6.81,6.81,0,0,0,2.8,27.22a5.82,5.82,0,0,0-.57,3.67A6,6,0,0,0,3.86,34a7.78,7.78,0,0,0,2.82,1.87,4.54,4.54,0,0,0,5.47-1.18,5.69,5.69,0,0,0,1.3-2.36,6.17,6.17,0,0,0,.22-1.26,4.91,4.91,0,0,0-.14-1.22,4.13,4.13,0,0,0-1.43-2.31l-.54-.42a3.12,3.12,0,0,0-.53-.29Z"
					}), s.a.createElement("path", {
						d: "M33,34.05c-.07-.07,0-.48.1-.95a3.82,3.82,0,0,0-.05-1.3,4.28,4.28,0,0,0-1.77-2.53,5.16,5.16,0,0,0-2.41-.83,8.67,8.67,0,0,0-2.22.13,2.56,2.56,0,0,1,2-1.06,6.24,6.24,0,0,1,3.93,2,4.58,4.58,0,0,1,.9,1.6,4.07,4.07,0,0,1,.11,1.61A3.53,3.53,0,0,1,33,34.05Z"
					}), s.a.createElement("path", {
						d: "M11.6,31.34a1.52,1.52,0,0,1-.23,1.17,3.33,3.33,0,0,1-.61.73c-.24.18-.45.38-.61.48a7.05,7.05,0,0,1-4.23,1,6.93,6.93,0,0,1-3.47-1.08A4.36,4.36,0,0,1,.63,31.32c.42.19.81.51,1.24.7s.77.38.9.56A5.23,5.23,0,0,0,5,33.78a6.76,6.76,0,0,0,2.3.15,5.93,5.93,0,0,0,3.37-1.35,4.62,4.62,0,0,0,.61-.63C11.43,31.69,11.55,31.43,11.6,31.34Z"
					}), s.a.createElement("path", {
						fill: "#ffdce2",
						d: "M19.92,15.9c.32-15.81,8.82-12.13,9.16-.18"
					}), s.a.createElement("path", {
						d: "M29.07,15.72a6.88,6.88,0,0,1-.46-2.09,13.82,13.82,0,0,0-.76-2.86,14.36,14.36,0,0,0-1.77-3.13c-.71-.94-1.71-1.52-2.28-1.24a3.32,3.32,0,0,0-1.53,1.77,15,15,0,0,0-.95,2.71c-.49,1.85-.78,3.61-1.1,5a7.42,7.42,0,0,1-.89-4.82,16,16,0,0,1,2.33-4.8A3.25,3.25,0,0,1,23.87,5a3.11,3.11,0,0,1,2.25.82,8.85,8.85,0,0,1,2.32,3.38,12.2,12.2,0,0,1,.87,3.39A11.14,11.14,0,0,1,29.07,15.72Z"
					}), s.a.createElement("path", {
						d: "M6.75,30.09a1,1,0,1,0,.06-2C5.64,28.27,5.51,30,6.75,30.09Z"
					}), s.a.createElement("path", {
						d: "M6.75,30.1A.74.74,0,0,1,6.19,30a1,1,0,0,1-.41-.73,1.19,1.19,0,0,1,.36-1,1.24,1.24,0,0,1,1.12-.3,1.08,1.08,0,0,1,.75.67,1.32,1.32,0,0,1,0,.94,1,1,0,0,1-.58.6,1.06,1.06,0,0,1-.68,0,1.6,1.6,0,0,0,.57-.28,1.6,1.6,0,0,0,.28-.36.93.93,0,0,0,0-1.08.85.85,0,0,0-1-.19,1,1,0,0,0-.45,1.45C6.23,29.91,6.65,30.08,6.75,30.1Z"
					}), s.a.createElement("path", {
						d: "M2.09,28.69c1.06-.05,1.47-2.36.39-2C1.59,27.11,1.2,28.85,2.09,28.69Z"
					}), s.a.createElement("path", {
						d: "M2.09,28.69a.32.32,0,0,1-.16,0,.37.37,0,0,1-.3-.17,1.1,1.1,0,0,1-.06-.7A1.82,1.82,0,0,1,1.94,27a1,1,0,0,1,.85-.44.47.47,0,0,1,.37.29.88.88,0,0,1,.08.41,1.92,1.92,0,0,1-.19.73,1.13,1.13,0,0,1-1,.72A1.46,1.46,0,0,0,2.78,28,1.34,1.34,0,0,0,3,27c-.08-.38-.54-.28-.74-.08a1.73,1.73,0,0,0-.62,1.4.37.37,0,0,0,.16.31A.45.45,0,0,0,2.09,28.69Z"
					}), s.a.createElement("circle", {
						fill: "#19f2c8",
						cx: "20.51",
						cy: "23.28",
						r: "2.04"
					}), s.a.createElement("path", {
						fill: "#19f2c8",
						d: "M22.55,23.28a2.72,2.72,0,0,0-.35-1A1.89,1.89,0,0,0,21,21.4a2,2,0,0,0-1.74.49,1.87,1.87,0,0,0-.56,1.69,1.91,1.91,0,0,0,2.25,1.51,2,2,0,0,0,1.56-1.81,1.81,1.81,0,0,1-.23,1.29,1.84,1.84,0,0,1-.94.78,2.22,2.22,0,0,1-2.5-.78,2.14,2.14,0,0,1,1.49-3.43,2.1,2.1,0,0,1,1.7.61,2,2,0,0,1,.47.85A2.09,2.09,0,0,1,22.55,23.28Z"
					}), s.a.createElement("circle", {
						fill: "#fff",
						cx: "18.9",
						cy: "21.87",
						r: "1.31"
					}), s.a.createElement("path", {
						fill: "#fff",
						d: "M20.21,21.87a2.75,2.75,0,0,0-.25-.65,1.17,1.17,0,0,0-.77-.52,1.22,1.22,0,0,0-1.06.32,1.15,1.15,0,0,0-.34,1,1.18,1.18,0,0,0,1.37.92,1.28,1.28,0,0,0,1-1.11,1.05,1.05,0,0,1-.08.87,1.21,1.21,0,0,1-.62.54,1.52,1.52,0,0,1-1.66-.55,1.44,1.44,0,0,1-.13-1.5,1.42,1.42,0,0,1,1.11-.77,1.34,1.34,0,0,1,1.12.41,1.26,1.26,0,0,1,.3.56A1.41,1.41,0,0,1,20.21,21.87Z"
					}), s.a.createElement("path", {
						fill: "#f9a",
						d: "M26,16.18c-1.46,1-4.82.41-5.26-1.56s.44-6.22,1.55-6.74C23.78,7.2,27.18,15.35,26,16.18Z"
					}), s.a.createElement("path", {
						d: "M26,16.17a1.08,1.08,0,0,0,.13-.59A5.5,5.5,0,0,0,26,14.27a13.67,13.67,0,0,0-1-2.63,14.42,14.42,0,0,0-1.87-3,1.41,1.41,0,0,0-.54-.41s0,0-.08,0-.14.14-.21.23a5.79,5.79,0,0,0-.64,1.52A13.35,13.35,0,0,0,21.16,13a6.94,6.94,0,0,0,.05,1.38,1.75,1.75,0,0,0,.51,1,3.86,3.86,0,0,0,2.16.95A3.71,3.71,0,0,0,26,16.06a3,3,0,0,1-2.21.92,3.5,3.5,0,0,1-2.17-.56,3.09,3.09,0,0,1-.94-1.09A3.12,3.12,0,0,1,20.37,14a11.14,11.14,0,0,1,.19-2.35,13.82,13.82,0,0,1,.53-2.13,6.53,6.53,0,0,1,.41-1,2.11,2.11,0,0,1,.72-.84.75.75,0,0,1,.64,0,1.88,1.88,0,0,1,.45.31,4.87,4.87,0,0,1,.65.73,12.72,12.72,0,0,1,.94,1.54,15.23,15.23,0,0,1,1.21,3,6.67,6.67,0,0,1,.26,1.7,2.64,2.64,0,0,1-.08.78A.63.63,0,0,1,26,16.17Z"
					}), s.a.createElement("path", {
						fill: "#94b3ff",
						d: "M33.47,23.09a.89.89,0,0,1-.11-.3l-.06-.26,0-.14,0-.08-.07.05a6.76,6.76,0,0,0-.63.52,6.62,6.62,0,0,0-.72.77l-.13.16-.13-.17a1.25,1.25,0,0,1-.19-1.07l.08-.32,0-.17s0-.18-.06-.16l-.23.15-.26.2a6.3,6.3,0,0,0-.83.72,2.56,2.56,0,0,0-.58.83c-.1.3-.08.46.11.63L29,25a2.77,2.77,0,0,1-.61-2.35,12.57,12.57,0,0,1,1.14-3,14,14,0,0,0,1-2.64,5.72,5.72,0,0,0,0-2.47c-.1-.38-.24-.73-.36-1.08l-.51-.93a8.88,8.88,0,0,1,.82.76,5.83,5.83,0,0,1,.68,1.14,4.33,4.33,0,0,1,.31,1.24,2.53,2.53,0,0,1,0,.94A17.5,17.5,0,0,1,29.71,21,7.05,7.05,0,0,0,29,22.94a2.13,2.13,0,0,0,.48,1.69l-.27.27a1.13,1.13,0,0,1-.35-.66,1.21,1.21,0,0,1,.12-.71,3.69,3.69,0,0,1,.75-1,7.86,7.86,0,0,1,.91-.75,5.41,5.41,0,0,1,.64-.38c.24-.13.45-.21.7-.32.07,0,0,.25.06.34a2.16,2.16,0,0,1,0,.36,4.34,4.34,0,0,1-.2.79.94.94,0,0,0,0,.83h-.39l.17-.19a6.25,6.25,0,0,1,1.49-1.12l.21-.11c0-.05,0,.05,0,.08v.12l0,.43Z"
					}), s.a.createElement("path", {
						fill: "#94b3ff",
						d: "M27.44,35.4a1.55,1.55,0,0,1-.47-.64,3,3,0,0,1-.23-.68,2.52,2.52,0,0,1-.06-.52l0-.25s0-.11,0-.08l-.1.1a1.38,1.38,0,0,0-.26.39,1.3,1.3,0,0,0-.12.4,2.49,2.49,0,0,0-.08.72,2.42,2.42,0,0,0,.44,1.36l-.56.55a3.74,3.74,0,0,1-1.55-2.34,4.67,4.67,0,0,1,2.14-4.55,4,4,0,0,1,4-.37c-.28,0-.59,0-.9.05a4.93,4.93,0,0,0-.94.21,8.29,8.29,0,0,0-1.35.61,4.13,4.13,0,0,0-2.34,3,3,3,0,0,0,1.28,2.95l-.28.28a3,3,0,0,1-.36-2.69,2.88,2.88,0,0,1,.88-1.29l.26-.22.14-.11c.05,0,.1-.08.08,0s0,.13.14.13h.05a3.9,3.9,0,0,0-.16,2.21A3.41,3.41,0,0,0,27.44,35.4Z"
					}), s.a.createElement("path", {
						fill: "#493ac1",
						d: "M28.06,37.14a11.11,11.11,0,0,0,1.27.18,10.21,10.21,0,0,0,1.84-.17,11.56,11.56,0,0,0,2.17-.61,6.25,6.25,0,0,0,1.79-1.22,4.49,4.49,0,0,0,1.16-3,5.57,5.57,0,0,0-.53-2.88,2.17,2.17,0,0,1,1.47,1,2.51,2.51,0,0,1,.52,1.45,7.52,7.52,0,0,1-1,3.29,4.4,4.4,0,0,1-1.05,1.13,9.61,9.61,0,0,1-1.16.8,6.9,6.9,0,0,1-2.43.81A11.52,11.52,0,0,1,29.9,38a3,3,0,0,1-1.16-.31A1.74,1.74,0,0,1,28.06,37.14Z"
					}), s.a.createElement("path", {
						fill: "#493ac1",
						d: "M33.09,26.76c0-.13.41-.15.79-.21a2,2,0,0,0,1-.34,3.49,3.49,0,0,0,.44-.41c.12-.13.21-.31.34-.48a3.58,3.58,0,0,0,.46-1.1,8.75,8.75,0,0,0-.18-3.77c.82,0,1.72.82,1.68,1.24a8.14,8.14,0,0,1-.88,3.8,3.82,3.82,0,0,1-1.05,1.24,2.52,2.52,0,0,1-1.37.44A2.49,2.49,0,0,1,33.09,26.76Z"
					}), s.a.createElement("path", {
						fill: "#fff8b8",
						d: "M2.29.57C0,2,5.89,16.92,8,19.08c2.8,1.55,7.52-.47,7.38-3.83S3.9-2.36,2.29.57Z"
					}), s.a.createElement("path", {
						d: "M2.27.56A.46.46,0,0,1,2.33.4.49.49,0,0,1,2.56.15a1.27,1.27,0,0,1,1.07,0A8.53,8.53,0,0,1,6.2,1.76a48.61,48.61,0,0,1,4.41,4.49,35.05,35.05,0,0,1,4.79,6.5,7.42,7.42,0,0,1,.83,2.15,4.29,4.29,0,0,1-.42,2.51,6,6,0,0,1-3.61,2.86,6.27,6.27,0,0,1-4,0L7.73,20a1.74,1.74,0,0,1-.35-.19l-.27-.3a8.55,8.55,0,0,1-.57-.79c-.33-.51-.6-1-.87-1.53a47.33,47.33,0,0,1-2.5-6A40,40,0,0,1,1.63,5.49a16.66,16.66,0,0,1-.3-2.67,5.66,5.66,0,0,1,.1-1.3A1.65,1.65,0,0,1,2.14.32a1.41,1.41,0,0,0-.31,1.21,6.29,6.29,0,0,0,.26,1.23c.24.84.56,1.72.89,2.57C3.63,7,4.29,8.6,4.52,9.47a46.46,46.46,0,0,0,1.64,5c.31.79.65,1.57,1,2.31.18.37.37.72.57,1.07.1.16.2.34.31.49s.11.16.17.22.06.1.11.13c2.53,1.36,6.38-.38,6.65-3V15.3a1.75,1.75,0,0,0-.07-.44,5.61,5.61,0,0,0-.34-.91,16.41,16.41,0,0,0-.95-1.75C13,11.08,12.2,10,11.46,9,10,7.06,8.48,5.29,7,3.69A32.32,32.32,0,0,0,4.48,1.12,4,4,0,0,0,3.13.3.77.77,0,0,0,2.27.56Z"
					}), s.a.createElement("path", {
						fill: "#ccffef",
						d: "M10.69,11.08a4.78,4.78,0,0,1-5,2.21c.85,2.93,2.21,5.84,3.6,6.41,2,.82,6.16-.77,6.05-4.37-.05-1.53-2.15-4.85-4-6.41a3.06,3.06,0,0,1-1.36,3"
					}), s.a.createElement("path", {
						d: "M10,11.89a4,4,0,0,0,.7-.78,3.28,3.28,0,0,0,.46-2.47c0-.16.22.08.38.21l.5.46c.37.36.54.56.77.82.43.49.79,1,1.06,1.31a13.15,13.15,0,0,1,1.36,2.22A5.79,5.79,0,0,1,15.66,15a3.73,3.73,0,0,1,0,.74,3.55,3.55,0,0,1-.08.73A4.5,4.5,0,0,1,14.15,19a5.93,5.93,0,0,1-2.51,1.3A4.13,4.13,0,0,1,8.71,20a5.88,5.88,0,0,1-1.77-2.14,15.31,15.31,0,0,1-1-2.29c-.14-.38-.26-.75-.37-1.12l-.23-.78-.26-.94c.27.06.53.13.8.17l.39.07a.58.58,0,0,0,.18,0h.1a3.55,3.55,0,0,0,.73,0,4.65,4.65,0,0,0,1.36-.39,5.37,5.37,0,0,0,2-1.6,4.48,4.48,0,0,1-2,2.32A4.31,4.31,0,0,1,7,13.86a2.56,2.56,0,0,1-.39,0H6.36s0,0,0,.08l.11.43c.08.28.16.56.25.83q.27.83.6,1.59a6.17,6.17,0,0,0,1.8,2.54,3.65,3.65,0,0,0,2.83.07,4.85,4.85,0,0,0,2.28-1.55,3.81,3.81,0,0,0,.81-2.38,5.26,5.26,0,0,0-.75-2.28,17.47,17.47,0,0,0-1.26-2c-.22-.3-.45-.6-.68-.88s-.23-.27-.35-.41l-.2-.23-.17-.17-.1-.11s0,0,0,.07a1.84,1.84,0,0,1-.14.64,2.93,2.93,0,0,1-.46.9A2.48,2.48,0,0,1,10,11.89Z"
					}), s.a.createElement("path", {
						fill: "#19f2c8",
						d: "M8.57,5.17c.14,2.42-2.75,3.95-4.8,3.76.61,1.47,1.56,6,3.36,5.89,2.38,0,5.54-1.7,5.25-4.6A17.52,17.52,0,0,0,8.44,5.46"
					}), s.a.createElement("path", {
						d: "M8.45,5.46A6.8,6.8,0,0,1,10.32,7,23.61,23.61,0,0,1,12.46,9.8c.06.1.27.33.23.56a3.26,3.26,0,0,1,0,.54,4,4,0,0,1-.2,1.08,4.35,4.35,0,0,1-1.29,1.84,6.37,6.37,0,0,1-4.11,1.54h.06a3,3,0,0,1-.53,0,3.14,3.14,0,0,1-.46-.18,3.81,3.81,0,0,1-1.27-1.48,11.83,11.83,0,0,1-.68-1.57c-.19-.52-.35-1-.51-1.54L3.5,9.77,3,8.37c.33,0,.68.05,1,0h.45c.18,0,.17,0,.27,0a4.7,4.7,0,0,0,.83-.17A4.79,4.79,0,0,0,7,7.54,3.1,3.1,0,0,0,8.41,5.18a2.4,2.4,0,0,1,.08,1.33A3.33,3.33,0,0,1,7.72,8,4.42,4.42,0,0,1,5.4,9.34c-.15,0-.29.05-.44.06H4.61L4.4,9.37s0,.05,0,.09a1.75,1.75,0,0,0,0,.25l.25.91a17.49,17.49,0,0,0,.54,1.73A6.71,6.71,0,0,0,6,13.84a1.42,1.42,0,0,0,1.12.76h0a5.26,5.26,0,0,0,4.57-2.48A3.1,3.1,0,0,0,12.05,11a2.72,2.72,0,0,0,0-.57c0-.1,0-.12,0-.17L11.9,10c-.4-.67-.83-1.29-1.25-1.87A27.49,27.49,0,0,0,8.45,5.46Z"
					}), s.a.createElement("path", {
						fill: "#fff",
						d: "M3.3,2.08A31.85,31.85,0,0,1,4.72,5.57c.7,1.64,1.36,3.56,2,5.26a47.44,47.44,0,0,0,3.47,7.56A5.89,5.89,0,0,1,7.76,15.9c-1-2.49-1.65-4.65-2.35-6.56s-1.28-3.56-1.69-5A19.92,19.92,0,0,1,3.3,2.08Z"
					}), s.a.createElement("path", {
						fill: "#6a5cff",
						d: "M20.72,8c-12.86-4.26-7.25,10.38.19,7.55-1.23-1.74-.58-5.59-.18-7.17"
					}), s.a.createElement("path", {
						d: "M20.74,8.4a16.52,16.52,0,0,1-.19,2.41,9.2,9.2,0,0,0,.22,3.3,2.47,2.47,0,0,0,.1.29l.06.14a1.76,1.76,0,0,0,.09.21,12.51,12.51,0,0,0,.67,1.1,10.52,10.52,0,0,1-1.3.49c-.11,0-.25.06-.37.09l-.27.06a4,4,0,0,1-.5.06,5.26,5.26,0,0,1-2.08-.2,7,7,0,0,1-3.39-2.27,6.31,6.31,0,0,1-1.55-3.87,3.51,3.51,0,0,1,.66-2.16,3.44,3.44,0,0,1,1.78-1.23,6.69,6.69,0,0,1,3.48,0,12.83,12.83,0,0,1,2.64,1c-.81.11-1.91.07-2.89.14s-1.81.15-2.21.2a2.36,2.36,0,0,0-1.61.62,2.2,2.2,0,0,0-.58,1.62A5.25,5.25,0,0,0,15,13.73a5.46,5.46,0,0,0,2.89,1.7,4.79,4.79,0,0,0,1.55.08,2.29,2.29,0,0,0,.36-.07l.21,0c.1-.06.28-.07.29-.15a2.12,2.12,0,0,1-.12-.2,1.34,1.34,0,0,1-.11-.31,5.39,5.39,0,0,1-.22-1,9.32,9.32,0,0,1,0-1.9A11.43,11.43,0,0,1,20.74,8.4Z"
					}), s.a.createElement("path", {
						fill: "#94b3ff",
						d: "M17.76,12.22c-.08,0-.17-.4-.36-.73,0-.05-.07,0,0-.08s0,.05,0,.07a2.47,2.47,0,0,0-.21.36l-.41.85-.08,0a1.77,1.77,0,0,1-.58-1,2.63,2.63,0,0,1,.05-1.39l.49.51a1.81,1.81,0,0,0-.41.23l0,0a.36.36,0,0,0-.11.1,1,1,0,0,0-.2.27,11.84,11.84,0,0,0-.49,1.4l-.18-.33-.08-.14h0L15,12.27,14.93,12a2.4,2.4,0,0,1-.29-1,1.92,1.92,0,0,1,.06-.62,1.81,1.81,0,0,1,.2-.54,2.45,2.45,0,0,1,.52-.62,3.09,3.09,0,0,1,2.39-.62c-.28.21-.67.4-1,.62s-.55.4-.69.48a1.51,1.51,0,0,0-.57.46c-.08.12-.1.13-.14.2a.77.77,0,0,0-.07.2,1,1,0,0,0,.05.5c0,.07,0,0,0,0l0-.09a1.18,1.18,0,0,1,.11-.19,1.11,1.11,0,0,1,.29-.28,2.53,2.53,0,0,1,.54-.28l.37-.14-.13.39a1.94,1.94,0,0,0-.06.86,1.13,1.13,0,0,0,.08.22.41.41,0,0,0,0,.09s0,0,.06-.07a1.67,1.67,0,0,1,.18-.28.46.46,0,0,1,.11-.12.56.56,0,0,1,.14-.1.32.32,0,0,1,.27,0c.24.21.19.35.23.49A3.65,3.65,0,0,1,17.76,12.22Z"
					}))
				}
		},
		"./src/reddit/components/Econ/Prediction/hooks/useTournamentsQuery.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return l
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./src/reddit/actions/economics/predictions/index.ts"),
				a = n("./src/reddit/selectors/features/predictions/tournaments/index.ts"),
				c = n("./src/reddit/selectors/subreddit.ts");

			function l(e) {
				const t = Object(r.d)(),
					n = Object(r.e)(t => Object(c.X)(t, {
						subredditId: e
					})),
					o = Object(r.e)(t => Object(a.i)(t, {
						subredditId: e
					})),
					l = Object(r.e)(t => Object(a.k)(t, {
						subredditId: e
					})),
					d = s.a.useCallback(() => {
						n.name && t(Object(i.l)(n.name))
					}, [n.name, t]);
				return s.a.useEffect(() => {
					l || o || d()
				}, [l, o, d]), {
					isFetching: l,
					isFetched: o,
					fetch: d
				}
			}
		},
		"./src/reddit/components/Econ/Prediction/themes.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./src/config.ts");
			const s = {
				theme_1: `url(${o.a.assetPath}/img/econ/predictions/theme1.png)`,
				theme_2: `url(${o.a.assetPath}/img/econ/predictions/theme2.png)`,
				theme_3: "linear-gradient(104.49deg, #279A63 7.96%, #B6C048 119.75%)",
				theme_4: "linear-gradient(91.64deg, #F5AC1F -10.49%, #FC7519 52.61%)",
				theme_5: `url(${o.a.assetPath}/img/econ/predictions/theme5.png)`,
				theme_6: `url(${o.a.assetPath}/img/econ/predictions/theme6.png)`,
				theme_7: `url(${o.a.assetPath}/img/econ/predictions/theme7.png)`,
				theme_8: `url(${o.a.assetPath}/img/econ/predictions/theme8.png)`
			}
		},
		"./src/reddit/components/Econ/Tournament/Sidebar/HowItWorks/Content.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return d
			}));
			var o = n("./src/config.ts"),
				s = n("./node_modules/fbt/lib/FbtPublic.js"),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/reddit/components/Econ/Tournament/Sidebar/HowItWorks/index.m.less"),
				l = n.n(c);
			const d = e => {
				let {
					steps: t,
					withModalStyles: n
				} = e;
				return i.a.createElement(i.a.Fragment, null, i.a.createElement("div", {
					className: Object(a.a)(l.a.banner, {
						[l.a.withModalStyles]: n
					})
				}, i.a.createElement("div", {
					className: l.a.header
				}, i.a.createElement("h2", null, i.a.createElement("span", {
					className: l.a.subHeader
				}, s.fbt._("Predictions", null, {
					hk: "ACRaq"
				})), s.fbt._("How It Works", null, {
					hk: "3QW4EZ"
				})), i.a.createElement("img", {
					alt: s.fbt._("Snoos gathered around a dark ball", null, {
						hk: "2sN6dD"
					}),
					className: l.a.bannerImage,
					src: `${o.a.assetPath}/img/econ/predictions/predictor_snoos_small.png`
				})), i.a.createElement("div", {
					className: l.a.innerCircle
				}), i.a.createElement("div", {
					className: l.a.middleCircle
				}), i.a.createElement("div", {
					className: l.a.outerCircle
				})), i.a.createElement("div", {
					className: Object(a.a)(l.a.stepsWrapper, {
						[l.a.withModalStyles]: n
					})
				}, t.map((e, n) => {
					let {
						title: o,
						description: s
					} = e;
					return i.a.createElement("div", {
						key: o,
						className: l.a.step
					}, i.a.createElement("div", {
						className: Object(a.a)(l.a.stepCount, {
							[l.a.showConnectingLine]: n !== t.length - 1
						})
					}, i.a.createElement("span", {
						className: l.a.stepNumber
					}, n + 1)), i.a.createElement("div", null, i.a.createElement("h3", {
						className: l.a.stepTitle
					}, o), i.a.createElement("p", {
						className: l.a.stepDescription
					}, s)))
				})))
			}
		},
		"./src/reddit/components/Econ/Tournament/Sidebar/HowItWorks/index.m.less": function(e, t, n) {
			e.exports = {
				widget: "_2skejWRT1rfgG6BplBSilb",
				banner: "_3Vuq-pvkzBHvhhc3OpN8CM",
				bannerImage: "_2GFV0XwSqv5Tr7PgZrRhVJ",
				withModalStyles: "_1RCK5xRisccYHWg1jiIoGb",
				circle: "_2016VIWG6bI8Nj8dsE4ypu",
				innerCircle: "_3j7kvNb-J6NJvKhocXhFpj",
				middleCircle: "_2m_eeq88Ifrg139rZyFFXk",
				outerCircle: "_3Ylo3qve0XxZ8mD9a2f841",
				header: "_2uBF46oc23WTMTLsgZkvHK",
				subHeader: "_2B5e_YXlIHTvceClBKv1h7",
				stepsWrapper: "_1A39M70HpOpbB2VfD7JRbq",
				step: "_1Z2_r-1ZgxI_OPxZQClct5",
				stepCount: "_2HWLDJDxl7OJmP4RsXqD9G",
				showConnectingLine: "_2XjaqnXdYZD-Z3ebpnuijI",
				stepNumber: "_39kWugzptUpQdvLWvfg7p6",
				stepTitle: "_1sgBe74lmm4Ril3sKb2nVU",
				stepDescription: "Utf73H7YpNoys-kCKEC6r",
				learnMoreWrapper: "_2KfRiOpMkVmGl6pasDgDj",
				learnMoreButton: "_3sIJNS0bEKk48Q-RSRYaUB"
			}
		},
		"./src/reddit/components/FlairPickerTitle/index.m.less": function(e, t, n) {
			e.exports = {
				modalHeader: "_26bOTAKvGixX5tMC3vGfTv"
			}
		},
		"./src/reddit/components/FlairPickerTitle/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/lodash/noop.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/reddit/components/ModalStyledComponents/index.tsx"),
				c = n("./src/reddit/controls/TextButton/index.tsx"),
				l = n("./src/reddit/components/FlairPickerTitle/index.m.less"),
				d = n.n(l);
			t.a = e => i.a.createElement(a.i, {
				className: d.a.modalHeader
			}, i.a.createElement(a.q, null, e.title), i.a.createElement(c.a, {
				onClick: e.onClosePressed || s.a
			}, i.a.createElement(a.b, null)))
		},
		"./src/reddit/components/FlairPickerWrapper/index.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "_3nRJIwLuth2pKYrXnr2jPN",
				wrapper: "_3nRJIwLuth2pKYrXnr2jPN"
			}
		},
		"./src/reddit/components/FlairPickerWrapper/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/components/FlairPickerWrapper/index.m.less"),
				r = n.n(s);
			const i = o.a.div("Wrapper", r.a);
			t.a = i
		},
		"./src/reddit/components/FlairPreview/index.m.less": function(e, t, n) {
			e.exports = {
				Placeholder: "_30zvTaAcvBFmwfelq6Bvwg",
				placeholder: "_30zvTaAcvBFmwfelq6Bvwg",
				SelectedFlair: "BzonfS85jX2JTiu_i0Jyd",
				selectedFlair: "BzonfS85jX2JTiu_i0Jyd",
				FlairComponent: "vynkb69RQyUY-PA6bCaW0",
				flairComponent: "vynkb69RQyUY-PA6bCaW0"
			}
		},
		"./src/reddit/components/FlairPreview/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/components/Flair/index.tsx"),
				c = n("./src/reddit/components/FlairPreview/index.m.less"),
				l = n.n(c);
			const d = i.a.span("Placeholder", l.a),
				u = i.a.div("SelectedFlair", l.a),
				p = i.a.wrapped(a.c, "FlairComponent", l.a);
			t.a = e => e.flair ? r.a.createElement(u, null, r.a.createElement(d, null, o.fbt._("{placeholder}", [o.fbt._param("placeholder", e.placeholderText)], {
				hk: "4G6VRy"
			})), r.a.createElement(p, {
				flair: e.flair,
				forceSmallEmojis: !0
			})) : r.a.createElement(u, null, o.fbt._("No flair selected", null, {
				hk: "1XPXbv"
			}))
		},
		"./src/reddit/components/FlairSearch/FlairEdit/helper.m.less": function(e, t, n) {
			e.exports = {
				FlairEditStub: "Z7x0t_45z9vZGN2zw6US6",
				flairEditStub: "Z7x0t_45z9vZGN2zw6US6",
				isCompact: "_3YjPWOd9tK9O_DN50RI_FN"
			}
		},
		"./src/reddit/components/FlairSearch/FlairEdit/helper.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return h
			}));
			var o = n("./node_modules/lodash/once.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/higherOrderComponents/makeAsync.tsx"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/lib/lessComponent.tsx"),
				d = n("./src/lib/loadWithRetries/index.ts"),
				u = n("./src/reddit/components/FlairSearch/FlairEdit/helper.m.less"),
				p = n.n(u);
			const m = l.a.wrapped(e => i.a.createElement("div", {
					className: Object(c.a)(e.className, {
						[p.a.isCompact]: e.isCompact
					})
				}), "FlairEditStub", p.a),
				h = s()((function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : m;
					return Object(a.a)({
						getComponent: () => Object(d.a)(() => Promise.all([n.e("vendors~ChatMessageInput~FlairEdit~MembershipPaywallPage~PostCreation~RichTextEditor"), n.e("FlairEdit")]).then(n.bind(null, "./src/reddit/components/FlairSearch/FlairEdit/index.tsx")).then(e => e.default)),
						ErrorComponent: e,
						LoadingComponent: e
					})
				}))
		},
		"./src/reddit/components/FlairSearch/FlairTemplateList/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_1bdAduczElF9-gLoCvHz-p",
				flairComponent: "_2leID3tMN8hpvVd4XhEqTl",
				radioOption: "FJIE5E2gciCA8q3Jzvcyg",
				pencil: "_3H_wwe03-Fkrm6oWGakXI8",
				searchBoxWrapper: "_18cuM8Uu7RcIFu1bCT0r4t",
				searchIcon: "_2bECVWL_WJ9RGBx7-RnzfO",
				searchInput: "_1nQbRaoAvb6Uy0oI-OfDtZ"
			}
		},
		"./src/reddit/components/FlairSearch/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_2AKP6aCod0Z6TuXXfc1ZqL",
				buttonsRow: "_3w7b_fPwMuVD17J7epjTXi",
				clearButton: "_3WykjMvdVO5xibqd5xlfTC",
				flairEditSection: "SVd7IxchgiWetdYbftTHx",
				editLabel: "KTa3kg9lzGPUeLuhAHMT_",
				restrictionHintText: "_1fV9kJfKnED9qQ2AF8f3iT"
			}
		},
		"./src/reddit/components/FlairSearch/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/lib/memoizeByReference/index.ts"),
				d = n("./src/reddit/featureFlags/index.ts"),
				u = n("./src/reddit/helpers/flair.ts"),
				p = n("./src/reddit/helpers/trackers/userFlair.ts"),
				m = n("./src/reddit/hooks/useTracking.ts"),
				h = n("./src/reddit/selectors/moderatorPermissions.ts"),
				b = n("./src/reddit/components/FlairSearch/FlairEdit/helper.tsx"),
				f = n("./src/reddit/components/Flair/index.tsx"),
				g = n("./src/reddit/components/TrackingHelper/index.tsx"),
				v = n("./src/reddit/controls/RadioInput/index.tsx"),
				x = n("./src/reddit/controls/RadioInput/RadioOption/index.tsx"),
				C = n("./src/reddit/helpers/trackers/postComposer.ts"),
				E = n("./src/reddit/icons/svgs/Pencil/index.tsx"),
				y = n("./src/reddit/icons/svgs/Search/index.tsx"),
				O = n("./src/reddit/components/FlairSearch/FlairTemplateList/index.m.less"),
				k = n.n(O);
			class _ extends r.a.Component {
				constructor() {
					super(...arguments), this.state = {
						searchQuery: ""
					}, this.onSearchChange = e => {
						this.setState({
							searchQuery: e.target.value
						})
					}, this.onSearchClick = () => {
						this.props.sendEvent(Object(C.n)())
					}
				}
				render() {
					const {
						templates: e,
						templateIds: t,
						selectedTemplateId: n
					} = this.props, {
						searchQuery: s
					} = this.state, i = t.map(t => e[t]).filter(e => e.text.toLowerCase().includes(s)), a = !!n && i.some(e => e.id === n);
					return r.a.createElement("div", {
						className: k.a.container
					}, r.a.createElement("div", {
						className: k.a.searchBoxWrapper
					}, r.a.createElement("input", {
						className: k.a.searchInput,
						onChange: this.onSearchChange,
						onClick: this.onSearchClick,
						type: "text",
						placeholder: o.fbt._("Search for flair", null, {
							hk: "jQdqA"
						}),
						value: s
					}), r.a.createElement(y.a, {
						className: k.a.searchIcon
					})), r.a.createElement(v.a, {
						name: "flair_picker",
						onChange: this.props.onChange,
						value: n
					}, i.map((e, t) => {
						const o = Object(u.c)(e),
							s = n === e.id || !a && 0 === t;
						return r.a.createElement(x.a, {
							className: k.a.radioOption,
							key: e.id,
							showButton: !0,
							tabIndex: s ? 0 : -1,
							value: e.id
						}, r.a.createElement(f.c, {
							className: k.a.flairComponent,
							flair: o,
							forceSmallEmojis: !0
						}), e.textEditable && r.a.createElement(E.a, {
							className: k.a.pencil
						}))
					})))
				}
			}
			var j = Object(g.c)(_),
				S = n("./src/reddit/components/FlairSearch/index.m.less"),
				T = n.n(S);
			const w = Object(l.a)(e => e && Object(u.c)(e)),
				I = Object(a.c)({
					areFlairRestrictionsEnabled: d.d.flairRestrictions,
					isModerator: h.g
				}),
				P = Object(i.b)(I);
			t.a = P(e => {
				const {
					flairTemplateType: t,
					flair: n,
					className: s,
					onChange: i,
					subredditId: a,
					templates: l,
					templateIds: d,
					areFlairRestrictionsEnabled: h,
					isModerator: f
				} = e, g = Object(m.a)(), v = l && n && n.templateId && l[n.templateId] || void 0, x = Object(b.a)(), C = n || w(v);
				return r.a.createElement("div", {
					className: Object(c.a)(s, T.a.container)
				}, l && d && r.a.createElement(j, {
					flairTemplateType: t,
					onChange: e => {
						if (l) {
							const t = l[e],
								n = Object(u.c)(t);
							g(Object(p.b)({
								userFlair: t
							})), i(n)
						}
					},
					selectedTemplateId: v ? v.id : "",
					templateIds: d,
					templates: l
				}), C && v && (f || v.textEditable) && r.a.createElement("div", {
					className: T.a.flairEditSection
				}, r.a.createElement("div", {
					className: T.a.editLabel
				}, o.fbt._("Edit flair", null, {
					hk: "1APWWu"
				})), h && r.a.createElement("div", {
					className: T.a.restrictionHintText
				}, Object(u.k)(v)), r.a.createElement(x, {
					autofocus: !0,
					emojiPickerId: "FlairSearch-EmojiPicker-DropdownId",
					flair: C,
					flairTemplate: v,
					flairTemplateType: t,
					isFlairModOnly: v.modOnly,
					onChange: e => {
						const t = l && e.templateId ? l[e.templateId] : void 0;
						let n = e;
						t && (n = Object(u.d)({
							flair: e,
							template: t,
							ignoreTextAllowance: !0
						})), i(n)
					},
					subredditId: a
				})))
			})
		},
		"./src/reddit/components/FocusableContent/index.m.less": function(e, t, n) {
			e.exports = {
				FocusableContent: "_3MknXZVbkWU8JL9XGlzASi",
				focusableContent: "_3MknXZVbkWU8JL9XGlzASi",
				isFocused: "_3F2J0fSnCI3ZvF_tBSaV0s",
				noBorder: "_1CpUVAt2tGEwaaBV3nZNJs"
			}
		},
		"./src/reddit/components/FocusableContent/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/components/FocusableContent/index.m.less"),
				c = n.n(a);
			t.a = i.a.wrapped(e => s.a.createElement("div", {
				className: Object(r.a)(e.className, {
					[c.a.isFocused]: e.isFocused,
					[c.a.noBorder]: e.noBorder
				})
			}, e.children), "FocusableContent", c.a)
		},
		"./src/reddit/components/Governance/PollHelpText/index.m.less": function(e, t, n) {
			e.exports = {
				pollHelpText: "_13USlqK0GlZqaPCBL0zKGR",
				decisionThreholdAmount: "_2c1NZvJKkI6yBivC77FPD4",
				decisionThresholdTitle: "_3awYIQIHL4ztIb5nZDL46P",
				decisionThresholdExplanation: "_1GSbrVpv76_yXM2VcUM3zK"
			}
		},
		"./src/reddit/components/Governance/ProposalTemplates/Generic/index.m.less": function(e, t, n) {
			e.exports = {
				hintText: "_1iTDa11Wj-8Ogp0kHlXhus",
				text: "_3Q86vH6B2mMSV8rHtZq4H9",
				topline: "_12_7Q434C71LJVJC_6GX71"
			}
		},
		"./src/reddit/components/Governance/ProposalTemplates/Spinoff/index.m.less": function(e, t, n) {
			e.exports = {
				input: "_2clkG943bEk_52p-4FBzwJ"
			}
		},
		"./src/reddit/components/Governance/ProposalTemplates/TopModReplacement/index.m.less": function(e, t, n) {
			e.exports = {
				input: "AyMlaMkumG28uV6ZIz9ed"
			}
		},
		"./src/reddit/components/Governance/Token/index.m.less": function(e, t, n) {
			e.exports = {
				grey: "_3oUx7R2UEz3llZLsIONH4x"
			}
		},
		"./src/reddit/components/Governance/Token/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./src/config.ts"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/reddit/selectors/crypto/points.ts"),
				d = n("./src/reddit/components/Governance/Token/index.m.less"),
				u = n.n(d);
			const p = Object(i.c)({
				pointsDetails: (e, t) => {
					let {
						subredditId: n
					} = t;
					return Object(l.b)(e, n)
				}
			});
			t.a = Object(r.b)(p)((function(e) {
				var t;
				const n = null === (t = e.pointsDetails) || void 0 === t ? void 0 : t.images;
				if (!n) return null;
				const o = e.grey ? n.greyVector || n.grey : n.filledVector || n.filled,
					r = `${a.a.assetPath}/${o}`;
				if (e.grey && r.endsWith(".svg")) {
					const t = `url(${r}) center/cover`;
					return s.a.createElement("div", {
						className: Object(c.a)(u.a.grey, e.className),
						style: {
							mask: t,
							WebkitMask: t
						}
					})
				}
				return s.a.createElement("img", {
					className: e.className,
					src: r
				})
			}))
		},
		"./src/reddit/components/Governance/TokenAmount/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_1_TXyD8cel36iFhXWbXulM",
				small: "_1MnpXAw_e6q3FjPvZfRITL",
				token: "_3ugCwJ_lmINM5PwXoNm8XD"
			}
		},
		"./src/reddit/components/Governance/TokenAmount/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/lib/prettyPrintNumber/index.ts"),
				l = n("./src/reddit/components/Governance/Token/index.tsx"),
				d = n("./src/reddit/helpers/governance/tokens.ts"),
				u = n("./src/reddit/selectors/crypto/points.ts"),
				p = n("./src/reddit/components/Governance/TokenAmount/index.m.less"),
				m = n.n(p);
			const h = Object(i.c)({
				pointsDetails: (e, t) => {
					let {
						subredditId: n
					} = t;
					return Object(u.b)(e, n)
				}
			});
			t.a = Object(r.b)(h)((function(e) {
				var t;
				return s.a.createElement("div", {
					className: Object(a.a)(m.a.container, e.className, {
						[m.a.small]: e.small
					})
				}, s.a.createElement(l.a, {
					className: Object(a.a)(m.a.token, {
						[m.a.small]: e.small
					}),
					grey: e.grey,
					subredditId: e.subredditId
				}), Object(c.a)(Object(d.c)(e.amount, null === (t = e.pointsDetails) || void 0 === t ? void 0 : t.displayConversion)), e.additionalText || null)
			}))
		},
		"./src/reddit/components/IdCard/async.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(o.a)({
				resolved: {},
				chunkName: () => "IdCard",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!n.m[t]
				},
				importAsync: () => n.e("IdCard").then(n.bind(null, "./src/reddit/components/IdCard/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return n(t)
				},
				resolve() {
					return "./src/reddit/components/IdCard/index.tsx"
				}
			})
		},
		"./src/reddit/components/InfoBanners/BannerBase/index.m.less": function(e, t, n) {
			e.exports = {
				IconWrapper: "_2p07tPrx9WpxDTQJ5cmVNe",
				iconWrapper: "_2p07tPrx9WpxDTQJ5cmVNe",
				TextWrapper: "_2jpm-rNr0Hniw6BX3NWMVe",
				textWrapper: "_2jpm-rNr0Hniw6BX3NWMVe",
				leftSideRectangle: "_3TLlMYjrPH9Kl9522LpSxb",
				wrapper: "_1DUKbp8va6vxOv9zemBDBi",
				subtitle: "_2J85dtk0HKQBLk8HTSWduv",
				title: "Nt8TnDvJ2BsL8KWcFQKy5"
			}
		},
		"./src/reddit/components/InfoBanners/BannerBase/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return u
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/components/InfoBanners/BannerBase/index.m.less"),
				a = n.n(i),
				c = n("./src/lib/lessComponent.tsx");
			const l = c.a.div("IconWrapper", a.a),
				d = c.a.div("TextWrapper", a.a);

			function u(e) {
				const {
					className: t,
					color: n,
					icon: o,
					subtitle: i,
					title: c,
					textWrapperClassName: u
				} = e;
				return s.a.createElement("div", {
					className: Object(r.a)(t, a.a.wrapper),
					style: n && {
						borderColor: n
					} || {}
				}, s.a.createElement("div", {
					className: a.a.leftSideRectangle,
					style: n && {
						backgroundColor: n
					} || {}
				}), o ? s.a.createElement(l, null, o) : s.a.createElement(l, null), s.a.createElement(d, {
					className: u
				}, s.a.createElement("div", {
					className: a.a.title
				}, c), i && s.a.createElement("div", {
					className: a.a.subtitle
				}, i)))
			}
		},
		"./src/reddit/components/InfoTextTooltip/Hooked.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/components/InfoTextTooltip/hooked.m.less"),
				a = n.n(i);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = s.a.memo((function(e) {
				let {
					visible: t,
					...n
				} = e;
				const [i, l] = Object(o.useState)(t);
				return Object(o.useEffect)(() => {
					let e = window.setTimeout(() => {
						e = void 0, l(t)
					}, 0);
					return () => {
						e && window.clearTimeout(e), l(!1)
					}
				}, [t]), t ? s.a.createElement("div", c({
					className: Object(r.a)(a.a.tooltip, n.className, {
						[a.a.visible]: i
					})
				}, n.popperProps), n.children, i && s.a.createElement("div", c({
					className: a.a.arrow
				}, n.arrowProps))) : null
			}))
		},
		"./src/reddit/components/InfoTextTooltip/hooked.m.less": function(e, t, n) {
			e.exports = {
				arrow: "_1jsc29CjRXZWjd2tr0Ji0Y",
				tooltip: "_2J_zB4R1FH2EjGMkQjedwc",
				visible: "u6HtAZu8_LKL721-EnKuR"
			}
		},
		"./src/reddit/components/JumpToContent/index.m.less": function(e, t, n) {
			e.exports = {
				button: "_3KaTO_3YaHK3SMocnu8jV9",
				rightBorder: "_1Bt_cwKVUG30M9eNB-9rU4",
				rightBorderExp: "d2l2sN1D4PNVkzMmwALA2",
				wrapper: "_32Xa3voy05uAFz3ZnopP_S",
				wrapperExp: "_1C67uwkUf95iJOZ63vDJOZ"
			}
		},
		"./src/reddit/components/JumpToContent/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return h
			})), n.d(t, "b", (function() {
				return f
			})), n.d(t, "a", (function() {
				return g
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/constants/componentSizes.ts"),
				c = n("./src/reddit/contexts/NavbarExp.ts"),
				l = n("./src/reddit/controls/Button/index.tsx"),
				d = n("./src/reddit/components/JumpToContent/index.m.less"),
				u = n.n(d);
			const p = Object(s.createContext)(null),
				m = Object(s.createContext)(null);
			class h extends r.a.Component {
				constructor() {
					super(...arguments), this.state = {
						handleRef: null
					}, this.setHandleRef = e => {
						this.state.handleRef !== e && this.setState({
							handleRef: e
						})
					}
				}
				render() {
					return r.a.createElement(p.Provider, {
						value: this.props.isOverlayOpen ? null : this.state.handleRef
					}, r.a.createElement(m.Provider, {
						value: this.setHandleRef
					}, this.props.children))
				}
			}
			const b = a.f + 10,
				f = r.a.memo(() => {
					const [e, t] = Object(s.useState)("-500px"), n = Object(s.useContext)(c.a);
					return r.a.createElement(p.Consumer, null, s => s && r.a.createElement("div", {
						className: Object(i.a)(u.a.wrapper, {
							[u.a.wrapperExp]: n
						}),
						"data-testid": "jump-to-content"
					}, r.a.createElement(l.t, {
						kind: l.b.Button,
						priority: l.c.Plain,
						className: u.a.button,
						style: {
							marginLeft: e
						},
						onBlur: e => {
							const n = e.currentTarget.clientWidth + 55;
							t(`-${n}px`)
						},
						onFocus: () => {
							t("0")
						},
						onClick: () => {
							s.focus(), s.scrollIntoView(), window.scrollBy(0, -b)
						}
					}, o.fbt._("Jump to content", null, {
						hk: "2zWOmQ"
					})), r.a.createElement("div", {
						className: Object(i.a)(u.a.rightBorder, {
							[u.a.rightBorderExp]: n
						})
					})))
				}),
				g = r.a.memo(() => r.a.createElement(m.Consumer, null, e => r.a.createElement("div", {
					ref: e,
					tabIndex: 0
				})))
		},
		"./src/reddit/components/LinkOrOverlayLink/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-router-dom/esm/react-router-dom.js"),
				i = n("./src/reddit/controls/UnstyledInternalLink/index.tsx"),
				a = n("./src/reddit/helpers/overlay/index.ts");

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}

			function l(e) {
				const {
					children: t,
					className: n,
					to: o,
					...r
				} = e, l = Object(a.b)(o);
				return s.a.createElement(i.a, c({
					className: n,
					to: l
				}, r), t)
			}

			function d() {
				return (d = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => {
				const {
					isOverlay: t,
					...n
				} = e, o = t ? l : r.a;
				return s.a.createElement(o, d({}, n, {
					className: n.className,
					onClick: n.onClick,
					to: n.to
				}), n.children)
			}
		},
		"./src/reddit/components/MakeGifToggle/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_1iRy5EPCLqSx8I0k9OT0wW",
				content: "NfjQg3srQXRhyOxLBwXrS",
				toggleSwitch: "_1fUmirx6e9tUDs04TQq6A1",
				mCompactSwitch: "_3Cx_YBpXo1s1iy7oA-4s6R",
				mDisabled: "_1M5N6DrrQQCQJs3JctDSu8",
				hoverTooltip: "_9qS60cx9uxyt1k4eZF_0w",
				tooltipContentClass: "_21DP8j-B-UkVKGJONbrTmX"
			}
		},
		"./src/reddit/components/MakeGifToggle/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/components/RichTextEditor/HoverTooltip/index.tsx"),
				c = n("./src/reddit/controls/ToggleSwitch/index.tsx"),
				l = n("./src/reddit/layout/row/Inline/index.tsx"),
				d = n("./src/reddit/components/MakeGifToggle/index.m.less"),
				u = n.n(d);
			t.a = e => r.a.createElement(l.a, {
				className: Object(i.a)(u.a.container, e.disabled ? u.a.mDisabled : null, e.isCompact ? u.a.mCompactSwitch : null),
				onMouseDown: e => e.preventDefault(),
				onClick: t => {
					t.stopPropagation(), !e.disabled && e.onClick()
				}
			}, r.a.createElement(l.a, {
				className: u.a.content
			}, r.a.createElement(c.a, {
				className: u.a.toggleSwitch,
				on: e.on
			}), r.a.createElement("label", null, o.fbt._("Make GIF", null, {
				hk: "2ig2GG"
			}))), e.tooltip ? r.a.createElement(a.a, {
				className: u.a.hoverTooltip,
				tooltipContentClass: u.a.tooltipContentClass,
				text: e.tooltip
			}) : null)
		},
		"./src/reddit/components/MarkdownHelp/index.m.less": function(e, t, n) {
			e.exports = {
				Section: "_1gF-JM2Md5QrEmUiEkRvLZ",
				section: "_1gF-JM2Md5QrEmUiEkRvLZ",
				Container: "C8uCM4XqGMA6xiIu7zfJl",
				container: "C8uCM4XqGMA6xiIu7zfJl",
				helpTable: "_3E7k-M4lVIYGW6Z7QoiPc9",
				Table: "_1t5z5ubOp-UUzTGLJr43d0",
				table: "_1t5z5ubOp-UUzTGLJr43d0",
				P: "_3MhMubukVABghyvZNN2X65",
				p: "_3MhMubukVABghyvZNN2X65"
			}
		},
		"./src/reddit/components/MarkdownHelp/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return C
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./src/reddit/components/FlairPickerTitle/index.tsx"),
				c = n("./src/reddit/components/FlairPickerWrapper/index.tsx"),
				l = n("./src/reddit/components/RichTextJson/elements.tsx"),
				d = n("./src/reddit/components/RichTextJson/SpoilerText.tsx"),
				u = n("./src/reddit/components/TrackingHelper/index.tsx"),
				p = n("./src/higherOrderComponents/asModal/index.tsx"),
				m = n("./src/reddit/actions/modal.ts"),
				h = n("./src/reddit/controls/Button/index.tsx"),
				b = n("./src/reddit/layout/row/Inline/index.tsx"),
				f = n("./src/reddit/layout/row/RightAlign/index.tsx"),
				g = n("./src/reddit/components/MarkdownHelp/index.m.less"),
				v = n.n(g),
				x = n("./src/lib/lessComponent.tsx");
			const C = "Markdown_Help__Modal",
				E = x.a.wrapped(b.a, "Section", v.a),
				y = x.a.div("Container", v.a),
				O = x.a.table("Table", v.a),
				k = x.a.p("P", v.a);
			class _ extends r.a.Component {
				render() {
					const e = o.fbt._("italics", null, {
							hk: "9wBJ9"
						}),
						t = o.fbt._("bold", null, {
							hk: "yoD2u"
						}),
						n = o.fbt._("item", null, {
							hk: "20ZnoS"
						}),
						s = o.fbt._("quoted text", null, {
							hk: "1Lvb4b"
						}),
						i = o.fbt._("strikethrough", null, {
							hk: "UcaLr"
						}),
						u = o.fbt._("spoilers", null, {
							hk: "372XyC"
						});
					return r.a.createElement(c.a, null, r.a.createElement(a.a, {
						onClosePressed: this.props.closeModal,
						title: o.fbt._("Markdown Help", null, {
							hk: "w08E2"
						})
					}), r.a.createElement(y, null, r.a.createElement(O, {
						className: v.a.helpTable
					}, r.a.createElement("tr", null, r.a.createElement(l.s, null, r.a.createElement(l.j, null, o.fbt._("Type this:", null, {
						hk: "VDjXQ"
					}))), r.a.createElement(l.s, null, r.a.createElement(l.j, null, o.fbt._("to get this:", null, {
						hk: "4zlZi9"
					})))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, "*", e, "*")), r.a.createElement(l.p, null, r.a.createElement(l.f, null, e))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, "**", t, "**")), r.a.createElement(l.p, null, r.a.createElement(l.b, null, t))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, "[reddit!](https://reddit.com)")), r.a.createElement(l.p, null, r.a.createElement(l.a, {
						href: "https://www.reddit.com"
					}, "reddit!"))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, "* ", n, " 1"), r.a.createElement(l.j, null, "* ", n, " 2"), r.a.createElement(l.j, null, "* ", n, " 3")), r.a.createElement(l.p, null, r.a.createElement(l.v, null, r.a.createElement(l.g, null, n, " 1"), r.a.createElement(l.g, null, n, " 2"), r.a.createElement(l.g, null, n, " 3")))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, "> ", s)), r.a.createElement(l.p, null, r.a.createElement(l.c, null, s))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, "~~", i, "~~")), r.a.createElement(l.p, null, r.a.createElement(l.d, null, i))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, o.fbt._("super^script", null, {
						hk: "2WteOp"
					}))), r.a.createElement(l.p, null, o.fbt._("super{=script}", [o.fbt._param("=script", r.a.createElement(l.m, null, o.fbt._("script", null, {
						hk: "4a2qMi"
					})))], {
						hk: "1VvC4z"
					}))), r.a.createElement("tr", null, r.a.createElement(l.p, null, r.a.createElement(l.j, null, `>!${u}!<`)), r.a.createElement(l.p, null, r.a.createElement(d.a, null, u)))), r.a.createElement(k, null, o.fbt._("Check the {=commenting wiki page} for more help", [o.fbt._param("=commenting wiki page", r.a.createElement(l.a, {
						href: "https://www.reddit.com/wiki/commenting"
					}, o.fbt._("commenting wiki page", null, {
						hk: "25UBE"
					})))], {
						hk: "1J9oBy"
					}))), r.a.createElement(E, null, r.a.createElement(f.a, null, r.a.createElement(h.l, {
						onClick: this.props.closeModal,
						"data-redditstyle": !0
					}, o.fbt._("Close", null, {
						hk: "4gbyAA"
					})))))
				}
			}
			const j = Object(i.b)(null, (e, t) => ({
				closeModal: () => e(Object(m.i)(C))
			}))(_);
			t.a = Object(p.a)(Object(u.c)(j))
		},
		"./src/reddit/components/ModalStyledComponents/index.m.less": function(e, t, n) {
			e.exports = {
				CloseIcon: "_3XSQHPxjCTSWWZh_u-d0Xf",
				closeIcon: "_3XSQHPxjCTSWWZh_u-d0Xf",
				ModalBody: "_2R3RlhymCOkPrz9TusvcPq",
				modalBody: "_2R3RlhymCOkPrz9TusvcPq",
				ModalPostPreview: "HydQQ-TD4TUsVnxkYk_5F",
				modalPostPreview: "HydQQ-TD4TUsVnxkYk_5F",
				ModalText: "mFTHPdbEAklUs8yhT4Xm7",
				modalText: "mFTHPdbEAklUs8yhT4Xm7",
				ModalSmallText: "_3cwQrg-XvocnoG0U22wT8t",
				modalSmallText: "_3cwQrg-XvocnoG0U22wT8t",
				ModalDescriptionText: "_12g_PUGHD-w7T1w4Q3oTsq",
				modalDescriptionText: "_12g_PUGHD-w7T1w4Q3oTsq",
				ModalMetaText: "_27eskYssCs-urVW1uHI4YI",
				modalMetaText: "_27eskYssCs-urVW1uHI4YI",
				ModalFormItem: "_3xiY8nTCVp16qSb6CGW2Kv",
				modalFormItem: "_3xiY8nTCVp16qSb6CGW2Kv",
				ModalInput: "_20ZSV7ktyDYzPcd1UMQWZT",
				modalInput: "_20ZSV7ktyDYzPcd1UMQWZT",
				ModalInputLabel: "HVADn-LHFLaS8r6IBJWeq",
				modalInputLabel: "HVADn-LHFLaS8r6IBJWeq",
				ModalFooter: "_-0i7atRJ5NBsrRM5wuPpX",
				modalFooter: "_-0i7atRJ5NBsrRM5wuPpX",
				ModalHeader: "_1Fa5Xv7f16v5IC2Tq1m2Fy",
				modalHeader: "_1Fa5Xv7f16v5IC2Tq1m2Fy",
				ModalTitle: "eLnlHLGCDxjFf3jfGTcZu",
				modalTitle: "eLnlHLGCDxjFf3jfGTcZu",
				ModalMain: "_1uaasV6RaxBfRyVgQJdiKs",
				modalMain: "_1uaasV6RaxBfRyVgQJdiKs",
				ModalAnnotation: "gLlWG7Oj89Ost4_twUu8w",
				modalAnnotation: "gLlWG7Oj89Ost4_twUu8w",
				TextArea: "_2h8O7PjrCXfaJJWKrAxJPL",
				textArea: "_2h8O7PjrCXfaJJWKrAxJPL",
				WarningButton: "_17UyTSs2atqnKg9dIq5ERg",
				warningButton: "_17UyTSs2atqnKg9dIq5ERg",
				PrimaryButton: "_2X1FFYUx3jzlnbcegBC_Sr",
				primaryButton: "_2X1FFYUx3jzlnbcegBC_Sr",
				CancelButton: "_1QUX9-zZuGtifS6jJBUyh-",
				cancelButton: "_1QUX9-zZuGtifS6jJBUyh-",
				RemoveButton: "_2ulRgczjI5SWCMgSA1CNLj",
				removeButton: "_2ulRgczjI5SWCMgSA1CNLj",
				ConfirmButton: "JZC61-VzVuaiHdWuRUiSC",
				confirmButton: "JZC61-VzVuaiHdWuRUiSC"
			}
		},
		"./src/reddit/components/ModalStyledComponents/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return m
			})), n.d(t, "e", (function() {
				return h
			})), n.d(t, "n", (function() {
				return b
			})), n.d(t, "p", (function() {
				return f
			})), n.d(t, "o", (function() {
				return g
			})), n.d(t, "f", (function() {
				return v
			})), n.d(t, "m", (function() {
				return x
			})), n.d(t, "h", (function() {
				return C
			})), n.d(t, "j", (function() {
				return E
			})), n.d(t, "k", (function() {
				return y
			})), n.d(t, "g", (function() {
				return O
			})), n.d(t, "i", (function() {
				return k
			})), n.d(t, "q", (function() {
				return _
			})), n.d(t, "d", (function() {
				return j
			})), n.d(t, "l", (function() {
				return S
			})), n.d(t, "t", (function() {
				return T
			})), n.d(t, "u", (function() {
				return w
			})), n.d(t, "r", (function() {
				return I
			})), n.d(t, "a", (function() {
				return P
			})), n.d(t, "s", (function() {
				return M
			})), n.d(t, "c", (function() {
				return R
			}));
			var o = n("./src/lib/classNames/index.ts"),
				s = n("./src/lib/lessComponent.tsx"),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/reddit/controls/Button/index.tsx"),
				c = n("./src/reddit/controls/Input/ModalInput.tsx"),
				l = n("./src/reddit/icons/svgs/Close/index.tsx"),
				d = n("./src/reddit/components/ModalStyledComponents/index.m.less"),
				u = n.n(d);

			function p() {
				return (p = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const m = s.a.wrapped(l.a, "CloseIcon", u.a),
				h = s.a.section("ModalBody", u.a),
				b = s.a.section("ModalPostPreview", u.a),
				f = s.a.p("ModalText", u.a),
				g = s.a.div("ModalSmallText", u.a),
				v = s.a.div("ModalDescriptionText", u.a),
				x = s.a.div("ModalMetaText", u.a),
				C = s.a.label("ModalFormItem", u.a),
				E = s.a.wrapped(c.a, "ModalInput", u.a),
				y = s.a.label("ModalInputLabel", u.a),
				O = s.a.footer("ModalFooter", u.a),
				k = s.a.header("ModalHeader", u.a),
				_ = s.a.div("ModalTitle", u.a),
				j = s.a.div("ModalAnnotation", u.a),
				S = s.a.div("ModalMain", u.a),
				T = s.a.textarea("TextArea", u.a),
				w = s.a.wrapped(a.l, "WarningButton", u.a),
				I = s.a.wrapped(a.l, "PrimaryButton", u.a),
				P = s.a.wrapped(a.o, "CancelButton", u.a),
				M = s.a.wrapped(a.r, "RemoveButton", u.a),
				R = e => {
					let {
						className: t,
						...n
					} = e;
					return i.a.createElement(a.t, p({
						kind: a.b.Button,
						priority: a.c.Primary,
						className: Object(o.a)(u.a.ConfirmButton, t)
					}, n))
				}
		},
		"./src/reddit/components/Onboarding/LanguageCollection/LanguageCollection.m.less": function(e, t, n) {
			e.exports = {
				LanguageRow: "_1uqw13duLAypklZz9JuxH5",
				languageRow: "_1uqw13duLAypklZz9JuxH5",
				Selected: "C0ynfBku9Az2wYA9j1_PA",
				selected: "C0ynfBku9Az2wYA9j1_PA",
				NightModeSelected: "_3JYkv3aRJq9WBVU_Qu_O3K",
				nightModeSelected: "_3JYkv3aRJq9WBVU_Qu_O3K",
				ButtonSection: "_2go248Acx87AyaspT-IqC3",
				buttonSection: "_2go248Acx87AyaspT-IqC3",
				SelectedIcon: "Nqikdy52FO7Ok8SC7YbBy",
				selectedIcon: "Nqikdy52FO7Ok8SC7YbBy",
				FrontFlex: "_3qzPnI-sCnXtXXzmiLCUzt",
				frontFlex: "_3qzPnI-sCnXtXXzmiLCUzt",
				TextSection: "_5Rt2rPaHLuyB5smTxh9cS",
				textSection: "_5Rt2rPaHLuyB5smTxh9cS",
				Placeholder: "_3gtRwVx6uS2xZaynYajI9O",
				placeholder: "_3gtRwVx6uS2xZaynYajI9O",
				Icon: "_1ym0rG9P61fqq5EGeggDEg",
				icon: "_1ym0rG9P61fqq5EGeggDEg",
				isLeft: "_1wilU6X1e2oYYu84p5M0Bn",
				isRight: "_1N6ONFJor0MYB1AANfCh8M",
				LanguageListButtons: "_2GUwrGUdKWdruRBy2ogOPv",
				languageListButtons: "_2GUwrGUdKWdruRBy2ogOPv",
				HeaderBarImproved: "sKUGLH9bgXYnkNvi71PD6",
				headerBarImproved: "sKUGLH9bgXYnkNvi71PD6",
				MoreLanguages: "_34OOuEVRtCgQHxTw6Bm_SM",
				moreLanguages: "_34OOuEVRtCgQHxTw6Bm_SM",
				PromptContainer: "_2NBWDPVfLgJchMUSilY9hq",
				promptContainer: "_2NBWDPVfLgJchMUSilY9hq",
				PromptClose: "_1D3-VzG8d-pAsDFC2aDEqX",
				promptClose: "_1D3-VzG8d-pAsDFC2aDEqX",
				Close: "Z2DAjXDKT-rjUoOgPeR9b",
				close: "Z2DAjXDKT-rjUoOgPeR9b",
				PromptTitle: "_6pr2vYjViLknuzg7J_4II",
				promptTitle: "_6pr2vYjViLknuzg7J_4II",
				PromptSubtitle: "_1j479fpdJDH2JNDpssXW8Z",
				promptSubtitle: "_1j479fpdJDH2JNDpssXW8Z",
				PromptRow: "piSYz03CLXLD5jdQwPjUy",
				promptRow: "piSYz03CLXLD5jdQwPjUy",
				Dismiss: "Fssd937Pdx1KOrc1lhBS5",
				dismiss: "Fssd937Pdx1KOrc1lhBS5"
			}
		},
		"./src/reddit/components/Onboarding/LanguageCollection/prompt.tsx": function(e, t, n) {
			"use strict";
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/actions/eligibleUxExperiences/eligibleUxExperiences.ts"),
				c = n("./src/reddit/actions/toaster.ts"),
				l = n("./src/reddit/components/Onboarding/LanguageCollection/LanguageCollection.m.less"),
				d = n.n(l),
				u = n("./src/reddit/constants/componentTestIds.ts"),
				p = n("./src/reddit/contexts/ApiContext.tsx"),
				m = n("./src/reddit/endpoints/onboarding/languageSelections.ts"),
				h = n("./src/reddit/constants/tracking.ts"),
				b = n("./src/reddit/selectors/telemetry.ts");
			const f = "bottom_sheet";
			var g;
			! function(e) {
				e.ADD = "add", e.LATER = "maybe_later", e.SKIP = "skip"
			}(g || (g = {}));
			var v = n("./src/reddit/hooks/useTracking.ts"),
				x = n("./src/reddit/icons/svgs/Close/index.tsx"),
				C = n("./src/reddit/models/Toast/index.ts"),
				E = n("./src/reddit/selectors/eligibleUXExperiences.ts"),
				y = n("./src/reddit/selectors/experiments/uxtsIntegration.ts"),
				O = n("./src/reddit/selectors/meta.ts"),
				k = n("./src/redditGQL/types.ts");
			const {
				fbt: _
			} = n("./node_modules/fbt/lib/FbtPublic.js"), j = e => {
				const {
					gqlContext: t
				} = e, n = Object(r.d)(), l = Object(v.a)(), p = Object(r.e)(O.b), [E, y] = Object(o.useState)(!1), [j, S] = Object(o.useState)({}), [T, w] = Object(o.useState)({}), [I, P] = Object(o.useState)([]);
				let M = ["es"];
				const R = Object(o.useCallback)(async () => {
					const e = await Object(m.b)(t);
					e && (w(e.languages), P(e.preferences), y(!0))
				}, [t]);
				Object(o.useEffect)(() => {
					R()
				}, [R]);
				const N = e => {
						l("skip" === e ? (e => t => ({
							...Object(b.q)(t),
							source: f,
							action: h.c.CLICK,
							noun: g.SKIP,
							actionInfo: {
								...Object(b.d)(t),
								type: e
							}
						}))(p) : (e => t => ({
							...Object(b.q)(t),
							source: f,
							action: h.c.CLICK,
							noun: g.LATER,
							actionInfo: {
								...Object(b.d)(t),
								type: e
							}
						}))(p)), y(!1), n(Object(a.c)({
							experience: k.db.LanguagePreferenceBottomSheet,
							value: !1
						}))
					},
					D = () => {
						const e = Object.keys(j).join();
						l(((e, t) => n => ({
							...Object(b.q)(n),
							source: f,
							action: h.c.CLICK,
							noun: g.ADD,
							actionInfo: {
								...Object(b.d)(n),
								reason: t,
								type: e
							}
						}))(p, e)), (async () => {
							var e;
							const o = j;
							I.map(e => o[e] = !0);
							const s = await Object(m.d)(t, o);
							(null === (e = null == s ? void 0 : s.updateSpokenLanguagesPreference) || void 0 === e ? void 0 : e.ok) ? n(Object(c.f)({
								kind: C.b.SuccessCommunity,
								text: _._("Changes saved", null, {
									hk: "2isjrZ"
								})
							})): n(Object(c.f)({
								kind: C.b.Error,
								text: _._("Changes failed to save. Try adding content languages in user settings", null, {
									hk: "2YYdoj"
								})
							}))
						})(), y(!1), n(Object(a.c)({
							experience: k.db.LanguagePreferenceBottomSheet,
							value: !1
						}))
					};
				return M = M.filter(e => !I.includes(e)), E && 0 !== M.length ? (l((e => t => ({
					...Object(b.q)(t),
					source: f,
					action: h.c.VIEW,
					noun: h.b.SCREEN,
					actionInfo: {
						...Object(b.d)(t),
						type: e
					}
				}))(p)), n(Object(a.d)(k.db.LanguagePreferenceBottomSheet)), s.a.createElement("div", {
					className: d.a.PromptContainer
				}, s.a.createElement("div", {
					className: d.a.PromptClose
				}, s.a.createElement(x.a, {
					className: d.a.Close,
					onClick: () => N("skip"),
					"data-testid": u.e
				})), s.a.createElement("div", {
					className: d.a.PromptTitle
				}, _._("See content in more languages", null, {
					hk: "4uyzS1"
				})), s.a.createElement("div", {
					className: d.a.PromptSubtitle
				}, _._("Update your settings to make it easier to discover content in multiple languages", null, {
					hk: "3VhB1c"
				})), 1 === M.length ? s.a.createElement("div", {
					className: d.a.PromptRow,
					onClick: () => (e => {
						const t = j;
						t[e] = !0, S(t), D()
					})(M[0]),
					"data-testid": M[0]
				}, _._("Add {language}", [_._param("language", T[M[0]])], {
					hk: "2emiHZ"
				})) : null, s.a.createElement("div", {
					className: Object(i.a)(d.a.PromptRow, {
						[d.a.Dismiss]: !0
					}),
					onClick: () => N("later")
				}, _._("Maybe later", null, {
					hk: "2LjBDw"
				})))) : null
			};
			t.a = Object(p.b)(e => {
				var t;
				const {
					gqlContext: n
				} = e, o = Object(r.f)().getState();
				return (null === (t = Object(r.e)(e => Object(E.a)(e, {
					experience: k.db.LanguagePreferenceBottomSheet
				}))) || void 0 === t ? void 0 : t.value) && Object(y.b)(o) ? s.a.createElement(j, {
					gqlContext: n
				}) : null
			})
		},
		"./src/reddit/components/OverflowMenu/index.m.less": function(e, t, n) {
			e.exports = {
				_Dropdown: "ehsOqYO6dxn_Pf9Dzwu37",
				dropdown: "ehsOqYO6dxn_Pf9Dzwu37",
				MenuButton: "_2pFdCpgBihIaYh9DSMWBIu",
				menuButton: "_2pFdCpgBihIaYh9DSMWBIu",
				mIsEnabled: "uMPgOFYlCc5uvpa2Lbteu",
				MenuIcon: "_38GxRFSqSC-Z2VLi5Xzkjy",
				menuIcon: "_38GxRFSqSC-Z2VLi5Xzkjy",
				DropdownRow: "_2DO72U0b_6CUw3msKGrnnT",
				dropdownRow: "_2DO72U0b_6CUw3msKGrnnT"
			}
		},
		"./src/reddit/components/OverflowMenu/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return y
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/lib/lessComponent.tsx"),
				d = n("./src/reddit/actions/tooltip.ts"),
				u = n("./src/reddit/components/OverlayAwareTooltip/index.tsx"),
				p = n("./src/reddit/controls/Dropdown/index.tsx"),
				m = n("./src/reddit/controls/Dropdown/Row.tsx"),
				h = n("./src/reddit/icons/fonts/index.tsx"),
				b = n("./src/reddit/selectors/tooltip.ts"),
				f = n("./src/higherOrderComponents/withAdClickLocation/Locations.ts"),
				g = n("./src/reddit/components/OverflowMenu/index.m.less"),
				v = n.n(g);
			const x = l.a.wrapped(p.a, "_Dropdown", v.a),
				C = Object(u.a)(x),
				E = l.a.button("MenuButton", v.a),
				y = l.a.wrapped(m.b, "DropdownRow", v.a),
				O = Object(a.c)({
					dropdownIsOpen: (e, t) => {
						let {
							dropdownId: n
						} = t;
						return Object(b.b)(n)(e)
					}
				}),
				k = Object(i.b)(O, (e, t) => {
					let {
						dropdownId: n
					} = t;
					return {
						toggleDropdown: () => e(Object(d.h)({
							tooltipId: n
						}))
					}
				}),
				_ = e => t => {
					e.onClick && e.onClick(), e.toggleDropdown(), t.stopPropagation()
				};
			t.b = k(e => r.a.createElement(E, {
				"aria-expanded": e.dropdownIsOpen,
				"aria-haspopup": !0,
				"aria-label": o.fbt._("more options", null, {
					hk: "2EnY1x"
				}),
				className: Object(c.a)(e.className, {
					[v.a.mIsEnabled]: !e.disabled && !e.defaultButtonOutline
				}),
				disabled: e.disabled,
				onClick: _(e),
				onMouseDown: e.handleMouseDown,
				id: e.dropdownId,
				"data-adclicklocation": f.b.OVERFLOW_MENU
			}, e.icon ? e.icon : r.a.createElement(h.a, {
				name: "overflow_horizontal",
				className: v.a.MenuIcon
			}), r.a.createElement(C, {
				className: e.dropdownClassName,
				isOpen: e.dropdownIsOpen,
				tooltipId: e.dropdownId,
				isFixed: e.isFixed,
				targetPosition: e.targetPosition,
				tooltipPosition: e.tooltipPosition,
				style: e.style
			}, e.children)))
		},
		"./src/reddit/components/PollCreator/DefaultHintText/index.m.less": function(e, t, n) {
			e.exports = {
				helpTextItem: "wYdL1V7fxOtMwgvL8gt4a",
				helpTextList: "_23_RY8_TK404O0hdN7zpNn",
				helpTitle: "_3qXjOYMFBOO47HoteguQiz",
				helpTitleText: "_1NjVVC7kcVvJTLxxbNEi0S",
				infoIcon: "_2EKnk91_WzE7ao5vX6K5cC"
			}
		},
		"./src/reddit/components/PollCreator/EndDatePicker/index.m.less": function(e, t, n) {
			e.exports = {
				timeZone: "jHZVOve2QGoctU0iDnnCI",
				dateTime: "_24VUErhy8JiR-xw9cMsdx0",
				timeInput: "_1YzViNj-rqobl3wArJ3k_"
			}
		},
		"./src/reddit/components/PollCreator/EndDatePicker/useEndDatePicker.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./src/lib/timezone/index.ts"),
				s = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/utils.ts"),
				r = n("./src/reddit/hooks/useLocale.ts"),
				i = n("./src/reddit/components/PollCreator/EndDatePicker/utils.ts");

			function a(e, t) {
				var n;
				const a = Object(r.a)(),
					{
						date: c,
						time: l
					} = Object(i.a)(e),
					d = Object(o.b)(),
					u = d ? Object(o.d)(d) : null,
					p = new Date,
					{
						minDate: m,
						minTime: h,
						formattedMinDatetime: b
					} = Object(i.c)(p, a),
					f = Object(s.a)(),
					g = Object(i.d)({
						date: m,
						time: h
					});
				return {
					date: c,
					time: l,
					timeZoneAbbr: null !== (n = null == u ? void 0 : u.abbreviation) && void 0 !== n ? n : "",
					onChange: e => {
						Object.values(e).every(e => e.length) && t(Object(i.d)({
							date: c,
							time: l,
							...e
						}))
					},
					maxDate: f,
					minDate: m,
					minTime: h,
					fullMinDatetime: g,
					formattedMinDatetime: b
				}
			}
		},
		"./src/reddit/components/PollCreator/EndDatePicker/utils.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return r
			})), n.d(t, "a", (function() {
				return i
			})), n.d(t, "d", (function() {
				return a
			})), n.d(t, "c", (function() {
				return l
			}));
			var o = n("./src/lib/timezone/index.ts"),
				s = n("./src/reddit/helpers/scheduledPosts/index.ts");
			const r = () => {
					const e = new Date;
					return e.setDate(e.getDate() + 3), e
				},
				i = e => {
					const [t, n] = Object(s.i)(Object(o.g)(e));
					return {
						date: t,
						time: n
					}
				},
				a = e => {
					let {
						date: t,
						time: n
					} = e;
					return new Date(`${t}T${n}`)
				},
				c = (e, t) => e.toLocaleString(t, {
					month: "numeric",
					day: "numeric",
					year: "numeric",
					hour: "numeric",
					minute: "2-digit"
				}),
				l = (e, t) => {
					const n = new Date(e);
					n.setHours(n.getHours() + 1);
					const {
						date: o,
						time: s
					} = i(n);
					return {
						minDate: o,
						minTime: s,
						formattedMinDatetime: c(n, t)
					}
				}
		},
		"./src/reddit/components/PollCreator/SortableOptions/index.m.less": function(e, t, n) {
			e.exports = {
				options: "vtFOVcu_sAJUlHd8Vxx_S",
				controls: "_2uAaCZzc_HQhLKkUJ66vU5",
				container: "_3Q-Z7QKdjihmmbINOEzofW",
				grapple: "_3ePBnj3VLelomSpvc5bYjW",
				input: "_2yM8wrpUFDlwPMl42pJ1ly",
				trash: "_2raOjruzA2S4cw-4wFtDJN"
			}
		},
		"./src/reddit/components/PollCreator/index.m.less": function(e, t, n) {
			e.exports = {
				flexRow: "_2G4E6Ja1LjN3lvEFdvCAMM",
				addButton: "_1MW4m9_ojHA4AO_I1MhQf3",
				container: "_3S9C536IVs6t9fXO2fE_Yq",
				help: "_1kYOBe87AO-Ly-PkWe8yd8",
				votingLengthCaret: "ekKR9rTD5h3p7yQ4SaLoa",
				votingLengthDropdown: "_1Sbl_DKDMJM71lJ_1GQgbB",
				votingLengthDropdownContainer: "_24W8XLxQSgwVVFneYfHsJR",
				votingLengthSelector: "_3TH3dFaVjJ2OSx-B_N3pDU",
				votingLengthSelector__disabled: "_2Wc5VFPksdxez0HQRlpdeE",
				votingLengthSelectorDisabled: "_2Wc5VFPksdxez0HQRlpdeE",
				votingLengthTitleText: "_1-ozAll8fJXOJ9tr9TwS1r",
				votingLengthDisplay: "gj1NXudk861pHzMz3jvCj",
				predictionSettings: "HXVbpI7By73VaXfNbuqeV",
				endDatePicker: "_2RwSuQDNqmMVVRgysrJYie",
				title: "_24GJ3HJNoyTS39atzgNnwZ"
			}
		},
		"./src/reddit/components/PostBadges/index.m.less": function(e, t, n) {
			e.exports = {
				adminIcon: "_1cje4rrmwL0yZgCOlGyBJ-",
				approveIcon: "_1knR9NIIXdSFC9IeFN11JL",
				automoderator: "_2etEb_0bRB9axAqF3uX28S",
				icon: "_3vju76MdF2FaGmELBeiJ_r",
				lockIcon: "_3wTfn3Meg1rXJ-qd2jUWMt",
				modIcon: "_SMl46gACTEszA_4A0Qfs",
				removeIcon: "_3yuF1RnBRJL4OS_STsoXcC",
				reportIcon: "_3guZWUAROueft8TPPGDZ-R",
				spamIcon: "_2BWw37nLL0rX6n7xcXciyD",
				stickyIcon: "NI8uZ-19oHf9gPO8jOvFu",
				addRemovalReason: "COGitU-ItwLZG_fP5rsdE",
				isRemoved: "_27iLVqax1FuPWTymkSkKAq",
				archivedIcon: "_2WSiH2JwZq4bXuvrDn-cgU",
				removalReason: "_16Ih3bzeELRlI6AWeW-nFy"
			}
		},
		"./src/reddit/components/PostBadges/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/lib/constants/index.ts"),
				d = n("./src/reddit/actions/tooltip.ts"),
				u = n("./src/reddit/components/InfoTextTooltip/index.tsx"),
				p = n("./src/reddit/components/RestrictedFlatlistButton/index.tsx"),
				m = n("./src/reddit/constants/postLayout.ts"),
				h = n("./src/reddit/constants/posts.ts"),
				b = n("./src/reddit/contexts/PageLayer/index.tsx"),
				f = n("./src/reddit/helpers/isRemoved.ts"),
				g = n("./src/reddit/helpers/modTooltipTemplates/index.ts"),
				v = n("./src/reddit/helpers/showReportIndicator/index.ts"),
				x = n("./src/reddit/icons/fonts/index.tsx"),
				C = n("./src/reddit/icons/fonts/Approve/index.tsx"),
				E = n("./src/reddit/icons/fonts/Archived/index.tsx"),
				y = n("./src/reddit/icons/fonts/Lock/index.tsx"),
				O = n("./src/reddit/icons/fonts/Remove/index.tsx"),
				k = n("./src/reddit/icons/fonts/Report/index.tsx"),
				_ = n("./src/reddit/icons/fonts/Spam/index.tsx"),
				j = n("./src/reddit/icons/fonts/Sticky/index.tsx"),
				S = n("./src/reddit/models/Post/index.ts"),
				T = n("./src/reddit/selectors/modQueue.ts"),
				w = n("./src/reddit/selectors/posts.ts"),
				I = n("./src/reddit/components/PostBadges/index.m.less"),
				P = n.n(I);

			function M() {
				return (M = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const R = e => r.a.createElement("span", M({
					className: P.a.removalReason
				}, e), e.children),
				N = () => o.fbt._("Archived", null, {
					hk: "zv3q3"
				}),
				D = () => o.fbt._("Comments are locked", null, {
					hk: "8HjJ9"
				}),
				L = e => o.fbt._("Moderator of {community name}", [o.fbt._param("community name", e)], {
					hk: "nJqIB"
				}),
				A = () => o.fbt._("Stickied post", null, {
					hk: "3qSaBs"
				}),
				B = () => o.fbt._("Pinned post", null, {
					hk: "2oxErI"
				}),
				F = (e, t, n) => {
					const o = `PostBadges--${e}--${t}`;
					return n ? `${o}--${n}` : o
				},
				U = Object(b.v)({
					isProfilePostListing: b.N,
					isSubreddit: b.Q
				}),
				K = Object(a.c)({
					isModQueueDisplayEnabled: e => {
						const t = m.e[Object(b.U)(e, {})] === m.d.Card;
						return Object(T.b)(e, t)
					},
					isPinned: (e, t) => {
						let {
							post: n
						} = t;
						return Object(w.q)(e, {
							postId: n.id
						})
					},
					modModeEnabled: b.W
				}),
				W = Object(i.b)(K, (e, t) => ({
					onHideTooltip: () => e(Object(d.i)()),
					onOpenRemovalReasonModal: () => {
						Promise.all([n.e("CommentsPage~Reddit~RichTextEditor~reddit-components-LargePost~reddit-components-MediumPost~reddit-c~cad4f428"), n.e("removalReasonActions")]).then(n.bind(null, "./src/reddit/actions/removalReasons/index.ts")).then(n => e(n.fetchReasonsAndOpenModal(t.post.belongsTo.id, [t.post.id])))
					},
					onShowTooltip: t => () => e(Object(d.f)({
						tooltipId: t
					}))
				}));
			t.a = U(W(e => {
				let {
					className: t,
					displayText: n,
					isSubreddit: i,
					inSubredditOrProfile: a,
					isCompactPinnedPost: d,
					isPinned: m,
					isProfilePostListing: b,
					modModeEnabled: T,
					onHideTooltip: w,
					onOpenRemovalReasonModal: I,
					onShowTooltip: U,
					post: K,
					tooltipType: W,
					isModQueueDisplayEnabled: H
				} = e;
				const q = {
						caretOnTop: !1
					},
					z = K.isRemoved && !K.modRemovalReason && !K.modNote && K.belongsTo.type === h.a.SUBREDDIT,
					G = F("Approve", K.id, W),
					V = F("Archived", K.id, W),
					Q = F("Lock", K.id, W),
					J = F("Mod", K.id, W),
					X = F("Remove", K.id, W),
					Z = F("Report", K.id, W),
					Y = F("Spam", K.id, W),
					$ = F("Sticky", K.id, W),
					ee = F("Pinned", K.id, W);
				return r.a.createElement("div", {
					className: t
				}, a && n && K.distinguishType === l.H.MODERATOR && r.a.createElement(s.Fragment, null, r.a.createElement(x.a, {
					name: "mod",
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.modIcon)
				}), r.a.createElement(u.c, M({
					tooltipId: J,
					text: L(n)
				}, q))), K.isArchived && r.a.createElement(s.Fragment, null, r.a.createElement(E.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.archivedIcon),
					desc: N(),
					id: V,
					onMouseEnter: U(V),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: V,
					text: N()
				}, q))), K.isLocked && !K.isSponsored && r.a.createElement(s.Fragment, null, r.a.createElement(y.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.lockIcon),
					desc: D(),
					id: Q,
					onMouseEnter: U(Q),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: Q,
					text: D()
				}, q))), i && Object(S.v)(K) && !d && r.a.createElement(s.Fragment, null, r.a.createElement(j.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.stickyIcon),
					desc: A(),
					id: $,
					onMouseEnter: U($),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: $,
					text: A()
				}, q))), b && m && r.a.createElement(s.Fragment, null, r.a.createElement(j.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.stickyIcon),
					desc: B(),
					id: ee,
					onMouseEnter: U(ee),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: ee,
					text: B()
				}, q))), !H && r.a.createElement(r.a.Fragment, null, (K.isApproved || K.approvedBy) && r.a.createElement(s.Fragment, null, r.a.createElement(C.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.approveIcon),
					desc: Object(g.a)(K),
					id: G,
					onMouseEnter: U(G),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: G,
					text: Object(g.a)(K)
				}, q))), Object(f.a)(K) && r.a.createElement(s.Fragment, null, r.a.createElement(O.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.removeIcon),
					desc: Object(g.b)(K),
					id: X,
					onMouseEnter: U(X),
					onMouseLeave: w
				}), z && r.a.createElement(p.a, {
					className: P.a.addRemovalReason,
					onClick: I,
					text: o.fbt._("Add a removal reason", null, {
						hk: "1YDo3"
					})
				}), (K.modRemovalReason || K.modNote) && r.a.createElement(R, {
					onMouseEnter: U(X),
					onMouseLeave: w
				}, o.fbt._("Removal reason", null, {
					hk: "2DhKVZ"
				})), r.a.createElement(u.c, M({
					tooltipId: X,
					text: Object(g.b)(K)
				}, q))), K.bannedBy && K.isSpam && r.a.createElement(s.Fragment, null, r.a.createElement(_.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.spamIcon),
					desc: Object(g.d)(K),
					id: Y,
					onMouseEnter: U(Y),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: Y,
					text: Object(g.d)(K)
				}, q)))), Object(v.a)(K) && !T && !H && r.a.createElement(s.Fragment, null, r.a.createElement(k.a, {
					isFilled: !0,
					className: Object(c.a)(P.a.icon, P.a.reportIcon),
					desc: Object(g.c)(K.numReports),
					id: Z,
					onMouseEnter: U(Z),
					onMouseLeave: w
				}), r.a.createElement(u.c, M({
					tooltipId: Z,
					text: Object(g.c)(K.numReports)
				}, q))))
			}))
		},
		"./src/reddit/components/PostCreationForm/Button/index.m.less": function(e, t, n) {
			e.exports = {
				PrimaryButton: "_18Bo5Wuo3tMV-RDB8-kh8Z",
				primaryButton: "_18Bo5Wuo3tMV-RDB8-kh8Z",
				SecondaryButton: "lUsjLveKkZWUAgDDyU1rD",
				secondaryButton: "lUsjLveKkZWUAgDDyU1rD"
			}
		},
		"./src/reddit/components/PostCreationForm/Button/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			})), n.d(t, "b", (function() {
				return c
			}));
			var o = n("./src/reddit/controls/Button/index.tsx"),
				s = n("./src/reddit/components/PostCreationForm/Button/index.m.less"),
				r = n.n(s),
				i = n("./src/lib/lessComponent.tsx");
			const a = i.a.wrapped(o.l, "PrimaryButton", r.a),
				c = i.a.wrapped(o.o, "SecondaryButton", r.a)
		},
		"./src/reddit/components/PostCreationForm/CollectionListModal/CollectionListItem/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_1IZotn_IQQ1fgtUjaFYbkd",
				onHoverActionText: "_1Zlk1VrZ8puYZy5lJOfz--",
				Container: "_1IZotn_IQQ1fgtUjaFYbkd",
				PostTitle: "_1hzDym_NpIlizkTDXc_rQj",
				postTitle: "_1hzDym_NpIlizkTDXc_rQj",
				MetaLine: "_67JuJTdFwIJPLPDkyPX-f",
				metaLine: "_67JuJTdFwIJPLPDkyPX-f",
				SubredditName: "_88OYON0K3w_tpnmCSWlUX",
				subredditName: "_88OYON0K3w_tpnmCSWlUX",
				InfoSpan: "_3DFfW-OG-MvCLiiEN18mpq",
				infoSpan: "_3DFfW-OG-MvCLiiEN18mpq"
			}
		},
		"./src/reddit/components/PostCreationForm/CollectionListModal/index.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "_1QvpnsvD_e--dvDTEcz7_w",
				wrapper: "_1QvpnsvD_e--dvDTEcz7_w",
				TopRow: "vuQEtla32r0kemmh11Hov",
				topRow: "vuQEtla32r0kemmh11Hov",
				TitleRow: "_1eSyFPTFSsfyp8BVxs83PB",
				titleRow: "_1eSyFPTFSsfyp8BVxs83PB",
				DetailsContainer: "_87UrrqUro4oVpXFAElZUX",
				detailsContainer: "_87UrrqUro4oVpXFAElZUX",
				ButtonRow: "_1CUOht5hsM0AF9T3Ox1yos",
				buttonRow: "_1CUOht5hsM0AF9T3Ox1yos",
				CloseWrapper: "_3OsXrjEdHgK1wJBfPX6IhR",
				closeWrapper: "_3OsXrjEdHgK1wJBfPX6IhR",
				Close: "_1TaKYhB80ExuTPoLaQZMRE",
				close: "_1TaKYhB80ExuTPoLaQZMRE",
				Empty: "_20K7F6rAgXGH5z83v7Ifiv",
				empty: "_20K7F6rAgXGH5z83v7Ifiv",
				EmptyImage: "_2eLeResic3Gc77W_edgNGt",
				emptyImage: "_2eLeResic3Gc77W_edgNGt",
				EmptyText: "_3t6VBoBsR8CGQvaPLHPjmW",
				emptyText: "_3t6VBoBsR8CGQvaPLHPjmW",
				FilterWrapper: "pKfhphFBuya82DYP2Q90X",
				filterWrapper: "pKfhphFBuya82DYP2Q90X",
				FilterInput: "_3W5cary86KmYWrVgEpGKPb",
				filterInput: "_3W5cary86KmYWrVgEpGKPb",
				SearchIcon: "_9T_dguVcd795c_vOyl9s4",
				searchIcon: "_9T_dguVcd795c_vOyl9s4",
				PlusIcon: "hfmgzmXCLe3hvSyZad9WP",
				plusIcon: "hfmgzmXCLe3hvSyZad9WP",
				CreateCollectionButton: "_34_h0zRV3AgFr_0sh99pKz",
				createCollectionButton: "_34_h0zRV3AgFr_0sh99pKz"
			}
		},
		"./src/reddit/components/PostCreationForm/CollectionListModal/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/config.ts"),
				s = n("./node_modules/fbt/lib/FbtPublic.js"),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./node_modules/react-redux/es/index.js"),
				c = n("./node_modules/reselect/es/index.js"),
				l = n("./src/higherOrderComponents/asModal/index.tsx"),
				d = n("./src/lib/memoizeByReference/index.ts"),
				u = n("./src/reddit/actions/postCreation/general.ts"),
				p = n("./src/reddit/components/TrackingHelper/index.tsx"),
				m = n("./src/reddit/constants/keycodes.ts"),
				h = n("./src/reddit/controls/Button/index.tsx"),
				b = n("./src/reddit/controls/Input/index.tsx"),
				f = n("./src/reddit/icons/svgs/Close/index.tsx"),
				g = n("./src/reddit/icons/svgs/Plus/index.tsx"),
				v = n("./src/reddit/icons/svgs/Search/index.tsx"),
				x = n("./src/reddit/layout/row/Inline/index.tsx"),
				C = n("./src/reddit/models/PostCreationForm/index.ts"),
				E = n("./src/reddit/selectors/postCollection.ts"),
				y = n("./src/reddit/controls/MetaSeparator/index.tsx"),
				O = n("./src/reddit/components/HumanDate/index.tsx"),
				k = n("./src/reddit/helpers/name/index.ts"),
				_ = n("./src/reddit/models/Subreddit/index.ts"),
				j = n("./src/reddit/models/User/index.ts"),
				S = n("./src/reddit/selectors/subreddit.ts"),
				T = n("./src/reddit/selectors/user.ts"),
				w = n("./src/reddit/components/PostCreationForm/CollectionListModal/CollectionListItem/index.m.less"),
				I = n.n(w),
				P = n("./src/lib/lessComponent.tsx");
			const {
				fbt: M
			} = n("./node_modules/fbt/lib/FbtPublic.js"), R = P.a.div("Container", I.a), N = P.a.h2("PostTitle", I.a), D = P.a.div("MetaLine", I.a), L = P.a.span("SubredditName", I.a), A = P.a.time("InfoSpan", I.a), B = Object(c.c)({
				subreddit: (e, t) => {
					let {
						collection: {
							subredditId: n
						}
					} = t;
					return n ? Object(S.X)(e, {
						subredditId: n
					}) : void 0
				},
				user: T.m
			});
			class F extends i.a.PureComponent {
				constructor() {
					super(...arguments), this.onClick = () => {
						this.props.onClick(this.props.collection.id)
					}
				}
				render() {
					const {
						collection: e,
						subreddit: t,
						user: n,
						onHoverActionText: o
					} = this.props, s = t && Object(_.i)(t) && n ? Object(k.e)(Object(j.e)(n)) : t ? t.displayText : "", r = e.postIds.length;
					return i.a.createElement(R, {
						onClick: this.onClick,
						className: I.a.container
					}, i.a.createElement(N, {
						"data-redditstyle": !0
					}, e.title), i.a.createElement(D, {
						"data-redditstyle": !0
					}, s && i.a.createElement(L, {
						"data-redditstyle": !0
					}, s), s && i.a.createElement(y.b, null), i.a.createElement(A, null, M._({
						"*": "{number of posts} posts",
						_1: "1 post"
					}, [M._plural(r, "number of posts")], {
						hk: "1Uy96U"
					})), i.a.createElement(y.b, null), i.a.createElement(A, null, M._("created {time}", [M._param("time", i.a.createElement(O.d, {
						seconds: e.createdAtUTC
					}))], {
						hk: "2cUc5m"
					}))), o && i.a.createElement("div", {
						className: I.a.onHoverActionText
					}, i.a.createElement("span", null, o)))
				}
			}
			var U = Object(a.b)(B)(F),
				K = n("./src/reddit/helpers/trackers/postCollection.ts"),
				W = n("./src/reddit/components/PostCreationForm/CollectionListModal/index.m.less"),
				H = n.n(W);
			const q = `${o.a.assetPath}/img/snoo-drafts.png`,
				z = P.a.div("TopRow", H.a),
				G = P.a.div("TitleRow", H.a),
				V = P.a.div("DetailsContainer", H.a),
				Q = P.a.wrapped(x.a, "ButtonRow", H.a),
				J = P.a.div("CloseWrapper", H.a),
				X = P.a.wrapped(f.a, "Close", H.a),
				Z = P.a.div("Empty", H.a),
				Y = P.a.img("EmptyImage", H.a),
				$ = P.a.p("EmptyText", H.a),
				ee = P.a.div("FilterWrapper", H.a),
				te = P.a.wrapped(b.a, "FilterInput", H.a),
				ne = P.a.wrapped(v.a, "SearchIcon", H.a),
				oe = P.a.wrapped(g.a, "PlusIcon", H.a),
				se = P.a.wrapped(h.p, "CreateCollectionButton", H.a),
				re = Object(d.a)((e, t) => {
					const n = t.toLowerCase();
					return e.filter(e => e.title.toLowerCase().includes(n))
				}),
				ie = Object(c.c)({
					collections: E.v
				}),
				ae = Object(a.b)(ie, (e, t) => {
					let {
						postId: n,
						isOverlay: o
					} = t;
					return {
						onOpenCreateCollectionModal: () => {
							let t = C.b;
							n && (t = Object(C.u)(n, !!o)), e(Object(u.z)(t))
						}
					}
				});
			class ce extends i.a.PureComponent {
				constructor() {
					super(...arguments), this.state = {
						filterStr: ""
					}, this.close = () => {
						this.props.sendEvent(Object(K.c)()), this.props.onClose()
					}, this.handleEscapeKey = e => {
						e.keyCode === m.a.Escape && this.close()
					}, this.handleCreateCollectionClicked = () => {
						this.props.onOpenCreateCollectionModal(), this.props.sendEvent(Object(K.j)())
					}, this.handleCollectionSelected = e => {
						this.props.onSelectCollection(e), this.props.sendEvent(Object(K.q)())
					}, this.onFilterStringChange = e => {
						this.setState({
							filterStr: e.target.value
						})
					}, this.renderItem = e => i.a.createElement(U, {
						key: e.id,
						collection: e,
						onClick: () => this.handleCollectionSelected(e),
						onHoverActionText: this.props.onItemHoverActionText
					})
				}
				componentDidMount() {
					document.addEventListener("keydown", this.handleEscapeKey), this.props.sendEvent(Object(K.d)())
				}
				componentWillUnmount() {
					document.removeEventListener("keydown", this.handleEscapeKey)
				}
				renderNoCollections() {
					return i.a.createElement(Z, null, i.a.createElement(Y, {
						src: q
					}), i.a.createElement($, null, s.fbt._("Your collections will live here", null, {
						hk: "FCxWg"
					})))
				}
				renderNoFilterMatches() {
					return i.a.createElement(Z, null, i.a.createElement($, null, s.fbt._("No collection matching filter", null, {
						hk: "2vawdK"
					}), ";"))
				}
				render() {
					const {
						collections: e,
						titleText: t
					} = this.props;
					let n;
					if (0 === e.length) n = this.renderNoCollections();
					else {
						const t = re(e, this.state.filterStr);
						n = 0 === t.length ? this.renderNoFilterMatches() : t.map(this.renderItem)
					}
					return i.a.createElement("div", {
						className: H.a.wrapper,
						"data-redditstyle": !0
					}, i.a.createElement(z, null, i.a.createElement(G, {
						"data-redditstyle": !0
					}, t || s.fbt._("My collections", null, {
						hk: "3yKovS"
					}), i.a.createElement(J, {
						onClick: this.close
					}, i.a.createElement(X, {
						"data-redditstyle": !0
					}))), i.a.createElement(ee, null, i.a.createElement(ne, null), i.a.createElement(te, {
						placeholder: s.fbt._("Find a collection", null, {
							hk: "3DbFBU"
						}),
						value: this.state.filterStr,
						onChange: this.onFilterStringChange
					}))), i.a.createElement(V, null, n), i.a.createElement(Q, null, i.a.createElement(se, {
						onClick: this.handleCreateCollectionClicked
					}, i.a.createElement(oe, null), s.fbt._("Create a collection", null, {
						hk: "37xJVm"
					}))))
				}
			}
			const le = Object(l.a)(ae(Object(p.c)(ce)));
			t.a = le
		},
		"./src/reddit/components/PostCreationForm/ControlRow/AddTournamentPredictionButton/index.m.less": function(e, t, n) {
			e.exports = {
				addTournamentPredictionButton: "_379A0ry8uhFTCCqbGtPG08",
				tooltip: "NKpm2s1DjP3vbRrlx4pxe"
			}
		},
		"./src/reddit/components/PostCreationForm/ControlRow/LivechatBadge/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_2xKRZlLAshNDtzawtZNAcQ",
				liveTag: "Vgnuv7YJuNcHtQf7kh5Hd"
			}
		},
		"./src/reddit/components/PostCreationForm/ControlRow/PostModifiers/OCDisclaimer/index.m.less": function(e, t, n) {
			e.exports = {
				DontShowButton: "_1GOEXFnWfJy7WEF43f7RJk",
				dontShowButton: "_1GOEXFnWfJy7WEF43f7RJk",
				Component: "w3m9FyPsy2phDlWxoznhq",
				component: "w3m9FyPsy2phDlWxoznhq"
			}
		},
		"./src/reddit/components/PostCreationForm/ControlRow/PostModifiers/PostModifierButton/index.m.less": function(e, t, n) {
			e.exports = {
				PostModifierButton: "_5x1WjCc4HQF6tqnODOql0",
				postModifierButton: "_5x1WjCc4HQF6tqnODOql0",
				active: "HvFw1XKOfl5Jh7Run7iq4",
				HoverTooltip: "zprH8YpG-gVpFuEr-eQJw",
				hoverTooltip: "zprH8YpG-gVpFuEr-eQJw",
				TintOverlay: "stbc2Exoq0W4ZkGltglct",
				tintOverlay: "stbc2Exoq0W4ZkGltglct",
				isDisabled: "_3rEHSruwAvICnPAngYiIW1",
				mShiftTooltipToTheRight: "gceWvjO6tPHW1sEDhwkGK",
				Icon: "_3DWz59jTNPem2lIMybAGb8",
				icon: "_3DWz59jTNPem2lIMybAGb8"
			}
		},
		"./src/reddit/components/PostCreationForm/ControlRow/PostModifiers/index.m.less": function(e, t, n) {
			e.exports = {
				FlairComponent: "_2YM79GnDqrRjQQcFtEokkY",
				flairComponent: "_2YM79GnDqrRjQQcFtEokkY",
				FlairTextWrapper: "_1pXTTYLLHHqfgwyMuCqT6T",
				flairTextWrapper: "_1pXTTYLLHHqfgwyMuCqT6T",
				ModifierRow: "_2_rA2mCdhHc1Lr7Ff1ygvH",
				modifierRow: "_2_rA2mCdhHc1Lr7Ff1ygvH",
				AddFlair: "_1LD2Xsr3fioSkWZ13vMORC",
				addFlair: "_1LD2Xsr3fioSkWZ13vMORC",
				Text: "_2iXMeyQ3VxZmKCXkplOvQ_",
				text: "_2iXMeyQ3VxZmKCXkplOvQ_",
				TintOverlay: "_2vWD8kW1_iU4dc3CgY9_gH",
				tintOverlay: "_2vWD8kW1_iU4dc3CgY9_gH",
				FlairIcon: "_2U5dhGN1LkTGmvfDSXp7Pn",
				flairIcon: "_2U5dhGN1LkTGmvfDSXp7Pn",
				StyledCaretIcon: "MZjVSHyz_JYuVJV8JeezH",
				styledCaretIcon: "MZjVSHyz_JYuVJV8JeezH",
				mHasError: "_12W0J-fwDQQ6_tQ9fdpzqG",
				errorMessages: "_29DzChs2ytJ2zOxDSU_YZZ"
			}
		},
		"./src/reddit/components/PostCreationForm/ControlRow/ToggleDestCollectionButton/index.m.less": function(e, t, n) {
			e.exports = {
				button: "_1FASP6jHc95Gr8_JE5NtRM",
				active: "_2cgz1Psg0iRSwK2eF0PY7a"
			}
		},
		"./src/reddit/components/PostCreationForm/ControlRow/index.m.less": function(e, t, n) {
			e.exports = {
				ButtonLayout: "_1T0P_YQg7fOYLCRoKl_xxO",
				buttonLayout: "_1T0P_YQg7fOYLCRoKl_xxO",
				buttonLayoutStyles: "_1BOItL6vmZFDKOuaOKKJHf",
				SaveDraftButtonLayout: "_2qdAvPbBMsK4TpwNnVe-pj",
				saveDraftButtonLayout: "_2qdAvPbBMsK4TpwNnVe-pj",
				Container: "_1d1--0DMy_jAIxCCoYMo1k",
				container: "_1d1--0DMy_jAIxCCoYMo1k",
				isSubRec: "_10YwpQ5TofUedjLm5Gxek4",
				Divider: "_3DzaxETs3eHqVBAuiSTECq",
				divider: "_3DzaxETs3eHqVBAuiSTECq",
				ButtonsAndErrors: "_2DHDj0dbS1TkKD3fMqSbHy",
				buttonsAndErrors: "_2DHDj0dbS1TkKD3fMqSbHy",
				formActionsPanel: "_1wpwfeCqAvc32pPsMD0YkY",
				buttons: "I8hSeA0pEmfzicVKE1j_y",
				errorMessages: "_2kLLxn1y9vaTeT0OAc-Ikc",
				PostLoadingIcon: "_2QZRXSFrX2qcSjZIV5mRzK",
				postLoadingIcon: "_2QZRXSFrX2qcSjZIV5mRzK",
				DraftLoadingIcon: "_4S5sqoV61IY7tpZqBwoKQ",
				draftLoadingIcon: "_4S5sqoV61IY7tpZqBwoKQ",
				postModifiers: "_2pAQpGYEPAVsPmV5uVmGGU",
				clockIcon: "_1z-5BtMZ_1-gl9JLssX5SJ",
				postScheduleButton: "_2cMg4VsPGSoc_OwPOPRAie",
				postScheduleIcon: "_1ND9PCHVFG_UrSPdlJqv5W",
				removeRightBorderRadius: "_1_Xn_Na9NfUSd_yoc1w2Eb"
			}
		},
		"./src/reddit/components/PostCreationForm/CreateOrEditCollectionModal/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_3vV_tKesULQ5WMGh38lX4b",
				container: "_3vV_tKesULQ5WMGh38lX4b",
				Content: "_11JSvybbRhcX_cfoagpne_",
				content: "_11JSvybbRhcX_cfoagpne_",
				TitleRow: "_3Ev4JRxdS9-3GTBR5M1yCP",
				titleRow: "_3Ev4JRxdS9-3GTBR5M1yCP",
				Details: "_3Uw02TWwSQhLfCJkPsihqr",
				details: "_3Uw02TWwSQhLfCJkPsihqr",
				Footer: "_25MDqXgOCWDBjtAEBi2cmy",
				footer: "_25MDqXgOCWDBjtAEBi2cmy",
				CancelButton: "_2tLOIj2nClBaVRuMBIJE8X",
				cancelButton: "_2tLOIj2nClBaVRuMBIJE8X",
				CloseWrapper: "_GVnqGyX40oKfgIS56Q-k",
				closeWrapper: "_GVnqGyX40oKfgIS56Q-k",
				CloseIcon: "_1GgoANMMbLQJ-gSefDJZuZ",
				closeIcon: "_1GgoANMMbLQJ-gSefDJZuZ",
				Label: "_3QPFKpxsmu6j_gbiAuVgfW",
				label: "_3QPFKpxsmu6j_gbiAuVgfW",
				TitleInput: "ZEfw7a99aHsmkl4fx38l5",
				titleInput: "ZEfw7a99aHsmkl4fx38l5",
				AddCollectionIcon: "_30BNMMyQPTPvHEoL3-LXrM",
				addCollectionIcon: "_30BNMMyQPTPvHEoL3-LXrM",
				PrimaryActionButton: "_22f_S1XUre_FujBgOgEHJe",
				primaryActionButton: "_22f_S1XUre_FujBgOgEHJe",
				LoadingIcon: "_3cD2qECfUUTwega16qDhBc",
				loadingIcon: "_3cD2qECfUUTwega16qDhBc",
				ErrorText: "GIQ2YnBHQtY1QM1yPEhCR",
				errorText: "GIQ2YnBHQtY1QM1yPEhCR"
			}
		},
		"./src/reddit/components/PostCreationForm/CreateOrEditCollectionModal/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/higherOrderComponents/asModal/index.tsx"),
				l = n("./src/lib/formatApiError/index.ts"),
				d = n("./src/reddit/actions/postCollection/index.ts"),
				u = n("./src/reddit/components/ModalStyledComponents/index.tsx"),
				p = n("./src/reddit/constants/postCreation.ts"),
				m = n("./src/reddit/controls/Button/index.tsx"),
				h = n("./src/reddit/controls/ErrorText/index.tsx"),
				b = n("./src/reddit/controls/Input/index.tsx"),
				f = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				g = n("./src/reddit/icons/svgs/AddCollection/index.tsx"),
				v = n("./src/reddit/icons/svgs/Close/index.tsx"),
				x = n("./src/reddit/layout/row/Inline/index.tsx"),
				C = n("./src/reddit/selectors/postCollection.ts"),
				E = n("./src/reddit/components/PostCreationForm/CreateOrEditCollectionModal/index.m.less"),
				y = n.n(E),
				O = n("./src/lib/lessComponent.tsx");
			const k = O.a.div("Container", y.a),
				_ = O.a.div("Content", y.a),
				j = O.a.div("TitleRow", y.a),
				S = O.a.div("Details", y.a),
				T = O.a.wrapped(u.g, "Footer", y.a),
				w = O.a.wrapped(m.o, "CancelButton", y.a),
				I = O.a.div("CloseWrapper", y.a),
				P = O.a.wrapped(v.a, "CloseIcon", y.a),
				M = O.a.label("Label", y.a),
				R = O.a.wrapped(b.a, "TitleInput", y.a),
				N = O.a.wrapped(g.a, "AddCollectionIcon", y.a),
				D = O.a.wrapped(m.l, "PrimaryActionButton", y.a),
				L = O.a.wrapped(f.a, "LoadingIcon", y.a),
				A = O.a.wrapped(h.b, "ErrorText", y.a),
				B = Object(a.c)({
					collection: C.q,
					error: C.c,
					isPending: C.g
				}),
				F = Object(i.b)(B, (e, t) => ({
					onCreate: (t, n) => e(Object(d.b)(t, n)),
					onUpdate: n => e(Object(d.h)(t.collectionId, n))
				}));
			class U extends r.a.PureComponent {
				constructor(e) {
					super(e), this.onTitleChange = e => {
						this.setState({
							collectionTitle: e.target.value
						})
					}, this.onPrimaryButtonClick = async () => {
						const {
							collectionId: e,
							subredditId: t
						} = this.props, {
							collectionTitle: n
						} = this.state;
						if (e) {
							await this.props.onUpdate(n) && this.props.onCollectionUpdated && this.props.onCollectionUpdated()
						} else {
							const e = await this.props.onCreate(n, t);
							e && this.props.onCollectionCreated && this.props.onCollectionCreated(e)
						}
					}, this.onClose = () => {
						this.props.onCancel()
					};
					const {
						collection: t
					} = e;
					this.state = {
						collectionTitle: t ? t.title : ""
					}
				}
				render() {
					const {
						collectionId: e,
						error: t,
						isPending: n
					} = this.props, s = !e, i = !!this.state.collectionTitle.trim(), a = s ? o.fbt._("Create", null, {
						hk: "Ijp7n"
					}) : o.fbt._("Save", null, {
						hk: "4yMsMq"
					});
					return r.a.createElement(k, null, r.a.createElement(I, {
						onClick: this.props.onCancel
					}, r.a.createElement(P, null)), r.a.createElement(_, null, s && r.a.createElement(r.a.Fragment, null, r.a.createElement(j, null, r.a.createElement(N, null), o.fbt._("Create a collection", null, {
						hk: "3ndxk5"
					})), r.a.createElement(S, null, o.fbt._("Group posts into one feed. Create a series of events or just a group of random things. Make something awesome!", null, {
						hk: "2eCAQw"
					}))), r.a.createElement(M, null, s ? o.fbt._("Give a title for your collection", null, {
						hk: "Uaqbe"
					}) : o.fbt._("Edit title", null, {
						hk: "1jzweg"
					}), r.a.createElement(R, {
						maxLength: p.e,
						onChange: this.onTitleChange,
						placeholder: o.fbt._("Enter title", null, {
							hk: "3B0iRI"
						}),
						value: this.state.collectionTitle
					}))), r.a.createElement(T, null, r.a.createElement(x.a, null, r.a.createElement(w, {
						onClick: this.props.onCancel
					}, o.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})), r.a.createElement(D, {
						onClick: this.onPrimaryButtonClick,
						disabled: n || !i
					}, n ? r.a.createElement(L, {
						sizePx: 10
					}) : a)), t && r.a.createElement(A, null, Object(l.a)(t))))
				}
			}
			t.a = Object(c.a)(F(U))
		},
		"./src/reddit/components/PostCreationForm/CreationControls/index.m.less": function(e, t, n) {
			e.exports = {
				SubredditPicker: "k3D4EVssJ1w-8irx6jW6k",
				subredditPicker: "k3D4EVssJ1w-8irx6jW6k",
				ControlRow: "i0kJNtq5ma1uzbOX9_mM4",
				controlRow: "i0kJNtq5ma1uzbOX9_mM4",
				SubredditRec: "_1tgC4BQSzljd9viPIEvxd3",
				subredditRec: "_1tgC4BQSzljd9viPIEvxd3"
			}
		},
		"./src/reddit/components/PostCreationForm/DraftListModal/DraftListItem/Icon.m.less": function(e, t, n) {
			e.exports = {
				Component: "_2zmE2mxeSGThXfrD20TENk",
				component: "_2zmE2mxeSGThXfrD20TENk"
			}
		},
		"./src/reddit/components/PostCreationForm/DraftListModal/DraftListItem/Placeholder.m.less": function(e, t, n) {
			e.exports = {
				Container: "_3s9TqP-_YHesViWXcd4cMj",
				container: "_3s9TqP-_YHesViWXcd4cMj",
				LeftBlock: "_3ZfLmI01IKam1zqUNiCCY6",
				leftBlock: "_3ZfLmI01IKam1zqUNiCCY6",
				Content: "_3GIbVaHf4QKOhABI3DhSMo",
				content: "_3GIbVaHf4QKOhABI3DhSMo",
				MediaIcon: "_31VuujawtoKX7A_ykq786h",
				mediaIcon: "_31VuujawtoKX7A_ykq786h",
				Title: "_24WZEeSSq6ekrxl4oZMhB3",
				title: "_24WZEeSSq6ekrxl4oZMhB3",
				Secondary: "_1a6BjjqFgWMfDd1GftKY3a",
				secondary: "_1a6BjjqFgWMfDd1GftKY3a"
			}
		},
		"./src/reddit/components/PostCreationForm/DraftListModal/DraftListItem/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_2mGd4F9ksQ8wRlvFjnL0wz",
				container: "_2mGd4F9ksQ8wRlvFjnL0wz",
				LeftBlock: "_32kTNEqb0vEW5J0BmJdwnn",
				leftBlock: "_32kTNEqb0vEW5J0BmJdwnn",
				Content: "wrG0DeMFlU8RmFoT1gUDM",
				content: "wrG0DeMFlU8RmFoT1gUDM",
				RightBlock: "AnY3sJDM9Z2aUfyXs2Hfl",
				rightBlock: "AnY3sJDM9Z2aUfyXs2Hfl",
				PostTitle: "_25WWHqf4udQb0G9Wa_ar6s",
				postTitle: "_25WWHqf4udQb0G9Wa_ar6s",
				EditingPostTitle: "_3kH-PKnEjv45UIFAwY_XwK",
				editingPostTitle: "_3kH-PKnEjv45UIFAwY_XwK",
				MetaLine: "_1P65-c5DlnBqJL1jOa9TFr",
				metaLine: "_1P65-c5DlnBqJL1jOa9TFr",
				SubredditName: "_2cQKCpCLQTg1gPnnhEqZ6z",
				subredditName: "_2cQKCpCLQTg1gPnnhEqZ6z",
				DraftSavedTime: "Aegaj4-SLZNjFEolptURF",
				draftSavedTime: "Aegaj4-SLZNjFEolptURF",
				TrashIcon: "lWsFaDYxW8Sc4sqVTxVGv",
				trashIcon: "lWsFaDYxW8Sc4sqVTxVGv",
				InteractiveDiv: "_1nhwaUh9TlWeM5H9a_E18l",
				interactiveDiv: "_1nhwaUh9TlWeM5H9a_E18l",
				ConfirmDelete: "_3lIfF-MBpq24PJLxdGfIWQ",
				confirmDelete: "_3lIfF-MBpq24PJLxdGfIWQ"
			}
		},
		"./src/reddit/components/PostCreationForm/DraftListModal/index.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "_29SuZj4Q_M_-p6FwlKJw2V",
				wrapper: "_29SuZj4Q_M_-p6FwlKJw2V",
				TitleRow: "_1t9vurufwtvAZm6k-7T1N0",
				titleRow: "_1t9vurufwtvAZm6k-7T1N0",
				DraftsNumber: "VA7GC_5VP6Yx4VSLaCW7T",
				draftsNumber: "VA7GC_5VP6Yx4VSLaCW7T",
				DetailsContainer: "_2ffvzlYi6yd1I-j5ndDKFm",
				detailsContainer: "_2ffvzlYi6yd1I-j5ndDKFm",
				ButtonRow: "_3JS6XDYnB0zNhQRfV4rLl0",
				buttonRow: "_3JS6XDYnB0zNhQRfV4rLl0",
				CancelButton: "_2AHvxdRmdK6Dve6_MNs6YW",
				cancelButton: "_2AHvxdRmdK6Dve6_MNs6YW",
				CloseWrapper: "_2put2qtgUIjmVIlQlZxeTb",
				closeWrapper: "_2put2qtgUIjmVIlQlZxeTb",
				Close: "_1Ojj3n0SwnEevN0xKAhtFi",
				close: "_1Ojj3n0SwnEevN0xKAhtFi",
				Empty: "_3j6Qa8OS7J6clTSNxqrADq",
				empty: "_3j6Qa8OS7J6clTSNxqrADq",
				EmptyImage: "_13SmMRVwMLfOrhzEqQQXrJ",
				emptyImage: "_13SmMRVwMLfOrhzEqQQXrJ",
				EmptyText: "_2OF81CBhfbV9gjOU-5n9Dr",
				emptyText: "_2OF81CBhfbV9gjOU-5n9Dr",
				DraftListModal: "_2bMp7e8oHvukp1hKtlg1r-",
				draftListModal: "_2bMp7e8oHvukp1hKtlg1r-"
			}
		},
		"./src/reddit/components/PostCreationForm/EduTooltips/BaseEduTooltip/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_1LVDV1pks4den73WWY46GI",
				contentContainer: "_3v3OHx0_DIBm8WcTKrQ_Vj",
				description: "_1ZyYR40qdR1KVaYW3JJnFF",
				gotIt: "_31UHkJmzR05A-oHijI9dsj",
				hero: "_3KJU9tTmfe-f0PGdg1hJ6O",
				icon: "_1TqYQFIF_2oaFDavvx7TEE",
				iconExplanation: "_2gaQgwvoc2dROc2Uramfat",
				iconsExplanations: "_1IKgmmXb6LA2blrkyfqnxx",
				title: "_1ZeryymPzBgAm7zK9oPs3l",
				Container: "_1LVDV1pks4den73WWY46GI",
				OuterContainer: "_3cH-rE_yhLIp3GscF-WShj",
				outerContainer: "_3cH-rE_yhLIp3GscF-WShj"
			}
		},
		"./src/reddit/components/PostCreationForm/EduTooltips/CollectionButtonTooltip/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_3zSOhojke1hMymIth30Ue"
			}
		},
		"./src/reddit/components/PostCreationForm/LinkEditor/index.m.less": function(e, t, n) {
			e.exports = {
				URLInput: "_3zY6b4QJpSz1067ahq73_K",
				urlInput: "_3zY6b4QJpSz1067ahq73_K",
				mHasError: "_1WipnslOO1oVfOEMxsrYU3"
			}
		},
		"./src/reddit/components/PostCreationForm/MarkdownEditor/index.m.less": function(e, t, n) {
			e.exports = {
				LoadingIcon: "dyBWJSV5slC_6_q-avEAz",
				loadingIcon: "dyBWJSV5slC_6_q-avEAz",
				ModeDescription: "_2wjlEqW6Mz7pFfwBHVpPEA",
				modeDescription: "_2wjlEqW6Mz7pFfwBHVpPEA",
				ModeWrapper: "_2IWlVWhYLpVswet-ElQ9xx",
				modeWrapper: "_2IWlVWhYLpVswet-ElQ9xx",
				SwitchModeButton: "_2POD_tWc9UVvI3zBwPH9Yu",
				switchModeButton: "_2POD_tWc9UVvI3zBwPH9Yu",
				MarkdownHelpButton: "oqXBQCZarmL4V15c4Izxm",
				markdownHelpButton: "oqXBQCZarmL4V15c4Izxm",
				Toolbar: "_1HVLi6b9dq2O2gkgGAO1Fa",
				toolbar: "_1HVLi6b9dq2O2gkgGAO1Fa"
			}
		},
		"./src/reddit/components/PostCreationForm/MarkdownEditor/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/reddit/actions/postCreation/general.ts"),
				l = n("./src/reddit/components/CommentCreation/MarkdownCommentForm/index.tsx"),
				d = n("./src/reddit/components/FocusableContent/index.tsx"),
				u = n("./src/reddit/components/MarkdownHelp/index.tsx"),
				p = n("./src/reddit/components/PostCreationForm/Prompt/index.tsx"),
				m = n("./src/reddit/components/ResizableAutosizeTextarea/index.tsx"),
				h = n("./src/reddit/constants/keycodes.ts"),
				b = n("./src/reddit/controls/Button/index.tsx"),
				f = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				g = n("./src/reddit/models/PostCreationForm/index.ts"),
				v = n("./src/reddit/selectors/activeModalId.ts"),
				x = n("./src/reddit/selectors/editorContent.ts"),
				C = n("./src/reddit/components/PostCreationForm/MarkdownEditor/index.m.less"),
				E = n.n(C),
				y = n("./src/lib/lessComponent.tsx");
			const O = y.a.wrapped(f.a, "LoadingIcon", E.a),
				k = e => {
					let {
						isFilled: t,
						...n
					} = e;
					return r.a.createElement(O, n)
				},
				_ = y.a.span("ModeDescription", E.a),
				j = y.a.div("ModeWrapper", E.a),
				S = y.a.wrapped(l.a, "MarkdownHelpButton", E.a),
				T = y.a.div("Toolbar", E.a),
				w = Object(a.c)({
					activeModalId: v.a,
					isConverting: e => Object(x.a)(e)
				}),
				I = Object(i.b)(w, (e, t) => ({
					onChange: n => {
						e(Object(c.c)(n)), t.onChange && t.onChange(n)
					},
					helpModalToggled: () => e(Object(c.z)(u.b)),
					switchToRTEModalToggled: () => e(Object(c.z)(p.a.SWITCH_TO_RTE_MODAL_ID))
				}));
			class P extends r.a.Component {
				constructor(e) {
					super(e), this.textAreaRef = null, this.onChange = e => {
						const {
							value: t
						} = e.currentTarget;
						this.props.onChange(t)
					}, this.onBlur = () => {
						this.setState({
							isFocused: !1
						}), this.props.onBlur && this.props.onBlur()
					}, this.onFocus = () => {
						const {
							onFocus: e
						} = this.props;
						e && e(), this.setState({
							isFocused: !0
						})
					}, this.handleKeyDown = e => {
						const {
							ctrlKey: t,
							metaKey: n,
							keyCode: o
						} = e;
						(t || n) && o === h.a.Enter && this.props.onSubmit()
					}, this.handleSwitchModeClick = () => {
						this.props.value ? this.props.switchToRTEModalToggled() : this.props.onSwitchEditorMode(g.i.RICH_TEXT, this.props.value)
					}, this.handleSwitchToRTEConfirm = () => {
						this.props.switchToRTEModalToggled(), this.props.onSwitchEditorMode(g.i.RICH_TEXT, this.props.value)
					}, this.setTextAreaRef = e => this.textAreaRef = e, this.state = {
						isFocused: !1
					}
				}
				componentDidMount() {
					const {
						instanceRef: e
					} = this.props;
					e && e(this)
				}
				componentWillUnmount() {
					const {
						instanceRef: e
					} = this.props;
					e && e(null)
				}
				focus() {
					this.textAreaRef && this.textAreaRef.focus()
				}
				render() {
					const {
						className: e,
						isConverting: t,
						placeholderText: n,
						focusableContentMarkdownClassName: s,
						value: i
					} = this.props, {
						isFocused: a
					} = this.state;
					return r.a.createElement("div", {
						className: e
					}, r.a.createElement(d.a, {
						className: s,
						isFocused: a
					}, r.a.createElement(T, null, r.a.createElement(j, null, r.a.createElement(_, null, o.fbt._("Markdown", null, {
						hk: "42KuwU"
					})), r.a.createElement(S, {
						onClick: this.props.helpModalToggled
					})), r.a.createElement(M, {
						isConverting: t,
						onClick: this.handleSwitchModeClick
					})), r.a.createElement(m.a, {
						disabled: !!this.props.disabled,
						initialHeight: this.props.initialHeight,
						innerRef: this.setTextAreaRef,
						onBlur: this.onBlur,
						onChange: this.onChange,
						onEditorResize: this.props.onEditorResize,
						onFocus: this.onFocus,
						onKeyDown: this.handleKeyDown,
						placeholder: n,
						value: i
					})), this.props.activeModalId === u.b && r.a.createElement(u.a, {
						withOverlay: !0
					}), this.props.activeModalId === p.a.SWITCH_TO_RTE_MODAL_ID && r.a.createElement(p.b, {
						modalId: p.a.SWITCH_TO_RTE_MODAL_ID,
						onCancel: this.props.switchToRTEModalToggled,
						onConfirm: this.handleSwitchToRTEConfirm
					}))
				}
			}
			const M = r.a.memo(e => {
				let {
					isConverting: t,
					onClick: n
				} = e;
				const s = o.fbt._("Switch to Fancy Pants Editor", null, {
					hk: "1AKY7t"
				});
				return r.a.createElement(b.t, {
					priority: b.c.Plain,
					size: b.d.XS,
					onClick: n,
					Icon: t ? k : void 0,
					text: s
				})
			});
			t.a = I(P)
		},
		"./src/reddit/components/PostCreationForm/MediaInput/DropArea/index.m.less": function(e, t, n) {
			e.exports = {
				HiddenInput: "sU2P34us34ODfjtvAFHEh",
				hiddenInput: "sU2P34us34ODfjtvAFHEh",
				UploadButton: "_3O09Fh0CTb1KXH9g--pyTm",
				uploadButton: "_3O09Fh0CTb1KXH9g--pyTm",
				HamsterSmall: "_2O_N8Ef-BG5Cfd4rpYn2gC",
				hamsterSmall: "_2O_N8Ef-BG5Cfd4rpYn2gC",
				HamsterLarge: "wV8IXIxvKm8PPZrR4ID63",
				hamsterLarge: "wV8IXIxvKm8PPZrR4ID63",
				Container: "_1Ts5GUNze2r03Hs4YNM7R7",
				container: "_1Ts5GUNze2r03Hs4YNM7R7",
				DropArea: "_1U5lLS9mQzBY-ItvbtGGLz",
				dropArea: "_1U5lLS9mQzBY-ItvbtGGLz",
				DropAreaActive: "_3dk8Anard_IzanCLoEOxwY",
				dropAreaActive: "_3dk8Anard_IzanCLoEOxwY",
				DropAreaOver: "_2u00X-QMmF0nCuc0JgGiPG",
				dropAreaOver: "_2u00X-QMmF0nCuc0JgGiPG",
				Paragraph: "_23Ktfv_B7IB6GfAwZ1n5KM",
				paragraph: "_23Ktfv_B7IB6GfAwZ1n5KM",
				ErrorMsg: "_1g07w9noInEjzrHqFqXu7p",
				errorMsg: "_1g07w9noInEjzrHqFqXu7p",
				Box: "_2bMJxWQqwzcVG4QCyh3UhG",
				box: "_2bMJxWQqwzcVG4QCyh3UhG"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/MultipleUploadStatusBar/index.m.less": function(e, t, n) {
			e.exports = {
				ControlRow: "XAYmQCRZd6pa1gK4J2Irv",
				controlRow: "XAYmQCRZd6pa1gK4J2Irv",
				OuterDivProgressBar: "_3lnXFUS1rk-i2bmQ9tBVAg",
				outerDivProgressBar: "_3lnXFUS1rk-i2bmQ9tBVAg",
				ProgressBar: "_2h9OzlkpNau2hE61muUCcM",
				progressBar: "_2h9OzlkpNau2hE61muUCcM",
				Status: "_2QlfNrUATpUf8fxWF3xLUc",
				status: "_2QlfNrUATpUf8fxWF3xLUc"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/AddImageItem.m.less": function(e, t, n) {
			e.exports = {
				AddImageWrapper: "_3mOObaE2qUuGBwPZt06QMP",
				addImageWrapper: "_3mOObaE2qUuGBwPZt06QMP",
				AddImageItem: "_1PHeBCrOhYxisqmUW-NOTZ",
				addImageItem: "_1PHeBCrOhYxisqmUW-NOTZ",
				plusIcon: "_3fjztH0o3WW8ugsD8VUpdG",
				hiddenInput: "_8GGSjoMJRi3bIAaFgk5VT"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/ImageItem.m.less": function(e, t, n) {
			e.exports = {
				GalleryMediaUpload: "_3cm8_J6ytCvL4Z0YkUO6fO",
				galleryMediaUpload: "_3cm8_J6ytCvL4Z0YkUO6fO",
				isDragging: "_1hQY_UY2EioccXnSHJuH2j",
				isSelected: "_3mV402dYSBG5F3rfKzCHih",
				isError: "_10Cb6hifpOfnmfdg7Zetit",
				galleryImage: "-_ofbVTDK5uSQ60HcXH2-",
				deleteButton: "_3611iw8TKLU1FFCTSMHMWl",
				deleteIcon: "_1RI3AZPuym8dOTJt-TRI38",
				showDeleteNormal: "_2LKMLYT_7bo_5rfh9705Pg"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/ImageItemsWrapper.m.less": function(e, t, n) {
			e.exports = {
				itemsWrapper: "_3BGk3QOycswdTTmIh9R56y",
				sortableImages: "_7eeHxLESKnWVh8uefc7iN",
				imageStyles: "_2175QbehBw28eJRKOGrVKp",
				hoverMarker: "_1q50A238Zq0unVV8sFYvEm",
				pendingItem: "_1liymuUZSLP_05fSC0_0iQ"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/InputWrapper.m.less": function(e, t, n) {
			e.exports = {
				inputWrapper: "_1ZgKdgcmpiQuMxVOb36gpi",
				inputStyles: "_3QhJ8Am-icOjVUrut4LpNH",
				urlInputStyles: "_2P6NoGE4s1hTODn5PMPuIh",
				charsCounter: "_18XDqj2Sr9Pi7101fkIdE3"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/Layout.m.less": function(e, t, n) {
			e.exports = {
				Layout: "_3uExMaQ9CE8L0F97PE7ESO",
				layout: "_3uExMaQ9CE8L0F97PE7ESO",
				hero: "_3cjkwfQbHf5cGuN_2K1uvN",
				mainContent: "D_D1mksZjLSJKHZf-qFgh",
				sideMetaContent: "_3s8GQtCSn-VS8biCUpM7QQ",
				bottomContent: "_1ipt9uyZjJ4fiF29YsWqgy"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/SelectedImage.m.less": function(e, t, n) {
			e.exports = {
				selectedImage: "_1HQ9Q4NlQY-2w_yLQXa4MW",
				pendingImage: "_16rNFI0ovowGxjX85OoDQ7"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/index.m.less": function(e, t, n) {
			e.exports = {
				dropArea: "_37BTO6li-OWodKOMQsps09",
				isDropAreaActive: "OPoLiV8gJNj-kgaS3TA6s",
				isDropAreaOver: "_2dpUJvIRjH1lQlhWr9Ln7B",
				errorMessage: "_1geBZyOTOcY8e2hp9dLJBb"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/MediaUpload/Preview/index.m.less": function(e, t, n) {
			e.exports = {
				Img: "_2CZpGuT-0gMB2CW-1Z4Rzr",
				img: "_2CZpGuT-0gMB2CW-1Z4Rzr",
				BlurImg: "_3lXopXY4SQ5xn1DGFU-6mv",
				blurImg: "_3lXopXY4SQ5xn1DGFU-6mv",
				ImagePreview: "_1x86R_C1SXWhk5Ta6ZwgCE",
				imagePreview: "_1x86R_C1SXWhk5Ta6ZwgCE",
				VideoPreview: "_1qFo28RpDjnwvvZFYuoYw1",
				videoPreview: "_1qFo28RpDjnwvvZFYuoYw1",
				Component: "_32O_ZBzCA0KWydc-ydD4Ut",
				component: "_32O_ZBzCA0KWydc-ydD4Ut"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/MediaUpload/UploadStatusBar/index.m.less": function(e, t, n) {
			e.exports = {
				ControlRow: "_2UeBgPJSAh_VteJrmt29jr",
				controlRow: "_2UeBgPJSAh_VteJrmt29jr",
				Button: "mU3hHnDkWt1Fu4t0MzJ3D",
				button: "mU3hHnDkWt1Fu4t0MzJ3D",
				Status: "_2tgT4LseX3Xg9TNczoQt_8",
				status: "_2tgT4LseX3Xg9TNczoQt_8",
				Component: "_1ou_efVZQLBrztRrswvRdK",
				component: "_1ou_efVZQLBrztRrswvRdK"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/MediaUpload/index.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "_2WJ7xvGE_xrehqTKCrcVpN",
				wrapper: "_2WJ7xvGE_xrehqTKCrcVpN",
				UploadStatusBar: "_1cAEFWtInMytYP6NpKBxK7",
				uploadStatusBar: "_1cAEFWtInMytYP6NpKBxK7",
				Controls: "_2Hg3aAL1qjiKtlSICSWx59",
				controls: "_2Hg3aAL1qjiKtlSICSWx59",
				ThumbnailSelect: "_3Beo1Ag8mmirgP8ObHTty9",
				thumbnailSelect: "_3Beo1Ag8mmirgP8ObHTty9",
				Trash: "_18Z2AbfCvCglpgZoyExSaS",
				trash: "_18Z2AbfCvCglpgZoyExSaS"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/RemovePrompt/index.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "RbI4r-xLIZTGjyNNqMkc2",
				wrapper: "RbI4r-xLIZTGjyNNqMkc2",
				TitleRow: "_3KkK2UFvbWMkRb887z28Ay",
				titleRow: "_3KkK2UFvbWMkRb887z28Ay",
				DetailsContainer: "_3x1u7rU-TVemMtzZVifQk",
				detailsContainer: "_3x1u7rU-TVemMtzZVifQk",
				ButtonRow: "_1rR3d9OXZt1cL70vCFunZP",
				buttonRow: "_1rR3d9OXZt1cL70vCFunZP",
				CancelButton: "_2JpoeseNULOIs1m0HM_FkJ",
				cancelButton: "_2JpoeseNULOIs1m0HM_FkJ",
				ConfirmButton: "_1-56PBUj1A-mgJh4Uhz5Jd",
				confirmButton: "_1-56PBUj1A-mgJh4Uhz5Jd"
			}
		},
		"./src/reddit/components/PostCreationForm/MediaInput/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_1UbcPNs4A8n5PIWX0H5sGt",
				container: "_1UbcPNs4A8n5PIWX0H5sGt"
			}
		},
		"./src/reddit/components/PostCreationForm/PostCreationFooter/PostSettings/Hint/index.m.less": function(e, t, n) {
			e.exports = {
				Info: "_2kALbPZ2PwY7w-w3Mtrxpl",
				info: "_2kALbPZ2PwY7w-w3Mtrxpl",
				TooltipContent: "c_vthvCq93OKrS5BGZYdr",
				tooltipContent: "c_vthvCq93OKrS5BGZYdr",
				Hint: "_2yxSY9022XfAJtQVxxa1lL",
				hint: "_2yxSY9022XfAJtQVxxa1lL",
				HoverTooltip: "_3M5yvX2tFyuTet4AEPmVDL",
				hoverTooltip: "_3M5yvX2tFyuTet4AEPmVDL",
				tooltipContentClass: "_2AY8LM9XpfuTjCMB4PF1mj"
			}
		},
		"./src/reddit/components/PostCreationForm/PostCreationFooter/PostSettings/index.m.less": function(e, t, n) {
			e.exports = {
				CheckboxInput: "rLLDF6zuY7gDPdOpDtryW",
				checkboxInput: "rLLDF6zuY7gDPdOpDtryW",
				ConnectAccountLink: "_2XixtsvkuzAkwuKe93t7Bd",
				connectAccountLink: "_2XixtsvkuzAkwuKe93t7Bd",
				Container: "_1WZBFo38dOAZ_-qyyA6sNh",
				container: "_1WZBFo38dOAZ_-qyyA6sNh",
				ContainerLeft: "ncWlnJtypP1_Mwohv06zd",
				containerLeft: "ncWlnJtypP1_Mwohv06zd",
				ContainerRight: "_1rdhEwGT1578MFV4zdgyXX",
				containerRight: "_1rdhEwGT1578MFV4zdgyXX",
				CheckboxText: "_1sBmqB8geWKIW5Nt8svFgc",
				checkboxText: "_1sBmqB8geWKIW5Nt8svFgc",
				Option: "_367d1mrPAvSzXPXQZfPXq5",
				option: "_367d1mrPAvSzXPXQZfPXq5",
				TextButton: "_5SJ8wEtj0ehde_UTuEUJL",
				textButton: "_5SJ8wEtj0ehde_UTuEUJL",
				TextBox: "_1TBGkOAQIuFnbqFv3ePDxT",
				textBox: "_1TBGkOAQIuFnbqFv3ePDxT",
				Wrapper: "_2CXYv7vwpCTLV6wKUwqkBz",
				wrapper: "_2CXYv7vwpCTLV6wKUwqkBz"
			}
		},
		"./src/reddit/components/PostCreationForm/PostCreationFooter/ScheduledTimeInfo/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_3iy2yiZt_m40oq7tdW_klw",
				container: "_3iy2yiZt_m40oq7tdW_klw",
				replayIcon: "_2ks2fE4UUmcEWL1vQnR7wp"
			}
		},
		"./src/reddit/components/PostCreationForm/PostCreationFooter/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_22Te0a5VxZnLITkTavQh95",
				container: "_22Te0a5VxZnLITkTavQh95"
			}
		},
		"./src/reddit/components/PostCreationForm/PostCreationHeader/index.m.less": function(e, t, n) {
			e.exports = {
				CreateLabel: "_3M6BmdyQcCEQZu-MylN14",
				createLabel: "_3M6BmdyQcCEQZu-MylN14",
				CountIndicator: "_3-lCASba1yl0jeRpeQ5jwm",
				countIndicator: "_3-lCASba1yl0jeRpeQ5jwm",
				LinkButton: "_3KQDVc4kBIwA5u7S9n99NQ",
				linkButton: "_3KQDVc4kBIwA5u7S9n99NQ",
				CreatePostHeader: "_1HWpiNu6dkOnZixxwDYTVJ",
				createPostHeader: "_1HWpiNu6dkOnZixxwDYTVJ",
				isSubredditRec: "_3VA7_aIOtAXL0OdVGez50V"
			}
		},
		"./src/reddit/components/PostCreationForm/PostEditor/GovTypeSelector/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_1kR_hX_PP5udhk-mtPuavx",
				currentSelection: "_1ZxmKr4SrkV__KWvI2gxKt",
				flexRow: "wIleinjtpdijasCWI_jCU",
				dropdownIcon: "oK9t9SNnOOCu-BraimNJE",
				newLabel: "_1pi_9nWsspppnkpr0Km1Hl",
				pollTypeIcon: "_1ZEeQaLhgbqgxX5zvvM2OO",
				text: "_3BIAW_hHKHgVyTnhczBT4A"
			}
		},
		"./src/reddit/components/PostCreationForm/PostEditor/index.m.less": function(e, t, n) {
			e.exports = {
				focusableContent: "Mb0x12Cu8JKRJRJCcf9_K",
				mPollBorder: "_3tqYz5xeUZo9em1LrxMZOB",
				mHasError: "_24RennTZzi_jyZ_kdBt9U2",
				govToggle: "_2VmXXwMxyQk230gkKvJTzF",
				pollCreator: "_3GqK73QyFc10CoXE2bReko"
			}
		},
		"./src/reddit/components/PostCreationForm/PostTitle/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_3zkbHfhLbXp21FwGj_kNZV",
				inputWrapper: "_2wyvfFW3oNcCs5GVkmcJ8z",
				PostTitleInput: "_1ec_Oj5SWdypd8L-VELKg-",
				postTitleInput: "_1ec_Oj5SWdypd8L-VELKg-",
				mHasError: "_1dItJbdjTchVLwC0krCsr3",
				charsCounter: "_10vnCUi_uRLhIdKnPglWAw"
			}
		},
		"./src/reddit/components/PostCreationForm/PredictionEditor/CharacterLimitedInput/index.m.less": function(e, t, n) {
			e.exports = {
				limitedInput: "_2lR5ZrJPEFuuPq7EOi8cj7",
				wrapper: "_2fRQQgargigjS49U0fxbS3",
				charLimit: "_2wwZJZk5ONMWVwbLF02eUq"
			}
		},
		"./src/reddit/components/PostCreationForm/PredictionEditor/ThemePicker/index.m.less": function(e, t, n) {
			e.exports = {
				wrapper: "_3UZKVVhHWZ57zSILZs7Jvg",
				colorTile: "_1qWXr3giJbgydoIYnzWu1S"
			}
		},
		"./src/reddit/components/PostCreationForm/PredictionEditor/TokenPicker/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_3c1LCTTrv7B_tSR1sfPKj6",
				customTokenContainer: "_2SDDNzFC4L5DwfyT-wvomA",
				clearTokenButton: "uKhV3nnZaif1b1RUqut47",
				clearTokenIcon: "_1JT85JqFxloG7O5BY1ykp",
				tokenButton: "_11AqxmNlBzS51cSszKCcTj",
				selected: "_3Izz7RWkEuIrfl7tUxaPyt",
				tokenIcon: "_3Mpps5wbxkuTPgwFQKbVgf",
				addTokenIcon: "RcsGY3keMhNY8RdcN8Dmw"
			}
		},
		"./src/reddit/components/PostCreationForm/PredictionEditor/TooltipHeader/index.m.less": function(e, t, n) {
			e.exports = {
				wrapper: "vjz-78t1MZNL0Yxpv_u6-",
				sectionLabel: "_2T3KnyI6uKFuDKS_c-XJ1k",
				isDisabled: "_346ckAnpRr-IOKWKMNKKFl",
				content: "_2YhlH2p0vnG0YKM3OJnSz8",
				helpIcon: "_1Hia7ATY_tYOEVwill2fvR",
				activeHelpIcon: "_3o1eq5SajxFPm93nUE3I4B"
			}
		},
		"./src/reddit/components/PostCreationForm/PredictionEditor/TournamentCreation/TournamentBanner/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_2FP6mPcw7L3zJOqTqLCnFi",
				label: "_2arfpEJo0GuubbTt3e8on8",
				icon: "_298481W3NrEzQxugVTYuu7",
				tournamentName: "_2c4dzGEuqzkxFjwEBDTgom"
			}
		},
		"./src/reddit/components/PostCreationForm/PredictionEditor/TournamentCreation/index.m.less": function(e, t, n) {
			e.exports = {
				firstHeader: "i-5upYMuz3__dAhqnV3c",
				learnMoreText: "_1jGtkFrbQODOeAHdDuFzU_",
				learnMoreLink: "_1EWLkW2DjJNMbp5JzYXENj",
				modal: "_35kF49LuGE4D27xekKfxE3",
				modalWrapper: "_3xBSiPU1AtljhBN4dxtqdt",
				closeButton: "z2Rf-Ta-kq8BA8J-ARDCm"
			}
		},
		"./src/reddit/components/PostCreationForm/Prompt/PromptModal.m.less": function(e, t, n) {
			e.exports = {
				PrimaryButton: "_35XIX8S5eAkigMxHxx98TS",
				primaryButton: "_35XIX8S5eAkigMxHxx98TS",
				ModalText: "_1ShPAP1uGnX3ZkiyNiigAA",
				modalText: "_1ShPAP1uGnX3ZkiyNiigAA"
			}
		},
		"./src/reddit/components/PostCreationForm/Prompt/PromptModal.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/higherOrderComponents/asModal/index.tsx"),
				i = n("./src/reddit/components/ModalStyledComponents/index.tsx"),
				a = n("./src/reddit/constants/keycodes.ts"),
				c = n("./src/reddit/controls/Button/index.tsx"),
				l = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				d = n("./src/reddit/controls/TextButton/index.tsx"),
				u = n("./src/reddit/layout/twoCol/ExpandLeft/index.tsx"),
				p = n("./src/reddit/components/PostCreationForm/Prompt/PromptModal.m.less"),
				m = n.n(p),
				h = n("./src/lib/lessComponent.tsx");
			const b = h.a.wrapped(c.l, "PrimaryButton", m.a),
				f = h.a.wrapped(i.p, "ModalText", m.a);
			class g extends s.a.PureComponent {
				constructor() {
					super(...arguments), this.handleEscapeKey = e => {
						e.keyCode === a.a.Escape && this.props.onClose()
					}
				}
				componentDidMount() {
					document.addEventListener("keydown", this.handleEscapeKey)
				}
				componentWillUnmount() {
					document.removeEventListener("keydown", this.handleEscapeKey)
				}
				render() {
					const {
						primaryButtonLoading: e,
						secondaryButtonLoading: t
					} = this.props;
					return s.a.createElement(i.e, null, s.a.createElement(i.i, null, s.a.createElement(u.a, null, s.a.createElement(i.q, null, this.props.titleText), s.a.createElement(d.a, {
						onClick: this.props.onClose
					}, s.a.createElement(i.b, null)))), s.a.createElement(i.l, null, s.a.createElement(f, null, this.props.bodyText)), s.a.createElement(i.g, null, s.a.createElement(i.a, {
						onClick: this.props.onSecondaryAction
					}, t ? s.a.createElement(l.a, {
						sizePx: 16
					}) : this.props.secondaryButtonText), s.a.createElement(b, {
						onClick: this.props.onPrimaryAction
					}, e ? s.a.createElement(l.a, {
						sizePx: 16
					}) : this.props.primaryButtonText)))
				}
			}
			t.a = Object(r.a)(g)
		},
		"./src/reddit/components/PostCreationForm/Prompt/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			}));
			var o, s = n("./node_modules/fbt/lib/FbtPublic.js"),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/reddit/components/PostCreationForm/Prompt/PromptModal.tsx");
			! function(e) {
				e.LOAD_DRAFT_MODAL_ID = "POST_CREATION__LOAD_DRAFT_MODAL_ID", e.MAX_DRAFTS_MODAL_ID = "POST_CREATION__MAX_DRAFTS_MODAL_ID", e.SWITCH_TO_RTE_MODAL_ID = "MARKDOWN_EDITOR__SWITCH_TO_RTE_MODAL_ID"
			}(o || (o = {}));
			const c = {
					title: () => s.fbt._("Load draft", null, {
						hk: "VQ7SS"
					}),
					body: () => s.fbt._("Loading this draft will discard your current post.", null, {
						hk: "49vMci"
					}),
					confirm: () => s.fbt._("Load Draft", null, {
						hk: "29mFSs"
					}),
					cancel: () => s.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})
				},
				l = {
					title: () => s.fbt._("Save draft", null, {
						hk: "36SGct"
					}),
					body: () => s.fbt._("Looks like you’ve hit your max number of drafts. Please delete one to make room.", null, {
						hk: "4g9gOF"
					}),
					confirm: () => s.fbt._("Manage Drafts", null, {
						hk: "3a6SXJ"
					}),
					cancel: () => s.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})
				},
				d = {
					title: () => s.fbt._("Switch to Fancy Pants Editor", null, {
						hk: "22mr8J"
					}),
					body: () => s.fbt._("Switching to Fancy Pants Editor may result in a loss of content", null, {
						hk: "1cWryd"
					}),
					confirm: () => s.fbt._("Switch", null, {
						hk: "36pRzE"
					}),
					cancel: () => s.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})
				},
				u = {
					[o.LOAD_DRAFT_MODAL_ID]: c,
					[o.MAX_DRAFTS_MODAL_ID]: l,
					[o.SWITCH_TO_RTE_MODAL_ID]: d
				};
			class p extends i.a.PureComponent {
				constructor() {
					super(...arguments), this.onCancel = () => {
						this.props.onCancel(this.props.modalId)
					}, this.onConfirm = () => {
						this.props.onConfirm(this.props.modalId)
					}
				}
				render() {
					const {
						modalId: e
					} = this.props, t = u[e];
					return i.a.createElement(a.a, {
						bodyText: t.body(),
						secondaryButtonText: t.cancel(),
						primaryButtonText: t.confirm(),
						titleText: t.title(),
						onClose: this.onCancel,
						onPrimaryAction: this.onConfirm,
						onSecondaryAction: this.onCancel
					})
				}
			}
			t.b = p
		},
		"./src/reddit/components/PostCreationForm/RecaptchaOverlay/index.m.less": function(e, t, n) {
			e.exports = {
				OverlayWrapper: "_36HnnNoO8oBJDJnOgDiENG",
				overlayWrapper: "_36HnnNoO8oBJDJnOgDiENG",
				OverlayContent: "_3Ye_87oAzGPJr-7DymIhl0",
				overlayContent: "_3Ye_87oAzGPJr-7DymIhl0",
				ExplanationText: "_17qYQd3F9TbaKxu_Q0ssNq",
				explanationText: "_17qYQd3F9TbaKxu_Q0ssNq"
			}
		},
		"./src/reddit/components/PostCreationForm/SafeHarborText/index.m.less": function(e, t, n) {
			e.exports = {
				TextContainer: "_3sXblbCnnsbtHR0izSxX-Q",
				textContainer: "_3sXblbCnnsbtHR0izSxX-Q"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/FallbackDateInput/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_3A53iTDZ6H1L--Ky3qNCTO",
				container: "_3A53iTDZ6H1L--Ky3qNCTO",
				Select: "_2ryUqzbCnNhx8nbFXg9-c0",
				select: "_2ryUqzbCnNhx8nbFXg9-c0",
				Delimiter: "_1X2oFpzvpth9SVe2-xCR9D",
				delimiter: "_1X2oFpzvpth9SVe2-xCR9D"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/index.m.less": function(e, t, n) {
			e.exports = {
				Input: "_1Css-vhkiry0RZJBBPrnRI",
				input: "_1Css-vhkiry0RZJBBPrnRI"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return _
			}));
			var o = n("./node_modules/lodash/once.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./node_modules/lodash/range.js"),
				c = n.n(a),
				l = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/FallbackDateInput/index.m.less"),
				d = n.n(l),
				u = n("./src/lib/lessComponent.tsx");
			const p = u.a.div("Container", d.a),
				m = u.a.select("Select", d.a),
				h = u.a.span("Delimiter", d.a),
				b = 2018,
				f = e => {
					const t = new Date;
					return new Date(t.getFullYear(), e).toLocaleDateString([], {
						month: "short"
					})
				},
				g = e => {
					const [t, n, o] = e.split("-").map(Number);
					return {
						year: t,
						month: n - 1,
						day: o
					}
				};
			class v extends i.a.PureComponent {
				constructor() {
					super(...arguments), this.onChange = e => {
						const t = {
								...g(this.props.value),
								...e
							},
							{
								year: n,
								month: o,
								day: s
							} = t,
							r = new Date(Date.UTC(n, o, s)).toISOString().slice(0, 10);
						this.props.onChange(r)
					}, this.onChangeYear = e => {
						const t = +e.target.value;
						this.onChange({
							year: t
						})
					}, this.onChangeMonth = e => {
						const t = +e.target.value;
						this.onChange({
							month: t
						})
					}, this.onChangeDay = e => {
						const t = +e.target.value;
						this.onChange({
							day: t
						})
					}
				}
				render() {
					const {
						year: e,
						month: t,
						day: n
					} = g(this.props.value);
					return i.a.createElement(p, {
						className: this.props.className
					}, i.a.createElement(m, {
						onChange: this.onChangeMonth,
						value: t
					}, c()(12).map(e => i.a.createElement("option", {
						key: e,
						value: e
					}, f(e)))), i.a.createElement(h, null, "/"), i.a.createElement(m, {
						onChange: this.onChangeDay,
						value: n
					}, c()(1, 32).map(e => i.a.createElement("option", {
						key: e,
						value: e
					}, ("0" + e).slice(-2)))), i.a.createElement(h, null, "/"), i.a.createElement(m, {
						onChange: this.onChangeYear,
						value: e
					}, c()(b, b + 10).map(e => i.a.createElement("option", {
						key: e,
						value: e
					}, e))))
				}
			}
			var x = v,
				C = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/index.m.less"),
				E = n.n(C);

			function y() {
				return (y = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const O = s()(() => {
					const e = document.createElement("input");
					return e.setAttribute("type", "date"), e.setAttribute("value", "not-a-date"), "not-a-date" !== e.value
				}),
				k = u.a.input("Input", E.a);

			function _(e) {
				return O() ? i.a.createElement(k, y({
					type: "date"
				}, e, {
					onChange: t => e.onChange(t.target.value)
				})) : i.a.createElement(x, e)
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/FallbackTimeInput/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "Q-u1MdpyF-DbsLmmseQmg",
				container: "Q-u1MdpyF-DbsLmmseQmg",
				Input: "_2UYlo-ZbVNGY329O9jwCzC",
				input: "_2UYlo-ZbVNGY329O9jwCzC",
				Delimiter: "_2a_r5Jp8FH3k8flNGKLy5f",
				delimiter: "_2a_r5Jp8FH3k8flNGKLy5f"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/index.m.less": function(e, t, n) {
			e.exports = {
				TimeInput: "gRgwdQKTQf9yT3db3ACAy",
				timeInput: "gRgwdQKTQf9yT3db3ACAy"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return _
			}));
			var o = n("./node_modules/lodash/once.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./node_modules/lodash/clamp.js"),
				c = n.n(a),
				l = n("./src/reddit/components/FocusableContent/index.tsx"),
				d = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/FallbackTimeInput/index.m.less"),
				u = n.n(d),
				p = n("./src/lib/lessComponent.tsx");
			const m = p.a.wrapped(l.a, "Container", u.a),
				h = p.a.input("Input", u.a),
				b = p.a.span("Delimiter", u.a),
				f = e => ("0" + e).slice(-2),
				g = (e, t) => {
					const n = +e.slice(-2);
					if (Number.isInteger(n)) return n > t ? 0 : n
				};
			class v extends i.a.PureComponent {
				constructor(e) {
					super(e), this.callOnChange = () => {
						let e = c()(+this.state.hour, 0, 24);
						const t = c()(+this.state.minute, 0, 59);
						24 === e && t > 0 && (e = 0), this.setState({
							hour: e,
							minute: t
						});
						const n = `${f(e)}:${f(t)}`;
						this.props.onChange(n)
					}, this.onChangeHour = e => {
						const t = g(e.target.value, 24);
						void 0 !== t && this.setState({
							hour: t
						}, this.callOnChange)
					}, this.onChangeMinute = e => {
						const t = g(e.target.value, 59);
						void 0 !== t && this.setState({
							minute: t
						}, this.callOnChange)
					}, this.onHourInputBlur = () => this.setState({
						isHourInputFocused: !1
					}), this.onHourInputFocus = () => this.setState({
						isHourInputFocused: !0
					}), this.onMinuteInputBlur = () => this.setState({
						isMinuteInputFocused: !1
					}), this.onMinuteInputFocus = () => this.setState({
						isMinuteInputFocused: !0
					});
					const [t, n] = e.value.split(":").map(Number);
					this.state = {
						hour: t,
						minute: n,
						isHourInputFocused: !1,
						isMinuteInputFocused: !1
					}
				}
				componentWillReceiveProps(e) {
					const [t, n] = e.value.split(":").map(Number);
					this.setState({
						hour: t,
						minute: n
					})
				}
				render() {
					const e = this.state.isHourInputFocused || this.state.isMinuteInputFocused;
					return i.a.createElement(m, {
						className: this.props.className,
						isFocused: e
					}, i.a.createElement(h, {
						type: "number",
						onChange: this.onChangeHour,
						onFocus: this.onHourInputFocus,
						onBlur: this.onHourInputBlur,
						value: f(this.state.hour)
					}), i.a.createElement(b, null, ":"), i.a.createElement(h, {
						type: "number",
						onChange: this.onChangeMinute,
						onFocus: this.onMinuteInputFocus,
						onBlur: this.onMinuteInputBlur,
						value: f(this.state.minute)
					}))
				}
			}
			var x = v,
				C = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/index.m.less"),
				E = n.n(C);

			function y() {
				return (y = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const O = s()(() => {
					const e = document.createElement("input");
					return e.setAttribute("type", "time"), e.setAttribute("value", "not-a-time"), "not-a-time" !== e.value
				}),
				k = p.a.input("TimeInput", E.a);

			function _(e) {
				return O() ? i.a.createElement(k, y({
					type: "time"
				}, e, {
					onChange: t => e.onChange(t.target.value)
				})) : i.a.createElement(x, e)
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/TimezoneSelector/index.m.less": function(e, t, n) {
			e.exports = {
				select: "_1gQeiuYndtyKo6Or5iS8xL"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/TimezoneSelector/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/loadWithRetries/index.ts"),
				a = n("./src/reddit/helpers/scheduledPosts/index.ts"),
				c = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/TimezoneSelector/index.m.less"),
				l = n.n(c);
			const d = e => {
				const t = e.map(a.d);
				return t.sort((e, t) => {
					const n = -1440,
						{
							offset: o = n
						} = e,
						{
							offset: s = n
						} = t;
					return s - o || (e.displayText < t.displayText ? -1 : 1) || 0
				}), t
			};
			class u extends s.a.PureComponent {
				constructor(e) {
					super(e), this.onSelect = e => {
						const t = e.target.value;
						this.props.onChange(t)
					};
					const t = u.cachedTimezoneOptions || d([this.props.selectedTimezoneName]);
					this.state = {
						timezoneOptions: t
					}
				}
				async loadTimezones() {
					const e = (await Object(i.a)(() => n.e("TimezoneList").then(n.bind(null, "./src/lib/timezone/timezoneList.ts")))).default,
						t = d(e);
					this.setState({
						timezoneOptions: t
					}), u.cachedTimezoneOptions = t
				}
				componentDidMount() {
					u.cachedTimezoneOptions || this.loadTimezones()
				}
				render() {
					return s.a.createElement("select", {
						onChange: this.onSelect,
						value: this.props.selectedTimezoneName,
						className: Object(r.a)(l.a.select, this.props.className)
					}, this.state.timezoneOptions.map(e => {
						let {
							name: t,
							displayText: n
						} = e;
						return s.a.createElement("option", {
							key: t,
							value: t
						}, n)
					}))
				}
			}
			t.a = u
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "ppLwDvFzc7jVTiV_5euUj",
				container: "ppLwDvFzc7jVTiV_5euUj",
				Content: "_3VbwtRsayHUBLVMtjkul4u",
				content: "_3VbwtRsayHUBLVMtjkul4u",
				TitleRow: "_2aRE3m6KuLAhRIDmdmFKaY",
				titleRow: "_2aRE3m6KuLAhRIDmdmFKaY",
				Hr: "_1aShcxrllO1loaDr49TUUo",
				hr: "_1aShcxrllO1loaDr49TUUo",
				TimeInput: "_1bu7h4vK0WEgtRzSz-_mbA",
				timeInput: "_1bu7h4vK0WEgtRzSz-_mbA",
				TimeSelectionRow: "BUT684iT0_upDm6a1x4q_",
				timeSelectionRow: "BUT684iT0_upDm6a1x4q_",
				RadioOptionContent: "_3Ry1zpEULyeAACzRNZgIHN",
				radioOptionContent: "_3Ry1zpEULyeAACzRNZgIHN",
				OptionDetails: "_3imVLMudY3hxD1tq8KO6MB",
				optionDetails: "_3imVLMudY3hxD1tq8KO6MB",
				RadioInput: "_3VPprBv9bGCEm-hzjVWKmd",
				radioInput: "_3VPprBv9bGCEm-hzjVWKmd",
				RadioOption: "V4Tm9i9X2Co6LU8ez1zlw",
				radioOption: "V4Tm9i9X2Co6LU8ez1zlw",
				Delimiter: "_2bajvlJVcTANoHFRcmq7lu",
				delimiter: "_2bajvlJVcTANoHFRcmq7lu",
				Footer: "_3KeMI-XaG-5bILTvrCkaGS",
				footer: "_3KeMI-XaG-5bILTvrCkaGS",
				CancelButton: "_2NvAutu3QQJ9DwGHa83msC",
				cancelButton: "_2NvAutu3QQJ9DwGHa83msC",
				DeleteButton: "_3mKiK6bFRKi6y6Wkk1xLyp",
				deleteButton: "_3mKiK6bFRKi6y6Wkk1xLyp",
				ErrorMessage: "ZK5-SDSIvd4eGlmmbaRoO",
				errorMessage: "ZK5-SDSIvd4eGlmmbaRoO",
				ClearIcon: "E0CXpIVd8SDvRSwZFAmCn",
				clearIcon: "E0CXpIVd8SDvRSwZFAmCn"
			}
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/index.tsx": function(e, t, n) {
			"use strict";
			n.r(t);
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/higherOrderComponents/asModal/index.tsx"),
				a = n("./src/lib/constants/index.ts"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/lib/timezone/index.ts"),
				d = n("./src/reddit/components/ModalStyledComponents/index.tsx"),
				u = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/utils.ts"),
				p = n("./src/reddit/components/TrackingHelper/index.tsx"),
				m = n("./src/reddit/controls/Button/index.tsx"),
				h = n("./src/reddit/controls/RadioInput/index.tsx"),
				b = n("./src/reddit/controls/RadioInput/RadioOption/index.tsx"),
				f = n("./src/reddit/helpers/scheduledPosts/index.ts"),
				g = n("./src/reddit/helpers/trackers/postEvent.ts"),
				v = n("./src/reddit/icons/svgs/ClearFilled/index.tsx"),
				x = n("./src/reddit/layout/row/Inline/index.tsx"),
				C = n("./src/reddit/models/PostCreationForm/index.ts"),
				E = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/index.tsx"),
				y = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/index.tsx"),
				O = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/TimezoneSelector/index.tsx"),
				k = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/index.m.less"),
				_ = n.n(k);
			const j = 240,
				S = () => {
					const e = new Date;
					e.setMinutes(60);
					const t = Object(l.g)(e);
					return e.setMinutes(e.getMinutes() + j), {
						startDate: t,
						endDate: Object(l.g)(e),
						submitTime: C.j.Now,
						timezoneName: Object(l.b)() || l.a
					}
				},
				T = c.a.div("Container", _.a),
				w = c.a.div("Content", _.a),
				I = c.a.div("TitleRow", _.a),
				P = c.a.hr("Hr", _.a),
				M = c.a.wrapped(y.a, "TimeInput", _.a),
				R = c.a.div("TimeSelectionRow", _.a),
				N = c.a.div("RadioOptionContent", _.a),
				D = c.a.span("OptionDetails", _.a),
				L = c.a.wrapped(h.a, "RadioInput", _.a),
				A = c.a.wrapped(b.a, "RadioOption", _.a),
				B = c.a.span("Delimiter", _.a),
				F = c.a.wrapped(d.g, "Footer", _.a),
				U = c.a.wrapped(m.o, "CancelButton", _.a),
				K = c.a.wrapped(m.o, "DeleteButton", _.a),
				W = c.a.div("ErrorMessage", _.a),
				H = c.a.wrapped(v.a, "ClearIcon", _.a);
			class q extends r.a.PureComponent {
				constructor(e) {
					super(e), this.currentTimezone = Object(l.b)(), this.maxDate = Object(u.a)(), this.buildEventSchedule = () => ({
						startDate: Object(f.a)(this.state.startDate, this.state.startTime),
						endDate: Object(f.a)(this.state.endDate, this.state.endTime),
						timezoneName: this.state.timezoneName,
						submitTime: this.state.submitTime
					}), this.onStartDateChange = e => {
						this.setState({
							startDate: e
						}, this.updateEndDatetime)
					}, this.onStartTimeChange = e => {
						this.setState({
							startTime: e
						}, this.updateEndDatetime)
					}, this.updateEndDatetime = () => {
						if (this.state.isEndTimeTouched) return;
						const {
							startDate: e,
							startTime: t
						} = this.state;
						if (e && t) {
							const n = Object(l.f)(Object(f.a)(e, t));
							n.setMinutes(n.getMinutes() + j);
							const [o, s] = Object(f.i)(Object(l.g)(n));
							this.setState({
								endDate: o,
								endTime: s
							})
						}
					}, this.onEndDateChange = e => {
						this.setState({
							endDate: e,
							isEndTimeTouched: !0
						})
					}, this.onEndTimeChange = e => {
						this.setState({
							endTime: e,
							isEndTimeTouched: !0
						})
					}, this.onTimezoneChange = e => {
						this.setState({
							timezoneName: e
						})
					}, this.onSubmitTimeChange = e => {
						this.setState({
							submitTime: e
						})
					}, this.onApplyClick = () => {
						const e = this.buildEventSchedule();
						this.props.sendEvent(Object(g.b)(e)), this.props.onChange(e), this.props.onClose()
					}, this.onDeleteButtonClick = () => {
						const e = this.buildEventSchedule();
						this.props.sendEvent(Object(g.d)(e)), this.props.onChange(null), this.props.onClose()
					}, this.onCancelButtonClick = () => {
						this.props.sendEvent(Object(g.c)()), this.props.onClose()
					}, this.getValidationError = () => {
						const {
							endDate: e,
							endTime: t,
							startDate: n,
							startTime: s
						} = this.state;
						if (!(n && s && e && t)) return o.fbt._("Please enter valid start and end time", null, {
							hk: "2IyBsT"
						});
						const r = Object(l.f)(Object(f.a)(n, s)),
							i = Object(l.f)(Object(f.a)(e, t));
						return r < (this.currentTimezone === this.state.timezoneName ? new Date : new Date(Date.now() - a.D)) ? o.fbt._("Event start time needs to be in the future", null, {
							hk: "3oL3LM"
						}) : i < r ? o.fbt._("End time must be after start time", null, {
							hk: "3C3TKE"
						}) : null
					}, this.getSubmitAtLabel = () => {
						const {
							startDate: e,
							startTime: t
						} = this.state;
						return Object(f.b)(e, t)
					}, this.renderSubmitTimeRadio = () => r.a.createElement(L, {
						value: this.state.submitTime,
						name: "submit_time",
						onChange: this.onSubmitTimeChange
					}, r.a.createElement(A, {
						showButton: !0,
						value: C.j.Now
					}, r.a.createElement(N, null, r.a.createElement("span", null, o.fbt._("Now", null, {
						hk: "4Cro9L"
					})), r.a.createElement(D, null, o.fbt._("Let people follow your event ahead of time so they can make sure to come back when it starts.", null, {
						hk: "xTSNh"
					})))), r.a.createElement(A, {
						showButton: !0,
						value: C.j.AtEventTime
					}, r.a.createElement(N, null, r.a.createElement("span", null, this.getSubmitAtLabel()), r.a.createElement(D, null, o.fbt._("Edit and hide this post until the event starts.", null, {
						hk: "2VC38O"
					})))));
					const t = e.schedule || S(),
						[n, s] = Object(f.i)(t.startDate),
						[i, c] = Object(f.i)(t.endDate);
					this.state = {
						startDate: n,
						startTime: s,
						endDate: i,
						endTime: c,
						timezoneName: t.timezoneName,
						submitTime: t.submitTime,
						isEndTimeTouched: !!e.schedule
					}
				}
				componentDidMount() {
					this.props.sendEvent(Object(g.e)())
				}
				render() {
					const {
						shouldShowSubmitTime: e
					} = this.props, t = this.getValidationError();
					return r.a.createElement(T, null, r.a.createElement(w, null, r.a.createElement(I, null, o.fbt._("When is the event?", null, {
						hk: "2fTD7f"
					})), r.a.createElement(R, null, o.fbt._("{start time}{to}{end time}", [o.fbt._param("start time", r.a.createElement("fieldset", null, r.a.createElement("legend", null, o.fbt._("Start time", null, {
						hk: "3nqplI"
					})), r.a.createElement(E.a, {
						max: this.maxDate,
						onChange: this.onStartDateChange,
						value: this.state.startDate
					}), r.a.createElement(M, {
						onChange: this.onStartTimeChange,
						value: this.state.startTime
					}))), o.fbt._param("to", r.a.createElement(B, null, o.fbt._("to", null, {
						hk: "2tWTBK"
					}))), o.fbt._param("end time", r.a.createElement("fieldset", {
						style: {
							opacity: this.state.isEndTimeTouched ? 1 : .5
						}
					}, r.a.createElement("legend", null, o.fbt._("End time (optional)", null, {
						hk: "2XKdsz"
					})), r.a.createElement(E.a, {
						max: this.maxDate,
						onChange: this.onEndDateChange,
						value: this.state.endDate
					}), r.a.createElement(M, {
						onChange: this.onEndTimeChange,
						value: this.state.endTime
					})))], {
						hk: "3MRWfF"
					})), r.a.createElement("div", null, r.a.createElement("label", null, o.fbt._("Time zone", null, {
						hk: "3F7Bko"
					}), r.a.createElement(O.a, {
						selectedTimezoneName: this.state.timezoneName,
						onChange: this.onTimezoneChange
					}))), e && r.a.createElement(r.a.Fragment, null, r.a.createElement(P, null), r.a.createElement("fieldset", null, r.a.createElement("legend", null, o.fbt._("When do you want to post this event?", null, {
						hk: "3OEsrt"
					})), this.renderSubmitTimeRadio()))), r.a.createElement(F, null, r.a.createElement(x.a, null, this.props.schedule && this.props.shouldShowDeleteButton && r.a.createElement(K, {
						onClick: this.onDeleteButtonClick
					}, r.a.createElement(H, null), o.fbt._("Clear", null, {
						hk: "npkgK"
					})), r.a.createElement(U, {
						onClick: this.onCancelButtonClick
					}, o.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})), r.a.createElement(m.l, {
						onClick: this.onApplyClick,
						disabled: !!t
					}, o.fbt._("Apply", null, {
						hk: "2TE8JD"
					}))), t && r.a.createElement(W, null, t)))
				}
			}
			t.default = Object(i.a)(Object(p.c)(q))
		},
		"./src/reddit/components/PostCreationForm/SchedulePickerModal/utils.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./src/lib/timezone/index.ts"),
				s = n("./src/reddit/helpers/scheduledPosts/index.ts");
			const r = () => {
				const e = new Date;
				e.setFullYear(e.getFullYear() + 1);
				const [t] = Object(s.i)(Object(o.g)(e));
				return t
			}
		},
		"./src/reddit/components/PostCreationForm/SubredditChangePrompt/index.m.less": function(e, t, n) {
			e.exports = {
				Wrapper: "_1elQqozWN8v7kNb3-2JJnv",
				wrapper: "_1elQqozWN8v7kNb3-2JJnv",
				TitleRow: "_21ZJQglqJoGvKPVrE1g6y4",
				titleRow: "_21ZJQglqJoGvKPVrE1g6y4",
				DetailsContainer: "_2BCyPW29meUC7c2ZvAIF6O",
				detailsContainer: "_2BCyPW29meUC7c2ZvAIF6O",
				ButtonRow: "_3-rBvo8wMI4G0IKFdRF5et",
				buttonRow: "_3-rBvo8wMI4G0IKFdRF5et",
				CancelButton: "_12whVTuRHmPsEJZdopRGQN",
				cancelButton: "_12whVTuRHmPsEJZdopRGQN",
				ConfirmButton: "ERUkO2xr-Jto7MQoScSJG",
				confirmButton: "ERUkO2xr-Jto7MQoScSJG"
			}
		},
		"./src/reddit/components/PostCreationForm/Tabs/index.m.less": function(e, t, n) {
			e.exports = {
				Icon: "_3WIAbYQQdSmuuFLDSfhn5_",
				icon: "_3WIAbYQQdSmuuFLDSfhn5_",
				Container: "_3vyt9N_0jfZuOwByiKDi9x",
				container: "_3vyt9N_0jfZuOwByiKDi9x",
				row: "_3fd4Ceu6mb8NI6WVk0Yv5c",
				Tab: "Z1w8VkpQ23E1Wdq_My3U4",
				tab: "Z1w8VkpQ23E1Wdq_My3U4",
				isActive: "j1Q89sB76i7EBRDhnQhlr"
			}
		},
		"./src/reddit/components/PostCreationForm/index.m.less": function(e, t, n) {
			e.exports = {
				FormContent: "_3w_665DK_NH7yIsRMuZkqB",
				formContent: "_3w_665DK_NH7yIsRMuZkqB",
				CrosspostBox: "QQaE6143-4kvEuZSTBX7_",
				crosspostBox: "QQaE6143-4kvEuZSTBX7_",
				FormContainer: "HOFZo2X7Fr6JVBztpsByj",
				formContainer: "HOFZo2X7Fr6JVBztpsByj",
				TabContent: "_1zq6UabIEJJ-z9grsiCJY7",
				tabContent: "_1zq6UabIEJJ-z9grsiCJY7",
				PostingGuidelines: "_2vcPDTxC76PPQ70AdMkN0C",
				postingGuidelines: "_2vcPDTxC76PPQ70AdMkN0C",
				isSubredditRec: "_1JYtueM9ArhhK0dI1oOwCA",
				postToTitle: "_1Kxdp9wMJTKjsFvSZoeDzP",
				TalkSettings: "_3I1jRnhWPH1i6yzgZEg6N3",
				talkSettings: "_3I1jRnhWPH1i6yzgZEg6N3"
			}
		},
		"./src/reddit/components/PostFlairPicker/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return c
			})), n.d(t, "a", (function() {
				return l
			})), n.d(t, "b", (function() {
				return d
			}));
			var o = n("./node_modules/lodash/isEqual.js"),
				s = n.n(o),
				r = n("./src/reddit/constants/flair.ts"),
				i = n("./src/reddit/helpers/flair.ts"),
				a = n("./src/reddit/models/Flair/index.ts");
			const c = e => (e || []).find(e => e.type === a.f.Text || e.type === a.f.Image || e.type === a.f.Richtext);
			var l;
			! function(e) {
				e[e.InvalidTemplate = 0] = "InvalidTemplate", e[e.NoChanges = 1] = "NoChanges", e[e.NotSelected = 2] = "NotSelected", e[e.TextIsNotAllowed = 3] = "TextIsNotAllowed", e[e.TextIsEmpty = 4] = "TextIsEmpty", e[e.TextIsTooLong = 5] = "TextIsTooLong"
			}(l || (l = {}));
			const d = (e, t, n) => {
				if (n && !t) return {
					canSave: !0
				};
				if (!t) return {
					canSave: !1,
					reason: l.NotSelected
				};
				const o = e && t.templateId ? e[t.templateId] : void 0;
				if (!o) return {
					canSave: !1,
					reason: l.InvalidTemplate
				};
				const a = Object(i.g)(t).length;
				return 0 === a ? {
					canSave: !1,
					reason: l.TextIsEmpty
				} : a > r.g ? {
					canSave: !1,
					reason: l.TextIsTooLong
				} : Object(i.n)(t) && !Object(i.r)(o) ? {
					canSave: !1,
					reason: l.TextIsNotAllowed
				} : s()(n, t) ? {
					canSave: !1,
					reason: l.NoChanges
				} : {
					canSave: !0
				}
			}
		},
		"./src/reddit/components/PostFlairPicker/index.m.less": function(e, t, n) {
			e.exports = {
				buttonsRow: "cF9DU_4WDAKS4gs43ct2_",
				clearButton: "_3vB6Y9PiwJ0YV6c9MGbDwT"
			}
		},
		"./src/reddit/components/PostFlairPicker/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return k
			}));
			var o, s = n("./node_modules/fbt/lib/FbtPublic.js"),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./node_modules/react-redux/es/index.js"),
				c = n("./node_modules/reselect/es/index.js"),
				l = n("./src/reddit/components/TrackingHelper/index.tsx"),
				d = n("./src/higherOrderComponents/asModal/index.tsx"),
				u = n("./src/reddit/actions/modal.ts"),
				p = n("./src/reddit/components/FlairPickerTitle/index.tsx"),
				m = n("./src/reddit/components/FlairPickerWrapper/index.tsx"),
				h = n("./src/reddit/components/FlairPreview/index.tsx"),
				b = n("./src/reddit/components/FlairSearch/index.tsx"),
				f = n("./src/reddit/controls/Button/index.tsx"),
				g = n("./src/reddit/helpers/trackers/postComposer.ts"),
				v = n("./src/reddit/models/Flair/index.ts"),
				x = n("./src/reddit/selectors/postFlair.ts"),
				C = n("./src/reddit/selectors/subreddit.ts"),
				E = n("./src/reddit/components/PostFlairPicker/helpers.ts"),
				y = n("./src/reddit/components/PostFlairPicker/index.m.less"),
				O = n.n(y);
			! function(e) {
				e.UNSET = "unset", e.MOD_FLATLIST = "postModFlatlist", e.POST_OVERFLOW = "postOverlay"
			}(o || (o = {}));
			const k = function(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
						n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : o.UNSET;
					return `PostFlair__Modal-[postId: ${e}]-isOverlay[${t}]-position[${n}]`
				},
				_ = Object(c.c)({
					flairData: x.d,
					subreddit: C.X
				});
			class j extends i.a.Component {
				constructor(e) {
					super(e), this.trackEvent = () => {
						this.props.sendEvent(Object(g.G)(this.props.subredditId))
					}, this.onApply = () => {
						const {
							previewFlair: e
						} = this.state, t = e && e.templateId;
						this.props.onFlairChanged({
							previewFlair: e,
							selectedTemplateId: t
						}), this.props.closeModal && this.props.closeModal(), this.trackEvent()
					}, this.onClear = () => {
						this.props.sendEvent(Object(g.b)()), this.setSelectedFlair(null)
					}, this.setSelectedFlair = e => {
						this.setState({
							previewFlair: e
						})
					};
					const t = Object(E.c)(e.flairs);
					this.state = {
						previewFlair: t || null
					}
				}
				canSave() {
					const {
						templates: e
					} = this.props.flairData, {
						previewFlair: t
					} = this.state, n = Object(E.c)(this.props.flairs) || null;
					return Object(E.b)(e, t, n)
				}
				render() {
					const {
						props: e
					} = this, {
						previewFlair: t
					} = this.state, {
						className: n,
						flairData: o,
						subreddit: r
					} = e, a = r.displayText, {
						templates: c,
						templateIds: l
					} = o, {
						canSave: d
					} = this.canSave();
					return i.a.createElement(m.a, {
						className: n
					}, i.a.createElement(p.a, {
						onClosePressed: e.closeModal,
						title: s.fbt._("Select {subredditName} flair", [s.fbt._param("subredditName", a)], {
							hk: "1lDMWS"
						})
					}), i.a.createElement(h.a, {
						flair: t,
						flairTemplateType: v.d.LinkFlair,
						placeholderText: s.fbt._("Post Title", null, {
							hk: "43RsbC"
						})
					}), i.a.createElement(b.a, {
						flair: t,
						flairTemplateType: v.d.LinkFlair,
						subredditId: r.id,
						templates: c,
						templateIds: l,
						onChange: this.setSelectedFlair
					}), i.a.createElement("div", {
						className: O.a.buttonsRow
					}, i.a.createElement(f.l, {
						disabled: !d,
						onClick: this.onApply
					}, s.fbt._("Apply", null, {
						hk: "3mAjVQ"
					})), i.a.createElement(f.o, {
						className: O.a.clearButton,
						onClick: this.onClear
					}, s.fbt._("Clear Flair", null, {
						hk: "3jvT0B"
					}))))
				}
			}
			const S = Object(a.b)(_, (e, t) => ({
				closeModal: () => e(Object(u.i)(t.modalId))
			}))(j);
			t.a = Object(d.a)(Object(l.c)(S))
		},
		"./src/reddit/components/PostGuidance/index.m.less": function(e, t, n) {
			e.exports = {
				errorText: "_29Z8rNOZEXZzQgelIlxW5t",
				showAllBtn: "_3y2uOHfsXNElM_JH5BKn76"
			}
		},
		"./src/reddit/components/PostGuidance/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return u
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/redditGQL/types.ts"),
				a = n("./src/lib/hooks/usePrevious.ts"),
				c = n("./src/reddit/components/RichTextJson/index.tsx"),
				l = n("./src/reddit/components/PostGuidance/index.m.less"),
				d = n.n(l);
			const u = e => {
				let {
					triggeredRules: t = [],
					trackPostGuidanceView: n,
					emptyState: l = !1
				} = e;
				const [u, p] = Object(s.useState)(!1), m = t.filter(e => e.actionType === i.N.Block), h = m.length > 0 ? m : t, b = u ? h : h.slice(0, 5), f = Object(a.a)(b);
				return Object(s.useEffect)(() => {
					const e = new Map;
					[...b, ...f || []].forEach(t => {
						let {
							guidanceId: n,
							name: o
						} = t;
						n && o && e.set(n, o)
					});
					const t = b.map(e => e.guidanceId),
						o = (null == f ? void 0 : f.map(e => e.guidanceId)) || [],
						s = t.filter(e => !(null == o ? void 0 : o.includes(e))),
						r = [];
					s.filter(Boolean).forEach(t => {
						if (t && e.has(t)) {
							const n = e.get(t);
							n && r.push(n)
						}
					}), n && s.length > 0 && n(s, r)
				}, [t, b, f, n]), r.a.createElement("div", {
					"data-testid": "post-guidance-validation"
				}, r.a.createElement("ol", null, b.map((e, t) => r.a.createElement("li", {
					className: `${l||e.actionType!==i.N.Block?"":d.a.errorText} text-12 pt-2xs`,
					key: t
				}, e.validationMessage.richtext ? r.a.createElement(c.b, {
					className: `${l||e.actionType!==i.N.Block?"":d.a.errorText} !text-12 !pt-2xs`,
					useExplicitTextColor: !0,
					content: JSON.parse(e.validationMessage.richtext),
					rtJsonElementProps: {}
				}) : e.validationMessage.markdown))), h.length > 5 && r.a.createElement("button", {
					"data-testid": "post-guidance-btn",
					className: `text-12 pt-2xs ${d.a.showAllBtn}`,
					onClick: () => p(e => !e)
				}, u ? o.fbt._("View less", null, {
					hk: "4dXCrs"
				}) : o.fbt._("View more", null, {
					hk: "mvs5E"
				})))
			}
		},
		"./src/reddit/components/PostMeta/index.m.less": function(e, t, n) {
			e.exports = {
				metaContainer: "Ywkt6EDfNWINeTr9lP29H",
				postTopMeta: "iaAYGvTNtknkTxuHArCzL",
				subredditName: "_1L0pdcPf58t25Jy6ljHIKR",
				SubscribeButton: "_2r87gmhJ9n0MsylKHkgDcp",
				subscribeButton: "_2r87gmhJ9n0MsylKHkgDcp",
				addModNote: "CUh9f8Zri7XfZRUI18jS5"
			}
		},
		"./src/reddit/components/PostMeta/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./src/reddit/selectors/moderatorPermissions.ts"),
				a = n("./src/reddit/components/AwardBadges/index.tsx"),
				c = n("./src/reddit/components/CCM/AddModNoteCTA/index.tsx"),
				l = n("./src/reddit/components/Hovercards/SubredditHovercard/index.tsx"),
				d = n("./src/reddit/components/JSAPIContainers/index.tsx"),
				u = n("./src/reddit/components/PostBadges/index.tsx"),
				p = n("./src/reddit/components/PostTopMeta/index.tsx"),
				m = n("./src/reddit/components/QuarantinedLabel/index.tsx"),
				h = n("./src/reddit/components/SubredditNameLink/index.tsx"),
				b = n("./src/reddit/components/SubscribeButton/Inline.tsx"),
				f = n("./src/reddit/constants/posts.ts"),
				g = n("./src/reddit/controls/Button/index.tsx"),
				v = n("./src/reddit/controls/MetaSeparator/index.tsx"),
				x = n("./src/reddit/helpers/trackers/post.ts"),
				C = n("./src/reddit/hooks/useClickSourceData.ts"),
				E = n("./src/reddit/models/Subreddit/index.ts"),
				y = n("./src/reddit/components/PostMeta/index.m.less"),
				O = n.n(y);
			t.a = e => {
				const {
					flairStyleTemplate: t,
					hideGildCta: n,
					inSubredditOrProfile: o,
					isCurrentUserProfilePost: y,
					isOverlay: k,
					isTopicPage: _,
					post: j,
					shouldShowSubscribeButton: S,
					subredditOrProfile: T,
					tooltipType: w
				} = e, I = !!_, P = Object(C.a)(), M = Object(r.e)(e => !!T && Object(i.i)(e, T.id)), R = !(!T || !Object(E.i)(T));
				return s.a.createElement("div", {
					className: O.a.metaContainer
				}, !o && !j.isSponsored && T && s.a.createElement(l.a, {
					postId: j.id,
					subredditName: T.name,
					isProfile: R
				}, s.a.createElement(h.a, {
					className: O.a.subredditName,
					"data-click-id": "subreddit",
					to: {
						pathname: T.url,
						state: P
					}
				}, T.displayText)), T && T.isQuarantined && s.a.createElement(m.a, null), !o && !j.isSponsored && T && S && !y && s.a.createElement(b.a, {
					className: O.a.SubscribeButton,
					getEventFactory: e => Object(x.n)(j.id, e ? "unsubscribe" : "subscribe"),
					identifier: {
						name: T.name,
						type: Object(E.i)(T) ? f.a.PROFILE : f.a.SUBREDDIT
					},
					postId: j.id,
					size: g.d.XXS,
					small: !0
				}), !o && !j.isSponsored && s.a.createElement(v.b, null), !o && !j.isSponsored && s.a.createElement(d.h, {
					type: j.belongsTo.type,
					id: j.belongsTo.id
				}), s.a.createElement(p.g, {
					className: O.a.postTopMeta,
					flairStyleTemplate: t,
					post: j,
					tooltipType: w,
					isModWithUserNotesPermissions: M
				}), s.a.createElement(u.a, {
					displayText: T ? T.displayText : null,
					inSubredditOrProfile: !!o,
					post: j,
					tooltipType: w
				}), !I && s.a.createElement(a.a, {
					hideCta: n,
					thing: j,
					tooltipType: k ? p.f.Lightbox : void 0
				}), M && s.a.createElement(c.a, {
					postOrComment: j,
					className: O.a.addModNote
				}))
			}
		},
		"./src/reddit/components/PostingSidebar/LearnMoreAboutTalk/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_2pgQjKwBDQ7MPluFUOB41q",
				container: "_2pgQjKwBDQ7MPluFUOB41q",
				TitleContainer: "XYqpmL97Mojvuir5dZiAb",
				titleContainer: "XYqpmL97Mojvuir5dZiAb",
				AudioIcon: "_1FWxpa0UmbyF_B2qCewtxY",
				audioIcon: "_1FWxpa0UmbyF_B2qCewtxY",
				Title: "_2u9RgALks50HVuozdlhcXF",
				title: "_2u9RgALks50HVuozdlhcXF",
				Description: "_3q0yPkX3rBj4tKtZBXCD4-",
				description: "_3q0yPkX3rBj4tKtZBXCD4-",
				New: "_2ee3y-8NaFG6rkUvYc4ogg",
				new: "_2ee3y-8NaFG6rkUvYc4ogg",
				LearnMoreLink: "_3R_NxfLdPeSj6X9Glv1wM7",
				learnMoreLink: "_3R_NxfLdPeSj6X9Glv1wM7"
			}
		},
		"./src/reddit/components/PostingSidebar/LearnMoreAboutTalk/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/reddit/controls/Button/index.tsx"),
				a = n("./src/reddit/icons/fonts/index.tsx"),
				c = n("./src/reddit/components/PostingSidebar/LearnMoreAboutTalk/index.m.less"),
				l = n.n(c);
			t.a = () => {
				const e = Object(a.b)("audio");
				return r.a.createElement("div", {
					className: l.a.Container
				}, r.a.createElement("div", {
					className: l.a.TitleContainer
				}, r.a.createElement(e, {
					className: l.a.AudioIcon
				}), r.a.createElement("h4", {
					className: l.a.Title
				}, r.a.createElement("span", {
					className: l.a.New
				}, o.fbt._("NEW!", null, {
					hk: "x4BpB"
				})), " ", o.fbt._("Host live audio talks", null, {
					hk: "26n05N"
				}))), r.a.createElement("p", {
					className: l.a.Description
				}, o.fbt._("Have fun hosting AMAs, Q&As, or just hanging out with your community.", null, {
					hk: "18zlgC"
				})), r.a.createElement(i.t, {
					kind: i.b.ExternalLink,
					priority: i.c.PlainLink,
					href: "https://reddithelp.com/hc/en-us/articles/4404349195284 ",
					target: "_blank",
					className: l.a.LearnMoreLink
				}, o.fbt._("Learn more about Reddit Talk", null, {
					hk: "3N8tu4"
				})))
			}
		},
		"./src/reddit/components/PostingSidebar/PolicyRow/index.m.less": function(e, t, n) {
			e.exports = {
				PolicyRow: "_2N9ShiilNyzdd0B_i9geBj",
				policyRow: "_2N9ShiilNyzdd0B_i9geBj"
			}
		},
		"./src/reddit/components/PostingSidebar/PolicyRow/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/config.ts");
			const {
				redditUrl: i
			} = r.a, a = `${i}/help/contentpolicy`, c = `${i}/wiki/reddiquette`;
			var l = n("./src/reddit/components/PostingSidebar/PolicyRow/index.m.less"),
				d = n.n(l);
			const {
				fbt: u
			} = n("./node_modules/fbt/lib/FbtPublic.js");
			t.a = e => s.a.createElement("div", {
				className: d.a.PolicyRow
			}, u._("Please be mindful of reddit's {=content policy} and practice good {=reddiquette}.", [u._param("=content policy", s.a.createElement("a", {
				href: a
			}, u._("content policy", null, {
				hk: "2PeDvo"
			}))), u._param("=reddiquette", s.a.createElement("a", {
				href: c
			}, u._("reddiquette", null, {
				hk: "uPdiw"
			})))], {
				hk: "4yQuKr"
			}))
		},
		"./src/reddit/components/PostingSidebar/PostingReddiquette/index.m.less": function(e, t, n) {
			e.exports = {
				Snoo: "_1XXU14d6sjwsheKLMcy7ro",
				snoo: "_1XXU14d6sjwsheKLMcy7ro",
				Li: "_2aD4E5YdfsXR-e8kLRuTEp",
				li: "_2aD4E5YdfsXR-e8kLRuTEp",
				Ol: "a5fJMl2u0aujwukxWH3if",
				ol: "a5fJMl2u0aujwukxWH3if",
				Title: "_27SYzmGZdspPn9yA9voNCY",
				title: "_27SYzmGZdspPn9yA9voNCY",
				Component: "_1Zj2sAyYL2zB-kzZQcWiW",
				component: "_1Zj2sAyYL2zB-kzZQcWiW"
			}
		},
		"./src/reddit/components/PostingSidebar/PostingReddiquette/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/constants/index.ts"),
				l = n("./src/reddit/icons/svgs/SnooPosting/index.tsx"),
				d = n("./src/reddit/selectors/postCreations.ts"),
				u = n("./src/reddit/components/PostingSidebar/PostingReddiquette/index.m.less"),
				p = n.n(u),
				m = n("./src/lib/lessComponent.tsx");
			const h = m.a.wrapped(l.a, "Snoo", p.a),
				b = m.a.li("Li", p.a),
				f = m.a.ol("Ol", p.a),
				g = m.a.div("Title", p.a),
				v = Object(a.c)({
					submissionType: d.rb
				});
			t.a = m.a.wrapped(Object(i.b)(v)(e => {
				const {
					className: t,
					submissionType: n
				} = e, s = n === c.ac.CROSSPOST;
				return r.a.createElement("div", {
					className: t
				}, r.a.createElement(g, null, r.a.createElement(h, null), s ? o.fbt._("Crossposting to Reddit", null, {
					hk: "2ODPDt"
				}) : o.fbt._("Posting to Reddit", null, {
					hk: "8eEIT"
				})), r.a.createElement(f, null, r.a.createElement(b, null, o.fbt._("Remember the human", null, {
					hk: "1x3u5R"
				})), r.a.createElement(b, null, o.fbt._("Behave like you would in real life", null, {
					hk: "3pxfk1"
				})), r.a.createElement(b, null, o.fbt._("Look for the original source of content", null, {
					hk: "1FfUM4"
				})), r.a.createElement(b, null, o.fbt._("Search for duplicates before posting", null, {
					hk: "3Ij1gf"
				})), r.a.createElement(b, null, o.fbt._("Read the community’s rules", null, {
					hk: "3RNQW2"
				})), s && r.a.createElement(b, null, o.fbt._("You must join a community to crosspost there", null, {
					hk: "1YAEPX"
				}))))
			}), "Component", p.a)
		},
		"./src/reddit/components/PostingSidebar/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "itxZANPrH4AAYOj6VgfL9",
				container: "itxZANPrH4AAYOj6VgfL9",
				isOpenAIPilotV1: "xpmGc4AuyuOP6ErObihFx",
				isOpenAiPilotV1: "xpmGc4AuyuOP6ErObihFx"
			}
		},
		"./src/reddit/components/PostingSidebar/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/core-js/modules/web.dom.iterable.js"),
				s = n.n(o),
				r = n("./node_modules/@loadable/component/dist/loadable.esm.js"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./node_modules/react/index.js"),
				c = n.n(a),
				l = n("./node_modules/react-redux/es/index.js"),
				d = n("./node_modules/reselect/es/index.js"),
				u = n("./src/reddit/components/IdCard/async.tsx"),
				p = n("./src/reddit/components/SidebarFooter/index.tsx"),
				m = n("./src/reddit/components/SidebarSpacer/index.tsx"),
				h = n("./src/reddit/components/Widgets/PostCollection/index.tsx"),
				b = n("./src/reddit/components/Widgets/SubredditRules/index.tsx"),
				f = n("./src/reddit/contexts/PageLayer/index.tsx"),
				g = n("./src/reddit/models/Widgets/index.ts"),
				v = n("./src/reddit/selectors/experiments/postCreationSubRec.ts"),
				x = n("./src/reddit/selectors/postCreations.ts"),
				C = n("./src/reddit/selectors/profile.ts"),
				E = n("./src/reddit/selectors/subreddit.ts"),
				y = n("./src/reddit/selectors/widgets.ts"),
				O = n("./src/reddit/components/PostingSidebar/LearnMoreAboutTalk/index.tsx"),
				k = n("./src/reddit/components/PostingSidebar/PolicyRow/index.tsx"),
				_ = n("./src/reddit/components/PostingSidebar/PostingReddiquette/index.tsx"),
				j = n("./src/reddit/components/PostingSidebar/index.m.less"),
				S = n.n(j),
				T = n("./src/lib/constants/index.ts"),
				w = n("./src/lib/lessComponent.tsx");
			const I = Object(r.a)({
					resolved: {},
					chunkName: () => "reddit-components-ProfileIdCard",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!n.m[t]
					},
					importAsync: () => n.e("reddit-components-ProfileIdCard").then(n.bind(null, "./src/reddit/components/ProfileIdCard/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return n(t)
					},
					resolve() {
						return "./src/reddit/components/ProfileIdCard/index.tsx"
					}
				}),
				P = w.a.div("Container", S.a),
				M = Object(f.v)(),
				R = new Set(["all", "post"]),
				N = Object(d.a)((e, t) => {
					let {
						pageLayer: n
					} = t;
					const o = Object(f.s)(e, {
						pageLayer: n
					});
					return o && Object(E.W)(e, {
						subredditId: o.id
					})
				}, e => (e || []).filter(e => R.has(e.kind))),
				D = (e, t) => {
					let {
						pageLayer: n
					} = t;
					const o = Object(f.s)(e, {
						pageLayer: n
					});
					return !(!o || !Object(y.d)(e, {
						subredditName: o.name
					}))
				},
				L = Object(d.c)({
					hasIdCardWidgetData: D,
					isCreationPagePending: x.L,
					profile: (e, t) => {
						let {
							pageLayer: n,
							subredditOrProfileId: o
						} = t;
						return o ? Object(C.r)(e, {
							profileId: o
						}) : Object(f.l)(e, {
							pageLayer: n
						})
					},
					subreddit: f.s,
					subredditRules: N,
					currentPostCollection: f.g,
					isOpenAIPilotV1: v.g,
					submissionType: x.rb
				}),
				A = Object(l.b)(L),
				B = e => {
					const {
						className: t,
						currentPostCollection: n,
						hasIdCardWidgetData: o,
						isCreationPagePending: s,
						isOpenAIPilotV1: r,
						profile: a,
						submissionType: l,
						subreddit: d,
						subredditRules: f
					} = e, v = o || s;
					return c.a.createElement(P, {
						className: Object(i.a)(t, {
							[S.a.isOpenAIPilotV1]: r
						})
					}, n && c.a.createElement(h.a, {
						collection: n
					}), d && v && c.a.createElement(m.a, null, c.a.createElement(u.a, {
						isSubmissionPage: !0,
						listingName: d.name
					})), a && !d && c.a.createElement(m.a, null, c.a.createElement(I, {
						profileName: a.name,
						isOverlay: !1,
						isSubmissionPage: !0
					})), d && f && c.a.createElement(m.a, null, c.a.createElement(b.a, {
						subredditName: d.name,
						display: g.h.COMPACT,
						rules: f,
						redditStyle: !0
					})), l === T.ac.TALK && c.a.createElement(m.a, null, c.a.createElement(O.a, null)), c.a.createElement(_.a, null), c.a.createElement(m.a, null), c.a.createElement(k.a, null), c.a.createElement(p.a, {
						redditStyle: !0
					}))
				};
			t.a = M(A(B))
		},
		"./src/reddit/components/ProfileIdCard/SnoovatarButton/TryItOn.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/classNames/index.ts"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/react-router/esm/react-router.js"),
				c = n("./src/reddit/actions/post.ts"),
				l = n("./src/reddit/actions/snoovatarModal.ts"),
				d = n("./src/reddit/components/TrackingHelper/index.tsx"),
				u = n("./src/reddit/controls/Button/index.tsx"),
				p = n("./src/reddit/helpers/trackers/snoovatar.ts"),
				m = n("./src/reddit/icons/svgs/Shirt/index.tsx"),
				h = n("./src/reddit/models/Vote/index.ts"),
				b = n("./src/reddit/components/ProfileIdCard/SnoovatarButton/index.m.less"),
				f = n.n(b);
			const {
				fbt: g
			} = n("./node_modules/fbt/lib/FbtPublic.js");
			t.a = Object(a.i)(e => {
				let {
					isHovercard: t,
					username: n,
					isAvatarPost: a,
					post: b,
					share: v
				} = e;
				const x = Object(d.b)(),
					C = Object(i.d)(),
					E = b && b.id,
					y = b && b.voteState;
				let O = null;
				E || (O = t ? "user_hovercard" : "profile_overview");
				const k = Object(s.useCallback)(() => x(Object(p.h)(t ? "user_hovercard" : "profile_overview", n)), [t, x, n]);
				return r.a.createElement(u.t, {
					onClick: () => {
						a ? (x(p.i), E && y === h.a.notVoted && C(Object(c.ib)(E))) : k();
						const e = a ? "postify" : "copy";
						C(Object(l.b)({
							clickSource: O,
							share: v,
							source: e
						}))
					},
					className: Object(o.a)(f.a.snoovatarButton, f.a.snoovatarExtraPadding, f.a.compactButtonLayout, {
						[f.a.avatarPostifyButton]: a
					}),
					isFullWidth: !0
				}, r.a.createElement(m.a, {
					className: Object(o.a)({
						[f.a.shirtIcon]: !a,
						[f.a.avatarPostButtonShirtIcon]: a
					})
				}), g._("Try this Look", null, {
					hk: "dOuPb"
				}), r.a.createElement("div", {
					className: f.a.chevronIcon
				}))
			})
		},
		"./src/reddit/components/ProfileIdCard/SnoovatarButton/index.m.less": function(e, t, n) {
			e.exports = {
				snoovatarButton: "_3F1tNW0P4Ff182mO_CefIg",
				avatarPostifyButton: "_2Viile0fcrruho_hQqpnUx",
				snoovatarExtraPadding: "_3DnDqV66Np6rVEiI8QK7kl",
				shirtIcon: "_3gYTHRBO1S_S5AOddgqD6Z",
				avatarPostButtonShirtIcon: "ARFP2bx6U967JwMoJ2Xr5",
				compactButtonLayout: "VFbNvXfZXUhRFiCTDHO6f",
				chevronIcon: "_12pWM-aURvVUuSrUyqfNZh"
			}
		},
		"./src/reddit/components/ProgressBar/index.m.less": function(e, t, n) {
			e.exports = {
				innerBar: "Db3WJFTcyAR-IM0cIkpDG",
				outerBar: "i8kQtxHYBB8Sb3bPI4M_e"
			}
		},
		"./src/reddit/components/ProgressBar/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/components/ProgressBar/index.m.less"),
				a = n.n(i);
			t.a = e => {
				let {
					className: t,
					innerBarClassName: n,
					percent: o
				} = e;
				return s.a.createElement("div", {
					className: Object(r.a)(a.a.outerBar, t)
				}, s.a.createElement("div", {
					className: Object(r.a)(a.a.innerBar, n),
					style: {
						width: `${o.toFixed(2)}%`
					}
				}))
			}
		},
		"./src/reddit/components/RawHTMLDisplay/index.m.less": function(e, t, n) {
			e.exports = {
				StyledRawHTMLDisplay: "_3ms2Z8z8rPWLXaErcTJ9yH",
				styledRawHtmlDisplay: "_3ms2Z8z8rPWLXaErcTJ9yH"
			}
		},
		"./src/reddit/components/RawHTMLDisplay/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/polished/dist/polished.es.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./src/lib/CSSVariableProvider/withTheme.tsx"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/reddit/actions/urlRequested.ts"),
				d = n("./src/reddit/hooks/useOutboundClickTracking.ts"),
				u = n("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				p = n("./src/reddit/components/RawHTMLDisplay/index.m.less"),
				m = n.n(p);
			const h = Object(i.b)(null, e => ({
					onNavigate: t => e(Object(l.a)(t))
				})),
				b = c.a.wrapped(e => {
					const t = Object(d.a)();
					return r.a.createElement("div", {
						className: e.className,
						dangerouslySetInnerHTML: {
							__html: e.html
						},
						onClick: n => {
							((e, t, n, o, s) => {
								if (!e.ctrlKey && !e.metaKey && 1 !== e.button && "A" === e.target.tagName) {
									e.preventDefault();
									const n = e.target.getAttribute("href");
									s && o(n, s), t(n)
								}
								e.target.classList && e.target.classList.contains("md-spoiler-text") && (e.target.dataset.revealed = !0), n && n(e)
							})(n, e.onNavigate, e.onClick, t, e.sourceElement)
						},
						style: {
							...e.style,
							"--RawHTMLDisplay-tr-even": Object(o.f)(Object(u.a)(e).body, .8),
							"--RawHTMLDisplay-tr-odd": Object(o.f)(Object(u.a)(e).line, .8)
						}
					})
				}, "StyledRawHTMLDisplay", m.a);
			t.a = h(Object(a.a)(b))
		},
		"./src/reddit/components/RequestPendingBanner/index.m.less": function(e, t, n) {
			e.exports = {
				Banner: "_1AD-JX9FUzLgvv8A5yaVqV",
				banner: "_1AD-JX9FUzLgvv8A5yaVqV",
				Subtitle: "_1ljRPHbvpC41amZF9_xBeb",
				subtitle: "_1ljRPHbvpC41amZF9_xBeb"
			}
		},
		"./src/reddit/components/RequestPendingBanner/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/reddit/components/InfoBanners/BannerBase/index.tsx"),
				d = n("./src/reddit/models/SubredditRestrictions/index.ts"),
				u = n("./src/reddit/selectors/platform.ts"),
				p = n("./src/reddit/selectors/subreddit.ts"),
				m = n("./src/reddit/components/RequestPendingBanner/index.m.less"),
				h = n.n(m);
			const b = c.a.wrapped(l.a, "Banner", h.a),
				f = Object(i.b)(() => Object(a.c)({
					restrictions: p.q,
					subreddit: u.e
				}));
			t.a = f(e => {
				let {
					restrictions: t,
					subreddit: n
				} = e;
				if (!n) return null;
				const s = t === d.e.Comment ? d.a.Create : d.a.Draft;
				return r.a.createElement(b, {
					subtitle: r.a.createElement("span", {
						className: h.a.Subtitle
					}, o.fbt._("Your request to {restrictions} in {displayName} was sent and is pending. In the meantime, you can {action} a post and {=browse the community}", [o.fbt._param("restrictions", d.d[t]()), o.fbt._param("displayName", n.name), o.fbt._param("action", d.c[s]()), o.fbt._param("=browse the community", r.a.createElement("a", {
						href: `${n.url}`
					}, o.fbt._("browse the community", null, {
						hk: "3hwgAC"
					})))], {
						hk: "2CX6Q6"
					})),
					title: o.fbt._("Request to {restrictions} is pending...", [o.fbt._param("restrictions", d.d[t]())], {
						hk: "1tQuSr"
					})
				})
			})
		},
		"./src/reddit/components/ResizableAutosizeTextarea/index.m.less": function(e, t, n) {
			e.exports = {
				editorWrapper: "VBa-xDMEbFi3vsO4id4OC",
				textareaAutosize: "_6Ej82J4aTDK36LLOcpFbC",
				mIsFullHeight: "aZb6a46diyLdUQJynW3aD"
			}
		},
		"./src/reddit/components/ResizableAutosizeTextarea/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-autosize-textarea/lib/index.js"),
				i = n.n(r),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/reddit/components/ResizableAutosizeTextarea/index.m.less"),
				l = n.n(c);

			function d() {
				return (d = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const u = e => {
					let {
						className: t,
						children: n,
						editorWrapperRef: o,
						initialHeight: r
					} = e;
					return s.a.createElement("div", {
						className: Object(a.a)(l.a.editorWrapper, t),
						style: r ? {
							height: r
						} : void 0,
						ref: o
					}, n)
				},
				p = e => {
					let {
						isFullHeight: t,
						textAreaRef: n,
						...o
					} = e;
					return s.a.createElement(i.a, d({
						className: Object(a.a)(l.a.textareaAutosize, {
							[l.a.mIsFullHeight]: t
						}),
						innerRef: n
					}, o))
				};
			class m extends s.a.Component {
				constructor(e) {
					super(e), this.editorHeight = null, this.editorRef = null, this.editorStyleMutationObserver = null, this.onEditorStyleChanged = () => {
						if (!this.editorRef) return;
						const {
							isResized: e
						} = this.state;
						e || this.setState({
							isResized: !0
						});
						const t = this.editorRef.style.height ? Number.parseInt(this.editorRef.style.height) : null;
						this.editorHeight !== t && (this.editorHeight = t, t && this.props.onEditorResize && this.props.onEditorResize(t))
					}, this.setEditorWrapperRef = e => this.editorRef = e, this.state = {
						initialHeight: e.initialHeight,
						isResized: !!e.initialHeight
					}
				}
				componentDidMount() {
					this.editorRef && (this.editorStyleMutationObserver = new MutationObserver(this.onEditorStyleChanged), this.editorStyleMutationObserver.observe(this.editorRef, {
						attributes: !0,
						attributeFilter: ["style"]
					}))
				}
				componentWillUnmount() {
					this.editorStyleMutationObserver && (this.editorStyleMutationObserver.disconnect(), this.editorStyleMutationObserver = null)
				}
				render() {
					const {
						className: e,
						initialHeight: t,
						innerRef: n,
						onEditorResize: o,
						...r
					} = this.props, {
						isResized: i
					} = this.state;
					return s.a.createElement(u, {
						className: e,
						editorWrapperRef: this.setEditorWrapperRef,
						initialHeight: t
					}, s.a.createElement(p, d({}, r, {
						isFullHeight: !!i,
						textAreaRef: n
					})))
				}
			}
			t.a = m
		},
		"./src/reddit/components/ResizeSensor/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			}));
			var o = n("./node_modules/raf/index.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r);
			class a extends i.a.Component {
				constructor(e) {
					super(e), this.isIE = () => /Trident/.test(navigator.userAgent), this.setContainerRef = e => {
						this.containerRef || (this.containerRef = e, this.createSensor())
					}, this.handleResize = () => {
						void 0 !== this.frame && s.a.cancel(this.frame), this.frame = s()(this.props.onResize)
					}, this.containerRef = e.containerRef
				}
				shouldComponentUpdate() {
					return !1
				}
				componentDidMount() {
					this.createSensor()
				}
				createSensor() {
					if (!this.containerRef || this.sensor) return;
					this.sensor = document.createElement("object"), this.sensor.setAttribute("style", "\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      overflow: hidden;\n      pointer-events: none;\n      z-index: -1;\n      visibility: hidden;\n    "), this.sensor.setAttribute("tabindex", "-1"), this.sensor.onload = () => {
						this.props.onResize(), this.sensor && this.sensor.contentDocument && this.sensor.contentDocument.defaultView && this.sensor.contentDocument.defaultView.addEventListener("resize", this.handleResize)
					}, this.sensor.type = "text/html";
					const e = this.isIE();
					e && this.containerRef.appendChild(this.sensor), this.sensor.data = "about:blank", e || this.containerRef.appendChild(this.sensor), this.props.onResize()
				}
				componentWillUnmount() {
					this.sensor && (this.sensor && this.sensor.contentDocument && this.sensor.contentDocument.defaultView && this.sensor.contentDocument.defaultView.removeEventListener("resize", this.handleResize), this.containerRef && this.containerRef.removeChild(this.sensor))
				}
				render() {
					return i.a.createElement("div", {
						ref: this.setContainerRef
					})
				}
			}
		},
		"./src/reddit/components/RestrictedFlatlistButton/index.m.less": function(e, t, n) {
			e.exports = {
				removalReasonButton: "_3IEDcFIIs_TeXsZtKZGzUd",
				TextWrapper: "smOzqVIOoNqmSJcyBX2N6",
				textWrapper: "smOzqVIOoNqmSJcyBX2N6",
				Button: "_1rNBkuuOkN2SorEXyRkYjB",
				button: "_1rNBkuuOkN2SorEXyRkYjB",
				ApproveButton: "_2T9IigN7CfZvuc5KSKs2hx",
				approveButton: "_2T9IigN7CfZvuc5KSKs2hx",
				RemoveButton: "_2OvUr_pd3kddsNP_f35S28",
				removeButton: "_2OvUr_pd3kddsNP_f35S28"
			}
		},
		"./src/reddit/components/RestrictedFlatlistButton/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return l
			})), n.d(t, "b", (function() {
				return d
			})), n.d(t, "d", (function() {
				return u
			})), n.d(t, "a", (function() {
				return p
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/components/RestrictedFlatlistButton/index.m.less"),
				c = n.n(a);
			const l = e => s.a.createElement("button", {
					className: Object(r.a)(c.a.Button, e.className),
					disabled: e.disabled,
					id: e.id,
					onClick: e.disabled ? void 0 : e.onClick,
					onMouseEnter: e.onMouseEnter,
					onMouseLeave: e.onMouseLeave
				}, e.children, e.text && s.a.createElement("span", {
					className: Object(r.a)(c.a.TextWrapper, e.textClassName)
				}, e.text, " ")),
				d = i.a.wrapped(l, "ApproveButton", c.a),
				u = i.a.wrapped(l, "RemoveButton", c.a),
				p = e => s.a.createElement("button", {
					className: Object(r.a)(c.a.removalReasonButton, e.className),
					onClick: e.onClick
				}, e.text)
		},
		"./src/reddit/components/RichTextEditor/Blockquote/index.m.less": function(e, t, n) {
			e.exports = {
				BlockQuoteWrapper: "_3bqfSxMWo3yWv7j4N8hQy6",
				blockQuoteWrapper: "_3bqfSxMWo3yWv7j4N8hQy6"
			}
		},
		"./src/reddit/components/RichTextEditor/CodeBlock/index.m.less": function(e, t, n) {
			e.exports = {
				CodeBlockWrapper: "_2YrwxhRxsXvszOhYWDUhMh",
				codeBlockWrapper: "_2YrwxhRxsXvszOhYWDUhMh"
			}
		},
		"./src/reddit/components/RichTextEditor/DragController/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return m
			})), n.d(t, "c", (function() {
				return h
			})), n.d(t, "a", (function() {
				return b
			}));
			var o = n("./node_modules/lodash/includes.js"),
				s = n.n(o);
			var r = n("./src/reddit/helpers/dom/index.ts"),
				i = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const a = e => e.className.indexOf("public-DraftEditor-content") >= 0,
				c = e => !!e.parentElement && !!e.parentElement.parentElement && a(e.parentElement.parentElement),
				l = e => !(!e.dataset.block || !e.dataset.offsetKey),
				d = e => {
					const {
						offsetKey: t
					} = e.dataset;
					return t ? (e => e.split("-")[0])(t) : ""
				},
				u = (e, t) => {
					return ((e, t) => {
						const n = function(e, t) {
							let n = 0,
								o = e.length - 1;
							for (; n <= o;) {
								const s = o + n >> 1,
									r = t(e[s]);
								if (r > 0) n = s + 1;
								else {
									if (!(r < 0)) return s;
									o = s - 1
								}
							}
							return n
						}(e, e => {
							const n = e.getBoundingClientRect();
							return t < n.top ? -1 : t > n.bottom ? 1 : 0
						});
						return e[Math.min(n, e.length - 1)]
					})(e.querySelectorAll("[data-block][data-offset-key]"), t)
				},
				p = (e, t) => {
					const n = Object(r.b)(e, l, a);
					return n || u(e, t)
				},
				m = (e, t) => {
					const n = (e => {
						const t = e.target;
						if (!(t instanceof HTMLElement)) return;
						const n = Object(r.b)(t, a);
						if (!n) return;
						const o = p(t, e.clientY);
						if (!o) return;
						const s = Object(r.b)(o, c);
						return s ? {
							editorContentElement: n,
							topLevelElement: s,
							blockElement: o
						} : void 0
					})(t);
					if (!n) return;
					const {
						topLevelElement: o,
						blockElement: s
					} = n, l = d(s), u = e.getCurrentContent(), m = u.getBlockForKey(l);
					if (!m) return;
					const {
						upperElement: h,
						lowerElement: b
					} = ((e, t, n, o) => {
						let s = n,
							r = n;
						if (e.getType() === i.b.UNSTYLED) s = r = t;
						else if (Object(i.o)(e.getType())) {
							s = r = t;
							const a = o.getBlockAfter(e.getKey());
							a && Object(i.u)(a.getType()) && (r = n.nextElementSibling)
						} else Object(i.u)(e.getType()) && (s = n.previousElementSibling, r = t);
						return {
							upperElement: s,
							lowerElement: r
						}
					})(m, s, o, u), {
						clientY: f,
						isBefore: g
					} = ((e, t, n) => {
						const o = e.getBoundingClientRect(),
							s = t.getBoundingClientRect();
						let i, c;
						if (n > (o.top + s.bottom) / 2) {
							i = s.bottom, c = !1;
							const e = Object(r.b)(t, e => !!e.nextElementSibling, a);
							if (e) {
								i = (e.nextElementSibling.getBoundingClientRect().top + s.bottom) / 2
							}
						} else {
							i = o.top, c = !0;
							const t = Object(r.b)(e, e => !!e.previousElementSibling, a);
							if (t) {
								i = (t.previousElementSibling.getBoundingClientRect().bottom + o.top) / 2
							}
						}
						return {
							clientY: i,
							isBefore: c
						}
					})(h, b, t.clientY);
					let v = l;
					if (m.getType() !== i.b.UNSTYLED) {
						const e = p(g ? h : b, f);
						e && (v = d(e))
					}
					return {
						clientY: f,
						isBefore: g,
						blockKey: v
					}
				},
				h = e => e.items ? !!Array.from(e.items).find(e => "file" === e.kind) : !(!e.files || !e.files.length) || s()(e.types, "Files"),
				b = e => e.items ? Array.from(e.items).map(e => "file" === e.kind ? e.getAsFile() : null).filter(Boolean) : e.files ? Array.from(e.files) : []
		},
		"./src/reddit/components/RichTextEditor/DragController/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_13Sj3UMDKkCCJTq88berCB",
				hideCaret: "_2BqK1CuzH2oWi2F9_cuFPQ",
				DropLine: "z5iuD3MVYcfS7tTihbvof",
				dropLine: "z5iuD3MVYcfS7tTihbvof",
				Tooltip: "_1z9S1KmnM79xn-UA0FnbP6",
				tooltip: "_1z9S1KmnM79xn-UA0FnbP6"
			}
		},
		"./src/reddit/components/RichTextEditor/HoverTooltip/index.m.less": function(e, t, n) {
			e.exports = {
				tooltip: "ki2VbfBhU-qxg1S6VyET6",
				above: "_8fNGSBGvr1Ds8PbrsUGzN",
				below: "_38gWvHp3NJkR5r5ftUfbFG",
				HoverTooltip: "Nb7NCPTlQuxN_WDPUg5Q2",
				hoverTooltip: "Nb7NCPTlQuxN_WDPUg5Q2"
			}
		},
		"./src/reddit/components/RichTextEditor/HoverTooltip/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/components/RichTextEditor/HoverTooltip/index.m.less"),
				c = n.n(a);

			function l() {
				return (l = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = i.a.wrapped(e => {
				const {
					children: t,
					className: n,
					renderBelow: o,
					text: i,
					tooltipContentClass: a,
					...d
				} = e;
				return s.a.createElement("div", l({}, d, {
					className: Object(r.a)(c.a.container, n)
				}), i ? s.a.createElement("div", {
					className: Object(r.a)(c.a.tooltip, a, o ? c.a.below : c.a.above)
				}, i) : null, t)
			}, "HoverTooltip", c.a)
		},
		"./src/reddit/components/RichTextEditor/LinksController/LinkDetailsPopup/index.m.less": function(e, t, n) {
			e.exports = {
				LinkDetailsBox: "_2F28OVOVlGo6WCT2l8lHzO",
				linkDetailsBox: "_2F28OVOVlGo6WCT2l8lHzO",
				Link: "_3vJCj_aXdDc-UXA9fDK-z-",
				link: "_3vJCj_aXdDc-UXA9fDK-z-",
				LinkButton: "_1NtBcR7JgjxkWLJrk3ddD3",
				linkButton: "_1NtBcR7JgjxkWLJrk3ddD3"
			}
		},
		"./src/reddit/components/RichTextEditor/LinksController/LinkEditorPopup/index.m.less": function(e, t, n) {
			e.exports = {
				EditForm: "_1iFkUjPC4J8jzWrDthDpcv",
				editForm: "_1iFkUjPC4J8jzWrDthDpcv",
				LinkEditorBox: "_3HMg7pEvqliZhuStFZ241S",
				linkEditorBox: "_3HMg7pEvqliZhuStFZ241S",
				Input: "_2rXi0UvEKRcI3WdI52LAx1",
				input: "_2rXi0UvEKRcI3WdI52LAx1",
				Label: "_2olni9Ucr8-t8W62nTkY_",
				label: "_2olni9Ucr8-t8W62nTkY_",
				HintAndButtonRow: "_2qiAR3ZyDGPSr9zmqhP_5Z",
				hintAndButtonRow: "_2qiAR3ZyDGPSr9zmqhP_5Z",
				InvalidUrlHint: "pKrgYGkHvjHPFkWO-Gnko",
				invalidUrlHint: "pKrgYGkHvjHPFkWO-Gnko",
				SubmitButton: "_8a_rf-Al8VNnUQ42WlvF",
				submitButton: "_8a_rf-Al8VNnUQ42WlvF"
			}
		},
		"./src/reddit/components/RichTextEditor/OrderedList/index.m.less": function(e, t, n) {
			e.exports = {
				OrderedListWrapper: "_1QXegNe8bOemD558m-vc9t",
				orderedListWrapper: "_1QXegNe8bOemD558m-vc9t"
			}
		},
		"./src/reddit/components/RichTextEditor/Paragraph/index.m.less": function(e, t, n) {
			e.exports = {
				ParagraphWrapper: "_3LuG0YVLLHE2azRNVaKz7O",
				paragraphWrapper: "_3LuG0YVLLHE2azRNVaKz7O"
			}
		},
		"./src/reddit/components/RichTextEditor/TextRendering/index.m.less": function(e, t, n) {
			e.exports = {
				H1: "_15ThA3NFuzpQTnPu0I3QKj",
				h1: "_15ThA3NFuzpQTnPu0I3QKj",
				H2: "_3R5icAd6cRzwpq-yhvQUoW",
				h2: "_3R5icAd6cRzwpq-yhvQUoW",
				H3: "_3UxnA7bFPnKoS0rKMO1UYe",
				h3: "_3UxnA7bFPnKoS0rKMO1UYe",
				H4: "_10CFPbxVR0HQhyRBkeExmO",
				h4: "_10CFPbxVR0HQhyRBkeExmO",
				H5: "_3bidJE2WceaRjyBA8LLfp3",
				h5: "_3bidJE2WceaRjyBA8LLfp3",
				H6: "_27N6aQ0-d-ntRM1JkDwGg7",
				h6: "_27N6aQ0-d-ntRM1JkDwGg7"
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.m.less": function(e, t, n) {
			e.exports = {
				button: "_2lAJkFZXhr5kbH7YF-sYFf",
				enabled: "_1H0LLEwUP5ys6cgxr9KhMa",
				active: "_32EiQr-Px2GJvCfigwwmuK"
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/controls/Button/index.tsx"),
				c = n("./src/reddit/icons/fonts/index.tsx"),
				l = n("./src/reddit/components/RichTextEditor/HoverTooltip/index.tsx"),
				d = n("./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.m.less"),
				u = n.n(d);

			function p() {
				return (p = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const m = e => {
				e.preventDefault(), e.stopPropagation()
			};
			t.a = i.a.wrapped(e => {
				const {
					active: t,
					className: n,
					disabledTooltip: o,
					enabled: i = !0,
					tooltip: d,
					Icon: h,
					iconName: b,
					onClick: f,
					overridingClassName: g,
					tooltipBelow: v,
					children: x
				} = e, C = {
					"aria-label": d,
					"aria-selected": t,
					className: g || Object(r.a)(u.a.button, n, {
						[u.a.active]: !!t,
						[u.a.enabled]: i
					}),
					onMouseDown: m,
					onClick: e => {
						m(e), i && f && f(e)
					},
					role: "button",
					tabIndex: -1
				};
				return s.a.createElement(a.t, p({}, C, {
					size: a.d.S,
					priority: a.c.Plain,
					isSquare: !0,
					Icon: b ? Object(c.b)(b) : h
				}), s.a.createElement(l.a, {
					text: (i ? d : o) || "",
					tooltipContentClass: e.tooltipContentClass,
					renderBelow: v
				}), x)
			}, "FormatterButton", u.a)
		},
		"./src/reddit/components/RichTextEditor/Toolbar/MarkdownButton/index.m.less": function(e, t, n) {
			e.exports = {
				LoadingIcon: "jOFrSZE7wRk_lVAP2pBvY",
				loadingIcon: "jOFrSZE7wRk_lVAP2pBvY",
				markdownIcon: "_2ROqhD3999k4q_d5PMRde-",
				Text: "EVdFfF5K7kZFMaYpSHbLe",
				text: "EVdFfF5K7kZFMaYpSHbLe",
				Button: "_1Mg8ZhclDuQlkzEqVU21qu",
				button: "_1Mg8ZhclDuQlkzEqVU21qu"
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/MarkdownButton/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/reddit/controls/Button/index.tsx"),
				d = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				u = n("./src/reddit/selectors/editorContent.ts"),
				p = n("./src/reddit/components/RichTextEditor/HoverTooltip/index.tsx"),
				m = n("./src/reddit/components/RichTextEditor/Toolbar/MarkdownButton/index.m.less"),
				h = n.n(m);
			const b = c.a.wrapped(d.a, "LoadingIcon", h.a),
				f = Object(a.c)({
					isConverting: (e, t) => Object(u.a)(e, t.draftKey)
				}),
				g = Object(i.b)(f);
			t.a = r.a.memo(g(e => r.a.createElement(l.t, {
				priority: l.c.Plain,
				size: l.d.XS,
				text: r.a.createElement(r.a.Fragment, null, e.isConverting && r.a.createElement(b, {
					sizePx: 12
				}), o.fbt._("Markdown Mode", null, {
					hk: "1DXoXV"
				})),
				"aria-label": o.fbt._("Switch to markdown", null, {
					hk: "OxsM0"
				}),
				tabIndex: -1,
				className: e.className,
				onClick: e.onClick
			}, !e.shouldHideTooltip && r.a.createElement(p.a, {
				text: o.fbt._("Switch to markdown", null, {
					hk: "4mWw83"
				})
			}))))
		},
		"./src/reddit/components/RichTextEditor/Toolbar/MediaInputButton/index.m.less": function(e, t, n) {
			e.exports = {
				ImageIcon: "_1jv-IJjyjDSSVuYe6CzeHv",
				imageIcon: "_1jv-IJjyjDSSVuYe6CzeHv",
				VideoIcon: "uo_2BSPFse-IQNQbclyKb",
				videoIcon: "uo_2BSPFse-IQNQbclyKb",
				HiddenInput: "_2keaDnXIlu9Yq2y-cC8zgu",
				hiddenInput: "_2keaDnXIlu9Yq2y-cC8zgu"
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/MediaInputButton/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return h
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/lib/constants/index.ts"),
				a = n("./src/lib/constants/icons.ts"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts"),
				d = n("./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.tsx"),
				u = n("./src/reddit/components/RichTextEditor/Toolbar/MediaInputButton/index.m.less"),
				p = n.n(u);
			const m = c.a.input("HiddenInput", p.a);
			class h extends s.Component {
				constructor() {
					super(...arguments), this.hiddenInputEl = null, this.onFileInputChange = e => {
						e.stopPropagation();
						const t = this.hiddenInputEl,
							n = t.files;
						n && n.length && (this.props.onFilesInput(Array.from(n)), t.value = "")
					}, this.onButtonClick = () => {
						this.hiddenInputEl && this.hiddenInputEl.click(), this.props.onClick()
					}, this.onHiddenInputClick = e => e.stopPropagation()
				}
				render() {
					const {
						accept: e,
						active: t,
						controlsState: n,
						destSubreddit: s,
						disabledTooltip: c,
						enabled: u,
						type: p
					} = this.props, h = "image" === p, b = n.blocks[l.a];
					let f = !0;
					if (s && s.allowedPostTypes) {
						const {
							images: e,
							videos: t
						} = s.allowedPostTypes;
						f = h ? e : t
					}
					let g = b.isActive,
						v = b.isEnabled && f;
					return void 0 !== t && (g = t), void 0 !== u && (v = u), r.a.createElement(d.a, {
						iconName: h ? a.a.image_post : a.a.video_post,
						active: g,
						enabled: v,
						tooltip: h ? o.fbt._("Add an image", null, {
							hk: "4bqU7J"
						}) : o.fbt._("Add a video", null, {
							hk: "2dn6oZ"
						}),
						onClick: this.onButtonClick,
						disabledTooltip: c
					}, r.a.createElement(m, {
						multiple: !0,
						innerRef: e => this.hiddenInputEl = e,
						onChange: this.onFileInputChange,
						onClick: this.onHiddenInputClick,
						type: "file",
						accept: e || Array.from(h ? i.b : i.d).join()
					}))
				}
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/formatterConfigs.m.less": function(e, t, n) {
			e.exports = {
				Icon: "_3UAl61hrkRAXX5JQ6m_q8R",
				icon: "_3UAl61hrkRAXX5JQ6m_q8R"
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/formatterConfigs.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "f", (function() {
				return m
			})), n.d(t, "b", (function() {
				return h
			})), n.d(t, "e", (function() {
				return b
			})), n.d(t, "j", (function() {
				return f
			})), n.d(t, "g", (function() {
				return g
			})), n.d(t, "i", (function() {
				return v
			})), n.d(t, "k", (function() {
				return x
			})), n.d(t, "d", (function() {
				return C
			})), n.d(t, "l", (function() {
				return E
			})), n.d(t, "h", (function() {
				return y
			})), n.d(t, "a", (function() {
				return O
			})), n.d(t, "c", (function() {
				return k
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/lib/constants/icons.ts"),
				a = n("./src/lib/lessComponent.tsx"),
				c = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts"),
				l = n("./src/reddit/components/RichTextEditor/Toolbar/formatterConfigs.m.less"),
				d = n.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const p = e => a.a.wrapped(e, "Icon", d.a),
				m = function(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
					return n => {
						const o = p(e);
						return r.a.createElement(o, u({}, n, {
							style: {
								padding: t
							}
						}))
					}
				},
				h = {
					type: "style",
					name: "bold",
					iconName: i.a.bold,
					style: c.k.BOLD,
					tooltipTranslation: () => o.fbt._("Bold", null, {
						hk: "16qNLn"
					})
				},
				b = {
					type: "style",
					name: "italics",
					iconName: i.a.italic,
					style: c.k.ITALIC,
					tooltipTranslation: () => o.fbt._("Italics", null, {
						hk: "3hxpiB"
					})
				},
				f = {
					type: "style",
					name: "strikethrough",
					iconName: i.a.strikethrough,
					style: c.k.STRIKETHROUGH,
					tooltipTranslation: () => o.fbt._("Strikethrough", null, {
						hk: "U4hXC"
					})
				},
				g = {
					type: "style",
					name: "inline_code",
					iconName: i.a.code_inline,
					style: c.k.MONOSPACE,
					tooltipTranslation: () => o.fbt._("Inline Code", null, {
						hk: "1eNxEt"
					})
				},
				v = {
					type: "style",
					name: "spoiler",
					iconName: i.a.spoiler,
					style: c.k.SPOILER,
					tooltipTranslation: () => o.fbt._("Spoiler", null, {
						hk: "1tb6Ht"
					})
				},
				x = {
					type: "style",
					name: "superscript",
					iconName: i.a.superscript,
					style: c.k.SUPERSCRIPT,
					tooltipTranslation: () => o.fbt._("Superscript", null, {
						hk: "sqKFn"
					})
				},
				C = {
					type: "block",
					name: "heading",
					iconName: i.a.text_size,
					block: c.b.H1,
					tooltipTranslation: () => o.fbt._("Heading", null, {
						hk: "4jnBPs"
					})
				},
				E = {
					type: "block",
					name: "unordered_list",
					iconName: i.a.list_bulleted,
					block: c.i.UNORDERED,
					tooltipTranslation: () => o.fbt._("Bulleted List", null, {
						hk: "21Yx7R"
					})
				},
				y = {
					type: "block",
					name: "ordered_list",
					iconName: i.a.list_numbered,
					block: c.i.ORDERED,
					tooltipTranslation: () => o.fbt._("Numbered List", null, {
						hk: "4BmF1X"
					})
				},
				O = {
					type: "block",
					name: "block_quote",
					iconName: i.a.quote,
					block: c.e,
					tooltipTranslation: () => o.fbt._("Quote Block", null, {
						hk: "1xUsGm"
					})
				},
				k = {
					type: "block",
					name: "code_block",
					iconName: i.a.code_block,
					block: c.f,
					tooltipTranslation: () => o.fbt._("Code Block", null, {
						hk: "2y19DH"
					})
				}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/index.m.less": function(e, t, n) {
			e.exports = {
				ToolbarWrapper: "_2w8adx4kIBGPEESCyEmToa",
				toolbarWrapper: "_2w8adx4kIBGPEESCyEmToa",
				isSticky: "r7zyyy152ZTdiHhea0cIj",
				tooltip: "dMXy0l6Saub8-fPDkQvGC",
				SectionSpacer: "_2voJAi1L0g2QbtAFDHSOCK",
				sectionSpacer: "_2voJAi1L0g2QbtAFDHSOCK",
				CollapseIntoOverflow: "_2Sw_-OGBZ8HN7tA8CP2qjP",
				collapseIntoOverflow: "_2Sw_-OGBZ8HN7tA8CP2qjP",
				MarkdownButtonWrapper: "-CJZhr1W053faqFXFYgXO",
				markdownButtonWrapper: "-CJZhr1W053faqFXFYgXO",
				MarkdownButton: "_2Z7RdWBmSoubpoKJAgNIAi",
				markdownButton: "_2Z7RdWBmSoubpoKJAgNIAi"
			}
		},
		"./src/reddit/components/RichTextEditor/Toolbar/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return j
			})), n.d(t, "g", (function() {
				return T
			})), n.d(t, "f", (function() {
				return w
			})), n.d(t, "h", (function() {
				return I
			})), n.d(t, "e", (function() {
				return P
			})), n.d(t, "a", (function() {
				return M
			})), n.d(t, "d", (function() {
				return R
			})), n.d(t, "b", (function() {
				return N
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./node_modules/fbt/lib/FbtPublic.js"),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/lib/constants/icons.ts"),
				l = n("./src/reddit/components/CollapseIntoOverflow/index.tsx"),
				d = n("./src/reddit/helpers/richTextEditor/index.ts"),
				u = n("./src/reddit/components/RichTextEditor/editorStateTransforms.ts"),
				p = n("./src/reddit/components/RichTextEditor/helpers/controlsState.ts"),
				m = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts"),
				h = n("./src/reddit/components/RichTextEditor/constants/editorChangeTypes.ts"),
				b = n("./src/reddit/components/RichTextEditor/helpers/common.ts"),
				f = n("./src/reddit/components/RichTextEditor/table/helpers.ts");
			var g = (e, t, n) => {
					if (Object(m.v)(o.RichUtils.getCurrentBlockType(e))) return e;
					const s = e.getCurrentContent(),
						r = e.getSelection().getEndKey(),
						i = Object(f.l)(t, n),
						a = Object(b.f)(s, r, i, b.a.after, !0),
						c = o.EditorState.push(e, a, h.e);
					return o.EditorState.forceSelection(c, o.SelectionState.createEmpty(i[0].getKey()))
				},
				v = n("./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.tsx"),
				x = n("./src/reddit/components/RichTextEditor/Toolbar/formatterConfigs.tsx"),
				C = n("./src/reddit/components/RichTextEditor/Toolbar/MarkdownButton/index.tsx"),
				E = n("./src/reddit/components/RichTextEditor/Toolbar/MediaInputButton/index.tsx"),
				y = n("./src/reddit/components/RichTextEditor/Toolbar/index.m.less"),
				O = n.n(y);

			function k() {
				return (k = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const _ = e => i.a.createElement(v.a, k({}, e, {
					tooltipContentClass: O.a.tooltip
				})),
				j = () => i.a.createElement("div", {
					className: O.a.SectionSpacer
				}),
				S = (e, t, n, s, r) => {
					const {
						name: a,
						iconName: c,
						tooltipTranslation: l
					} = e, d = l();
					if ("style" === e.type) {
						const {
							style: o
						} = e;
						return i.a.createElement(_, {
							iconName: c,
							active: t.styles[o].isActive,
							enabled: t.styles[o].isEnabled,
							key: a,
							tooltip: d,
							onClick: () => {
								const e = Object(u.c)(o, n);
								s(e), r(a, ((e, t) => e.getCurrentInlineStyle().contains(t))(e, o))
							}
						})
					} {
						const {
							block: l
						} = e;
						return i.a.createElement(_, {
							iconName: c,
							active: t.blocks[l].isActive,
							enabled: t.blocks[l].isEnabled,
							key: a,
							tooltip: d,
							onClick: () => {
								const e = Object(u.i)(l, n);
								s(e), r(a, ((e, t) => o.RichUtils.getCurrentBlockType(e) === t)(e, l))
							}
						})
					}
				},
				T = (e, t, n, o, s) => e.map(e => S(e, t, n, o, s)),
				w = [x.b, x.e],
				I = [x.j, x.g, x.k, x.i],
				P = [x.d, x.l, x.h, x.a, x.c],
				M = e => i.a.createElement(_, {
					iconName: c.a.link_post,
					active: e.controlsState.link.isActive,
					enabled: e.controlsState.link.isEnabled,
					tooltip: s.fbt._("Link", null, {
						hk: "e4PGW"
					}),
					onClick: () => {
						e.onLinkButtonClick(), e.trackOnClick("link", !0)
					}
				}),
				R = e => i.a.createElement(_, {
					iconName: c.a.table,
					active: e.controlsState.blocks[m.l].isActive,
					enabled: e.controlsState.blocks[m.l].isEnabled,
					tooltip: s.fbt._("Table", null, {
						hk: "3cHfLT"
					}),
					onClick: () => {
						e.onChange(g(e.editorState, 3, 2)), e.trackOnClick("table", !0)
					}
				}),
				N = e => {
					const {
						className: t,
						allowImageUploads: n = !1,
						allowVideoUploads: o = !1,
						destSubreddit: s,
						editorState: r,
						isOverlay: c,
						onChange: u,
						onFilesSelect: m,
						readOnly: h,
						trackOnClick: b,
						onLinkButtonClick: f,
						onMarkdownButtonClick: g,
						editorKey: v
					} = e, x = Object(p.a)(r);
					return h && Object(p.b)(x), i.a.createElement("div", {
						className: Object(a.a)(O.a.ToolbarWrapper, t, {
							[O.a.isSticky]: !c
						})
					}, i.a.createElement(l.a, {
						oveflowMenuDropdownId: v,
						className: O.a.CollapseIntoOverflow,
						editorType: d.a.Post
					}, T(w, x, r, u, b), i.a.createElement(M, {
						controlsState: x,
						trackOnClick: b,
						onLinkButtonClick: f
					}), T(I, x, r, u, b), i.a.createElement(j, null), T(P, x, r, u, b), i.a.createElement(j, null), i.a.createElement(R, {
						controlsState: x,
						editorState: r,
						trackOnClick: b,
						onChange: u
					}), n && i.a.createElement(E.a, {
						destSubreddit: s,
						controlsState: x,
						onClick: () => b("image_upload"),
						onFilesInput: m,
						type: "image"
					}), o && i.a.createElement(E.a, {
						destSubreddit: s,
						controlsState: x,
						onClick: () => b("video_upload"),
						onFilesInput: m,
						type: "video"
					})), i.a.createElement("div", {
						className: O.a.MarkdownButtonWrapper
					}, i.a.createElement(C.a, {
						className: O.a.MarkdownButton,
						onClick: g
					})))
				}
		},
		"./src/reddit/components/RichTextEditor/Tooltip/getSelectionClientRect.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js");

			function s() {
				const e = window.getSelection();
				if (!e.rangeCount) return null;
				const t = Object(o.getVisibleSelectionRect)(window);
				return t || (!t && e.focusNode && e.focusNode === e.anchorNode ? e.focusNode.getBoundingClientRect() : null)
			}
		},
		"./src/reddit/components/RichTextEditor/Tooltip/index.m.less": function(e, t, n) {
			e.exports = {
				tooltipBox: "tVQ1dB4n0mAWdcQNxFq-K",
				dropdown: "_1akkpO3lymdoWGIc5tjIpm",
				triangle: "_2O2U-Vhc1mg9O7DOwp50Aa",
				triangleBack: "_3IfYYXUMUzn2OvoiMUNcaQ",
				triangleFront: "_3CtwSTtkmKXvzDo3TmCp9C",
				triangleBelow: "_1churYJpAwcb-tf0k1c46F"
			}
		},
		"./src/reddit/components/RichTextEditor/Tooltip/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return m
			})), n.d(t, "b", (function() {
				return b
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/CSSVariableProvider/index.tsx"),
				a = n("./src/reddit/helpers/dom/index.ts"),
				c = n("./src/reddit/components/RichTextEditor/Tooltip/index.m.less"),
				l = n.n(c);
			const d = 8,
				u = 16,
				p = 15 + u / 2;
			var m;
			! function(e) {
				e[e.None = 0] = "None", e[e.Above = 1] = "Above", e[e.Below = 2] = "Below"
			}(m || (m = {}));
			const h = e => {
				let {
					isBelow: t = !1,
					style: n
				} = e;
				return s.a.createElement("div", {
					className: Object(r.a)(l.a.triangle, {
						[l.a.triangleBelow]: t
					}),
					style: n
				}, s.a.createElement("div", {
					className: l.a.triangleBack
				}), s.a.createElement("div", {
					className: l.a.triangleFront
				}))
			};
			class b extends o.Component {
				constructor(e) {
					super(e), this.containerRef = null, this.updateContainerRef = e => this.containerRef = e, this.setTargetPosition = e => {
						e ? this.updatePositioning(e) : this.setState({
							positioning: null
						})
					}, this.state = {
						positioning: null
					}
				}
				updatePositioning(e) {
					if (!this.containerRef) return;
					const t = this.containerRef.getBoundingClientRect(),
						n = Math.round(t.width),
						o = Math.round(t.height),
						s = this.state.positioning;
					if (!e) {
						if (!s) return;
						if (s.tooltipWidth === n && s.tooltipHeight === o) return
					}
					const r = e ? e.bottom : s.target.bottom,
						i = e ? e.top : s.target.top,
						c = e ? e.left : s.target.left,
						l = Object(a.e)(this.containerRef);
					let d, u, p;
					if (l) {
						const e = l.getBoundingClientRect();
						d = e.bottom - (r || 0), u = c - e.left + l.scrollLeft, p = i - e.top + l.scrollTop
					} else {
						const e = document.documentElement,
							t = window.pageYOffset || e.scrollTop;
						u = c + (window.pageXOffset || e.scrollLeft), p = i + t
					}
					const m = {
						target: {
							top: i,
							left: c
						},
						tooltipWidth: n,
						tooltipHeight: o,
						tooltip: {
							top: p,
							left: u,
							bottom: d
						}
					};
					this.adjustPositionForTriangle(m, l), this.setState({
						positioning: m
					})
				}
				adjustPositionForTriangle(e, t) {
					const {
						trianglePlacement: n
					} = this.props;
					if (!n) return;
					const o = t ? t.offsetWidth : document.documentElement.offsetWidth,
						s = o ? Math.max(e.tooltip.left + e.tooltipWidth - o, 0) : 0;
					e.tooltip.left -= s + p;
					const r = s + p - u / 2;
					let i;
					n === m.Above ? (e.tooltip.top += d, i = -d) : (e.tooltip.top -= e.tooltipHeight + d, i = e.tooltipHeight), e.triangle = {
						top: i,
						left: r
					}
				}
				componentDidUpdate(e, t) {
					e.targetPosition !== this.props.targetPosition ? this.setTargetPosition(this.props.targetPosition || null) : this.updatePositioning()
				}
				componentDidMount() {
					this.setTargetPosition(this.props.targetPosition || null), this.props.onSetPositionUpdater && this.props.onSetPositionUpdater(this.setTargetPosition)
				}
				componentWillUnmount() {
					this.props.onSetPositionUpdater && this.props.onSetPositionUpdater(null)
				}
				render() {
					const {
						aboveParent: e,
						dropdown: t,
						trianglePlacement: n
					} = this.props, {
						positioning: o
					} = this.state, a = o && void 0 !== o.triangle && s.a.createElement(h, {
						isBelow: n === m.Below,
						style: {
							top: o.triangle.top + "px",
							left: o.triangle.left + "px"
						}
					});
					let c = s.a.createElement("div", {
						className: Object(r.a)(l.a.tooltipBox, this.props.className, {
							[l.a.dropdown]: t
						}),
						style: o ? {
							left: o.tooltip.left,
							...e ? {
								bottom: o.tooltip.bottom
							} : {
								top: o.tooltip.top
							}
						} : {},
						ref: this.updateContainerRef
					}, o && this.props.children && s.a.createElement(s.a.Fragment, null, a, this.props.children));
					return this.props.usePortal && (c = Object(i.d)(c, this.props.portalContainer || document.body)), c
				}
			}
		},
		"./src/reddit/components/RichTextEditor/UnorderedList/index.m.less": function(e, t, n) {
			e.exports = {
				UnorderedListWrapper: "vXDC2CysyRNVq3lFirKDs",
				unorderedListWrapper: "vXDC2CysyRNVq3lFirKDs"
			}
		},
		"./src/reddit/components/RichTextEditor/constants/draftEditorCommands.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return o
			})), n.d(t, "e", (function() {
				return s
			})), n.d(t, "g", (function() {
				return r
			})), n.d(t, "h", (function() {
				return i
			})), n.d(t, "b", (function() {
				return a
			})), n.d(t, "d", (function() {
				return c
			})), n.d(t, "f", (function() {
				return l
			})), n.d(t, "a", (function() {
				return d
			}));
			const o = "bold",
				s = "italic",
				r = "underline",
				i = "undo",
				a = "backspace",
				c = "delete",
				l = "split-block",
				d = "adjust-depth"
		},
		"./src/reddit/components/RichTextEditor/constants/editorChangeTypes.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "e", (function() {
				return s
			})), n.d(t, "d", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			})), n.d(t, "c", (function() {
				return a
			})), n.d(t, "f", (function() {
				return c
			}));
			const o = "backspace-character",
				s = "insert-fragment",
				r = "insert-characters",
				i = "change-block-data",
				a = "change-block-type",
				c = "remove-range"
		},
		"./src/reddit/components/RichTextEditor/editorStateTransforms.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return u
			})), n.d(t, "i", (function() {
				return p
			})), n.d(t, "b", (function() {
				return b
			})), n.d(t, "f", (function() {
				return f
			})), n.d(t, "h", (function() {
				return g
			})), n.d(t, "g", (function() {
				return v
			})), n.d(t, "d", (function() {
				return x
			})), n.d(t, "e", (function() {
				return C
			})), n.d(t, "a", (function() {
				return E
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./node_modules/immutable/dist/immutable.js"),
				r = n("./src/reddit/components/RichTextEditor/constants/draftEditorCommands.ts"),
				i = n("./src/reddit/components/RichTextEditor/constants/editorChangeTypes.ts"),
				a = n("./src/reddit/components/RichTextEditor/emotes/helpers.ts"),
				c = n("./src/reddit/components/RichTextEditor/helpers/modifiers.ts"),
				l = n("./src/reddit/components/RichTextEditor/helpers/styles.ts"),
				d = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const u = (e, t) => {
					return t.getSelection().isCollapsed() ? Object(l.a)(e, t) : Object(l.b)(e, t)
				},
				p = (e, t) => {
					const n = t.getCurrentContent(),
						s = t.getSelection(),
						r = s.getEndKey(),
						c = o.RichUtils.getCurrentBlockType(t) === e ? d.n : e;
					let u = t,
						p = o.Modifier.setBlockType(n, s, c);
					const m = n.getBlockForKey(r).getLength();
					if (Object(d.r)(c) || Object(d.q)(c)) {
						const e = o.SelectionState.createEmpty(s.getStartKey()).merge({
							focusKey: s.getEndKey(),
							focusOffset: m
						});
						u = Object(l.c)(u), p = ((e, t) => {
							const n = Object.keys(d.k).reduce((e, n) => o.Modifier.removeInlineStyle(e, t, d.k[n]), e);
							return Object(a.h)(n, t)
						})(p, e)
					}
					if (Object(d.q)(c) || Object(d.p)(c)) {
						const e = p.getBlockAfter(r);
						if (!e || e.getType() !== c && e.getType() !== d.n) {
							const e = o.SelectionState.createEmpty(r).merge({
								anchorOffset: m,
								focusOffset: m
							});
							p = o.Modifier.splitBlock(p, e), p = o.Modifier.setBlockType(p, p.getSelectionAfter(), d.n)
						}
					}
					return p = p.merge({
						selectionAfter: s
					}), o.EditorState.push(u, p, i.c)
				},
				m = (e, t) => {
					const n = o.Modifier.setBlockType(e, t, d.n);
					return o.Modifier.replaceText(n, t, "", Object(s.OrderedSet)([]))
				},
				h = (e, t) => o.EditorState.forceSelection(e, o.SelectionState.createEmpty(t)),
				b = e => {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						r = c.d(t, n),
						a = r.getBlockAfter(n.getEndKey()),
						l = o.SelectionState.createEmpty(a.getKey()),
						u = o.Modifier.replaceText(o.Modifier.setBlockType(r, l, d.n), l, "", Object(s.OrderedSet)([])),
						p = o.EditorState.push(e, u, i.d);
					return h(p, a.getKey())
				},
				f = e => {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						s = t.getBlockForKey(n.getEndKey()),
						i = s.set("depth", Math.max(s.getDepth() - 1, 0)),
						a = t.merge({
							blockMap: t.getBlockMap().merge({
								[s.getKey()]: i
							})
						});
					return o.EditorState.push(e, a, r.a)
				},
				g = e => {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						s = t.getBlockForKey(n.getEndKey()).getKey(),
						r = o.EditorState.push(e, m(t, n), i.c);
					return h(r, s)
				},
				v = e => {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						s = t.getBlockForKey(n.getEndKey()),
						r = s.getKey(),
						a = t.getBlockBefore(r).getKey(),
						c = o.SelectionState.createEmpty(r).merge({
							focusOffset: s.getText().length
						}),
						l = o.EditorState.push(e, m(((e, t) => {
							const n = e.getBlockMap().remove(t);
							return e.merge({
								blockMap: n
							})
						})(t, a), c), i.c);
					return h(l, r)
				},
				x = e => {
					const t = c.d(e.getCurrentContent(), e.getSelection());
					return o.EditorState.push(e, t, r.f)
				},
				C = e => {
					const t = c.a(e.getCurrentContent(), e.getSelection(), "\n");
					return o.EditorState.push(e, t, i.d)
				},
				E = e => {
					const t = e.getSelection(),
						n = c.a(e.getCurrentContent(), t, " ");
					return o.EditorState.push(e, n, i.d)
				}
		},
		"./src/reddit/components/RichTextEditor/emotes/Powerups/tooltipAsync.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(o.a)({
				resolved: {},
				chunkName: () => "PowerupsEmotesTooltip",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!n.m[t]
				},
				importAsync: () => n.e("PowerupsEmotesTooltip").then(n.bind(null, "./src/reddit/components/RichTextEditor/emotes/Powerups/Tooltip.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return n(t)
				},
				resolve() {
					return "./src/reddit/components/RichTextEditor/emotes/Powerups/Tooltip.tsx"
				}
			})
		},
		"./src/reddit/components/RichTextEditor/emotes/decorator.m.less": function(e, t, n) {
			e.exports = {
				emote: "Q7hqnjoPSXm7QyvW8qf57",
				sticker: "_1WD0TSe2_gY29FXmFjPCza"
			}
		},
		"./src/reddit/components/RichTextEditor/emotes/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return p
			})), n.d(t, "c", (function() {
				return m
			})), n.d(t, "g", (function() {
				return h
			})), n.d(t, "b", (function() {
				return b
			})), n.d(t, "h", (function() {
				return f
			})), n.d(t, "f", (function() {
				return g
			})), n.d(t, "e", (function() {
				return v
			})), n.d(t, "i", (function() {
				return x
			})), n.d(t, "d", (function() {
				return C
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./node_modules/immutable/dist/immutable.js"),
				r = n("./src/lib/memoizeByReference/index.ts"),
				i = n("./src/reddit/components/RichTextEditor/constants/editorChangeTypes.ts"),
				a = n("./src/reddit/components/RichTextEditor/entity/entityTypes.ts"),
				c = n("./src/reddit/components/RichTextEditor/entity/getAllEntitiesInSelection.ts"),
				l = n("./src/reddit/components/RichTextEditor/helpers/common.ts"),
				d = n("./src/reddit/components/RichTextEditor/helpers/modifiers.ts"),
				u = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const p = "⬛";

			function m(e, t) {
				return e.createEntity(a.a.EMOTE, "IMMUTABLE", t)
			}

			function h(e, t) {
				let n = t.getCurrentContent();
				const s = (n = m(n, e)).getLastCreatedEntityKey();
				n = Object(d.b)(n, t.getSelection(), p, void 0, s);
				const r = o.EditorState.push(t, n, i.d);
				return o.EditorState.forceSelection(r, r.getSelection())
			}

			function b(e, t) {
				if (t.getStartKey() !== t.getEndKey()) return !1;
				const n = e.getBlockForKey(t.getEndKey()).getType();
				return !(Object(u.q)(n) || Object(u.r)(n) || Object(u.t)(n))
			}

			function f(e, t) {
				const n = Object(c.a)(e, t, t => {
					const n = t.getEntity();
					return !!n && e.getEntity(n).getType() === a.a.EMOTE
				});
				let s;
				for (; s = n.pop();) {
					const t = o.SelectionState.createEmpty(s.blockKey).merge({
						anchorOffset: s.start,
						focusOffset: s.end
					});
					e = o.Modifier.removeRange(e, t, "backward")
				}
				return e
			}

			function g(e) {
				const t = e.getSelection();
				if (!t.isCollapsed()) return null;
				const n = e.getCurrentContent().getBlockForKey(t.getFocusKey()),
					o = n.getText(),
					s = n.getCharacterList();
				let r = t.getFocusOffset() - 1;
				const i = [];
				for (; r >= 0;) {
					const e = o[r],
						t = s.get(r),
						n = t && t.getEntity();
					if (!e.trim().length || n) return null;
					if (":" === e && i.length > 0) break;
					i.unshift(e), r--
				}
				return r >= 0 && i.length ? i.join("").toLowerCase() : null
			}

			function v(e, t, n) {
				e.findEntityRanges(e => {
					const t = e.getEntity();
					return !!t && n.getEntity(t).getType() === a.a.EMOTE
				}, t)
			}
			const x = Object(r.a)(e => {
				if (e.getBlockMap().size > 1) return !1;
				const t = e.getFirstBlock();
				let n = 0;
				return v(t, () => n++, e), n <= 3 && n === t.getLength()
			});

			function C(e, t) {
				if (x(e.getCurrentContent()) === x(t.getCurrentContent())) return e;
				const n = e.getCurrentContent(),
					r = n.getFirstBlock();
				return o.EditorState.set(e, {
					currentContent: o.Modifier.mergeBlockData(n, Object(l.b)(r), Object(s.Map)({
						_emote_modified: new Date
					}))
				})
			}
		},
		"./src/reddit/components/RichTextEditor/entity/applyEntityToContentBlock.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js");

			function s(e, t, n, s) {
				let r = e.getCharacterList();
				return r = r.withMutations(e => {
					for (let r = t; r < n; r++) e.set(r, o.CharacterMetadata.applyEntity(e.get(r), s))
				}), e.set("characterList", r)
			}
		},
		"./src/reddit/components/RichTextEditor/entity/cloneEntitiesInFragment.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./src/reddit/components/RichTextEditor/entity/applyEntityToContentBlock.ts");

			function s(e, t, n, s, r) {
				const i = e.createEntity(n.getType(), n.getMutability(), n.getData()),
					a = e.getLastCreatedEntityKey();
				return [i, Object(o.a)(t, s, r, a)]
			}

			function r(e, t) {
				let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
				const o = new Map;
				let r = t,
					i = e;
				return t.forEach((e, t) => {
					e && t && e.findEntityRanges(e => !!e.getEntity(), (n, s) => {
						const r = e.getEntityAt(n),
							i = o.get(r) || [];
						i.push({
							start: n,
							end: s,
							blockKey: t
						}), o.set(r, i)
					})
				}), o.forEach((t, o) => {
					const a = e.getEntity(o);
					(n ? t.slice(1) : t).forEach(e => {
						let {
							start: t,
							end: n,
							blockKey: o
						} = e;
						const c = r.get(o),
							[l, d] = s(i, c, a, t, n);
						i = l, r = r.set(o, d)
					})
				}), [i, r]
			}
		},
		"./src/reddit/components/RichTextEditor/entity/entityTypes.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return r
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			const o = {
					COMMENT_LINK: "COMMENT_LINK",
					EMOTE: "EMOTE",
					LINK: "LINK",
					POST_LINK: "POST_LINK",
					SUBREDDIT_LINK: "SUBREDDIT_LINK",
					USER_LINK: "USER_LINK",
					USER_MENTION: "USER_MENTION"
				},
				s = new Set([o.COMMENT_LINK, o.LINK, o.POST_LINK, o.SUBREDDIT_LINK, o.USER_LINK, o.USER_MENTION]),
				r = (e, t) => {
					const n = e && t.getEntity(e);
					return !!n && (e => s.has(e))(n.getType())
				}
		},
		"./src/reddit/components/RichTextEditor/entity/getAllEntitiesInSelection.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./src/reddit/components/RichTextEditor/helpers/forEachBlock.ts");

			function s(e, t, n) {
				const s = [];
				return Object(o.a)(e, t, (e, o) => {
					const r = t.getStartKey() === o ? t.getStartOffset() : 0,
						i = t.getEndKey() === o ? t.getEndOffset() : e.getLength();
					e.findEntityRanges(n, (t, n) => {
						r <= n && i >= t && s.push({
							blockKey: o,
							entityKey: e.getEntityAt(t),
							start: t,
							end: n
						})
					})
				}), s
			}
		},
		"./src/reddit/components/RichTextEditor/entity/getSelectionEntityInfo.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js");

			function s(e, t) {
				const n = t.getFocusKey();
				if (n !== t.getAnchorKey()) return;
				const s = e.getBlockForKey(n),
					r = t.getStartOffset(),
					i = t.getEndOffset(),
					a = s.getEntityAt(i) || (i > 0 ? s.getEntityAt(i - 1) : null);
				if (!a) return;
				let c, l;
				if (s.findEntityRanges(e => e.getEntity() === a, (e, t) => {
						e <= r && i <= t && (c = e, l = t)
					}), "number" != typeof c || "number" != typeof l) return;
				const d = s.getText().slice(c, l);
				return {
					entitySelection: o.SelectionState.createEmpty(n).merge({
						anchorOffset: c,
						focusOffset: l
					}),
					entityKey: a,
					entityText: d
				}
			}
		},
		"./src/reddit/components/RichTextEditor/entity/link/decorator.m.less": function(e, t, n) {
			e.exports = {
				RegularLink: "_1FRfMxEAy__7c8vezYv9qP",
				regularLink: "_1FRfMxEAy__7c8vezYv9qP"
			}
		},
		"./src/reddit/components/RichTextEditor/entity/link/helpers.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return h
			})), n.d(t, "d", (function() {
				return f
			})), n.d(t, "f", (function() {
				return g
			})), n.d(t, "c", (function() {
				return v
			})), n.d(t, "b", (function() {
				return x
			})), n.d(t, "h", (function() {
				return C
			})), n.d(t, "g", (function() {
				return E
			})), n.d(t, "e", (function() {
				return y
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./src/lib/linkMatchers/index.ts"),
				r = n("./src/lib/linkMatchers/customLinks.ts"),
				i = n("./src/lib/memoizeByReference/index.ts"),
				a = n("./src/reddit/components/RichTextEditor/entity/entityTypes.ts"),
				c = n("./src/reddit/components/RichTextEditor/entity/getAllEntitiesInSelection.ts"),
				l = n("./src/reddit/components/RichTextEditor/entity/getSelectionEntityInfo.ts"),
				d = n("./src/reddit/components/RichTextEditor/spoiler/helpers.ts"),
				u = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const p = [a.a.SUBREDDIT_LINK, a.a.USER_LINK, a.a.USER_MENTION],
				m = [...p, a.a.LINK];

			function h(e, t, n) {
				e.findEntityRanges(e => {
					const t = e.getEntity();
					return !!t && m.includes(n.getEntity(t).getType())
				}, t)
			}
			const b = e => {
					const t = s.a.match(e);
					if (t && t.length && t[0]) {
						const {
							schema: e,
							url: n
						} = t[0];
						return {
							linkPrefix: e,
							url: n
						}
					}
					return {
						linkPrefix: "",
						url: ""
					}
				},
				f = Object(i.a)((function(e) {
					const t = e.getCurrentContent(),
						n = e.getSelection();
					if (!n.isCollapsed()) return;
					if (Object(u.q)(t.getBlockForKey(n.getStartKey()).getType())) return;
					const r = n.getFocusKey(),
						i = t.getBlockForKey(r),
						a = n.getFocusOffset(),
						c = i.getText(),
						l = c.lastIndexOf(" ", a - 1) + 1,
						p = c.slice(l, a);
					if (!p) return;
					const m = s.c.match(p);
					if (!m) return;
					const h = m[m.length - 1],
						b = l + h.index,
						f = l + h.lastIndex;
					let g = -1;
					if (i.findEntityRanges(e => !!e.getEntity(), (e, t) => {
							e < a && (g = t)
						}), g >= b) return;
					return i.getCharacterList().slice(b, f).find(d.b) ? void 0 : {
						selection: o.SelectionState.createEmpty(r).merge({
							anchorOffset: b,
							focusOffset: f
						}),
						url: h.url
					}
				}));

			function g(e, t, n) {
				const s = e.getSelection();
				let r = e.getCurrentContent();
				const i = (r = r.createEntity(a.a.LINK, "MUTABLE", {
					url: n
				})).getLastCreatedEntityKey();
				return r = (r = o.Modifier.applyEntity(r, t, i)).merge({
					selectionAfter: s
				}), o.EditorState.push(e, r, "apply-entity")
			}
			const v = Object(i.a)((function(e) {
				const t = e.getCurrentContent(),
					n = Object(l.a)(t, e.getSelection());
				if (!n) return;
				const o = t.getEntity(n.entityKey);
				if (o.getType() !== a.a.LINK) return;
				const {
					url: s
				} = o.getData();
				return {
					url: s,
					...n
				}
			}));
			const x = Object(i.a)((function(e) {
				const t = e.getCurrentContent(),
					n = e.getSelection(),
					o = Object(l.a)(t, n);
				if (!o) return;
				const s = n.getFocusOffset(),
					r = t.getEntity(o.entityKey),
					{
						linkPrefix: i
					} = b(o.entityText);
				return !p.includes(r.getType()) || !o.entityText.startsWith(i) || s - o.entitySelection.getStartOffset() < i.length ? void 0 : {
					internalName: o.entityText.slice(i.length),
					...o
				}
			}));

			function C(e, t, n, s) {
				let r = "apply-entity",
					i = e.getCurrentContent(),
					c = e;
				const d = Object(l.a)(i, t);
				if (n)
					if (d) {
						const e = i.getEntity(d.entityKey),
							{
								url: t
							} = e.getData();
						t !== n && (i = i.mergeEntityData(d.entityKey, {
							url: n
						})), void 0 !== s && d.entityText !== s && (i = o.Modifier.replaceText(i, d.entitySelection, s, void 0, d.entityKey), r = "insert-characters")
					} else {
						if (void 0 === s) throw new Error("New link display text must be provided!");
						const e = (i = i.createEntity(a.a.LINK, "MUTABLE", {
							url: n
						})).getLastCreatedEntityKey();
						i = o.Modifier.replaceText(i, t, s, void 0, e), r = "insert-characters"
					}
				else i = (i = o.Modifier.applyEntity(i, t, "")).merge({
					selectionAfter: e.getSelection()
				});
				return i === e.getCurrentContent() ? e : c = o.EditorState.push(c, i, r)
			}

			function E(e, t) {
				const n = x(e);
				if (!n) return e;
				const {
					linkPrefix: s,
					url: i
				} = b(n.entityText), a = `${s===r.d.mention?r.d.profile:s}${t}`, c = n.entitySelection.getStartOffset() + a.length;
				let l = C(e, n.entitySelection, i, a);
				return l = o.EditorState.forceSelection(l, n.entitySelection.merge({
					anchorOffset: c,
					focusOffset: c
				}))
			}

			function y(e, t) {
				if (t.getStartKey() !== t.getEndKey()) return !1;
				const n = e.getBlockForKey(t.getEndKey()).getType();
				return !Object(u.q)(n) && !Object(u.t)(n) && !Object(c.a)(e, t, t => {
					const n = t.getEntity();
					return !!n && e.getEntity(n).getType() !== a.a.LINK
				}).length
			}
		},
		"./src/reddit/components/RichTextEditor/helpers/common.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "h", (function() {
				return a
			})), n.d(t, "e", (function() {
				return c
			})), n.d(t, "c", (function() {
				return l
			})), n.d(t, "f", (function() {
				return d
			})), n.d(t, "b", (function() {
				return u
			})), n.d(t, "i", (function() {
				return p
			})), n.d(t, "d", (function() {
				return m
			})), n.d(t, "g", (function() {
				return h
			}));
			var o, s = n("./node_modules/draft-js/lib/Draft.js"),
				r = n("./node_modules/immutable/dist/immutable.js"),
				i = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			! function(e) {
				e.before = "before", e.after = "after"
			}(o || (o = {}));
			const a = (e, t) => new s.ContentBlock({
					key: e || Object(s.genKey)(),
					...t ? {
						text: t,
						characterList: Object(r.List)(Object(r.Repeat)(s.CharacterMetadata.create(), t.length))
					} : {}
				}),
				c = e => e.props.children,
				l = e => c(e).props.block,
				d = function(e, t, n) {
					let r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : o.after,
						c = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
						l = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
					const d = [];
					let p = -1;
					if (e.getBlockMap().forEach((e, s) => {
							r === o.after && d.push(e), s === t && (d.push(...n), p = d.length - 1), r === o.before && d.push(e)
						}), p >= 0) {
						if (c) {
							const e = d[p + 1];
							e && e.getType() === i.n || d.splice(p + 1, 0, a())
						}
						if (l) {
							const e = p - n.length,
								t = d[e];
							t && t.getType() === i.n || d.splice(e + 1, 0, a())
						}
					}
					return e.merge({
						blockMap: s.BlockMapBuilder.createFromArray(d),
						selectionAfter: u(n[n.length - 1], !1, !0)
					})
				},
				u = function(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
						n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
						o = s.SelectionState.createEmpty(e.getKey()).merge({
							hasFocus: n
						});
					return t && (o = o.merge({
						anchorOffset: e.getLength(),
						focusOffset: e.getLength()
					})), o
				},
				p = (e, t) => {
					let n = e.getBlockBefore(t),
						o = e.getBlockMap();
					return o.get(t) ? (o = o.size > 1 ? o.remove(t) : o.set(t, a(t)), n = n || o.first(), e.merge({
						blockMap: o,
						selectionAfter: u(n, !0)
					})) : e
				},
				m = (e, t) => t.querySelector(`[data-block][data-offset-key="${e}-0-0"]`),
				h = e => e.getType() === i.n && !e.getText()
		},
		"./src/reddit/components/RichTextEditor/helpers/controlsState.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return f
			})), n.d(t, "b", (function() {
				return g
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/lodash/forEach.js"),
				s = n.n(o),
				r = n("./src/lib/forEachGroup/index.ts"),
				i = n("./src/lib/memoizeByReference/index.ts"),
				a = n("./src/reddit/components/RichTextEditor/emotes/helpers.ts"),
				c = n("./src/reddit/components/RichTextEditor/entity/link/helpers.tsx"),
				l = n("./src/reddit/components/RichTextEditor/media/helpers.ts"),
				d = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts"),
				u = n("./src/reddit/components/RichTextEditor/table/helpers.ts"),
				p = n("./src/reddit/components/RichTextEditor/helpers/forEachBlock.ts"),
				m = n("./src/reddit/components/RichTextEditor/helpers/styles.ts");
			const h = e => {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						o = (() => {
							const e = {};
							return s()(d.k, t => e[t] = {
								isActive: !1,
								isEnabled: !1
							}), e
						})(),
						i = new Set(Object.keys(o));
					if (i.delete(d.k.HIGHLIGHT), n.isCollapsed()) {
						const s = t.getBlockForKey(n.getEndKey()),
							r = s.getType();
						Object(d.q)(r) || Object(d.r)(r) || Object(d.t)(r) || i.forEach(e => o[e].isEnabled = !0), e.getCurrentInlineStyle().forEach(e => {
							e && o[e] && (o[e].isActive = !0)
						}), Object(u.i)(s) && (o[d.k.BOLD] = {
							isEnabled: !1,
							isActive: !1
						})
					} else {
						Object(m.e)(t, n).forEach(e => {
							i.delete(e), o[e] && (o[e].isActive = !0, o[e].isEnabled = !0)
						}), Object(p.a)(t, n, (e, s) => {
							if (!i.size) return !1;
							const a = n.getStartKey() === s ? n.getStartOffset() : 0,
								c = n.getEndKey() === s ? n.getEndOffset() : e.getLength(),
								l = e.getType(),
								u = e.getCharacterList();
							Object(d.q)(l) || Object(d.r)(l) || Object(d.t)(l) || Object(r.a)(u, {
								start: a,
								end: c
							}, (n, s, r, a) => {
								const c = n.getStyle(),
									l = n.getEntity(),
									d = l ? t.getEntity(l) : null;
								if (i.forEach(t => {
										const n = !o[t].isActive,
											s = Object(m.f)(c, e, d, t, n);
										s && s !== c && (o[t].isEnabled = !0, i.delete(t))
									}), !i.size) return !1
							})
						})
					}
					return o
				},
				b = e => {
					const t = {};
					return s()(d.b, n => t[n] = {
						isActive: !1,
						isEnabled: e
					}), t
				},
				f = Object(i.a)(e => {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						o = (e => {
							const t = e.getCurrentContent(),
								n = e.getSelection();
							let o = b(!0),
								r = null;
							if (n.isCollapsed()) r = t.getBlockForKey(n.getEndKey()).getType();
							else {
								let e = null;
								Object(p.a)(t, n, (t, n) => {
									const s = t.getType();
									return Object(d.t)(s) ? (o = b(!1), !1) : (null === e && (e = s), e !== s ? (e = null, !1) : void 0)
								}), r = e
							}
							return null !== r && ((Object(d.v)(r) || Object(d.t)(r)) && s()(o, e => {
								e.isEnabled = !1
							}), o[r].isActive = !0), o
						})(e);
					return {
						giphy: {
							isActive: !1,
							isEnabled: o[d.a].isEnabled && !Object(l.j)(t)
						},
						emote: {
							isActive: !1,
							isEnabled: Object(a.b)(t, n)
						},
						link: {
							isActive: !1,
							isEnabled: Object(c.e)(t, n)
						},
						blocks: o,
						styles: h(e)
					}
				}),
				g = e => {
					s()(e.blocks, e => {
						e.isEnabled = !1
					}), s()(e.styles, e => {
						e.isEnabled = !1
					}), e.link.isEnabled = !1
				}
		},
		"./src/reddit/components/RichTextEditor/helpers/forEachBlock.ts": function(e, t, n) {
			"use strict";

			function o(e, t, n) {
				const o = t.getStartKey(),
					s = t.getEndKey();
				if (o === s) return void n(e.getBlockForKey(o), o);
				let r = !1;
				e.getBlockMap().forEach((e, t) => {
					if (t === o && (r = !0), !r || !e || !t) return;
					const i = n(e, t);
					return t !== s && i
				})
			}
			n.d(t, "a", (function() {
				return o
			}))
		},
		"./src/reddit/components/RichTextEditor/helpers/modifiers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return i
			})), n.d(t, "b", (function() {
				return a
			})), n.d(t, "a", (function() {
				return c
			})), n.d(t, "d", (function() {
				return l
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./src/reddit/components/RichTextEditor/entity/cloneEntitiesInFragment.ts");

			function r(e, t) {
				const n = t.getStartKey();
				if (n !== t.getEndKey()) return;
				const o = e.getBlockForKey(n),
					r = t.getStartOffset(),
					i = t.getEndOffset(),
					a = r > 0 ? o.getEntityAt(r - 1) : null,
					c = o.getEntityAt(i);
				if (!a || !c || a !== c) return;
				const l = e.getEntity(c),
					d = o.getCharacterList().toSeq().skip(i).takeWhile(e => !!e && e.getEntity() === c).count(),
					[u, p] = Object(s.a)(e, o, l, i, i + d);
				return u.merge({
					blockMap: u.getBlockMap().set(o.getKey(), p)
				})
			}

			function i(e, t, n) {
				const s = r(e, t) || e;
				return o.Modifier.replaceWithFragment(s, t, n)
			}

			function a(e, t, n, s, i) {
				let a = e;
				return -1 !== n.indexOf("\n") && (a = r(e, t) || a), o.Modifier.replaceText(a, t, n, s, i)
			}

			function c(e, t, n, s, i) {
				let a = e;
				return -1 !== n.indexOf("\n") && (a = r(e, t) || a), o.Modifier.insertText(a, t, n, s, i)
			}

			function l(e, t) {
				const n = r(e, t) || e;
				return o.Modifier.splitBlock(n, t)
			}
		},
		"./src/reddit/components/RichTextEditor/helpers/sliceContiguousBlocks.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/lodash/forEach.js"),
				s = n.n(o);
			t.a = (e, t) => {
				const n = e.getBlocksAsArray(),
					o = t.getKey(),
					r = t.getType();
				let i = null,
					a = null,
					c = !1;
				if (s()(n, (e, t) => {
						if (c || e.getKey() !== o || (c = !0), e.getType() === r) null === i && (i = t), a = t;
						else {
							if (c) return !1;
							i = null, a = null
						}
					}), c) return a = a || 0, {
					start: i = i || 0,
					blocks: n.slice(i, a + 1)
				}
			}
		},
		"./src/reddit/components/RichTextEditor/helpers/styles.ts": function(e, t, n) {
			"use strict";
			n.d(t, "f", (function() {
				return u
			})), n.d(t, "e", (function() {
				return p
			})), n.d(t, "b", (function() {
				return m
			})), n.d(t, "a", (function() {
				return h
			})), n.d(t, "c", (function() {
				return b
			})), n.d(t, "d", (function() {
				return f
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./node_modules/immutable/dist/immutable.js"),
				r = n("./src/lib/forEachGroup/index.ts"),
				i = n("./src/reddit/components/RichTextEditor/entity/entityTypes.ts"),
				a = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts"),
				c = n("./src/reddit/components/RichTextEditor/table/helpers.ts"),
				l = n("./src/reddit/components/RichTextEditor/helpers/forEachBlock.ts");
			const d = Object(s.OrderedSet)([]),
				u = function(e, t, n, o) {
					let r = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4];
					const l = t.getType();
					if (Object(a.q)(l) || Object(a.r)(l) || Object(a.t)(l)) return;
					if (o === a.k.BOLD && Object(c.i)(t)) return;
					const u = n ? n.getType() : null,
						p = u === i.a.SUBREDDIT_LINK || u === i.a.USER_LINK;
					return p && o !== a.k.SPOILER && o !== a.k.MONOSPACE || u === i.a.EMOTE ? void 0 : o === a.k.MONOSPACE || o === a.k.SPOILER ? r ? Object(s.OrderedSet)([o]) : d : (e.has(a.k.MONOSPACE) || e.has(a.k.SPOILER)) && r ? Object(s.OrderedSet)([o]) : !r || o !== a.k.SUPERSCRIPT && o !== a.k.SUBSCRIPT ? r ? e.add(o) : e.has(o) ? e.delete(o) : void 0 : e.delete(a.k.SUBSCRIPT).delete(a.k.SUPERSCRIPT).add(o)
				},
				p = (e, t) => {
					let n = null,
						o = !0;
					return Object(l.a)(e, t, (s, l) => {
						const d = s.getType(),
							u = Object(c.i)(s);
						if (u || (o = !1), Object(a.q)(d) || Object(a.r)(d) || Object(a.t)(d)) return !1;
						const p = t.getStartKey() === l ? t.getStartOffset() : 0,
							m = t.getEndKey() === l ? t.getEndOffset() : s.getLength(),
							h = s.getCharacterList();
						Object(r.a)(h, {
							start: p,
							end: m
						}, t => {
							const o = t.getEntity();
							if (o && e.getEntity(o).getType() === i.a.SUBREDDIT_LINK) return;
							let s = t.getStyle();
							return u && (s = s.add(a.k.BOLD)), null === n ? n = s.asMutable() : n.intersect(s), !(n && !n.size) && void 0
						})
					}), null === n ? [] : (o && n.delete(a.k.BOLD), n.toJS())
				},
				m = (e, t) => {
					const n = t.getCurrentContent(),
						s = t.getSelection();
					let i = n.getBlockMap();
					const c = -1 === p(n, s).indexOf(e);
					Object(l.a)(n, s, (t, l) => {
						if (!t || !l) return !1;
						const d = s.getStartKey() === l ? s.getStartOffset() : 0,
							p = s.getEndKey() === l ? s.getEndOffset() : t.getLength(),
							m = t.getCharacterList(),
							h = m.withMutations(s => {
								Object(r.a)(m, {
									start: d,
									end: p
								}, (r, i, l, d) => {
									const p = r.getStyle(),
										m = r.getEntity(),
										h = m ? n.getEntity(m) : null,
										b = u(p, t, h, e, c);
									if (b) {
										const e = ((e, t) => o.CharacterMetadata.create({
											style: t,
											entity: t.has(a.k.SPOILER) ? null : e.getEntity()
										}))(r, b);
										for (let t = l; t < d; t++) s.set(t, e)
									}
								})
							});
						if (h !== m) {
							const e = t.set("characterList", h);
							i = i.set(l, e)
						}
					});
					const d = n.merge({
						blockMap: i,
						selectionAfter: s
					});
					return o.EditorState.push(t, d, "change-inline-style")
				},
				h = (e, t) => {
					const n = t.getCurrentContent(),
						s = t.getSelection(),
						r = n.getBlockForKey(s.getStartKey()),
						i = r.getEntityAt(s.getStartOffset()),
						a = i ? n.getEntity(i) : null,
						c = t.getCurrentInlineStyle(),
						l = u(c, r, a, e, !c.has(e));
					let d = t;
					return l && (d = o.EditorState.setInlineStyleOverride(d, l)), d
				},
				b = e => o.EditorState.setInlineStyleOverride(e, d),
				f = (e, t) => {
					const n = e.getSelection(),
						o = t.getSelection();
					return n.getStartOffset() > 0 || n.getFocusKey() === o.getFocusKey() || e.getCurrentInlineStyle().isEmpty() ? e : b(e)
				}
		},
		"./src/reddit/components/RichTextEditor/index.m.less": function(e, t, n) {
			e.exports = {
				Container: "_3YZ-jFfccqhepgq1dDuLEv",
				container: "_3YZ-jFfccqhepgq1dDuLEv",
				FocusableContent: "_3wl1bRnSzxHkKJfvqakrNI",
				focusableContent: "_3wl1bRnSzxHkKJfvqakrNI",
				showSubmitButton: "_3Imp2y02BMA96sEJAe9M3M",
				mRedesign: "_2sl29I15jbNPrKiiB9kfVf",
				editorWrapper: "_2baJGEALPiEMZpWB2iWQs7",
				mExpanded: "_1UhKfcyzvaWRtDdXZmzg6D",
				userIcon: "_1wS6Q6S9RvAbzxaselfK2i",
				CurrentUserIcon: "_1RdaOAYbtM4Zwt3M_YE8kp",
				currentUserIcon: "_1RdaOAYbtM4Zwt3M_YE8kp",
				hasInitialHeight: "_35E-zXyMmfsLI7nv_sBvFL",
				hasInitialMinHeight: "_18GfdTZmF2EPjYSkBDE0WI",
				noBorder: "HXDWn-rmYOwqGcGtz9AKm",
				insetSubmitButton: "_3b2mbY1nb1R-z21ihISt7z",
				emptyContent: "_3cP1eCSI5AeGc6__VQ1axu",
				focusedContent: "_2O6bpyGivXLGxZ0LErKCzW"
			}
		},
		"./src/reddit/components/RichTextEditor/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = (n("./node_modules/draft-js/dist/Draft.css"), n("./node_modules/fbt/lib/FbtPublic.js")),
				r = n("./node_modules/lodash/debounce.js"),
				i = n.n(r),
				a = n("./node_modules/lodash/filter.js"),
				c = n.n(a),
				l = n("./node_modules/lodash/noop.js"),
				d = n.n(l),
				u = n("./node_modules/react/index.js"),
				p = n.n(u),
				m = n("./node_modules/react-redux/es/index.js"),
				h = n("./node_modules/reselect/es/index.js"),
				b = n("./node_modules/shallowequal/index.js"),
				f = n.n(b),
				g = n("./src/lib/classNames/index.ts"),
				v = n("./src/lib/fastdom/index.ts"),
				x = n("./src/lib/lessComponent.tsx"),
				C = n("./src/lib/linkMatchers/customLinks.ts"),
				E = n("./src/lib/logs/console.ts"),
				y = n("./src/telemetry/models/Media.ts"),
				O = n("./src/realtime/GQLSubscription/async.tsx"),
				k = n("./src/reddit/actions/economics/subredditPremium/thunkedActions.ts"),
				_ = n("./src/reddit/actions/postCreation/mediaUpload.ts"),
				j = n("./src/reddit/featureFlags/index.ts"),
				S = n("./src/reddit/helpers/trackers/postComposer.ts"),
				T = n("./src/reddit/models/PostCreationForm/index.ts"),
				w = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const I = {
				BREAK_HEADER_ENTITY: "BREAK_HEADER_ENTITY",
				CONVERT_TO_LIST_ON_SPACE: "CONVERT_TO_LIST_ON_SPACE",
				EXEC_TABLE_ON_ENTER_HANDLER: "EXEC_TABLE_ON_ENTER_HANDLER",
				INSERT_LINE_BREAK: "INSERT_LINE_BREAK",
				LINKIFY_ON_ENTER: "LINKIFY_ON_ENTER",
				LINKIFY_ON_SPACE: "LINKIFY_ON_SPACE",
				MAKE_PLAIN_BLOCK: "MAKE_PLAIN_BLOCK",
				OPEN_LINK_TOOLTIP: "OPEN_LINK_TOOLTIP",
				REDUCE_LIST_INDENT: "REDUCE_LIST_INDENT",
				REMOVE_EXTRA_LIST_ITEM: "REMOVE_EXTRA_LIST_ITEM",
				RESET_CURRENT_AND_PREVIOUS_BLOCKS: "RESET_CURRENT_AND_PREVIOUS_BLOCKS",
				SUBMIT: "SUBMIT"
			};
			const P = e => {
					const t = e.getCurrentContent().getBlockMap();
					if (t.size > 2 || (e => !!e.reduce((function() {
							let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
								t = arguments.length > 1 ? arguments[1] : void 0;
							return e + t.getLength()
						}), 0))(t) || (e => !!e.find(e => Object(w.o)(e.getType())))(t) || e.isInCompositionMode()) return null; {
						const n = e.getSelection();
						if (n.isCollapsed() && n.getFocusKey() === t.first().getKey()) return n.getFocusKey()
					}
				},
				M = e => {
					const t = e.getCharacterList().map(e => o.CharacterMetadata.create({
						entity: e.getEntity()
					}));
					return e.set("characterList", t)
				};
			var R = n("./src/reddit/components/ConfirmUserActionModal/index.tsx"),
				N = n("./src/reddit/components/RichTextEditor/constants/draftEditorCommands.ts"),
				D = n("./node_modules/lodash/escape.js"),
				L = n.n(D),
				A = n("./src/reddit/components/RichTextEditor/media/helpers.ts"),
				B = n("./src/reddit/components/RichTextEditor/helpers/common.ts"),
				F = n("./src/reddit/components/RichTextEditor/entity/entityTypes.ts"),
				U = n("./node_modules/immutable/dist/immutable.js"),
				K = n("./src/reddit/helpers/dom/index.ts"),
				W = n("./node_modules/lodash/chunk.js"),
				H = n.n(W),
				q = n("./node_modules/lodash/flatten.js"),
				z = n.n(q),
				G = n("./node_modules/lodash/takeWhile.js"),
				V = n.n(G),
				Q = n("./src/reddit/components/RichTextEditor/helpers/modifiers.ts"),
				J = n("./src/reddit/components/RichTextEditor/table/helpers.ts"),
				X = n("./node_modules/lodash/last.js"),
				Z = n.n(X),
				Y = n("./src/reddit/components/RichTextEditor/constants/editorChangeTypes.ts"),
				$ = n("./src/reddit/components/RichTextEditor/helpers/forEachBlock.ts"),
				ee = n("./node_modules/lodash/find.js"),
				te = n.n(ee);
			var ne = (e, t) => {
				const n = e.getSelection(),
					s = e.getCurrentContent(),
					r = s.getBlockForKey(n.getAnchorKey()),
					i = s.getBlockForKey(n.getFocusKey()),
					[a, c] = Object(J.e)(s, r, i);
				if (!a || a !== c) return e;
				const l = Object(J.g)(r),
					d = Object(J.g)(i),
					{
						blocks: u,
						start: p
					} = a,
					{
						colCount: m
					} = d,
					h = u.length / m,
					{
						minCol: b,
						minRow: f,
						maxCol: g,
						maxRow: v
					} = Object(J.f)(l, d),
					x = u.filter(e => {
						const {
							rowIndex: n,
							colIndex: o
						} = Object(J.g)(e);
						return "rows" === t ? !(f <= n && n <= v) : !(b <= o && o <= g)
					});
				x.sort(J.b);
				const C = "rows" === t ? m : x.length / h,
					E = z()(Object(J.d)(H()(x, C))),
					y = s.getBlocksAsArray(),
					O = [...y.slice(0, p), ...E, ...y.slice(p + u.length)],
					k = s.merge({
						blockMap: o.BlockMapBuilder.createFromArray(O)
					}),
					_ = {
						colIndex: b,
						rowIndex: f
					};
				let j = te()(E, e => Object(J.h)(_, Object(J.g)(e)));
				j || (j = E.length ? E[E.length - 1] : y[p > 0 ? p - 1 : 0]);
				const S = o.SelectionState.createEmpty(j.getKey()).merge({
					focusOffset: j.getLength(),
					anchorOffset: j.getLength()
				});
				let T = o.EditorState.push(e, k, Y.e);
				return T = o.EditorState.forceSelection(T, S)
			};
			var oe = function(e) {
				let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
				const n = e.getSelection();
				if (n.isCollapsed()) return;
				if (n.getStartKey() === n.getEndKey() && !t) return;
				const s = e.getCurrentContent(),
					r = s.getBlockForKey(n.getAnchorKey()),
					i = s.getBlockForKey(n.getFocusKey()),
					[a, c] = Object(J.e)(s, r, i);
				if (!a || a !== c) return;
				const l = {};
				let d = n;
				if (r === i) {
					const e = Object(J.n)(i, 0, n.getStartOffset()),
						t = Object(J.n)(i, n.getEndOffset());
					l[i.getKey()] = Object(J.j)(i, [e, t]), d = n
				} else {
					if (a.blocks[0].getKey() === n.getStartKey() && Z()(a.blocks).getKey() === n.getEndKey()) return ne(e, "rows");
					Object($.a)(s, n, (e, t) => {
						l[t] = Object(J.n)(e, 0, 0)
					}), d = n.merge({
						anchorOffset: 0,
						focusOffset: 0
					})
				}
				const u = s.merge({
					blockMap: s.getBlockMap().merge(l),
					selectionAfter: d
				});
				return o.EditorState.push(e, u, Y.f)
			};
			const se = (e, t, n, o) => {
					const {
						htmlParts: s
					} = t;
					e.forEach((e, r) => {
						s.push(`<${n} ${o[r]} style="margin: 0px; padding: 4px 9px; border: 1px solid rgb(229, 227, 218);">`), Ee(e, t), s.push(`</${n}>`)
					})
				},
				re = e => {
					const t = e[0],
						n = e[e.length - 1],
						o = [...e].sort(J.b),
						{
							minCol: s,
							maxCol: r
						} = Object(J.f)(Object(J.g)(t), Object(J.g)(n)),
						i = r - s + 1;
					return Object(J.d)(H()(o, i))
				},
				ie = (e, t, n) => {
					n ? Ee(e[0], t) : ((e, t) => {
						const {
							editor: n,
							htmlParts: o
						} = t, s = n.getEditorKey(), r = e[0].map(e => {
							const {
								alignment: t
							} = Object(J.g)(e);
							return t ? `align="${J.a[t]}"` : ""
						}), [i, ...a] = e;
						o.push(`\n    <table data-editor="${s}">\n      <thead>\n        <tr>`), se(i, t, "th", r), o.push("\n        </tr>\n      </thead>\n      <tbody>"), a.forEach(e => {
							o.push("\n        <tr>"), se(e, t, "td", r), o.push("\n        </tr>")
						}), o.push("\n      </tbody>\n    </table>")
					})(re(e), t)
				},
				ae = (e, t, n) => {
					n ? t.textParts.push(ke(e[0], t)) : ((e, t) => {
						const {
							textParts: n
						} = t;
						e.forEach(e => {
							n.push(e.map(e => ke(e, t)).join(" "))
						})
					})(re(e), t)
				},
				ce = e => {
					const {
						processed: t,
						remaining: n
					} = e, o = [];
					for (; n.length;) {
						const e = n[0];
						if (!Object(w.v)(e.getType())) break;
						o.push(n.shift())
					}
					const s = !n.length && !t.length,
						r = 1 === o.length && s;
					ie(o, e, r), ae(o, e, r), ((e, t, n, o) => {
						if (n)
							if (o) {
								const n = e[0].merge({
									data: Object(U.Map)(),
									type: w.n
								});
								t.blocksParts = [n]
							} else t.blocksParts = z()(re(e))
					})(o, e, s, r), t.push(...o)
				},
				le = e => oe(e, !0),
				de = (e, t, n) => {
					const s = Object(w.v)(n.first().getType()),
						r = Object(w.v)(n.last().getType()),
						i = e.getBlockForKey(t.getAnchorKey()),
						a = e.getBlockForKey(t.getFocusKey()),
						[c, l] = Object(J.e)(e, i, a);
					return c && c === l ? ((e, t, n, s) => {
						const r = Object(w.v)(s.first().getType()),
							i = e.getBlockForKey(t.getAnchorKey()),
							a = e.getBlockForKey(t.getFocusKey()),
							{
								blocks: c,
								start: l
							} = n;
						c.sort(J.b);
						const d = Object(J.g)(c[0]);
						let {
							colCount: u
						} = d;
						const p = H()(c, u);
						let m = p.length;
						const {
							minRow: h,
							minCol: b
						} = Object(J.f)(Object(J.g)(i), Object(J.g)(a)), f = s.toArray();
						if (r) {
							const n = V()(f, e => Object(w.v)(e.getType()));
							n.sort(J.b);
							const s = Object(J.g)(n[0]).colCount,
								r = H()(n, s),
								i = r.length,
								a = h + i - 1,
								d = b + s - 1;
							if (n.length !== i * s) throw new Error("Invalid table fragment!");
							if (d >= u && p.forEach(e => {
									e.push(...Object(J.l)(d - u + 1, 1))
								}), u = p[0].length, a >= m) {
								const e = H()(Object(J.l)(u, a - m + 1), u);
								p.push(...e)
							}
							m = p.length;
							for (let e = 0; e < i; e++)
								for (let t = 0; t < s; t++) {
									const n = h + e,
										o = b + t,
										s = r[e][t];
									p[n][o] = s.set("key", p[n][o].getKey())
								}
							const g = Object(J.d)(p),
								v = z()(g),
								x = e.getBlocksAsArray(),
								C = [...x.slice(0, l), ...v, ...x.slice(l + c.length)],
								E = Object(J.o)(t, p[h][b], p[a][d]);
							return e.merge({
								blockMap: o.BlockMapBuilder.createFromArray(C),
								selectionAfter: E
							})
						} {
							const n = p[h][b],
								s = Object(J.j)(n, f, " ");
							let r = t;
							return t.getStartKey() !== t.getEndKey() && (r = Object(J.o)(t, n, n)), Q.c(e, r, o.BlockMapBuilder.createFromArray([s]))
						}
					})(e, t, c, n) : c || l || !s && !r ? void 0 : ((e, t, n) => {
						const s = Object(w.v)(n.first().getType()),
							r = Object(w.v)(n.last().getType()),
							i = n.toArray();
						s && i.unshift(Object(B.h)()), r && i.push(Object(B.h)());
						const a = o.BlockMapBuilder.createFromArray(i);
						return Q.c(e, t, a)
					})(e, t, n)
				};
			var ue = n("./node_modules/draft-js/lib/removeEntitiesAtEdges.js"),
				pe = n.n(ue);
			var me = (e, t) => {
				const n = t.getStartKey(),
					o = t.getStartOffset(),
					s = t.getEndKey(),
					r = t.getEndOffset(),
					i = pe()(e, t).getBlockMap(),
					a = i.keySeq(),
					c = a.indexOf(n),
					l = a.indexOf(s) + 1;
				return i.slice(c, l).map((e, t) => {
					const i = e.getText(),
						a = e.getCharacterList();
					return n === s ? e.merge({
						text: i.slice(o, r),
						characterList: a.slice(o, r)
					}) : t === n ? e.merge({
						text: i.slice(o),
						characterList: a.slice(o)
					}) : t === s ? e.merge({
						text: i.slice(0, r),
						characterList: a.slice(0, r)
					}) : e
				})
			};
			const he = (e, t) => {
					const n = {
							children: [],
							parentItem: t,
							type: e.getType()
						},
						o = {
							block: e,
							parentList: n
						};
					return n.children.push(o), t && (t.childrenLists = t.childrenLists || [], t.childrenLists.push(n)), {
						list: n,
						item: o
					}
				},
				be = (e, t) => {
					const {
						type: n,
						children: o
					} = e, {
						htmlParts: s
					} = t, r = n === w.b.ORDERED_LIST ? "ol" : "ul";
					s.push(`<${r}>`), o.forEach(e => ((e, t) => {
						const {
							block: n,
							childrenLists: o
						} = e, {
							htmlParts: s
						} = t;
						s.push("<li>"), Ee(n, t, !0), o && o.forEach(e => be(e, t)), s.push("</li>")
					})(e, t)), s.push(`</${r}>`)
				},
				fe = (e, t) => {
					const {
						children: n
					} = e;
					n.forEach((e, n) => ge(e, n, t))
				},
				ge = (e, t, n) => {
					const {
						block: o,
						childrenLists: s
					} = e, {
						textParts: r
					} = n, i = " ".repeat(o.getDepth()), a = o.getType() === w.b.ORDERED_LIST ? `${t+1}.` : "-", c = ke(o, n);
					r.push(`${i}${a} ${c}`), s && s.forEach(e => fe(e, n))
				},
				ve = e => {
					const {
						remaining: t
					} = e, n = t.shift(), o = n.getType(), s = [n];
					for (; t.length;) {
						const e = t[0],
							n = e.getType();
						if (!Object(w.s)(n)) break;
						if (e.getDepth() > 0 || n === w.b.UNORDERED_LIST) s.push(t.shift());
						else {
							if (n !== o) break;
							if (s.some(e => e.getType() !== w.b.ORDERED_LIST)) break;
							s.push(t.shift())
						}
					}
					const r = (e => {
						const t = e[0],
							n = {
								type: t.getType(),
								children: []
							};
						let o, s = n,
							r = t.getDepth();
						return e.forEach(e => {
							const t = e.getType(),
								n = e.getDepth();
							if (n > r) {
								const t = he(e, o);
								s = t.list, o = t.item, r = n
							} else {
								for (; r !== n;) s = s.parentItem ? s.parentItem.parentList : s, r--;
								if (t === s.type) o = {
									block: e,
									parentList: s
								}, s.children.push(o);
								else {
									const t = he(e, s.parentItem);
									s = t.list, o = t.item
								}
							}
						}), n
					})(s);
					be(r, e), fe(r, e), e.processed.push(...s)
				};
			var xe = (e, t) => {
				const n = e.toArray().filter(e => !Object(w.t)(e.getType()));
				if (1 === n.length) {
					n[0].getType() !== w.n && n.push(new o.ContentBlock({
						key: Object(o.genKey)(),
						type: w.n
					}))
				}
				const s = o.ContentState.createFromBlockArray(n),
					r = JSON.stringify(Object(o.convertToRaw)(s));
				return `<div data-reddit-rtjson="${L()(r)}">${t}</div>`
			};
			const Ce = () => !!window.clipboardData,
				Ee = function(e, t) {
					let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					const {
						htmlParts: o
					} = t, s = ye(e, t);
					s && s.forEach(e => o.push(n ? e.innerHTML : e.outerHTML))
				},
				ye = (e, t) => {
					const {
						selection: n,
						editor: o
					} = t, s = n.getStartKey(), r = n.getEndKey(), i = e.getKey(), a = o.refs.editor, c = Object(B.d)(i, a);
					return c ? i === s || i === r ? Object(K.c)(c) : [c] : null
				};
			var Oe = (e, t, n) => {
				const s = e.getCurrentContent(),
					r = e.getSelection(),
					i = Ie(e) || me(s, r);
				if (!i || !i.count()) return;
				const a = i.toArray(),
					c = {
						editor: t,
						editorState: e,
						selection: r,
						remaining: a,
						processed: [],
						htmlParts: [],
						textParts: [],
						blocksParts: [...a]
					};
				for (; c.remaining.length;) {
					const e = c.remaining[0].getType();
					switch (!0) {
						case Object(w.t)(e):
							we(c);
							break;
						case Object(w.s)(e):
							ve(c);
							break;
						case Object(w.v)(e):
							ce(c);
							break;
						default:
							_e(c)
					}
				}
				const l = c.textParts.join("\n"),
					d = (e => Object(U.OrderedMap)(e.map(e => {
						const t = Object(o.genKey)();
						return [t, e.set("key", t)]
					})))(c.blocksParts);
				return ((e, t) => {
					let {
						html: n,
						text: o
					} = t;
					Ce() ? window.clipboardData.setData("text", o) : (n && e.clipboardData.setData("text/html", n), e.clipboardData.setData("text/plain", o))
				})(n, {
					html: xe(d, c.htmlParts.join("")),
					text: l
				}), n.stopPropagation(), n.preventDefault(), t.setClipboard(d), d
			};
			const ke = (e, t) => {
					const n = e.getText(),
						o = t.editorState.getCurrentContent(),
						s = [];
					let r = -1;
					return e.getCharacterList().forEach((e, t) => {
						const i = e && e.getEntity();
						if (i && void 0 !== t) {
							const e = o.getEntity(i);
							e.getType() === F.a.EMOTE && (s.push(n.substring(r + 1, t)), s.push(`:${e.getData().id}:`), r = t)
						}
					}), s.push(n.substring(r + 1, n.length)), s.join("")
				},
				_e = e => {
					const t = e.remaining.shift();
					((e, t) => Ee(e, t))(t, e), ((e, t) => {
						t.textParts.push(ke(e, t))
					})(t, e), e.processed.push(t)
				},
				je = (e, t) => {
					const n = e.first(),
						s = e.last();
					let r = e;
					if (Object(w.u)(n.getType()) ? r = r.set(r.keySeq().first(), n.merge({
							type: w.n
						})) : Object(w.o)(n.getType()) && (r = o.BlockMapBuilder.createFromArray([Object(B.h)(), ...r.toArray()])), Object(w.u)(s.getType()) || !Object(A.q)(t)) {
						const e = Object(B.h)();
						r = r.set(e.getKey(), e)
					} else if (Object(w.o)(s.getType())) {
						const e = Object(B.h)().merge({
							type: w.j
						});
						r = r.set(e.getKey(), e)
					}
					return r
				},
				Se = (e, t, n) => {
					const o = e.getBlockForKey(t.getStartKey());
					if (Object(w.u)(o.getType())) {
						const o = n.first(),
							s = n.set(n.keySeq().first(), Object(B.h)(o.getKey(), o.getText()).merge({
								type: w.j
							}));
						return Q.c(e, t, s)
					}
				},
				Te = (e, t, n) => {
					const o = ((e, t, n) => {
						const o = t ? t.getText() : "";
						return `<span data-editor="${n}">${L()(o)}</span>`
					})(0, t, n.editor.getEditorKey());
					n.htmlParts.push(o)
				},
				we = e => {
					const {
						remaining: t
					} = e, n = t.shift(), o = t[0] && Object(w.u)(t[0].getType()) ? t.shift() : void 0;
					Te(0, o, e), ((e, t) => {
						const n = e ? ke(e, t) : "";
						t.textParts.push(n)
					})(o, e), e.processed.push(n), o && e.processed.push(o)
				},
				Ie = e => {
					const t = e.getSelection(),
						n = t.getFocusKey();
					if (n !== t.getAnchorKey()) return;
					const s = e.getCurrentContent(),
						r = s.getBlockForKey(n);
					if (Object(w.o)(r.getType())) {
						const e = [r],
							t = s.getBlockAfter(r.getKey());
						return t && Object(w.u)(t.getType()) && e.push(t), o.ContentState.createFromBlockArray(e).getBlockMap()
					}
				},
				Pe = e => {
					const t = Ie(e);
					if (t) return Object(A.d)(e, t.first().getKey())
				},
				Me = e => {
					const t = e.getSelection();
					let n = e.getCurrentContent();
					const s = n.getBlockForKey(t.getStartKey()),
						r = n.getBlockForKey(t.getEndKey());
					if (Object(w.t)(s.getType()) || Object(w.t)(r.getType())) {
						if (t.isCollapsed())
							if (Object(w.u)(s.getType())) n = Q.d(n, t), n = o.Modifier.setBlockType(n, n.getSelectionAfter(), w.n);
							else if (Object(w.o)(s.getType())) {
							let s = n.getBlockAfter(t.getStartKey());
							return s || (s = (e = Object(A.b)(e, t.getStartKey(), B.a.after)).getCurrentContent().getBlockAfter(t.getStartKey())), o.EditorState.forceSelection(e, Object(B.b)(s, !0))
						}
						return o.EditorState.push(e, n, "split-block")
					}
				},
				Re = (e, t) => {
					const n = e.getSelection(),
						s = e.getCurrentContent(),
						r = "up" === t ? n.getStartKey() : n.getEndKey(),
						i = s.getBlockForKey(r);
					if (!Object(w.o)(i.getType())) return;
					const a = "up" === t ? s.getBlockBefore(r) : s.getBlockAfter(r);
					return a ? o.EditorState.forceSelection(e, Object(B.b)(a, !0)) : Object(A.b)(e, r, "up" === t ? B.a.before : B.a.after)
				},
				Ne = (e, t) => {
					if (e.shiftKey) return;
					const n = Re(t, "up");
					return n && e.preventDefault(), n
				},
				De = (e, t) => {
					if (e.shiftKey) return;
					const n = Re(t, "down");
					return n && e.preventDefault(), n
				},
				Le = (e, t) => {
					const n = e.getSelection();
					return n.isCollapsed() && 0 === n.getStartOffset() && Object(w.o)(e.getCurrentContent().getBlockForKey(n.getStartKey()).getType())
				};
			var Ae = (e, t) => {
					if (!Object(A.q)(t)) return e;
					const n = e.getSelection(),
						o = e.getCurrentContent(),
						s = o.getBlockForKey(n.getStartKey());
					if (Object(w.o)(s.getType())) {
						const t = o.getBlockAfter(s.getKey());
						if (!t || !Object(w.u)(t.getType())) return Object(A.d)(e, s.getKey(), !1)
					}
					return e
				},
				Be = n("./src/reddit/actions/modal.ts"),
				Fe = n("./src/reddit/actions/upload.ts"),
				Ue = n("./src/reddit/components/ThumbnailSelector/index.tsx"),
				Ke = e => null,
				We = n("./src/reddit/helpers/media/index.ts"),
				He = n("./src/reddit/helpers/richTextEditor/index.ts"),
				qe = n("./src/reddit/selectors/activeModalId.ts");
			const ze = "application/x-reddit-rte-block";
			var Ge = n("./src/reddit/models/Upload/index.ts"),
				Ve = n("./src/reddit/selectors/experiments/d2xShredditPlayer.ts"),
				Qe = n("./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/ImagePreview/index.m.less"),
				Je = n.n(Qe);
			const Xe = x.a.img("Img", Je.a);
			var Ze = x.a.wrapped(e => {
					const {
						className: t,
						url: n
					} = e;
					return p.a.createElement("div", {
						className: t
					}, p.a.createElement(Xe, {
						draggable: !1,
						src: n
					}))
				}, "Component", Je.a),
				Ye = n("./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/Placeholder/index.m.less"),
				$e = n.n(Ye);
			const et = x.a.div("Message", $e.a);
			var tt = x.a.wrapped(e => {
					const {
						className: t,
						isImage: n
					} = e;
					return p.a.createElement("div", {
						className: t
					}, p.a.createElement(et, null, n ? s.fbt._("Processing video...", null, {
						hk: "3g3QoU"
					}) : s.fbt._("Processing image...", null, {
						hk: "1xoNB3"
					})))
				}, "Component", $e.a),
				nt = n("./src/lib/formatApiError/index.ts"),
				ot = n("./src/reddit/components/ProgressBar/index.tsx"),
				st = n("./src/reddit/controls/Button/index.tsx"),
				rt = n("./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/StatusBar/index.m.less"),
				it = n.n(rt);
			const at = x.a.div("ControlRow", it.a),
				ct = x.a.wrapped(st.t, "Button", it.a),
				lt = x.a.wrapped(st.t, "ErrButton", it.a),
				dt = x.a.div("Status", it.a),
				ut = x.a.wrapped(ot.a, "ProgressBar", it.a),
				pt = x.a.div("ErrorLine", it.a),
				mt = e => t => {
					t.stopPropagation(), e(t)
				};
			var ht = x.a.wrapped(e => {
					const {
						upload: t
					} = e, n = mt(e.onCancel), o = mt(e.onRetry), r = mt(e.onRemove), {
						status: i,
						progress: a
					} = t, c = a && a.percent || 0, l = i === Ge.a.FAILED || i === Ge.a.CANCELED, d = (e => {
						const {
							status: t,
							progress: n
						} = e;
						return t === Ge.a.CANCELED ? s.fbt._("Upload was canceled", null, {
							hk: "71azQ"
						}) : t === Ge.a.FAILED ? s.fbt._("Upload failed: {errorText}", [s.fbt._param("errorText", Object(nt.a)(e.error))], {
							hk: "3NGGzE"
						}) : 100 === (n && n.percent || 0) ? s.fbt._("Success!", null, {
							hk: "3622uh"
						}) : s.fbt._("Uploading: {fileName}", [s.fbt._param("fileName", e.file.name)], {
							hk: "H7qzO"
						})
					})(t);
					return p.a.createElement("div", {
						className: e.className
					}, l ? p.a.createElement(pt, null) : p.a.createElement(ut, {
						innerBarClassName: it.a.ProgressBarInner,
						percent: c
					}), p.a.createElement(at, null, p.a.createElement(dt, {
						className: l ? it.a.hasError : void 0,
						title: l ? d : void 0
					}, d), p.a.createElement("div", {
						className: it.a.ButtonsContainer
					}, l ? [p.a.createElement(lt, {
						kind: st.b.Button,
						priority: st.c.Plain,
						key: "remove",
						onClick: r
					}, s.fbt._("Remove", null, {
						hk: "3tYl0U"
					})), p.a.createElement(lt, {
						kind: st.b.Button,
						priority: st.c.Plain,
						key: "retry",
						onClick: o
					}, s.fbt._("Retry", null, {
						hk: "3sO2HB"
					}))] : p.a.createElement(ct, {
						kind: st.b.Button,
						priority: st.c.Plain,
						disabled: 100 === c,
						onClick: n
					}, s.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})))))
				}, "Component", it.a),
				bt = n("./node_modules/react-motion/lib/react-motion.js"),
				ft = n("./src/reddit/components/HTML5StreamPlayer/index.tsx"),
				gt = n("./src/reddit/components/Media/ShredditPlayerWrapper/index.tsx"),
				vt = n("./src/reddit/components/PlayButton/index.tsx"),
				xt = n("./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/VideoPreview/index.m.less"),
				Ct = n.n(xt);
			const Et = {
					stiffness: 60,
					damping: 20
				},
				yt = [{
					key: "video",
					style: {
						opacity: Object(bt.spring)(1, Et)
					}
				}],
				Ot = x.a.wrapped(e => {
					const {
						autoPlay: t = !1,
						className: n,
						showControls: o,
						shouldPause: s,
						style: r,
						dashUrl: i,
						hlsUrl: a,
						isShredditPlayerRemainingFeedsEnabled: c,
						otherUrl: l,
						posterUrl: d
					} = e;
					return c ? p.a.createElement("div", {
						className: n,
						style: r
					}, p.a.createElement(gt.a, {
						isGif: !1,
						isListing: !1,
						posterUrl: d,
						preventAutoplay: !0,
						shouldUseInitializationOptimization: !0,
						source: a || l
					})) : p.a.createElement("div", {
						className: n,
						style: r
					}, p.a.createElement(ft.b, {
						autoPlay: t,
						shouldIgnoreAutoplayPref: !0,
						shouldLoad: !1,
						shouldPause: s,
						isGif: !1,
						hlsSource: a,
						mpegDashSource: i,
						otherSource: l,
						showSettingsIcon: !1,
						showControlBar: o,
						playerClickPlay: !1,
						hideUntilLoaded: !0
					}))
				}, "VideoPlayer", Ct.a),
				kt = x.a.img("PosterImg", Ct.a),
				_t = x.a.wrapped(e => {
					const {
						className: t,
						onPlayButtonClick: n,
						url: o,
						showPlayButton: s
					} = e;
					return p.a.createElement("div", {
						className: t
					}, p.a.createElement(kt, {
						draggable: !1,
						src: o
					}), s && p.a.createElement(vt.a, {
						className: Ct.a.playButton,
						onClick: n
					}))
				}, "Poster", Ct.a);
			class jt extends p.a.Component {
				constructor(e) {
					super(e), this.onPlayButtonClick = () => {
						this.setState({
							showVideo: !0
						})
					}, this.willEnter = () => ({
						opacity: 0
					}), this.willLeave = () => ({
						opacity: Object(bt.spring)(0, Et)
					}), this.didLeave = () => {
						this.setState({
							showVideo: !1
						})
					}, this.state = {
						showVideo: !1
					}
				}
				renderVideo() {
					const {
						props: e
					} = this;
					return p.a.createElement("div", {
						className: e.className
					}, p.a.createElement(Ot, {
						dashUrl: e.dashUrl,
						hlsUrl: e.hlsUrl,
						isShredditPlayerRemainingFeedsEnabled: e.isShredditPlayerRemainingFeedsEnabled,
						otherUrl: e.otherUrl,
						posterUrl: e.posterUrl,
						showControls: e.isUploaded && e.isSelected,
						shouldPause: !e.isSelected || void 0
					}))
				}
				render() {
					const {
						className: e,
						isSelected: t,
						posterUrl: n,
						dashUrl: o,
						hlsUrl: s,
						otherUrl: r,
						isShredditPlayerRemainingFeedsEnabled: i
					} = this.props;
					if (!n || i) return this.renderVideo();
					const {
						showVideo: a
					} = this.state, c = !!(o || s || r);
					return p.a.createElement(bt.TransitionMotion, {
						defaultStyles: [],
						styles: t && a && c ? yt : [],
						willEnter: this.willEnter,
						willLeave: this.willLeave,
						didLeave: this.didLeave
					}, i => p.a.createElement("div", {
						className: e
					}, i.map(e => p.a.createElement(Ot, {
						key: e.key,
						autoPlay: !0,
						style: e.style,
						otherUrl: r,
						dashUrl: o,
						hlsUrl: s,
						posterUrl: n,
						showControls: !0,
						shouldPause: !t || void 0
					})), p.a.createElement(_t, {
						url: n,
						showPlayButton: !a || !t,
						onPlayButtonClick: this.onPlayButtonClick
					})))
				}
			}
			var St = x.a.wrapped(jt, "Component", Ct.a),
				Tt = n("./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/index.m.less"),
				wt = n.n(Tt);

			function It() {
				return (It = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			var Pt = e => {
					const {
						alignCenter: t,
						isSelected: n,
						onCancel: o,
						onRetry: s,
						onRemove: r,
						upload: i,
						mediaAsset: a,
						thumbnail: c,
						renderSmallMedia: l,
						...d
					} = e, u = Object(m.e)(Ve.c);
					let h = !1;
					if (i) h = "image" === Object(We.g)(i.metadata.mimetype);
					else {
						if (!a) return null;
						h = a.type === A.a.Image || a.type === A.a.AnimatedImage
					}
					const b = i ? i.metadata.height : a.height,
						f = !i || i.status === Ge.a.SUCCESS,
						v = h && !!b && b < 104,
						x = !b;
					return p.a.createElement("div", It({
						className: Object(g.a)(wt.a.container, {
							[wt.a.alignCenter]: t,
							[wt.a.isCompact]: v,
							[wt.a.isUploaded]: f,
							[wt.a.isSelected]: n
						})
					}, d), x ? p.a.createElement(tt, {
						className: wt.a.placeholder,
						isImage: h
					}) : h ? p.a.createElement(Ze, {
						className: Object(g.a)(wt.a.imagePreview, {
							[wt.a.renderSmallMedia]: l
						}),
						url: i ? i.metadata.localUrl : a.imageUrl
					}) : p.a.createElement(St, {
						className: wt.a.videoPreview,
						dashUrl: a ? a.dashUrl : void 0,
						hlsUrl: a ? a.hlsUrl : void 0,
						isSelected: n,
						isUploaded: f,
						otherUrl: i ? i.metadata.localUrl : void 0,
						posterUrl: c ? c.url : a.posterUrl,
						isShredditPlayerRemainingFeedsEnabled: u
					}), i && p.a.createElement(ht, {
						className: wt.a.statusBar,
						onCancel: o,
						onRemove: r,
						onRetry: s,
						upload: i
					}))
				},
				Mt = n("./src/reddit/components/RichTextEditor/media/MediaBlock/SelectionHook/index.m.less"),
				Rt = n.n(Mt);

			function Nt() {
				return (Nt = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const Dt = x.a.div("HiddenDiv", Rt.a);
			var Lt = e => {
					let {
						elementRef: t,
						...n
					} = e;
					return p.a.createElement(Dt, Nt({}, n, {
						innerRef: t
					}), p.a.createElement("br", null))
				},
				At = n("./src/reddit/components/MakeGifToggle/index.tsx"),
				Bt = n("./src/reddit/icons/svgs/ThumbnailSelect/index.tsx"),
				Ft = n("./src/reddit/icons/svgs/Trash2/index.tsx"),
				Ut = n("./src/reddit/layout/row/Inline/index.tsx"),
				Kt = n("./src/reddit/components/RichTextEditor/Toolbar/index.tsx"),
				Wt = n("./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.tsx"),
				Ht = n("./src/reddit/components/RichTextEditor/Toolbar/formatterConfigs.tsx"),
				qt = n("./src/reddit/components/RichTextEditor/media/MediaBlock/Toolbar/index.m.less"),
				zt = n.n(qt);
			const Gt = x.a.wrapped(Wt.a, "FormatterButton", zt.a),
				Vt = Object(Ht.f)(Ft.b),
				Qt = Object(Ht.f)(Bt.a),
				Jt = x.a.wrapped(Ut.a, "ToolbarContent", zt.a);
			var Xt = e => {
					const {
						alignCenter: t,
						block: n,
						editorState: o,
						onChange: r,
						showVideoControls: i
					} = e, a = n.getKey(), {
						makeGif: c = !1
					} = Object(A.h)(n) || {};
					return p.a.createElement("div", {
						className: Object(g.a)(zt.a.container, {
							[zt.a.alignCenter]: t
						})
					}, p.a.createElement(Jt, {
						className: Object(g.a)(zt.a.content, {
							[zt.a.multiButtonToolbarContent]: i
						})
					}, i && p.a.createElement(At.a, {
						isCompact: !0,
						key: "make-gif",
						on: c,
						onClick: () => r(Object(A.r)(o, a, {
							makeGif: !c
						}))
					}), i && e.showThumbnailButton && p.a.createElement(Gt, {
						Icon: Qt,
						onClick: e.onThumbnailButtonClick,
						tooltip: s.fbt._("Choose thumbnail", null, {
							hk: "2gKwDF"
						}),
						tooltipBelow: !0
					}), i && p.a.createElement(Kt.c, null), p.a.createElement(Gt, {
						Icon: Vt,
						onClick: () => r(Object(A.d)(o, a)),
						tooltip: s.fbt._("Remove", null, {
							hk: "3tYl0U"
						}),
						tooltipBelow: !0
					})))
				},
				Zt = n("./src/reddit/components/RichTextEditor/media/MediaBlock/index.m.less"),
				Yt = n.n(Zt);
			const $t = e => `RTE_VIDEO_THUMBNAIL_SELECTOR_${e.getKey()}`,
				en = Object(h.a)(e => e.uploads, (e, t) => {
					const n = Object(A.h)(t.block);
					return n && n.uploadInfo && n.uploadInfo.uploadKey
				}, (e, t) => t ? e[t] : void 0),
				tn = Object(m.b)((e, t) => ({
					upload: en(e, t),
					isThumbnailSelectorOpen: Object(qe.a)(e) === $t(t.block),
					isRteVideoPosterEnabled: j.d.rteVideoPoster(e)
				}), (e, t) => ({
					onCancelUpload: t => e(Fe.i(t, !1)),
					toggleVideoThumbnailsSelector: () => e(Object(Be.i)($t(t.block)))
				})),
				nn = x.a.div("MediaContainer", Yt.a),
				on = x.a.div("Container", Yt.a);
			class sn extends p.a.Component {
				constructor(e) {
					super(e), this.onNativeSelectionChange = () => {
						const e = window.getSelection();
						if (0 === e.rangeCount) return;
						const t = e.getRangeAt(0),
							{
								commonAncestorContainer: n
							} = t;
						this.state.active ? this.rootContainer.contains(n) || this.setState({
							active: !1
						}) : this.rootContainer && this.rootContainer.contains(n) && this.selectBlock(), this.setState({
							isInSelection: Object(K.h)(t, this.rootContainer)
						})
					}, this.selectBlock = () => {
						const e = document.createRange();
						e.selectNodeContents(this.rootContainer);
						const t = window.getSelection();
						t.removeAllRanges(), t.addRange(e), this.setState({
							active: !0
						})
					}, this.isSelected = () => {
						const e = this.props.blockProps.getEditorState().getSelection(),
							t = this.props.block.getKey();
						return this.state.active && Object(A.n)(e, t)
					}, this.onRetryUpload = () => {
						const {
							upload: e
						} = this.props;
						e && this.props.blockProps.onRetryUpload(e.key)
					}, this.onMediaViewClickCapture = e => {
						this.state.active || this.selectBlock()
					}, this.onDragStart = e => {
						e.dataTransfer.effectAllowed = "move", e.dataTransfer.setData(ze, this.props.block.getKey())
					}, this.onRemove = () => {
						const e = this.props.blockProps.getEditorState();
						this.props.blockProps.onChange(Object(A.d)(e, this.props.block.getKey()))
					}, this.onCancelUpload = async () => {
						this.props.upload && (await this.props.onCancelUpload(this.props.upload.key), this.selectBlock())
					}, this.onToolbarStateChange = e => {
						this.props.blockProps.onChange(e)
					}, this.toggleVideoThumbnailsSelector = () => {
						this.props.toggleVideoThumbnailsSelector()
					}, this.onThumbnailSelect = e => {
						const t = this.props.blockProps.getEditorState(),
							n = this.props.block.getKey();
						let o = Object(A.r)(t, this.props.block.getKey(), {
							thumbnail: e
						});
						o = Object(A.p)(o, n), this.props.blockProps.onChange(o), this.toggleVideoThumbnailsSelector()
					}, this.state = {
						active: !1,
						isInSelection: !1
					}
				}
				shouldComponentUpdate(e, t) {
					return t.active !== this.state.active || t.isInSelection !== this.state.isInSelection || e.block !== this.props.block || e.upload !== this.props.upload || Object(A.n)(e.selection, e.block.getKey())
				}
				componentDidMount() {
					document.addEventListener("selectionchange", this.onNativeSelectionChange);
					const {
						selection: e
					} = this.props;
					e.getHasFocus() && Object(A.n)(e, this.props.block.getKey()) && this.selectBlock(), this.overlayContainer = Ke(!0)
				}
				componentWillUnmount() {
					document.removeEventListener("selectionchange", this.onNativeSelectionChange)
				}
				componentWillReceiveProps(e) {
					const t = e.block.getKey(),
						n = this.props.blockProps.getEditorState(),
						o = n;
					n !== o && this.props.blockProps.onChange(o), !this.state.active && e.selection !== this.props.selection && e.selection.getHasFocus() && Object(A.n)(e.selection, t) && this.selectBlock()
				}
				getToolbarOffset() {
					if (!this.props.blockProps.rteFocusableContentRef || !this.rootContainer) return 0;
					const {
						top: e
					} = this.rootContainer.getBoundingClientRect(), {
						top: t
					} = this.props.blockProps.rteFocusableContentRef.getBoundingClientRect();
					return e - t - 30 - 10
				}
				render() {
					const {
						block: e,
						blockProps: t,
						isRteVideoPosterEnabled: n,
						offsetKey: o,
						upload: s
					} = this.props, r = Object(A.h)(e), i = r ? r.thumbnail : void 0, a = !!s && Object(We.n)(s.metadata.mimetype || ""), {
						active: c,
						isInSelection: l
					} = this.state, d = t.editorType === He.a.Comment;
					return p.a.createElement(on, {
						innerRef: e => this.rootContainer = e
					}, c && p.a.createElement(Xt, {
						block: e,
						editorState: t.getEditorState(),
						onChange: this.onToolbarStateChange,
						onThumbnailButtonClick: this.toggleVideoThumbnailsSelector,
						showThumbnailButton: n,
						showVideoControls: a,
						alignCenter: !d
					}), p.a.createElement(Lt, null), p.a.createElement("div", {
						contentEditable: !1,
						"data-offset-key": o
					}, p.a.createElement(nn, {
						draggable: !0,
						onDragStart: this.onDragStart,
						innerRef: e => this.mediaContainer = e
					}, p.a.createElement(Pt, {
						isSelected: l || c,
						thumbnail: i,
						onCancel: this.onCancelUpload,
						onClickCapture: this.onMediaViewClickCapture,
						onRetry: this.onRetryUpload,
						onRemove: this.onRemove,
						upload: s,
						mediaAsset: r.mediaAsset,
						alignCenter: !d,
						renderSmallMedia: d
					})), s && a && p.a.createElement(Ue.a, {
						onSelect: this.onThumbnailSelect,
						onToggleModal: this.toggleVideoThumbnailsSelector,
						videoSource: s.metadata.localUrl,
						videoDuration: s.metadata.videoDuration,
						selected: i,
						isOpen: this.props.isThumbnailSelectorOpen
					})), p.a.createElement(Lt, null))
				}
			}
			var rn = tn(sn),
				an = n("./src/reddit/components/RichTextEditor/media/MediaCaption/index.m.less"),
				cn = n.n(an);
			class ln extends p.a.PureComponent {
				constructor(e) {
					super(e);
					const {
						contentState: t,
						block: n
					} = Object(B.e)(e.children[0]).props;
					this.mediaBlockKey = t.getBlockBefore(n.getKey()).getKey()
				}
				render() {
					const e = this.props.children[0],
						t = Object(B.e)(e),
						{
							block: n,
							contentState: o
						} = t.props,
						r = o.getBlockForKey(this.mediaBlockKey),
						i = Object(A.h)(r);
					if (!i || !(i.mediaAsset || i.uploadInfo && i.uploadInfo.mediaType)) return null;
					const a = !n.getLength();
					return p.a.createElement("div", {
						className: cn.a.wrapper,
						style: {
							"--media-caption-placeholder-text": a ? `'${s.fbt._("Add caption",null,{hk:"3zI8El"})}'` : ""
						}
					}, e)
				}
			}
			const dn = Object(U.Map)({
				[w.j]: {
					element: "div",
					wrapper: p.a.createElement(ln, null)
				}
			});
			var un = (e, t, n) => {
					const s = e.getSelection(),
						r = e.getCurrentContent(),
						i = r.getBlockForKey(s.getAnchorKey()),
						a = r.getBlockForKey(s.getFocusKey()),
						[c, l] = Object(J.e)(r, i, a);
					if (!c || c !== l) return e;
					const {
						blocks: d,
						start: u
					} = c, p = Object(J.g)(i), m = Object(J.g)(a), {
						colCount: h
					} = m;
					d.sort(J.b);
					const b = H()(d, h),
						{
							minCol: f,
							minRow: g,
							maxCol: v,
							maxRow: x
						} = Object(J.f)(p, m),
						C = {
							rowIndex: 0,
							colIndex: 0
						};
					if ("rows" === t) {
						const e = "before" === n ? g : x + 1,
							t = H()(Object(J.l)(h, x - g + 1), h);
						b.splice(e, 0, ...t), C.rowIndex = e
					} else {
						const e = "before" === n ? f : v + 1;
						b.forEach(t => {
							t.splice(e, 0, ...Object(J.l)(v - f + 1, 1))
						}), C.colIndex = e
					}
					const E = Object(J.d)(b),
						y = r.getBlocksAsArray(),
						O = z()(E),
						k = [...y.slice(0, u), ...O, ...y.slice(u + d.length)],
						_ = r.merge({
							blockMap: o.BlockMapBuilder.createFromArray(k)
						}),
						j = te()(O, e => Object(J.h)(C, Object(J.g)(e))),
						S = Object(J.o)(s, j, j);
					let T = o.EditorState.push(e, _, Y.e);
					return T = o.EditorState.forceSelection(T, S)
				},
				pn = n("./node_modules/lodash/clamp.js"),
				mn = n.n(pn),
				hn = n("./src/reddit/components/RichTextEditor/helpers/sliceContiguousBlocks.ts");
			var bn = function(e, t) {
				let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "preserve";
				const s = e.getSelection(),
					r = e.getCurrentContent(),
					i = "up" === t || "left" === t ? s.getStartKey() : s.getEndKey(),
					a = r.getBlockForKey(i);
				if (!Object(w.v)(a.getType())) return;
				const c = Object(J.g)(a),
					{
						colCount: l,
						colIndex: d,
						rowIndex: u
					} = c,
					p = r.getBlocksAsArray(),
					m = Object(hn.a)(r, a);
				if (!m) return;
				let h = u,
					b = d;
				switch (t) {
					case "up":
						h--;
						break;
					case "down":
						h++;
						break;
					case "left":
						--b < 0 && (h--, b = l - 1);
						break;
					case "right":
						++b >= l && (h++, b = 0)
				}
				const f = {
					rowIndex: h,
					colIndex: b
				};
				let g = i;
				const v = te()(m.blocks, e => Object(J.h)(Object(J.g)(e), f));
				if (v) g = v.getKey();
				else {
					const e = Object(J.c)(f, c) < 0 ? m.start - 1 : m.start + m.blocks.length;
					0 <= e && e < p.length && (g = p[e].getKey())
				}
				const x = r.getBlockForKey(g);
				let C = 0;
				"preserve" === n ? C = mn()(s.getFocusOffset(), 0, x.getLength()) : "end" === n && (C = x.getLength());
				const E = s.merge({
					anchorKey: g,
					focusKey: g,
					focusOffset: C,
					anchorOffset: C
				});
				return s !== E ? o.EditorState.forceSelection(e, E) : void 0
			};
			const fn = (e, t) => {
					const n = t.getCurrentContent(),
						o = t.getSelection(),
						s = n.getBlockForKey(o.getFocusKey()),
						[r] = Object(J.e)(n, s, s);
					if (!r) return;
					const i = Object(J.g)(s);
					let a;
					return (a = i.colIndex === i.colCount - 1 && i.rowIndex === r.blocks.length / i.colCount - 1 && !e.shiftKey && o.getFocusKey() === o.getAnchorKey() ? un(t, "rows", "after") : bn(t, e.shiftKey ? "left" : "right", "end")) ? (e.preventDefault(), a) : void 0
				},
				gn = (e, t) => {
					if (e.shiftKey) return;
					const n = bn(t, "up");
					return n && e.preventDefault(), n
				},
				vn = (e, t) => {
					if (e.shiftKey) return;
					const n = bn(t, "down");
					return n && e.preventDefault(), n
				};
			class xn {
				constructor() {
					this.lastRowInsertionState = null
				}
				undoRowInsertion(e) {
					const t = o.EditorState.undo(e);
					return bn(t, "down", "end") || t
				}
				isSelectionInLastRow(e) {
					const t = e.getCurrentContent(),
						n = e.getSelection(),
						o = t.getBlockForKey(n.getFocusKey()),
						[s] = Object(J.e)(t, o, o);
					if (!s) return !1;
					const r = Object(J.g)(s.blocks[0]).colCount,
						i = s.blocks.length / r;
					return Object(J.g)(o).rowIndex === i - 1
				}
				insertNewRow(e) {
					const t = e.getSelection();
					let n = un(e, "rows", "after");
					return n = o.EditorState.forceSelection(n, t), n = bn(n, "down") || n, this.lastRowInsertionState = n, n
				}
				handle(e) {
					return e.getSelection().isCollapsed() ? e === this.lastRowInsertionState ? this.undoRowInsertion(e) : this.isSelectionInLastRow(e) ? this.insertNewRow(e) : bn(e, "down") || e : e
				}
			}
			const Cn = (e, t) => {
				const n = e.getSelection();
				if (n.isCollapsed() || n.getStartKey() === n.getEndKey()) return;
				const s = e.getCurrentContent(),
					r = s.getBlockForKey(n.getAnchorKey()),
					i = s.getBlockForKey(n.getFocusKey()),
					[a, c] = Object(J.e)(s, r, i);
				if (a && a === c) {
					const r = Object(J.o)(n, i, i, !1),
						a = Q.b(s, r, t);
					return o.EditorState.push(e, a, Y.d)
				}
			};
			var En = n("./node_modules/lodash/forEach.js"),
				yn = n.n(En);
			const On = (e, t) => t ? e[0] : e[e.length - 1];
			var kn = (e, t) => {
					return e.getSelection().isCollapsed() ? ((e, t) => {
						const n = e.getSelection(),
							s = t.getSelection();
						if (!n.isCollapsed() || s.isCollapsed() || 0 !== s.getStartOffset() || s.getStartKey() !== n.getStartKey()) return e;
						const r = e.getCurrentContent(),
							i = t.getCurrentContent(),
							a = r.getBlockForKey(n.getAnchorKey());
						if (!Object(w.v)(a.getType())) return e;
						const {
							rowIndex: c,
							colIndex: l
						} = Object(J.g)(a);
						if (0 !== c || 0 !== l) return e;
						const d = r.getBlockMap(),
							u = i.getBlockMap();
						if (d.size >= u.size) return e;
						const p = r.getBlockAfter(n.getAnchorKey()),
							m = i.getBlockAfter(s.getEndKey());
						if (p && p !== m) return e;
						const h = a.merge({
								type: w.n,
								data: Object(U.Map)({})
							}),
							b = r.merge({
								blockMap: d.set(a.getKey(), h)
							});
						return o.EditorState.set(e, {
							currentContent: b
						})
					})(e, t) : ((e, t) => {
						const n = e.getSelection();
						if (n.isCollapsed()) return e;
						if (t.getSelection() === n) return e;
						if (n.getFocusKey() === n.getAnchorKey()) return e;
						const s = e.getCurrentContent(),
							r = s.getBlockForKey(n.getAnchorKey()),
							i = s.getBlockForKey(n.getFocusKey()),
							[a, c] = Object(J.e)(s, r, i);
						if (!a && !c) return e;
						let l = e;
						if (a !== c) {
							const t = n.getIsBackward(),
								s = Object(J.o)(n, a ? On(a.blocks, !t) : null, c ? On(c.blocks, t) : null, t);
							n !== s && (l = o.EditorState.forceSelection(e, s))
						} else if (a && c && a === c) {
							const t = Object(J.g)(r),
								a = Object(J.g)(i),
								d = s.getBlocksAsArray(),
								{
									start: u,
									blocks: p
								} = c,
								m = p[0],
								h = Object(J.g)(m);
							if (0 !== h.colIndex || 0 !== h.rowIndex) throw new Error("First table block must always has [0, 0] coordinate!");
							const b = Object(J.b)(i, r) < 0,
								f = Object(J.k)(t, a),
								g = [],
								v = [];
							yn()(p, e => {
								const t = Object(J.g)(e);
								f(t.rowIndex, t.colIndex) ? g.push(e) : e !== m && v.push(e)
							});
							const x = g[0] === m;
							g.sort(J.b);
							const C = [...d.slice(0, u), ...x ? [] : [m], ...g, ...v, ...d.slice(u + p.length)],
								E = On(g, !b),
								y = On(g, b),
								O = Object(J.o)(n, E, y, b),
								k = s.merge({
									blockMap: o.BlockMapBuilder.createFromArray(C),
									selectionAfter: O
								});
							l = o.EditorState.set(e, {
								currentContent: k
							}), O !== n && (l = o.EditorState.forceSelection(l, O))
						}
						return l
					})(e, t)
				},
				_n = n("./src/reddit/components/RichTextEditor/table/Renderer/index.m.less"),
				jn = n.n(_n);
			const Sn = x.a.div("Cell", jn.a),
				Tn = x.a.div("Row", jn.a),
				wn = x.a.div("Table", jn.a),
				In = (e, t) => {
					if (!t || !e.contains(t)) return;
					let n = t;
					for (; n && n !== e;) {
						if (n instanceof HTMLElement && n.hasAttribute("data-row")) return n;
						n.parentElement && (n = n.parentElement)
					}
				},
				Pn = function(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10,
						n = e,
						o = t;
					for (; n && o > 0;) {
						if (n instanceof HTMLElement && n.dataset.table) return n;
						n.parentElement && (n = n.parentElement), o--
					}
				},
				Mn = e => {
					const {
						dataset: t
					} = e;
					if ("string" == typeof t.row && "string" == typeof t.col) return {
						rowIndex: +t.row,
						colIndex: +t.col
					}
				},
				Rn = e => {
					const t = window.getSelection(),
						{
							focusNode: n,
							anchorNode: o,
							rangeCount: s
						} = t;
					if (n !== o && s && e) {
						const n = t.getRangeAt(0);
						return Object(K.h)(n, e) && !e.contains(n.commonAncestorContainer)
					}
					return !1
				},
				Nn = e => {
					const t = p.a.Children.toArray(e),
						n = Object(B.e)(t[0]),
						{
							selection: o,
							contentState: s,
							block: r
						} = n.props,
						{
							colCount: i
						} = Object(J.g)(r);
					t.sort((e, t) => Object(J.b)(Object(B.c)(e), Object(B.c)(t)));
					const a = H()(t, i);
					let c, l, d = !1;
					if (o.getAnchorKey() !== o.getFocusKey()) {
						const e = s.getBlocksAsArray(),
							n = s.getBlockForKey(o.getStartKey()),
							i = s.getBlockForKey(o.getEndKey()),
							a = e.indexOf(n),
							u = e.indexOf(i),
							p = e.indexOf(r),
							m = p + t.length - 1;
						a < p && p < u || a < m && m < u ? d = !0 : p <= a && u <= m && (l = Object(J.g)(o.getIsBackward() ? i : n), c = Object(J.g)(o.getIsBackward() ? n : i))
					}
					return {
						rows: a,
						anchorCell: l,
						focusCell: c,
						isSelectWholeTable: d
					}
				};
			class Dn extends p.a.Component {
				constructor(e) {
					super(e), this.tableElem = null, this.onMouseDown = e => {
						if (!this.tableElem || e.nativeEvent.detail < 2) return;
						const t = window.getSelection(),
							n = t.rangeCount ? t.getRangeAt(0) : null,
							o = In(this.tableElem, t.focusNode);
						if (n && o)
							if (2 === e.nativeEvent.detail && t.isCollapsed) {
								const s = n.cloneRange();
								s.setEndAfter(o), s.toString() || (e.preventDefault(), t.selectAllChildren(o))
							} else e.nativeEvent.detail >= 3 && (t.selectAllChildren(o), e.preventDefault())
					}, this.onNativeSelectionChange = () => {
						const e = this.tableElem;
						if (!e) return;
						const t = window.getSelection();
						if (t.anchorNode === t.focusNode) return void this.resetSelection();
						const n = In(e, t.anchorNode),
							o = In(e, t.focusNode);
						n && n === o ? this.resetSelection() : n && o ? this.setCellsRange(n, o) : n || o ? this.selectWholeTable() : Rn(e) ? this.selectWholeTable() : this.resetSelection()
					}, this.resetSelection = () => {
						(this.state.anchorCell || this.state.focusCell || this.state.isSelectWholeTable) && this.setState({
							isSelectWholeTable: !1,
							focusCell: void 0,
							anchorCell: void 0
						})
					}, this.setCellsRange = (e, t) => {
						const n = Mn(t),
							o = Mn(e);
						Object(J.h)(n, this.state.focusCell) && Object(J.h)(o, this.state.anchorCell) && !this.state.isSelectWholeTable || this.setState({
							focusCell: n,
							anchorCell: o,
							isSelectWholeTable: !1
						})
					}, this.selectWholeTable = () => {
						!this.state.focusCell && this.state.isSelectWholeTable || this.setState({
							focusCell: void 0,
							isSelectWholeTable: !0
						})
					}, this.state = Nn(e.children)
				}
				componentDidMount() {
					document.addEventListener("selectionchange", this.onNativeSelectionChange)
				}
				componentWillUnmount() {
					document.removeEventListener("selectionchange", this.onNativeSelectionChange)
				}
				UNSAFE_componentWillReceiveProps(e) {
					e.children !== this.props.children && this.setState(Nn(e.children))
				}
				render() {
					const {
						rows: e,
						anchorCell: t,
						focusCell: n,
						isSelectWholeTable: o
					} = this.state;
					let s;
					o ? s = (e, t) => !0 : t && n && !Object(J.h)(t, n) && (s = Object(J.k)(t, n));
					const r = e[0].map(e => Object(J.g)(Object(B.e)(e).props.block).alignment),
						i = e.map((e, t) => p.a.createElement(Tn, {
							key: t
						}, e.map((e, n) => p.a.createElement(Sn, {
							"data-row": t,
							"data-col": n,
							"data-selected": !!s && s(t, n),
							key: n,
							style: {
								"--cell-text-alignment": r[n] ? J.a[r[n]] : void 0
							}
						}, e))));
					return p.a.createElement(wn, {
						className: s ? jn.a.isFakeSelectionActive : void 0,
						innerRef: e => this.tableElem = e,
						onMouseDown: this.onMouseDown,
						"data-table": !0
					}, i)
				}
			}
			const Ln = Object(U.Map)({
				[w.l]: {
					element: "div",
					wrapper: p.a.createElement(Dn, null)
				}
			});
			var An = n("./node_modules/lodash/isEqual.js"),
				Bn = n.n(An),
				Fn = n("./src/reddit/components/RichTextEditor/Tooltip/index.tsx"),
				Un = n("./src/reddit/icons/svgs/FormattingAlignCenter/index.tsx"),
				Kn = n("./src/reddit/icons/svgs/FormattingAlignLeft/index.tsx"),
				Wn = n("./src/reddit/icons/svgs/FormattingAlignRight/index.tsx"),
				Hn = n("./src/reddit/icons/svgs/FormattingDeleteRow/index.tsx"),
				qn = n("./src/reddit/icons/svgs/FormattingInsertRow/index.tsx"),
				zn = n("./src/reddit/models/RichTextJson/index.ts");
			var Gn = function(e) {
				arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
				const t = e.getSelection(),
					n = e.getCurrentContent(),
					s = n.getBlockForKey(t.getAnchorKey()),
					r = n.getBlockForKey(t.getFocusKey()),
					[i, a] = Object(J.e)(n, s, r);
				if (i && i === a) {
					const {
						blocks: n
					} = i;
					n.sort(J.b);
					const s = Object(J.o)(t, n[0], Z()(n));
					return ne(o.EditorState.set(e, {
						selection: s
					}), "rows")
				}
			};
			var Vn = (e, t) => {
					const n = e.getSelection(),
						s = e.getCurrentContent(),
						r = s.getBlockForKey(n.getAnchorKey()),
						i = s.getBlockForKey(n.getFocusKey()),
						[a, c] = Object(J.e)(s, r, i);
					if (!a || a !== c) return e;
					const l = Object(J.g)(r),
						d = Object(J.g)(i),
						{
							minCol: u,
							maxCol: p
						} = Object(J.f)(l, d),
						m = a.blocks.map(e => {
							const {
								colIndex: n
							} = Object(J.g)(e);
							return u <= n && n <= p ? Object(J.m)(e, {
								alignment: t
							}) : e
						}),
						h = s.getBlockMap(),
						b = s.merge({
							blockMap: h.merge(o.BlockMapBuilder.createFromArray(m)),
							selectionAfter: n,
							selectionBefore: n
						});
					return o.EditorState.push(e, b, Y.b)
				},
				Qn = n("./src/reddit/components/RichTextEditor/table/Toolbar/index.m.less"),
				Jn = n.n(Qn);

			function Xn() {
				return (Xn = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const Zn = (e, t) => n => p.a.createElement(e, Xn({}, t, n)),
				Yn = Object(Ht.f)(qn.a),
				$n = Zn(Yn, {
					orientation: "up"
				}),
				eo = Zn(Yn, {
					orientation: "right"
				}),
				to = Zn(Yn, {
					orientation: "left"
				}),
				no = Object(Ht.f)(Hn.a),
				oo = Zn(no, {
					orientation: "vertical"
				}),
				so = Object(Ht.f)(Un.a),
				ro = Object(Ht.f)(Kn.a),
				io = Object(Ht.f)(Wn.a),
				ao = Object(Ht.f)(Ft.b),
				co = x.a.wrapped(Ut.a, "ToolbarContent", Jn.a),
				lo = e => p.a.createElement(Wt.a, Xn({}, e, {
					className: Object(g.a)(Jn.a.formatterButton, e.className),
					tooltipContentClass: Jn.a.tooltip
				}));
			var uo = e => {
					const {
						editorState: t,
						onChange: n
					} = e;
					return p.a.createElement(co, null, p.a.createElement(lo, {
						Icon: ro,
						onClick: () => n(Vn(t, zn.e)),
						tooltip: s.fbt._("Left align", null, {
							hk: "45eAc"
						})
					}), p.a.createElement(lo, {
						Icon: so,
						onClick: () => n(Vn(t, zn.d)),
						tooltip: s.fbt._("Center align", null, {
							hk: "4aAfyf"
						})
					}), p.a.createElement(lo, {
						Icon: io,
						onClick: () => n(Vn(t, zn.f)),
						tooltip: s.fbt._("Right align", null, {
							hk: "3oHuXw"
						})
					}), p.a.createElement(Kt.c, null), p.a.createElement(lo, {
						Icon: to,
						onClick: () => n(un(t, "columns", "before")),
						tooltip: s.fbt._("Insert column before", null, {
							hk: "11EB6Q"
						})
					}), p.a.createElement(lo, {
						Icon: eo,
						onClick: () => n(un(t, "columns", "after")),
						tooltip: s.fbt._("Insert column after", null, {
							hk: "Ddlpl"
						})
					}), p.a.createElement(lo, {
						Icon: oo,
						onClick: () => n(ne(t, "columns")),
						tooltip: s.fbt._("Delete column", null, {
							hk: "3HaQQD"
						})
					}), p.a.createElement(Kt.c, null), p.a.createElement(lo, {
						Icon: $n,
						onClick: () => n(un(t, "rows", "before")),
						tooltip: s.fbt._("Insert row above", null, {
							hk: "1HIgn"
						})
					}), p.a.createElement(lo, {
						Icon: Yn,
						onClick: () => n(un(t, "rows", "after")),
						tooltip: s.fbt._("Insert row below", null, {
							hk: "3t7ZU"
						})
					}), p.a.createElement(lo, {
						Icon: no,
						onClick: () => n(ne(t, "rows")),
						tooltip: s.fbt._("Delete row", null, {
							hk: "3yJYqS"
						})
					}), p.a.createElement(Kt.c, null), p.a.createElement(lo, {
						Icon: ao,
						onClick: () => n(Gn(t) || t),
						tooltip: s.fbt._("Delete table", null, {
							hk: "1fK0KA"
						})
					}))
				},
				po = n("./src/reddit/components/RichTextEditor/table/ToolbarController/index.m.less"),
				mo = n.n(po);
			const ho = 20,
				bo = x.a.div("ActionButton", mo.a),
				fo = x.a.div("ToolbarWrapper", mo.a),
				go = e => {
					const t = {};
					if (!e || !document.documentElement) return t;
					const n = e.left - 185,
						o = e.left + 185 - document.documentElement.clientWidth;
					return n < 0 ? t.left = -n + ho + 2 : o > 0 && (t.left = -o + ho - 2), t
				},
				vo = e => {
					e.preventDefault(), e.stopPropagation()
				};
			class xo extends u.Component {
				constructor(e) {
					super(e), this.containerElem = null, this.setContainerRef = e => this.containerElem = e, this.onResize = e => {
						this.hideToolbar(), this.state.tooltipPosition && this.updateForCurrentSelection()
					}, this.onDocumentClick = e => {
						this.state.isToolbarActive && this.containerElem && (this.containerElem.contains(e.target) || this.hideToolbar())
					}, this.onNativeSelectionChange = () => {
						this.updateForCurrentSelection()
					}, this.updateForCurrentSelection = () => {
						const e = window.getSelection();
						if (!e.rangeCount) return void this.hideActionButton();
						const t = e.getRangeAt(0).commonAncestorContainer,
							{
								rteDomRef: n
							} = this.props;
						if (!n.contains(t)) return void this.hideActionButton();
						const o = Pn(t);
						if (!o) return void this.hideActionButton();
						const s = In(o, e.anchorNode);
						if (!s) return void this.hideActionButton();
						const r = In(o, e.focusNode);
						r ? this.updateActionButtonPosition(s, r) : this.hideActionButton()
					}, this.updateActionButtonPosition = (e, t) => {
						const n = e.getBoundingClientRect(),
							o = t.getBoundingClientRect(),
							s = {
								top: Math.min(n.top, o.top),
								left: Math.max(n.right, o.right) - ho
							};
						Bn()(this.state.tooltipPosition, s) || this.setState({
							tooltipPosition: s
						}), this.hideToolbar()
					}, this.hideActionButton = () => {
						this.hideToolbar(), this.state.tooltipPosition && this.setState({
							tooltipPosition: null
						})
					}, this.hideToolbar = () => {
						this.state.isToolbarActive && this.setState({
							isToolbarActive: !1
						})
					}, this.onActionButtonClick = e => {
						this.setState(e => ({
							isToolbarActive: !e.isToolbarActive
						})), vo(e)
					}, this.state = {
						isToolbarActive: !1,
						tooltipPosition: null
					}, this.api = {
						hideActionButton: this.hideActionButton
					}
				}
				componentDidMount() {
					const {
						onSetApi: e
					} = this.props;
					document.addEventListener("selectionchange", this.onNativeSelectionChange), document.addEventListener("click", this.onDocumentClick), window.addEventListener("resize", this.onResize), e && e(this.api)
				}
				componentWillUnmount() {
					const {
						onSetApi: e
					} = this.props;
					document.removeEventListener("selectionchange", this.onNativeSelectionChange), document.removeEventListener("click", this.onDocumentClick), window.removeEventListener("resize", this.onResize), e && e(null)
				}
				UNSAFE_componentWillReceiveProps(e) {
					const t = e.editorState.getSelection(),
						n = this.props.editorState.getSelection();
					t.getHasFocus() && Object(w.v)(o.RichUtils.getCurrentBlockType(e.editorState)) ? t !== n && this.hideToolbar() : this.hideActionButton()
				}
				render() {
					const e = !this.props.readOnly && this.state.isToolbarActive,
						{
							tooltipPosition: t
						} = this.state;
					return p.a.createElement("div", {
						ref: this.setContainerRef
					}, p.a.createElement(Fn.b, {
						targetPosition: t
					}, p.a.createElement(bo, {
						className: e ? mo.a.isPressed : void 0,
						onClick: this.onActionButtonClick,
						onMouseDown: vo,
						onMouseMove: vo
					}, e ? p.a.createElement(fo, {
						style: go(t)
					}, p.a.createElement(uo, {
						onChange: this.props.onChange,
						editorState: this.props.editorState
					})) : null)))
				}
			}
			var Co = n("./src/reddit/components/RichTextEditor/editorStateTransforms.ts");
			n("./node_modules/core-js/modules/web.dom.iterable.js");

			function Eo() {
				return (Eo = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}

			function yo() {
				return new Map
			}
			const Oo = p.a.createContext(yo());

			function ko(e) {
				class t extends p.a.Component {
					constructor() {
						super(...arguments), this.elementRef = null, this.updateElementRef = e => {
							const {
								registry: t
							} = this.props;
							this.elementRef = e, e ? t.set(this.props.entityKey, e) : t.delete(this.props.entityKey)
						}
					}
					componentWillReceiveProps(e) {
						const {
							registry: t
						} = this.props;
						this.props.entityKey !== e.entityKey && this.elementRef && (t.get(this.props.entityKey) === this.elementRef && t.delete(this.props.entityKey), t.set(e.entityKey, this.elementRef))
					}
					render() {
						return p.a.createElement("span", {
							ref: this.updateElementRef
						}, p.a.createElement(e, this.props))
					}
				}
				return e => p.a.createElement(Oo.Consumer, null, n => p.a.createElement(t, Eo({}, e, {
					registry: n
				})))
			}
			var _o = n("./src/reddit/components/RichTextEditor/emotes/helpers.ts"),
				jo = n("./src/reddit/components/RichTextEditor/emotes/decorator.m.less"),
				So = n.n(jo);
			const To = {
					strategy: _o.e,
					component: ko(e => {
						const {
							contentState: t
						} = e, n = Object(_o.i)(t), o = t.getEntity(e.entityKey), {
							id: s,
							emoji: r,
							sticker: i
						} = o.getData(), a = n ? i : r;
						return p.a.createElement("span", {
							className: Object(g.a)(So.a.emote, {
								[So.a.sticker]: n
							}),
							title: `:${s}:`,
							style: {
								backgroundImage: `url(${a.path})`,
								width: a.x
							}
						}, e.children)
					})
				},
				wo = () => To;
			var Io = n("./src/reddit/selectors/gold/enabledFeatures.ts"),
				Po = n("./src/reddit/selectors/gold/powerups/index.ts"),
				Mo = n("./src/reddit/components/RichTextEditor/emotes/Powerups/tooltipAsync.ts"),
				Ro = n("./src/higherOrderComponents/makeAsync.tsx"),
				No = Object(Ro.a)({
					ErrorComponent: () => null,
					LoadingComponent: () => null,
					getComponent: () => n.e("SpecialMembershipsEmotesTooltip").then(n.bind(null, "./src/reddit/components/RichTextEditor/emotes/SpecialMemberships/tooltip.tsx")).then(e => e.default)
				});
			var Do = e => {
				const {
					subreddit: t
				} = e, n = t.id, o = Object(m.e)(e => Object(Io.b)(e, {
					subredditId: n
				}));
				return Object(m.e)(e => Object(Po.a)(e, {
					subredditId: n
				})) ? p.a.createElement(Mo.a, e) : p.a.createElement(p.a.Fragment, null, o && p.a.createElement(No, e))
			};
			const Lo = new Set([F.a.LINK]);
			var Ao = n("./src/reddit/components/RichTextEditor/entity/link/helpers.tsx"),
				Bo = n("./src/reddit/components/RichTextEditor/entity/link/decorator.m.less"),
				Fo = n.n(Bo);
			const Uo = x.a.a("RegularLink", Fo.a),
				Ko = {
					strategy: Ao.a,
					component: ko(e => {
						const t = e.contentState.getEntity(e.entityKey),
							{
								url: n
							} = t.getData();
						return p.a.createElement(Uo, {
							href: n
						}, e.children)
					})
				},
				Wo = () => Ko;
			var Ho = n("./src/lib/linkMatchers/index.ts");
			const qo = (e, t) => {
					if (t.getType() === w.f) return [];
					return (e.match(t.getText()) || []).filter(e => ((e, t) => {
						let {
							index: n,
							lastIndex: o
						} = t;
						for (let s = n; s < o; s++) {
							if (e.getInlineStyleAt(s).contains(w.k.MONOSPACE)) return !1
						}
						return !0
					})(t, e))
				},
				zo = (e, t, n, s, r, i) => {
					const a = e.getBlockForKey(t),
						c = o.SelectionState.createEmpty(t),
						l = [],
						d = new Set;
					let u = e;
					const p = n === F.a.USER_MENTION ? F.a.USER_LINK : n,
						m = (e, t, o) => {
							let s = null;
							for (let r = e; r < t; r++) {
								const e = a.getEntityAt(r),
									t = e && u.getEntity(e);
								if (t) {
									if (t.getType() !== n) return;
									s || d.has(e) || (s = e)
								}
							}
							if (s) {
								u.getEntity(s).getData().url !== o && (u = u.mergeEntityData(s, {
									url: o
								}))
							}
							return s || (e => (u = u.createEntity(p, "MUTABLE", {
								url: e
							})).getLastCreatedEntityKey())(o)
						},
						h = (e, t, n) => {
							const s = c.merge({
								anchorOffset: e,
								focusOffset: t
							});
							u = o.Modifier.applyEntity(u, s, n)
						},
						b = (e, t) => h(e, t, null),
						f = u.getBlockForKey(t);
					qo(s, f).forEach((e, s) => {
						let {
							index: a,
							lastIndex: p,
							url: b
						} = e;
						const f = m(a, p, b);
						f && (n === F.a.USER_MENTION ? (((e, n, s) => {
							const a = u && u.getBlockForKey(t),
								l = a && a.getText().substr(e, n);
							if (l && l.replace(C.d.mention, "") && l.startsWith(C.d.mention) && C.c.test(l.replace(C.d.mention, ""))) {
								const t = c.merge({
										anchorOffset: e,
										focusOffset: e + C.d.mention.length
									}),
									a = c.merge({
										anchorOffset: e,
										focusOffset: n + C.d.mention.length
									}),
									l = c.merge({
										anchorOffset: n + C.d.mention.length,
										focusOffset: n + C.d.mention.length
									});
								u = Object(Q.b)(u, t, C.d.profile), u = o.Modifier.applyEntity(u, a, s), r && i && i(o.EditorState.forceSelection(r, l))
							}
						})(a + s, p + s, f), l.push([a + s, p + s + 1])) : (h(a, p, f), l.push([a, p])), d.add(f))
					});
					let g = 0;
					return f.findEntityRanges(e => {
						const t = e.getEntity();
						return !!t && u.getEntity(t).getType() === n
					}, (e, t) => {
						if (g >= l.length) return void b(e, t);
						const [n, o] = l[g];
						t <= n ? b(e, t) : (e < n && b(e, n - 1), t > o && b(o, t), g++)
					}), u
				},
				Go = (e, t) => {
					const n = e.getCurrentContent(),
						s = t.getCurrentContent();
					if (n === s) return e;
					const r = n.getBlockMap(),
						i = s.getBlockMap();
					let a = n;
					return r.forEach((t, n) => {
						if (n) {
							if (t === i.get(n)) return;
							a = zo(a, n, F.a.SUBREDDIT_LINK, Ho.d), a = zo(a, n, F.a.USER_LINK, Ho.g), a = zo(a, n, F.a.USER_MENTION, Ho.b, e, t => e = t)
						}
					}), e.getCurrentContent() === a ? e : (a = a.merge({
						selectionAfter: e.getCurrentContent().getSelectionAfter(),
						selectionBefore: e.getCurrentContent().getSelectionBefore()
					}), o.EditorState.set(e, {
						currentContent: a
					}))
				};
			var Vo = e => {
				const t = e.getCurrentContent();
				return t.getBlockMap().some(e => {
					if ((null == e ? void 0 : e.getType()) === w.a) return !0;
					let n = !1;
					return null == e || e.findEntityRanges(e => {
						const n = e.getEntity();
						return !!n && t.getEntity(n).getType() === F.a.EMOTE
					}, () => n = !0), n
				})
			};
			const Qo = " ".repeat(4),
				Jo = new RegExp("^ {1,4}|\\t"),
				Xo = new Set([w.b.CODE_BLOCK]),
				Zo = (e, t) => {
					const n = t.getCurrentContent(),
						s = t.getSelection(),
						r = e.shiftKey;
					let i = n,
						a = s.getAnchorOffset(),
						c = s.getFocusOffset();
					if (Object($.a)(n, s, (e, t) => {
							const n = e.getType();
							if ("paragraph" === n || !Xo.has(n)) return !1;
							let l = null;
							const d = e.getText(),
								u = o.SelectionState.createEmpty(t);
							if (r) {
								const e = d.match(Jo);
								if (e) {
									const t = e[0].length;
									i = Q.b(i, u.merge({
										focusOffset: t
									}), ""), l = -t
								}
							} else i = Q.a(i, s.isCollapsed() ? s : u, Qo), l = 4;
							null !== l && (t === s.getAnchorKey() && (a += l), t === s.getFocusKey() && (c += l))
						}), i !== n) return i = i.merge({
						selectionAfter: s.merge({
							anchorOffset: a,
							focusOffset: c
						})
					}), e.preventDefault(), o.EditorState.push(t, i, r ? "remove-range" : "insert-characters")
				},
				Yo = (e, t) => (e => {
					const t = e.getSelection(),
						n = e.getCurrentContent();
					if (!t.isCollapsed()) return oe(e);
					if (0 === t.getStartOffset()) {
						const o = n.getBlockForKey(t.getEndKey());
						if (Object(w.v)(o.getType())) return e; {
							const t = n.getBlockBefore(o.getKey());
							if (t && Object(w.v)(t.getType())) return e
						}
					}
				})(e) || ((e, t) => {
					const n = e.getSelection(),
						s = e.getCurrentContent();
					if (n.isCollapsed() && 0 === n.getStartOffset()) {
						const r = s.getBlockForKey(n.getEndKey());
						if (Object(w.o)(r.getType())) return Object(A.d)(e, r.getKey());
						if (Object(w.u)(r.getType())) {
							const t = s.getBlockBefore(r.getKey());
							return o.EditorState.forceSelection(e, Object(B.b)(t))
						}
						if (!Object(A.q)(t) && Object(B.g)(r)) {
							const t = s.getBlockBefore(r.getKey());
							if (t && Object(w.o)(t.getType())) return e = o.EditorState.push(e, Object(B.i)(s, r.getKey()), Y.f), o.EditorState.forceSelection(e, Object(B.b)(t))
						}
					}
				})(e, t),
				$o = (e, t) => (e => {
					const t = e.getSelection(),
						n = e.getCurrentContent();
					if (!t.isCollapsed()) return oe(e); {
						const o = n.getBlockForKey(t.getEndKey());
						if (t.getEndOffset() === o.getLength()) {
							if (Object(w.v)(o.getType())) return e; {
								const t = n.getBlockAfter(o.getKey());
								if (t && Object(w.v)(t.getType())) return e
							}
						}
					}
				})(e) || ((e, t) => {
					const n = e.getSelection(),
						s = e.getCurrentContent();
					if (!n.isCollapsed()) return;
					const r = s.getBlockForKey(n.getEndKey());
					if (n.getEndOffset() === r.getLength()) {
						if (Object(w.o)(r.getType())) return Object(A.d)(e, r.getKey()); {
							const i = s.getBlockAfter(n.getEndKey());
							if (i && Object(w.o)(i.getType())) {
								if (Object(A.q)(t)) return Object(A.d)(e, i.getKey());
								if (Object(B.g)(r)) return e = o.EditorState.push(e, Object(B.i)(s, r.getKey()), Y.f), o.EditorState.forceSelection(e, Object(B.b)(i))
							}
						}
					}
				})(e, t),
				es = e => {
					const t = e.getSelection();
					if (!t.isCollapsed()) return !1;
					const n = o.RichUtils.getCurrentBlockType(e);
					if (!w.c.includes(n)) return !1;
					if (t.getFocusOffset() > 0) {
						if ("\n" === e.getCurrentContent().getBlockForKey(t.getFocusKey()).getText()[t.getFocusOffset() - 1]) return !1
					}
					return !0
				};
			var ts = n("./src/lib/memoizeByReference/index.ts");
			const ns = Object(ts.a)(e => {
					const t = e.getSelection();
					if (!t.isCollapsed()) return;
					const n = t.getStartOffset(),
						o = e.getCurrentContent(),
						s = o.getBlockForKey(t.getFocusKey());
					if (s.getType() !== w.n) return;
					const r = s.getText();
					if (r.startsWith("1.") && 2 === n) return w.i.ORDERED;
					if (r.startsWith("*") && 1 === n) {
						const e = o.getBlockBefore(s.getKey());
						if (e && e.getType() === w.n && e.getText().startsWith("* ")) return;
						return w.i.UNORDERED
					}
				}),
				os = e => {
					const t = ns(e);
					if (!t) return e;
					const n = Object(Co.a)(e);
					let s = o.Modifier.replaceText(n.getCurrentContent(), n.getSelection().merge({
						anchorOffset: 0
					}), "");
					return s = o.Modifier.setBlockType(s, s.getSelectionAfter(), t), o.EditorState.push(n, s, Y.c)
				};
			var ss = n("./src/reddit/components/RichTextEditor/helpers/styles.ts");
			const rs = Object(Ro.a)({
				ErrorComponent: () => null,
				LoadingComponent: () => null,
				getComponent: () => n.e("GifTooltip").then(n.bind(null, "./src/reddit/components/RichTextEditor/media/GifTooltip/index.tsx")).then(e => e.default)
			});

			function is(e) {
				return p.a.createElement(rs, e)
			}
			var as = n("./src/reddit/components/RichTextEditor/spoiler/helpers.ts"),
				cs = n("./src/reddit/components/RichTextEditor/spoiler/decorator.m.less"),
				ls = n.n(cs);
			const ds = e => p.a.createElement("span", {
					className: ls.a.spoiler
				}, p.a.createElement("span", null), e.children, p.a.createElement("span", null)),
				us = () => ({
					strategy: as.a,
					component: ds
				});
			var ps = n("./src/reddit/components/FocusableContent/index.tsx"),
				ms = n("./src/reddit/components/RichTextEditor/Blockquote/index.m.less"),
				hs = n.n(ms);
			const bs = x.a.div("BlockQuoteWrapper", hs.a),
				fs = Object(U.Map)({
					[w.e]: {
						element: "blockquote",
						wrapper: p.a.createElement(bs, null)
					}
				});
			var gs = n("./src/reddit/components/RichTextEditor/CodeBlock/index.m.less"),
				vs = n.n(gs);
			const xs = Object(U.Map)({
				[w.f]: {
					element: "code",
					wrapper: p.a.createElement(e => p.a.createElement("div", {
						className: vs.a.CodeBlockWrapper
					}, e.children), null)
				}
			});
			var Cs = n("./node_modules/bowser/src/bowser.js"),
				Es = n.n(Cs),
				ys = n("./node_modules/lodash/includes.js"),
				Os = n.n(ys),
				ks = n("./src/reddit/components/RichTextEditor/DragController/helpers.ts"),
				_s = n("./src/reddit/components/RichTextEditor/DragController/index.m.less"),
				js = n.n(_s);
			const Ss = x.a.div("DropLine", js.a),
				Ts = x.a.wrapped(Fn.b, "Tooltip", js.a);
			class ws extends u.Component {
				constructor(e) {
					super(e), this.dragCount = 0, this.setContainerRef = e => this.containerRef = e, this.preventDocumentDrop = e => {
						!! function e(t) {
							return t.draggable ? t : t.parentElement ? e(t.parentElement) : null
						}(e.target) || (e.preventDefault(), e.stopPropagation())
					}, this.onDragOver = e => {
						const t = Os()(e.dataTransfer.types, ze);
						if (!t) {
							if (!Object(ks.c)(e.dataTransfer) || !this.props.allowMediaUploads) return
						}
						if (!t && !Object(ks.c)(e.dataTransfer)) return;
						e.preventDefault();
						try {
							e.dataTransfer.dropEffect = t ? "move" : "copy"
						} catch (r) {}
						const {
							editorState: n
						} = this.props;
						let o = null;
						const s = Object(ks.b)(n, e);
						if (s) {
							const e = this.containerRef.getBoundingClientRect().left;
							o = {
								top: s.clientY,
								left: e
							}
						}
						Bn()(o, this.state.point) || this.setState({
							point: o
						})
					}, this.onDragEnter = e => {
						this.dragCount++
					}, this.onDragLeave = e => {
						this.dragCount--, 0 === this.dragCount && this.state.point && this.setState({
							point: null
						})
					}, this.onDrop = e => {
						const t = () => {
								this.dragCount = 0, this.setState({
									point: null
								})
							},
							n = Es.a.msie ? null : e.dataTransfer.getData(ze),
							o = Object(ks.a)(e.dataTransfer);
						if (!(n || o.length && this.props.allowMediaUploads)) return void t();
						const {
							editorState: s
						} = this.props, r = Object(ks.b)(s, e);
						if (!r) return void t();
						e.preventDefault(), e.stopPropagation();
						const i = r.isBefore ? B.a.before : B.a.after;
						n ? this.props.onBlockMove(n, r.blockKey, i) : setTimeout(() => {
							this.props.onFilesDrop(o, r.blockKey, i)
						}), t()
					}, this.state = {
						point: null
					}
				}
				componentDidMount() {
					document.addEventListener("drop", this.preventDocumentDrop), document.addEventListener("dragover", this.preventDocumentDrop)
				}
				componentWillUnmount() {
					document.removeEventListener("drop", this.preventDocumentDrop), document.removeEventListener("dragover", this.preventDocumentDrop)
				}
				render() {
					const {
						children: e
					} = this.props, {
						point: t
					} = this.state, n = p.a.Children.only(e);
					return p.a.createElement("div", {
						className: Object(g.a)(js.a.container, {
							[js.a.hideCaret]: !!t
						}),
						onDragEnter: this.onDragEnter,
						onDragLeave: this.onDragLeave,
						onDragOver: this.onDragOver,
						onDrop: this.onDrop,
						ref: this.setContainerRef
					}, p.a.createElement("div", null, n), p.a.createElement(Ts, {
						targetPosition: t
					}, p.a.createElement(Ss, null)))
				}
			}
			var Is = n("./node_modules/draft-js/lib/DraftPasteProcessor.js"),
				Ps = n.n(Is),
				Ms = n("./node_modules/draft-js/lib/getEntityKeyForSelection.js"),
				Rs = n.n(Ms),
				Ns = n("./node_modules/draft-js/lib/splitTextIntoTextBlocks.js"),
				Ds = n.n(Ns),
				Ls = n("./src/reddit/components/RichTextEditor/entity/cloneEntitiesInFragment.ts"),
				As = n("./src/reddit/components/RichTextEditor/entity/applyEntityToContentBlock.ts");

			function Bs(e, t, n) {
				const s = Object(o.convertFromHTML)(t, void 0, n);
				if (s) {
					const {
						contentBlocks: t,
						entityMap: n
					} = s;
					if (t) {
						const s = o.BlockMapBuilder.createFromArray(function(e) {
							return e.map(e => Object(w.r)(e.getType()) ? M(e) : e)
						}(t));
						return [e.set("entityMap", n), s]
					}
				}
				return [e, null]
			}

			function Fs(e, t, n) {
				const s = Ds()(t),
					r = n && 1 === s.length ? n : o.CharacterMetadata.create(),
					i = Ps.a.processText(s, r).map(e => e.merge({
						type: w.n
					}));
				return o.BlockMapBuilder.createFromArray(i)
			}
			const Us = e => {
					if (!e) return null;
					const t = (new DOMParser).parseFromString(e, "text/html").querySelector("[data-reddit-rtjson]");
					return t && t.getAttribute("data-reddit-rtjson")
				},
				Ks = e => {
					if (Ce()) return {
						text: window.clipboardData.getData("text"),
						html: null
					}; {
						const t = e.clipboardData.getData("text/html");
						return {
							text: e.clipboardData.getData("text/plain"),
							html: t
						}
					}
				};

			function Ws(e, t, n, s) {
				const {
					text: r,
					html: i
				} = Ks(n), a = function(e, t, n, o) {
					const s = {
							text: t,
							html: n,
							rtjson: o,
							fragment: null
						},
						r = e.getClipboard();
					return r && n && function(e, t, n, o) {
						return -1 !== t.indexOf(o) || 1 === e.size && e.first().getText() === n
					}(r, n, t, e.getEditorKey()) && (s.fragment = r), s
				}(t, r, i, i && Us(i));
				t.getClipboard() && !a.fragment && t.setClipboard(null);
				const c = e.getCurrentContent(),
					l = e.getSelection(),
					d = e.getCurrentInlineStyle(),
					u = t.props.blockRenderMap;
				let p = null,
					m = c;
				if (!(p = function(e, t, n) {
						const o = e.getBlockForKey(t.getStartKey()),
							s = e.getBlockForKey(t.getEndKey());
						if (o.getType() === w.f || s.getType() === w.f) return Fs(0, n).map(e => e.merge({
							type: w.f,
							depth: 0
						}))
					}(m, l, a.text)) && a.fragment && (p = a.fragment, [m, p] = Object(Ls.b)(m, p), p = je(p, s)), !p && a.rtjson && (p = function(e) {
						const t = JSON.parse(e);
						return Object(o.convertFromRaw)(t).getBlockMap()
					}(a.rtjson)), !p && a.html && ([m, p] = Bs(m, a.html, u)), !p && a.text) {
					const e = function(e, t, n) {
						return o.CharacterMetadata.create({
							style: n,
							entity: Rs()(e, t)
						})
					}(m, l, d);
					p = Fs(0, a.text, e), [m, p] = function(e, t) {
						let n = e,
							o = t;
						return t.forEach(e => {
							const t = e.getText(),
								s = Ho.c.match(t);
							if (!s) return;
							let r = e;
							s.forEach(e => {
								let {
									index: t,
									lastIndex: s,
									url: i
								} = e;
								const a = (n = n.createEntity(F.a.LINK, "MUTABLE", {
									url: i
								})).getLastCreatedEntityKey();
								r = Object(As.a)(r, t, s, a), o = o.set(r.getKey(), r)
							})
						}), [n, o]
					}(m, p)
				}
				if (p) return m = function(e, t, n) {
					if (n.isEmpty()) return e;
					let o = de(e, t, n) || Se(e, t, n);
					return o || (o = Q.c(e, t, n))
				}(m, l, p), o.EditorState.push(e, m, Y.e)
			}
			var Hs = n("./src/reddit/components/RichTextEditor/entity/getSelectionEntityInfo.ts"),
				qs = n("./src/reddit/components/RichTextEditor/Tooltip/getSelectionClientRect.ts"),
				zs = n("./src/reddit/components/RichTextEditor/LinksController/LinkDetailsPopup/index.m.less"),
				Gs = n.n(zs);
			const Vs = x.a.div("LinkDetailsBox", Gs.a),
				Qs = x.a.a("Link", Gs.a),
				Js = x.a.a("LinkButton", Gs.a);
			var Xs = e => p.a.createElement("div", null, p.a.createElement(Vs, {
					onMouseDown: e => e.preventDefault()
				}, p.a.createElement(Qs, {
					href: e.url,
					target: "_blank"
				}, e.url), p.a.createElement("span", null, " – "), p.a.createElement(Js, {
					onClick: () => e.onStartEdit(),
					role: "button"
				}, s.fbt._("Change", null, {
					hk: "3aOmcP"
				})), p.a.createElement("span", null, " | "), p.a.createElement(Js, {
					onClick: () => e.onRemove(),
					role: "button"
				}, s.fbt._("Remove", null, {
					hk: "3tYl0U"
				})))),
				Zs = n("./src/reddit/controls/Input/index.tsx"),
				Ys = n("./src/reddit/components/RichTextEditor/LinksController/LinkEditorPopup/index.m.less"),
				$s = n.n(Ys);
			const er = x.a.form("EditForm", $s.a),
				tr = x.a.wrapped(e => p.a.createElement("div", e, e.children), "LinkEditorBox", $s.a),
				nr = x.a.wrapped(Zs.a, "Input", $s.a),
				or = x.a.label("Label", $s.a),
				sr = x.a.div("HintAndButtonRow", $s.a),
				rr = x.a.span("InvalidUrlHint", $s.a),
				ir = x.a.wrapped(st.l, "SubmitButton", $s.a),
				ar = e => {
					e && (e.focus(), e.select())
				},
				cr = / /g,
				lr = /\.{3}/g,
				dr = e => e.replace(cr, "%20").replace(lr, "%2E%2E%2E");
			class ur extends u.Component {
				constructor(e) {
					super(e), this.focused = !1, this.focusLostTimer = 0, this.textInputElementRef = null, this.urlInputElementRef = null, this.onEdited = () => {
						const e = this.state.url.trim(),
							t = dr(e),
							n = Object(Ho.f)(t);
						if (!n) return this.setState({
							isInvalidUrl: !0
						}), void(this.urlInputElementRef && this.urlInputElementRef.focus());
						const o = n.url;
						this.props.onEdited(o, this.state.displayText.trim() || e)
					}, this.onFocus = () => {
						this.focused = !0
					}, this.onBlur = () => {
						this.focused = !1, this.focusLostTimer = window.setTimeout(() => {
							this.focused || this.props.onFocusLost()
						}, 0)
					}, this.onClick = e => {
						e.stopPropagation()
					}, this.handleUrlChange = e => {
						const t = e.target.value;
						let {
							isInvalidUrl: n
						} = this.state;
						n && Object(Ho.e)(Ho.c, t) && (n = !1), this.setState({
							url: t,
							isInvalidUrl: n
						})
					}, this.handleDisplayTextChange = e => {
						this.setState({
							displayText: e.target.value
						})
					}, this.handleSubmit = e => {
						this.onEdited(), e.preventDefault()
					}, this.state = {
						url: e.url,
						displayText: e.displayText,
						isInvalidUrl: !1
					}
				}
				componentDidMount() {
					Object(Ho.e)(Ho.c, this.state.displayText) ? ar(this.textInputElementRef) : ar(this.urlInputElementRef)
				}
				componentWillUnmount() {
					this.focusLostTimer && clearTimeout(this.focusLostTimer)
				}
				render() {
					const {
						isInsertMode: e
					} = this.props;
					return p.a.createElement(tr, {
						tabIndex: 0,
						onClick: this.onClick,
						onBlur: this.onBlur,
						onFocus: this.onFocus
					}, p.a.createElement(er, {
						onSubmit: this.handleSubmit
					}, p.a.createElement(or, null, s.fbt._("Text:", null, {
						hk: "13SRB5"
					}), p.a.createElement(nr, {
						innerRef: e => this.textInputElementRef = e,
						type: "text",
						placeholder: s.fbt._("Title of link (optional)", null, {
							hk: "17GvI"
						}),
						value: this.state.displayText,
						onChange: this.handleDisplayTextChange
					})), p.a.createElement(or, null, s.fbt._("Link:", null, {
						hk: "3XqufJ"
					}), p.a.createElement(nr, {
						innerRef: e => this.urlInputElementRef = e,
						type: "text",
						placeholder: s.fbt._("Paste or type a link", null, {
							hk: "3QWoAf"
						}),
						value: this.state.url,
						onChange: this.handleUrlChange
					})), p.a.createElement(sr, null, p.a.createElement(ir, {
						type: "submit",
						disabled: this.state.isInvalidUrl
					}, e ? s.fbt._("Insert", null, {
						hk: "3H7yaS"
					}) : s.fbt._("Apply", null, {
						hk: "3mAjVQ"
					})), this.state.isInvalidUrl ? p.a.createElement(rr, null, s.fbt._("Link doesn't look right", null, {
						hk: "1BHfKz"
					})) : null)))
				}
			}

			function pr(e, t, n) {
				const o = e.getCurrentContent(),
					s = {
						text: "",
						url: ""
					};
				if (t.isCollapsed()) return s;
				if (n) s.text = n.entityText, s.url = o.getEntity(n.entityKey).getData().url;
				else {
					s.text = function(e, t) {
						if (e.getStartKey() !== e.getEndKey()) throw new Error("Selection must be in a single block");
						return e.isCollapsed() ? "" : t.getBlockForKey(e.getStartKey()).getText().slice(e.getStartOffset(), e.getEndOffset())
					}(t, e.getCurrentContent());
					const n = Object(Ho.e)(Ho.c, s.text);
					n && (s.url = n.url)
				}
				return s
			}

			function mr(e, t) {
				return o.EditorState.set(e, {
					currentContent: o.Modifier.removeInlineStyle(e.getCurrentContent(), t, w.k.HIGHLIGHT)
				})
			}
			class hr extends u.Component {
				constructor(e) {
					super(e), this.api = null, this.updateTooltipPosition = null, this.lastEditorSelectionClientRect = null, this.editLinkInSelection = e => {
						const {
							editorState: t
						} = this.props;
						let n = e,
							s = t;
						const r = t.getCurrentContent();
						if (!Object(Ao.e)(r, e)) return !1;
						const i = Object(Hs.a)(r, e);
						if (i) {
							if (r.getEntity(i.entityKey).getType() !== F.a.LINK) return !1;
							n = i.entitySelection
						} else this.isEditorFocused() && (this.lastEditorSelectionClientRect = Object(qs.a)());
						return this.state.linkSelection && (s = mr(t, this.state.linkSelection)), s = function(e, t) {
							return o.EditorState.set(e, {
								currentContent: o.Modifier.applyInlineStyle(e.getCurrentContent(), t, w.k.HIGHLIGHT)
							})
						}(t, n), this.props.onChange(s, () => {
							this.setState({
								linkSelection: n,
								linkEntity: i
							})
						}), !0
					}, this.hidePopup = () => {
						this.interruptLinkEditing(), this.hideDetailsPopup()
					}, this.showDetailsPopup = () => {
						this.state.isDetailsPopupActive || this.setState({
							isDetailsPopupActive: !0
						})
					}, this.hideDetailsPopup = () => {
						this.state.isDetailsPopupActive && this.setState({
							isDetailsPopupActive: !1
						})
					}, this.updatePosition = () => {
						if (!this.updateTooltipPosition) return;
						const {
							editorState: e,
							containerRef: t
						} = this.props, n = e.getCurrentContent();
						let o;
						if (this.state.linkSelection) {
							const e = Object(Hs.a)(n, this.state.linkSelection);
							if (e) {
								const t = this.props.entityElementRegistry.get(e.entityKey);
								o = t && t.getBoundingClientRect()
							} else this.lastEditorSelectionClientRect && (o = this.lastEditorSelectionClientRect)
						} else {
							const n = Object(Ao.c)(e);
							if (n) {
								const e = this.props.entityElementRegistry.get(n.entityKey);
								o = e && e.getBoundingClientRect()
							} else o = t && t.getBoundingClientRect()
						}
						o && (this.updateTooltipPosition({
							left: o.left,
							top: o.bottom
						}), this.lastEditorSelectionClientRect = null)
					}, this.handleLink = (e, t) => {
						const {
							linkSelection: n
						} = this.state, {
							editorState: s
						} = this.props;
						let r = s;
						n && (n.isCollapsed() || (r = mr(s, n)), void 0 !== e && (r = Object(Ao.h)(r, n, e, t)), this.setState({
							linkSelection: null,
							linkEntity: null
						}), r !== s && (r = o.EditorState.forceSelection(r, r.getSelection()), this.props.onChange(r)))
					}, this.onLinkEdited = (e, t) => {
						this.handleLink(e, t)
					}, this.interruptLinkEditing = () => this.handleLink(), this.isEditorFocused = () => this.props.editorState.getSelection().getHasFocus(), this.onStartEditFocusedLink = () => {
						const {
							editorState: e
						} = this.props, t = Object(Ao.c)(e);
						t && this.editLinkInSelection(t.entitySelection)
					}, this.onRemoveFocusedLink = () => {
						const {
							editorState: e
						} = this.props, t = Object(Ao.c)(e);
						t && this.props.onChange(Object(Ao.h)(e, t.entitySelection, ""))
					}, this.renderEditorPopup = () => {
						const {
							linkSelection: e,
							linkEntity: t
						} = this.state, {
							editorState: n
						} = this.props;
						if (!e) return null;
						const {
							text: o,
							url: s
						} = pr(n, e, t);
						return p.a.createElement(ur, {
							url: s,
							displayText: o,
							isInsertMode: !t,
							onEdited: this.onLinkEdited,
							onFocusLost: this.interruptLinkEditing
						})
					}, this.renderDetailsPopup = () => {
						const e = Object(Ao.c)(this.props.editorState);
						return e && this.isEditorFocused() && this.state.isDetailsPopupActive ? p.a.createElement(Xs, {
							url: e.url,
							onStartEdit: this.onStartEditFocusedLink,
							onRemove: this.onRemoveFocusedLink
						}) : null
					}, this.state = {
						isDetailsPopupActive: !1,
						linkSelection: null,
						linkEntity: null
					}, this.api = {
						editLinkInSelection: this.editLinkInSelection,
						hidePopup: this.hidePopup
					}
				}
				componentDidMount() {
					const {
						onSetApi: e
					} = this.props;
					this.api && e && e(this.api)
				}
				componentWillUnmount() {
					this.props.onSetApi && this.props.onSetApi(null)
				}
				componentDidUpdate(e, t) {
					t.linkSelection === this.state.linkSelection && e.editorState === this.props.editorState || (this.showDetailsPopup(), this.updatePosition())
				}
				render() {
					return p.a.createElement(Fn.b, {
						onSetPositionUpdater: e => this.updateTooltipPosition = e,
						trianglePlacement: Fn.a.Above
					}, this.renderEditorPopup() || this.renderDetailsPopup())
				}
			}
			var br = n("./src/reddit/components/RichTextEditor/OrderedList/index.m.less"),
				fr = n.n(br);
			const gr = x.a.ol("OrderedListWrapper", fr.a),
				vr = Object(U.Map)({
					[w.i.ORDERED]: {
						element: "li",
						aliasedElements: ["li"],
						wrapper: p.a.createElement(gr, null)
					}
				});
			var xr = n("./src/reddit/components/RichTextEditor/Paragraph/index.m.less"),
				Cr = n.n(xr);
			const Er = x.a.div("ParagraphWrapper", Cr.a),
				yr = Object(U.Map)({
					[w.n]: {
						element: "div",
						aliasedElements: ["p"],
						wrapper: p.a.createElement(Er, null)
					}
				});
			var Or = n("./src/reddit/components/RichTextEditor/RTEState/index.tsx");
			var kr = n("./src/reddit/components/RichTextEditor/TextRendering/index.m.less"),
				_r = n.n(kr);
			const jr = Object(ts.a)(() => ({
					[w.k.SUPERSCRIPT]: {
						position: "relative",
						top: "-0.4em",
						fontSize: "0.7em",
						lineHeight: "0.7em"
					},
					[w.k.HIGHLIGHT]: {
						backgroundColor: "#b8e0f9"
					},
					[w.k.UNDERLINE]: {
						textDecoration: "none"
					},
					[w.k.MONOSPACE]: {
						backgroundColor: "var(--newRedditTheme-field)",
						caretColor: "#000",
						color: "var(--newRedditTheme-monospaceColor)",
						fontFamily: "Noto Mono, Menlo, Monaco, Consolas, monospace",
						padding: "0.1em 0.2em",
						fontSize: "0.8em",
						borderRadius: "3px"
					}
				})),
				Sr = x.a.div("H1", _r.a),
				Tr = x.a.div("H2", _r.a),
				wr = x.a.div("H3", _r.a),
				Ir = x.a.div("H4", _r.a),
				Pr = x.a.div("H5", _r.a),
				Mr = x.a.div("H6", _r.a),
				Rr = e => ({
					component: t => p.a.createElement(e, null, p.a.createElement(o.EditorBlock, t)),
					editable: !0
				}),
				Nr = {
					[w.g.H1]: Rr(Sr),
					[w.g.H2]: Rr(Tr),
					[w.g.H3]: Rr(wr),
					[w.g.H4]: Rr(Ir),
					[w.g.H5]: Rr(Pr),
					[w.g.H6]: Rr(Mr)
				},
				Dr = ["italic normal 1em 'Noto Sans'", "italic bold 1em 'Noto Sans'", "normal bold 1em 'Noto Sans'"],
				Lr = () => {
					const e = document.fonts;
					e && e.load && Dr.forEach(t => e.load(t))
				};
			var Ar = n("./src/reddit/components/RichTextEditor/UnorderedList/index.m.less"),
				Br = n.n(Ar);
			const Fr = x.a.ul("UnorderedListWrapper", Br.a),
				Ur = Object(U.Map)({
					[w.i.UNORDERED]: {
						element: "li",
						aliasedElements: ["li"],
						wrapper: p.a.createElement(Fr, null)
					}
				});
			var Kr = n("./src/reddit/contexts/InsideOverlay.tsx"),
				Wr = n("./src/reddit/actions/subredditAutocomplete/index.ts"),
				Hr = n("./src/reddit/controls/SubredditDropdown/index.m.less"),
				qr = n.n(Hr);

			function zr() {
				return (zr = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const Gr = e => {
				let {
					isFocused: t,
					...n
				} = e;
				return p.a.createElement("div", zr({
					className: Object(g.a)(qr.a.entry, {
						[qr.a.mIsFocused]: t
					})
				}, n))
			};
			class Vr extends u.Component {
				constructor(e) {
					super(e), this.mouseDown = !1, this.onMouseUp = () => {
						this.mouseDown && (this.props.onEntrySelect(this.props.entry), this.mouseDown = !1)
					}, this.onMouseDown = e => {
						this.mouseDown = !0, e.preventDefault()
					}, this.onMouseOver = () => {
						this.props.onEntryFocus(this.props.entry)
					}, this.mouseDown = !1
				}
				componentDidUpdate() {
					this.mouseDown = !1
				}
				render() {
					return p.a.createElement(Gr, {
						isFocused: this.props.isFocused,
						onMouseDown: this.onMouseDown,
						onMouseUp: this.onMouseUp,
						onMouseOver: this.onMouseOver
					}, this.props.children)
				}
			}
			var Qr = n("./src/reddit/helpers/name/index.ts"),
				Jr = n("./src/reddit/selectors/subredditAutocomplete.ts");
			const Xr = Object(h.c)({
				subredditSuggestions: (e, t) => {
					const n = Object(Jr.d)(e, t);
					return n ? n.subreddits : []
				}
			});
			class Zr extends u.Component {
				constructor(e) {
					super(e), this.api = null, this.onEntrySelect = e => {
						this.props.onSelect(this.props.subredditSuggestions[e].name)
					}, this.onEntryFocus = e => {
						this.setState({
							selectedSuggestionIndex: e
						})
					}, this.moveUp = () => {
						if (this.props.subredditSuggestions.length > 1) {
							let e = this.state.selectedSuggestionIndex - 1;
							return e = e < 0 ? this.props.subredditSuggestions.length - 1 : e, this.setState({
								selectedSuggestionIndex: e
							}), !0
						}
						return !1
					}, this.moveDown = () => {
						if (this.props.subredditSuggestions.length > 1) {
							const e = (this.state.selectedSuggestionIndex + 1) % this.props.subredditSuggestions.length;
							return this.setState({
								selectedSuggestionIndex: e
							}), !0
						}
						return !1
					}, this.selectCurrent = () => {
						if (this.props.subredditSuggestions.length) {
							const e = this.props.subredditSuggestions[this.state.selectedSuggestionIndex];
							return e && this.props.onSelect(e.name), !0
						}
						return !1
					}, this.state = {
						selectedSuggestionIndex: 0
					}, this.requestSubredditAutocomplete = i()(this.requestSubredditAutocomplete.bind(this), 200, {
						maxWait: 200
					}), this.api = {
						moveUp: this.moveUp,
						moveDown: this.moveDown,
						selectCurrent: this.selectCurrent
					}
				}
				componentDidMount() {
					this.requestSubredditAutocomplete(this.props.substring), this.props.onDropdownApi(this.api)
				}
				componentWillUnmount() {
					this.props.onDropdownApi(null)
				}
				componentWillReceiveProps(e) {
					e.substring !== this.props.substring && (this.requestSubredditAutocomplete(e.substring), this.setState({
						selectedSuggestionIndex: 0
					}))
				}
				requestSubredditAutocomplete(e) {
					this.props.onGetSubredditAutocomplete(e)
				}
				render() {
					return this.props.subredditSuggestions.length ? p.a.createElement("div", {
						className: Object(g.a)(qr.a.list, this.props.className)
					}, this.props.subredditSuggestions.map((e, t) => p.a.createElement(Vr, {
						entry: t,
						isFocused: t === this.state.selectedSuggestionIndex,
						key: e.name,
						onEntrySelect: this.onEntrySelect,
						onEntryFocus: this.onEntryFocus
					}, Object(Qr.d)(e.name)))) : null
				}
			}
			var Yr = Object(m.b)(Xr, (e, t) => ({
					onGetSubredditAutocomplete: t => {
						e(Wr.a(t))
					}
				}))(Zr),
				$r = n("./src/reddit/selectors/comments.ts");
			const ei = Object(h.c)({
				commentAuthors: $r.h
			});
			class ti extends u.Component {
				constructor(e) {
					super(e), this.api = null, this.onEntrySelect = e => {
						this.props.onSelect(this.state.userSuggestions[e])
					}, this.onEntryFocus = e => {
						this.setState({
							selectedSuggestionIndex: e
						})
					}, this.moveUp = () => {
						if (this.state.userSuggestions.length > 1) {
							let e = this.state.selectedSuggestionIndex - 1;
							return e = e < 0 ? this.state.userSuggestions.length - 1 : e, this.setState({
								selectedSuggestionIndex: e
							}), !0
						}
						return !1
					}, this.moveDown = () => {
						if (this.state.userSuggestions.length > 1) {
							const e = (this.state.selectedSuggestionIndex + 1) % this.state.userSuggestions.length;
							return this.setState({
								selectedSuggestionIndex: e
							}), !0
						}
						return !1
					}, this.selectCurrent = () => {
						if (this.state.userSuggestions.length) {
							const e = this.state.userSuggestions[this.state.selectedSuggestionIndex];
							return e && this.props.onSelect(e), !0
						}
						return !1
					}, this.state = {
						userSuggestions: [],
						selectedSuggestionIndex: 0
					}, this.api = {
						moveUp: this.moveUp,
						moveDown: this.moveDown,
						selectCurrent: this.selectCurrent
					}
				}
				componentDidMount() {
					this.props.onDropdownApi(this.api), this.setState({
						userSuggestions: this.filterUsers(this.props.substring)
					})
				}
				componentWillUnmount() {
					this.props.onDropdownApi(null)
				}
				componentWillReceiveProps(e) {
					e.substring !== this.props.substring && this.setState({
						selectedSuggestionIndex: 0,
						userSuggestions: this.filterUsers(e.substring)
					})
				}
				filterUsers(e) {
					const {
						commentAuthors: t
					} = this.props;
					return t.filter(t => t.toLowerCase().startsWith(e.toLowerCase()))
				}
				render() {
					return this.state.userSuggestions.length ? p.a.createElement("div", {
						className: Object(g.a)(qr.a.list, this.props.className)
					}, this.state.userSuggestions.map((e, t) => p.a.createElement(Vr, {
						key: t,
						entry: t,
						onEntryFocus: this.onEntryFocus,
						onEntrySelect: this.onEntrySelect,
						isFocused: t === this.state.selectedSuggestionIndex
					}, Object(Qr.e)(e)))) : null
				}
			}
			var ni = Object(m.b)(ei)(ti),
				oi = n("./node_modules/lodash/dropRightWhile.js"),
				si = n.n(oi),
				ri = n("./node_modules/lodash/flatMap.js"),
				ii = n.n(ri),
				ai = n("./node_modules/lodash/reduceRight.js"),
				ci = n.n(ai),
				li = n("./node_modules/lodash/trimEnd.js"),
				di = n.n(li),
				ui = n("./node_modules/lodash/trimStart.js"),
				pi = n.n(ui),
				mi = n("./src/lib/forEachGroup/index.ts");

			function hi(e, t) {
				const n = [],
					o = e.withMutations(e => {
						for (; e.size && t(e.first());) n.push(e.first()), e.shift()
					});
				return {
					popped: n,
					stack: o
				}
			}
			var bi = n("./src/lib/unicodeUtils/index.ts"),
				fi = n("./src/reddit/helpers/richTextJson/index.ts"),
				gi = n("./src/reddit/models/RichTextJson/nodeMakers.ts");
			const vi = {
				BOLD: zn.k.bold,
				ITALIC: zn.k.italic,
				MONOSPACE: zn.k.monospace,
				STRIKETHROUGH: zn.k.strikethrough,
				SUBSCRIPT: zn.k.subscript,
				SUPERSCRIPT: zn.k.superscript,
				UNDERLINE: zn.k.underline
			};
			var xi = (e, t) => Ci(e.getBlockMap(), e, t);
			const Ci = (e, t, n) => {
					const o = [];
					let s = e.toStack();
					for (; s.size;) {
						const e = s.first(),
							r = e.getType();
						switch (s = s.shift(), r) {
							case w.g.H1:
							case w.g.H2:
							case w.g.H3:
							case w.g.H4:
							case w.g.H5:
							case w.g.H6:
								o.push(ji(e, t));
								break;
							case w.e: {
								const {
									popped: n,
									stack: r
								} = hi(s, e => e.getType() === w.e);
								s = r, o.push(Si([e, ...n], t));
								break
							}
							case w.f: {
								const {
									popped: t,
									stack: n
								} = hi(s, e => e.getType() === w.f);
								s = n, o.push(Ti([e, ...t]));
								break
							}
							case w.i.ORDERED:
							case w.i.UNORDERED: {
								const {
									popped: n,
									stack: i
								} = hi(s, e => e.getType() === r);
								s = i, o.push(wi([e, ...n], t));
								break
							}
							case w.l: {
								const {
									popped: n,
									stack: r
								} = hi(s, e => Object(w.v)(e.getType()));
								s = r, o.push(Ii([e, ...n], t));
								break
							}
							case w.a: {
								let t = s.first();
								t && Object(w.u)(t.getType()) ? s = s.shift() : t = void 0, o.push(Pi(e, t, n));
								break
							}
							case w.n:
							default:
								o.push(ki(e, t))
						}
					}
					return o
				},
				Ei = e => e.reduce((e, t) => t === w.k.UNDERLINE || t === w.k.SUBSCRIPT ? e : e | (vi[t] || 0) | 0, 0),
				yi = (e, t) => {
					const n = [],
						o = Object(bi.b)(e);
					return Object(mi.a)(t, {
						keyFn: e => e.getStyle()
					}, (t, s, r, i) => {
						if (s.isEmpty()) return;
						const a = e.slice(r, i),
							c = r + (a.length - pi()(a).length),
							l = i - (a.length - di()(a).length),
							d = l - c,
							u = o[c],
							p = o[l] - u;
						d > 0 && n.push([Ei(s), u, p])
					}), n.length ? n : null
				},
				Oi = (e, t) => {
					const n = e.getText(),
						o = e.getCharacterList(),
						s = [],
						r = w.d.includes(e.getType()),
						i = w.c.includes(e.getType());
					let a = 0;
					return Object(mi.a)(o, {
						keyFn: (e, o) => {
							const s = e.getEntity();
							return r && e.getStyle().contains(w.k.SPOILER) ? "spoiler" : Object(F.b)(s, t) ? `link-${e.getEntity()}` : "\n" === n[o] ? i ? "linebreak" : "skip" : s && t.getEntity(s).getType() === F.a.EMOTE ? `emote-${a++}` : "text"
						}
					}, (e, r, i, a) => {
						const c = n.slice(i, a),
							l = o.slice(i, a).toList();
						if ("text" === r) {
							const e = yi(c, l);
							s.push(Object(gi.s)(c, e))
						} else if ("spoiler" === r) s.push(Object(gi.n)(c));
						else if (r.startsWith("link-")) {
							const n = t.getEntity(e.getEntity());
							s.push(((e, t, n) => {
								const o = e.getType(),
									s = [F.a.USER_LINK, F.a.USER_MENTION],
									{
										url: r
									} = e.getData(),
									i = t.startsWith("/");
								if (o === F.a.SUBREDDIT_LINK) {
									const e = t.replace(C.e, "");
									return Object(gi.o)(e, i)
								}
								if (s.includes(o)) {
									const e = t.replace(C.a, "");
									return Object(gi.t)(e, i)
								}
								const a = yi(t, n);
								return Object(gi.i)(t, r, a)
							})(n, c, l))
						} else if ("linebreak" === r) s.push(Object(gi.h)());
						else if (r.startsWith("emote-")) {
							const n = t.getEntity(e.getEntity()).getData();
							s.push(Object(gi.e)(n.fullId, n.imageType))
						}
					}), s
				},
				ki = (e, t) => Object(gi.l)(Oi(e, t)),
				_i = e => "text" === e.e ? Object(gi.m)(e.t) : "link" === e.e ? Object(gi.i)(e.t, e.u, null) : e.e === zn.z ? e.c.map(_i) : e.e === zn.o ? Object(gi.m)("") : e,
				ji = (e, t) => Object(gi.f)(w.m[e.getType()], ((e, t) => ci()(ii()(Oi(e, t), _i), (e, t) => {
					let [n, ...o] = e;
					if (!n) return [t];
					const s = o.length ? o : [];
					return n && "raw" === t.e && "raw" === n.e ? [Object(gi.m)(t.t + n.t), ...s] : [t, n, ...s]
				}, []))(e, t)),
				Si = (e, t) => Object(gi.c)(si()(e.map(e => ((e, t) => e.getText().trim().length ? ki(e, t) : gi.a)(e, t)), e => e === gi.a)),
				Ti = e => Object(gi.d)(e.map(e => Object(gi.m)(e.getText()))),
				wi = (e, t) => {
					if (!e.length) return Object(gi.k)([], !1);
					const n = e[0].getDepth();
					let o = null;
					const s = [];
					let r = [];
					const i = () => null !== o || r.length,
						a = () => {
							const e = [];
							null !== o && (e.push(o), o = null), r.length && (e.push(wi(r, t)), r = []), s.push(Object(gi.j)(e))
						};
					return e.forEach(e => {
						e.getDepth() > n ? r.push(e) : (i() && a(), o = Object(gi.l)(Oi(e, t)))
					}), i() && a(), Object(gi.k)(s, e[0].getType() === w.i.ORDERED)
				},
				Ii = (e, t) => {
					const n = [...e].sort(J.b),
						o = n[0],
						{
							colCount: s
						} = Object(J.g)(o),
						r = H()(n, s),
						i = r[0].map(e => {
							const {
								alignment: n
							} = Object(J.g)(e);
							return Object(gi.q)(Oi(e, t), n)
						}),
						a = r.slice(1).map(e => e.map(e => Object(gi.p)(Oi(e, t))));
					return Object(gi.r)(i, a)
				},
				Pi = (e, t, n) => {
					const o = Object(A.h)(e);
					if (!o) throw new Error("Invalid atomic block!");
					const {
						uploadInfo: s,
						mediaAsset: r,
						makeGif: i
					} = o, a = t ? t.getText() : "";
					if (s && n) {
						const e = n[s.uploadKey],
							t = e && e.metadata.mimetype || "",
							{
								assetId: r,
								thumbnailAssetId: c
							} = Object(A.f)(o, n);
						return Object(We.l)(t) ? Object(gi.b)(r, a) : Object(We.m)(t) ? Object(gi.g)(r, a) : Object(gi.u)(r, a, c, i)
					} {
						const {
							assetId: e,
							type: t
						} = r;
						let n;
						switch (t) {
							case A.a.AnimatedImage:
								n = Object(gi.b)(e, a);
								break;
							case A.a.Image:
								n = Object(gi.g)(e, a);
								break;
							case A.a.Video:
								n = Object(gi.u)(e, a);
								break;
							default:
								throw new Error("Invalid media type")
						}
						return Object(fi.h)(e) ? Object(gi.l)([n]) : n
					}
				};
			var Mi, Ri = n("./src/reddit/constants/componentSizes.ts"),
				Ni = n("./src/reddit/constants/elementIds.ts");
			! function(e) {
				e.Up = "up", e.Down = "down"
			}(Mi || (Mi = {}));
			var Di = e => {
					const t = window.getSelection().focusNode;
					if (!t || !t.parentElement) return;
					const n = document.getElementById(Ni.e),
						o = n || document.documentElement;
					if (!o) return;
					const s = window.innerHeight,
						{
							bottom: r,
							top: i
						} = t.parentElement.getBoundingClientRect(),
						a = n ? 0 : Ri.f + Ri.o;
					e === Mi.Up && i < a ? o.scrollBy(0, i - a) : e === Mi.Down && r > s && o.scrollBy(0, r - s)
				},
				Li = n("./src/reddit/models/Product/index.ts"),
				Ai = (e, t, n) => {
					const o = {
						url: n
					};
					return e.createEntity(t, "MUTABLE", o)
				},
				Bi = n("./node_modules/lodash/maxBy.js"),
				Fi = n.n(Bi);
			const Ui = (e, t) => {
				if (!t) return (e => {
					const t = e.id;
					switch (e.e) {
						case zn.n:
							return {
								assetId: t, type: A.a.Image
							};
						case zn.a:
							return {
								assetId: t, type: A.a.AnimatedImage
							};
						case zn.F:
							return {
								assetId: t, type: A.a.Video
							}
					}
				})(e);
				const n = t.id;
				switch (t.e) {
					case zn.t: {
						const {
							s: e
						} = t;
						return {
							assetId: n,
							type: A.a.Image,
							imageUrl: e.u,
							width: e.x,
							height: e.y
						}
					}
					case zn.s: {
						const {
							s: e
						} = t;
						return {
							assetId: n,
							type: A.a.AnimatedImage,
							imageUrl: e.gif,
							posterUrl: e.p,
							dashUrl: e.mp4,
							width: e.x,
							height: e.y
						}
					}
					case zn.u: {
						const {
							isGif: e,
							dashUrl: o,
							hlsUrl: s,
							p: r,
							x: i,
							y: a
						} = t;
						let c;
						if (r) {
							c = Fi()(r, e => e.x).u
						}
						return {
							assetId: n,
							type: A.a.Video,
							isGif: e,
							dashUrl: o,
							hlsUrl: s,
							posterUrl: c,
							width: i,
							height: a
						}
					}
				}
			};

			function Ki(e, t, n) {
				const s = e.id,
					r = e.c,
					i = zn.G(t, s),
					a = Ui(e, i),
					c = [new o.ContentBlock({
						key: Object(o.genKey)(),
						type: w.a,
						data: Object(U.Map)({
							mediaAsset: a
						})
					})];
				if (n) {
					const e = Object(B.h)(Object(o.genKey)(), r).merge({
						type: w.j
					});
					c.push(e)
				}
				return c
			}
			const Wi = Object.keys(vi),
				Hi = (e, t, n) => {
					switch (t.e) {
						case zn.w:
							return Ji(e, t.c, w.b.UNSTYLED, n);
						case zn.l:
							const o = w.h[t.l];
							return Ji(e, t.c || [], o, n);
						case zn.q:
							return Gi(e, t, n);
						case zn.b:
							return qi(e, t, n);
						case zn.c:
							return void t.c.forEach(t => Ji(e, [t], w.b.CODE_BLOCK, n));
						case zn.B:
							return zi(e, t, n);
						case zn.n:
						case zn.a:
						case zn.F:
							return void e.blocks.push(...Ki(t, n.mediaMetadataMap, Object(A.q)(n.editorType)))
					}
				},
				qi = (e, t, n) => {
					t && t.c && t.c.length && t.c.forEach(t => t.e === zn.w ? Ji(e, t.c, w.b.BLOCK_QUOTE, n) : Hi(e, t, n))
				},
				zi = (e, t, n) => {
					const {
						h: o,
						c: s
					} = t, r = o.length;
					[o, ...s].forEach((t, s) => t.forEach((t, i) => {
						const {
							c: a = []
						} = t, {
							a: c
						} = o[i], l = {
							alignment: c,
							colCount: r,
							colIndex: i,
							rowIndex: s
						};
						Ji(e, a, w.b.TABLE_CELL, n, l)
					}))
				},
				Gi = function(e, t, n) {
					let o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
					const s = t.o ? w.b.ORDERED_LIST : w.b.UNORDERED_LIST;
					t.c.forEach(t => {
						const r = t.c;
						if (!r || !r.length) return;
						const [i, a] = r, c = i.e === zn.w ? i.c : [];
						Ji(e, c, s, n, void 0, o), a && a.e === zn.q && Gi(e, a, n, o + 1)
					})
				},
				Vi = {
					[zn.A]: ["r/", "/r/"],
					[zn.D]: ["u/", "/user/"],
					[zn.E]: ["u/", "/user/"],
					[zn.x]: ["p/", ""],
					[zn.g]: ["c/", ""]
				},
				Qi = {
					[zn.A]: F.a.SUBREDDIT_LINK,
					[zn.D]: F.a.USER_LINK,
					[zn.E]: F.a.USER_MENTION,
					[zn.x]: F.a.POST_LINK,
					[zn.g]: F.a.COMMENT_LINK
				},
				Ji = function(e, t, n, s) {
					let r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
						i = arguments.length > 5 ? arguments[5] : void 0,
						a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];
					const c = e.content;
					if (1 === t.length && (t[0].e === zn.n || t[0].e === zn.a)) {
						const n = t[0];
						if (Object(fi.h)(n.id)) return void e.blocks.push(...Ki(n, s.mediaMetadataMap, Object(A.q)(s.editorType)))
					}
					const {
						charList: l,
						text: d,
						updatedContent: u
					} = Xi(t, c, s), p = new o.ContentBlock({
						key: Object(o.genKey)(),
						characterList: Object(U.List)(l),
						data: Object(U.fromJS)(r),
						depth: i,
						text: d,
						type: n
					});
					e.content = u || c, a ? e.blocks.unshift(p) : e.blocks.push(p)
				},
				Xi = (e, t, n) => {
					let o = t,
						s = "";
					const r = [];
					if (e.forEach(e => {
							const t = Zi(e, o, n);
							o = t.updatedContent || o, s += t.text, r.push(...t.charList)
						}), s.length !== r.length) throw new Error("Characters length mismatch!");
					return {
						charList: r,
						text: s,
						updatedContent: o !== t ? o : void 0
					}
				},
				Zi = (e, t, n) => {
					switch (e.e) {
						case zn.C: {
							const {
								t,
								f: n
							} = e;
							return {
								charList: $i(t, n),
								text: t
							}
						}
						case zn.z: {
							const {
								c: s
							} = e, r = Xi(s, t, n);
							return r.charList = r.charList.map(e => (e => o.CharacterMetadata.create({
								style: e.getStyle().add(w.k.SPOILER),
								entity: e.getEntity()
							}))(e)), r
						}
						case zn.x:
						case zn.g:
						case zn.y: {
							const {
								t
							} = e;
							return {
								charList: $i(t),
								text: t
							}
						}
						case zn.A:
						case zn.D:
						case zn.E: {
							const [n, o] = Vi[e.e], s = (e.l ? "/" : "") + n + e.t, r = o + e.t, i = Ai(t, Qi[e.e], r), a = i.getLastCreatedEntityKey();
							return {
								charList: $i(s, void 0, a),
								text: s,
								updatedContent: i
							}
						}
						case zn.p: {
							const {
								t: n,
								u: o,
								f: s
							} = e, r = Ai(t, F.a.LINK, o), i = r.getLastCreatedEntityKey();
							return {
								charList: $i(n, s, i),
								text: n,
								updatedContent: r
							}
						}
						case zn.n:
						case zn.a:
							const {
								id: s
							} = e;
							if (s.startsWith("emote|")) {
								const e = Object(Li.b)(s),
									o = n.activeEmotes && n.activeEmotes[e];
								if (o) {
									const e = Object(_o.c)(t, o),
										n = e.getLastCreatedEntityKey(),
										s = _o.a;
									return {
										charList: $i(s, void 0, n),
										text: s,
										updatedContent: e
									}
								}
								const r = `:${e}:`;
								return {
									charList: $i(r),
									text: r
								}
							}
							return {
								text: "", charList: $i("")
							};
						default:
							return {
								text: "", charList: $i("")
							}
					}
				},
				Yi = e => {
					const t = Wi.filter(t => !!(vi[t] & e));
					return Object(U.OrderedSet)(t)
				},
				$i = function(e, t) {
					let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
					const s = o.CharacterMetadata.create({
							entity: n
						}),
						r = Array(e.length).fill(s),
						i = Object(bi.a)(e);
					return t && t.forEach(e => {
						const [t, s, a] = e, c = Yi(t), l = s + a, d = o.CharacterMetadata.create({
							entity: n,
							style: c
						});
						r.fill(d, i[s], i[l])
					}), r
				},
				ea = (e, t) => {
					e.blocks.length && (e.blocks[0].getType() === w.b.TABLE_CELL && Ji(e, [], w.b.UNSTYLED, t, void 0, void 0, !0), e.blocks[e.blocks.length - 1].getType() === w.b.TABLE_CELL && Ji(e, [], w.b.UNSTYLED, t))
				};
			var ta = (e, t, n, s) => {
					const r = "string" == typeof e ? JSON.parse(e) : e;
					if (!r || !r.document || !r.document.length) return null;
					const i = {
							editorType: t,
							mediaMetadataMap: n,
							activeEmotes: s ? s.reduce((e, t) => ({
								...e,
								...t.emotes
							}), {}) : void 0
						},
						a = {
							blocks: [],
							content: o.ContentState.createFromText("")
						};
					r.document.forEach(e => {
						Hi(a, e, i)
					}), 0 === a.blocks.length && Ji(a, [], w.b.UNSTYLED, i), ea(a, i);
					const c = o.BlockMapBuilder.createFromArray(a.blocks),
						l = o.SelectionState.createEmpty(c.first().getKey());
					return a.content.merge({
						blockMap: c,
						selectionBefore: l,
						selectionAfter: l
					})
				},
				na = n("./src/reddit/components/UserIcon/CurrentUserIcon.tsx"),
				oa = n("./src/reddit/components/UsersCountIndicator/constants.ts"),
				sa = n("./src/reddit/constants/elementClassNames.ts"),
				ra = n("./src/reddit/constants/keycodes.ts"),
				ia = n("./src/reddit/helpers/correlationIdTracker.ts"),
				aa = n("./src/reddit/icons/svgs/Send/index.tsx"),
				ca = n("./src/reddit/selectors/economics.ts"),
				la = n("./src/reddit/components/RichTextEditor/index.m.less"),
				da = n.n(la);

			function ua() {
				return (ua = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			Object(Or.b)({
				draftToRTFJson: xi,
				getMediaCount: A.g,
				getPendingThumbnailUploads: A.i,
				isAllMediaUploaded: A.m
			});
			const pa = "handled",
				ma = "not-handled",
				ha = /^\s*$/,
				ba = 20,
				fa = x.a.wrapped(ps.a, "FocusableContent", da.a),
				ga = x.a.div("Container", da.a),
				va = x.a.wrapped(na.a, "CurrentUserIcon", da.a),
				xa = e => `${_.b}-${e}`,
				Ca = Object(m.b)(() => {
					const e = (() => Object(h.a)(e => e.uploads, (e, t) => t.rteState.editorKey, (e, t) => c()(e, e => e.key.startsWith(xa(t)))))();
					return Object(h.c)({
						editorUploads: e,
						emotesSpecialMembershipEnabled: j.d.spEmotes,
						giphySpecialMembershipEnabled: j.d.spGiphy,
						activeEmotes: (e, t) => {
							var n;
							return Object(ca.b)(e, {
								subredditId: null === (n = t.destSubreddit) || void 0 === n ? void 0 : n.id
							})
						},
						shouldShowCommentGifsTooltip: (e, t) => {
							var n;
							return Object(Io.c)(e, {
								subredditId: null === (n = t.destSubreddit) || void 0 === n ? void 0 : n.id
							})
						}
					})
				}, e => ({
					onFetchEditorProducts: t => e(Object(k.e)(t)),
					onTrackMediaDrop: t => e((e, n) => S.t(n(), t)),
					retryUpload: (t, n) => e(_.c(t, n)),
					startUploads: (t, n, o, s, r, i) => e(_.e(t, n, xa(o), s, r, i))
				}));
			class Ea extends u.Component {
				constructor(e) {
					super(e), this.blockRenderMap = o.DefaultDraftBlockRenderMap.merge(fs, xs, Ln, vr, yr, Ur, dn), this.editorHeight = null, this.editorRef = null, this.editorRootStyleMutationObserver = null, this.linksControllerApi = null, this.suggestionDropdownApi = null, this.tableToolbarControllerApi = null, this.emotesTooltipApi = null, this.gifTooltipApi = null, this.updateSuggestionDropdownPosition = null, this.isJustAutocompleteSelected = !1, this.isJustLinkified = !1, this.isMouseDown = !1, this.isJustConvertedToList = !1, this.needSyncScroll = null, this.transforms = {
						[I.BREAK_HEADER_ENTITY]: Co.b,
						[I.INSERT_LINE_BREAK]: Co.e,
						[I.REDUCE_LIST_INDENT]: Co.f,
						[I.RESET_CURRENT_AND_PREVIOUS_BLOCKS]: Co.g,
						[I.REMOVE_EXTRA_LIST_ITEM]: Co.h,
						[N.d]: e => $o(e, this.props.editorType),
						[N.b]: e => Yo(e, this.props.editorType),
						[N.f]: Co.d,
						[N.c]: e => Object(Co.c)(w.k.BOLD, e),
						[N.e]: e => Object(Co.c)(w.k.ITALIC, e),
						[N.g]: e => Object(Co.c)(w.k.UNDERLINE, e)
					}, this.realtimeGQLVariables = void 0, this.setContainerRef = e => {
						const {
							domRef: t
						} = this.props;
						t && t(e), this.setState({
							containerRef: e
						})
					}, this.setFocusableContentRef = e => this.setState({
						focusableContentRef: e
					}), this.setUserStoppedTyping = i()(() => this.setState({
						isUserTyping: !1
					}), oa.c), this.rteStateChanged = (e, t) => {
						const n = {
							...this.props.rteState,
							isBound: !0,
							editorState: e
						};
						this.props.onChange(n, t), this.props.isTypingIndicatorsWriteTestEnabled && t && (this.state.isUserTyping || this.setState({
							isUserTyping: !0
						}), this.setUserStoppedTyping())
					}, this.hideTooltips = () => {
						this.emotesTooltipApi && this.emotesTooltipApi.closeTooltip(), this.gifTooltipApi && this.gifTooltipApi.closeTooltip(), this.tableToolbarControllerApi && this.tableToolbarControllerApi.hideActionButton(), this.linksControllerApi && this.linksControllerApi.hidePopup(), this.suppressAutocompleteForFocusedLink()
					}, this.onEditorStyleChanged = () => {
						if (!this.editorRef) return;
						const e = this.editorRef.refs.editor,
							t = e.style.height ? Number.parseInt(e.style.height) : null;
						this.editorHeight !== t && (this.hideTooltips(), this.editorHeight = t, t && this.props.onEditorResize && this.props.onEditorResize(t))
					}, this.insertValidatedMedia = () => {
						const {
							editorUploads: e,
							shouldOmitImageCaptionBlock: t
						} = this.props, {
							editorState: n,
							mediaToInsert: o
						} = this.state;
						if (!o) return;
						const {
							files: s,
							blockKey: r,
							insertionMode: i
						} = o, a = s.map(t => e.find(e => e.file === t)).filter(Boolean);
						this.setState({
							mediaToInsert: null
						});
						const c = a.filter(e => !!e.metadata.mimetype);
						c.length && this.onChange(Object(A.l)(n, c, r, i, t))
					}, this.focus = () => this.editorRef && this.editorRef.focus(), this.blur = () => this.editorRef && this.editorRef.blur(), this.isFocused = () => this.state.editorState.getSelection().getHasFocus(), this.isEmpty = () => !this.state.editorState.getCurrentContent().hasText(), this.setEditorRef = e => this.editorRef = e, this.setSuggestionDropdownApi = e => this.suggestionDropdownApi = e, this.setLinksControllerApi = e => this.linksControllerApi = e, this.setTableToolbarControllerApi = e => this.tableToolbarControllerApi = e, this.setEmotesTooltipApi = e => this.emotesTooltipApi = e, this.setGifTooltipApi = e => this.gifTooltipApi = e, this.setSuggestionDropdownPositionUpdater = e => this.updateSuggestionDropdownPosition = e, this.getEditorState = () => this.state.editorState, this.setEditorState = (e, t) => {
						const n = this.state.editorState.getCurrentContent() !== e.getCurrentContent();
						n && this.props.readOnly || (this.setState({
							editorState: e
						}, t), this.rteStateChanged(e, n))
					}, this.toolbarSetState = e => {
						const t = e.getInlineStyleOverride();
						let n = e;
						n.getSelection().getHasFocus() || (n = o.EditorState.forceSelection(n, n.getSelection()), t && (n = o.EditorState.setInlineStyleOverride(n, t))), this.onChange(n)
					}, this.onChange = (e, t) => {
						let n = e;
						n = kn(n, this.state.editorState), n = Ae(n, this.props.editorType), this.emotesTooltipApi && (n = Object(_o.d)(n, this.state.editorState)), n = Go(n, this.state.editorState), n = Object(ss.d)(n, this.state.editorState), this.setEditorState(n, t);
						let {
							suppressAutocompleteForLink: o
						} = this.state;
						if (o) {
							const t = Object(Ao.b)(e);
							t && t.entityKey === o || (o = null)
						}
						this.setState({
							suppressAutocompleteForLink: o
						}), this.isJustAutocompleteSelected = !1, this.isJustLinkified = !1, this.isMouseDown = !1, this.isJustConvertedToList = !1
					}, this.onFocus = () => {
						const {
							onFocus: e
						} = this.props;
						this.emotesTooltipApi && this.emotesTooltipApi.closeTooltip(), this.gifTooltipApi && this.gifTooltipApi.closeTooltip(), e && (Object(ia.d)(ia.a.CommentComposer, !1), e())
					}, this.handleBeforeInput = e => {
						const {
							editorState: t
						} = this.state;
						if (this.isMouseDown) return pa;
						if (Le(t, e)) return pa;
						let n = function(e, t) {
							const n = e.getSelection(),
								s = n.getFocusOffset();
							if (!n.isCollapsed() || 0 === s) return;
							const r = n.getFocusKey(),
								i = e.getCurrentContent(),
								a = i.getBlockForKey(r),
								c = a.getEntityAt(s - 1),
								l = a.getEntityAt(s);
							if (!(c && (!l || l !== c))) return;
							const d = i.getEntity(c),
								u = Lo.has(d.getType());
							if ("MUTABLE" === d.getMutability() && u) {
								const s = o.Modifier.insertText(i, n, t, e.getCurrentInlineStyle());
								return o.EditorState.push(e, s, "insert-characters")
							}
						}(t, e) || t;
						return (n = Cn(n, e) || n) !== t ? (this.onChange(n), pa) : ma
					}, this.keyBindingFN = e => {
						const {
							editorState: t
						} = this.state, {
							submitOnEnter: n
						} = this.props, s = t.getSelection();
						if (e.metaKey && e.keyCode === ra.a.K) return I.OPEN_LINK_TOOLTIP;
						if (e.keyCode === ra.a.Space) {
							if (ns(t)) return I.CONVERT_TO_LIST_ON_SPACE;
							if (Object(Ao.d)(t)) return I.LINKIFY_ON_SPACE
						} else if (e.keyCode === ra.a.Enter) {
							if (e.ctrlKey || e.metaKey || n && !e.shiftKey) return I.SUBMIT;
							if (e.shiftKey && es(t)) return I.INSERT_LINE_BREAK; {
								const e = this.enterKeyBinding(t);
								if (e) return e
							}
						} else if (e.keyCode === ra.a.Backspace) {
							if (this.isJustLinkified || this.isJustConvertedToList) return N.h;
							if (s.isCollapsed()) {
								const e = t.getCurrentContent(),
									n = s.getEndKey(),
									o = s.getStartOffset(),
									r = e.getBlockForKey(n),
									i = r.getType();
								if ((Object(w.s)(i) || Object(w.q)(i) || Object(w.p)(i)) && 0 === o && r.getLength() > 0) {
									const t = e.getBlockBefore(n);
									if (!t || t.getType() !== i) return I.MAKE_PLAIN_BLOCK
								}
							}
						}
						return Object(o.getDefaultKeyBinding)(e)
					}, this.handleKeyCommand = e => {
						const {
							editorState: t
						} = this.state;
						let n = e,
							s = null;
						const r = e => {
							let t = e;
							if (s) {
								const {
									selection: e,
									url: n
								} = s;
								t = Object(Ao.f)(t, e, n)
							}
							return this.onChange(t), this.isJustLinkified = !!s, pa
						};
						if (n === I.SUBMIT) this.props.onSubmit();
						else {
							if (n === I.CONVERT_TO_LIST_ON_SPACE) {
								const e = r(os(t));
								return this.isJustConvertedToList = !0, e
							}
							if (n === I.LINKIFY_ON_SPACE) return s = Object(Ao.d)(t), r(Object(Co.a)(t));
							if (n === I.LINKIFY_ON_ENTER && (s = Object(Ao.d)(t), !(n = this.enterKeyBinding(t, !1)))) return r(Object(Co.d)(t))
						}
						if (n === I.OPEN_LINK_TOOLTIP) return this.onToolbarLinkButtonClick(), pa;
						if (n === I.MAKE_PLAIN_BLOCK) {
							return r(Object(Co.i)(w.n, t))
						}
						if (n === I.EXEC_TABLE_ON_ENTER_HANDLER) return r(this.tableOnEnterHandler.handle(t));
						const i = this.transforms[n];
						if (i) {
							const e = i(t);
							if (e) return r(e)
						}
						const a = o.RichUtils.handleKeyCommand(t, n);
						return a ? r(a) : ma
					}, this.handleOnTab = e => {
						if (this.emotesTooltipApi && this.emotesTooltipApi.handleTabInEditor() || this.suggestionDropdownApi && this.suggestionDropdownApi.selectCurrent()) return void e.preventDefault();
						const {
							editorState: t
						} = this.state;
						let n = fn(e, t);
						if (n = n || Zo(e, t)) return void this.onChange(n);
						const s = o.RichUtils.onTab(e, t, 2);
						this.onChange(s)
					}, this.handleOnUpArrow = e => {
						if (this.emotesTooltipApi && this.emotesTooltipApi.handleUpArrowInEditor() || this.suggestionDropdownApi && this.suggestionDropdownApi.moveUp()) return void e.preventDefault();
						const t = gn(e, this.state.editorState) || Ne(e, this.state.editorState);
						t && this.onChange(t), this.needSyncScroll = Mi.Up
					}, this.handleOnDownArrow = e => {
						if (this.suggestionDropdownApi && this.suggestionDropdownApi.moveDown()) return void e.preventDefault();
						const t = vn(e, this.state.editorState) || De(e, this.state.editorState);
						t && this.onChange(t), this.needSyncScroll = Mi.Down
					}, this.handleReturn = e => {
						const t = Me(this.state.editorState);
						return t ? (this.onChange(t), e.preventDefault(), pa) : this.suggestionDropdownApi && this.suggestionDropdownApi.selectCurrent() ? (e.preventDefault(), pa) : ma
					}, this.suppressAutocompleteForFocusedLink = () => {
						const e = Object(Ao.b)(this.state.editorState);
						e && this.state.suppressAutocompleteForLink !== e.entityKey && this.setState({
							suppressAutocompleteForLink: e.entityKey
						})
					}, this.handleEscape = e => {
						this.emotesTooltipApi && this.emotesTooltipApi.handleEscapeKeyInEditor(), this.suppressAutocompleteForFocusedLink()
					}, this.handleOnCopy = e => {
						this.editorRef && Oe(this.state.editorState, this.editorRef, e)
					}, this.handleOnCut = e => {
						const {
							editorState: t
						} = this.state;
						if (!this.editorRef) return;
						if (!Oe(t, this.editorRef, e)) return;
						const n = le(t) || Pe(t) || Object(A.e)(t);
						n && this.onChange(n)
					}, this.handleOnPaste = e => {
						const {
							editorState: t
						} = this.state;
						if (!this.editorRef) return;
						if (this.handleFilesPaste(e, t), e.isPropagationStopped()) return;
						const n = Ws(t, this.editorRef, e, this.props.editorType);
						n && this.onChange(n)
					}, this.handleFilesPaste = (e, t) => {
						if (!this.props.allowImageUploads && !this.props.allowVideoUploads) return void e.stopPropagation();
						const n = e.clipboardData.files;
						if (n && n.length) {
							const o = Array.from(n),
								s = t.getSelection().getEndKey();
							this.insertMediaFiles({
								files: o,
								blockKey: s,
								insertionMode: B.a.after,
								filesSource: y.FileSource.Clipboard
							}), e.stopPropagation()
						}
					}, this.handleOnMouseDown = e => {
						this.isMouseDown = !0
					}, this.handleOnMouseUp = e => {
						this.isMouseDown = !1
					}, this.handleDroppedFiles = (e, t) => pa, this.handleDrop = (e, t, n) => pa, this.handleBlur = () => {
						this.props.onBlur && this.props.onBlur()
					}, this.handlePastedText = (e, t) => pa, this.onInternalSuggestionSelected = e => {
						this.onChange(Object(Ao.g)(this.state.editorState, e)), this.isJustAutocompleteSelected = !0
					}, this.onToolbarEmoteButtonClick = e => {
						this.gifTooltipApi && this.gifTooltipApi.closeTooltip(), this.emotesTooltipApi && this.emotesTooltipApi.toggleTooltip(e)
					}, this.onToolbarGifButtonClick = e => {
						this.emotesTooltipApi && this.emotesTooltipApi.closeTooltip(), this.gifTooltipApi && this.gifTooltipApi.toggleTooltip(e)
					}, this.onToolbarLinkButtonClick = () => {
						if (!this.linksControllerApi) return;
						const {
							editorState: e
						} = this.state;
						this.linksControllerApi.editLinkInSelection(e.getSelection()) || Object(E.b)(void 0, "Current selection cannot be edited by link editor!")
					}, this.handleSwitchToMarkdownMode = () => {
						const {
							editorState: e
						} = this.state, {
							onSwitchEditorMode: t
						} = this.props, n = Or.a.toRichTextJSON({
							...this.props.rteState,
							isBound: !0,
							editorState: Object(A.c)(e)
						});
						t && t(T.i.MARKDOWN, n), this.state.confirmModalOpen && this.toggleConfirmModal()
					}, this.onToolbarMarkdownSwitchClick = () => {
						const {
							editorState: e
						} = this.state;
						e && Vo(e) ? this.setState({
							confirmModalOpen: !0
						}) : this.handleSwitchToMarkdownMode()
					}, this.toggleConfirmModal = () => {
						this.setState({
							confirmModalOpen: !this.state.confirmModalOpen
						})
					}, this.insertMediaFiles = async e => {
						const {
							onFilesFilter: t,
							rteState: n,
							shouldUseGqlUploadLease: o,
							minImageDimension: s,
							editorType: r
						} = this.props, {
							files: i,
							filesSource: a
						} = e;
						let c = i;
						t && (c = t(i, this.state.editorState)), this.setState({
							mediaToInsert: {
								...e,
								files: c
							}
						});
						const l = c.slice(0, ba);
						await this.props.startUploads(l, a, n.editorKey, r === He.a.Post, o, s), this.insertValidatedMedia()
					}, this.onRetryUpload = e => {
						this.props.retryUpload(e, this.props.editorType === He.a.Post)
					}, this.onFilesSelect = e => {
						const {
							editorState: t
						} = this.state, n = t.getSelection().getEndKey();
						this.insertMediaFiles({
							files: e,
							blockKey: n,
							insertionMode: B.a.after,
							filesSource: y.FileSource.FileSelector
						})
					}, this.onFilesDrop = (e, t, n) => {
						this.props.onTrackMediaDrop(e), this.insertMediaFiles({
							files: e,
							blockKey: t,
							insertionMode: n,
							filesSource: y.FileSource.DragAndDrop
						})
					}, this.onBlockMove = (e, t, n) => {
						const {
							editorState: o
						} = this.state, s = Object(A.o)(o, e, t, n);
						s && this.onChange(s)
					}, this.getAtomicBlocksRenderConfig = () => ({
						component: rn,
						props: {
							getEditorState: this.getEditorState,
							onChange: this.onChange,
							onRetryUpload: this.onRetryUpload,
							rteFocusableContentRef: this.state.focusableContentRef,
							editorType: this.props.editorType
						}
					}), this.blockRendererFn = e => {
						const t = e.getType();
						return t === w.a ? this.getAtomicBlocksRenderConfig() : t in Nr ? Nr[t] : void 0
					}, this.renderToolbar = e => p.a.createElement(Kt.b, e), this.entityElementRegistry = yo(), this.tableOnEnterHandler = new xn;
					const {
						postId: t,
						isTypingIndicatorsWriteTestEnabled: n
					} = e;
					n && (this.realtimeGQLVariables = {
						input: {
							channel: {
								teamOwner: "CONTENT_AND_COMMUNITIES",
								category: "USER_IS_TYPING_ON_POST",
								postID: t
							}
						}
					});
					const {
						activeEmotes: s,
						editorType: r,
						noBorder: a,
						initialHeight: c,
						initialMinHeight: l,
						rteState: d
					} = e;
					let u;
					d.isBound ? u = d.editorState : Object(zn.I)(d.initialRTJSON) ? u = this.createInitialState(d.editorKey) : (u = o.EditorState.createWithContent(ta(d.initialRTJSON, r, d.mediaMetadataMap, s), this.editorDecorators()), u = this.moveSelectionToEnd(u)), this.state = {
						noBorder: a,
						containerRef: null,
						confirmModalOpen: !1,
						editorState: u,
						focusableContentRef: null,
						inited: !1,
						initialHeight: c,
						initialMinHeight: l,
						isUserTyping: !1,
						mediaToInsert: null,
						suppressAutocompleteForLink: null
					}
				}
				editorDecorators() {
					return new o.CompositeDecorator([wo(), us(), Wo()])
				}
				moveSelectionToEnd(e) {
					const t = e.getCurrentContent().getBlockMap(),
						n = t.last().getKey(),
						s = t.last().getLength(),
						r = new o.SelectionState({
							anchorKey: n,
							anchorOffset: s,
							focusKey: n,
							focusOffset: s
						});
					return o.EditorState.acceptSelection(e, r)
				}
				createInitialState(e) {
					return o.EditorState.createWithContent(o.ContentState.createFromBlockArray([new o.ContentBlock({
						key: `${e}_initial`
					})]), this.editorDecorators())
				}
				componentDidMount() {
					if (this.props.rteRef && this.props.rteRef(this), v.a.write(Lr), this.rteStateChanged(this.state.editorState, !1), this.editorRef) {
						const e = this.editorRef.refs.editor;
						e.addEventListener("scroll", this.hideTooltips), this.editorRootStyleMutationObserver = new MutationObserver(this.onEditorStyleChanged), this.editorRootStyleMutationObserver.observe(e, {
							attributes: !0,
							attributeFilter: ["style"]
						})
					}
					const {
						destSubreddit: e,
						emotesSpecialMembershipEnabled: t,
						giphySpecialMembershipEnabled: n
					} = this.props;
					e && e.id && (t || n) && this.props.onFetchEditorProducts(e.id)
				}
				componentDidUpdate(e, t) {
					const n = this.getLinkForAutocomplete();
					if (n && this.updateSuggestionDropdownPosition) {
						const e = this.entityElementRegistry.get(n.entityKey);
						if (e) {
							const {
								left: t,
								bottom: n,
								height: o
							} = e.getBoundingClientRect();
							this.updateSuggestionDropdownPosition({
								left: t,
								top: n,
								bottom: n - o
							})
						}
					}
					this.needSyncScroll && (Di(this.needSyncScroll), this.needSyncScroll = null)
				}
				componentWillUnmount() {
					if (this.props.rteRef && this.props.rteRef(null), this.insertValidatedMedia = () => {}, this.props.isTypingIndicatorsWriteTestEnabled && this.setUserStoppedTyping.cancel(), this.editorRef) {
						this.editorRef.refs.editor.removeEventListener("scroll", this.hideTooltips)
					}
					this.editorRootStyleMutationObserver && (this.editorRootStyleMutationObserver.disconnect(), this.editorRootStyleMutationObserver = null)
				}
				UNSAFE_componentWillReceiveProps(e) {
					e.rteState !== this.props.rteState && e.rteState.isBound && e.rteState.editorState !== this.state.editorState && this.setState({
						editorState: e.rteState.editorState
					})
				}
				shouldComponentUpdate(e, t) {
					if (t !== this.state) return !0;
					if (!(e.rteState.isBound && e.rteState.editorState === this.state.editorState)) return !0;
					return !f()(e, this.props, (e, t, n) => "rteState" === n || void 0)
				}
				enterKeyBinding(e) {
					let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
					const n = e.getCurrentContent(),
						o = e.getSelection(),
						s = o.getStartKey(),
						r = o.getEndKey(),
						i = o.getEndOffset(),
						a = n.getBlockForKey(s).getType(),
						c = n.getBlockForKey(r),
						l = c.getType(),
						d = i === c.getText().length;
					if (a === w.l || l === w.l) return I.EXEC_TABLE_ON_ENTER_HANDLER;
					if (o.isCollapsed()) {
						if (t && Object(Ao.d)(e)) return I.LINKIFY_ON_ENTER;
						if (Object(w.r)(l) && d) return I.BREAK_HEADER_ENTITY;
						if (Object(w.s)(l)) {
							if (ha.test(c.getText())) return c.getDepth() > 0 ? I.REDUCE_LIST_INDENT : I.REMOVE_EXTRA_LIST_ITEM
						} else if (l === w.e) {
							const e = n.getBlockBefore(r);
							if (e && e.getType() === w.e && ha.test(e.getText()) && ha.test(c.getText())) return I.RESET_CURRENT_AND_PREVIOUS_BLOCKS
						} else if (l === w.f) {
							const e = n.getBlockBefore(r),
								t = n.getBlockAfter(r);
							if (!c.getText() && e && e.getType() === w.f && !e.getText() && (!t || t.getType() !== w.f)) return I.RESET_CURRENT_AND_PREVIOUS_BLOCKS
						}
					}
				}
				getLinkForAutocomplete() {
					const {
						editorState: e,
						suppressAutocompleteForLink: t
					} = this.state;
					if (!this.isJustAutocompleteSelected && e.getSelection().getHasFocus()) {
						const n = Object(Ao.b)(e);
						if (n && n.entityKey !== t) return n
					}
				}
				renderInternalLinkSuggestionDropdown() {
					const {
						isChatPost: e
					} = this.props, t = this.getLinkForAutocomplete();
					return t ? p.a.createElement(Fn.b, {
						aboveParent: e,
						dropdown: !0,
						onSetPositionUpdater: this.setSuggestionDropdownPositionUpdater
					}, t.entityText.startsWith(C.f) && p.a.createElement(Yr, {
						onDropdownApi: this.setSuggestionDropdownApi,
						onSelect: this.onInternalSuggestionSelected,
						substring: t.internalName
					}), C.a.test(t.entityText) && p.a.createElement(ni, {
						onDropdownApi: this.setSuggestionDropdownApi,
						onSelect: this.onInternalSuggestionSelected,
						substring: t.internalName
					})) : null
				}
				render() {
					const {
						className: e,
						userCanUseEmojis: t,
						userCanUseGifs: n,
						allowImageUploads: r = !1,
						allowVideoUploads: i = !1,
						dataTestId: a,
						destSubreddit: c,
						editorType: l,
						focusableContentRTEClassName: u,
						hideToolbar: m,
						rteState: h,
						isExpanded: b,
						isOverlay: f,
						isCommentBoxDesignEnabled: v,
						onSubmit: x,
						placeholderText: C,
						shouldShowCommentGifsTooltip: E,
						showSubmitButton: y = !1,
						submitButtonClassName: k,
						toolbarPosition: _ = "top",
						renderToolbar: j = this.renderToolbar,
						isTypingIndicatorsWriteTestEnabled: S
					} = this.props, {
						editorKey: T
					} = h, {
						containerRef: w,
						editorState: I,
						mediaToInsert: M,
						confirmModalOpen: N,
						isUserTyping: D
					} = this.state, L = this.props.readOnly || !!M, A = P(I), B = this.isEmpty(), F = j({
						allowImageUploads: r,
						allowVideoUploads: i,
						destSubreddit: c,
						editorKey: T,
						editorState: I,
						isOverlay: !!f,
						onChange: this.toolbarSetState,
						onFilesSelect: this.onFilesSelect,
						trackOnClick: this.props.trackToolbarClick,
						readOnly: L,
						onEmoteButtonClick: this.onToolbarEmoteButtonClick,
						onGifButtonClick: this.onToolbarGifButtonClick,
						onLinkButtonClick: this.onToolbarLinkButtonClick,
						onMarkdownButtonClick: this.onToolbarMarkdownSwitchClick,
						userCanUseEmojis: !!t,
						userCanUseGifs: !!n
					}), U = !m && (!v || b);
					return p.a.createElement(ga, {
						className: e,
						innerRef: this.setContainerRef
					}, S && D && p.a.createElement(O.a, {
						variables: this.realtimeGQLVariables,
						onData: d.a,
						queryKey: "userIsTypingOnPost"
					}), v && p.a.createElement("div", {
						className: da.a.userIcon
					}, p.a.createElement(va, null)), p.a.createElement(fa, {
						className: Object(g.a)(u, {
							[da.a.showSubmitButton]: y,
							[da.a.mExpanded]: b,
							[da.a.mRedesign]: v
						}),
						noBorder: this.props.noBorder,
						isFocused: this.isFocused(),
						ref: this.setFocusableContentRef
					}, U && "top" === _ && F, w && p.a.createElement(xo, {
						editorState: I,
						readOnly: L,
						onChange: this.onChange,
						onSetApi: this.setTableToolbarControllerApi,
						rteDomRef: w
					}), p.a.createElement("div", {
						className: Object(g.a)(da.a.editorWrapper, {
							[da.a.hasInitialHeight]: !!this.props.initialHeight,
							[da.a.hasInitialMinHeight]: !!this.props.initialMinHeight,
							[da.a.noBorder]: !!this.props.noBorder
						}),
						style: {
							"--rte-initial-height": this.props.initialHeight ? `${this.props.initialHeight}px` : void 0,
							"--rte-initial-min-height": this.props.initialMinHeight ? `${this.props.initialMinHeight}px` : void 0
						},
						"data-test-id": a,
						onCopyCapture: this.handleOnCopy,
						onCutCapture: this.handleOnCut,
						onPasteCapture: this.handleOnPaste,
						onMouseDown: this.handleOnMouseDown,
						onMouseUp: this.handleOnMouseUp
					}, p.a.createElement("style", {
						dangerouslySetInnerHTML: {
							__html: `\n                .${sa.b}[${sa.d}="${A}-0-0"]::after {\n                  bottom: 0;\n                  color: var(--newCommunityTheme-actionIcon);\n                  content: '${C}';\n                  cursor: text;\n                  left: 0;\n                  position: absolute;\n                  top: 0;\n                }\n              `
						}
					}), p.a.createElement(ws, {
						allowMediaUploads: (r || i) && !L,
						onBlockMove: this.onBlockMove,
						onFilesDrop: this.onFilesDrop,
						editorState: I,
						onChange: this.onChange
					}, p.a.createElement(Oo.Provider, {
						value: this.entityElementRegistry
					}, p.a.createElement(o.Editor, {
						readOnly: L,
						ref: this.setEditorRef,
						blockRendererFn: this.blockRendererFn,
						blockRenderMap: this.blockRenderMap,
						editorKey: T,
						editorState: I,
						keyBindingFn: this.keyBindingFN,
						handleBeforeInput: this.handleBeforeInput,
						handleKeyCommand: this.handleKeyCommand,
						handlePastedText: this.handlePastedText,
						handleDroppedFiles: this.handleDroppedFiles,
						handleDrop: this.handleDrop,
						onBlur: this.handleBlur,
						onChange: this.onChange,
						onFocus: this.onFocus,
						onTab: this.handleOnTab,
						onUpArrow: this.handleOnUpArrow,
						onDownArrow: this.handleOnDownArrow,
						onEscape: this.handleEscape,
						spellCheck: !0,
						handleReturn: this.handleReturn,
						customStyleMap: jr()
					})))), U && "bottom" === _ && F, p.a.createElement(hr, {
						containerRef: w,
						editorState: I,
						entityElementRegistry: this.entityElementRegistry,
						onSetApi: this.setLinksControllerApi,
						onChange: this.onChange
					}), l === He.a.Comment && c && p.a.createElement(Do, {
						editorState: I,
						onChange: this.onChange,
						onSetApi: this.setEmotesTooltipApi,
						subreddit: c,
						userCanUseEmojis: !!t
					}), (E || n) && c && p.a.createElement(is, {
						editorState: I,
						onChange: this.onChange,
						onSetApi: this.setGifTooltipApi,
						subreddit: c,
						userCanUseGifs: !!n
					}), this.renderInternalLinkSuggestionDropdown(), y && p.a.createElement(st.e, {
						"aria-label": s.fbt._("submit", null, {
							hk: "12XoZ8"
						}),
						className: Object(g.a)(k, da.a.insetSubmitButton, {
							[da.a.emptyContent]: B,
							[da.a.focusedContent]: this.isFocused()
						}),
						disabled: B,
						onClick: x,
						tabIndex: -1,
						type: "submit"
					}, p.a.createElement(aa.a, null))), N && p.a.createElement(R.a, {
						toggleModal: this.toggleConfirmModal,
						onConfirm: this.handleSwitchToMarkdownMode,
						actionText: s.fbt._("Continue", null, {
							hk: "3aoEeD"
						}),
						cancelActionText: s.fbt._("Cancel", null, {
							hk: "2TSLl5"
						}),
						headerText: s.fbt._("Switch to Markdown", null, {
							hk: "3zGkKa"
						}),
						modalText: l === He.a.Comment ? s.fbt._("Switching to markdown will remove any image or GIF from your comment.", null, {
							hk: "3v46Jt"
						}) : s.fbt._("Switching to markdown will remove any images, gifs or videos from your post.", null, {
							hk: "3rlwkB"
						}),
						trackClick: () => {}
					}))
				}
			}
			t.a = Ca(Object(Kr.b)(e => p.a.createElement(Ea, ua({
				key: e.rteState.editorKey
			}, e))))
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/ImagePreview/index.m.less": function(e, t, n) {
			e.exports = {
				Img: "_1gJwMe53cjYITkMu0Ve8j-",
				img: "_1gJwMe53cjYITkMu0Ve8j-",
				Component: "_3VYFd7PKhTJ-0i22YsgFPv",
				component: "_3VYFd7PKhTJ-0i22YsgFPv"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/Placeholder/index.m.less": function(e, t, n) {
			e.exports = {
				Message: "_3cyJHYsdZdz4RWdmrzyYx-",
				message: "_3cyJHYsdZdz4RWdmrzyYx-",
				Component: "_3JSUHg1gLhxUj4PB_Pgw8a",
				component: "_3JSUHg1gLhxUj4PB_Pgw8a"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/StatusBar/index.m.less": function(e, t, n) {
			e.exports = {
				buttonBaseStyles: "_3R1ajPuzbs2MdbXedj3YXU",
				ControlRow: "_1rrSEjTxZcLOZTDNZlj5N4",
				controlRow: "_1rrSEjTxZcLOZTDNZlj5N4",
				ButtonsContainer: "dZ3F6qSOhun6ezUwcnbal",
				buttonsContainer: "dZ3F6qSOhun6ezUwcnbal",
				Button: "_2rIEdliEXr7qNb-COL-zuO",
				button: "_2rIEdliEXr7qNb-COL-zuO",
				ErrButton: "_3CUr1530H3uD-ts9tKd9RA",
				errButton: "_3CUr1530H3uD-ts9tKd9RA",
				Status: "jXuqxr-x0kyU3BSfugjwM",
				status: "jXuqxr-x0kyU3BSfugjwM",
				hasError: "_4XwI6tILia1pR9HTda4wv",
				ProgressBar: "_1NvtB5J5UfhiHd0ix7TZgb",
				progressBar: "_1NvtB5J5UfhiHd0ix7TZgb",
				ProgressBarInner: "_29o2WRRYmrLU47NaFzQzxq",
				progressBarInner: "_29o2WRRYmrLU47NaFzQzxq",
				ErrorLine: "_3M-thbkBHHvsWjDt8edbhz",
				errorLine: "_3M-thbkBHHvsWjDt8edbhz",
				Component: "_1CqupI5I-zzAInIdLwphQg",
				component: "_1CqupI5I-zzAInIdLwphQg"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/VideoPreview/index.m.less": function(e, t, n) {
			e.exports = {
				VideoPlayer: "_3gstD1_YUjNWZqjtwdgU9t",
				videoPlayer: "_3gstD1_YUjNWZqjtwdgU9t",
				PosterImg: "_2C2yx7Rf_BKPOyll-aq_hI",
				posterImg: "_2C2yx7Rf_BKPOyll-aq_hI",
				Poster: "_1UCJLqzcYXck8Ahv0PlvVw",
				poster: "_1UCJLqzcYXck8Ahv0PlvVw",
				Component: "wSihDBKVJH6iP2jdDjRQ6",
				component: "wSihDBKVJH6iP2jdDjRQ6",
				playButton: "il4HPAfKcVtq-WQY-if85"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/MediaView/index.m.less": function(e, t, n) {
			e.exports = {
				statusBar: "_33CSkXq7gXeXCM2zSal9BN",
				container: "_1FMEfWD94pPZ_HdEN_e7Xy",
				isCompact: "_3-T8BPflZuKw_F2VRPDbcX",
				isUploaded: "_3Lj2c902Oeb7yL_jYu9v5L",
				isSelected: "Eaps2a9y_jwhKHth8v14G",
				imagePreview: "_2nlrFrYbO0bIKFeZ3HMbn_",
				placeholder: "_1-LSy7nvfNGWVhRWwwQu6A",
				videoPreview: "_2MumquPHY8gruoy6114twC",
				alignCenter: "_3U9f0TNBM1K2bggm3KMHTk",
				renderSmallMedia: "_3L8V1OmRzcZEzmJFdJV6dS"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/SelectionHook/index.m.less": function(e, t, n) {
			e.exports = {
				HiddenDiv: "_13RYjdyxMuKrkV_EtlOjhg",
				hiddenDiv: "_13RYjdyxMuKrkV_EtlOjhg"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/Toolbar/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_3hDtN0e5U4EpahGe25ye-b",
				alignCenter: "Vh7FGvkGyl5SeyJP4J1GG",
				content: "_3wXzBVn-uBvRcixZwQWkNX",
				multiButtonToolbarContent: "_4g7-oW_EplZpFIKv75-Lu",
				FormatterButton: "_6DRydZXlG3Ko7_4xxYUhW",
				formatterButton: "_6DRydZXlG3Ko7_4xxYUhW",
				ToolbarContent: "_3qUkCQkbZvTB6uBQEQQfSZ",
				toolbarContent: "_3qUkCQkbZvTB6uBQEQQfSZ"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaBlock/index.m.less": function(e, t, n) {
			e.exports = {
				MediaContainer: "_12ZUhulrgf1BAChnRZHmZt",
				mediaContainer: "_12ZUhulrgf1BAChnRZHmZt",
				Container: "DK9d46mm9FgC8mFWPGlG_",
				container: "DK9d46mm9FgC8mFWPGlG_"
			}
		},
		"./src/reddit/components/RichTextEditor/media/MediaCaption/index.m.less": function(e, t, n) {
			e.exports = {
				wrapper: "_2eZK2IABgFqGZLMYPxwoNY"
			}
		},
		"./src/reddit/components/RichTextEditor/media/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "q", (function() {
				return g
			})), n.d(t, "h", (function() {
				return v
			})), n.d(t, "r", (function() {
				return x
			})), n.d(t, "l", (function() {
				return C
			})), n.d(t, "k", (function() {
				return E
			})), n.d(t, "n", (function() {
				return y
			})), n.d(t, "p", (function() {
				return O
			})), n.d(t, "d", (function() {
				return _
			})), n.d(t, "c", (function() {
				return j
			})), n.d(t, "e", (function() {
				return S
			})), n.d(t, "m", (function() {
				return w
			})), n.d(t, "g", (function() {
				return I
			})), n.d(t, "j", (function() {
				return P
			})), n.d(t, "i", (function() {
				return M
			})), n.d(t, "o", (function() {
				return R
			})), n.d(t, "b", (function() {
				return N
			})), n.d(t, "f", (function() {
				return L
			}));
			var o, s = n("./node_modules/draft-js/lib/Draft.js"),
				r = n("./node_modules/immutable/dist/immutable.js"),
				i = n("./node_modules/lodash/flatten.js"),
				a = n.n(i),
				c = n("./node_modules/lodash/last.js"),
				l = n.n(c),
				d = n("./src/reddit/helpers/media/index.ts"),
				u = n("./src/reddit/helpers/richTextEditor/index.ts"),
				p = n("./src/reddit/helpers/richTextJson/index.ts"),
				m = n("./src/reddit/models/Upload/index.ts"),
				h = n("./src/reddit/components/RichTextEditor/constants/editorChangeTypes.ts"),
				b = n("./src/reddit/components/RichTextEditor/helpers/common.ts"),
				f = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			! function(e) {
				e[e.Image = 0] = "Image", e[e.AnimatedImage = 1] = "AnimatedImage", e[e.Video = 2] = "Video"
			}(o || (o = {}));
			const g = e => e !== u.a.Comment,
				v = e => {
					if (!Object(f.o)(e.getType())) return;
					const t = e.getData(),
						n = t.get("mediaAsset"),
						o = t.get("uploadInfo");
					if (!n && !o) return;
					const s = t.get("thumbnail");
					return {
						makeGif: t.get("makeGif"),
						thumbnail: s,
						uploadInfo: o,
						mediaAsset: n
					}
				},
				x = (e, t, n) => {
					let o = e.getCurrentContent();
					const i = o.getBlockForKey(t),
						a = v(i),
						c = a && a.uploadInfo;
					if (!c) throw new Error("Block must contain `uploadInfo` data");
					if (n.makeGif === a.makeGif && n.thumbnail === a.thumbnail) return e;
					const l = Object(r.Map)(n),
						d = o.getBlockMap().toKeyedSeq().filter(e => {
							const t = v(e);
							return !!t && !!t.uploadInfo && t.uploadInfo.uploadKey === c.uploadKey
						}).map(e => e.mergeIn(["data"], l));
					return o = (o = o.mergeIn(["blockMap"], d)).merge({
						selectionAfter: e.getSelection()
					}), s.EditorState.push(e, o, h.b)
				},
				C = (e, t, n, o, i) => {
					let c = e.getCurrentContent();
					const u = a()(t.map(e => {
						const t = Object(d.g)(e.metadata.mimetype),
							n = (e => {
								if (e && e.metadata.videoFirstFrameUrl) {
									return {
										url: e.metadata.videoFirstFrameUrl,
										time: 0
									}
								}
							})(e),
							o = new s.ContentBlock({
								key: Object(s.genKey)(),
								type: f.a,
								data: Object(r.Map)({
									uploadInfo: {
										mediaType: t,
										uploadKey: e.key
									},
									thumbnail: n
								})
							}),
							a = new s.ContentBlock({
								key: Object(s.genKey)(),
								type: f.j
							});
						return i ? [o] : [o, a]
					}));
					c = Object(b.f)(c, n, u, o);
					const p = s.EditorState.push(e, c, h.e),
						m = l()(u);
					return s.EditorState.forceSelection(p, Object(b.b)(m, !0))
				},
				E = (e, t, n, i, a, c, l, d) => {
					const u = new s.ContentBlock({
							key: Object(s.genKey)(),
							type: f.a,
							data: Object(r.Map)({
								mediaAsset: {
									type: o.AnimatedImage,
									assetId: Object(p.c)(t, i),
									imageUrl: n,
									width: a,
									height: c
								}
							})
						}),
						m = Object(b.f)(e.getCurrentContent(), l, [u], d);
					let g = s.EditorState.push(e, m, h.e);
					g = s.EditorState.forceSelection(g, Object(b.b)(u, !0));
					const v = u.getKey();
					return g.getCurrentContent().getBlockAfter(v) || (g = N(g, v)), g
				};

			function y(e, t) {
				return e.isCollapsed() && e.getStartKey() === t && 0 === e.getStartOffset() && 0 === e.getEndOffset()
			}

			function O(e, t) {
				const n = e.getCurrentContent().getBlockAfter(t);
				return s.EditorState.forceSelection(e, Object(b.b)(n, !0))
			}
			const k = (e, t) => {
					const n = e.getBlockAfter(t);
					return e = Object(b.i)(e, t), n && Object(f.u)(n.getType()) && (e = Object(b.i)(e, n.getKey())), e
				},
				_ = function(e, t) {
					let n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
						o = e.getCurrentContent();
					o = k(o, t);
					let r = n ? s.EditorState.push(e, o, h.f) : s.EditorState.set(e, {
						currentContent: o
					});
					return r = s.EditorState.forceSelection(r, o.getSelectionAfter())
				},
				j = e => {
					let t = e.getCurrentContent();
					T(t).forEach(e => {
						t = k(t, e.getKey())
					});
					const n = s.EditorState.push(e, t, h.f);
					return s.EditorState.forceSelection(n, t.getSelectionAfter())
				},
				S = e => {
					let t = e.getCurrentContent();
					const n = e.getSelection();
					t = s.Modifier.removeRange(t, n, "forward");
					let o = s.EditorState.push(e, t, h.f);
					return o = s.EditorState.forceSelection(o, t.getSelectionAfter())
				},
				T = e => e.getBlockMap().toSeq().filter(e => !!e && !!v(e)),
				w = (e, t) => e.getBlockMap().toSeq().filter(e => {
					const n = v(e),
						o = n && n.uploadInfo && n.uploadInfo.uploadKey;
					return !(!o || t[o] && t[o].url)
				}).isEmpty(),
				I = e => {
					const t = T(e),
						n = {
							gifvideo: 0,
							image: 0,
							video: 0,
							total: 0
						};
					return t.forEach(e => {
						const t = v(e);
						let s;
						s = t.makeGif ? "gifvideo" : t.uploadInfo && "video" === t.uploadInfo.mediaType || t.mediaAsset && t.mediaAsset.type === o.Video ? "video" : "image", n[s]++, n.total++
					}), n
				},
				P = e => !T(e).isEmpty(),
				M = (e, t) => {
					const n = T(e).map(e => {
						const n = v(e),
							{
								uploadInfo: o,
								thumbnail: s
							} = n;
						if (!o || !s) return;
						const r = D(n),
							i = t[r];
						return i && i.url ? void 0 : {
							...s,
							uploadKey: r
						}
					}).filter(Boolean).toArray();
					return n.length ? n : void 0
				},
				R = (e, t, n, o) => {
					let r = e.getCurrentContent();
					const i = r.getBlockForKey(t),
						a = r.getBlockAfter(t),
						c = [i];
					if (a && Object(f.u)(a.getType()) && c.push(a), c.find(e => e.getKey() === n)) return;
					const d = c.reduce((e, t) => e.remove(t.getKey()), r.getBlockMap());
					r = r.set("blockMap", d), r = Object(b.f)(r, n, c, o);
					const u = s.EditorState.push(e, r, h.e);
					return s.EditorState.forceSelection(u, Object(b.b)(l()(c), !0))
				},
				N = function(e, t) {
					let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : b.a.after;
					const o = Object(b.h)(),
						r = Object(b.f)(e.getCurrentContent(), t, [o], n),
						i = s.EditorState.push(e, r, h.e);
					return s.EditorState.forceSelection(i, s.SelectionState.createEmpty(o.getKey()))
				},
				D = e => e.thumbnail && e.uploadInfo ? `${e.uploadInfo.uploadKey}-thumbnail-${e.thumbnail.time}` : "",
				L = (e, t) => {
					let n = "",
						o = "";
					if (e.uploadInfo) {
						const {
							uploadKey: s
						} = e.uploadInfo, r = t[s];
						r && r.url && (n = Object(m.b)(r.url));
						const i = t[D(e)];
						i && i.url && (o = Object(m.b)(i.url))
					}
					return {
						assetId: n,
						thumbnailAssetId: o
					}
				}
		},
		"./src/reddit/components/RichTextEditor/spoiler/decorator.m.less": function(e, t, n) {
			e.exports = {
				spoiler: "_1AlhnBqYYVTQbTr33YViyK"
			}
		},
		"./src/reddit/components/RichTextEditor/spoiler/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return r
			})), n.d(t, "a", (function() {
				return i
			}));
			var o = n("./src/lib/forEachGroup/index.ts"),
				s = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const r = e => e.getStyle().has(s.k.SPOILER);

			function i(e, t, n) {
				const s = e.getCharacterList();
				Object(o.a)(s, {
					keyFn: r
				}, (e, n, o, s) => {
					n && t(o, s)
				})
			}
		},
		"./src/reddit/components/RichTextEditor/table/Renderer/index.m.less": function(e, t, n) {
			e.exports = {
				Cell: "_1J5sneEp0XXo0pFsMN7Kjs",
				cell: "_1J5sneEp0XXo0pFsMN7Kjs",
				Row: "_2Hd-Rc7z9gTKIz6JUGhbcl",
				row: "_2Hd-Rc7z9gTKIz6JUGhbcl",
				Table: "_9QFGu47IyMX1ID1xQid-8",
				table: "_9QFGu47IyMX1ID1xQid-8",
				isFakeSelectionActive: "_1QXaG0_iXh-LFDkah9HqP3"
			}
		},
		"./src/reddit/components/RichTextEditor/table/Toolbar/index.m.less": function(e, t, n) {
			e.exports = {
				formatterButton: "_1dNavKEU0lSO4mo9fYWTPm",
				ToolbarContent: "_1yPmb5QUbyAQX1wIs4FYQI",
				toolbarContent: "_1yPmb5QUbyAQX1wIs4FYQI",
				tooltip: "_3fnB5glctifL-mkYhH6aA1"
			}
		},
		"./src/reddit/components/RichTextEditor/table/ToolbarController/index.m.less": function(e, t, n) {
			e.exports = {
				ActionButton: "_2g2bsszGVtKe_XRKcRrpQi",
				actionButton: "_2g2bsszGVtKe_XRKcRrpQi",
				isPressed: "_2WwwYG59S_TJRq7FSdTVKK",
				ToolbarWrapper: "_3rXrpMuvoGNBbLE7TQQCB9",
				toolbarWrapper: "_3rXrpMuvoGNBbLE7TQQCB9"
			}
		},
		"./src/reddit/components/RichTextEditor/table/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			})), n.d(t, "g", (function() {
				return l
			})), n.d(t, "m", (function() {
				return u
			})), n.d(t, "n", (function() {
				return p
			})), n.d(t, "j", (function() {
				return m
			})), n.d(t, "l", (function() {
				return h
			})), n.d(t, "f", (function() {
				return b
			})), n.d(t, "k", (function() {
				return f
			})), n.d(t, "c", (function() {
				return g
			})), n.d(t, "h", (function() {
				return v
			})), n.d(t, "b", (function() {
				return x
			})), n.d(t, "i", (function() {
				return C
			})), n.d(t, "e", (function() {
				return E
			})), n.d(t, "o", (function() {
				return y
			})), n.d(t, "d", (function() {
				return O
			}));
			var o = n("./node_modules/draft-js/lib/Draft.js"),
				s = n("./node_modules/immutable/dist/immutable.js"),
				r = n("./src/reddit/models/RichTextJson/index.ts"),
				i = n("./src/reddit/components/RichTextEditor/helpers/sliceContiguousBlocks.ts"),
				a = n("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts");
			const c = {
					[r.e]: "left",
					[r.f]: "right",
					[r.d]: "center"
				},
				l = e => {
					const t = e.getData();
					return {
						colIndex: t.get("colIndex"),
						rowIndex: t.get("rowIndex"),
						colCount: t.get("colCount"),
						alignment: t.get("alignment")
					}
				},
				d = ["data"],
				u = (e, t) => e.mergeIn(d, t),
				p = (e, t, n) => e.merge({
					text: e.getText().slice(t, n),
					characterList: e.getCharacterList().slice(t, n)
				}),
				m = function(e, t) {
					let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "",
						s = arguments.length > 3 ? arguments[3] : void 0;
					const r = t.map(e => e.getText()).join(n),
						i = n ? s || o.CharacterMetadata.create() : null,
						a = [];
					return t.forEach(e => {
						a.push(...e.getCharacterList().toArray()), i && t.length > 1 && a.push(i)
					}), e.merge({
						text: r,
						characterList: a
					})
				},
				h = (e, t) => {
					const n = [];
					for (let r = 0; r < t; r++)
						for (let t = 0; t < e; t++) n.push(new o.ContentBlock({
							key: Object(o.genKey)(),
							type: a.l,
							data: Object(s.Map)({
								colCount: e,
								colIndex: t,
								rowIndex: r
							})
						}));
					return n
				},
				b = (e, t) => ({
					minCol: Math.min(e.colIndex, t.colIndex),
					minRow: Math.min(e.rowIndex, t.rowIndex),
					maxCol: Math.max(e.colIndex, t.colIndex),
					maxRow: Math.max(e.rowIndex, t.rowIndex)
				}),
				f = (e, t) => {
					const {
						minCol: n,
						minRow: o,
						maxCol: s,
						maxRow: r
					} = b(e, t);
					return (e, t) => o <= e && e <= r && n <= t && t <= s
				},
				g = (e, t) => e.rowIndex < t.rowIndex ? -1 : e.rowIndex > t.rowIndex ? 1 : e.colIndex - t.colIndex,
				v = (e, t) => e === t || !(!e || !t) && 0 === g(e, t),
				x = (e, t) => g(l(e), l(t)),
				C = e => {
					if (Object(a.v)(e.getType())) {
						return 0 === l(e).rowIndex
					}
					return !1
				},
				E = (e, t, n) => {
					const o = (t, n) => {
						if (t) {
							const o = Object(i.a)(e, t);
							return o && n && -1 !== o.blocks.indexOf(n) ? [o, o] : [o, n ? Object(i.a)(e, n) : null]
						}
						return n ? o(n, null).reverse() : [null, null]
					};
					return o(Object(a.v)(t.getType()) ? t : null, Object(a.v)(n.getType()) ? n : null)
				},
				y = function(e, t, n) {
					let o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
					const s = {
						isBackward: o
					};
					return t && (s.anchorKey = t.getKey(), s.anchorOffset = o ? t.getLength() : 0), n && (s.focusKey = n.getKey(), s.focusOffset = o ? 0 : n.getLength()), e.merge(s)
				},
				O = e => {
					if (!e.length) return [];
					const t = e[0].length;
					return e.map((e, n) => e.map((e, o) => u(e, {
						rowIndex: n,
						colIndex: o,
						colCount: t
					})))
				}
		},
		"./src/reddit/components/ScheduledPost/PostSchedulePickerModal/loader.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/@loadable/component/dist/loadable.esm.js");
			t.a = Object(o.a)({
				resolved: {},
				chunkName: () => "reddit-components-ScheduledPost-PostSchedulePickerModal",
				isReady(e) {
					const t = this.resolve(e);
					return !1 !== this.resolved[t] && !!n.m[t]
				},
				importAsync: () => n.e("reddit-components-ScheduledPost-PostSchedulePickerModal").then(n.bind(null, "./src/reddit/components/ScheduledPost/PostSchedulePickerModal/index.tsx")),
				requireAsync(e) {
					const t = this.resolve(e);
					return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
				},
				requireSync(e) {
					const t = this.resolve(e);
					return n(t)
				},
				resolve() {
					return "./src/reddit/components/ScheduledPost/PostSchedulePickerModal/index.tsx"
				}
			})
		},
		"./src/reddit/components/SidebarFooter/index.m.less": function(e, t, n) {
			e.exports = {
				GreyRereddit: "_3Y8af3R9_DE3lpXa6Hq5Ab",
				greyRereddit: "_3Y8af3R9_DE3lpXa6Hq5Ab",
				Widget: "_2wqyhtudP4weVGsZdVXJgt",
				widget: "_2wqyhtudP4weVGsZdVXJgt",
				LinkContainer: "_1KrMye71CT332tKKKUWAj6",
				linkContainer: "_1KrMye71CT332tKKKUWAj6",
				Column: "_3f2nSSsPBqVDV6Sz82qgrR",
				column: "_3f2nSSsPBqVDV6Sz82qgrR",
				Link: "_3Eyh3vRo5o4IfzVZXhaWAG",
				link: "_3Eyh3vRo5o4IfzVZXhaWAG",
				NoneCapitalizeLink: "_3GijmRx58E2GzbuzKVHDex",
				noneCapitalizeLink: "_3GijmRx58E2GzbuzKVHDex",
				Copyright: "_34dh2eyzMvJfjCBLeoWiDD",
				copyright: "_34dh2eyzMvJfjCBLeoWiDD"
			}
		},
		"./src/reddit/components/SidebarFooter/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./node_modules/@reddit/reddit-country-url-redirects/dist/esm/index.js"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/reddit/components/Onboarding/LanguageCollection/prompt.tsx"),
				d = n("./src/reddit/components/TrackingHelper/index.tsx"),
				u = n("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				p = n("./src/reddit/constants/experiments.ts"),
				m = n("./src/reddit/constants/location.ts"),
				h = n("./src/reddit/contexts/PageLayer/index.tsx"),
				b = n("./src/reddit/helpers/trackers/navigation.ts"),
				f = n("./src/reddit/selectors/experiments/countrySites.ts"),
				g = n("./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts"),
				v = n("./src/reddit/selectors/experiments/navbarLikeMweb.ts"),
				x = n("./src/reddit/selectors/meta.ts"),
				C = n("./src/redditGQL/types.ts"),
				E = n("./src/reddit/components/SidebarFooter/index.m.less"),
				y = n.n(E);
			const {
				fbt: O
			} = n("./node_modules/fbt/lib/FbtPublic.js"), k = c.a.a("Link", y.a), _ = Object(i.c)({
				countryCode: x.b,
				d2xPdpSideRailRecsVariant: g.a,
				isCountrySitesEnabled: f.b,
				isD2xPdpSideRailRecsEnabled: g.b,
				isNavbarLikeMwebEnabled: v.a
			}), j = Object(r.b)(_), S = Object(h.v)({
				isFrontpage: h.B,
				isCountrySitePage: h.z
			}), T = e => {
				let {
					countryCode: t,
					reredditContent: n
				} = e;
				return s.a.createElement("div", {
					className: y.a.GreyRereddit
				}, n, !!m.c[t] && s.a.createElement("div", {
					className: y.a.LinkContainer
				}, s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/impressum"
				}, O._("Impressum", null, {
					hk: "4cKXSI"
				})), t === C.i.De && s.a.createElement(k, {
					href: "https://reddit.zendesk.com/hc/de/requests/new?ticket_form_id=360000152352",
					className: y.a.NoneCapitalizeLink
				}, O._("Report NetzDG Content", null, {
					hk: "1nszCF"
				}))), s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.reddithelp.com"
				}, O._("help", null, {
					hk: "4lyYaD"
				})), t === C.i.De && s.a.createElement(k, {
					href: "https://reddit.zendesk.com/hc/de/articles/360045289772-Deutschland-Meldungen-nach-dem-Netzwerkdurchsetzungsgesetz-NetzDG-"
				}, O._("Transparency report", null, {
					hk: "3CgBdG"
				})))), s.a.createElement("div", {
					className: y.a.LinkContainer
				}, s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/user-agreement"
				}, O._("User Agreement", null, {
					hk: "2RA6JL"
				})), s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/privacy-policy"
				}, O._("Privacy policy", null, {
					hk: "10K04G"
				}))), s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/content-policy"
				}, O._("Content policy", null, {
					hk: "1DyxZS"
				})), s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/moderator-guidelines"
				}, O._("Moderator Code of Conduct", null, {
					hk: "tWEG"
				})))), s.a.createElement("div", {
					className: y.a.Copyright
				}, O._("Reddit, Inc. © {year}. All rights reserved.", [O._param("year", (new Date).getFullYear().toString())], {
					hk: "DPZBh"
				})))
			};
			t.a = S(j(Object(d.c)(e => {
				const t = Object(r.f)().getState(),
					n = Object(f.a)(t, Object(a.c)());
				if (e.isD2xPdpSideRailRecsEnabled) {
					const t = e.d2xPdpSideRailRecsVariant === p.kd.GreyRereddit || e.d2xPdpSideRailRecsVariant === p.kd.GreyRedditNoNsfw || e.d2xPdpSideRailRecsVariant === p.kd.LargeImagePreview ? e.reredditButtons : [];
					return s.a.createElement(T, {
						reredditContent: t,
						countryCode: e.countryCode
					})
				}
				if (!e.isFrontpage && !e.isCountrySitePage) return null;
				const o = t => {
					const o = {
						de: "Deutsch",
						fr: "Français",
						es: "Español",
						en: "English",
						it: "Italiano",
						pt: "Português"
					};
					return n.includes(t) || "en" === t ? s.a.createElement(k, {
						href: "en" === t ? "/" : `/${t}/`,
						onClick: () => e.sendEvent(Object(b.a)(t))
					}, o[t]) : null
				};
				return s.a.createElement(u.a, {
					className: y.a.Widget,
					redditStyle: e.redditStyle,
					contentOnly: !0
				}, !!m.c[e.countryCode] && s.a.createElement("div", {
					className: y.a.LinkContainer
				}, s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/impressum"
				}, O._("Impressum", null, {
					hk: "4cKXSI"
				})), e.countryCode === C.i.De && s.a.createElement(k, {
					href: "https://reddit.zendesk.com/hc/de/requests/new?ticket_form_id=360000152352",
					className: y.a.NoneCapitalizeLink
				}, O._("Report NetzDG Content", null, {
					hk: "1nszCF"
				}))), s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.reddithelp.com"
				}, O._("help", null, {
					hk: "4lyYaD"
				})), e.countryCode === C.i.De && s.a.createElement(k, {
					href: "https://reddit.zendesk.com/hc/de/articles/360045289772-Deutschland-Meldungen-nach-dem-Netzwerkdurchsetzungsgesetz-NetzDG-"
				}, O._("Transparency report", null, {
					hk: "3CgBdG"
				})))), s.a.createElement("div", {
					className: y.a.LinkContainer
				}, s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/user-agreement"
				}, O._("User Agreement", null, {
					hk: "2RA6JL"
				})), s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/privacy-policy"
				}, O._("Privacy policy", null, {
					hk: "10K04G"
				}))), s.a.createElement("div", {
					className: y.a.Column
				}, s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/content-policy"
				}, O._("Content policy", null, {
					hk: "1DyxZS"
				})), s.a.createElement(k, {
					href: "https://www.redditinc.com/policies/moderator-guidelines"
				}, O._("Moderator Code of Conduct", null, {
					hk: "tWEG"
				})))), (e.isCountrySitePage || e.isCountrySitesEnabled) && s.a.createElement("div", {
					className: y.a.LinkContainer
				}, s.a.createElement("div", {
					className: y.a.Column
				}, o("en"), o("fr"), o("it")), s.a.createElement("div", {
					className: y.a.Column
				}, o("de"), o("es"), o("pt"))), s.a.createElement("div", {
					className: y.a.Copyright
				}, O._("Reddit, Inc. © {year}. All rights reserved.", [O._param("year", (new Date).getFullYear().toString())], {
					hk: "DPZBh"
				})), s.a.createElement(l.a, null))
			})))
		},
		"./src/reddit/components/SidebarSpacer/index.m.less": function(e, t, n) {
			e.exports = {
				Component: "_2vEf-C2keJaBMY9qk_BxVn",
				component: "_2vEf-C2keJaBMY9qk_BxVn"
			}
		},
		"./src/reddit/components/SidebarSpacer/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/reddit/components/SidebarSpacer/index.m.less"),
				s = n.n(o),
				r = n("./src/lib/lessComponent.tsx");
			t.a = r.a.div("Component", s.a)
		},
		"./src/reddit/components/SourceLink/index.m.less": function(e, t, n) {
			e.exports = {
				OutboundLinkIcon: "_2WV2dTLgPlEXLVEmIexAxf",
				outboundLinkIcon: "_2WV2dTLgPlEXLVEmIexAxf",
				SourceLinkWrapper: "_10wC0aXnrUKfdJ4Ssz-o14",
				sourceLinkWrapper: "_10wC0aXnrUKfdJ4Ssz-o14",
				"m-comment": "_1-PD0_zreH-KVwpFoCLvQF",
				mComment: "_1-PD0_zreH-KVwpFoCLvQF"
			}
		},
		"./src/reddit/components/SourceLink/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return k
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/ads/index.ts"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/lib/getShortenedLink.ts"),
				c = n("./node_modules/fbt/lib/FbtPublic.js"),
				l = n("./src/lib/avatarShareImages.ts"),
				d = n("./src/reddit/components/ProfileIdCard/SnoovatarButton/TryItOn.tsx"),
				u = n("./src/reddit/components/AvatarPost/index.m.less"),
				p = n.n(u);
			var m = e => {
					let {
						sourceUrl: t,
						username: n,
						post: o
					} = e;
					const [r, i] = new URL(t).pathname.split("/").slice(2), a = Object(l.a)(i);
					return s.a.createElement("div", {
						className: p.a.avatarPostContainer
					}, s.a.createElement("img", {
						className: p.a.avatarPostImage,
						src: a,
						alt: c.fbt._("User Shared Avatar", null, {
							hk: "FDRaA"
						})
					}), s.a.createElement(d.a, {
						isHovercard: !1,
						username: n,
						isAvatarPost: !0,
						post: o,
						share: {
							username: r,
							avatarId: i
						}
					}))
				},
				h = n("./src/reddit/controls/OutboundLink/styled.tsx"),
				b = n("./src/reddit/hooks/useIsAvatarPost.ts"),
				f = n("./src/reddit/icons/fonts/OutboundLink/index.tsx"),
				g = n("./src/reddit/components/SourceLink/index.m.less"),
				v = n.n(g),
				x = n("./src/lib/lessComponent.tsx"),
				C = n("./src/telemetry/models/Outbound.ts"),
				E = n("./src/reddit/hooks/useIsRemovedOrDeletedPost.ts");
			const y = x.a.wrapped(f.a, "OutboundLinkIcon", v.a),
				O = x.a.div("SourceLinkWrapper", v.a);

			function k(e) {
				const {
					className: t,
					post: n,
					isCommentsPage: o,
					pageLayer: c
				} = e, l = o ? C.SourceElement.PostLink : C.SourceElement.ListingPostLink, {
					source: d
				} = n, u = n.isSponsored || Object(r.u)(c), p = Object(b.a)(n), f = Object(E.a)();
				return !d || f ? null : p ? s.a.createElement(m, {
					sourceUrl: d.url,
					username: n.author,
					post: n
				}) : s.a.createElement(O, {
					className: Object(i.a)({
						[v.a["m-comment"]]: o
					}, t)
				}, s.a.createElement(h.a, {
					href: d.url,
					isSponsored: u,
					postId: n.id,
					source: d,
					sourceElement: l
				}, Object(a.a)({
					...n,
					isSponsored: u
				}), s.a.createElement(y, {
					isFilled: !0
				})))
			}
		},
		"./src/reddit/components/StructuredStyles/BladeManager/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/connectors/connectClickToToggleEditor.ts");
			class i extends s.a.Component {
				constructor() {
					super(...arguments), this.onClickCapture = e => {
						this.props.isEditing && this.props.subredditId && !this.props.isModalOpen && (e.stopPropagation(), e.preventDefault(), this.props.requestCloseBlade())
					}
				}
				render() {
					return s.a.createElement("div", {
						className: this.props.className,
						onClickCapture: this.onClickCapture,
						children: this.props.children
					})
				}
			}
			var a = Object(r.a)(i);
			t.a = e => s.a.createElement(a, e)
		},
		"./src/reddit/components/StructuredStyles/StyledComponents/navs.m.less": function(e, t, n) {
			e.exports = {
				FormNavElement: "KLpkXNw-FZfqtRK9U_8HB",
				formNavElement: "KLpkXNw-FZfqtRK9U_8HB",
				disabled: "_2omjYUqCweNidaShU2H5EC",
				DragCard: "ygS6b189jD1GHwzotinJB",
				dragCard: "ygS6b189jD1GHwzotinJB",
				isOverAndCanDrop: "_3_GRCa3UIhqQ68fvB00PLZ",
				isDragging: "_2yg01oNjKP8Gcb4HPjf58k"
			}
		},
		"./src/reddit/components/StructuredStyles/StyledComponents/navs.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return l
			})), n.d(t, "a", (function() {
				return d
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/components/StructuredStyles/StyledComponents/navs.m.less"),
				a = n.n(i);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const l = e => {
					let {
						disabled: t,
						...n
					} = e;
					return s.a.createElement("div", c({}, n, {
						className: Object(r.a)(a.a.FormNavElement, {
							[a.a.disabled]: t
						})
					}), n.children)
				},
				d = e => {
					let {
						canDrop: t,
						className: n,
						isDragging: o,
						isOver: i,
						disabled: l,
						...d
					} = e;
					return s.a.createElement("div", c({}, d, {
						className: Object(r.a)(a.a.DragCard, {
							[a.a.disabled]: l,
							[a.a.isDraffing]: o,
							[a.a.isOverAndCanDrop]: i && t
						}, n)
					}))
				}
		},
		"./src/reddit/components/SubredditNameLink/index.m.less": function(e, t, n) {
			e.exports = {
				SubredditName: "_3ryJoIoycVkA88fy40qNJc",
				subredditName: "_3ryJoIoycVkA88fy40qNJc"
			}
		},
		"./src/reddit/components/SubredditNameLink/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react-router-dom/esm/react-router-dom.js"),
				s = n("./src/reddit/components/SubredditNameLink/index.m.less"),
				r = n.n(s);
			const i = n("./src/lib/lessComponent.tsx").a.wrapped(o.a, "SubredditName", r.a);
			t.a = i
		},
		"./src/reddit/components/SubscribeButton/Inline.m.less": function(e, t, n) {
			e.exports = {
				ButtonSpacer: "vXXjS_s-Ic4QZpFsPjThV",
				buttonSpacer: "vXXjS_s-Ic4QZpFsPjThV",
				Checkmark: "_2qm48d8K8lTcwSJiHL9KLT",
				checkmark: "_2qm48d8K8lTcwSJiHL9KLT",
				Plus: "_2zcGm9WDxG67GYyNNvHzlA",
				plus: "_2zcGm9WDxG67GYyNNvHzlA"
			}
		},
		"./src/reddit/components/SubscribeButton/Inline.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/components/TrackingHelper/index.tsx"),
				i = n("./src/reddit/connectors/SubscribeButton/index.ts"),
				a = n("./src/reddit/controls/Button/index.tsx"),
				c = n("./src/reddit/components/SubscribeButton/helpers/actionTemplateSource.ts"),
				l = n("./src/reddit/components/SubscribeButton/Inline.m.less"),
				d = n.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const p = n("./src/lib/lessComponent.tsx").a.div("ButtonSpacer", d.a);
			class m extends s.a.Component {
				constructor(e) {
					super(e), this.onMouseEnter = () => {
						this.setState({
							isHovered: !0
						})
					}, this.onMouseLeave = () => {
						this.setState({
							isHovered: !1
						})
					}, this.onClick = e => {
						const {
							props: t
						} = this;
						if (t.userIsSubscriber ? t.onUnsubscribe() : (this.setState({
								hasJustSubscribed: !0
							}), t.onSubscribe()), t.onClick && t.onClick(e), t.getEventFactory) {
							const e = t.getEventFactory(t.userIsSubscriber);
							e && t.sendEvent(e)
						}
					}, this.renderUnsubscribeButton = () => {
						const {
							className: e,
							identifier: t,
							onSubscribe: n,
							onUnsubscribe: o,
							postId: r,
							sendEvent: i,
							size: l,
							userIsSubscriber: d,
							doNotHideOtherSubscribeButtons: p,
							getEventFactory: m,
							onSubscriptionsRequested: h,
							priority: b,
							isShredditParityEnabled: f,
							...g
						} = this.props, v = this.state.isHovered, x = Object(c.a)({
							type: t.type,
							key: v ? "unsubscribe" : "subscribed"
						}), C = g.shouldReverseColor ? a.c.Secondary : a.c.Primary;
						return s.a.createElement(a.t, u({
							className: e,
							priority: b || C,
							rplStyle: f,
							text: x,
							onClick: this.onClick,
							onMouseEnter: this.onMouseEnter,
							onMouseLeave: this.onMouseLeave,
							size: a.d.XSP
						}, g))
					}, this.renderSubscribeButton = () => {
						const {
							className: e,
							identifier: t,
							onSubscribe: n,
							onUnsubscribe: o,
							postId: r,
							sendEvent: i,
							size: l,
							userIsSubscriber: d,
							doNotHideOtherSubscribeButtons: p,
							getEventFactory: m,
							onSubscriptionsRequested: h,
							priority: b,
							isShredditParityEnabled: f,
							...g
						} = this.props, v = Object(c.a)({
							type: t.type,
							key: "subscribe"
						}), x = g.shouldReverseColor ? a.c.Secondary : a.c.Primary;
						return s.a.createElement(a.t, u({
							className: e,
							priority: b || x,
							size: a.d.XSP,
							rplStyle: f,
							text: v,
							onClick: this.onClick
						}, g, {
							id: `subscribe-button-${r}`,
							onMouseEnter: this.onMouseEnter,
							onMouseLeave: this.onMouseLeave
						}))
					}, this.state = {
						hasJustSubscribed: !1,
						isHovered: !1
					}
				}
				componentDidMount() {
					this.props.onSubscriptionsRequested()
				}
				render() {
					const {
						small: e = !1,
						userIsSubscriber: t,
						doNotHideOtherSubscribeButtons: n
					} = this.props;
					return t ? this.state.hasJustSubscribed || n ? this.renderUnsubscribeButton() : e ? null : s.a.createElement(p, null) : this.renderSubscribeButton()
				}
			}
			t.a = Object(i.a)(Object(r.c)(m))
		},
		"./src/reddit/components/SubscribeButton/helpers/actionTemplateSource.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return i
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js");
			const s = e => {
					let {
						type: t
					} = e;
					return "subreddit" === t ? "subredditActions" : "profileActions"
				},
				r = {
					subredditActions: {
						subscribe: () => o.fbt._("Join", null, {
							hk: "3Nhj3V"
						}),
						subscribed: () => o.fbt._("Joined", null, {
							hk: "1YGago"
						}),
						unsubscribe: () => o.fbt._("Leave", null, {
							hk: "299znK"
						})
					},
					profileActions: {
						subscribe: () => o.fbt._("Follow", null, {
							hk: "18PRa5"
						}),
						subscribed: () => o.fbt._("Following", null, {
							hk: "sjS3y"
						}),
						unsubscribe: () => o.fbt._("Unfollow", null, {
							hk: "3c0uwF"
						})
					}
				},
				i = e => {
					let {
						type: t,
						key: n
					} = e;
					return r[s({
						type: t
					})][n]()
				}
		},
		"./src/reddit/components/ThumbnailSelector/index.m.less": function(e, t, n) {
			e.exports = {
				Component: "uqOt5KqJAqw5pe-WNxa0a",
				component: "uqOt5KqJAqw5pe-WNxa0a",
				TitleRow: "HEiFtUR3s93dQ2jUWWnxr",
				titleRow: "HEiFtUR3s93dQ2jUWWnxr",
				Close: "_3RlS_q06rJ_8dy_UNp3Ev7",
				close: "_3RlS_q06rJ_8dy_UNp3Ev7",
				CloseWrapper: "_3lFQIq1yN1kLxjZb5AvHjL",
				closeWrapper: "_3lFQIq1yN1kLxjZb5AvHjL",
				ThumbnailsContainer: "_2sw7c1Sfzp0uz-RIcglCo",
				thumbnailsContainer: "_2sw7c1Sfzp0uz-RIcglCo",
				Image: "_2H32szY9NZ1aKr6j4Ced7u",
				image: "_2H32szY9NZ1aKr6j4Ced7u",
				thumbnail: "_2Ks8P6YD1-8_Ju3IrYpPJf",
				isSelected: "_3oA67AGI49fKcqDP970t4U",
				ButtonRow: "_2Bo7ys2El8ABMVNqYUdrA5",
				buttonRow: "_2Bo7ys2El8ABMVNqYUdrA5",
				CancelButton: "mBq3crGX9-xOOg-b-1V85",
				cancelButton: "mBq3crGX9-xOOg-b-1V85"
			}
		},
		"./src/reddit/components/ThumbnailSelector/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/lodash/debounce.js"),
				r = n.n(s),
				i = n("./node_modules/lodash/range.js"),
				a = n.n(i),
				c = n("./node_modules/react/index.js"),
				l = n.n(c),
				d = n("./src/lib/classNames/index.ts"),
				u = n("./src/lib/lessComponent.tsx"),
				p = n("./src/higherOrderComponents/asModal/index.tsx"),
				m = n("./src/reddit/controls/Button/index.tsx"),
				h = n("./src/reddit/helpers/media/index.ts"),
				b = n("./src/reddit/helpers/styles/mixins/loading.ts"),
				f = n("./src/reddit/icons/svgs/Close/index.tsx"),
				g = n("./src/reddit/layout/row/Inline/index.tsx"),
				v = n("./src/reddit/components/ThumbnailSelector/index.m.less"),
				x = n.n(v);
			const C = 10,
				E = Object(p.a)(u.a.div("Component", x.a)),
				y = u.a.wrapped(g.a, "TitleRow", x.a),
				O = u.a.wrapped(f.a, "Close", x.a),
				k = u.a.div("CloseWrapper", x.a),
				_ = u.a.div("ThumbnailsContainer", x.a),
				j = u.a.img("Image", x.a),
				S = e => l.a.createElement("div", {
					className: Object(d.a)(x.a.thumbnail, Object(b.a)({
						isLoading: e.isLoading
					}), {
						[x.a.isSelected]: e.isSelected
					}),
					onClick: e.onClick,
					ref: e.elementRef
				}, e.thumbnail.url && l.a.createElement(j, {
					src: e.thumbnail.url
				})),
				T = u.a.wrapped(g.a, "ButtonRow", x.a),
				w = m.l,
				I = u.a.wrapped(m.o, "CancelButton", x.a),
				P = (e, t) => {
					if (1 === e) return [0];
					const n = a()(0, t, t / (e - 1));
					return n.push(t), n.map(e => +e.toFixed(2))
				};
			class M extends l.a.Component {
				constructor(e) {
					super(e), this.isThumbnailsAreGenerating = !1, this.setSelectedElementRef = e => this.selectedElement = e, this.setThumbnails = r()(e => this.setState({
						thumbnails: e
					}), 100), this.scrollIntoView = () => {
						this.selectedElement && this.selectedElement.scrollIntoView({})
					}, this.setSelected = e => {
						this.setState({
							selectedIndex: e
						})
					}, this.onSelectButton = () => {
						const {
							selectedIndex: e
						} = this.state, t = this.state.thumbnails[e];
						this.props.onSelect({
							time: t.time,
							url: t.url
						})
					};
					const {
						thumbnailsCount: t = C,
						selected: n,
						videoDuration: o
					} = this.props, s = P(t, o).map(e => ({
						time: e,
						url: n && n.time === e ? n.url : void 0
					})), i = n ? s.findIndex(e => n.time === e.time) : -1;
					this.state = {
						thumbnails: s,
						selectedIndex: i
					}
				}
				componentDidMount() {
					this.scrollIntoView(), this.props.isOpen && this.generateVideoThumbnails()
				}
				componentDidUpdate(e) {
					this.props.isOpen && !e.isOpen && (this.scrollIntoView(), this.generateVideoThumbnails())
				}
				async generateVideoThumbnails() {
					const {
						thumbnails: e
					} = this.state;
					if (this.isThumbnailsAreGenerating || !e.find(e => !e.url)) return;
					this.isThumbnailsAreGenerating = !0;
					const t = document.createElement("video"),
						n = document.createElement("canvas");
					await Object(h.q)(t, this.props.videoSource);
					let o = 0;
					t.currentTime = e[o].time, await Object(h.e)(t, n, t => (e[o].url = t.dataUrl, o++, this.setThumbnails(e), o < e.length ? e[o].time : null)), this.setState({
						thumbnails: e
					}), this.isThumbnailsAreGenerating = !1
				}
				render() {
					if (!this.props.isOpen) return null;
					const {
						selectedIndex: e,
						thumbnails: t
					} = this.state;
					return l.a.createElement(E, {
						withOverlay: !0
					}, l.a.createElement(y, null, o.fbt._("Choose thumbnail", null, {
						hk: "XlI0H"
					}), l.a.createElement(k, {
						onClick: this.props.onToggleModal
					}, l.a.createElement(O, null))), l.a.createElement(_, null, t.map((t, n) => l.a.createElement(S, {
						key: n,
						elementRef: n === e ? this.setSelectedElementRef : void 0,
						isLoading: !t.url,
						onClick: () => this.setSelected(n),
						isSelected: n === e,
						thumbnail: t
					}))), l.a.createElement(T, null, l.a.createElement(I, {
						onClick: this.props.onToggleModal
					}, o.fbt._("Cancel", null, {
						hk: "2TSLl5"
					})), l.a.createElement(w, {
						onClick: this.onSelectButton
					}, o.fbt._("Select", null, {
						hk: "3s53WD"
					}))))
				}
			}
			t.a = M
		},
		"./src/reddit/components/UserIcon/CurrentUserIcon.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/classNames/index.ts"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/reddit/helpers/userSnoovatar/index.ts"),
				l = n("./src/reddit/selectors/user.ts"),
				d = n("./src/reddit/components/UserIcon/PresenceDot.tsx"),
				u = n("./src/reddit/components/UserIcon/SnoovatarHeadshot.tsx"),
				p = n("./src/reddit/components/UserIcon/UserIcon.tsx"),
				m = n("./src/reddit/components/UserIcon/UserIcon.m.less"),
				h = n.n(m);

			function b() {
				return (b = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const f = Object(a.c)({
					currentUser: l.m,
					isNightMode: l.fb,
					isPresenceUserPrefEnabled: l.X,
					shouldHideNSFW: l.H
				}),
				g = Object(i.b)(f);
			t.a = g(e => {
				const {
					currentUser: t,
					shouldShowPresenceIndicator: n,
					isPresenceUserPrefEnabled: s,
					wrapperClassName: i,
					...a
				} = e, l = Object(c.a)(null == t ? void 0 : t.accountIcon);
				return r.a.createElement("div", {
					className: Object(o.a)(h.a.currentUserIconWrapper, i)
				}, l ? r.a.createElement(u.a, {
					headshot: t.accountIcon,
					className: e.className
				}) : r.a.createElement(p.b, b({}, a, {
					iconUrl: t ? t.accountIcon : void 0,
					isCurrentUser: !0,
					isNSFW: !!t && t.isNSFW
				})), n && r.a.createElement(d.default, {
					showPresence: !0
				}))
			})
		},
		"./src/reddit/components/UsersCountIndicator/constants.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			})), n.d(t, "c", (function() {
				return r
			})), n.d(t, "d", (function() {
				return i
			})), n.d(t, "e", (function() {
				return a
			})), n.d(t, "f", (function() {
				return c
			})), n.d(t, "g", (function() {
				return l
			}));
			const o = 5,
				s = 2,
				r = 1e4,
				i = 2e3,
				a = 3e4,
				c = 1e4,
				l = 2
		},
		"./src/reddit/components/VerticalVotes/votes.m.less": function(e, t, n) {
			e.exports = {
				customDownvote: "ceU_3ot04pOVIcrrXH9fY",
				compact: "_3sO1xEnOT_9CQBjRzczQjS",
				voted: "_8dpZTfzgKPKCUTjp9SAn1",
				customUpvote: "_2k73nZrjAYiwAj9hv7K-kq"
			}
		},
		"./src/reddit/components/VerticalVotes/votes.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return I
			})), n.d(t, "b", (function() {
				return P
			})), n.d(t, "c", (function() {
				return M
			})), n.d(t, "d", (function() {
				return R
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/CSSVariableProvider/withTheme.tsx");
			const a = (e, t, n) => o => {
				const s = e(o),
					i = t(o),
					a = !s && i;
				return Object(r.a)(n.baseClassName, o.className, {
					[n.mIsInteractive]: i,
					[n.mIsActive]: s,
					[n.mIsVoteable]: a
				})
			};
			var c = n("./src/reddit/icons/fonts/Downvote/index.tsx"),
				l = n("./src/reddit/models/Vote/index.ts"),
				d = n("./src/reddit/controls/Downvote/index.m.less"),
				u = n.n(d);
			const p = {
					...u.a,
					baseClassName: u.a.Downvote
				},
				m = e => {
					let {
						voteState: t
					} = e;
					return t === l.a.downvoted
				},
				h = a(m, e => {
					let {
						interactive: t
					} = e;
					return !1 !== t
				}, p);
			var b = e => s.a.createElement(c.a, {
					className: h(e),
					compact: e.compact,
					isFilled: m(e)
				}),
				f = n("./src/reddit/icons/fonts/Upvote/index.tsx"),
				g = n("./src/reddit/controls/Upvote/index.m.less"),
				v = n.n(g);
			const x = {
					...v.a,
					baseClassName: v.a.Upvote
				},
				C = e => {
					let {
						voteState: t
					} = e;
					return t === l.a.upvoted
				},
				E = a(C, e => {
					let {
						interactive: t
					} = e;
					return !1 !== t
				}, x);
			var y = e => s.a.createElement(f.b, {
					className: E(e),
					compact: e.compact,
					isFilled: C(e)
				}),
				O = n("./src/reddit/helpers/styles/postBackgroundColor.ts"),
				k = n("./src/reddit/helpers/styles/smartTextColor.ts"),
				_ = n("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				j = n("./src/reddit/components/VerticalVotes/votes.m.less"),
				S = n.n(j);

			function T() {
				return (T = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const w = e => Object(r.a)({
					[S.a.compact]: e.compact,
					[S.a.dark]: Object(k.b)(Object(O.a)(e)),
					[S.a.nightmode]: e.isNightMode
				}),
				I = Object(i.a)(e => {
					const {
						voteIcons: t
					} = Object(_.a)(e), n = {
						"--verticalvotes-customdownvote-active": `url(${t.downvoteActive})`,
						"--verticalvotes-customdownvote-inactive": `url(${t.downvoteInactive})`
					}, {
						theme: o,
						isNightMode: i,
						voteState: a,
						compact: c,
						...d
					} = e;
					return s.a.createElement("button", T({}, d, {
						className: Object(r.a)(S.a.customDownvote, w(e), {
							[S.a.voted]: e.voteState === l.a.downvoted
						}, e.className),
						style: n
					}))
				}),
				P = Object(i.a)(e => {
					const {
						voteIcons: t
					} = Object(_.a)(e), n = {
						"--verticalvotes-customupvote-active": `url(${t.upvoteActive})`,
						"--verticalvotes-customupvote-inactive": `url(${t.upvoteInactive})`
					}, {
						theme: o,
						isNightMode: i,
						voteState: a,
						compact: c,
						...d
					} = e;
					return s.a.createElement("button", T({}, d, {
						className: Object(r.a)(S.a.customUpvote, w(e), {
							[S.a.voted]: e.voteState === l.a.upvoted
						}, e.className),
						style: n
					}))
				}),
				M = b,
				R = y
		},
		"./src/reddit/components/Widgets/PostCollection/CollectionOverflowMenu/index.m.less": function(e, t, n) {
			e.exports = {
				DropdownRow: "JoWBeMWu_l8J_Hn6Udz_j",
				dropdownRow: "JoWBeMWu_l8J_Hn6Udz_j"
			}
		},
		"./src/reddit/components/Widgets/PostCollection/CollectionOverflowMenu/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/lodash/noop.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./node_modules/react-redux/es/index.js"),
				c = n("./node_modules/react-router-redux/es/index.js"),
				l = n("./src/lib/lessComponent.tsx"),
				d = n("./src/reddit/actions/modal.ts"),
				u = n("./src/reddit/actions/post.ts"),
				p = n("./src/reddit/actions/postCollection/index.ts"),
				m = n("./src/reddit/components/ConfirmUserActionModal/index.tsx"),
				h = n("./src/reddit/components/OverflowMenu/index.tsx"),
				b = n("./src/reddit/components/TrackingHelper/index.tsx"),
				f = n("./src/reddit/controls/Dropdown/Row.tsx"),
				g = n("./src/reddit/selectors/activeModalId.ts"),
				v = n("./src/reddit/selectors/postCollection.ts"),
				x = n("./node_modules/reselect/es/index.js"),
				C = n("./src/reddit/helpers/trackers/postCollection.ts"),
				E = n("./src/reddit/components/Widgets/PostCollection/CollectionOverflowMenu/index.m.less"),
				y = n.n(E),
				O = n("./node_modules/fbt/lib/FbtPublic.js");
			const k = l.a.wrapped(f.b, "DropdownRow", y.a);
			let _;
			const j = Object(g.b)("DELETE_COLLECTION_CONFM_MODAL_ID"),
				S = Object(g.b)("EDIT_POST_COLLECTION_MODAL_ID"),
				T = Object(x.c)({
					createPostUrl: v.d,
					isDeleteConfirmModalOpen: j,
					isEditCollectionModalOpen: S,
					shouldShowCollectionEditOptions: v.s
				}),
				w = Object(a.b)(T, (e, t) => ({
					copyLink: () => e(Object(u.C)(t.permalink)),
					onCreatePost: n => {
						t.shouldShowCreatePost && e(Object(c.b)(n))
					},
					onRemoveCollection: () => e(Object(p.c)(t.collectionId, t.isSubmitPage)),
					onToggleDeleteConfirmModal: () => e(d.i("DELETE_COLLECTION_CONFM_MODAL_ID")),
					onToggleEditModal: async () => {
						_ || (_ = await Promise.all([n.e("vendors~CryptoHarbergerTaxManageModal~HarbergerTaxManageModal~ModerationPages~PostCreation~Settings~~f8934a85"), n.e("editCollectionModal")]).then(n.bind(null, "./src/reddit/components/EditCollectionModal/index.tsx")).then(e => e.EditCollectionModal)), e(d.i("EDIT_POST_COLLECTION_MODAL_ID"))
					}
				}));
			t.a = w(Object(b.c)(e => {
				const {
					className: t,
					collectionId: n,
					copyLink: o,
					createPostUrl: r,
					isDeleteConfirmModalOpen: a,
					isEditCollectionModalOpen: c,
					onCreatePost: l,
					onRemoveCollection: d,
					onToggleDeleteConfirmModal: u,
					onToggleEditModal: p,
					shouldShowCollectionEditOptions: b,
					shouldShowCreatePost: f,
					targetPosition: g,
					tooltipPosition: v,
					sendEvent: x
				} = e;
				return i.a.createElement(i.a.Fragment, null, i.a.createElement(h.b, {
					className: t,
					dropdownId: `collection-menu-${n}-${f?1:2}`,
					onClick: s.a,
					targetPosition: g,
					tooltipPosition: v
				}, i.a.createElement(k, {
					onClick: o,
					displayText: O.fbt._("Copy collection link", null, {
						hk: "3Rfodz"
					})
				}), b && i.a.createElement(i.a.Fragment, null, i.a.createElement(k, {
					onClick: () => {
						x(Object(C.l)(n)), p()
					},
					displayText: O.fbt._("Edit", null, {
						hk: "1nftDt"
					})
				}), i.a.createElement(k, {
					onClick: () => {
						x(Object(C.k)(n)), u()
					},
					displayText: O.fbt._("Delete collection", null, {
						hk: "2FyIJB"
					})
				}), f && i.a.createElement(k, {
					onClick: () => {
						l(r)
					},
					displayText: O.fbt._("Create post", null, {
						hk: "1v2jHl"
					})
				}))), c && _ && i.a.createElement(_, {
					collectionId: n,
					onClose: p,
					onEditSuccess: p
				}), a && i.a.createElement(m.a, {
					actionText: O.fbt._("Yes, Delete", null, {
						hk: "15Espn"
					}),
					headerText: O.fbt._("Delete Collection", null, {
						hk: "1QJ3as"
					}),
					modalText: O.fbt._("Are you sure you want to delete this collection? The posts within the collection won't be deleted.", null, {
						hk: "36jKp5"
					}),
					onConfirm: d,
					toggleModal: u,
					trackClick: s.a
				}))
			}))
		},
		"./src/reddit/components/Widgets/PostCollection/PendingItem/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_135f7-HhEMvekPzYxVBaFE",
				activeItemIndicator: "_31zbCRopTPo2NGtlgVsrBX",
				metaLine: "_1OrlyQwYIehGSk4bhP_l2R",
				title: "_2jvQA1RLlcCLU44q6eB3g0"
			}
		},
		"./src/reddit/components/Widgets/PostCollection/PostItem/OverflowMenu/index.m.less": function(e, t, n) {
			e.exports = {
				DropdownRow: "_3V8ByF4idIiROiWQ9i468R",
				dropdownRow: "_3V8ByF4idIiROiWQ9i468R"
			}
		},
		"./src/reddit/components/Widgets/PostCollection/PostItem/OverflowMenu/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/lodash/noop.js"),
				r = n.n(s),
				i = n("./node_modules/react/index.js"),
				a = n.n(i),
				c = n("./node_modules/react-redux/es/index.js"),
				l = n("./src/lib/lessComponent.tsx"),
				d = n("./src/lib/opener/index.ts"),
				u = n("./src/reddit/components/LinkOrOverlayLink/index.tsx"),
				p = n("./src/reddit/components/OverflowMenu/index.tsx"),
				m = n("./src/reddit/controls/Dropdown/Row.tsx"),
				h = n("./src/reddit/helpers/path/index.ts"),
				b = n("./src/reddit/selectors/experiments/eventPosts.ts"),
				f = n("./src/reddit/components/Widgets/PostCollection/PostItem/OverflowMenu/index.m.less"),
				g = n.n(f);
			const v = l.a.wrapped(m.b, "DropdownRow", g.a);
			t.a = e => {
				const {
					isFutureEvent: t,
					onAddEventStartTime: n,
					onEditStartTime: s,
					onStartEventNow: i,
					postPermalink: l,
					shouldShowAddEventStartTime: m,
					targetPosition: f,
					tooltipPosition: g
				} = e, x = !Object(c.e)(b.a);
				return a.a.createElement(p.b, {
					className: e.className,
					dropdownId: e.dropdownId,
					onClick: r.a,
					targetPosition: f,
					tooltipPosition: g
				}, m && n && x && a.a.createElement(v, {
					onClick: n,
					displayText: o.fbt._("Add event start time", null, {
						hk: "4xWttR"
					})
				}), t && i && x && a.a.createElement(v, {
					onClick: i,
					displayText: o.fbt._("Start event now", null, {
						hk: "2TTNfJ"
					})
				}), t && s && x && a.a.createElement(v, {
					onClick: s,
					displayText: o.fbt._("Edit start time", null, {
						hk: "44XUxC"
					})
				}), a.a.createElement(v, {
					onClick: e.onRemoveClick,
					displayText: o.fbt._("Remove from collection", null, {
						hk: "qsiiu"
					})
				}), l && a.a.createElement(u.a, {
					target: d.d.BLANK,
					rel: d.c,
					isOverlay: !1,
					to: Object(h.b)(l)
				}, a.a.createElement(v, {
					displayText: o.fbt._("View post", null, {
						hk: "1PtvnG"
					})
				})))
			}
		},
		"./src/reddit/components/Widgets/PostCollection/PostItem/Placeholder.m.less": function(e, t, n) {
			e.exports = {
				Container: "I9mI9NePKM1BEsmfZR-6H",
				container: "I9mI9NePKM1BEsmfZR-6H",
				Content: "_6d8yyfLZcJ1OXLzEXoApB",
				content: "_6d8yyfLZcJ1OXLzEXoApB",
				Title: "_1efKScSk4JSYvERdEecZnZ",
				title: "_1efKScSk4JSYvERdEecZnZ",
				Secondary: "_3fCsv_r4CtfCTdAzBRaR9N",
				secondary: "_3fCsv_r4CtfCTdAzBRaR9N"
			}
		},
		"./src/reddit/components/Widgets/PostCollection/PostItem/index.m.less": function(e, t, n) {
			e.exports = {
				container: "ceAYEjQdznT14GrQQ52QV",
				content: "_36S4oraLw5gf--rC9-aWZs",
				overflowMenu: "MiZ0gbh9xe5Yiwt3RQf2o",
				metaLine: "_2JVAK9jCDOKkFXe1XS6gwH",
				title: "_2U-RjfXG1sY-NtByFOS-uC"
			}
		},
		"./src/reddit/components/Widgets/PostCollection/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_3_XzG2WCa3EYhqzE_vUcMN",
				topRow: "r_Dz4suUXbQkBdwR-eQ77",
				collectionDescription: "_3K3iJQYRdF3d2n1WlPxkpr",
				listContainer: "_2K8wDNk-kaP5gX-QEAXuMc",
				listWrapper: "VYYQfc9_vtbBaR47zbXdB",
				menuButton: "_1BX9a5jz4LWzuQohy4Cvz4"
			}
		},
		"./src/reddit/components/Widgets/PostCollection/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/components/Widgets/PostCollection/CollectionOverflowMenu/index.tsx"),
				a = n("./node_modules/react-redux/es/index.js"),
				c = n("./node_modules/reselect/es/index.js"),
				l = n("./src/reddit/selectors/postCreations.ts"),
				d = n("./src/reddit/components/Widgets/PostCollection/PendingItem/index.m.less"),
				u = n.n(d);
			const {
				fbt: p
			} = n("./node_modules/fbt/lib/FbtPublic.js"), m = Object(c.c)({
				title: l.wb
			});
			var h = Object(a.b)(m)(e => {
					const {
						title: t
					} = e;
					return s.a.createElement("div", {
						className: u.a.container
					}, s.a.createElement("div", {
						className: u.a.activeItemIndicator
					}), t && s.a.createElement("h2", {
						className: u.a.title
					}, t), s.a.createElement("div", {
						className: u.a.metaLine
					}, p._("Editing", null, {
						hk: "2w5fAf"
					})))
				}),
				b = n("./node_modules/react-router-dom/esm/react-router-dom.js"),
				f = n("./src/reddit/actions/postCollection/index.ts"),
				g = n("./src/reddit/helpers/path/index.ts"),
				v = n("./src/reddit/selectors/posts.ts"),
				x = n("./src/reddit/components/HumanDate/index.tsx"),
				C = n("./src/lib/constants/index.ts"),
				E = n("./src/reddit/components/Widgets/PostCollection/PostItem/index.m.less"),
				y = n.n(E),
				O = n("./src/reddit/components/Widgets/PostCollection/PostItem/OverflowMenu/index.tsx"),
				k = n("./src/reddit/helpers/styles/mixins/loading.ts"),
				_ = n("./src/reddit/components/Widgets/PostCollection/PostItem/Placeholder.m.less"),
				j = n.n(_);

			function S(e) {
				let {
					className: t,
					isLoading: n
				} = e;
				const o = Object(k.a)({
					isLoading: n
				});
				return s.a.createElement("div", {
					className: Object(r.a)(j.a.Container, t)
				}, s.a.createElement("div", {
					className: j.a.Content
				}, s.a.createElement("div", {
					className: Object(r.a)(j.a.Title, o)
				}), s.a.createElement("div", {
					className: Object(r.a)(j.a.Secondary, o)
				})))
			}
			const {
				fbt: T
			} = n("./node_modules/fbt/lib/FbtPublic.js"), w = ["right", "bottom"], I = ["right", "top"];
			var P = Object(a.b)(() => Object(c.c)({
					post: v.F
				}), (e, t) => ({
					onRemovePostFromCollection: () => e(Object(f.g)(t.collectionId, t.postId))
				}))(e => {
					const {
						post: t,
						onRemovePostFromCollection: n
					} = e;
					return t ? s.a.createElement("div", {
						className: y.a.container
					}, s.a.createElement("div", {
						className: y.a.content
					}, s.a.createElement(b.a, {
						className: y.a.title,
						target: "_blank",
						to: Object(g.b)(t.permalink)
					}, t.title), s.a.createElement("div", {
						className: y.a.metaLine
					}, T._("Posted · {timeAgo}", [T._param("timeAgo", s.a.createElement(x.d, {
						seconds: t.created / C.Wb
					}))], {
						hk: "ZVJpV"
					}))), s.a.createElement(O.a, {
						onRemoveClick: n,
						className: y.a.overflowMenu,
						dropdownId: "collection-widget-item" + t.id,
						postPermalink: t.permalink,
						targetPosition: w,
						tooltipPosition: I
					})) : s.a.createElement(S, {
						className: y.a.container,
						isLoading: !0
					})
				}),
				M = n("./src/reddit/components/Widgets/PostCollection/index.m.less"),
				R = n.n(M);
			const {
				fbt: N
			} = n("./node_modules/fbt/lib/FbtPublic.js"), D = ["right", "bottom"], L = ["right", "top"];
			class A extends s.a.PureComponent {
				constructor() {
					super(...arguments), this.renderItem = (e, t) => s.a.createElement(P, {
						collectionId: this.props.collection.id,
						key: e,
						postId: e
					})
				}
				render() {
					const {
						className: e,
						collection: t
					} = this.props, n = t.postIds.map(this.renderItem).reverse();
					return s.a.createElement("div", {
						className: Object(r.a)(e, R.a.container)
					}, s.a.createElement("div", {
						className: R.a.topRow
					}, N._("Collection", null, {
						hk: "1pY1s2"
					}), s.a.createElement(i.a, {
						className: R.a.menuButton,
						collectionId: t.id,
						isSubmitPage: !0,
						permalink: t.permalink,
						targetPosition: D,
						tooltipPosition: L
					})), s.a.createElement("h4", {
						className: R.a.collectionDescription
					}, t.title), s.a.createElement("div", {
						className: R.a.listWrapper
					}, s.a.createElement("div", {
						className: R.a.listContainer
					}, n)), s.a.createElement(h, null))
				}
			}
			t.a = A
		},
		"./src/reddit/components/Widgets/SubredditRules/Rule/index.m.less": function(e, t, n) {
			e.exports = {
				RawHTMLDisplay: "_2vztYwRKSDZV2ISjSixByA",
				rawHtmlDisplay: "_2vztYwRKSDZV2ISjSixByA",
				Chevron: "_2U-LBUvfr1W6MEMTGXgzmh",
				chevron: "_2U-LBUvfr1W6MEMTGXgzmh",
				RuleShortName: "_8ZLJI1-ZiP7pHJ_yO1L4Z",
				ruleShortName: "_8ZLJI1-ZiP7pHJ_yO1L4Z",
				pointerCursor: "_3osxlOKfiylmgqNqsW7erB",
				cleanStyle: "_12zeaxHNQC7XniG1qunPev",
				RuleIndex: "_36D5hmBSZbFxkFMkiWg6cY",
				ruleIndex: "_36D5hmBSZbFxkFMkiWg6cY",
				RuleTitle: "tbIApBd2DM_drfZQJjIum",
				ruleTitle: "tbIApBd2DM_drfZQJjIum",
				RuleDescription: "_2QhEclR_DjIrTv_oNU5MMN",
				ruleDescription: "_2QhEclR_DjIrTv_oNU5MMN"
			}
		},
		"./src/reddit/components/Widgets/SubredditRules/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return k
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/reddit/components/Widgets/ThemedWidget/index.tsx"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/lib/lessComponent.tsx"),
				l = n("./src/reddit/components/RawHTMLDisplay/index.tsx"),
				d = n("./src/reddit/components/RichTextJson/index.tsx"),
				u = n("./src/reddit/helpers/dom/index.ts"),
				p = n("./src/reddit/icons/fonts/index.tsx"),
				m = n("./src/reddit/layout/threeCol/ExpandCenter/index.tsx"),
				h = n("./src/reddit/models/Widgets/index.ts"),
				b = n("./src/reddit/components/Widgets/SubredditRules/Rule/index.m.less"),
				f = n.n(b);
			const g = c.a.div("RuleShortName", f.a),
				v = c.a.div("RuleIndex", f.a),
				x = c.a.div("RuleTitle", f.a),
				C = c.a.div("RuleDescription", f.a),
				E = c.a.wrapped(l.a, "RawHTMLDisplay", f.a),
				y = {};
			class O extends r.a.Component {
				constructor(e) {
					super(e), this.onClick = () => {
						Object(u.f)() || this.setState({
							isVisible: !this.state.isVisible
						})
					}, this.state = {
						isVisible: this.shouldShowFullDisplay(e)
					}
				}
				shouldShowFullDisplay(e) {
					return e.display === h.h.FULL
				}
				render() {
					const {
						props: e,
						state: t,
						onClick: n,
						shouldShowFullDisplay: o
					} = this, s = !!(e.rule.descriptionRichText || e.rule.descriptionHtml || e.rule.description), i = !o(e) && !!s;
					return r.a.createElement(g, {
						className: Object(a.a)({
							[f.a.pointerCursor]: i,
							[f.a.cleanStyle]: e.cleanStyle
						}),
						onClick: o(e) || !s ? void 0 : n
					}, r.a.createElement(m.a, null, r.a.createElement(v, {
						className: Object(a.a)({
							[f.a.cleanStyle]: e.cleanStyle
						})
					}, `${e.humanIndex}.`), r.a.createElement(x, null, `${e.rule.shortName}`), r.a.createElement("div", null, !o(e) && s && r.a.createElement(p.a, {
						name: t.isVisible ? "caret_up" : "caret_down"
					}))), t.isVisible && r.a.createElement(C, {
						className: Object(a.a)({
							[f.a.cleanStyle]: e.cleanStyle
						})
					}, e.rule.descriptionRichText ? r.a.createElement(d.b, {
						content: JSON.parse(e.rule.descriptionRichText),
						useExplicitTextColor: !0,
						rtJsonElementProps: y
					}) : e.rule.descriptionHtml ? r.a.createElement(E, {
						html: e.rule.descriptionHtml
					}) : e.rule.description))
				}
			}
			const k = e => e.rules.length > 0 ? r.a.createElement(i.a, {
				className: e.className,
				styles: e.styles,
				title: o.fbt._("{subredditName} Rules", [o.fbt._param("subredditName", `r/${e.subredditName}`)], {
					hk: "2AwRLk"
				}),
				redditStyle: e.redditStyle
			}, e.rules.map((function(t, n) {
				return r.a.createElement(O, {
					key: `rule${t.shortName}${t.createdUtc}`,
					rule: t,
					display: e.display,
					humanIndex: n + 1
				})
			}))) : null;
			t.b = e => r.a.createElement(k, {
				rules: e.widget.data || [],
				subredditName: e.subredditName,
				display: e.widget.display,
				redditStyle: e.redditStyle,
				styles: e.widget.styles
			})
		},
		"./src/reddit/components/Widgets/ThemedWidget/index.m.less": function(e, t, n) {
			e.exports = {
				widgetBackground: "_1G4yU68P50vRZ4USXfaceV",
				clickable: "_2mtWlchu4uQf339v56bSha",
				redditStyle: "_2QeqBqfT5UbHBoViZUt-wX",
				truncatedGradient: "_1lvCNVth3dt5y8lu3vT95L",
				widgetHeader: "_ZhON3a3vplThB8NFwuJn",
				widgetTitle: "_2sggAEfRQLyoAl4J__5twU",
				widgetContent: "TmgZY6tDcdErbE5d7E0HJ",
				widgetContentOnly: "_3RPJ8hHnfFohktLZca18J6",
				truncated: "r5dzQq7dgZyAmve8abbbt",
				seeMore: "_3dbp6Cm9uKkkIBr9EsU-qS"
			}
		},
		"./src/reddit/components/Widgets/ThemedWidget/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/lib/CSSVariableProvider/withTheme.tsx"),
				l = n("./src/reddit/components/SEOTitle/index.tsx"),
				d = n("./src/reddit/components/TrackingHelper/index.tsx"),
				u = n("./src/reddit/contexts/PageLayer/index.tsx"),
				p = n("./src/reddit/controls/Button/index.tsx"),
				m = n("./src/reddit/helpers/trackers/widgets.ts"),
				h = n("./src/reddit/models/NewStructuredStyles/index.ts"),
				b = n("./src/reddit/selectors/experiments/topPosts.ts"),
				f = n("./src/reddit/selectors/structuredStyles.ts"),
				g = n("./src/reddit/selectors/user.ts"),
				v = n("./src/reddit/models/Theme/index.ts"),
				x = n("./src/reddit/models/Theme/NewColorSystem/index.ts");
			const C = e => e.styles && e.styles.backgroundColor ? e.styles.backgroundColor : Object(x.a)(e).widgetColors.sidebarWidgetBackgroundColor,
				E = e => e.styles && e.styles.headerColor ? e.styles.headerColor : Object(x.a)(e).widgetColors.sidebarWidgetHeaderColor,
				y = e => {
					const t = C(e);
					return Object(v.e)(t)
				},
				O = e => {
					const t = E(e);
					return Object(v.e)(t)
				};
			var k = n("./src/reddit/components/Widgets/ThemedWidget/index.m.less"),
				_ = n.n(k);
			const {
				fbt: j
			} = n("./node_modules/fbt/lib/FbtPublic.js"), S = Object(u.v)(), T = Object(r.b)(() => Object(i.c)({
				forceRedditStyle: (e, t) => {
					const n = Object(u.o)(e, t) || void 0,
						o = t.redditStyle || Object(f.l)(e, {
							subredditId: n
						}),
						s = Object(g.fb)(e);
					return o || s
				},
				nigtmode: g.fb,
				subredditId: u.o,
				topPostVariant: b.d
			}));
			class w extends s.a.Component {
				constructor() {
					super(...arguments), this.contentRef = s.a.createRef(), this.state = {
						isTruncated: !1
					}, this.handleSeeMoreClick = () => {
						const {
							subredditId: e,
							widgetKind: t
						} = this.props;
						e && t && this.props.sendEvent(Object(m.b)(e, t)), this.setState({
							isTruncated: !1
						})
					}
				}
				componentDidMount() {
					const e = this.contentRef.current,
						t = e && e.offsetHeight;
					this.props.truncateThreshold && t && t > this.props.truncateThreshold && this.setState({
						isTruncated: !0
					})
				}
				getWidgetBackgroundStyles() {
					const e = {};
					return e.backgroundColor = C(this.props), e.borderColor = Object(h.d)(e.backgroundColor, this.props.nigtmode), e.color = e.fill = y(this.props), e
				}
				getWidgetHeaderStyles() {
					const e = {};
					return e.backgroundColor = E(this.props), e.color = e.fill = O(this.props), e
				}
				render() {
					const {
						children: e,
						className: t,
						contentOnly: n,
						forceRedditStyle: o,
						headerButton: r,
						id: i,
						onClick: c,
						onHeaderClick: d,
						title: u,
						titleClassName: m,
						truncateThreshold: h
					} = this.props, b = n ? _.a.widgetContentOnly : _.a.widgetContent, f = !o && this.props.styles, g = f ? this.getWidgetBackgroundStyles() : {}, v = f ? this.getWidgetHeaderStyles() : {};
					return s.a.createElement("div", {
						className: Object(a.a)(t, _.a.widgetBackground, {
							[_.a.redditStyle]: o,
							[_.a.clickable]: !!c,
							[_.a.truncatedGradient]: this.state.isTruncated && !this.props.noGradient
						}),
						"data-redditstyle": o,
						onClick: c,
						style: g
					}, u && s.a.createElement("div", {
						className: Object(a.a)(_.a.widgetHeader, {
							[_.a.clickable]: !!d
						}),
						id: i,
						style: {
							...v,
							...this.props.headerStyles
						},
						onClick: d
					}, s.a.createElement("div", {
						className: Object(a.a)(_.a.widgetTitle, m)
					}, s.a.createElement(l.b, {
						type: l.a.Widget
					}, u)), r), s.a.createElement("div", {
						className: Object(a.a)(b, {
							[_.a.truncated]: this.state.isTruncated
						}),
						ref: this.contentRef,
						style: {
							maxHeight: this.state.isTruncated ? h : "none"
						}
					}, e), this.state.isTruncated && s.a.createElement(p.r, {
						className: _.a.seeMore,
						onClick: this.handleSeeMoreClick
					}, j._("See More", null, {
						hk: "4w47Qu"
					})))
				}
			}
			t.a = S(T(Object(c.a)(Object(d.c)(w))))
		},
		"./src/reddit/connectors/SubscribeButton/index.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react-redux/es/index.js"),
				s = n("./node_modules/reselect/es/index.js"),
				r = n("./src/reddit/actions/subscription/index.ts"),
				i = n("./src/reddit/selectors/subreddit.ts");
			t.a = Object(o.b)(() => Object(s.c)({
				userIsSubscriber: i.jb
			}), (e, t) => {
				let {
					identifier: n
				} = t;
				return {
					onSubscribe: () => e(r.d([n], !0)),
					onSubscriptionsRequested: () => e(r.e()),
					onUnsubscribe: () => e(r.d([n], !1))
				}
			})
		},
		"./src/reddit/connectors/connectClickToToggleEditor.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react-redux/es/index.js"),
				s = n("./node_modules/reselect/es/index.js"),
				r = n("./src/reddit/actions/structuredStyles/index.ts"),
				i = n("./src/reddit/selectors/activeModalId.ts"),
				a = n("./src/reddit/selectors/structuredStyles.ts"),
				c = n("./src/reddit/constants/modals.ts");
			const l = Object(s.c)({
				bladeHasUnsavedChanges: a.a,
				isEditing: a.i,
				isBladeEditorDirty: a.h,
				isModalOpen: Object(i.b)(c.a.BLADE_UNSAVED_CHANGES)
			});
			t.a = Object(o.b)(l, (e, t) => {
				let {
					subredditId: n
				} = t;
				return {
					requestCloseBlade: () => n && e(Object(r.h)(n))
				}
			})
		},
		"./src/reddit/constants/componentSizes.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "c", (function() {
				return s
			})), n.d(t, "d", (function() {
				return r
			})), n.d(t, "e", (function() {
				return i
			})), n.d(t, "f", (function() {
				return a
			})), n.d(t, "g", (function() {
				return c
			})), n.d(t, "h", (function() {
				return l
			})), n.d(t, "i", (function() {
				return d
			})), n.d(t, "j", (function() {
				return u
			})), n.d(t, "l", (function() {
				return p
			})), n.d(t, "p", (function() {
				return m
			})), n.d(t, "q", (function() {
				return h
			})), n.d(t, "r", (function() {
				return b
			})), n.d(t, "t", (function() {
				return f
			})), n.d(t, "s", (function() {
				return g
			})), n.d(t, "u", (function() {
				return v
			})), n.d(t, "v", (function() {
				return x
			})), n.d(t, "k", (function() {
				return C
			})), n.d(t, "b", (function() {
				return E
			})), n.d(t, "m", (function() {
				return y
			})), n.d(t, "n", (function() {
				return O
			})), n.d(t, "o", (function() {
				return k
			}));
			const o = 284,
				s = 450,
				r = 800,
				i = 284,
				a = 48,
				c = 640,
				l = 1600,
				d = 40,
				u = 48,
				p = 24,
				m = 24,
				h = 312,
				b = 40,
				f = 270,
				g = 106,
				v = 5,
				x = 16,
				C = 1250,
				E = 82,
				y = 48,
				O = 36,
				k = 40
		},
		"./src/reddit/constants/componentTestIds.ts": function(e, t, n) {
			"use strict";
			n.d(t, "d", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			})), n.d(t, "c", (function() {
				return r
			})), n.d(t, "a", (function() {
				return i
			})), n.d(t, "e", (function() {
				return a
			})), n.d(t, "f", (function() {
				return c
			}));
			const o = "comment",
				s = "comment-submission-form-markdown",
				r = "comment-submission-form-richtext",
				i = "comments-page-link-num-comments",
				a = "language-prompt-close",
				c = "post-content"
		},
		"./src/reddit/constants/jsapiEvents.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			})), n.d(t, "c", (function() {
				return r
			}));
			const o = "reddit",
				s = "reddit.ready",
				r = "reddit.urlChanged"
		},
		"./src/reddit/constants/keycodes.ts": function(e, t, n) {
			"use strict";
			var o, s;
			n.d(t, "a", (function() {
					return o
				})), n.d(t, "b", (function() {
					return s
				})),
				function(e) {
					e[e.ArrowDown = 40] = "ArrowDown", e[e.ArrowLeft = 37] = "ArrowLeft", e[e.ArrowRight = 39] = "ArrowRight", e[e.ArrowUp = 38] = "ArrowUp", e[e.Backspace = 8] = "Backspace", e[e.Delete = 46] = "Delete", e[e.Enter = 13] = "Enter", e[e.Escape = 27] = "Escape", e[e.F = 70] = "F", e[e.K = 75] = "K", e[e.Space = 32] = "Space", e[e.Tab = 9] = "Tab", e[e.Comma = 188] = "Comma"
				}(o || (o = {})),
				function(e) {
					e.ArrowDown = "ArrowDown", e.ArrowLeft = "ArrowLeft", e.ArrowRight = "ArrowRight", e.ArrowUp = "ArrowUp", e.Backspace = "Backspace", e.Enter = "Enter", e.Escape = "Escape", e.F = "f", e.Tab = "Tab", e.Space = " ", e.Comma = ","
				}(s || (s = {}))
		},
		"./src/reddit/constants/postCreation.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			})), n.d(t, "c", (function() {
				return r
			})), n.d(t, "d", (function() {
				return i
			})), n.d(t, "f", (function() {
				return a
			})), n.d(t, "e", (function() {
				return c
			})), n.d(t, "g", (function() {
				return l
			}));
			const o = "PostCreation-AddEventButton",
				s = 500,
				r = "PostCreation-CollectionEducationTooltip",
				i = "PostCreation-EventEducationTooltip",
				a = 300,
				c = a,
				l = "PostCreation-AddToCollectionButton"
		},
		"./src/reddit/constants/screenWidths.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return o
			})), n.d(t, "c", (function() {
				return s
			})), n.d(t, "a", (function() {
				return r
			}));
			const o = 480,
				s = 960,
				r = 1200
		},
		"./src/reddit/contexts/ApiContext.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			})), n.d(t, "b", (function() {
				return c
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);

			function r() {
				return (r = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const i = {
					apiContext: () => {
						throw new Error("Component attempted to make an API request with no ApiContext")
					},
					gqlContext: () => {
						throw new Error("Component attempted to make an API request with no GqlContext")
					},
					gqlRealtime2Context: () => {
						throw new Error("Component attempted to make an API request with no GqlRealtime2Context")
					}
				},
				a = Object(o.createContext)(i);

			function c(e) {
				const t = t => s.a.createElement(a.Consumer, null, n => {
					let {
						apiContext: o,
						gqlContext: i,
						gqlRealtime2Context: a
					} = n;
					return s.a.createElement(e, r({
						apiContext: o,
						gqlContext: i,
						gqlRealtime2Context: a
					}, t))
				});
				return t.displayName = `WithApiContext(${e.displayName||e.name})`, t
			}
		},
		"./src/reddit/contexts/NavbarExp.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = s.a.createContext(!1)
		},
		"./src/reddit/controls/CheckboxInput/index.m.less": function(e, t, n) {
			e.exports = {
				checkboxInput: "_2BPowd18EKTnfZFrj5kY3G",
				disabled: "_303iMx_S0pgrbpYhsYTV6K",
				checkboxSelected: "_2VtQ8EjxlJXdicVJhc73gQ"
			}
		},
		"./src/reddit/controls/CheckboxInput/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/constants/keycodes.ts"),
				a = n("./src/reddit/icons/svgs/Checkbox/index.tsx"),
				c = n("./src/reddit/icons/svgs/CheckboxSelected/index.tsx"),
				l = n("./src/reddit/layout/row/Inline/index.tsx"),
				d = n("./src/reddit/controls/CheckboxInput/index.m.less"),
				u = n.n(d);
			t.a = e => {
				const t = e.onChange && !e.disabled ? t => {
						t.key !== i.b.Enter && t.key !== i.b.Space || e.onChange(!e.value)
					} : void 0,
					n = e.onChange && !e.disabled ? () => e.onChange(!e.value) : void 0;
				return s.a.createElement(l.a, {
					"aria-checked": !!e.value,
					"aria-disabled": e.disabled,
					"aria-labelledby": e.name,
					className: Object(r.a)(e.className, u.a.checkboxInput, e.disabled ? u.a.disabled : null),
					onClick: n,
					onKeyPress: t,
					role: "checkbox",
					tabIndex: 0
				}, s.a.createElement("input", {
					value: e.value ? e.value.toString() : "",
					type: "hidden"
				}), e.value ? s.a.createElement(c.a, {
					className: u.a.checkboxSelected
				}) : s.a.createElement(a.a, null), e.children)
			}
		},
		"./src/reddit/controls/Downvote/index.m.less": function(e, t, n) {
			e.exports = {
				Downvote: "Q0BxYHtCOJ_rNSPJMU2Y7",
				downvote: "Q0BxYHtCOJ_rNSPJMU2Y7",
				mIsInteractive: "_2fe-KdD2OM0ciaiux-G1EL",
				mIsActive: "_3emIxnIscWEPB7o5LgU_rn",
				mIsVoteable: "_3yQIOwaIuF6gn8db96Gu7y"
			}
		},
		"./src/reddit/controls/Dropdown/Row.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return g
			}));
			var o = n("./node_modules/lodash/throttle.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/reddit/controls/UnstyledInternalLink/index.tsx"),
				l = n("./src/reddit/icons/fonts/DropdownTriangle/index.tsx"),
				d = n("./src/reddit/icons/svgs/Checkmark/index.tsx"),
				u = n("./src/reddit/layout/row/InlineButton/index.tsx"),
				p = n("./src/reddit/controls/Dropdown/index.m.less"),
				m = n.n(p),
				h = n("./src/reddit/controls/Dropdown/row.m.less"),
				b = n.n(h);

			function f() {
				return (f = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			class g extends i.a.Component {
				constructor() {
					super(...arguments), this.handleMouseMove = s()(() => {
						const {
							props: e
						} = this;
						e.handleActivateRow && e.handleActivateRow(e.index)
					}, 500)
				}
				render() {
					const {
						props: e
					} = this, t = e.skipRoleAttr ? null : {
						role: "menuitem"
					}, n = Object(a.a)(b.a.iconWrapper, e.iconWrapperClassName);
					return e.href ? i.a.createElement(c.a, f({}, t, {
						id: e.id,
						className: e.className,
						onBlur: e.onBlur,
						onClick: e.onClick,
						onMouseDown: e.onMouseDown,
						onMouseMove: this.handleMouseMove,
						onKeyDown: e.onKeydown,
						rel: e.rel,
						to: e.href,
						disabled: e.disabled
					}), e.children && i.a.createElement("span", {
						className: n
					}, e.children), i.a.createElement("span", {
						className: Object(a.a)(b.a.text, e.textClassName)
					}, e.displayText)) : i.a.createElement(u.a, f({}, t, {
						id: e.id,
						className: e.className,
						disabled: e.disabled,
						onBlur: e.onBlur,
						onClick: e.onClick,
						onKeyDown: e.onKeydown,
						onMouseDown: e.onMouseDown,
						onMouseMove: s()(this.handleMouseMove, 500)
					}), e.children && (e.noIcon ? i.a.createElement("div", null, e.children) : i.a.createElement("span", {
						className: n
					}, e.children)), e.displayText && i.a.createElement("span", {
						className: Object(a.a)(b.a.text, e.textClassName)
					}, e.displayText), e.showSelectedCheckmark && e.isSelected && i.a.createElement(d.a, {
						className: b.a.checkmark
					}), e.showDropdownTriangle && i.a.createElement(l.a, {
						className: m.a.dropdownTriangle
					}))
				}
			}
			t.b = e => {
				let {
					className: t,
					...n
				} = e;
				const o = Object(a.a)(b.a.row, t, {
					[b.a.mIsInteractive]: !n.noHover,
					[b.a.mIsSelected]: n.isSelected,
					[b.a.topics]: n.isTopicsStyle
				});
				return i.a.createElement(g, f({
					className: o
				}, n))
			}
		},
		"./src/reddit/controls/Dropdown/row.m.less": function(e, t, n) {
			e.exports = {
				iconWrapper: "pthKOcceozMuXLYrLlbL1",
				text: "_2-cXnP74241WI7fpcpfPmg",
				row: "_3LwUIE7yX7CZQKmD2L87vf",
				topics: "kR_ljR-F8vtc-ORj1uipB",
				checkmark: "_3Iua3qlR9JiTwjjk6NKye1",
				muteSubreddit: "ui39KJ4PwbdKkxvIBbLbV",
				modNotes: "sK8_uuNiAqPNlw-HoD2HG",
				mIsSelected: "_1IKtbRloF_LV1hPqMzP3MC",
				mIsInteractive: "_1oYEKCssGFjqxQ9jJMNj5G"
			}
		},
		"./src/reddit/controls/ErrorText/SeeAllTextModal/index.m.less": function(e, t, n) {
			e.exports = {
				wrapper: "_2AfJEqW9tv4b_kolKEuS9K",
				titleRow: "p4QfstubN5cRxd-gy8gFH",
				detailsContainer: "_2V3KEAhexNh-mP3TbrVClC",
				buttonRow: "_1fcbQFwN65ik28DNmWnpX4",
				confirmButton: "zcMEJWBL7q-mYGOPSpjN-"
			}
		},
		"./src/reddit/controls/ErrorText/index.m.less": function(e, t, n) {
			e.exports = {
				wrapper: "_2hGJP-9xfXBXd0wqhBLHhY",
				description: "_3h_9YwxjuOr77VhScPrjCI",
				moreText: "_1Y0BrhDgcSTeSYvmSPYepI"
			}
		},
		"./src/reddit/controls/ErrorText/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return C
			})), n.d(t, "c", (function() {
				return E
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/lodash/uniqueId.js"),
				r = n.n(s),
				i = n("./node_modules/raf/index.js"),
				a = n.n(i),
				c = n("./node_modules/react/index.js"),
				l = n.n(c),
				d = n("./src/lib/classNames/index.ts"),
				u = n("./src/higherOrderComponents/asModal/index.tsx"),
				p = n("./src/reddit/controls/Button/index.tsx"),
				m = n("./src/reddit/layout/row/Inline/index.tsx"),
				h = n("./src/reddit/controls/ErrorText/SeeAllTextModal/index.m.less"),
				b = n.n(h);
			var f = Object(u.a)(e => {
					const {
						children: t,
						title: n
					} = e;
					return l.a.createElement("div", {
						className: b.a.wrapper
					}, l.a.createElement(m.a, {
						className: b.a.titleRow
					}, n), l.a.createElement("div", {
						className: b.a.detailsContainer
					}, t), l.a.createElement(m.a, {
						className: b.a.buttonRow
					}, l.a.createElement(p.l, {
						className: b.a.confirmButton,
						onClick: e.onConfirmed
					}, o.fbt._("Ok", null, {
						hk: "2Giu9U"
					}))))
				}),
				g = n("./src/reddit/controls/ErrorText/index.m.less"),
				v = n.n(g);
			class x extends l.a.Component {
				constructor(e) {
					super(e), this.spanRef = l.a.createRef(), this.toggleModal = () => {
						this.setState({
							isModalOpen: !this.state.isModalOpen
						})
					}, this.state = {
						textHasOverflowed: !1,
						modalId: `ErrorTextModal--${r()()}`,
						isModalOpen: !1
					}
				}
				componentDidMount() {
					this.calcTextDidOverflow()
				}
				componentDidUpdate() {
					this.calcTextDidOverflow()
				}
				calcTextDidOverflow() {
					a()(() => {
						const e = this.spanRef.current;
						if (!e) return;
						const t = e.scrollWidth > e.clientWidth;
						this.setState(e => e.textHasOverflowed !== t ? {
							textHasOverflowed: t
						} : null)
					})
				}
				render() {
					const {
						children: e,
						className: t,
						errorModalBody: n,
						errorModalTitle: s = o.fbt._("Error", null, {
							hk: "2nPF4G"
						}),
						moreText: r = o.fbt._("More", null, {
							hk: "1bCAQ0"
						})
					} = this.props, {
						textHasOverflowed: i,
						isModalOpen: a
					} = this.state;
					return l.a.createElement("div", {
						className: Object(d.a)(v.a.wrapper, t)
					}, l.a.createElement("span", {
						className: v.a.description,
						ref: this.spanRef
					}, e), i && l.a.createElement("span", {
						className: v.a.moreText,
						onClick: this.toggleModal
					}, r), a && l.a.createElement(f, {
						onConfirmed: this.toggleModal,
						title: s
					}, n || e))
				}
			}
			const C = e => {
					const {
						className: t,
						errorClassName: n,
						errorModalTitle: o,
						fallbackMessage: s,
						messages: r = []
					} = e, i = r.length ? r : s ? [s] : [];
					return i.length ? l.a.createElement("div", {
						className: t
					}, i.map((e, t) => l.a.createElement(x, {
						className: n,
						errorModalTitle: o,
						key: t
					}, e))) : null
				},
				E = e => l.a.createElement(C, {
					fallbackMessage: o.fbt._("Something went wrong", null, {
						hk: "Cw1BT"
					}),
					messages: e
				});
			t.b = x
		},
		"./src/reddit/controls/FileDrop/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/lodash/flow.js"),
				s = n.n(o),
				r = n("./node_modules/react/index.js"),
				i = n.n(r),
				a = n("./node_modules/react-dnd/lib/index.js"),
				c = n("./node_modules/react-dnd-html5-backend/lib/index.js"),
				l = n("./src/reddit/helpers/dragDropContext/index.ts");
			const d = c.NativeTypes.FILE,
				u = s()(Object(a.DropTarget)(d, {
					drop: (e, t) => {
						if (t && t.didDrop() || !t) return;
						const n = t.getItem();
						n.files && e.onDrop(n.files)
					}
				}, (e, t) => ({
					connectDropTarget: e.dropTarget(),
					isOver: t.isOver(),
					canDrop: t.canDrop()
				})), l.a);
			class p extends i.a.Component {
				render() {
					return this.props.connectDropTarget ? this.props.connectDropTarget(i.a.createElement("div", {
						className: this.props.className
					}, this.props.render(this.props.isOver, this.props.canDrop))) : null
				}
			}
			t.a = u(p)
		},
		"./src/reddit/controls/FormFields/index.m.less": function(e, t, n) {
			e.exports = {
				input: "_3CWuMoFPzdbJCxYJVmEw00",
				label: "J4DegnzzIY1-C2PFzYkrA",
				mHasValue: "t09kxBqaSw0Is_F5sUdQ1",
				inputWrapper: "_3TCLGRXxb1PXK-_sziBD2q",
				mIsInvalid: "_1pMjk4nL9CObVggXCSuELu",
				inputMovingLabelWrapper: "_2-meAmTwsZSCNYrpbEy7BX",
				mIsRedditStyle: "_3ONm7CsU4BtjX9jO5WYv2X",
				trash: "_2YUtyje1Y5rUty_3zgPOGM",
				trashContainer: "_2wjFyjW1rwWs4WFcSc7xNl",
				plus: "_3o11DwChSYlSiDT6FYqOIE",
				addValueButton: "_1Dm7EZTfDne90O5xANs501",
				multiInputWrapper: "_3CjWcr8XyX0xN32ADxPngu",
				errorText: "_2JNX-DiHbrfxhFYgkcBNaK"
			}
		},
		"./src/reddit/controls/FormFields/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return m
			})), n.d(t, "b", (function() {
				return b
			})), n.d(t, "c", (function() {
				return f
			})), n.d(t, "d", (function() {
				return x
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/controls/ErrorText/index.tsx"),
				c = n("./src/reddit/icons/svgs/Plus/index.tsx"),
				l = n("./src/reddit/icons/svgs/Trash2/index.tsx"),
				d = n("./src/reddit/controls/FormFields/index.m.less"),
				u = n.n(d);

			function p() {
				return (p = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const m = i.a.input("input", u.a),
				h = e => {
					"LABEL" === e.target.tagName && (e.target.parentElement.firstElementChild.focus(), e.stopPropagation())
				},
				b = e => {
					let {
						label: t,
						children: n,
						inputRef: o,
						className: i,
						isInvalid: a,
						...c
					} = e;
					const l = void 0 !== c.value && "" !== c.value;
					return s.a.createElement("div", {
						className: Object(r.a)(u.a.inputWrapper, i, {
							[u.a.mIsInvalid]: a
						}),
						onClick: h
					}, s.a.createElement(m, p({
						"aria-invalid": a,
						innerRef: o
					}, c)), t && s.a.createElement("label", {
						className: Object(r.a)(u.a.label, {
							[u.a.mHasValue]: l
						})
					}, t), n)
				},
				f = e => {
					let {
						label: t,
						children: n,
						inputRef: o,
						isInvalid: i,
						className: a,
						redditStyle: c,
						...l
					} = e;
					const d = void 0 !== l.value && "" !== l.value;
					return s.a.createElement("div", {
						className: Object(r.a)(u.a.inputMovingLabelWrapper, a, {
							[u.a.mIsInvalid]: i,
							[u.a.mIsRedditStyle]: c
						}),
						onClick: h
					}, s.a.createElement(m, p({
						innerRef: o
					}, l)), t && s.a.createElement("label", {
						className: Object(r.a)(u.a.label, {
							[u.a.mHasValue]: d
						})
					}, t), n)
				},
				g = e => s.a.createElement("div", {
					className: Object(r.a)(u.a.addValueButton, e.className),
					onClick: e.onClick
				}, e.text, " ", s.a.createElement(c.a, {
					className: u.a.plus
				}));
			var v;
			! function(e) {
				e[e.ADD = 0] = "ADD", e[e.REMOVE = 1] = "REMOVE"
			}(v || (v = {}));
			class x extends s.a.Component {
				constructor() {
					super(...arguments), this.state = {
						addingNewInputs: !1
					}, this.addValue = () => {
						const e = this.props.values.slice();
						this.props.buttonOnTop ? e.unshift("") : e.push(""), this.props.onChange(e), this.props.onEvent && this.props.onEvent({
							action: v.ADD
						})
					}, this.updateValue = (e, t) => {
						const n = this.props.values.slice();
						n[t] = e.target.value, this.props.onChange(n)
					}, this.removeValue = e => {
						const t = this.props.values.slice(),
							n = t[e];
						t.splice(e, 1), this.props.onChange(t), this.props.onEvent && this.props.onEvent({
							action: v.REMOVE,
							value: n,
							index: e
						})
					}
				}
				componentWillReceiveProps(e) {
					e.values.length > this.props.values.length && this.setState({
						addingNewInputs: !0
					})
				}
				componentDidUpdate() {
					this.focusedInput && this.state.addingNewInputs && (this.focusedInput.focus(), this.setState({
						addingNewInputs: !1
					}))
				}
				setInputRef(e, t) {
					this.state.addingNewInputs && (!this.props.buttonOnTop || this.props.buttonOnTop && !t) && (this.focusedInput = e)
				}
				renderFields() {
					const {
						values: e,
						disabled: t,
						label: n,
						placeholder: o,
						errors: r = []
					} = this.props;
					return e.map((e, i) => s.a.createElement(b, {
						inputRef: e => this.setInputRef(e, i),
						isInvalid: !!r[i],
						disabled: t,
						type: "text",
						label: n,
						onChange: e => this.updateValue(e, i),
						placeholder: o,
						value: e,
						style: {
							paddingRight: "36px"
						}
					}, s.a.createElement("div", {
						className: u.a.trashContainer,
						onClick: () => this.removeValue(i)
					}, s.a.createElement(l.b, {
						className: u.a.trash
					})), !!r[i] && s.a.createElement(a.b, {
						className: u.a.errorText
					}, r[i])))
				}
				render() {
					const {
						className: e,
						buttonOnTop: t,
						values: n,
						maxLength: o,
						addValueText: i,
						disabled: a
					} = this.props;
					this.focusedInput = null;
					const c = !(!!o && n.length >= o) && !a;
					return s.a.createElement("div", {
						className: Object(r.a)(u.a.multiInputWrapper, e)
					}, t && c && s.a.createElement(g, {
						onClick: this.addValue,
						text: i
					}), this.renderFields(), !t && c && s.a.createElement(g, {
						onClick: this.addValue,
						text: i
					}))
				}
			}
		},
		"./src/reddit/controls/GrowingOutlinedInput/index.m.less": function(e, t, n) {
			e.exports = {
				growingOutlinedInput: "PqYQ3WC15KaceZuKcFI02"
			}
		},
		"./src/reddit/controls/Input/ModalInput.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/actions/modal.ts"),
				c = n("./src/reddit/constants/keycodes.ts"),
				l = n("./src/reddit/controls/Input/index.m.less"),
				d = n.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			class p extends s.a.Component {
				constructor() {
					super(...arguments), this.handleKeyDown = e => {
						let {
							keyCode: t
						} = e;
						t === c.a.Escape && this.props.closeModal()
					}
				}
				render() {
					const {
						className: e,
						closeModal: t,
						...n
					} = this.props;
					return s.a.createElement("input", u({
						className: Object(i.a)(d.a.input, e),
						onKeyDown: this.handleKeyDown
					}, n))
				}
			}
			t.a = Object(r.b)(null, {
				closeModal: a.f
			})(p)
		},
		"./src/reddit/controls/Input/index.m.less": function(e, t, n) {
			e.exports = {
				input: "_3eoXtlBWKbkFYoOHUIcIgK"
			}
		},
		"./src/reddit/controls/Input/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/controls/Input/index.m.less"),
				r = n.n(s);
			t.a = o.a.input("input", r.a)
		},
		"./src/reddit/controls/LoadingIcon/index.m.less": function(e, t, n) {
			e.exports = {
				loadingIcon: "_3LwT7hgGcSjmJ7ng7drAuq",
				spin: "ibDwUVR1CAykturOgqOS5",
				mCentered: "_2qr28EeyPvBWAsPKl-KuWN"
			}
		},
		"./src/reddit/controls/LoadingIcon/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/controls/LoadingIcon/index.m.less"),
				a = n.n(i);
			t.a = e => {
				let {
					center: t,
					className: n,
					sizePx: o = 10
				} = e;
				return s.a.createElement("div", {
					className: Object(r.a)(a.a.loadingIcon, n, {
						[a.a.mCentered]: t
					}),
					style: {
						"--sizePx": `${o}px`
					},
					"data-testid": "LoadingIcon"
				})
			}
		},
		"./src/reddit/controls/RadioInput/RadioOption/index.m.less": function(e, t, n) {
			e.exports = {
				radioOption: "_2e6fJknJ4noSygWYov8-F1",
				radioOff: "_1lzSnSABNXX12WerTnwqI3",
				radioOn: "_3PYsg_uRJ6AGptv-hi7kqu"
			}
		},
		"./src/reddit/controls/RadioInput/RadioOption/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/constants/keycodes.ts"),
				a = n("./src/reddit/icons/svgs/RadioOff/index.tsx"),
				c = n("./src/reddit/icons/svgs/RadioOn/index.tsx"),
				l = n("./src/reddit/layout/row/Inline/index.tsx"),
				d = n("./src/reddit/controls/RadioInput/RadioOption/index.m.less"),
				u = n.n(d);
			class p extends s.a.Component {
				constructor() {
					super(...arguments), this.ref = null, this.onKeyPress = e => {
						const {
							props: t
						} = this;
						t.disabled || e.key !== i.b.Enter && e.key !== i.b.Space || (t.onClick && t.onClick(t.value), e.preventDefault())
					}
				}
				componentDidUpdate(e) {
					this.props.selected && !e.selected && this.ref && this.ref.focus()
				}
				render() {
					const {
						props: e
					} = this;
					return e.hidden ? null : s.a.createElement(l.a, {
						"aria-checked": e.selected,
						className: Object(r.a)(e.className, u.a.radioOption),
						innerRef: e => this.ref = e,
						onClick: e.disabled ? void 0 : e.onClick,
						onKeyPress: this.onKeyPress,
						role: "radio",
						tabIndex: e.tabIndex
					}, e.showButton && (e.selected ? s.a.createElement(c.a, {
						className: u.a.radioOn,
						role: "presentation"
					}) : s.a.createElement(a.a, {
						className: u.a.radioOff,
						role: "presentation"
					})), e.children)
				}
			}
			t.a = p
		},
		"./src/reddit/controls/RadioInput/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return i
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/constants/keycodes.ts");
			class i extends s.a.Component {
				constructor(e) {
					super(e), this.handleClick = e => {
						const {
							disabled: t,
							onChange: n
						} = this.props;
						t || this.state.value !== e && (n(e), this.setState({
							value: e
						}))
					}, this.getValues = () => {
						const e = [];
						return s.a.Children.forEach(this.props.children, t => {
							t.props.hidden || t.props.disabled || e.push(t.props.value)
						}), e
					}, this.onKeyDown = e => {
						const {
							disabled: t,
							onChange: n
						} = this.props, {
							value: o
						} = this.state;
						if (t) return;
						const s = e.key === r.b.ArrowUp,
							i = e.key === r.b.ArrowDown;
						if (s || i) {
							const t = this.getValues();
							if (!t.length) return;
							const r = o ? t.indexOf(o) : 0,
								i = t[((s ? r - 1 : r + 1) + t.length) % t.length];
							n(i), this.setState({
								value: i
							}), e.preventDefault()
						}
					}, this.state = {
						value: e.value || null
					}
				}
				UNSAFE_componentWillReceiveProps(e) {
					e.value !== this.props.value && this.setState({
						value: e.value || null
					})
				}
				render() {
					const {
						props: e
					} = this, {
						value: t
					} = this.state;
					return s.a.createElement("div", {
						"aria-label": e.name,
						className: e.className,
						role: "radiogroup",
						onKeyDown: this.onKeyDown
					}, s.a.createElement("input", {
						disabled: e.disabled,
						type: "hidden",
						value: t || ""
					}), s.a.Children.map(e.children, (n, o) => {
						const r = 0 === o,
							i = n.props.value === t,
							a = null !== t ? i ? 0 : -1 : r ? 0 : -1;
						return s.a.cloneElement(n, {
							disabled: e.disabled,
							onClick: e => this.handleClick(n.props.value),
							selected: i,
							tabIndex: a
						})
					}))
				}
			}
		},
		"./src/reddit/controls/Search/CommentSearch/index.m.less": function(e, t, n) {
			e.exports = {
				absolute: "_3JOs2fo7GARfPQK9n9uvyr",
				actionFont: "_2GiazGbWQeG84CupoExWj9",
				dismissButton: "_2lSQO1uFdnaWbYRKtLg3H-",
				metadataFont: "_1Vs6ZQxgSSIBCGCe2dcMoA",
				flex: "_1qRmLv2PYGtqa3xyVEYz_R",
				input: "_2WVAyd_SvtylHMe7sKaua9",
				linkTextColor: "_1zG8KFMibgWr8ahovOZAUB",
				paddingIcon: "_2i3sQHj_1l-LDzGfzQTjHM",
				postIcon: "_1rMy-IddyxrWMGR5hH5O1E",
				relative: "_3AIIvG4My2zfaJh7r8TucE",
				verticalDivider: "_34BFzBLxzKlRZTjBIHtnlh",
				dismissIcon: "_1Z_UNdjZZu53GD24SI5BLG",
				searchIcon: "_380giGvmbbYVTkgLoNx7ZP"
			}
		},
		"./src/reddit/controls/Search/CommentSearch/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return w
			})), n.d(t, "b", (function() {
				return I
			})), n.d(t, "d", (function() {
				return R
			})), n.d(t, "c", (function() {
				return N
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/react-router-redux/es/index.js"),
				c = n("./src/lib/addQueryParams/index.ts"),
				l = n("./src/lib/classNames/index.ts"),
				d = n("./src/lib/constants/index.ts"),
				u = n("./src/lib/makeSearchKey/index.ts"),
				p = n("./src/reddit/actions/pages/search/index.ts"),
				m = n("./src/reddit/constants/keycodes.ts"),
				h = n("./src/reddit/constants/parameters.ts"),
				b = n("./src/reddit/contexts/PageLayer/index.tsx"),
				f = n("./src/reddit/helpers/path/index.ts"),
				g = n("./src/reddit/helpers/search/searchClickSearchBarOriginElement.ts"),
				v = n("./src/reddit/helpers/search/searchImpressionId.ts"),
				x = n("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				C = n("./src/reddit/helpers/trackers/searchResults.ts"),
				E = n("./src/reddit/hooks/usePageLayer.ts"),
				y = n("./src/reddit/hooks/useTracking.ts"),
				O = n("./src/reddit/icons/fonts/index.tsx"),
				k = n("./src/reddit/selectors/platform.ts"),
				_ = n("./src/reddit/selectors/telemetry.ts"),
				j = n("./src/reddit/selectors/user.ts"),
				S = n("./src/reddit/controls/Search/CommentSearch/index.m.less"),
				T = n.n(S);
			const w = "comment_search-bar",
				I = "comment-search-button",
				P = "search-bar-dismiss-button",
				M = "COMMENT_SEARCH_BAR_TEST_ID";

			function R(e) {
				let {
					searchValue: t,
					post: n,
					subreddit: o
				} = e;
				return {
					[h.w]: t,
					[h.I]: [d.hc.Comments]
				}
			}

			function N(e) {
				const {
					expanded: t,
					bucketed: n,
					collapsed: d
				} = e.experiment, h = Object(E.a)(), S = Object(y.a)(), N = (null == h ? void 0 : h.queryParams.q) || "", [D, L] = Object(s.useState)(N), [A, B] = Object(s.useState)(t), F = Object(i.d)(), U = Object(s.useRef)(null), K = Object(i.e)(e => Object(b.h)(e, {
					pageLayer: h
				})), W = Object(i.e)(e => Object(b.s)(e, {
					pageLayer: h
				})), H = Object(i.e)(e => Object(j.mb)(e)), q = Object(i.e)(e => Object(j.rb)(e)), z = Object(i.e)(e => Object(k.i)(e));
				var G, V, Q;

				function J() {
					var t;
					if (!D.trim() || !K) return;
					const n = new URL(K.permalink).pathname,
						o = R({
							searchValue: D,
							post: K,
							subreddit: W
						});
					g.a.set(_.a.CommentSearchBar), S(Object(C.o)(C.a.FULL_SEARCH_BUTTON, o, x.a.PdpCommentSearchBar, h || void 0));
					const s = Object(u.b)(K.id, void 0, o, H && q);
					F(Object(p.d)({
						key: s,
						options: o,
						subredditName: null == W ? void 0 : W.name,
						postId: K.id
					}));
					const r = Object(c.a)(n, o);
					F(Object(a.b)(Object(f.b)(r), {
						...null === (t = e.prevLocation) || void 0 === t ? void 0 : t.state,
						isOverlay: z,
						scrollOnLoad: !0
					}))
				}
				return G = U, V = B, Q = d, Object(s.useEffect)(() => {
					if (Q) return document.addEventListener("mousedown", e), () => {
						document.removeEventListener("mousedown", e)
					};

					function e(e) {
						G.current && !G.current.contains(e.target) && V(!1)
					}
				}, [G]), n ? r.a.createElement("div", {
					className: T.a.flex
				}, D || A ? r.a.createElement("div", {
					"data-testid": w
				}, r.a.createElement("label", {
					className: Object(l.a)(T.a.flex, T.a.relative)
				}, r.a.createElement("div", {
					className: T.a.absolute,
					role: "submit",
					onClick: J
				}, r.a.createElement(O.a, {
					className: Object(l.a)(T.a.postIcon, T.a.paddingIcon),
					name: "search"
				})), r.a.createElement("input", {
					className: Object(l.a)(T.a.metadataFont, T.a.input),
					"data-testid": M,
					id: w,
					type: "search",
					onChange: e => {
						v.a.update(x.a.PdpCommentSearchBar), L(e.target.value)
					},
					onFocus: function() {
						v.a.update(x.a.PdpCommentSearchBar), g.a.set(_.a.CommentSearchBar), S(Object(C.o)(C.a.SEARCH_BAR, R({
							searchValue: D,
							post: K,
							subreddit: W
						}), x.a.PdpCommentSearchBar, h || void 0))
					},
					onKeyPress: function(e) {
						e.key === m.b.Enter && J()
					},
					placeholder: o.fbt._("Search comments", null, {
						hk: "2ObH7B"
					}),
					ref: U,
					value: D
				}), D && r.a.createElement("button", {
					"aria-label": o.fbt._("Remove search bar text", null, {
						hk: "4twCsS"
					}),
					id: P,
					className: T.a.dismissButton,
					"data-testid": P,
					onClick: () => {
						L("")
					}
				}, r.a.createElement(O.a, {
					className: T.a.dismissIcon,
					name: "clear"
				})))) : r.a.createElement("button", {
					className: T.a.linkTextColor,
					"data-testid": I,
					id: I,
					onClick: () => {
						Promise.resolve(B(!0)).then(() => {
							var e;
							return null === (e = U.current) || void 0 === e ? void 0 : e.focus()
						})
					}
				}, r.a.createElement(O.a, {
					className: Object(l.a)(T.a.searchIcon, T.a.paddingIcon),
					name: "search"
				}), r.a.createElement("span", {
					className: T.a.actionFont
				}, o.fbt._("Search comments", null, {
					hk: "2ObH7B"
				})))) : null
			}
		},
		"./src/reddit/controls/Sortable/index.tsx": function(e, t, n) {
			"use strict";
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/helpers/dragDropContext/index.ts"),
				i = n("./node_modules/lodash/flow.js"),
				a = n.n(i),
				c = n("./node_modules/react-dnd/lib/index.js");
			class l extends s.a.Component {
				constructor() {
					super(...arguments), this.handleClick = () => {
						this.props.onClick && this.props.onClick(this.props.id, this.props.index)
					}
				}
				render() {
					const {
						props: e
					} = this;
					return e.connectDropTarget && e.connectDragSource ? a()(e.connectDropTarget, e.connectDragSource)(s.a.createElement("div", {
						onClick: this.handleClick
					}, e.render(e.id, e.index, e.isDragging, e.isOver, e.canDrop))) : null
				}
			}
			var d = a()(Object(c.DragSource)("card", {
				beginDrag: e => ({
					id: e.id,
					index: e.index
				}),
				endDrag: (e, t) => {
					if (t && t.didDrop()) {
						const n = t.getDropResult();
						e.onDrop(e.id, n.id)
					}
				}
			}, (e, t) => ({
				connectDragSource: e.dragSource(),
				isDragging: t.isDragging()
			})), Object(c.DropTarget)("card", {
				drop: (e, t) => {
					if (!t || !t.didDrop()) return {
						id: e.id,
						index: e.index
					}
				},
				canDrop: (e, t) => {
					if (!t) return !1;
					const n = t.getItem();
					return e.id !== n.id
				}
			}, (e, t) => ({
				connectDropTarget: e.dropTarget(),
				isOver: t.isOver(),
				canDrop: t.canDrop()
			})))(l);
			class u extends s.a.Component {
				constructor(e) {
					super(e), this.onDrop = (e, t) => {
						this.setState(n => {
							const o = n.values.slice(),
								s = o.indexOf(e),
								r = o.splice(s, 1)[0];
							let i = o.indexOf(t);
							return s <= i && (i += 1), o.splice(i, 0, r), this.props.onDrop(e, t, o), {
								values: o
							}
						})
					}, this.state = {
						values: e.values
					}
				}
				componentWillReceiveProps(e) {
					this.setState(() => ({
						values: e.values
					}))
				}
				render() {
					const {
						className: e,
						getReactKey: t,
						onClick: n,
						render: o
					} = this.props;
					return s.a.createElement("div", {
						className: e
					}, this.state.values.map((e, r) => s.a.createElement(d, {
						id: e,
						key: t && t(e, r),
						index: r,
						render: o,
						onDrop: this.onDrop,
						onClick: n
					})))
				}
			}
			t.a = Object(r.a)(u)
		},
		"./src/reddit/controls/SubredditDropdown/index.m.less": function(e, t, n) {
			e.exports = {
				entry: "BR2J4z5ndMj6r3-QW2hHI",
				mIsFocused: "_2KXTnIrbZ1Fr5F4nZyXeKS",
				list: "_17g61LC45mhwjs-g79qbZK"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SearchBar/index.m.less": function(e, t, n) {
			e.exports = {
				input: "_1MHSX9NVr4C2QxH2dMcg4M",
				inputWrapper: "anPJr_ybRailY8NbAunl2",
				searchBar: "_3cWzf-usAKfGV1Ay7h2zM_",
				commonIconStyles: "_3UX5zf2Jh7UCwxr3e1Rrt2",
				dropdownIcon: "_15FJlGHQ_lg8wmnMsXlnes",
				iconEmpty: "_3adQsrepNO01e3sMjt2z0P",
				subredditRoundIcon: "jpIFeDw811_DQwlQEqBjm",
				userIcon: "_1Xb3_WGBJKTWZNy0MHWTsR",
				searchIcon: "_2MCEtCukiOUDUHF1PDgWwH",
				mDisabled: "I8Mbkr_v6UNBq2UjXD24r"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/DropdownEntry/index.m.less": function(e, t, n) {
			e.exports = {
				entry: "_2_6Q3rlmltjQM8nEBoNJr-",
				disabled: "_1eGUunOsIyMkgTF3IiieVl"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/DropdownSection/index.m.less": function(e, t, n) {
			e.exports = {
				title: "-T-WBPEANCCRwTdAGSdj_",
				dropdownSection: "_2MAa_9ffQVHzsZ-RD1dD5F",
				titleContainer: "_112QSSyLmEVry3hGjIPV--",
				titleText: "_3fpkz04m3VEANbACfYOR0H",
				srCreationButton: "_3ujvK82qZ7yzbpEffTiXH-"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/PostTypes/index.m.less": function(e, t, n) {
			e.exports = {
				iconWrapper: "_2jjSvas2tvdAFgIvSzSBax",
				mDisabled: "_2PoEIlhFzgV0sUWfM40K-N",
				rowStyle: "_3DfMNtnkrzHeGN0WyUTTuX"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/index.m.less": function(e, t, n) {
			e.exports = {
				subredditIcon: "vxu9qtznQ1Kvakd5mtfxV",
				main: "_11CAFoZ5ryUXHrO5iX6Ktk",
				title: "_1bEDlh2fhWPx9-h3IqUvFa",
				lockTitleWithEllipsis: "mFsxWzlvJHnXmu7_xaIzI",
				secondary: "_2q4aqq7yddFWa3SfRCihRH",
				container: "_3oyS3dPRsa51zDEONlIdts",
				mHighLight: "F6s6qTIrbT1UvKhtNmPq4"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return E
			})), n.d(t, "b", (function() {
				return y
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/lessComponent.tsx"),
				a = n("./src/reddit/components/SubredditIcon/index.tsx"),
				c = n("./src/reddit/controls/MetaSeparator/index.tsx"),
				l = n("./src/reddit/icons/svgs/ImagePost/index.tsx"),
				d = n("./src/reddit/icons/svgs/Link/index.tsx"),
				u = n("./src/reddit/icons/svgs/TextPost/index.tsx"),
				p = n("./src/reddit/icons/svgs/Video/index.tsx"),
				m = n("./src/reddit/layout/row/Inline/index.tsx"),
				h = n("./src/reddit/icons/fonts/index.tsx"),
				b = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/PostTypes/index.m.less"),
				f = n.n(b);
			const g = [{
				type: "text",
				Icon: u.a
			}, {
				type: "images",
				Icon: l.a
			}, {
				type: "videos",
				Icon: p.a
			}, {
				type: "links",
				Icon: d.a
			}, {
				type: "talks",
				Icon: () => s.a.createElement(h.a, {
					name: "audio"
				})
			}];

			function v(e) {
				const {
					allowedPostTypes: t,
					className: n
				} = e;
				return s.a.createElement(m.a, {
					className: Object(r.a)(f.a.rowStyle, n)
				}, g.map((e, n) => {
					let {
						type: o,
						Icon: i
					} = e;
					return s.a.createElement("div", {
						className: Object(r.a)(f.a.iconWrapper, {
							[f.a.mDisabled]: !t[o]
						}),
						key: n
					}, s.a.createElement(i, null))
				}))
			}
			var x = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/index.m.less"),
				C = n.n(x);
			const E = i.a.wrapped(a.b, "subredditIcon", C.a);

			function y(e) {
				const {
					className: t,
					explanationText: n,
					highlight: o,
					icon: i,
					item: a,
					lockTitleWithEllipsis: l,
					onClick: d,
					secondaryText: u,
					subText: p,
					title: m
				} = e, {
					allowedPostTypes: h
				} = a;
				return s.a.createElement("div", {
					className: Object(r.a)(C.a.container, {
						[C.a.mHighlight]: o
					}, t),
					onClick: d
				}, i, s.a.createElement("div", {
					className: C.a.main
				}, s.a.createElement("span", {
					className: Object(r.a)(C.a.title, {
						[C.a.lockTitleWithEllipsis]: l
					})
				}, m), u && s.a.createElement("span", {
					className: C.a.secondary
				}, u, p && s.a.createElement(s.a.Fragment, null, s.a.createElement(c.a, null), s.a.createElement("span", {
					className: C.a.secondary
				}, p))), n && s.a.createElement("span", {
					className: C.a.secondary
				}, n)), o && h && s.a.createElement(v, {
					allowedPostTypes: h
				}))
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/ProfileEntryContent/index.m.less": function(e, t, n) {
			e.exports = {
				profileIcon: "_3JCR5jV3N1dbyHaUswxl4K"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/RecommendedSubreddits/index.m.less": function(e, t, n) {
			e.exports = {
				wrapper: "C_XJ2ZB_b9iAPcFCHr4SW",
				title: "_1qKkNpHiC5Vgwbp0N8pOiG",
				contentWrapper: "_2l-m9MtS29tOlexExTlpXo",
				spinner: "_3rJ_SLWBH_jxAMlgNkciE9",
				itemWrapper: "Tx6TtQK3xJ9F5qpQlrEHT"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/RecommendedSubreddits/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return C
			})), n.d(t, "a", (function() {
				return E
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./node_modules/reselect/es/index.js"),
				c = n("./src/lib/classNames/index.ts"),
				l = n("./src/reddit/actions/postCreation/general.ts"),
				d = n("./src/reddit/components/Hovercards/SubredditHovercard/index.tsx"),
				u = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				p = n("./src/reddit/helpers/trackers/postComposer.ts"),
				m = n("./src/reddit/hooks/useIntersectionObserver.ts"),
				h = n("./src/reddit/hooks/useTracking.ts"),
				b = n("./src/reddit/selectors/experiments/postCreationSubRec.ts"),
				f = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/SubredditEntryContent/index.tsx"),
				g = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/RecommendedSubreddits/index.m.less"),
				v = n.n(g);
			const x = e => {
					const {
						items: t,
						itemWrapperClassName: n,
						isRedditRec: i,
						onSelectRecommendation: a,
						shouldShowSubredditOnlineUsers: l = !1
					} = e, u = Object(h.a)(), b = Object(s.useCallback)((e, t) => {
						u(Object(p.w)(e, t))
					}, []), g = Object(s.useRef)(null), x = Object(s.useCallback)(e => {
						e.forEach(e => {
							const {
								isIntersecting: t
							} = e;
							t && u(Object(p.v)())
						})
					}, []);
					return Object(m.a)(g, x), r.a.createElement(r.a.Fragment, null, t.map((e, t) => r.a.createElement("div", {
						className: Object(c.a)(v.a.itemWrapper, n),
						key: e.name
					}, r.a.createElement(d.a, {
						subredditName: e.name,
						shouldOpenNewTabOnClicks: !0,
						onShow: () => b(e.name, t)
					}, r.a.createElement(f.a, {
						item: e,
						highlight: !1,
						shouldPrettyPrint: !0,
						explanationText: i ? o.fbt._("based on your subscription", null, {
							hk: "3Hb2XK"
						}) : o.fbt._("based on your content", null, {
							hk: "3u8Nrt"
						}),
						onClick: () => {
							a(e), u(Object(p.u)(e.name, t))
						},
						lockTitleWithEllipsis: !0,
						shouldShowSubredditOnlineUsers: l
					})))), r.a.createElement("span", {
						ref: g,
						key: "recommended-render"
					}))
				},
				C = e => {
					const {
						contentWrapperClassName: t,
						hasData: n,
						isPending: o,
						isRedditRec: s,
						items: i,
						itemWrapperClassName: a,
						onSelectRecommendation: c,
						shouldShowSubredditOnlineUsers: l = !1
					} = e;
					return r.a.createElement("div", {
						className: t
					}, o && r.a.createElement(u.a, {
						sizePx: 30,
						className: v.a.spinner
					}), n && !o && r.a.createElement(x, {
						isRedditRec: s,
						items: i,
						itemWrapperClassName: a,
						onSelectRecommendation: c,
						shouldShowSubredditOnlineUsers: l
					}))
				},
				E = e => {
					const t = Object(i.d)(),
						{
							isPending: n,
							hasData: c,
							isChanged: d,
							items: u,
							isRedditRec: p
						} = Object(i.e)(Object(a.c)({
							isPending: b.i,
							hasData: b.d,
							isChanged: b.e,
							items: b.c,
							isRedditRec: b.j
						}));
					return Object(s.useEffect)(() => {
						d && t(Object(l.k)())
					}, [d, t]), r.a.createElement("div", {
						className: v.a.wrapper,
						onMouseDown: e.onContainerMouseDown
					}, r.a.createElement("div", {
						className: v.a.title
					}, o.fbt._("Suggested communities", null, {
						hk: "4BebuH"
					})), r.a.createElement(C, {
						contentWrapperClassName: v.a.contentWrapper,
						hasData: c,
						isPending: n,
						isRedditRec: p,
						items: u,
						onSelectRecommendation: e.onSelectRecommendation
					}))
				}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/SubredditEntryContent/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_20inB3H1vZ94tVilqSJmU2",
				hasExplanationText: "_1xZtDFYDxzgIqaJfg9XzJh"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/SubredditEntryContent/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return b
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./node_modules/react-redux/es/index.js"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/lib/prettyPrintNumber/index.ts"),
				l = n("./src/reddit/helpers/name/index.ts"),
				d = n("./src/reddit/selectors/subreddit.ts"),
				u = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/index.tsx"),
				p = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/SubredditEntryContent/index.m.less"),
				m = n.n(p);

			function h() {
				return (h = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}

			function b(e) {
				const {
					item: {
						primaryColor: t,
						iconUrl: n,
						name: s,
						subscribers: p,
						active: b
					},
					shouldPrettyPrint: f,
					explanationText: g,
					shouldShowSubredditOnlineUsers: v = !1
				} = e, x = Object(i.e)(e => Object(d.z)(e, {
					subredditName: s
				})), C = Object(l.d)(s), E = void 0 !== p ? o.fbt._({
					"*": "{number} members",
					_1: "1 member"
				}, [o.fbt._plural(p, "number", f ? Object(c.b)(p) : void 0)], {
					hk: "2SvJUX"
				}) : void 0, y = x ? o.fbt._("{number users online in subreddit} online", [o.fbt._param("number users online in subreddit", Object(c.b)(x.accountsActive))], {
					hk: "49HfzS"
				}) : void 0, O = v ? `${E} • ${y}` : E, k = void 0 !== b ? o.fbt._({
					"*": "{number} online",
					_1: "1 online"
				}, [o.fbt._plural(b, "number", f ? Object(c.b)(b) : void 0)], {
					hk: "NgOAJ"
				}) : void 0, _ = r.a.createElement(u.a, {
					className: Object(a.a)(m.a.icon, {
						[m.a.hasExplanationText]: !!g
					}),
					iconUrl: n,
					primaryColor: t,
					redditStyle: !0
				});
				return r.a.createElement(u.b, h({
					icon: _,
					title: C,
					secondaryText: O,
					subText: k
				}, e))
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/index.m.less": function(e, t, n) {
			e.exports = {
				noMatches: "kaGogHhtbK_vPZj9943oa",
				container: "_3DQXGvoE1SM3Kmz20of7Iz",
				mIsValid: "_28z84WGIIVp4uDMcA3-Kgw",
				mIsVisible: "_3009h778F7QI2qu6YmsxVV"
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return N
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/lodash/debounce.js"),
				r = n.n(s),
				i = n("./node_modules/react/index.js"),
				a = n.n(i),
				c = n("./src/lib/classNames/index.ts");
			const l = {
				leading: !0,
				trailing: !1
			};
			var d = function(e, t, n) {
					let o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : l;
					const s = {
							...l,
							...o
						},
						r = t > e ? 1 : -1;
					let i = e;
					if (e !== t) {
						for (s.leading || (i += r); i !== t;) n(i), i += r;
						s.trailing && n(i)
					} else(s.leading || s.trailing) && n(e)
				},
				u = n("./src/lib/forEachGroup/index.ts"),
				p = n("./src/reddit/models/SubredditAutocomplete/index.ts"),
				m = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/DropdownEntry/index.m.less"),
				h = n.n(m);
			class b extends i.Component {
				constructor(e) {
					super(e), this.mouseDown = !1, this.element = null, this.setRef = e => this.element = e, this.onMouseUp = () => {
						this.mouseDown && (this.props.disabled || this.props.onSelect(this.props.entryIndex), this.mouseDown = !1)
					}, this.onMouseDown = e => {
						this.mouseDown = !0, e.preventDefault()
					}, this.onMouseOver = () => {
						this.props.onOver(this.props.entryIndex)
					}, this.mouseDown = !1
				}
				componentDidUpdate() {
					this.mouseDown = !1, this.element && this.props.onUpdate(this.props.entryIndex, this.element)
				}
				render() {
					return a.a.createElement("div", {
						className: Object(c.a)(h.a.entry, this.props.disabled && h.a.disabled),
						onMouseDown: this.onMouseDown,
						onMouseOver: this.onMouseOver,
						onMouseUp: this.onMouseUp,
						ref: this.setRef
					}, this.props.children)
				}
			}
			var f = n("./src/reddit/controls/Button/index.tsx"),
				g = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/DropdownSection/index.m.less"),
				v = n.n(g);

			function x() {
				return (x = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			var C = e => {
					let {
						className: t,
						children: n,
						title: s,
						onOpenCommunityCreation: r,
						shouldShowCreateCommunityButton: i,
						...l
					} = e;
					return a.a.createElement("div", x({
						className: Object(c.a)(v.a.dropdownSection, t)
					}, l), s && i ? a.a.createElement("div", {
						className: v.a.titleContainer
					}, a.a.createElement("span", {
						className: v.a.titleText
					}, s), a.a.createElement(f.t, {
						className: v.a.srCreationButton,
						onClick: r,
						priority: f.c.Plain,
						size: f.d.XS
					}, o.fbt._("Create New", null, {
						hk: "3WP7G4"
					}))) : s && a.a.createElement("div", {
						className: v.a.title
					}, s), n)
				},
				E = n("./src/reddit/components/UserIcon/CurrentUserIcon.tsx"),
				y = n("./src/reddit/helpers/name/index.ts"),
				O = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/index.tsx"),
				k = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/EntryContent/index.m.less"),
				_ = n.n(k),
				j = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/ProfileEntryContent/index.m.less"),
				S = n.n(j);

			function T() {
				return (T = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}

			function w(e) {
				const {
					item: {
						name: t,
						subscribers: n
					}
				} = e, s = Object(y.e)(t), r = void 0 !== n ? o.fbt._({
					"*": "{number} members",
					_1: "1 member"
				}, [o.fbt._plural(n, "number")], {
					hk: "2SvJUX"
				}) : void 0, i = a.a.createElement(E.a, {
					className: Object(c.a)(S.a.profileIcon, _.a.subredditIcon)
				});
				return a.a.createElement(O.b, T({
					icon: i,
					title: s,
					secondaryText: r
				}, e))
			}
			var I = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/SubredditEntryContent/index.tsx"),
				P = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/index.m.less"),
				M = n.n(P);
			const R = {
				[p.a.OWN_PROFILE]: () => o.fbt._("Your profile", null, {
					hk: "1Qoy4P"
				}),
				[p.a.SUBSCRIBED_TO_SUBREDDIT]: () => o.fbt._("Your communities", null, {
					hk: "2XzKJR"
				}),
				[p.a.OTHER_SUBREDDIT]: () => o.fbt._("Others", null, {
					hk: "3WQHlu"
				}),
				[p.a.MODERATED_SUBREDDIT]: () => o.fbt._("Moderated subreddits", null, {
					hk: "uZtld"
				})
			};
			class N extends a.a.PureComponent {
				constructor() {
					super(...arguments), this.selectedEntryElement = null, this.containerElement = null, this.ignoreEntryOverEvents = !1, this.activateEntryOverEvents = r()(() => this.ignoreEntryOverEvents = !1, 100), this.setContainerRef = e => this.containerElement = e, this.onEntryUpdate = (e, t) => {
						e === this.props.focusedIndex && (this.selectedEntryElement = t)
					}, this.onScroll = () => {
						this.ignoreEntryOverEvents && this.activateEntryOverEvents()
					}, this.onEntryOver = e => {
						this.ignoreEntryOverEvents || this.props.items[e].disabled || this.props.onEntryFocus(e), this.ignoreEntryOverEvents = !1
					}
				}
				componentDidUpdate() {
					if (this.props.focusedIndex >= 0 && this.selectedEntryElement && this.containerElement) {
						const e = this.selectedEntryElement.getBoundingClientRect(),
							t = this.containerElement.getBoundingClientRect();
						(e.top < t.top || e.bottom > t.bottom) && (this.ignoreEntryOverEvents = !0, 0 === this.props.focusedIndex ? this.containerElement.scrollTop = 0 : this.selectedEntryElement.scrollIntoView(e.top < t.top)), this.props.onEntryFocus(this.props.focusedIndex)
					}
				}
				getEntryContentComponent(e, t) {
					switch (e) {
						case p.a.OWN_PROFILE:
							return w;
						default:
							return I.a
					}
				}
				render() {
					const {
						focusedIndex: e,
						items: t,
						onOpenCommunityCreation: n,
						shouldShowCreateCommunityButton: s
					} = this.props, r = [];
					return this.props.showNoMatchesCaption && r.push(a.a.createElement(C, {
						key: "no-matches"
					}, a.a.createElement("div", {
						className: M.a.noMatches
					}, o.fbt._("No communities found", null, {
						hk: "4wDUHv"
					})))), Object(u.a)(t, {
						keyFn: e => e.type
					}, (o, i, c, l) => {
						const u = [];
						d(c, l, n => {
							const o = t[n],
								s = n === e,
								r = this.getEntryContentComponent(o.type, o.name);
							r && u.push(a.a.createElement(b, {
								entryIndex: n,
								disabled: o.disabled,
								key: o.id || o.name,
								onSelect: this.props.onEntrySelect,
								onOver: this.onEntryOver,
								onUpdate: this.onEntryUpdate
							}, a.a.createElement(r, {
								highlight: s,
								item: o
							})))
						});
						const m = R[i];
						r.push(a.a.createElement(C, {
							key: i,
							title: m && m(),
							onOpenCommunityCreation: n,
							shouldShowCreateCommunityButton: s && i === p.a.SUBSCRIBED_TO_SUBREDDIT
						}, u))
					}), a.a.createElement("div", {
						className: Object(c.a)(M.a.container, this.props.className, {
							[M.a.mIsValid]: this.props.isValid,
							[M.a.mIsVisible]: r.length > 0
						}),
						ref: this.setContainerRef,
						onMouseDown: this.props.onContainerMouseDown,
						onScroll: this.onScroll
					}, r)
				}
			}
		},
		"./src/reddit/controls/SubredditPicker/Picker/index.m.less": function(e, t, n) {
			e.exports = {
				container: "_2sfaZWDVT8JLAt2J9p4IzV",
				mIsActive: "_1d_qHIhircwk0cy-gLlRQq",
				mIsInvalid: "_3sp2CpDC4eODg63Hhf8_lz",
				subredditDropdownOpenAI: "_1OS0KkjeJ7foERCmAoM2Zc",
				subredditDropdownOpenAi: "_1OS0KkjeJ7foERCmAoM2Zc"
			}
		},
		"./src/reddit/controls/SubredditPicker/helpers.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return d
			})), n.d(t, "a", (function() {
				return u
			})), n.d(t, "c", (function() {
				return h
			}));
			var o = n("./src/reddit/constants/posts.ts"),
				s = n("./src/reddit/helpers/getSubredditOrProfileIconData/index.tsx"),
				r = n("./src/reddit/helpers/name/index.ts"),
				i = n("./src/reddit/models/SubredditAutocomplete/index.ts"),
				a = n("./src/reddit/models/User/index.ts");
			const c = (e, t, n) => {
					if (Object(r.a)(e, t.name)) {
						const {
							id: e,
							name: i
						} = t, {
							url: a,
							color: c
						} = Object(s.a)({
							shouldHideNsfwIcon: n,
							subredditOrProfile: t
						});
						return {
							rawString: Object(r.d)(i),
							record: {
								id: e,
								name: i,
								iconUrl: a,
								primaryColor: c,
								type: o.a.SUBREDDIT
							}
						}
					}
					return {
						rawString: e,
						record: null
					}
				},
				l = (e, t, n) => {
					const s = Object(a.e)(t);
					if (Object(r.a)(e, s)) {
						const {
							id: e,
							accountIcon: n
						} = t;
						return {
							rawString: Object(r.e)(s),
							record: {
								id: e,
								name: s,
								iconUrl: n,
								type: o.a.PROFILE
							}
						}
					}
					return {
						rawString: e,
						record: null
					}
				},
				d = (e, t, n, o) => {
					if (t && (!n || Object(r.g)(e))) return c(e, t, o);
					if (n && (!t || Object(r.h)(e))) return l(e, n);
					if (t && n) {
						const s = c(e, t, o);
						return s.record ? s : l(e, n)
					}
					return {
						rawString: e,
						record: null
					}
				},
				u = e => {
					let t;
					return t = e.type === o.a.PROFILE ? i.a.OWN_PROFILE : i.a.OTHER_SUBREDDIT, {
						...e,
						type: t
					}
				},
				p = new RegExp("^(r/)?[A-Za-z0-9][A-Za-z0-9_]{1,20}$", "i"),
				m = new RegExp("^u/[A-Za-z0-9_-]{2,20}$", "i"),
				h = e => p.test(e) || m.test(e) || "" === e
		},
		"./src/reddit/controls/SubredditPicker/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return ne
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/lodash/isEqual.js"),
				i = n.n(r),
				a = n("./src/reddit/helpers/name/index.ts");
			class c extends s.a.Component {
				constructor(e) {
					super(e), this.isFocused = !1, this.onFocus = () => {
						this.isFocused = !0, this.props.onFocus && this.props.onFocus()
					}, this.onChange = (e, t) => {
						this.setState({
							value: e
						}, () => {
							t && (this.props.onSelect(e), this.isFocused = !1)
						})
					}, this.state = {
						value: e.value
					}
				}
				componentWillReceiveProps(e) {
					const {
						value: t
					} = this.state, {
						value: n
					} = e;
					if (!i()(t, n) && !this.isFocused) {
						t.record && !n.record && Object(a.a)(t.record.name, n.rawString) ? this.setState({
							value: {
								rawString: n.rawString,
								record: t.record
							}
						}) : this.setState({
							value: n
						})
					}
				}
				render() {
					return s.a.createElement(s.a.Fragment, null, this.props.renderPicker({
						onChange: this.onChange,
						onFocus: this.onFocus,
						value: this.state.value
					}))
				}
			}
			var l = n("./node_modules/react-redux/es/index.js"),
				d = n("./node_modules/reselect/es/index.js"),
				u = n("./src/lib/objectSelector/index.ts"),
				p = n("./src/reddit/actions/modal.ts"),
				m = n("./src/reddit/actions/subredditAutocomplete/index.ts"),
				h = n("./src/reddit/actions/subredditCrosspostable.ts"),
				b = n("./src/reddit/actions/subscription/index.ts"),
				f = n("./src/reddit/constants/modals.ts"),
				g = n("./src/reddit/contexts/PageLayer/index.tsx"),
				v = n("./src/reddit/controls/SubredditPicker/helpers.ts"),
				x = n("./node_modules/lodash/debounce.js"),
				C = n.n(x),
				E = n("./src/lib/classNames/index.ts"),
				y = n("./src/reddit/constants/keycodes.ts"),
				O = n("./src/reddit/constants/posts.ts"),
				k = n("./src/reddit/models/SubredditAutocomplete/index.ts"),
				_ = n("./node_modules/fbt/lib/FbtPublic.js"),
				j = n("./src/reddit/icons/fonts/index.tsx"),
				S = n("./src/lib/lessComponent.tsx"),
				T = n("./src/reddit/components/SubredditIcon/index.tsx"),
				w = n("./src/reddit/components/UserIcon/CurrentUserIcon.tsx"),
				I = n("./src/reddit/controls/SubredditPicker/Picker/SearchBar/index.m.less"),
				P = n.n(I);
			const M = S.a.wrapped(T.b, "subredditRoundIcon", P.a),
				R = S.a.wrapped(w.a, "userIcon", P.a),
				N = S.a.span("iconEmpty", P.a);

			function D() {
				return (D = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const L = e => {
				e.preventDefault(), e.stopPropagation()
			};

			function A(e) {
				const {
					className: t,
					disabled: n,
					isActive: o,
					onDropdownClick: r,
					inputRef: i,
					record: a,
					value: c,
					...l
				} = e;
				let d = s.a.createElement(N, null);
				return o ? d = s.a.createElement(j.a, {
					name: "search",
					className: P.a.searchIcon
				}) : a && (d = a.type === O.a.SUBREDDIT ? s.a.createElement(M, a) : s.a.createElement(R, null)), s.a.createElement("div", {
					className: Object(E.a)(P.a.searchBar, t)
				}, d, s.a.createElement("div", {
					className: P.a.inputWrapper
				}, s.a.createElement("input", D({
					className: P.a.input,
					ref: i,
					disabled: n,
					placeholder: o ? _.fbt._("Search communities", null, {
						hk: "1mtF5A"
					}) : _.fbt._("Choose a community", null, {
						hk: "44gKTd"
					}),
					spellCheck: !1,
					value: c
				}, l))), s.a.createElement("div", {
					onClick: r,
					onMouseDown: L
				}, s.a.createElement(j.a, {
					name: "caret_down",
					className: P.a.dropdownIcon
				})))
			}
			var B = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/index.tsx"),
				F = n("./src/reddit/selectors/experiments/postCreationSubRec.ts"),
				U = n("./src/reddit/controls/SubredditPicker/Picker/index.m.less"),
				K = n.n(U),
				W = n("./src/reddit/controls/SubredditPicker/Picker/SubredditDropdown/RecommendedSubreddits/index.tsx");
			const H = Object(d.c)({
				isOpenAIPilotV1: F.g,
				shouldRenderRec: F.m
			});
			class q extends s.a.Component {
				constructor(e) {
					var t;
					super(e), t = this, this.inputRef = null, this.setInputRef = e => {
						this.inputRef = e, this.props.inputRef && this.props.inputRef(e)
					}, this.commitSelection = () => {
						const e = this.getPickerValue(!0);
						Object(v.c)(e.rawString) ? this.props.onChange(e, !0) : this.props.onChange({
							rawString: "",
							record: null
						}, !0), this.state.isOpen && this.setState({
							isOpen: !1
						})
					}, this.callOnChange = () => this.props.onChange(this.getPickerValue()), this.requestAutocomplete = C()(e => this.props.onGetSubredditAutocomplete(e), 200, {
						maxWait: 200
					}), this.selectItem = e => {
						const t = this.props.items[e];
						if (!t) throw new Error("Invalid item index");
						let n;
						n = t.type === k.a.OWN_PROFILE ? Object(a.e)(t.name) : Object(a.d)(t.name), this.setState({
							inputValue: n,
							focusedIndex: e
						}, this.commitSelection)
					}, this.onSelectRecommendation = e => {
						if (!e) throw new Error("Invalid item index");
						let t;
						t = e.type === k.a.OWN_PROFILE ? Object(a.e)(e.name) : Object(a.d)(e.name), this.props.onChange({
							rawString: t,
							record: {
								name: e.name,
								iconUrl: e.iconUrl,
								primaryColor: e.primaryColor,
								type: O.a.SUBREDDIT
							}
						}, !0), this.state.isOpen && this.setState({
							isOpen: !1
						})
					}, this.getPickerValue = function() {
						let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
						const n = t.state.inputValue,
							o = t.state.focusedIndex,
							{
								items: s,
								value: r
							} = t.props;
						if (r && r.record && Object(a.a)(n, r.record.name)) return {
							...r,
							rawString: n
						};
						const i = s[o] || e && s.find(e => Object(a.a)(e.name, n));
						if (!i) return {
							rawString: n,
							record: null
						};
						const {
							type: c,
							id: l,
							name: d,
							iconUrl: u,
							primaryColor: p,
							allowedPostTypes: m
						} = i;
						return {
							rawString: n,
							record: Object(a.a)(n, d) ? {
								id: l,
								name: d,
								iconUrl: u,
								primaryColor: p,
								allowedPostTypes: m,
								type: c === k.a.OWN_PROFILE ? O.a.PROFILE : O.a.SUBREDDIT
							} : null
						}
					}, this.findNextEnabledItemIndex = e => {
						const t = e ? -1 : 1;
						let n = this.state.focusedIndex + t,
							o = this.props.items[n];
						for (; o;) {
							if (!o.disabled) return n;
							n += t, o = this.props.items[n]
						}
						return n
					}, this.moveSelection = function() {
						let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
						const {
							value: n,
							items: o
						} = t.props;
						let s = t.findNextEnabledItemIndex(e);
						s < -1 ? s = o.length - 1 : s >= o.length && (s = -1);
						const r = -1 === s ? n.rawString : o[s].name;
						r && t.setState({
							focusedIndex: s,
							inputValue: r
						})
					}, this.placeCursorAtTheEnd = () => {
						const e = this.state.inputValue.length;
						this.inputRef && this.inputRef.setSelectionRange(e, e)
					}, this.onDropdownClick = e => {
						const {
							inputRef: t
						} = this;
						this.state.isOpen ? this.setState({
							isOpen: !1
						}) : (t && t.focus(), this.setState({
							isOpen: !0
						}), this.placeCursorAtTheEnd()), e.preventDefault(), e.stopPropagation()
					}, this.onFocus = () => {
						this.props.onFocus && this.props.onFocus(), this.setState({
							isActive: !0,
							isOpen: !0
						}), this.inputRef && this.inputRef.select()
					}, this.onBlur = () => {
						this.props.selectOnBlur && this.state.isOpen ? (this.commitSelection(), this.setState({
							isActive: !1
						})) : this.setState({
							isActive: !1,
							isOpen: !1
						})
					}, this.onDropdownContainerMouseDown = e => {
						e.preventDefault()
					}, this.onEntryFocus = e => {
						this.setState({
							focusedIndex: e
						})
					}, this.onEntrySelect = e => {
						this.selectItem(e)
					}, this.onInputChange = e => {
						this.state.isOpen || this.setState({
							isOpen: !0
						});
						const t = e.target.value,
							n = this.state.inputValue;
						this.requestAutocomplete(t), this.setState({
							inputValue: t
						}, this.callOnChange), this.props.onInputChange && this.props.onInputChange(n, t)
					}, this.onKeyDown = e => {
						e.which === y.a.ArrowUp ? (this.moveSelection(!0), e.preventDefault()) : e.which === y.a.ArrowDown ? (this.moveSelection(), e.preventDefault()) : e.which === y.a.Enter || e.which === y.a.Tab ? (-1 !== this.state.focusedIndex ? this.selectItem(this.state.focusedIndex) : this.commitSelection(), e.which !== y.a.Tab && e.preventDefault()) : e.which === y.a.Escape && (this.inputRef && this.inputRef.blur(), e.preventDefault())
					}, this.state = {
						isActive: !1,
						isOpen: !1,
						focusedIndex: 0,
						inputValue: e.value.rawString
					}
				}
				componentDidMount() {
					const {
						value: {
							rawString: e
						}
					} = this.props;
					e && this.requestAutocomplete(e)
				}
				UNSAFE_componentWillReceiveProps(e) {
					this.setState({
						focusedIndex: -1,
						inputValue: e.value.rawString
					})
				}
				render() {
					const {
						className: e,
						disabled: t,
						isOpenAIPilotV1: n,
						isValid: o = !0,
						items: r,
						shouldRenderRec: i,
						value: a,
						shouldShowCreateCommunityButton: c
					} = this.props, {
						isActive: l,
						isOpen: d
					} = this.state, u = a.record;
					return s.a.createElement("div", {
						className: Object(E.a)(K.a.container, e, {
							[K.a.mIsActive]: l,
							[K.a.mIsInvalid]: !o
						})
					}, s.a.createElement(A, {
						disabled: t,
						isActive: this.state.isActive,
						value: this.state.inputValue,
						inputRef: this.setInputRef,
						onDropdownClick: this.onDropdownClick,
						onChange: this.onInputChange,
						onFocus: this.onFocus,
						onBlur: this.onBlur,
						onKeyDown: this.onKeyDown,
						record: u
					}), !this.state.inputValue && d && i && s.a.createElement(W.a, {
						onSelectRecommendation: this.onSelectRecommendation,
						onContainerMouseDown: this.onDropdownContainerMouseDown
					}), d && (!i || !!this.state.inputValue) && s.a.createElement(B.a, {
						className: n ? K.a.subredditDropdownOpenAI : void 0,
						items: r,
						isValid: o,
						focusedIndex: this.state.focusedIndex,
						showNoMatchesCaption: !this.props.haveSuggestions && this.props.isAllDataRetrieved,
						onContainerMouseDown: this.onDropdownContainerMouseDown,
						onEntryFocus: this.onEntryFocus,
						onEntrySelect: this.onEntrySelect,
						onOpenCommunityCreation: this.props.openCommunityCreation,
						shouldShowCreateCommunityButton: c
					}))
				}
			}
			var z = Object(l.b)(H)(q),
				G = n("./src/reddit/helpers/trackers/postComposer.ts"),
				V = n("./src/reddit/selectors/platform.ts"),
				Q = n("./src/reddit/selectors/subredditAutocomplete.ts"),
				J = n("./src/reddit/selectors/user.ts");

			function X() {
				return (X = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const Z = Object(g.v)(),
				Y = Object(u.a)(Object(d.a)((e, t) => t.value, (e, t) => {
					let {
						allowCrosspostableOnly: n,
						includeUserProfile: o,
						value: s
					} = t;
					return Object(Q.a)(e, {
						allowCrosspostableOnly: n,
						includeUserProfile: o,
						substring: s.rawString
					})
				}, e => Object(J.sb)(e) && Object(V.j)(e), (e, t, n) => {
					const {
						suggestedItems: o,
						fallbackItems: s,
						isAllDataRetrieved: r
					} = t, i = o.length ? o : e.record ? [Object(v.a)(e.record)] : [];
					return {
						items: 0 === i.length && r ? s : i,
						haveSuggestions: i.length > 0,
						isAllDataRetrieved: t.isAllDataRetrieved,
						isAutocompletePending: t.isPending,
						shouldShowCreateCommunityButton: n
					}
				})),
				$ = {
					onGetInitialData: e => t => t(e ? h.d() : b.e()),
					onGetSubredditAutocomplete: m.a,
					openCommunityCreation: () => async (e, t) => {
						Object(G.c)(t()), e(Object(p.h)(f.a.SUBREDDIT_CREATION_MODAL_ID))
					}
				};
			class ee extends s.a.Component {
				constructor() {
					super(...arguments), this.onGetSubredditAutocomplete = e => {
						this.props.onGetSubredditAutocomplete(e)
					}
				}
				componentDidMount() {
					this.props.onGetInitialData(!!this.props.allowCrosspostableOnly)
				}
				render() {
					return s.a.createElement(z, X({}, this.props, {
						onGetSubredditAutocomplete: this.onGetSubredditAutocomplete
					}))
				}
			}
			var te = Z(Object(l.b)(Y, $)(ee));
			class ne extends s.a.Component {
				constructor() {
					super(...arguments), this.renderPicker = e => s.a.createElement(te, {
						allowCrosspostableOnly: this.props.allowCrosspostableOnly,
						className: this.props.className,
						disabled: this.props.disabled || !1,
						includeUserProfile: this.props.includeUserProfile,
						inputRef: this.props.inputRef,
						isValid: this.props.isValid,
						onChange: e.onChange,
						onFocus: e.onFocus,
						onInputChange: this.props.onInputChange,
						value: e.value,
						selectOnBlur: this.props.selectOnBlur || !1
					})
				}
				render() {
					return s.a.createElement(c, {
						onFocus: this.props.onFocus,
						onSelect: this.props.onSelect,
						renderPicker: this.renderPicker,
						value: this.props.value
					})
				}
			}
		},
		"./src/reddit/controls/TextButton/index.m.less": function(e, t, n) {
			e.exports = {
				textButton: "qYzY57HWQ8W424hj3s10-"
			}
		},
		"./src/reddit/controls/TextButton/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/controls/TextButton/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("button", {
				children: e.children,
				className: Object(r.a)(a.a.textButton, e.className),
				disabled: e.disabled,
				onClick: e.onClick
			})
		},
		"./src/reddit/controls/ToggleSwitch/index.m.less": function(e, t, n) {
			e.exports = {
				toggleDisplay: "_2FKpII1jz0h6xCAw1kQAvS",
				toggleSwitch: "_2e2g485kpErHhJQUiyvvC2",
				redditStyle: "_3kUvbpMbR21zJBboDdBH7D",
				mActive: "_1L5kUnhRYhUJ4TkMbOTKkI",
				mDisabled: "_3clF3xRMqSWmoBQpXv8U5z",
				xs: "_1asGWL2_XadHoBuUlNArOq",
				s: "_1hku5xiXsbqzLmszstPyR3",
				m: "_10hZCcuqkss2sf5UbBMCSD",
				l: "_1fCdbQCDv6tiX242k80-LO",
				xl: "_2Jp5Pv4tgpAsTcnUzTsXgO"
			}
		},
		"./src/reddit/controls/ToggleSwitch/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/controls/Button/index.tsx"),
				a = n("./src/reddit/controls/ToggleSwitch/index.m.less"),
				c = n.n(a);
			t.a = Object(o.memo)(Object(o.forwardRef)((e, t) => {
				const n = e.size || i.d.XS;
				return s.a.createElement("button", {
					"aria-checked": e.on,
					className: Object(r.a)(c.a.toggleSwitch, e.className, {
						[c.a.xs]: n === i.d.XS,
						[c.a.s]: n === i.d.S,
						[c.a.m]: n === i.d.M,
						[c.a.l]: n === i.d.L,
						[c.a.xl]: n === i.d.XL,
						[c.a.mActive]: e.on && !e.disabled || e.forceOn && e.on,
						[c.a.mDisabled]: e.disabled,
						[c.a.redditStyle]: e.redditStyle
					}),
					style: e.on && !e.disabled && e.activeColorOverride ? {
						backgroundColor: e.activeColorOverride
					} : void 0,
					id: e.id,
					role: "switch",
					tabIndex: e.tabIndex,
					type: "button",
					onClick: () => !e.disabled && e.onToggle && e.onToggle(),
					ref: t
				}, s.a.createElement("div", {
					className: c.a.toggleDisplay
				}))
			}))
		},
		"./src/reddit/controls/Typography/index.m.less": function(e, t, n) {
			e.exports = {
				heading1: "_37JeV292IJA7_x1qej_-2H",
				heading2: "p13k-tsMcatGBlVpJBZmw",
				heading3: "_1nHvvYpmn7q9eWDAGzKcce",
				heading4: "_1-rwUWsB5F8WmYI8F66dai",
				heading5: "_22RKdGqihAj6MFumW6DuRV",
				heading6: "_4xqrI_N1UdqsK9E1RSisG",
				body1: "_2HJOIn4SJm4z1NeCv_hNFu",
				body2: "_3ImIPX9rfoPmUrZ1R8KGqS",
				actionFont: "_3uShGanwyVFBaTiPMFzfAC",
				metadata: "_2nyJGeaFJbXTqTh9OGwxfu",
				metadata3: "_3BIqvjJkJKZfH4vtC11dGF"
			}
		},
		"./src/reddit/controls/Typography/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return i
			})), n.d(t, "a", (function() {
				return a
			})), n.d(t, "c", (function() {
				return c
			}));
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/controls/Typography/index.m.less"),
				r = n.n(s);
			o.a.h1("heading1", r.a), o.a.h2("heading2", r.a), o.a.h3("heading3", r.a), o.a.h4("heading4", r.a);
			const i = o.a.h5("heading5", r.a),
				a = (o.a.h6("heading6", r.a), o.a.p("body1", r.a), o.a.p("body2", r.a)),
				c = (o.a.p("actionFont", r.a), o.a.p("metadata", r.a));
			o.a.p("metadata3", r.a)
		},
		"./src/reddit/controls/UnstyledInternalLink/index.m.less": function(e, t, n) {
			e.exports = {
				unstyledInternalLink: "_39Glgtoolpdt4PIzcnjPSW"
			}
		},
		"./src/reddit/controls/UnstyledInternalLink/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/controls/InternalLink/index.tsx"),
				r = n("./src/reddit/controls/UnstyledInternalLink/index.m.less"),
				i = n.n(r);
			t.a = o.a.wrapped(s.default, "unstyledInternalLink", i.a)
		},
		"./src/reddit/controls/Upvote/index.m.less": function(e, t, n) {
			e.exports = {
				Upvote: "_3SUsITjKNQ7Tp0Wi2jGxIM",
				upvote: "_3SUsITjKNQ7Tp0Wi2jGxIM",
				mIsInteractive: "qW0l8Af61EP35WIG6vnGk",
				mIsActive: "Z3lT0VGlALek4Q9j0ZQCr",
				mIsVoteable: "_3edNsMs0PNfyQYofMNVhsG"
			}
		},
		"./src/reddit/endpoints/economics/emojis.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			}));
			var o = n("./src/config.ts"),
				s = n("./src/reddit/endpoints/governance/requester.ts");
			const r = (e, t) => Object(s.a)(e, {
					method: "post",
					endpoint: `${o.a.metaUrl}/orders`,
					data: {
						price: "0",
						currency: "usd",
						products: [{
							productId: t.productId,
							quantity: "1"
						}],
						subredditId: t.subredditId
					}
				}),
				i = (e, t) => Object(s.a)(e, {
					method: "get",
					endpoint: `${o.a.metaUrl}/product-collections/${t}?types=emotes_pack`
				})
		},
		"./src/reddit/endpoints/economics/specialMembership.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return l
			})), n.d(t, "b", (function() {
				return d
			})), n.d(t, "d", (function() {
				return u
			})), n.d(t, "e", (function() {
				return p
			})), n.d(t, "c", (function() {
				return m
			}));
			var o = n("./src/config.ts"),
				s = n("./src/lib/omitHeaders/index.ts"),
				r = n("./src/reddit/constants/headers.ts"),
				i = n("./src/reddit/endpoints/governance/requester.ts"),
				a = n("./src/reddit/helpers/governanceErrorText/index.ts"),
				c = n("./src/reddit/helpers/r2/normalizeSubredditFromR2/index.ts");

			function l(e, t) {
				return Object(i.a)(e, {
					endpoint: `${o.a.metaUrl}/communities/${t.subredditId}/me`,
					method: "patch",
					data: {
						specialMemberships: {
							settings: {
								renew: !1
							}
						}
					}
				})
			}

			function d(e, t) {
				return Object(i.a)(e, {
					endpoint: `${o.a.metaUrl}/ps/me/braintree-client-tokens`,
					method: "post",
					data: {
						username: t && t.username
					}
				})
			}

			function u(e, t) {
				return Object(i.a)(e, {
					endpoint: `${o.a.metaUrl}/orders`,
					method: "post",
					data: {
						currency: "usd",
						orderTarget: "special_membership",
						price: t.trial ? "0" : t.price,
						products: [{
							productId: t.productId,
							quantity: "1"
						}],
						providerArgs: {
							paymentNonce: t.nonce,
							savePaymentMethod: !0
						},
						providerName: "braintree",
						subredditId: t.subredditId,
						targetArgs: {
							renew: !0,
							receiverName: t.username
						}
					}
				})
			}

			function p(e, t) {
				return Object(i.a)(Object(s.a)(e, [r.a]), {
					endpoint: `${e.apiUrl}/api/info?id=${t.join(",")}`,
					method: "get"
				}).then(e => {
					if (e.ok) {
						const t = e.body.data.children.map(e => {
							let {
								data: t
							} = e;
							return Object(c.a)(t)
						}).reduce((e, t) => (e[t.id] = t, e), {});
						return {
							...e,
							body: t
						}
					}
					return e
				})
			}
			async function m(e, t) {
				const n = await Object(i.a)(e, {
					endpoint: `${o.a.metaUrl}/orders`,
					method: "post",
					data: {
						...t,
						currency: "points",
						orderTarget: "special_membership",
						products: [{
							productId: "provisional_membership",
							quantity: "1"
						}],
						targetArgs: {
							renew: !1
						}
					}
				});
				if (!n.ok) throw new Error(`Error fetching provisional membership: ${Object(a.b)(n.error)}`);
				return n.body
			}
		},
		"./src/reddit/endpoints/economics/subredditPremium.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return d
			})), n.d(t, "b", (function() {
				return u
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/lodash/merge.js"),
				s = n.n(o),
				r = n("./src/config.ts"),
				i = n("./src/reddit/endpoints/governance/badges.ts"),
				a = n("./src/reddit/endpoints/governance/community.ts"),
				c = n("./src/reddit/endpoints/governance/products/badges.ts"),
				l = n("./src/reddit/endpoints/governance/requester.ts");
			async function d(e, t, n) {
				const o = {
						subredditId: t,
						badges: {},
						errors: {},
						collections: {},
						products: {},
						subscription: void 0,
						userOwnedBadges: []
					},
					d = function(e, t) {
						return Object(l.a)(e, {
							method: "get",
							endpoint: `${r.a.metaUrl}/product-collections/${t}?types=badge`
						})
					}(e, t),
					u = Object(a.a)(e, {
						subredditId: t
					}),
					p = Object(c.b)(e, t),
					m = Object(i.c)(e, t, n),
					[h, b, f, g] = await Promise.all([d, u, p, m]);
				if (h.ok ? o.collections = h.body : o.errors.collections = h.error, b.ok) {
					const e = b.body;
					o.subscription = e.specialMemberships, o.communityRaw = e
				}
				return f.ok ? o.products = f.body : o.errors.products = f.error, g.ok ? (s()(o.badges, g.body.badges), o.userOwnedBadges = g.body.userOwnedBadges) : o.errors.userBadges = g.error, o
			}
			const u = (e, t) => Object(l.a)(e, {
				endpoint: `${r.a.metaUrl}/products/${t}?types=badge,membership`,
				method: "delete"
			})
		},
		"./src/reddit/endpoints/eligibleUXExperiences/eligibleUxExperiences.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			})), n.d(t, "b", (function() {
				return l
			})), n.d(t, "c", (function() {
				return d
			}));
			var o = n("./src/lib/makeGqlRequest/index.ts"),
				s = n("./node_modules/react/index.js"),
				r = n("./src/reddit/hooks/useGqlContext.ts"),
				i = n("./src/redditGQL/operations/FetchEligibleUXExperiences.json"),
				a = n("./src/redditGQL/operations/StoreUxTargetingAction.json");
			const c = (e, t, n) => {
					const s = {
						experienceInputs: t
					};
					return n && (s.clientContext = n), Object(o.a)(e, {
						...i,
						variables: s
					})
				},
				l = (e, t) => Object(o.a)(e, {
					...a,
					variables: {
						input: t
					}
				}),
				d = (e, t, n) => {
					const o = Object(r.a)();
					return Object(s.useCallback)(() => l(o(), {
						action: t,
						eligibleExperience: e,
						source: n
					}), [o, e, t, n])
				}
		},
		"./src/reddit/endpoints/governance/community.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return i
			}));
			var o = n("./src/config.ts"),
				s = n("./src/lib/constants/index.ts"),
				r = n("./src/reddit/endpoints/governance/requester.ts");

			function i(e, t) {
				return Object(r.a)(e, {
					endpoint: `${o.a.metaUrl}/communities/${t.subredditId}/me`,
					method: s.nb.GET
				})
			}
		},
		"./src/reddit/endpoints/onboarding/languageSelections.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return c
			})), n.d(t, "c", (function() {
				return l
			})), n.d(t, "d", (function() {
				return d
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./src/lib/makeGqlRequest/index.ts");
			var s, r = n("./src/redditGQL/operations/LanguageSelections.json"),
				i = n("./src/redditGQL/operations/UpdateSpokenLanguagesPreference.json");
			! function(e) {
				e.ALL_KEY = "all_languages_simple", e.SUGGESTED_KEY = "suggested_languages", e.TOP_KEYS = "top_languages"
			}(s || (s = {}));
			const a = (e, t) => {
					const n = {
						allKey: e,
						suggestedKey: s.SUGGESTED_KEY
					};
					return Object(o.a)(t, {
						...r,
						variables: n
					})
				},
				c = async e => {
					const t = await a(s.ALL_KEY, e());
					if (!t.ok) return null;
					const n = t.body,
						o = null == n ? void 0 : n.data;
					return o ? (e => {
						const t = {},
							n = e.identity.preferences.spokenLanguages || [];
						return e.all.map(e => {
							t[e.isoCode] = e.translatedDisplayName
						}), {
							languages: t,
							preferences: n
						}
					})(o) : null
				}, l = async (e, t, n) => {
					const o = await a(e, t());
					if (!o.ok) return null;
					const r = o.body,
						i = null == r ? void 0 : r.data;
					if (i) {
						return ((e, t, n) => {
							let o = null,
								s = [];
							const r = [],
								i = [],
								a = {},
								c = {};
							if (!e) {
								t.identity.preferences.spokenLanguages.map(e => {
									c[e] = !0
								})
							}
							for (let l = 0; l < t.suggested.length; l++) {
								const s = t.suggested[l];
								if (a[s.isoCode] = !0, n === s.isoCode) o = s;
								else {
									if (!e && c[s.isoCode]) continue; {
										const t = !!(e || !e && c[s.isoCode]);
										r.push({
											selected: t,
											...s
										})
									}
								}
							}
							for (let l = 0; l < t.all.length; l++) {
								const r = t.all[l];
								r.isoCode === n ? (o = r, i.push({
									selected: !0,
									...r
								})) : !e && c[r.isoCode] ? i.push({
									selected: !0,
									...r
								}) : a[r.isoCode] || s.push({
									selected: !(e || !c[r.isoCode]),
									...r
								})
							}
							if (s = r.concat(s), null === o) {
								const e = n.split("-").shift();
								for (let t = 0; t < s.length; t++)
									if (s[t].isoCode === e) {
										o = s[t], s.splice(t, 1);
										break
									}
							}
							return o && ((e || !e && c[o.isoCode]) && (o.selected = !0), s.unshift(o)), e || (s = i.concat(s)), {
								sortedLanguages: s
							}
						})(e === s.TOP_KEYS, i, n)
					}
					return null
				}, d = async (e, t) => {
					const n = await ((e, t) => {
						const n = {
							input: {
								spokenLanguages: t
							}
						};
						return Object(o.a)(e, {
							...i,
							variables: n
						})
					})(e(), Object.keys(t));
					if (!n.ok) return null;
					const s = n.body;
					return null == s ? void 0 : s.data
				}
		},
		"./src/reddit/endpoints/talk/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return d
			})), n.d(t, "b", (function() {
				return u
			})), n.d(t, "a", (function() {
				return p
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = (n("./node_modules/uuid/dist/esm-browser/v4.js"), n("./src/lib/makeGqlRequest/index.ts")),
				r = n("./src/lib/makeRequest/index.ts"),
				i = (n("./src/reddit/models/Subreddit/index.ts"), n("./src/redditGQL/operations/CreateLiveAudioRoomOnProfile.json"), n("./src/redditGQL/operations/CreateLiveAudioRoomOrError.json"), n("./src/redditGQL/operations/GetAvailableAudioRoomTopics.json"), n("./src/redditGQL/operations/GetSubredditAllowedPostTypes.json")),
				a = n("./src/redditGQL/operations/GetUserProfileAllowedPostTypes.json"),
				c = (n("./src/redditGQL/operations/PrepareLiveAudioRoom.json"), n("./src/redditGQL/operations/PrepareLiveAudioRoomOnProfile.json"), n("./src/redditGQL/operations/ReportTalk.json")),
				l = (n("./src/redditGQL/operations/StartLiveAudioRoom.json"), n("./src/redditGQL/types.ts"));
			const d = (e, t) => Object(s.a)(e, {
					...c,
					variables: t
				}),
				u = async (e, t) => {
					const n = await Object(s.a)(e, {
						...i,
						variables: t
					});
					return !!Object(r.c)(n) && (n.body.data.subredditInfoById.allowedPostTypes || []).includes(l.P.Talk)
				}, p = async (e, t) => {
					var n, o;
					const i = await Object(s.a)(e, {
						...a,
						variables: t
					});
					return !!Object(r.c)(i) && (null !== (o = null === (n = i.body.data.profileByName) || void 0 === n ? void 0 : n.allowedPostTypes) && void 0 !== o ? o : []).includes(l.P.Talk)
				};
			l.j.ServiceError, o.fbt._("Something's wrong with the talk service right now. Check back later.", null, {
				hk: "3XqPJS"
			}), l.j.UserNotAuthorized, o.fbt._("You don't have permission to start talks in this community.", null, {
				hk: "1XY1Ss"
			}), l.j.RoomLimitExceeded, o.fbt._("You can only create three talks at one time. To continue, close a talk you're not using.", null, {
				hk: "3zPx9X"
			}), l.j.ConcurrentRoomLimitExceeded, o.fbt._("Too many talks are happening right now. Try again later.", null, {
				hk: "2LYXJx"
			}), l.j.SubredditRoomLimitExceeded, o.fbt._("This community can only host two talks at a time. Try again after one has ended.", null, {
				hk: "2mGf21"
			}), l.R.ServiceError, o.fbt._("Something's wrong with the talk service right now. Check back later.", null, {
				hk: "3XqPJS"
			}), l.R.UserNotAuthorized, o.fbt._("You don't have permission to start talks in this community.", null, {
				hk: "1XY1Ss"
			})
		},
		"./src/reddit/featureFlags/component.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./src/reddit/featureFlags/index.ts");

			function c(e, t, n) {
				const o = Object(i.c)({
					featureEnabled: t => a.d[e](t)
				});
				return Object(r.b)(o)(e => {
					const {
						featureEnabled: o,
						...r
					} = e, i = r;
					return o ? s.a.createElement(t, i) : void 0 !== n ? s.a.createElement(n, i) : null
				})
			}
		},
		"./src/reddit/helpers/brandSafety/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./src/reddit/models/WhitelistStatus/index.ts");
			const s = (e, t) => {
				const n = e.some(e => e.isNSFW),
					s = t.some(e => e.wls === o.b.NO_ADS);
				return !n && !s
			}
		},
		"./src/reddit/helpers/crypto/vaultActionLink.ts": function(e, t, n) {
			"use strict";

			function o(e) {
				return e.match(/^https:\/\/www\.reddit\.com\/vault\/burn/)
			}

			function s(e) {
				const {
					subreddit: t,
					amount: n,
					memo: o,
					cta: s
				} = e;
				return t && n && o && s ? {
					subreddit: t,
					amount: n,
					memo: o,
					cta: s
				} : (console.error("subreddit, amount, and memo query params required for vault action"), null)
			}
			n.d(t, "b", (function() {
				return o
			})), n.d(t, "a", (function() {
				return s
			}))
		},
		"./src/reddit/helpers/dom/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "f", (function() {
				return i
			})), n.d(t, "d", (function() {
				return a
			})), n.d(t, "h", (function() {
				return c
			})), n.d(t, "c", (function() {
				return l
			})), n.d(t, "b", (function() {
				return d
			})), n.d(t, "e", (function() {
				return u
			})), n.d(t, "a", (function() {
				return p
			})), n.d(t, "g", (function() {
				return m
			}));
			var o = n("./node_modules/lodash/map.js"),
				s = n.n(o),
				r = n("./src/lib/FocusTrap/index.ts");
			const i = () => {
					const e = document.getSelection();
					return !!e && (e.rangeCount > 0 && e.getRangeAt(0).toString().length > 0)
				},
				a = () => i() ? (() => {
					const e = document.getSelection();
					if (!e) return [];
					const t = e.getRangeAt(0).cloneContents().childNodes;
					return s()(t, e => e.textContent || "")
				})() : null,
				c = (e, t) => {
					const n = document.createRange();
					return n.selectNode(t), e.compareBoundaryPoints(Range.END_TO_START, n) < 0 && e.compareBoundaryPoints(Range.START_TO_END, n) > 0
				},
				l = e => {
					const t = window.getSelection();
					if (1 !== t.rangeCount) return;
					const n = t.getRangeAt(0);
					if (!c(n, e)) return;
					const {
						startContainer: o,
						startOffset: s,
						endContainer: r,
						endOffset: i
					} = n, a = document.createRange();
					a.selectNode(e);
					let l = !0;
					if (-1 === a.compareBoundaryPoints(Range.START_TO_START, n) && (a.setStart(o, s), l = !1), 1 === a.compareBoundaryPoints(Range.END_TO_END, n) && (a.setEnd(r, i), l = !1), l) return [e];
					const d = document.createElement("div");
					return d.appendChild(a.cloneContents()), [...d.childNodes]
				},
				d = (e, t, n) => {
					let o = e;
					for (; o && (!n || !n(o));) {
						if (o && t(o)) return o;
						o = o.parentElement
					}
				},
				u = e => e && e.parentElement && d(e.parentElement, e => "static" !== window.getComputedStyle(e).getPropertyValue("position")),
				p = e => {
					e.querySelectorAll(r.a).forEach(e => {
						e.tabIndex = -1
					})
				},
				m = e => t => {
					if (t.preventDefault(), e && "function" == typeof e) return e(t)
				}
		},
		"./src/reddit/helpers/dragDropContext/index.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react-dnd/lib/index.js"),
				s = n("./node_modules/react-dnd-html5-backend/lib/index.js"),
				r = n.n(s);
			t.a = Object(o.DragDropContext)(r.a)
		},
		"./src/reddit/helpers/externalAccount/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			}));
			const o = () => new BroadcastChannel("external_account"),
				s = e => {
					const t = o();
					t.postMessage({
						type: "connected",
						provider: e
					}), t.close()
				}
		},
		"./src/reddit/helpers/genericServerError/index.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./src/lib/constants/index.ts");
			t.a = () => ({
				type: s.J.SERVER_ERROR,
				fields: [{
					field: "",
					msg: o.fbt._("Something went wrong.", null, {
						hk: "RcX5A"
					})
				}]
			})
		},
		"./src/reddit/helpers/governance/tokens.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return r
			})), n.d(t, "d", (function() {
				return i
			})), n.d(t, "a", (function() {
				return a
			})), n.d(t, "b", (function() {
				return c
			}));
			var o = n("./node_modules/bignumber.js/bignumber.js"),
				s = n("./src/lib/prettyPrintNumber/index.ts");

			function r(e, t) {
				const n = new o.BigNumber(e),
					s = new o.BigNumber(t || 1);
				return n.dividedToIntegerBy(s).toString()
			}

			function i(e, t) {
				return Object(s.b)(parseInt(r(e, t), 10))
			}

			function a(e, t) {
				const n = new o.BigNumber(e),
					s = new o.BigNumber(t || 1);
				return n.multipliedBy(s).toFixed(0)
			}

			function c(e) {
				const t = new o.BigNumber(e),
					n = new o.BigNumber("1e18");
				return t.dividedBy(n).toString()
			}
		},
		"./src/reddit/helpers/isRemoved.ts": function(e, t, n) {
			"use strict";
			t.a = e => !!e.bannedBy && !e.isSpam
		},
		"./src/reddit/helpers/modTooltipTemplates/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			})), n.d(t, "c", (function() {
				return a
			})), n.d(t, "d", (function() {
				return c
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./src/lib/humanizeUTCDate/index.tsx");
			const r = e => e.approvedBy && "string" == typeof e.approvedBy && e.approvedAtUTC ? o.fbt._("Approved by {username} at {time}", [o.fbt._param("username", e.approvedBy), o.fbt._param("time", Object(s.a)(e.approvedAtUTC))], {
					hk: "3G807D"
				}) : o.fbt._("Approved", null, {
					hk: "3CbKag"
				}),
				i = e => {
					let t = e.bannedBy && "string" == typeof e.bannedBy && e.bannedAtUTC ? o.fbt._("Removed by {username} at {time}", [o.fbt._param("username", e.bannedBy), o.fbt._param("time", Object(s.a)(e.bannedAtUTC))], {
						hk: "2Ey569"
					}) : o.fbt._("Removed", null, {
						hk: "238xK9"
					});
					return e.modReasonBy && e.modRemovalReason && (t = t + "\n" + o.fbt._("Reason by {username}:", [o.fbt._param("username", `u/${e.bannedBy}`)], {
						hk: "3qLdNZ"
					}) + e.modRemovalReason), e.modNote && (t = t + "\n" + o.fbt._("Note:", null, {
						hk: "2LD4vO"
					}) + e.modNote), t
				},
				a = e => o.fbt._({
					"*": "{number} Reports",
					_1: "1 Report"
				}, [o.fbt._plural(e, "number")], {
					hk: "3S0yx6"
				}),
				c = e => e.bannedBy && "string" == typeof e.bannedBy && e.bannedAtUTC ? o.fbt._("Removed as spam by {username} at {time}", [o.fbt._param("username", e.bannedBy), o.fbt._param("time", Object(s.a)(e.bannedAtUTC))], {
					hk: "2uutjk"
				}) : o.fbt._("Removed as spam", null, {
					hk: "1hD9G0"
				})
		},
		"./src/reddit/helpers/richTextEditor/index.ts": function(e, t, n) {
			"use strict";
			var o;
			n.d(t, "a", (function() {
					return o
				})),
				function(e) {
					e[e.Post = 0] = "Post", e[e.Comment = 1] = "Comment"
				}(o || (o = {}))
		},
		"./src/reddit/helpers/sessionStorage/index.ts": function(e, t, n) {
			"use strict";
			var o;
			n.d(t, "d", (function() {
					return r
				})), n.d(t, "b", (function() {
					return i
				})), n.d(t, "a", (function() {
					return a
				})), n.d(t, "c", (function() {
					return c
				})),
				function(e) {
					e.COMMENT_BEFORE_SIGNUP_STORAGE = "comment_before_signup_storage"
				}(o || (o = {}));
			const s = e => {
					if (window.sessionStorage) {
						const t = window.sessionStorage.getItem(e);
						if (t) return JSON.parse(t)
					}
					return null
				},
				r = e => {
					((e, t) => {
						window.sessionStorage && window.sessionStorage.setItem(e, JSON.stringify(t))
					})(o.COMMENT_BEFORE_SIGNUP_STORAGE, e)
				},
				i = () => s(o.COMMENT_BEFORE_SIGNUP_STORAGE),
				a = () => (e => {
					window.sessionStorage && window.sessionStorage.removeItem(e)
				})(o.COMMENT_BEFORE_SIGNUP_STORAGE),
				c = () => {
					return !!s(o.COMMENT_BEFORE_SIGNUP_STORAGE)
				}
		},
		"./src/reddit/helpers/showReportIndicator/index.ts": function(e, t, n) {
			"use strict";
			t.a = e => !e.ignoreReports && (e.numReports || 0) > 0
		},
		"./src/reddit/helpers/styles/mixins/loading.m.less": function(e, t, n) {
			e.exports = {
				loadingBackground: "fzTkuBRFT8iIn1XnJX_Yn",
				"m-loading": "_34yMY7-6MNnz3utfjExvIq",
				mLoading: "_34yMY7-6MNnz3utfjExvIq",
				gradientAnimation: "vnt666wwqSK5qL63sBn9P",
				loadingBar: "_3giTODNeZ-Po90u8Ghs4aI",
				loadingContainer: "VRC9QT7CgUxvhK0ceQSrn"
			}
		},
		"./src/reddit/helpers/styles/mixins/loading.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return i
			})), n.d(t, "b", (function() {
				return a
			}));
			var o = n("./src/lib/classNames/index.ts"),
				s = n("./src/reddit/helpers/styles/mixins/loading.m.less"),
				r = n.n(s);
			const i = e => {
					let {
						isLoading: t
					} = e;
					return Object(o.a)(r.a.loadingBackground, {
						[r.a["m-loading"]]: t
					})
				},
				a = e => Object(o.a)(r.a.loadingBar, i(e))
		},
		"./src/reddit/helpers/styles/postBackgroundColor.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			n("./node_modules/polished/dist/polished.es.js");
			var o = n("./src/reddit/models/Theme/NewColorSystem/index.ts");

			function s(e) {
				return e.flairStyleTemplate && e.flairStyleTemplate.postBackgroundColor ? e.flairStyleTemplate.postBackgroundColor : Object(o.a)(e).post
			}
		},
		"./src/reddit/helpers/trackers/commentsChat.ts": function(e, t, n) {
			"use strict";
			n.d(t, "k", (function() {
				return d
			})), n.d(t, "l", (function() {
				return p
			})), n.d(t, "f", (function() {
				return m
			})), n.d(t, "c", (function() {
				return h
			})), n.d(t, "d", (function() {
				return b
			})), n.d(t, "b", (function() {
				return f
			})), n.d(t, "e", (function() {
				return g
			})), n.d(t, "a", (function() {
				return v
			})), n.d(t, "n", (function() {
				return x
			})), n.d(t, "g", (function() {
				return C
			})), n.d(t, "h", (function() {
				return E
			})), n.d(t, "m", (function() {
				return y
			})), n.d(t, "i", (function() {
				return O
			})), n.d(t, "j", (function() {
				return k
			}));
			var o = n("./src/lib/makeCommentsPageKey/index.ts"),
				s = n("./src/reddit/constants/tracking.ts"),
				r = n("./src/reddit/selectors/comments.ts"),
				i = n("./src/reddit/selectors/commentSelector.ts"),
				a = n("./src/reddit/selectors/telemetry.ts"),
				c = n("./src/telemetry/models/Event.ts");
			const l = (e, t) => ({
					...Object(a.q)(e),
					subreddit: Object(a.nb)(e),
					profile: Object(a.V)(e),
					post: Object(a.M)(e, t),
					comment: Object(a.j)({
						state: e,
						commentId: t
					})
				}),
				d = (e, t) => {
					const n = Object(i.c)(e, {
							commentId: t
						}),
						s = n && Object(o.a)(n.postId);
					if (!n || !s) return null;
					const c = {
							commentId: t,
							commentsPageKey: s
						},
						l = t && s && Object(r.j)(e, c) || 0;
					return Object(a.B)(e, void 0, {
						depth: l
					})
				},
				u = e => {
					var t;
					return null !== (t = e.split("chat_reaction_")[1]) && void 0 !== t ? t : ""
				},
				p = (e, t) => n => ({
					action: "load",
					noun: e,
					post: Object(a.M)(n, t),
					source: c.a.ChatView,
					subreddit: Object(a.nb)(n)
				}),
				m = (e, t) => n => ({
					...l(n, t),
					source: "live_post",
					action: s.c.CLICK,
					noun: e,
					actionInfo: {
						reason: "live_post",
						pageType: "actions_menu"
					},
					listing: d(n, t)
				}),
				h = e => t => ({
					...l(t, e),
					source: "chat_post",
					action: s.c.VIEW,
					noun: "last_message"
				}),
				b = e => t => ({
					...l(t, e),
					source: "chat_post",
					action: s.c.SUBMIT,
					noun: "reply",
					post: Object(a.M)(t, e),
					comment: Object(a.j)({
						state: t,
						commentId: e
					}),
					actionInfo: Object(a.d)(t, {
						reason: "live_post",
						type: "live_post"
					})
				}),
				f = e => t => ({
					...l(t, e),
					source: "chat_post",
					action: s.c.CLICK,
					noun: "comment",
					actionInfo: Object(a.d)(t, {
						pageType: "user_mention",
						reason: "live_post",
						type: "live_post"
					})
				}),
				g = e => t => ({
					...l(t, e),
					source: "chat_post",
					action: s.c.VIEW,
					noun: "warning",
					post: Object(a.M)(t, e),
					actionInfo: {
						pageType: "spam_rate_countdown"
					}
				}),
				v = e => t => ({
					...l(t, e),
					source: "chat_post",
					action: s.c.CLOSE,
					noun: "warning",
					post: Object(a.M)(t, e),
					actionInfo: {
						pageType: "spam_rate_countdown"
					}
				}),
				x = e => t => ({
					...l(t, e),
					source: "global",
					action: s.c.VIEW,
					noun: "screen",
					actionInfo: {
						reason: "live_post",
						pageType: "given_awards_list"
					},
					listing: d(t, e)
				}),
				C = (e, t, n) => o => ({
					...l(o, t),
					source: c.a.Chat,
					action: s.c.CLICK,
					noun: "reaction",
					actionInfo: {
						pageType: n,
						reason: u(e)
					},
					chat: {
						type: "live_post"
					},
					listing: d(o, t)
				}),
				E = (e, t, n) => o => ({
					...l(o, t),
					source: c.a.Chat,
					action: s.c.DELETE,
					noun: "reaction",
					actionInfo: {
						pageType: n,
						reason: u(e)
					},
					chat: {
						type: "live_post"
					},
					listing: d(o, t)
				}),
				y = () => e => {
					var t;
					return {
						...Object(a.q)(e),
						subreddit: Object(a.nb)(e),
						profile: Object(a.V)(e),
						actionInfo: {
							...Object(a.d)(e),
							paneName: (null === window || void 0 === window ? void 0 : window.parent) !== window ? "chat_tab" : (null === (t = null == e ? void 0 : e.platform.currentPage) || void 0 === t ? void 0 : t.locationState.clickSource) || ""
						},
						source: "chat_post",
						action: s.c.VIEW,
						noun: "hint"
					}
				},
				O = e => t => {
					const n = l(t, e);
					return n.comment.type = "thread_chat", {
						...n,
						source: "live_post",
						action: s.c.CLICK,
						noun: "chat_thread",
						actionInfo: Object(a.d)(t, {
							pageType: "actions_menu"
						})
					}
				},
				k = e => t => {
					const n = l(t, e);
					return n.comment.type = "thread_chat", {
						...n,
						source: "live_post",
						action: s.c.SUBMIT,
						noun: "comment",
						actionInfo: Object(a.d)(t)
					}
				}
		},
		"./src/reddit/helpers/trackers/commentsPage.ts": function(e, t, n) {
			"use strict";
			n.d(t, "g", (function() {
				return m
			})), n.d(t, "f", (function() {
				return h
			})), n.d(t, "b", (function() {
				return b
			})), n.d(t, "e", (function() {
				return f
			})), n.d(t, "a", (function() {
				return g
			})), n.d(t, "c", (function() {
				return v
			})), n.d(t, "d", (function() {
				return x
			})), n.d(t, "h", (function() {
				return C
			})), n.d(t, "k", (function() {
				return E
			})), n.d(t, "j", (function() {
				return y
			})), n.d(t, "i", (function() {
				return O
			})), n.d(t, "l", (function() {
				return k
			}));
			var o = n("./src/lib/constants/index.ts"),
				s = n("./src/reddit/constants/tracking.ts"),
				r = n("./src/reddit/helpers/correlationIdTracker.ts"),
				i = n("./src/reddit/models/PostDraft/index.ts"),
				a = n("./src/reddit/selectors/comments.ts"),
				c = n("./src/reddit/selectors/platform.ts"),
				l = n("./src/reddit/selectors/telemetry.ts"),
				d = n("./src/telemetry/index.ts"),
				u = n("./src/reddit/constants/richTextJson.ts");
			const p = e => {
					const t = Object(c.o)(e);
					return {
						source: "comment_composer",
						action: s.c.CLICK,
						...Object(l.q)(e),
						screen: Object(l.eb)(e),
						subreddit: Object(l.nb)(e),
						post: t ? Object(l.M)(e, t) : null,
						profile: Object(l.V)(e),
						correlationId: Object(r.c)(r.a.CommentComposer)
					}
				},
				m = async (e, t, o, s, r) => {
					const i = {
							commentId: r,
							commentsPageKey: o
						},
						c = r && Object(a.j)(e, i) || 0,
						{
							getFlairData: u
						} = await n.e("getFlairData").then(n.bind(null, "./src/reddit/helpers/trackers/features/getFlairData.ts")),
						m = s ? "image" : void 0;
					return Object(d.a)({
						noun: "comment",
						...p(e),
						comment: r ? Object(l.j)({
							state: e,
							commentId: r,
							contentType: m
						}) : null,
						listing: Object(l.B)(e, void 0, {
							depth: c
						}),
						commentComposer: {
							editorMode: t
						},
						userFlair: u(e),
						media: {
							mimetype: null == s ? void 0 : s.mimetype,
							size: null == s ? void 0 : s.size
						}
					})
				}, h = e => {
					let {
						state: t,
						bodyText: n,
						postId: s,
						error: r,
						parentId: i,
						uploadMetadata: a
					} = e;
					const c = p(t),
						l = r.type === o.Pb ? "karma_rate_limit" : r.fields && r.fields.length > 0 ? r.fields[0].msg : void 0,
						m = a ? "image" : function(e) {
							return e.includes(`"id":"${u.d}`)
						}("string" == typeof n ? n : JSON.stringify(n)) ? "giphy" : void 0;
					return Object(d.a)({
						...c,
						source: r.type === o.Pb ? "backend" : "comment_composer",
						actionInfo: {
							...c.actionInfo,
							reason: l
						},
						action: "error",
						noun: "comment",
						comment: {
							bodyText: n,
							parentId: i,
							postId: s,
							contentType: m
						},
						media: {
							mimetype: null == a ? void 0 : a.mimetype,
							size: null == a ? void 0 : a.size
						}
					})
				}, b = e => Object(d.a)({
					noun: "cancel",
					...p(e)
				}), f = (e, t) => {
					t === i.c.replyToPost && Object(d.a)({
						noun: "input",
						...p(e)
					})
				}, g = (e, t) => Object(d.a)({
					source: "comment",
					noun: "delete",
					action: "click",
					...Object(l.q)(t),
					screen: Object(l.eb)(t),
					subreddit: Object(l.nb)(t),
					post: Object(l.M)(t, e)
				}), v = e => Object(d.a)({
					noun: "edit",
					...p(e)
				}), x = e => Object(d.a)({
					noun: "save_edit",
					...p(e)
				}), C = (e, t) => n => {
					const o = "image_upload" === e || "video_upload" === e;
					return {
						...p(n),
						noun: o ? e : "text_option",
						commentComposer: {
							textType: e,
							finalStatus: t ? "on" : "off"
						}
					}
				}, E = () => e => ({
					...p(e),
					action: "open",
					noun: "gif_tooltip"
				}), y = e => t => ({
					...p(t),
					action: "change",
					noun: "gif_tooltip_search",
					search: {
						query: e
					}
				}), O = () => e => ({
					...p(e),
					action: "select",
					noun: "gif_tooltip_result"
				}), k = () => e => ({
					...p(e),
					source: "comment_composer",
					action: "open",
					noun: "images_tooltip"
				})
		},
		"./src/reddit/helpers/trackers/communityAwards.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			})), n.d(t, "e", (function() {
				return l
			})), n.d(t, "g", (function() {
				return d
			})), n.d(t, "c", (function() {
				return u
			})), n.d(t, "f", (function() {
				return p
			})), n.d(t, "b", (function() {
				return m
			})), n.d(t, "d", (function() {
				return h
			})), n.d(t, "h", (function() {
				return f
			})), n.d(t, "i", (function() {
				return g
			}));
			var o = n("./src/reddit/models/Gold/Award.ts"),
				s = n("./src/reddit/selectors/telemetry.ts"),
				r = n("./src/reddit/helpers/correlationIdTracker.ts"),
				i = n("./src/reddit/helpers/trackers/gild.ts");
			const a = e => ({
					...s.q(e),
					screen: s.eb(e),
					subreddit: s.nb(e),
					userSubreddit: s.wb(e)
				}),
				c = e => ({
					awardId: e.id,
					awardName: e.name,
					isModAward: e.awardType === o.e.Moderator,
					isTemporatyAward: !!e.endsAt,
					numberCoins: e.coinPrice,
					numberMonths: Math.floor((e.daysOfPremium || 0) / 30),
					numberCoinsToRecipient: e.coinReward || 0,
					numberCoinsToCommunity: e.subredditCoinReward || 0,
					type: Object(i.getAwardTypeFromAward)(e)
				}),
				l = () => e => ({
					...a(e),
					source: "awards",
					action: "click",
					correlationId: Object(r.c)(r.a.AwardCreationFlow),
					noun: "create"
				}),
				d = e => t => ({
					...a(t),
					source: "awards",
					action: "click",
					correlationId: Object(r.c)(r.a.AwardDeletionFlow),
					noun: "delete",
					goldPurchase: e ? c(e) : null,
					media: e ? {
						url: e.icon.url
					} : null
				}),
				u = (e, t, n) => o => ({
					...a(o),
					source: "create_award",
					action: e,
					correlationId: Object(r.c)(r.a.AwardCreationFlow),
					noun: t,
					goldPurchase: n
				}),
				p = (e, t, n, o) => s => ({
					...a(s),
					source: "create_award",
					action: "upload",
					correlationId: Object(r.c)(r.a.AwardCreationFlow),
					noun: "image",
					actionInfo: o ? {
						reason: o
					} : {
						success: !0
					},
					media: t ? {
						fileName: t.file.name,
						height: t.height,
						id: t.id,
						mimetype: t.file.type,
						size: t.file.size,
						type: "image",
						uploadDuration: n,
						url: e,
						width: t.width
					} : null
				}),
				m = (e, t, n) => o => ({
					...a(o),
					source: "create_award",
					action: "click",
					correlationId: Object(r.c)(r.a.AwardCreationFlow),
					noun: "create",
					media: t && e ? {
						fileName: t.file.name,
						height: t.height,
						id: t.id,
						mimetype: t.file.type,
						size: t.file.size,
						type: "image",
						url: e,
						width: t.width
					} : null,
					goldPurchase: n ? c(n) : null
				}),
				h = (e, t, n) => o => ({
					...a(o),
					source: "create_award",
					action: e,
					correlationId: Object(r.c)(r.a.AwardCreationFlow),
					noun: t,
					goldPurchase: n ? c(n) : null
				}),
				b = (e, t, n) => o => ({
					...a(o),
					source: "awards",
					action: "click",
					noun: n,
					goldPurchase: c(e),
					profile: s.W(o, t),
					subreddit: s.ob(o, t)
				}),
				f = (e, t) => b(e, t, "disable_in_community"),
				g = (e, t) => b(e, t, "enable_in_community")
		},
		"./src/reddit/helpers/trackers/gild.ts": function(e, t, n) {
			"use strict";
			n.r(t), n.d(t, "getAwardTypeFromAward", (function() {
				return u
			})), n.d(t, "clickGildEvent", (function() {
				return h
			})), n.d(t, "clickAddAward", (function() {
				return b
			})), n.d(t, "clickHideAward", (function() {
				return f
			})), n.d(t, "clickConfirmHideAward", (function() {
				return g
			})), n.d(t, "clickCancelHideAward", (function() {
				return v
			})), n.d(t, "clickAwardReportFlow", (function() {
				return C
			})), n.d(t, "clickCancelAwardReportFlow", (function() {
				return E
			})), n.d(t, "clickFlagAwardUsage", (function() {
				return y
			})), n.d(t, "clickCancelFlagAwardUsage", (function() {
				return O
			})), n.d(t, "clickConfirmFlagAwardUsage", (function() {
				return k
			})), n.d(t, "clickReportAward", (function() {
				return _
			})), n.d(t, "clickCancelReportAward", (function() {
				return j
			})), n.d(t, "clickConfirmReportAward", (function() {
				return S
			})), n.d(t, "viewGildModalEvent", (function() {
				return T
			})), n.d(t, "clickSelectAwardEvent", (function() {
				return w
			})), n.d(t, "triggerAnonymousEvent", (function() {
				return I
			})), n.d(t, "clickMessageInputEvent", (function() {
				return P
			})), n.d(t, "typeMessageInputEvent", (function() {
				return M
			})), n.d(t, "clickLearnMoreLinkEvent", (function() {
				return R
			})), n.d(t, "clickQuestionMarkEvent", (function() {
				return N
			})), n.d(t, "clickConfirmAwardEvent", (function() {
				return D
			})), n.d(t, "clickGetPremiumEvent", (function() {
				return L
			})), n.d(t, "clickAddCoinsButtonEvent", (function() {
				return A
			})), n.d(t, "clickNextButtonEvent", (function() {
				return B
			})), n.d(t, "clickCloseGildModalEvent", (function() {
				return F
			})), n.d(t, "viewKarmaSuccessEvent", (function() {
				return U
			})), n.d(t, "clickFilterEvent", (function() {
				return K
			})), n.d(t, "clickNextFiltersEvent", (function() {
				return W
			})), n.d(t, "clickPreviousFiltersEvent", (function() {
				return H
			}));
			var o = n("./src/reddit/helpers/trackers/commentsChat.ts"),
				s = n("./src/reddit/models/Gold/Award.ts"),
				r = n("./src/reddit/selectors/commentSelector.ts"),
				i = n("./src/reddit/selectors/telemetry.ts"),
				a = n("./src/telemetry/models/GoldPurchase.ts"),
				c = n("./src/reddit/helpers/correlationIdTracker.ts"),
				l = n("./src/reddit/helpers/isComment.ts"),
				d = n("./src/reddit/selectors/gild.ts");
			const u = e => e.awardType === s.e.Global && e.awardSubType === s.d.Appreciation ? a.GoldPurchaseType.GidAppreciation : e.awardType === s.e.Global && e.awardSubType === s.d.Premium ? a.GoldPurchaseType.GidPremium : e.awardSubType === s.d.Group ? a.GoldPurchaseType.GidGroup : e.awardType === s.e.Community ? a.GoldPurchaseType.GidCommunity : e.awardType === s.e.Moderator ? a.GoldPurchaseType.GidMod : e.awardType === s.e.Global && e.awardSubType === s.d.Global ? a.GoldPurchaseType.GidGlobal : a.GoldPurchaseType.GidUnknown,
				p = (e, t) => ({
					awardId: e.id,
					awardName: e.name,
					isTemporaryAward: !!e.endsAt,
					numberCoinsToRecipient: e.coinReward,
					type: u(e),
					...t
				}),
				m = (e, t, n) => {
					const s = t && Object(r.g)(e, {
						commentId: t
					});
					return {
						...i.q(e),
						actionInfo: i.d(e, {
							reason: s ? "live_post" : void 0,
							...n
						}),
						comment: t ? i.j({
							state: e,
							commentId: t
						}) : void 0,
						correlationId: Object(d.b)(e) || Object(c.d)(c.a.GildingFlow, !1),
						post: t ? i.M(e, t) : void 0,
						screen: i.eb(e),
						subreddit: i.nb(e),
						userSubreddit: i.wb(e),
						listing: t ? Object(o.k)(e, t) : void 0
					}
				},
				h = (e, t) => n => ({
					...m(n, e, t),
					source: Object(l.a)(e) ? "comment" : "post",
					action: "click",
					noun: "give_gold",
					feed: i.t(n)
				}),
				b = e => t => ({
					...m(t, e),
					source: Object(l.a)(e) ? "comment" : "post",
					action: "click",
					noun: "add_award",
					feed: i.t(t)
				}),
				f = (e, t) => n => ({
					...m(n, t),
					source: Object(l.a)(t) ? "comment" : "post",
					action: "click",
					noun: "hide_award",
					goldPurchase: p(e)
				}),
				g = (e, t) => n => ({
					...m(n, t),
					source: Object(l.a)(t) ? "comment" : "post",
					action: "click",
					noun: "confirm_hide_award",
					goldPurchase: p(e)
				}),
				v = (e, t) => n => ({
					...m(n, t),
					source: Object(l.a)(t) ? "comment" : "post",
					action: "click",
					noun: "cancel_hide_award",
					goldPurchase: p(e)
				}),
				x = e => (t, n) => o => ({
					...m(o, n),
					source: Object(l.a)(n) ? "comment" : "post",
					action: "click",
					noun: e,
					goldPurchase: p(t)
				}),
				C = x("award_hovercard_report"),
				E = x("cancel_award_hovercard_report"),
				y = x("flag_award"),
				O = x("cancel_flag_award"),
				k = x("confirm_flag_award"),
				_ = x("report_community_award"),
				j = x("cancel_report_community_award"),
				S = x("confirm_report_community_award"),
				T = (e, t, n) => o => ({
					...m(o, n),
					source: "give_gold",
					action: "view",
					noun: "page",
					goldPurchase: {
						defaultOption: e,
						defaultAnonymous: t
					}
				}),
				w = (e, t, n) => o => ({
					...m(o, t),
					source: "give_gold",
					action: "click",
					noun: "award",
					goldPurchase: p(e, n)
				}),
				I = (e, t) => n => ({
					...m(n, t),
					source: "give_gold",
					action: e,
					noun: "anonymous"
				}),
				P = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "click",
					noun: "message_input"
				}),
				M = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "type",
					noun: "message_input"
				}),
				R = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "click",
					noun: "learn_more"
				}),
				N = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "click",
					noun: "question"
				}),
				D = (e, t) => n => ({
					...m(n, e),
					source: "give_gold",
					action: "click",
					noun: "confirm",
					goldPurchase: {
						contentType: Object(l.a)(e) ? "comment" : "post",
						...p(t)
					}
				}),
				L = (e, t) => n => ({
					...m(n, e),
					source: "give_gold",
					action: "click",
					noun: "get_premium",
					goldPurchase: {
						contentType: Object(l.a)(e) ? "comment" : "post",
						...p(t)
					}
				}),
				A = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "click",
					noun: "add_coins"
				}),
				B = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "click",
					noun: "next"
				}),
				F = e => t => ({
					...m(t, e),
					source: "give_gold",
					action: "click",
					noun: "close"
				}),
				U = e => {
					let {
						award: t,
						awardeeKarmaEarned: n,
						awarderKarmaEarned: o,
						numberCoins: s,
						thingId: r
					} = e;
					return e => ({
						...m(e, r),
						source: "give_gold",
						action: "view",
						noun: "karma_success",
						goldPurchase: {
							contentType: Object(l.a)(r) ? "comment" : "post",
							awardeeKarmaEarned: n,
							awarderKarmaEarned: o,
							numberCoins: s,
							...p(t)
						}
					})
				},
				K = e => t => ({
					...m(t),
					source: "give_gold",
					action: "click",
					noun: "filter",
					goldPurchase: {
						filterId: e.tag,
						filterName: e.content.markdown
					}
				}),
				W = () => e => ({
					...m(e),
					source: "give_gold",
					action: "click",
					noun: "next_filters"
				}),
				H = () => e => ({
					...m(e),
					source: "give_gold",
					action: "click",
					noun: "previous_filters"
				})
		},
		"./src/reddit/helpers/trackers/goldPayment.ts": function(e, t, n) {
			"use strict";
			n.d(t, "h", (function() {
				return b
			})), n.d(t, "b", (function() {
				return f
			})), n.d(t, "f", (function() {
				return g
			})), n.d(t, "d", (function() {
				return v
			})), n.d(t, "e", (function() {
				return x
			})), n.d(t, "c", (function() {
				return C
			})), n.d(t, "a", (function() {
				return E
			})), n.d(t, "g", (function() {
				return y
			})), n.d(t, "i", (function() {
				return O
			})), n.d(t, "j", (function() {
				return k
			}));
			var o = n("./src/lib/constants/index.ts"),
				s = n("./src/reddit/models/Gold/ProductOffer.ts"),
				r = n("./src/reddit/selectors/gold/giveAwards.ts"),
				i = n("./src/reddit/selectors/gold/purchaseCatalog.ts"),
				a = n("./src/reddit/selectors/goldPurchaseModals.ts"),
				c = n("./src/reddit/selectors/telemetry.ts"),
				l = n("./src/telemetry/models/GoldPurchase.ts"),
				d = n("./src/telemetry/models/Payment.ts"),
				u = n("./src/reddit/helpers/trackers/gild.ts"),
				p = n("./src/reddit/helpers/correlationIdTracker.ts"),
				m = n("./src/reddit/helpers/isComment.ts"),
				h = n("./src/reddit/helpers/trackers/communityAwards.ts");
			const b = (e, t) => {
					const {
						thingId: n,
						packageId: d
					} = t, b = !!n, f = r.b(e), g = f ? Object(u.getAwardTypeFromAward)(f) : null, v = b ? g : a.p(e) ? l.GoldPurchaseType.Premium : l.GoldPurchaseType.Coins, x = n ? Object(m.a)(n) ? "comment" : "post" : void 0, C = d || a.u(e), E = [...Object(i.d)(e), ...Object(i.e)(e)].filter(e => e.mobileId === C)[0], y = t.offerContext || (f && 0 === f.coinPrice ? s.a.StorefrontFreeAward : Object(s.d)(E, b)), O = E ? Math.round(1e4 * (E.baselinePennies - E.pennies) / E.baselinePennies) / 100 : 0, k = E ? Math.round(1e4 * (E.coins - E.baselineCoins) / E.coins) / 100 : 0, _ = E ? E.baselinePennies !== E.pennies ? `${O}_percent_price` : E.baselineCoins !== E.coins ? `${k}_percent_bonus` : void 0 : void 0, j = v === l.GoldPurchaseType.Premium ? o.Db : E ? E.pennies : void 0;
					return {
						...c.q(e),
						comment: n ? c.j({
							state: e,
							commentId: n
						}) : null,
						correlationId: a.s(e) || Object(p.d)(p.a.GoldPayment, !1),
						post: n ? c.M(e, n) : null,
						screen: c.eb(e),
						subreddit: n ? c.nb(e) : null,
						goldPurchase: {
							...f ? Object(h.a)(f) : null,
							type: v,
							gildedContent: b,
							contentType: x,
							numberCoins: E ? E.coins : void 0,
							offerContext: y,
							offerType: _
						},
						payment: {
							currency: "USD",
							amountInSmallestDenom: j
						},
						purchase: {
							priceMicros: j
						}
					}
				},
				f = (e, t, n) => o => ({
					...b(o, {
						packageId: t,
						thingId: e,
						offerContext: n
					}),
					source: "gold_payment",
					action: "click",
					noun: "close"
				}),
				g = e => t => ({
					...b(t, {
						thingId: e
					}),
					source: "gold_payment",
					action: "click",
					noun: "paypal"
				}),
				v = e => t => ({
					...b(t, {
						thingId: e
					}),
					source: "gold_payment",
					action: "click",
					noun: "continue_paypal"
				}),
				x = e => t => ({
					...b(t, {
						thingId: e
					}),
					source: "gold_payment",
					action: "click",
					noun: "credit_card"
				}),
				C = e => t => ({
					...b(t, {
						thingId: e
					}),
					source: "gold_payment",
					action: "click",
					noun: "complete_credit_card"
				}),
				E = (e, t) => n => ({
					...b(n, {
						packageId: e,
						offerContext: t
					}),
					source: "gold_payment",
					action: "click",
					noun: "confirm"
				}),
				y = e => t => ({
					...b(t, {
						thingId: e
					}),
					source: "gold_payment",
					action: "display",
					noun: "error"
				}),
				O = (e, t, n) => o => {
					const s = b(o, {
						packageId: t,
						thingId: e,
						offerContext: n
					});
					return {
						...s,
						source: "gold_payment",
						action: "view",
						noun: "page",
						payment: {
							...s.payment,
							defaultOption: d.PaymentMethod.Paypal
						},
						goldPurchase: {
							...s.goldPurchase,
							source: e ? l.GiveGold : a.p(o) ? l.PremiumMarketing : l.CoinsMarketing
						}
					}
				},
				k = e => t => {
					var n;
					const o = b(t, {
						thingId: e
					});
					return {
						...o,
						source: "gold_payment",
						action: "view",
						noun: "success",
						payment: {
							...o.payment,
							method: (null === (n = t.platform.currentPage) || void 0 === n ? void 0 : n.queryParams.thanks) ? d.PaymentMethod.Paypal : d.PaymentMethod.CreditCard
						}
					}
				}
		},
		"./src/reddit/helpers/trackers/modTools.ts": function(e, t, n) {
			"use strict";
			n.d(t, "m", (function() {
				return i
			})), n.d(t, "n", (function() {
				return a
			})), n.d(t, "c", (function() {
				return c
			})), n.d(t, "b", (function() {
				return l
			})), n.d(t, "h", (function() {
				return d
			})), n.d(t, "f", (function() {
				return u
			})), n.d(t, "d", (function() {
				return p
			})), n.d(t, "e", (function() {
				return m
			})), n.d(t, "g", (function() {
				return h
			})), n.d(t, "q", (function() {
				return b
			})), n.d(t, "l", (function() {
				return f
			})), n.d(t, "k", (function() {
				return g
			})), n.d(t, "r", (function() {
				return v
			})), n.d(t, "i", (function() {
				return x
			})), n.d(t, "j", (function() {
				return C
			})), n.d(t, "a", (function() {
				return E
			})), n.d(t, "o", (function() {
				return y
			})), n.d(t, "p", (function() {
				return O
			}));
			var o = n("./src/reddit/constants/tracking.ts"),
				s = n("./src/reddit/selectors/telemetry.ts");
			const r = e => ({
					screen: Object(s.eb)(e),
					profile: Object(s.V)(e),
					subreddit: Object(s.nb)(e),
					userSubreddit: Object(s.wb)(e)
				}),
				i = e => t => ({
					source: "nav",
					action: "click",
					noun: e ? "mod_mode_on" : "mod_mode_off",
					...r(t)
				}),
				a = (e, t) => n => ({
					source: "post_mod_action_menu",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					...r(n)
				}),
				c = (e, t) => n => ({
					source: "comment",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					media: {
						mimetype: Object(s.l)(n, t)
					},
					...r(n)
				}),
				l = (e, t) => n => ({
					source: "comment",
					action: o.c.CLICK,
					noun: e,
					post: Object(s.M)(n, t),
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					actionInfo: {
						pageType: "chat_live_post"
					},
					...r(n)
				}),
				d = (e, t) => n => ({
					source: "comment",
					action: o.c.UNDO,
					noun: e,
					post: Object(s.M)(n, t),
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					...r(n)
				}),
				u = (e, t) => n => ({
					source: "comment_overflow_menu",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					...r(n)
				}),
				p = (e, t) => n => ({
					source: "mod_distinguish_menu",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					...r(n)
				}),
				m = (e, t) => n => ({
					source: "comment_mod_action_menu",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					...r(n)
				}),
				h = (e, t) => n => ({
					source: "comment_report_menu",
					action: "click",
					noun: e,
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					post: Object(s.M)(n, t),
					...r(n)
				}),
				b = (e, t) => n => ({
					source: "post_report_menu",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					...r(n)
				}),
				f = (e, t) => n => ({
					source: "post",
					action: "click",
					noun: e,
					post: Object(s.M)(n, t),
					subreddit: Object(s.qb)(n, t)
				}),
				g = (e, t) => n => ({
					source: "comment",
					action: "click",
					noun: e,
					comment: Object(s.j)({
						state: n,
						commentId: t
					}),
					post: Object(s.M)(n, t),
					subreddit: Object(s.qb)(n, t)
				}),
				v = (e, t, n, o) => r => ({
					source: e ? "comment" : "post",
					action: "click",
					noun: t ? "unsnooze_reporter" : "snooze_reporter",
					post: Object(s.M)(r, n),
					subreddit: Object(s.qb)(r, n),
					actionInfo: {
						reason: o
					},
					...e && {
						comment: Object(s.j)({
							state: r,
							commentId: n
						})
					}
				}),
				x = () => e => ({
					...r(e),
					source: "modqueue",
					noun: "content_type_live_post",
					action: "view",
					actionInfo: {
						pageType: "chat_live_post"
					}
				}),
				C = (e, t, n) => o => ({
					...r(o),
					source: "moderator",
					noun: "action",
					action: "click",
					actionInfo: {
						pageType: "mod_queue",
						paneName: n,
						reason: t
					},
					comment: Object(s.j)({
						state: o,
						commentId: e
					}) || void 0,
					post: Object(s.M)(o, e)
				}),
				E = (e, t) => n => ({
					...r(n),
					source: "moderator",
					noun: "add_note_mod_queue",
					action: "click",
					comment: Object(s.j)({
						state: n,
						commentId: e
					}) || void 0,
					post: Object(s.M)(n, e),
					modAction: {
						targetUserId: t
					}
				}),
				y = (e, t, n, o) => i => ({
					source: "post_mod_action_menu",
					action: "click",
					post: Object(s.M)(i, t),
					noun: e,
					setting: {
						value: n,
						oldValue: o
					},
					...r(i)
				}),
				O = (e, t, n, o) => i => ({
					source: "post_mod_action_menu",
					action: "save",
					post: Object(s.M)(i, t),
					noun: e,
					setting: {
						value: n,
						oldValue: o
					},
					...r(i)
				})
		},
		"./src/reddit/helpers/trackers/navigation.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return r
			})), n.d(t, "d", (function() {
				return i
			})), n.d(t, "b", (function() {
				return a
			})), n.d(t, "e", (function() {
				return c
			})), n.d(t, "a", (function() {
				return l
			}));
			n("./src/reddit/constants/categories.tsx");
			var o = n("./src/reddit/selectors/telemetry.ts");
			const s = e => ({
					screen: o.eb(e),
					profile: o.V(e),
					subreddit: o.nb(e)
				}),
				r = e => t => ({
					action: "click",
					source: "nav",
					noun: e,
					...s(t)
				}),
				i = (e, t) => n => ({
					action: "click",
					source: "nav",
					noun: e,
					...s(n),
					topicMetadata: {
						displayName: t
					}
				}),
				a = e => t => ({
					...s(t),
					source: "sort_switch",
					action: "click",
					noun: e
				}),
				c = e => t => ({
					...s(t),
					source: "time_sort_switch",
					action: "click",
					noun: e
				}),
				l = e => t => ({
					...s(t),
					source: "nav",
					action: "click",
					noun: `lang_${e}`
				})
		},
		"./src/reddit/helpers/trackers/postCollection.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "h", (function() {
				return l
			})), n.d(t, "g", (function() {
				return d
			})), n.d(t, "o", (function() {
				return u
			})), n.d(t, "f", (function() {
				return m
			})), n.d(t, "e", (function() {
				return h
			})), n.d(t, "n", (function() {
				return b
			})), n.d(t, "m", (function() {
				return f
			})), n.d(t, "b", (function() {
				return v
			})), n.d(t, "p", (function() {
				return x
			})), n.d(t, "c", (function() {
				return C
			})), n.d(t, "j", (function() {
				return E
			})), n.d(t, "q", (function() {
				return y
			})), n.d(t, "k", (function() {
				return O
			})), n.d(t, "l", (function() {
				return k
			})), n.d(t, "i", (function() {
				return _
			})), n.d(t, "d", (function() {
				return j
			}));
			var o, s, r = n("./src/reddit/constants/tracking.ts"),
				i = n("./src/reddit/helpers/trackers/postEvent.ts"),
				a = n("./src/reddit/selectors/platform.ts"),
				c = n("./src/reddit/selectors/telemetry.ts");
			! function(e) {
				e.collection = "collection", e.collectionComposer = "collection_composer", e.postComposer = "post_composer", e.postOverflowMenu = "post_overflow_menu"
			}(o || (o = {})),
			function(e) {
				e.post = "post", e.follow = "follow", e.unfollow = "unfollow", e.screen = "screen", e.eventEducation = "event_education", e.eventEducationGotIt = "event_education_got_it", e.collectionEducation = "collection_education", e.collectionEducationGotIt = "collection_education_got_it", e.collectionCancel = "cancel", e.collectionCreate = "collection_create", e.collectionSelect = "collection_select", e.collectionDelete = "collection_delete", e.collectionEdit = "collection_edit", e.collectionAddPost = "collection_add_post", e.collectionRemovePost = "remove_post_from_collection", e.startEvent = "start_event"
			}(s || (s = {}));
			const l = e => t => ({
					source: o.collection,
					noun: s.post,
					...p(t, e)
				}),
				d = e => {
					let {
						postId: t,
						isFollowed: n
					} = e;
					return e => ({
						source: o.collection,
						noun: n ? s.unfollow : s.follow,
						...p(e, t)
					})
				},
				u = e => {
					let {
						postId: t,
						isFollowed: n
					} = e;
					return e => ({
						source: i.a.postEvent,
						noun: n ? s.unfollow : s.follow,
						...p(e, t)
					})
				},
				p = (e, t) => {
					const n = {
						...c.q(e),
						action: r.c.CLICK,
						subreddit: c.nb(e)
					};
					return void 0 === t ? n : {
						...n,
						post: c.M(e, t),
						postCollection: c.O(e, {
							postId: t
						}),
						postEvent: c.P(e, {
							postId: t
						})
					}
				},
				m = e => ({
					...g(e),
					action: r.c.VIEW,
					noun: s.collectionEducation
				}),
				h = e => ({
					...g(e),
					action: r.c.CLICK,
					noun: s.collectionEducationGotIt
				}),
				b = e => ({
					...g(e),
					action: r.c.VIEW,
					noun: s.eventEducation
				}),
				f = e => ({
					...g(e),
					action: r.c.CLICK,
					noun: s.eventEducationGotIt
				}),
				g = e => ({
					...c.q(e),
					subreddit: c.nb(e),
					source: o.postComposer
				}),
				v = (e, t) => n => ({
					...p(n, e),
					source: t || o.postOverflowMenu,
					noun: s.collectionAddPost
				}),
				x = e => t => ({
					...p(t, e),
					source: o.collectionComposer,
					noun: s.collectionRemovePost
				}),
				C = () => e => ({
					...p(e),
					source: o.collectionComposer,
					noun: s.collectionCancel
				}),
				E = () => e => {
					const t = Object(a.o)(e) || void 0;
					return {
						...p(e, t),
						source: o.collectionComposer,
						noun: s.collectionCreate
					}
				},
				y = () => e => ({
					...p(e),
					source: o.collectionComposer,
					noun: s.collectionSelect
				}),
				O = e => t => ({
					...c.q(t),
					subreddit: c.nb(t),
					source: o.collectionComposer,
					action: r.c.CLICK,
					noun: s.collectionDelete,
					postCollection: c.N(t, {
						collectionId: e
					})
				}),
				k = e => t => ({
					...p(t),
					source: o.collectionComposer,
					noun: s.collectionEdit,
					postCollection: c.N(t, {
						collectionId: e
					})
				}),
				_ = e => t => ({
					...p(t, e),
					source: o.collectionComposer,
					noun: s.startEvent
				}),
				j = () => e => {
					const t = Object(a.o)(e) || void 0;
					return {
						...p(e, t),
						source: o.collectionComposer,
						action: r.c.VIEW,
						noun: s.screen
					}
				}
		},
		"./src/reddit/helpers/trackers/postEvent.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "f", (function() {
				return h
			})), n.d(t, "g", (function() {
				return b
			})), n.d(t, "e", (function() {
				return f
			})), n.d(t, "b", (function() {
				return g
			})), n.d(t, "c", (function() {
				return v
			})), n.d(t, "d", (function() {
				return x
			}));
			var o, s = n("./src/lib/constants/index.ts"),
				r = n("./src/lib/eventTools/index.ts"),
				i = n("./src/lib/timezone/index.ts"),
				a = n("./src/reddit/constants/tracking.ts"),
				c = n("./src/reddit/models/PostCreationForm/index.ts"),
				l = n("./src/reddit/selectors/platform.ts"),
				d = n("./src/reddit/selectors/postCreations.ts"),
				u = n("./src/reddit/selectors/telemetry.ts"),
				p = n("./src/telemetry/index.ts");
			! function(e) {
				e.postEvent = "post_event", e.postComposer = "post_composer", e.eventComposer = "event_composer"
			}(o || (o = {}));
			const m = e => u.d(e, {
					pageType: "event_submit"
				}),
				h = e => {
					Object(p.a)({
						...u.q(e),
						source: o.postComposer,
						action: a.c.CLICK,
						noun: "event_create",
						subreddit: u.nb(e)
					})
				},
				b = e => {
					Object(p.a)({
						...u.q(e),
						source: o.postComposer,
						action: a.c.CLICK,
						noun: "event_edit",
						subreddit: u.nb(e),
						postEvent: C(e),
						postComposer: E(e)
					})
				},
				f = () => e => ({
					source: o.eventComposer,
					action: a.c.VIEW,
					noun: a.b.SCREEN,
					actionInfo: m(e),
					postEvent: C(e)
				}),
				g = e => t => ({
					...k(t, Object(l.o)(t)),
					source: o.postComposer,
					noun: "apply",
					postComposer: y(e)
				}),
				v = () => e => ({
					...k(e, Object(l.o)(e)),
					noun: "cancel",
					actionInfo: m(e)
				}),
				x = e => t => ({
					...k(t, Object(l.o)(t)),
					noun: "delete",
					actionInfo: m(t),
					postComposer: E(t),
					postEvent: O(e)
				}),
				C = e => {
					const t = Object(d.p)(e);
					return t && O(t)
				},
				E = e => y(Object(d.p)(e)),
				y = e => {
					return {
						postScheduled: !!e,
						submitScheduledTime: e && e.submitTime === c.j.AtEventTime ? Object(i.f)(e.startDate).getTime() / s.Wb : void 0
					}
				},
				O = e => {
					const t = Object(i.f)(e.startDate).getTime() / s.Wb,
						n = Object(i.f)(e.endDate).getTime() / s.Wb;
					return {
						eventStartTimestamp: t,
						eventEndTimestamp: n,
						eventState: Object(r.e)(t, n)
					}
				},
				k = (e, t) => {
					const n = {
						source: o.eventComposer,
						action: a.c.CLICK,
						subreddit: u.nb(e)
					};
					return t ? {
						...n,
						post: u.M(e, t),
						postEvent: u.P(e, {
							postId: t
						}),
						postCollection: u.O(e, {
							postId: t
						})
					} : n
				}
		},
		"./src/reddit/helpers/trackers/predictions.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return i
			})), n.d(t, "p", (function() {
				return a
			})), n.d(t, "m", (function() {
				return c
			})), n.d(t, "n", (function() {
				return l
			})), n.d(t, "l", (function() {
				return d
			})), n.d(t, "b", (function() {
				return u
			})), n.d(t, "f", (function() {
				return p
			})), n.d(t, "k", (function() {
				return m
			})), n.d(t, "q", (function() {
				return h
			})), n.d(t, "e", (function() {
				return b
			})), n.d(t, "i", (function() {
				return f
			})), n.d(t, "d", (function() {
				return g
			})), n.d(t, "g", (function() {
				return v
			})), n.d(t, "c", (function() {
				return x
			})), n.d(t, "j", (function() {
				return C
			})), n.d(t, "h", (function() {
				return E
			})), n.d(t, "o", (function() {
				return y
			}));
			var o = n("./src/reddit/models/Prediction/index.ts"),
				s = n("./src/reddit/selectors/telemetry.ts");
			const r = "poll",
				i = "predictions",
				a = e => ({
					...Object(s.q)(e),
					source: r,
					action: "view",
					noun: "predict_option_modal"
				}),
				c = e => {
					let {
						pollId: t,
						selectedNumberCoins: n,
						totalStakeAmount: o
					} = e;
					return e => ({
						...Object(s.q)(e),
						source: r,
						action: "confirm",
						noun: "predict",
						poll: Object(s.L)(e, t, !1, void 0, n),
						goldPurchase: {
							numberCoins: o
						}
					})
				},
				l = e => {
					let {
						pollId: t,
						selectedNumberTokens: n
					} = e;
					return e => ({
						...Object(s.q)(e),
						source: r,
						action: "confirm",
						noun: "predict",
						poll: Object(s.L)(e, t, !1, void 0, void 0, n)
					})
				},
				d = e => {
					let {
						pollId: t,
						currency: n,
						amount: i
					} = e;
					return e => {
						const a = n === o.a.Coins ? i : void 0,
							c = n === o.a.Tokens ? i : void 0;
						return {
							...Object(s.q)(e),
							source: r,
							action: "close",
							noun: "prediction_modal",
							poll: Object(s.L)(e, t, !1, a, c)
						}
					}
				},
				u = e => ({
					...Object(s.q)(e),
					source: r,
					action: "click",
					noun: "add_coins"
				}),
				p = e => {
					let {
						targetUserId: t
					} = e;
					return e => ({
						...Object(s.q)(e),
						source: i,
						action: "click",
						noun: "leaderboard_profile",
						targetUser: {
							id: t
						}
					})
				},
				m = e => {
					let {
						pageType: t
					} = e;
					return e => ({
						...Object(s.q)(e),
						source: i,
						action: "click",
						noun: "tournament",
						actionInfo: {
							pageType: t
						}
					})
				},
				h = () => e => ({
					...Object(s.q)(e),
					source: "global",
					action: "view",
					noun: "screen",
					actionInfo: {
						pageType: "mod_tool_predict"
					}
				}),
				b = () => e => ({
					...Object(s.q)(e),
					source: "mod_tool_predict",
					action: "click",
					noun: "end_tournament"
				}),
				f = () => e => ({
					...Object(s.q)(e),
					source: "mod_tool_predict",
					action: "click",
					noun: "rename_tournament"
				}),
				g = e => t => ({
					...Object(s.q)(t),
					source: "mod_tool_predict",
					action: "click",
					noun: "enable_predictions",
					actionInfo: {
						pageType: "predictions_picker"
					},
					setting: {
						value: e ? "1" : "0",
						oldValue: e ? "0" : "1"
					},
					subreddit: Object(s.nb)(t)
				}),
				v = () => e => ({
					...Object(s.q)(e),
					source: i,
					action: "click",
					noun: "next"
				}),
				x = () => e => ({
					...Object(s.q)(e),
					source: i,
					action: "click",
					noun: "add_more"
				}),
				C = () => e => ({
					...Object(s.q)(e),
					source: i,
					action: "click",
					noun: "start_tournament"
				}),
				E = () => e => ({
					...Object(s.q)(e),
					source: "menu_links_bar",
					action: "click",
					noun: "predictions_tab"
				}),
				y = () => e => ({
					...Object(s.q)(e),
					source: "predictions_tab",
					action: "view",
					noun: "predictions_how_it_works",
					subreddit: Object(s.nb)(e)
				})
		},
		"./src/reddit/helpers/trackers/privateCommunity.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			}));
			var o = n("./src/reddit/selectors/telemetry.ts");
			const s = e => t => ({
					...o.q(t),
					source: e,
					action: "click",
					noun: "request_to_join_button",
					subreddit: o.nb(t)
				}),
				r = e => t => ({
					...o.q(t),
					source: e,
					action: "click",
					noun: "request_to_join_submit",
					subreddit: o.nb(t)
				})
		},
		"./src/reddit/helpers/trackers/restrictedCommunity.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			}));
			var o = n("./src/reddit/selectors/telemetry.ts");
			const s = e => t => ({
					...o.q(t),
					source: e,
					action: "click",
					noun: "request_restricted_approval_button",
					subreddit: o.nb(t)
				}),
				r = e => t => ({
					...o.q(t),
					source: "request_restricted_approval_form",
					action: "click",
					noun: e,
					subreddit: o.nb(t)
				})
		},
		"./src/reddit/helpers/trackers/snoovatar.ts": function(e, t, n) {
			"use strict";
			n.d(t, "g", (function() {
				return l
			})), n.d(t, "h", (function() {
				return d
			})), n.d(t, "i", (function() {
				return u
			})), n.d(t, "s", (function() {
				return p
			})), n.d(t, "l", (function() {
				return m
			})), n.d(t, "o", (function() {
				return h
			})), n.d(t, "c", (function() {
				return b
			})), n.d(t, "f", (function() {
				return f
			})), n.d(t, "r", (function() {
				return v
			})), n.d(t, "e", (function() {
				return x
			})), n.d(t, "k", (function() {
				return C
			})), n.d(t, "n", (function() {
				return y
			})), n.d(t, "j", (function() {
				return O
			})), n.d(t, "b", (function() {
				return k
			})), n.d(t, "q", (function() {
				return j
			})), n.d(t, "d", (function() {
				return S
			})), n.d(t, "a", (function() {
				return w
			})), n.d(t, "p", (function() {
				return I
			})), n.d(t, "m", (function() {
				return P
			}));
			var o = n("./src/reddit/models/Gold/ProductOffer.ts"),
				s = n("./src/reddit/selectors/avatarMarketing.ts"),
				r = n("./src/reddit/selectors/telemetry.ts"),
				i = n("./src/reddit/selectors/user.ts"),
				a = n("./src/reddit/helpers/userSnoovatar/index.ts");
			const c = {
					goldPurchase: {
						offerContext: o.a.AvatarNewGear
					}
				},
				l = e => t => {
					const n = {
						source: e,
						action: "click",
						noun: "edit_snoovatar",
						...r.q(t)
					};
					return Object(s.a)(t) && Object.assign(n, c), n
				},
				d = (e, t) => n => {
					const {
						id: o
					} = Object(i.Db)(n, {
						userName: t
					});
					return {
						source: e,
						action: "click",
						noun: "copy_avatar",
						...r.q(n),
						snoovatar: {
							userGenerated: o
						}
					}
				},
				u = e => ({
					...r.q(e),
					source: "avatar",
					action: "click",
					noun: "try_this_look_post",
					snoovatar: r.lb(e)
				}),
				p = e => ({
					...r.q(e, {
						isGVSEvent: !0
					}),
					source: "global",
					action: "view",
					noun: "screen",
					actionInfo: {
						pageType: "snoovatar_builder"
					},
					snoovatar: r.lb(e)
				}),
				m = e => ({
					...r.q(e),
					source: "avatar_builder",
					action: "click",
					noun: "close",
					snoovatar: r.lb(e)
				}),
				h = e => ({
					source: "nav",
					action: "view",
					noun: "avatar_marketing",
					...r.q(e),
					...c
				}),
				b = e => ({
					source: "nav",
					action: "click",
					noun: "avatar_marketing",
					...r.q(e),
					...c
				}),
				f = e => t => ({
					...r.q(t),
					source: "snoovatar",
					action: "set_to_profile",
					noun: "snoovatar",
					snoovatar: {
						userGeneratedSource: e
					}
				}),
				g = e => t => n => ({
					source: "avatar",
					action: e,
					noun: "community_spaces",
					...r.q(n),
					snoovatar: r.lb(n),
					actionInfo: {
						paneName: "avatar_community_spaces" + (t ? "_control" : "")
					}
				}),
				v = g("view"),
				x = g("click"),
				C = g("dismiss"),
				E = (e, t, n) => () => o => ({
					source: e,
					action: t,
					noun: n,
					...r.q(o),
					snoovatar: r.lb(o)
				}),
				y = E("anniversary_achievement", "view", "anniversary_achievement"),
				O = E("anniversary_achievement", "click", "close"),
				k = E("anniversary_achievement", "click", "equip"),
				_ = e => () => t => ({
					...r.q(t),
					source: "gold_top_nav",
					action: e,
					noun: "quick_create_cta"
				}),
				j = _("view"),
				S = _("click"),
				T = (e, t, n) => o => ({
					source: e,
					action: t,
					noun: n,
					...r.q(o),
					actionInfo: {
						pageType: "onboarding"
					},
					snoovatar: r.lb(o)
				}),
				w = e => T("onboarding", "click", e),
				I = () => T("avatar", "view", "onboarding"),
				P = e => {
					let {
						user: t,
						pageType: n,
						userHasNft: o
					} = e;
					return e => {
						const s = Object(a.a)(t.accountIcon),
							i = (null == t ? void 0 : t.id) && (null == t ? void 0 : t.username);
						return {
							source: "profile",
							action: "screen",
							noun: "load",
							...r.q(e),
							actionInfo: {
								pageType: n
							},
							profile: i ? {
								id: t.id,
								name: t.username
							} : null,
							snoovatar: {
								snoovatarActive: s,
								userHasNft: o
							},
							marketplace: {
								hasCollectibleCollection: !1
							}
						}
					}
				}
		},
		"./src/reddit/helpers/trackers/subredditMuting.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			}));
			var o = n("./src/reddit/selectors/telemetry.ts"),
				s = n("./src/telemetry/models/Event.ts");
			const r = e => {
					let {
						subredditId: t,
						postId: n
					} = e;
					return e => ({
						source: s.e.SubredditMuting,
						action: s.c.Mute,
						noun: s.d.Subreddit,
						subreddit: {
							id: t
						},
						...o.q(e),
						...n && {
							post: {
								id: n
							}
						}
					})
				},
				i = e => {
					let {
						subredditId: t,
						postId: n
					} = e;
					return e => ({
						source: s.e.SubredditMuting,
						action: s.c.Unmute,
						noun: s.d.Subreddit,
						subreddit: {
							id: t
						},
						...o.q(e),
						...n && {
							post: {
								id: n
							}
						}
					})
				}
		},
		"./src/reddit/helpers/trackers/userFlair.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			})), n.d(t, "a", (function() {
				return a
			})), n.d(t, "d", (function() {
				return c
			}));
			var o = n("./src/reddit/helpers/flair.ts"),
				s = n("./src/reddit/selectors/telemetry.ts");
			const r = () => e => ({
					source: "id_card",
					action: "click",
					noun: "user_flair_picker",
					...s.q(e)
				}),
				i = e => t => {
					const n = s.nb(t),
						{
							userFlair: r,
							achievementFlair: i
						} = e;
					return {
						source: "user_flair_picker",
						action: "click",
						noun: "user_flair",
						...s.q(t),
						subreddit: n,
						userFlair: {
							id: null == r ? void 0 : r.id,
							title: r ? Object(o.g)(r) : void 0,
							isActive: !!r || void 0,
							achievementFlairId: null == i ? void 0 : i.type,
							achievementFlairTitle: null == i ? void 0 : i.name,
							isLocked: null == i ? void 0 : i.isLocked
						}
					}
				},
				a = () => e => ({
					source: "user_flair_picker",
					action: "click",
					noun: "edit_user_flair",
					...s.q(e)
				}),
				c = e => t => ({
					source: "user_flair_picker",
					action: "click",
					noun: "enable_powerups_flair",
					setting: {
						value: e ? "0" : "1",
						oldValue: e ? "1" : "0"
					},
					subreddit: s.nb(t),
					...s.q(t)
				})
		},
		"./src/reddit/helpers/trackers/widgets.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return a
			})), n.d(t, "a", (function() {
				return c
			})), n.d(t, "d", (function() {
				return l
			})), n.d(t, "c", (function() {
				return d
			}));
			var o, s, r = n("./src/reddit/constants/tracking.ts"),
				i = n("./src/reddit/selectors/telemetry.ts");
			! function(e) {
				e.REREDDIT_PROMO = "rereddit_promo", e.SEE_MORE = "see_more", e.TOPIC = "topic", e.TOPICS_WIDGET = "topics_widget"
			}(o || (o = {})),
			function(e) {
				e.COMMUNITY_WIDGETS = "community_widgets", e.POST = "post", e.SIDEBAR = "sidebar", e.TOPICS_WIDGET = "topics_widget"
			}(s || (s = {}));
			const a = (e, t) => n => ({
					source: s.COMMUNITY_WIDGETS,
					action: r.c.CLICK,
					noun: o.SEE_MORE,
					widget: Object(i.Ab)(n, {
						subredditId: e,
						widgetKind: t
					}),
					...i.q
				}),
				c = (e, t) => n => ({
					source: s.POST,
					action: r.c.CLICK,
					noun: o.REREDDIT_PROMO,
					post: i.M(n, e),
					subreddit: i.nb(n),
					...t && {
						banner: {
							buttonText: t,
							id: o.REREDDIT_PROMO
						}
					},
					...i.q(n)
				}),
				l = () => e => ({
					source: s.SIDEBAR,
					action: r.c.VIEW,
					noun: o.TOPICS_WIDGET,
					...i.q(e)
				}),
				d = e => t => ({
					source: s.TOPICS_WIDGET,
					action: r.c.CLICK,
					noun: o.TOPIC,
					...i.q(t),
					topicMetadata: {
						displayName: e
					}
				})
		},
		"./src/reddit/hooks/useGqlContext.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./node_modules/react/index.js"),
				s = n("./src/reddit/contexts/ApiContext.tsx");

			function r() {
				const {
					gqlContext: e
				} = Object(o.useContext)(s.a);
				return e
			}
		},
		"./src/reddit/hooks/useInfoTextTooltip.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return a
			}));
			var o = n("./node_modules/icepick/icepick.js"),
				s = n("./node_modules/react/index.js"),
				r = n("./src/lib/hooks/useTooltip.ts");
			const i = Object(o.freeze)({
				name: "offset",
				options: {
					offset: [0, 6]
				}
			});

			function a(e) {
				const t = Object(s.useMemo)(() => {
					const t = Object(r.a)(e);
					return Object(o.updateIn)(t, ["modifiers"], e => Object(o.push)(e, i))
				}, [e]);
				return Object(r.b)(t)
			}
		},
		"./src/reddit/hooks/useIsAvatarPost.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			}));
			var o = n("./node_modules/react-redux/es/index.js");
			const s = ["t2_83axfjo9", "t2_5ybo8iyi", "t2_7yef0w0w", "t2_fvlxukt", "t2_16060o", "t2_364me452", "t2_46dwatoq", "t2_86xzqcqi", "t2_97lsdz5t", "t2_8394tzuq ", "t2_b46ms2wj", "t2_btxoz0zb"],
				r = ["t5_q0gj4", "t5_2rjli"],
				i = new RegExp(/https:\/\/(www\.)?reddit.com\/avatar\/.*\/\d+$/);
			var a = n("./src/reddit/selectors/experiments/econ/index.ts");
			const c = e => Object(o.e)(t => {
				return !!(e => {
					let {
						adminId: t,
						subredditId: n,
						avatarShareUrl: o
					} = e;
					const a = i.test(o.trim()),
						c = s.includes(t),
						l = r.includes(n);
					return a && c && l
				})({
					adminId: e.authorId,
					subredditId: e.belongsTo.id,
					avatarShareUrl: e.source ? e.source.url : ""
				}) && Object(a.a)(t)
			})
		},
		"./src/reddit/hooks/useModalState.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);

			function r() {
				let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				const [t, n] = s.a.useState(e);
				return [t, () => n(!0), () => n(!1)]
			}
		},
		"./src/reddit/icons/fonts/Approve/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("approve", e.isFilled), c.a.approveIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Archived/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("archived", e.isFilled), c.a.archivedIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Downvote/index.m.less": function(e, t, n) {
			e.exports = {
				compactDownvote: "_2GCoZTwJW7199HSwNZwlHk",
				compactDownvoteWrapper: "jR747Vd1NbfaLusf5bHre",
				downvote: "ZyxIIl4FP5gHGrJDzNpUC",
				downvoteWrapper: "_1iKd82bq_nqObFvSH1iC_Q"
			}
		},
		"./src/reddit/icons/fonts/Downvote/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/Downvote/index.m.less"),
				c = n.n(a);

			function l() {
				return (l = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const d = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("downvote", e.isFilled), c.a.downvote, e.className)
			});
			t.a = e => {
				let {
					compact: t,
					isFilled: n,
					...o
				} = e;
				return t ? s.a.createElement("span", l({}, o, {
					className: Object(r.a)(c.a.compactDownvoteWrapper, o.className)
				}), s.a.createElement(d, {
					className: c.a.compactDownvote,
					isFilled: n
				})) : s.a.createElement("span", l({}, o, {
					className: Object(r.a)(c.a.downvoteWrapper, o.className)
				}), s.a.createElement(d, {
					isFilled: n
				}))
			}
		},
		"./src/reddit/icons/fonts/DropdownTriangle/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => s.a.createElement("i", {
				className: `${Object(r.b)("caret_down",e.isFilled)} ${e.className}`
			})
		},
		"./src/reddit/icons/fonts/Info/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/icons/fonts/helpers.tsx");
			t.a = e => s.a.createElement("i", {
				className: `${Object(r.b)("info",e.isFilled)} ${e.className}`
			})
		},
		"./src/reddit/icons/fonts/Lock/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("lock", e.isFilled), c.a.lockIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Premium/index.m.less": function(e, t, n) {
			e.exports = {
				PremiumIcon: "dLp3R7pmxclGjLS87yr5S",
				premiumIcon: "dLp3R7pmxclGjLS87yr5S"
			}
		},
		"./src/reddit/icons/fonts/Premium/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/icons/fonts/helpers.tsx"),
				i = n("./src/reddit/icons/fonts/Premium/index.m.less"),
				a = n.n(i);
			const c = n("./src/lib/lessComponent.tsx").a.wrapped(e => s.a.createElement("i", {
				title: e.title,
				className: `${Object(r.b)("premium",e.isFilled)} ${e.className}`
			}), "PremiumIcon", a.a)
		},
		"./src/reddit/icons/fonts/Remove/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("remove", e.isFilled), c.a.removeIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Report/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("report", e.isFilled), c.a.reportIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Spam/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("spam", e.isFilled), c.a.spamIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Sticky/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/commonStyles.m.less"),
				c = n.n(a);
			t.a = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("pin", e.isFilled), c.a.stickyIcon, e.className),
				id: e.id,
				onMouseEnter: e.onMouseEnter,
				onMouseLeave: e.onMouseLeave
			}, s.a.createElement(i.a, null, e.desc))
		},
		"./src/reddit/icons/fonts/Upvote/index.m.less": function(e, t, n) {
			e.exports = {
				compactUpvote: "_39UOLMgvssWenwbRxz_iEn",
				compactUpvoteWrapper: "_3wVayy5JvIMI67DheMYra2",
				upvote: "_2Jxk822qXs4DaXwsN7yyHA",
				upvoteWrapper: "_2q7IQ0BUOWeEZoeAxN555e"
			}
		},
		"./src/reddit/icons/fonts/Upvote/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return d
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/fonts/helpers.tsx"),
				a = n("./src/reddit/icons/fonts/Upvote/index.m.less"),
				c = n.n(a);

			function l() {
				return (l = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const d = e => s.a.createElement("i", {
				className: Object(r.a)(Object(i.b)("upvote", e.isFilled), c.a.upvote, e.className)
			});
			t.b = e => {
				let {
					compact: t,
					isFilled: n,
					...o
				} = e;
				return t ? s.a.createElement("span", l({}, o, {
					className: Object(r.a)(c.a.compactUpvoteWrapper, o.className)
				}), s.a.createElement(d, {
					className: c.a.compactUpvote,
					isFilled: n
				})) : s.a.createElement("span", l({}, o, {
					className: Object(r.a)(c.a.upvoteWrapper, o.className)
				}), s.a.createElement(d, {
					isFilled: n
				}))
			}
		},
		"./src/reddit/icons/svgs/AddCollection/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 24 24"
			}, s.a.createElement("defs", null, s.a.createElement("path", {
				id: "svg-add-collection",
				d: "M19.2 2.4a2.4 2.4 0 0 1 2.4 2.4v.936a3.577 3.577 0 0 0-2.4-.936H4.8c-.925 0-1.763.361-2.4.936V4.8a2.4 2.4 0 0 1 2.4-2.4h14.4zm0 3.6a2.4 2.4 0 0 1 2.4 2.4v.936a3.577 3.577 0 0 0-2.4-.936H4.8c-.925 0-1.763.361-2.4.936V8.4A2.4 2.4 0 0 1 4.8 6h14.4zm0 3.6a2.4 2.4 0 0 1 2.4 2.4v7.2a2.4 2.4 0 0 1-2.4 2.4H4.8a2.4 2.4 0 0 1-2.4-2.4V12a2.4 2.4 0 0 1 2.4-2.4h14.4zm-3.806 5.1H12.9v-2.494a.9.9 0 1 0-1.8 0V14.7H8.607a.9.9 0 1 0 0 1.8H11.1v2.494a.9.9 0 1 0 1.8 0V16.5h2.494a.9.9 0 0 0 0-1.8z"
			})), s.a.createElement("use", {
				fill: "inherit",
				xlinkHref: "#svg-add-collection",
				fillRule: "evenodd"
			}))
		},
		"./src/reddit/icons/svgs/Checkbox/index.m.less": function(e, t, n) {
			e.exports = {
				checkbox: "_1vmueUAOJJg7fhS7wxztWa"
			}
		},
		"./src/reddit/icons/svgs/Checkbox/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/Checkbox/index.m.less"),
				a = n.n(i);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => {
				let {
					className: t,
					...n
				} = e;
				return s.a.createElement("svg", c({
					xmlns: "http://www.w3.org/2000/svg",
					width: "20",
					height: "20",
					viewBox: "0 0 20 20",
					className: Object(r.a)(a.a.checkbox, t)
				}, n), s.a.createElement("path", {
					fill: "inherit",
					d: "M1.66666667,3.34755033 L1.66666667,16.6524497 C1.66666667,17.5781756 2.42112363,18.3333333 3.34755033,18.3333333 L16.6524497,18.3333333 C17.5781756,18.3333333 18.3333333,17.5788764 18.3333333,16.6524497 L18.3333333,3.34755033 C18.3333333,2.42182438 17.5788764,1.66666667 16.6524497,1.66666667 L3.34755033,1.66666667 C2.42182438,1.66666667 1.66666667,2.42112363 1.66666667,3.34755033 Z M0,3.34755033 C0,1.49874933 1.5032506,0 3.34755033,0 L16.6524497,0 C18.5012507,0 20,1.5032506 20,3.34755033 L20,16.6524497 C20,18.5012507 18.4967494,20 16.6524497,20 L3.34755033,20 C1.49874933,20 0,18.4967494 0,16.6524497 L0,3.34755033 Z"
				}))
			}
		},
		"./src/reddit/icons/svgs/CheckboxSelected/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);

			function r() {
				return (r = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => s.a.createElement("svg", r({
				xmlns: "http://www.w3.org/2000/svg",
				width: "20",
				height: "20",
				viewBox: "0 0 20 20"
			}, e), s.a.createElement("path", {
				fill: "inherit",
				d: "M0,3.34755033 C0,1.49874933 1.5032506,0 3.34755033,0 L16.6524497,0 C18.5012507,0 20,1.5032506 20,3.34755033 L20,16.6524497 C20,18.5012507 18.4967494,20 16.6524497,20 L3.34755033,20 C1.49874933,20 0,18.4967494 0,16.6524497 L0,3.34755033 Z M8.50575,15.1995 L15.797625,7.907625 C16.25325,7.452625 16.25325,6.71325 15.797625,6.25825 C15.342,5.802625 14.602625,5.802625 14.147625,6.25825 L7.7295,12.676375 L5.635125,10.327625 C5.20575,9.846375 4.46825,9.805125 3.987625,10.23325 C3.506375,10.662625 3.4645,11.400125 3.89325,11.88075 L6.810125,15.151375 C7.023875,15.39075 7.327,15.531375 7.647625,15.54075 C7.658875,15.54075 7.6695,15.541375 7.68075,15.541375 C7.990125,15.541375 8.287,15.41825 8.50575,15.1995 Z"
			}))
		},
		"./src/reddit/icons/svgs/Checkmark/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 22",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", null, s.a.createElement("path", {
				d: "M8.9310375,15.1995 C8.70135,15.41825 8.38963125,15.541375 8.0647875,15.541375 C8.052975,15.541375 8.04181875,15.54075 8.03000625,15.54075 C7.69335,15.531375 7.37506875,15.39075 7.15063125,15.151375 L4.0879125,11.88075 C3.637725,11.400125 3.68169375,10.662625 4.18700625,10.23325 C4.6916625,9.805125 5.4660375,9.846375 5.91688125,10.327625 L8.115975,12.676375 L14.8550063,6.25825 C15.3327563,5.802625 16.1091,5.802625 16.5875063,6.25825 C17.0659125,6.71325 17.0659125,7.452625 16.5875063,7.907625 L8.9310375,15.1995 Z",
				fill: "inherit"
			})))
		},
		"./src/reddit/icons/svgs/ClearFilled/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				onClick: e.onClick,
				onMouseUp: e.onMouseUp,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 40 40"
			}, s.a.createElement("path", {
				d: "M20 2.5C10.3 2.5 2.5 10.3 2.5 20c0 9.7 7.8 17.5 17.5 17.5S37.5 29.7 37.5 20C37.5 10.3 29.7 2.5 20 2.5zM24.2 27.7L20 23.5l-4.2 4.2c-1.1 1.1-2.5 1.1-3.5 0-1.1-1.1-1.1-2.4 0-3.5l4.2-4.2-4.2-4.2c-1.1-1.1-1.1-2.5 0-3.5 1.1-1.1 2.4-1.1 3.5 0l4.2 4.2 4.2-4.2c1.1-1.1 2.5-1.1 3.5 0 1.1 1.1 1.1 2.4 0 3.5L23.5 20l4.2 4.2c1.1 1.1 1.1 2.5 0 3.5C26.7 28.8 25.3 28.8 24.2 27.7z"
			}))
		},
		"./src/reddit/icons/svgs/Dropdown/index.m.less": function(e, t, n) {
			e.exports = {
				dropdown: "XHbKeEqnW58ib9mTN6jnS",
				mRedditStyle: "u_kypUXmB-k1A5TcC8MI9"
			}
		},
		"./src/reddit/icons/svgs/Dropdown/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return l
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/Dropdown/index.m.less"),
				a = n.n(i);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const l = e => {
				let {
					className: t,
					isSubreddit: n,
					...o
				} = e;
				return s.a.createElement("svg", c({
					className: Object(r.a)(a.a.dropdown, {
						[a.a.mRedditStyle]: !n
					}, t),
					viewBox: "0 0 20 20",
					xmlns: "http://www.w3.org/2000/svg"
				}, o), s.a.createElement("path", {
					d: "M14.17,9.35,10,13.53,5.83,9.35a.5.5,0,0,1,.35-.85h7.64a.5.5,0,0,1,.35.85"
				}))
			};
			t.b = l
		},
		"./src/reddit/icons/svgs/FormattingAlignCenter/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_1ZVHRoTDdo57082D2GcC80"
			}
		},
		"./src/reddit/icons/svgs/FormattingAlignCenter/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/FormattingAlignCenter/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "inherit",
				fillRule: "nonzero"
			}, s.a.createElement("path", {
				d: "M3.5 11h13c.55 0 1-.45 1-1s-.45-1-1-1h-13c-.55 0-1 .45-1 1s.45 1 1 1zM7.42 16h5.08c.55 0 1-.45 1-1s-.45-1-1-1H7.42c-.56 0-1 .45-1 1s.44 1 1 1zM3.5 6h13c.55 0 1-.45 1-1s-.45-1-1-1h-13c-.55 0-1 .45-1 1s.45 1 1 1z"
			})))
		},
		"./src/reddit/icons/svgs/FormattingAlignLeft/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_33vXt91MK_ualpifvvw_3v"
			}
		},
		"./src/reddit/icons/svgs/FormattingAlignLeft/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/FormattingAlignLeft/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "inherit",
				fillRule: "nonzero"
			}, s.a.createElement("path", {
				d: "M3.5 11h13c.55 0 1-.45 1-1s-.45-1-1-1h-13c-.55 0-1 .45-1 1s.45 1 1 1zM3.5 16h5.4c.54 0 1-.45 1-1s-.46-1-1-1H3.5c-.55 0-1 .45-1 1s.45 1 1 1zM3.5 6h13c.55 0 1-.45 1-1s-.45-1-1-1h-13c-.55 0-1 .45-1 1s.45 1 1 1z"
			})))
		},
		"./src/reddit/icons/svgs/FormattingAlignRight/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_34rYEsgbWk8eOQx_bs7fTV"
			}
		},
		"./src/reddit/icons/svgs/FormattingAlignRight/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/FormattingAlignRight/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "inherit",
				fillRule: "nonzero"
			}, s.a.createElement("path", {
				d: "M3.5 11h13c.55 0 1-.45 1-1s-.45-1-1-1h-13c-.55 0-1 .45-1 1s.45 1 1 1zM11.5 16h5c.55 0 1-.45 1-1s-.45-1-1-1h-5c-.55 0-1 .45-1 1s.45 1 1 1zM3.5 6h13c.55 0 1-.45 1-1s-.45-1-1-1h-13c-.55 0-1 .45-1 1s.45 1 1 1z"
			})))
		},
		"./src/reddit/icons/svgs/FormattingDeleteRow/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_8Y1-XP7A1OOfoU_mUqKcg"
			}
		},
		"./src/reddit/icons/svgs/FormattingDeleteRow/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/FormattingDeleteRow/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "inherit",
				fillRule: "nonzero",
				transform: "vertical" === e.orientation ? "rotate(90, 10, 10)" : ""
			}, s.a.createElement("path", {
				d: "M3 3c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1H4c-.55 0-1-.45-1-1V3zM2 3v14c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2z"
			}), s.a.createElement("path", {
				d: "M2 15h16v1H2M2 4h16v1H2M7.17 11.4l4.24-4.23c.4-.4 1.04-.4 1.43 0 .4.4.4 1.03 0 1.42L8.6 12.82c-.4.4-1.04.4-1.43 0-.4-.4-.4-1.03 0-1.42z"
			}), s.a.createElement("path", {
				d: "M8.6 7.17l4.23 4.24c.4.4.4 1.04 0 1.43-.4.4-1.03.4-1.42 0L7.18 8.6c-.4-.4-.4-1.04 0-1.43.4-.4 1.03-.4 1.42 0z"
			})))
		},
		"./src/reddit/icons/svgs/FormattingInsertRow/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_1PNKgIKbpvIWTVU3LO0PJQ"
			}
		},
		"./src/reddit/icons/svgs/FormattingInsertRow/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/FormattingInsertRow/index.m.less"),
				a = n.n(i);
			const c = {
				up: "rotate(180 10 10)",
				down: "",
				left: "rotate(90 10 10)",
				right: "rotate(-90 10 10)"
			};
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "inherit",
				fillRule: "nonzero",
				transform: c[e.orientation || "down"]
			}, s.a.createElement("path", {
				d: "M17 17c0 .55-.45 1-1 1H4c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v14zm1 0V3c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2z"
			}), s.a.createElement("path", {
				d: "M18 6H2V5h16M13 13H7c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1z"
			}), s.a.createElement("path", {
				d: "M9 15V9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1z"
			})))
		},
		"./src/reddit/icons/svgs/GovSmall/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 16 14",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", null, s.a.createElement("path", {
				d: "M8.5,0.2l6.2,3c0.5,0.3,0.6,0.9,0.3,1.4C14.9,4.8,14.6,5,14.2,5H1.8c-0.6,0-1-0.4-1-1 c0-0.4,0.2-0.7,0.5-0.9l6.2-3C7.9,0,8.1,0,8.5,0.2z"
			}), s.a.createElement("path", {
				d: "M2,12h12c0.6,0,1,0.4,1,1l0,0c0,0.6-0.4,1-1,1H2c-0.6,0-1-0.4-1-1l0,0C1,12.4,1.4,12,2,12z"
			}), s.a.createElement("path", {
				d: "M3.8,6h0.5C4.7,6,5,6.3,5,6.8v3.5C5,10.7,4.7,11,4.2,11H3.8C3.3,11,3,10.7,3,10.3V6.8C3,6.3,3.3,6,3.8,6z"
			}), s.a.createElement("path", {
				d: "M7.8,6h0.5C8.7,6,9,6.3,9,6.8v3.5C9,10.7,8.7,11,8.2,11H7.8C7.3,11,7,10.7,7,10.3V6.8 C7,6.3,7.3,6,7.8,6z"
			}), s.a.createElement("path", {
				d: "M11.8,6h0.5C12.7,6,13,6.3,13,6.8v3.5c0,0.4-0.3,0.8-0.8,0.8h-0.5c-0.4,0-0.8-0.3-0.8-0.8V6.8 C11,6.3,11.3,6,11.8,6z"
			})))
		},
		"./src/reddit/icons/svgs/Grapple/index.m.less": function(e, t, n) {
			e.exports = {
				grapple: "_23XYJUJn_XitrV-LLkNyCQ",
				mIsDragging: "_1jCsYjqdUw4PYY-s3mGB47"
			}
		},
		"./src/reddit/icons/svgs/Grapple/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/Grapple/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(e.className, a.a.grapple, {
					[a.a.mIsDragging]: e.isDragging
				}),
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}, s.a.createElement("title", {
				id: `${e.title}-title`
			}, e.title), s.a.createElement("g", null, s.a.createElement("path", {
				d: "M8,2 C8.553,2 9,2.447 9,3 L9,5 C9,5.553 8.553,6 8,6 L6,6 C5.447,6 5,5.553 5,5 L5,3 C5,2.447 5.447,2 6,2 L8,2 Z M14,2 C14.553,2 15,2.447 15,3 L15,5 C15,5.553 14.553,6 14,6 L12,6 C11.447,6 11,5.553 11,5 L11,3 C11,2.447 11.447,2 12,2 L14,2 Z M8,8 C8.553,8 9,8.447 9,9 L9,11 C9,11.553 8.553,12 8,12 L6,12 C5.447,12 5,11.553 5,11 L5,9 C5,8.447 5.447,8 6,8 L8,8 Z M14,8 C14.553,8 15,8.447 15,9 L15,11 C15,11.553 14.553,12 14,12 L12,12 C11.447,12 11,11.553 11,11 L11,9 C11,8.447 11.447,8 12,8 L14,8 Z M8,14 C8.553,14 9,14.447 9,15 L9,17 C9,17.553 8.553,18 8,18 L6,18 C5.447,18 5,17.553 5,17 L5,15 C5,14.447 5.447,14 6,14 L8,14 Z M14,14 C14.553,14 15,14.447 15,15 L15,17 C15,17.553 14.553,18 14,18 L12,18 C11.447,18 11,17.553 11,17 L11,15 C11,14.447 11.447,14 12,14 L14,14 Z"
			})))
		},
		"./src/reddit/icons/svgs/Hamster1/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 53 67"
			}, s.a.createElement("g", {
				fill: "none",
				fillRule: "evenodd"
			}, s.a.createElement("path", {
				fill: "#000",
				d: "M36.17 15.7877c-2.1457-.6233-4.6272.5142-5.0853 2.419-.174.7268-.5168 1.0273-1.2283 1.124-1.5643.2126-2.9247.8707-4.0924 1.901-.807.7112-1.2403 1.523-1.2154 2.6702.0477 2.1067 1.0792 3.8318 2.0054 5.608.2256.432 2.0283-.631 1.111-.082-.616-1.9145-1.1994-3.6348-1.7152-5.3744-.2127-.72.0527-1.406.7364-1.754 1.2204-.6195 2.4954-1.1375 3.7456-1.702.5923-.2676.93-.057 1.27.465.821 1.2544 1.9995 2.04 3.5757 1.8642 1.6357-.1817 2.555-1.264 3.054-2.7215.6707-1.956-.2665-3.8677-2.1616-4.4176"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M32.575 18.997c-.1866-1.1486.5913-2.0766 1.949-2.3235 1.4877-.2722 2.729.4466 2.9796 1.7235.2642 1.345-.7003 2.9457-1.9175 3.1832-1.341.2627-2.7447-.9416-3.011-2.5832"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M17.0857 23.965c-2.5846-.806-4.1367.6-4.4678 3.2556-.3653 2.9378.675 6.234 3.5116 7.1787 2.9598.9843 5.8344-1.5318 6.3822-4.5023.4535-2.4616-3.5227-5.3826-5.426-5.932-3.1034-.9685 1.507.4345 0 0M39.321 24.512c-2.184-2.2814-6.028.2842-7.4777 2.256-.521.7074-.9206 1.5057-1.1896 2.3475-.35 1.0897.269.94.3743 1.8643.1922 1.6742 2.1314 3.3578 3.7206 3.5912 4.7354.694 7.7125-6.7713 4.3803-10.2603.1294.1364.259.2717.3894.408-.0658-.0692-.1315-.1384-.1973-.2066-1.9745-2.0624.696.7283 0 0M18.9308 59.6326c-.1867-.0458-.3346.0093-.443.1056-.001 0-.001-.001-.002-.001-1.5598.099-3.8566.7662-4.6848 2.1695-.8887 1.507.7358 2.5096 2.148 2.674 1.553.1813 3.8715-.3148 4.4405-1.8975.439-1.2193-.0328-2.7012-1.4587-3.0506M34.37 60.348c-.242-.0358-.5174.043-.6267.2957-1.5118 3.4664 6.185 5.586 7.6074 2.4245 1.3572-3.016-4.6648-4.4187-6.9808-2.7203"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M39.9895 37.3797c-3.8707-9.353-16.7772-11.6802-23.5762-4.7352-3.177 3.245-4.373 8.2466-4.83 9.7576-1.4357 4.748-1.561 10.198.7932 14.6874 3.987 7.605 16.61 9.4605 23.792 5.505 9.1842-5.058 6.6638-18.3606 3.437-26.1424.2377.5734.4746 1.1468.7124 1.7202-.1096-.2645-.219-.528-.3285-.7925-2.1562-5.211 1.182 2.856 0 0"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M26.4406 29.6162c3.5285 0 8.4696 2.1882 10.6613 4.9576 2.5828 3.2633 3.7284 8.3103 4.3175 12.3626.4945 3.4113-.4807 8.203-2.2755 11.186-2.1327 3.5455-6.732 4.5153-10.5422 4.4935-4.6918-.026-10.162-.5288-13.2412-4.577-2.77-3.643-3.234-8.4117-2.506-12.8188.401-2.4216 1.0284-5.207 1.9967-7.4706 2.105-4.9197 5.7597-8.1334 11.5893-8.1334"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M41.5915 49.6162c.03-.6952.008-1.3605-.044-2l.044 2zM37.4186 60.1975c-1.3365-.7743-2.342-2.1664-2.536-3.716-.0665-.533-.0396-1.074-.0128-1.61.0477-.9814.1004-1.9818.458-2.8933.4095-1.0428 1.1846-1.8868 1.9427-2.7034.46-.4967.9212-.9934 1.3823-1.49.7273-.7844 1.6783-1.6223 2.688-1.475-.4125-2.465-1.0336-5.1514-2.0422-7.567-1.0493 2.024-3.0208 3.9137-5.4086 2.871-.5147-.2242-.8774-.3756-1.3395-.7027-.8615-.7398-1.9138-.9498-3.157-.6288-.2702.3008-.5265.6128-.769.9368-.5157.521-1.1567.9812-1.9347.7632-1.7777-.5007-2.97-2.9346-5.1046-1.4002-.8675.624-1.9396 1.5637-3.0953 1.5082-2.0044-.096-3.3925-1.0983-4.2153-2.752-.776 2.0393-1.2024 4.4066-1.5432 6.479-.0407.2524-.0636.5098-.0974.7652.6232-.0353 1.2462-.013 1.8206.219.6776.2727 1.2182.8037 1.74 1.3225.8435.8388 1.708 1.706 2.187 2.8033.4382 1.0014.5227 2.123.5366 3.2183.015 1.0882-.0338 2.1754-.145 3.2566-.1313 1.284-.475 2.7296-1.571 3.3606 3.1707 2.359 7.553 2.7054 11.4153 2.7266 3.2216.0182 6.9976-.6774 9.4033-3.0224-.2027-.0868-.4104-.1585-.6022-.2695"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M19.3634 62.297c-.4735.8925-1.877 1.0785-2.832 1.1074-.5274.0154-1.058-.045-1.5395-.25-.894-.3822-.2403-1.1526.2322-1.5266.884-.7018 2.083-1.0513 3.2383-1.1217.114-.0072.2012-.0478.2752-.0993.846.2655.982 1.2193.6257 1.8904M39.1353 63.7074c-.7183.2857-1.607.0788-2.318-.0972-1.225-.3028-2.4647-1.2617-2.3147-2.656.0894-.0388.1756-.0948.2438-.1942 1.16-1.6788 4.4677-.7897 5.5096.6697.7194 1.008-.38 1.984-1.1207 2.2777"
			}), s.a.createElement("path", {
				fill: "#C18D42",
				d: "M17.2218 28.842c-.2698-1.599-.862-3.239-2.209-4.0722-1.519-.9397-1.5314 2.7022-1.4284 3.646.1773 1.6212.7036 4.1546 2.031 4.9962 1.0735.6814 1.7476-.4387 1.9068-1.9332.105-.9777-.1392-1.678-.3004-2.6368-.3327-1.9776.2232 1.3268 0 0"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M15.5475 24.681c1.747.664 2.8352 2.0178 3.3196 3.9672.3962 1.5937.7234 3.6126-.1366 4.959 1.6953.081 3.8534-.3464 3.6123-2.602 1.339-1.9475-4.229-7.018-6.7952-6.3243M33.6698 32.7516c-.407-.451.364.404 0 0"
			}), s.a.createElement("path", {
				fill: "#C18D42",
				d: "M35.796 29.1142c-.1635.7146-.323 1.4594-.211 2.192.178 1.1545.9577 1.6425 1.872 1.0695 1.2238-.7655 1.577-2.3845 1.9186-3.693.1864-.7164.529-3.6248-.9526-2.9716-1.4423.6354-2.308 2.0174-2.627 3.4032-.238 1.0394.3698-1.6104 0 0"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M35.3533 32.5596c-1.0047-1.2304-.5965-3.2887-.0174-4.64.6404-1.496 1.6748-2.6295 3.2115-3.037-.0695-.041-.136-.083-.2138-.114-1.9296-.775-4.9295 1.584-5.8667 3.0262-.6885 1.0606-2.0135 2.6206.8063 4.2594.7018.4085 1.3024.687 2.08.5054"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M32.8514 39.097c-.577.676-1.6076.6748-2.4273.0963-1.264-.8917-1.1062-3.3024.122-4.234.7017-.532 1.6705-.4205 2.1302.1645 1.53 1.946.6833 3.3772.1752 3.973"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M30.755 38.0938c-.2703-.432-.2692-1.2056-.039-1.8203.3575-.9478 1.322-.8296 1.6942.092.213.5263.1684 1.252-.0664 1.597-.7778 1.1484-1.3505.512-1.5888.1313"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M24.71 39.009c-.6662.8048-2.161.7863-3.1096.0826-1.5367-1.1425-1.2565-2.9377-.0257-3.8424.9816-.721 1.9472-.897 2.8605-.1542 1.636 1.3315 1.2372 2.751.2748 3.914"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M21.79 38.1136c-.322-.4-.3135-1.296-.0326-1.8656.4566-.922 1.1752-.7538 1.537-.016.2884.589.359 1.1686.0612 1.7166-.5324.982-1.0995.7425-1.5656.165"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M24.5598 40.2202c.8506 1.8878 3.3605 1.9104 3.9825-.235.0587-.206-.3954-.314-.471-.3215-1.1-.0954-2.188-.0502-3.278.1646-.637.1256.158.5627.459.5024.9212-.182 1.8433-.2474 2.7733-.167-.157-.1068-.314-.2136-.471-.3216-.14.4862-.3785.834-.7293 1.098-.5525.4157-1.0443-.1445-1.3017-.716-.147-.3266-1.094-.2915-.9638-.0038"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M22.5907 41.495c1.505 1.488 4.0743 1.4078 5.0584-.571-.3263-.06-.6527-.121-.98-.182-.2436 2.3982 3.9335 2.359 4.8708.653.1018-.186-.8275-.4596-.9802-.1822-.556 1.1467-1.526 1.0504-2.9105-.2888.029-.284-.8573-.428-.98-.182-.497 1.0008-1.7188 2.179-3.194.7215-.1837-.182-1.14-.221-.8843.0315M19.5653 46.516c-.473 6.7128 8.6924 4.2055 5.1774-.548-.6672-.903-.7844.151-.5202.7218.5274 1.1447.4853 2.1653-.5644 2.844-1.2192.7874-2.6945.0107-2.9834-1.216-.112-.5384-.144-1.082-.0936-1.6312.0237-.3453-.993-.4877-1.0157-.1705M29.6923 44.8475c-1.689 1.2247-1.5924 4.6386.8496 4.7633 1.13.0575 2.2874-.3435 3.0557-1.1673.3415-.3653 1.5518-2.4732.5793-2.709-1.2043-.293-1.2043 3.92-3.9756 3.001-.9725-.3227-.5812-1.1573-.5253-1.9048.0163-.218 1.4523-3.0258.0163-1.9832"
			})))
		},
		"./src/reddit/icons/svgs/Hamster2/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 53 67"
			}, s.a.createElement("g", {
				fill: "none",
				fillRule: "evenodd"
			}, s.a.createElement("path", {
				fill: "#FFF",
				d: "M9.5927 33.2517c.829 1.0475-1.9245 5.7044-2.2983 5.6247-7.91-1.6942-2.065-11.142 2.2983-5.6247z"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M7.2853 38.8738c-7.8952-1.69-2.0557-11.1393 2.297-5.625.8272 1.047-.4264.8297-.9997.3446-1.1508-.97-2.3416-1.2604-3.462-.3077-1.3005 1.107-.879 3.0184.443 3.748.585.3038 1.202.5194 1.8517.6446.4058.0876.243 1.275-.13 1.1955"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M50.0333 34.034c-.1167 1.5037-.772 2.978-1.8564 3.877-.4812.3997-3.1335 1.7-3.25.3792-.1457-1.6356-1.7525-4.3107-.3047-6.062 1.7012-2.06 5.6625-1.444 5.411 1.8057z"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M38.8415 2.2205c-2.7586-.8015-5.949.661-6.538 3.11-.2237.9345-.6645 1.321-1.5794 1.4452-2.011.2734-3.7602 1.1195-5.2615 2.444-1.0375.9146-1.5946 1.9584-1.5627 3.4333.0614 2.7088 1.3876 4.9268 2.5785 7.2106.29.5554 2.6078-.8114 1.4285-.1056-.7922-2.4615-1.5422-4.6733-2.2054-6.91-.2734-.9256.0677-1.8078.9468-2.2552 1.569-.7964 3.2084-1.4625 4.8157-2.188.7615-.3443 1.196-.0734 1.633.5976 1.0553 1.6128 2.5707 2.623 4.597 2.397 2.1033-.2337 3.2852-1.6254 3.9266-3.4992.8624-2.515-.3425-4.9727-2.779-5.6797"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M33.9315 6.857c-.224-1.3784.7095-2.492 2.3388-2.7883 1.7852-.3266 3.275.536 3.5755 2.0682.317 1.614-.8404 3.5347-2.301 3.8197-1.6092.3153-3.2938-1.13-3.6133-3.0997"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M14.7982 12.4437c-3.36-1.0258-5.3778.7637-5.8082 4.1436-.4748 3.739.8778 7.9344 4.5652 9.1366 3.8478 1.2526 7.5847-1.9496 8.297-5.7303.5894-3.133-4.5797-6.8506-7.054-7.55-4.0343-1.2325 1.959.5532 0 0M43.3042 13.0588c-2.8393-2.6964-7.8367.3357-9.7212 2.666-.6773.836-1.1967 1.7795-1.5465 2.7743-.455 1.288.3498 1.111.4866 2.2034.25 1.9786 2.771 3.9682 4.837 4.244 6.156.8204 10.0262-8.0023 5.6943-12.1256.1683.161.3367.321.5063.482-.0855-.0817-.171-.1634-.2564-.244-2.567-2.4376.9047.8605 0 0M16.2644 58.021c-.2208-.059-.3958.012-.5237.136-.0012 0-.0012-.0012-.0024-.0012-1.8447.1275-4.5607.9865-5.54 2.7936-1.051 1.9405.87 3.2314 2.5398 3.4432 1.8366.2334 4.5785-.4055 5.2513-2.4435.519-1.57-.0387-3.478-1.725-3.928M35.8236 58.9218c-.272-.045-.582.0543-.705.3726-1.7005 4.3674 6.9575 7.0378 8.5576 3.0546 1.5267-3.7998-5.2473-5.567-7.8526-3.4272"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M43.621 29.1977c-4.9592-11.951-21.4957-14.9246-30.207-6.0505-4.0707 4.1463-5.603 10.5374-6.1882 12.468-1.8397 6.067-2.0003 13.0306 1.016 18.767 5.1085 9.718 21.2816 12.0886 30.4837 7.0343 11.767-6.463 8.538-23.4607 4.4034-33.4042.3046.7327.608 1.4654.9127 2.198-.1402-.338-.2804-.6746-.4207-1.0126-2.7626-6.6584 1.5146 3.6495 0 0"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M25.8506 19.7317c4.5594 0 10.944 2.8204 13.7762 6.3902 3.3375 4.2063 4.8178 10.7118 5.579 15.935.639 4.3973-.6212 10.5736-2.9403 14.4188-2.7558 4.57-8.6988 5.8202-13.6222 5.792-6.0627-.0332-13.131-.6814-17.1098-5.8996-3.5793-4.6956-4.179-10.8425-3.2382-16.523.518-3.1216 1.329-6.7118 2.58-9.6297 2.7202-6.3415 7.4425-10.4838 14.9753-10.4838"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M45.9425 45c.03-.6952.008-1.3605-.044-2l.044 2zM39.8434 58.144c-1.7227-.9698-3.0188-2.7136-3.2686-4.6547-.0858-.6677-.0512-1.3455-.0166-2.017.0615-1.2292.1293-2.4824.5904-3.6243.5277-1.3063 1.5267-2.3634 2.504-3.3865.593-.622 1.1872-1.2443 1.7815-1.8665.9376-.9825 2.1633-2.032 3.4645-1.8475-.5315-3.088-1.332-6.453-2.632-9.4792-1.3524 2.5355-3.8935 4.9027-6.971 3.5964-.6636-.2807-1.131-.4704-1.7266-.88-1.1105-.927-2.467-1.19-4.069-.788-.3485.377-.679.7677-.9914 1.1736-.6647.6525-1.4908 1.2292-2.4937.956-2.2913-.6272-3.8283-3.676-6.5793-1.754-1.1182.7816-2.5 1.959-3.9896 1.8893-2.5832-.12-4.3725-1.3758-5.433-3.4472-1.0002 2.5544-1.5497 5.5198-1.989 8.116-.0525.316-.082.6386-.1255.9585.803-.0443 1.606-.0165 2.3464.2743.8734.3415 1.57 1.0066 2.2425 1.6566 1.0874 1.0508 2.2016 2.137 2.819 3.5116.5648 1.2545.6737 2.6594.6916 4.0315.0193 1.3633-.0435 2.7252-.187 4.0796-.169 1.6085-.612 3.4193-2.0248 4.2097 4.087 2.9553 9.735 3.389 14.7134 3.4156 4.1523.0226 9.0192-.8486 12.12-3.7862-.2614-.1088-.529-.1986-.7762-.3377"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M16.6775 61.5205c-.5682 1.19-2.2523 1.438-3.3982 1.4765-.633.0205-1.2697-.0602-1.8475-.3336-1.0727-.5094-.2883-1.5367.2787-2.0352 1.0607-.9357 2.4997-1.4018 3.886-1.4957.137-.0097.2414-.064.3303-.1325 1.015.354 1.1784 1.6258.7507 2.5205M41.3178 62.8585c-.838.2857-1.875.079-2.7043-.097-1.429-.303-2.8756-1.2618-2.7005-2.656.1043-.039.2048-.095.2843-.1944 1.3534-1.6787 5.2124-.7896 6.428.6698.8393 1.008-.4433 1.984-1.3075 2.2777"
			}), s.a.createElement("path", {
				fill: "#C18D42",
				d: "M14.4914 18.1648c-.3373-1.9542-1.0774-3.9587-2.7615-4.977-1.8987-1.1487-1.9142 3.3025-1.7855 4.4562.2217 1.9814.8796 5.0777 2.5387 6.1064 1.342.8328 2.1846-.5362 2.3836-2.363.131-1.1948-.174-2.0508-.3754-3.2226-.416-2.417.279 1.6217 0 0"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M11.8985 13.079c1.9966.812 3.2402 2.4664 3.7938 4.849.4527 1.9478.8267 4.4154-.1562 6.061 1.9376.099 4.404-.4234 4.1285-3.1804 1.5303-2.38-4.8333-8.5774-7.766-7.7295M35.0207 23.1353c-.407-.451.364.404 0 0"
			}), s.a.createElement("path", {
				fill: "#C18D42",
				d: "M38.2093 19.4974c-.2045.9188-.4038 1.8764-.264 2.8182.2225 1.4844 1.197 2.112 2.34 1.3752 1.5298-.9843 1.9712-3.066 2.3983-4.748.233-.9213.6613-4.6607-1.1908-3.8208-1.803.8168-2.885 2.5937-3.2835 4.3754-.2977 1.3363.462-2.0706 0 0"
			}), s.a.createElement("path", {
				fill: "#FF8717",
				d: "M37.7916 23.9292c-1.2917-1.538-.767-4.111-.0223-5.8.8235-1.87 2.1534-3.287 4.1292-3.7963-.0894-.0513-.175-.1037-.275-.1424-2.481-.9687-6.3378 1.98-7.5428 3.7826-.8853 1.3257-2.5888 3.2757 1.0366 5.3243.9024.5106 1.6746.859 2.6743.6317"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M34.0283 31.3767c-.721.8113-2.0094.81-3.034.1158-1.58-1.07-1.383-3.963.1523-5.081.877-.6384 2.088-.5045 2.6627.1976 1.9127 2.3352.854 4.0527.219 4.7677"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M31.106 29.4776c-.2703-.432-.2692-1.2056-.039-1.8204.3574-.9477 1.322-.8296 1.6942.092.213.5264.1684 1.252-.0664 1.597-.7778 1.1484-1.3506.5122-1.5888.1314"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M23.8934 30.2714c-.7994.9656-2.5933.9435-3.7315.099-1.844-1.371-1.508-3.5252-.031-4.6108 1.178-.8653 2.3368-1.0765 3.4327-.185 1.9633 1.5977 1.4846 3.301.3297 4.6968"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M20.141 29.4974c-.322-.4-.3135-1.2962-.0326-1.8657.4566-.922 1.1752-.7537 1.537-.0158.2884.5886.359 1.1683.061 1.7164-.5322.982-1.0993.7424-1.5654.165"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M23.9138 33.604c1.0632 1.8878 4.2007 1.9104 4.9782-.235.0733-.206-.4943-.314-.5887-.3215-1.375-.0955-2.735-.0502-4.0976.1646-.796.1257.1975.5628.574.5025 1.1512-.1822 2.304-.2475 3.4664-.167-.196-.1068-.3923-.2136-.5886-.3216-.175.486-.4732.834-.9117 1.0977-.6905.4157-1.3054-.1445-1.627-.716-.184-.3266-1.3676-.2914-1.205-.0038"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M20.9512 35.318c1.8397 2.232 4.9797 2.112 6.1826-.8564-.399-.09-.798-.1816-1.198-.273-.2976 3.5973 4.8077 3.5387 5.9532.9794.1245-.279-1.0113-.6892-1.198-.273-.6794 1.72-1.8652 1.5755-3.5572-.4334.0354-.426-1.048-.642-1.198-.273-.6075 1.5012-2.1007 3.2685-3.9037 1.0823-.2244-.2732-1.393-.3318-1.0808.047M44.4978 32.213c1.7332-2.056 5.7836-1.429 5.5353 1.821-.115 1.5038-.7808 2.977-1.8867 3.8733-.4907.3984-3.198 1.692-3.3206.3704-.1534-1.6365 4.8643-1.0204 4.2203-4.8223-.2264-1.3343-1.284-.9385-2.1835-.974-.262-.0102-3.8398 1.4795-2.3647-.2684"
			})))
		},
		"./src/reddit/icons/svgs/Help/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 16 16",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("path", {
				fill: "inherit",
				d: "M8.622 10.616c.078.08.14.175.183.28.044.105.07.218.07.332 0 .237-.087.456-.253.62-.167.168-.385.255-.622.255-.236 0-.455-.087-.62-.254-.167-.166-.255-.385-.255-.622 0-.114.027-.227.07-.332.044-.105.105-.2.184-.28.087-.088.174-.15.288-.193.324-.13.71-.052.954.193zm-.205-6.242c1.595 0 2.466.807 2.466 1.92 0 .976-.556 1.448-1.238 1.816-.615.317-.83.518-.904.898 0 .004-.034.207-.036.21-.034.126-.087.244-.18.336-.14.14-.323.21-.524.21-.097 0-.192-.017-.29-.052-.087-.035-.165-.088-.235-.158-.14-.14-.22-.333-.22-.533 0-.11.02-.188.074-.348.16-.472.55-.896 1.056-1.17.577-.327.84-.558.84-1.07 0-.42-.357-.715-.987-.715-.496 0-.996.218-1.39.52-.26.2-.62.202-.858-.02l-.05-.05c-.313-.29-.27-.787.075-1.04.603-.444 1.394-.753 2.4-.753zM8 13.25c-2.895 0-5.25-2.355-5.25-5.25S5.105 2.75 8 2.75 13.25 5.105 13.25 8 10.895 13.25 8 13.25M8 1C4.14 1 1 4.14 1 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7"
			}))
		},
		"./src/reddit/icons/svgs/ImagePost/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_1pAYDrDlDFEJk994qhxbYj"
			}
		},
		"./src/reddit/icons/svgs/ImagePost/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/ImagePost/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("path", {
				d: "M16,2H4A2,2,0,0,0,2,4V16a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V4A2,2,0,0,0,16,2Zm0,14H10.14a.49.49,0,0,1,.05-.48l3.15-4.26a.5.5,0,0,1,.38-.2.53.53,0,0,1,.4.17L16,13.35ZM4,13.51,7.26,8.82a.54.54,0,0,1,.42-.21.5.5,0,0,1,.41.23l2.85,4.34L8.84,16H4Zm10.4-7.1a1.7,1.7,0,1,1-1.7-1.7A1.7,1.7,0,0,1,14.4,6.41Z"
			}))
		},
		"./src/reddit/icons/svgs/Info/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				style: e.style,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg",
				onClick: e.onClick
			}, s.a.createElement("g", null, s.a.createElement("path", {
				d: "M10,8.5 C10.553,8.5 11,8.948 11,9.5 L11,13.5 C11,14.052 10.553,14.5 10,14.5 C9.447,14.5 9,14.052 9,13.5 L9,9.5 C9,8.948 9.447,8.5 10,8.5 Z M10.7002,5.79 C10.8012,5.89 10.8702,6 10.9212,6.12 C10.9712,6.24 11.0002,6.37 11.0002,6.5 C11.0002,6.57 10.9902,6.63 10.9802,6.7 C10.9712,6.76 10.9502,6.82 10.9212,6.88 C10.9002,6.94 10.8702,7 10.8302,7.05 C10.7902,7.11 10.7502,7.16 10.7002,7.21 C10.6602,7.25 10.6102,7.29 10.5512,7.33 C10.5002,7.37 10.4402,7.4 10.3812,7.42 C10.3202,7.45 10.2612,7.47 10.1902,7.48 C10.1312,7.49 10.0602,7.5 10.0002,7.5 C9.7402,7.5 9.4802,7.39 9.2902,7.21 C9.1102,7.02 9.0002,6.77 9.0002,6.5 C9.0002,6.37 9.0302,6.24 9.0802,6.12 C9.1312,5.99 9.2002,5.89 9.2902,5.79 C9.5202,5.56 9.8702,5.46 10.1902,5.52 C10.2612,5.53 10.3202,5.55 10.3812,5.58 C10.4402,5.6 10.5002,5.63 10.5512,5.67 C10.6102,5.71 10.6602,5.75 10.7002,5.79 Z M10,16 C6.691,16 4,13.309 4,10 C4,6.691 6.691,4 10,4 C13.309,4 16,6.691 16,10 C16,13.309 13.309,16 10,16 M10,2 C5.589,2 2,5.589 2,10 C2,14.411 5.589,18 10,18 C14.411,18 18,14.411 18,10 C18,5.589 14.411,2 10,2"
			})))
		},
		"./src/reddit/icons/svgs/Link/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", null, s.a.createElement("path", {
				fill: "inherit",
				d: "M18.4773727,1.51993937 C19.4600354,2.50135191 20.0013751,3.80656808 20.0013751,5.19554812 C20.0013751,6.58577837 19.4600354,7.89099453 18.4773727,8.87240707 C17.9885417,9.35998782 17.1984109,9.35998782 16.7095799,8.87240707 C16.2207489,8.38357611 16.2207489,7.59094484 16.7095799,7.10461429 C17.2196644,6.59452982 17.500961,5.91691759 17.500961,5.19554812 C17.500961,4.47542886 17.2196644,3.79781663 16.7095799,3.28773215 C15.6569056,2.23755822 13.9453721,2.23755822 12.8926978,3.28773215 L8.62324066,7.55843946 C7.57181653,8.6111138 7.57181653,10.3226473 8.62324066,11.3753216 C9.11207162,11.8629024 9.11207162,12.6555336 8.62324066,13.1431144 C8.37945029,13.3869048 8.05939728,13.509425 7.73934427,13.509425 C7.41929127,13.509425 7.09923826,13.3869048 6.85544788,13.1431144 C4.82886225,11.1152785 4.82886225,7.81723232 6.85544788,5.79064668 L11.124905,1.51993937 C13.1502404,-0.505396058 16.4495368,-0.507896472 18.4773727,1.51993937 Z M11.3753215,6.8540728 C11.8641524,6.36524184 12.6542833,6.36524184 13.1431142,6.8540728 C15.1696999,8.88065844 15.1696999,12.1799549 13.1431142,14.2065405 L8.87240693,18.4772478 C7.89099439,19.4586603 6.58452801,20 5.19679818,20 C3.80781814,20 2.50135177,19.4586603 1.51993923,18.4772478 C-0.50664641,16.4506622 -0.50664641,13.1513657 1.51993923,11.1247801 C2.00877019,10.6359491 2.80015125,10.6359491 3.28773201,11.1247801 C3.77656297,11.6136111 3.77656297,12.4037419 3.28773201,12.8925729 C2.23505767,13.9452472 2.23505767,15.6567807 3.28773201,16.709455 C4.34040635,17.7621294 6.05193981,17.7621294 7.10461415,16.709455 L11.3753215,12.4387477 C12.4279958,11.3860734 12.4279958,9.67453992 11.3753215,8.62186558 C10.8864905,8.13303462 10.8864905,7.34290376 11.3753215,6.8540728 Z"
			})))
		},
		"./src/reddit/icons/svgs/LiveChat/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);

			function r() {
				return (r = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => s.a.createElement("svg", r({
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 16 16",
				stroke: "white"
			}, e), s.a.createElement("path", {
				d: "M1.17567 6.90708L1.17579 6.9071L1.17765 6.89503C1.61505 4.05191 3.95864 1.69386 6.90278 1.17649C11.5294 0.445398 15.5469 4.48817 14.7445 9.01081L14.7433 9.01787L14.7422 9.02495C14.3037 11.8753 11.9552 14.2237 9.10488 14.6623L9.10486 14.6621L9.09283 14.6642C7.41037 14.9568 5.80338 14.5919 4.48582 13.7867L4.249 13.642L3.98282 13.7206L1.45885 14.4663L2.19817 12.0209L2.27918 11.7529L2.13322 11.5141C1.31702 10.1785 0.886321 8.57086 1.17567 6.90708Z",
				strokeWidth: "1.25",
				strokeMiterlimit: "10",
				strokeLinecap: "square"
			}), s.a.createElement("path", {
				d: "M8.00018 12.3201C10.386 12.3201 12.3202 10.3859 12.3202 8.00005C12.3202 5.61418 10.386 3.68005 8.00018 3.68005C5.61431 3.68005 3.68018 5.61418 3.68018 8.00005C3.68018 10.3859 5.61431 12.3201 8.00018 12.3201Z",
				strokeWidth: "1.25",
				strokeMiterlimit: "10"
			}), s.a.createElement("path", {
				d: "M8.00008 9.92008C9.06047 9.92008 9.92008 9.06047 9.92008 8.00008C9.92008 6.93969 9.06047 6.08008 8.00008 6.08008C6.93969 6.08008 6.08008 6.93969 6.08008 8.00008C6.08008 9.06047 6.93969 9.92008 8.00008 9.92008Z",
				strokeWidth: "1.25",
				strokeMiterlimit: "10"
			}))
		},
		"./src/reddit/icons/svgs/MarkdownMode/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 208 128"
			}, s.a.createElement("rect", {
				width: "198",
				height: "118",
				x: "5",
				y: "5",
				ry: "10",
				stroke: "currentColor",
				strokeWidth: "10",
				fill: "none"
			}), s.a.createElement("path", {
				d: "M30 98v-68h20l20 25 20-25h20v68h-20v-39l-20 25-20-25v39zM155 98l-30-33h20v-35h20v35h20z"
			}))
		},
		"./src/reddit/icons/svgs/Pencil/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("title", {
				id: `${e.title}-title`
			}, e.title), s.a.createElement("g", null, s.a.createElement("path", {
				fill: "inherit",
				d: "M15.75,7.834625 L12,4.084625 L12.808,3.276625 C13.8435,2.241125 15.5225,2.241125 16.558,3.276625 C17.5935,4.312125 17.5935,5.991125 16.558,7.026625 L15.75,7.834625 Z M11.366,5 L15.116,8.75 L7.25,16.616 L3.5,12.866 L11.366,5 Z M2.5035,13.5 L6.1125,17.109 L1,18.6125 L2.5035,13.5 Z"
			})))
		},
		"./src/reddit/icons/svgs/Plus/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				version: "1.1"
			}, s.a.createElement("g", {
				stroke: "none"
			}, s.a.createElement("g", {
				transform: "translate(-34.000000, -136.000000)",
				fill: "inherit"
			}, s.a.createElement("path", {
				d: "M45.2,147.2 L48.8,147.2 C49.46272,147.2 50,146.66272 50,146 C50,145.33728 49.46272,144.8 48.8,144.8 L45.2,144.8 L45.2,141.2 C45.2,140.53728 44.66272,140 44,140 C43.33728,140 42.8,140.53728 42.8,141.2 L42.8,144.8 L39.2,144.8 C38.53728,144.8 38,145.33728 38,146 C38,146.66272 38.53728,147.2 39.2,147.2 L42.8,147.2 L42.8,150.8 C42.8,151.46272 43.33728,152 44,152 C44.66272,152 45.2,151.46272 45.2,150.8 L45.2,147.2 Z"
			}))))
		},
		"./src/reddit/icons/svgs/Poll/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", null, s.a.createElement("path", {
				d: "M2.1952,13.9279 C2.9452,13.9279 3.5382,14.3119 3.8382,14.8939 L2.8962,15.3249 C2.7702,15.0489 2.4882,14.8519 2.1232,14.8519 C1.6192,14.8519 1.2232,15.3189 1.2232,15.9489 C1.2232,16.5849 1.6252,17.0409 2.1172,17.0409 C2.4882,17.0409 2.7772,16.8369 2.9262,16.5369 L3.9162,16.8909 C3.6102,17.5559 2.9802,17.9639 2.1952,17.9639 C1.0492,17.9639 0.1202,17.0759 0.1202,15.9489 C0.1202,14.8279 1.0492,13.9279 2.1952,13.9279 Z M11.5004,14.5 C12.3294,14.5 13.0004,15.171 13.0004,16 C13.0004,16.829 12.3294,17.5 11.5004,17.5 L6.5004,17.5 C5.6714,17.5 5.0004,16.829 5.0004,16 C5.0004,15.171 5.6714,14.5 6.5004,14.5 L11.5004,14.5 Z M1.8953,8.0003 C2.8063,8.0003 3.5503,8.2643 3.5503,9.0313 C3.5503,9.3433 3.3523,9.5893 3.0763,9.7813 C3.4483,9.9553 3.7243,10.2253 3.7243,10.6623 C3.7243,11.5179667 2.93757778,11.8598556 2.22929983,11.8952023 L2.1053,11.8983 L0.3723,11.8983 L0.3723,8.0003 L1.8953,8.0003 Z M18.5004,8.5 C19.3294,8.5 20.0004,9.171 20.0004,10 C20.0004,10.829 19.3294,11.5 18.5004,11.5 L6.5004,11.5 C5.6714,11.5 5.0004,10.829 5.0004,10 C5.0004,9.171 5.6714,8.5 6.5004,8.5 L18.5004,8.5 Z M1.8623,8.8693 L1.4753,8.8693 L1.4753,11.0283 L1.9843,11.0283 C2.3013,11.0283 2.5853,10.7603 2.5853,10.4623 C2.5853,10.0713909 2.27786198,9.92097769 2.01460128,9.89686048 L1.9373,9.8933 L1.9373,9.7853 C2.0923,9.7853 2.4353,9.6783 2.4353,9.3333 C2.4353,8.9793 2.1923,8.8693 1.8623,8.8693 Z M2.783,1.9997 L4.096,5.8977 L2.963,5.8977 C2.963,5.8977 2.147,3.3737 2.063,3.0137 L2.063,3.0137 L2.039,3.0137 C1.955,3.3737 1.127,5.8977 1.127,5.8977 L1.127,5.8977 L-2.25597319e-13,5.8977 L1.319,1.9997 L2.783,1.9997 Z M15.5004,2.5 C16.3294,2.5 17.0004,3.171 17.0004,4 C17.0004,4.829 16.3294,5.5 15.5004,5.5 L6.5004,5.5 C5.6714,5.5 5.0004,4.829 5.0004,4 C5.0004,3.171 5.6714,2.5 6.5004,2.5 L15.5004,2.5 Z",
				fill: "inherit"
			})))
		},
		"./src/reddit/icons/svgs/RadioOff/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_11Rht_b1e-kmk12gkz7Lug"
			}
		},
		"./src/reddit/icons/svgs/RadioOff/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/RadioOff/index.m.less"),
				a = n.n(i);

			function c() {
				return (c = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => s.a.createElement("svg", c({}, e, {
				className: Object(r.a)(a.a.icon, e.className),
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}), s.a.createElement("g", {
				fill: "inherit"
			}, s.a.createElement("path", {
				d: "M10,1.66666667 C5.39762708,1.66666667 1.66666667,5.39762708 1.66666667,10 C1.66666667,14.6023729 5.39762708,18.3333333 10,18.3333333 C14.6023729,18.3333333 18.3333333,14.6023729 18.3333333,10 C18.3333333,5.39762708 14.6023729,1.66666667 10,1.66666667 Z M10,0 C15.5228475,-1.01453063e-15 20,4.4771525 20,10 C20,15.5228475 15.5228475,20 10,20 C4.4771525,20 6.76353751e-16,15.5228475 0,10 C-6.76353751e-16,4.4771525 4.4771525,1.01453063e-15 10,0 Z"
			})))
		},
		"./src/reddit/icons/svgs/RadioOn/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);

			function r() {
				return (r = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => s.a.createElement("svg", r({}, e, {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}), s.a.createElement("g", {
				fill: "inherit"
			}, s.a.createElement("path", {
				d: "M10,6.66666667 C8.15905083,6.66666667 6.66666667,8.15905083 6.66666667,10 C6.66666667,11.8409492 8.15905083,13.3333333 10,13.3333333 C11.8409492,13.3333333 13.3333333,11.8409492 13.3333333,10 C13.3333333,8.15905083 11.8409492,6.66666667 10,6.66666667 Z M10,0 C15.5228475,-1.01453063e-15 20,4.4771525 20,10 C20,15.5228475 15.5228475,20 10,20 C4.4771525,20 6.76353751e-16,15.5228475 0,10 C-6.76353751e-16,4.4771525 4.4771525,1.01453063e-15 10,0 Z"
			})))
		},
		"./src/reddit/icons/svgs/Replay/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);

			function r() {
				return (r = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			t.a = e => s.a.createElement("svg", r({}, e, {
				viewBox: "13 12 23 23",
				xmlns: "http://www.w3.org/2000/svg"
			}), s.a.createElement("g", null, s.a.createElement("path", {
				d: "M32.5 23.3c-.7 0-1.2.5-1.2 1.2 0 4-3.2 7.2-7.2 7.2s-7.2-3.2-7.2-7.2c0-3.6 2.7-6.6 6.2-7.1v1.7c0 .2.1.4.3.5.1 0 .2.1.3.1.1 0 .3 0 .4-.1l3.6-3c.1-.1.2-.3.2-.5s-.1-.3-.2-.5l-3.7-3c-.2-.1-.4-.2-.6-.1-.2.1-.4.3-.4.6V15c-4.8.5-8.6 4.6-8.6 9.5 0 5.3 4.3 9.6 9.6 9.6s9.6-4.3 9.6-9.6c.1-.7-.5-1.2-1.1-1.2",
				fill: "inherit"
			})))
		},
		"./src/reddit/icons/svgs/Search/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("path", {
				d: "M15.59,13.91l2.78,2.69a1.25,1.25,0,1,1-1.74,1.8l-2.82-2.73a8,8,0,1,1,1.78-1.76ZM14.64,9.2A5.45,5.45,0,1,0,9.2,14.64,5.45,5.45,0,0,0,14.64,9.2Z"
			}))
		},
		"./src/reddit/icons/svgs/Send/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				id: e.id,
				viewBox: "0 0 18 18",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "inherit"
			}, s.a.createElement("path", {
				d: "M17.98 8.87c-.012-.093-.03-.182-.062-.27-.017-.043-.034-.085-.055-.126-.013-.026-.02-.057-.034-.082l-.07-.1c-.018-.02-.04-.03-.055-.046-.073-.083-.158-.145-.252-.204-.032-.02-.053-.055-.088-.072L3.88 1.12c-.35-.176-.764-.158-1.096.05-.332.208-.534.576-.534.973V5c0 .507.33.954.81 1.097L9 7.857H3.375c-.175 0-.347.04-.503.12L.622 9.12c-.48.243-.724.8-.582 1.325.135.5.582.84 1.085.84.027 0 .054 0 .08-.003l1.045-.075v4.65c0 .396.202.764.534.972.18.112.386.17.59.17.173 0 .346-.04.505-.12l13.483-6.85c.08-.044.134-.075.184-.113.05-.038.092-.085.136-.13.012-.013.026-.022.037-.036.092-.107.147-.21.19-.32.013-.03.02-.06.03-.09.013-.045.033-.086.042-.132.008-.046.013-.09.017-.138 0-.023-.008-.043-.008-.063 0-.017.008-.03.008-.048 0-.032-.017-.058-.02-.09z"
			})))
		},
		"./src/reddit/icons/svgs/Shirt/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = function(e) {
				let {
					className: t
				} = e;
				return s.a.createElement("svg", {
					className: t,
					xmlns: "http://www.w3.org/2000/svg",
					viewBox: "0 0 20 20"
				}, s.a.createElement("g", {
					fill: "inherit"
				}, s.a.createElement("path", {
					d: "M7 1.75a.486.486 0 01.487.4 2.574 2.574 0 005.085 0 .488.488 0 01.488-.4h1.583A.5.5 0 0115 1.9l3.951 4.09a.5.5 0 01-.006.7l-1.931 1.938a.5.5 0 01-.649.05l-1.482-1.084.007 10.156a.5.5 0 01-.5.5H5.385a.5.5 0 01-.5-.5l.007-10.156L3.7 8.626a.5.5 0 01-.677-.026L1.115 6.694a.5.5 0 01-.006-.7L5.06 1.9a.5.5 0 01.359-.153z"
				})))
			}
		},
		"./src/reddit/icons/svgs/SnooPosting/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 45 43"
			}, s.a.createElement("g", {
				fill: "none",
				fillRule: "evenodd"
			}, s.a.createElement("g", {
				fill: "#0DD3BB",
				transform: "translate(0 4)"
			}, s.a.createElement("ellipse", {
				cx: "25.492",
				cy: "22.2631",
				transform: "rotate(5 25.492 22.263)",
				rx: "17.6396",
				ry: "13.9883"
			}), s.a.createElement("ellipse", {
				cx: "19.3519",
				cy: "17.9699",
				transform: "rotate(5 19.352 17.97)",
				rx: "14.7297",
				ry: "16.0688"
			}), s.a.createElement("ellipse", {
				cx: "14.0251",
				cy: "27.7862",
				transform: "rotate(5 14.025 27.786)",
				rx: "8.4751",
				ry: "8.9243"
			}), s.a.createElement("ellipse", {
				cx: "11.808",
				cy: "17.4531",
				transform: "rotate(5 11.808 17.453)",
				rx: "10.7695",
				ry: "10.8575"
			}), s.a.createElement("ellipse", {
				cx: "12.1168",
				cy: "22.4429",
				transform: "rotate(5 12.117 22.443)",
				rx: "8.4751",
				ry: "8.9243"
			})), s.a.createElement("path", {
				fill: "#FFF",
				d: "M35.6875 31.5625c-1.3275 1.8696-6.7017 5.0483-8.7188 6.0313-2.0174.983-13.478 2.1465-15.625-.6876-1.5625-2.0624-.9687-4.625 1-6.1562C9.6563 29.2812 8.125 27.8437 7 24.9062c-.0872-.2277-1.1015-1.763-.875-1.7812l.9375-4.0313c.8158-2.9308 4.2118-5.1638 6.7992-6.5715 2.3198-1.2615 4.9067-1.934 7.5113-2.1714 2.1052-.192 4.259-.101 6.277.554 2.0182.6552 4.2956 1.063 5.5063 2.8765 0 0 1.5532 3.6305 1.6736 5.5487.1204 1.9177-2.0402 6.1206-2.0402 6.1206"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M31.5665 34.5708c.6293 1.944.9 4.0143.794 6.0635 0 0-.473 1.3654-6.7204 1.3654-6.2478 0-7.6077-.7104-7.6077-.7104.047-1.224.0518-2.4493.014-3.6732-.0028-.097.0414-.2356.13-.2062l-.1555-7.319 12.5354-2.0634c.4433.252.8525.5696 1.211.9412l-.2007 5.6022z"
			}), s.a.createElement("path", {
				fill: "#FF0",
				d: "M34.0514 21.4676c-.3642.8707-.5738 1.8017-.8143 2.7188-.601 2.29-1.4044 4.5218-2.3967 6.658.1578.0357.3286.0014.4624-.0927.072.7567 1.0046 1.1686 1.678.8836.6734-.2846 1.071-1.0334 1.2235-1.777.0223-.1084.0407-.2198.0277-.33-.0202-.1737-.114-.3265-.1996-.477-.6817-1.2056-.9025-2.6877-.6033-4.0528.099-.4518.2715-.9186.6318-1.1878.2046-.1536.452-.2293.6975-.2872.6156-.146 1.2512-.198 1.8812-.154l.33-1.1467c.054-.1864.108-.3773.0993-.572-.0212-.4554-.393-.8263-.8058-.9727-.412-.1463-.8604-.115-1.2947-.0823"
			}), s.a.createElement("path", {
				fill: "#F15A24",
				d: "M12.322 21.7194c.061.3407.127.693.3168.977.3034.4517.85.6324 1.3573.785.3797.1136.7785.2284 1.165.141.2643-.0598.5012-.2104.725-.3697.61-.433 1.1792-.9615 1.5326-1.6395.3962-.7593.4926-1.684.2625-2.5148-.0912-.3294-.2458-.6615-.524-.843-.2292-.1494-.5564-.2205-.6293-.4927-.1057-.3946-1.938-.4537-2.25-.4202-.474.051-.939.1728-1.2797.5403-.9068.9784-.8953 2.613-.676 3.8366M24.194 19.0418c.0644.3482.1334.708.3344.998.3193.462.8963.6468 1.431.8023.4005.1164.8212.234 1.2286.1447.2793-.0614.529-.2154.7647-.3776.644-.443 1.244-.983 1.617-1.6756.4174-.776.5195-1.7205.2768-2.5694-.0964-.3366-.2596-.6762-.5526-.8614-.242-.1528-.587-.2255-.664-.5037-.1117-.4033-2.0443-.464-2.3736-.4297-.4998.052-.9902.1766-1.3498.5523-.9564 1-.9442 2.67-.7126 3.9202"
			}), s.a.createElement("path", {
				fill: "#CCC",
				d: "M35.9408 20.9708c.222.0064.4462.0053.6533.066.4068.1196.9188.5786.945-.1845.007-.1902.012-.3904-.0708-.56-.122-.251-.5983-.9602-.824-1.087-.1087-.061-.236-.0694-.359-.073-.3063-.0092-.613.0014-.9182.0315-.9906.0986-.7374 1.4513.01 1.725.177.0647.3693.0764.5638.082"
			}), s.a.createElement("path", {
				fill: "#FF7BAC",
				d: "M37.8215 19.8532c-.0306.0467-.0694.0968-.123.099-.0946.0034-.1258-.128-.1816-.2085-.0644-.0938-.1824-.1258-.29-.1506-.4784-.112-1.163-.1415-1.5974-.3738-.4688-.251-.4095-.3117-.2434-.8975.178-.6268.4606-1.3722 1.071-1.6617 2.0532-.9728 2.1506 1.9814 1.3643 3.1932"
			}), s.a.createElement("path", {
				fill: "#FF0",
				d: "M30.808 32.959c.0077.0694.0343.1556.1004.1593-.0834-.0335-.1158.1122-.095.203.429.0508.8583.1012 1.2877.152.263.0313.5674.0482.752-.151.1304-.141.16-.3512.1825-.5462.032-.274.064-.548.0964-.822.0082-.0724.0135-.1552-.0336-.2086-.034-.0388-.087-.051-.137-.0588-.219-.0327-.446-.0064-.6532.075-.6713.2642-.6634-.6747-1.1966-.4688-.4516.1747-.346 1.279-.3035 1.6663"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M31.9858 34.3613c.3538.146.738.196 1.1182.2014 2.1213.03 4.1668-1.396 5.0646-3.4086.8978-2.0117.661-4.4994-.4998-6.3584-.514-.8238-1.3235-1.5857-2.2608-1.5168-.594.0433-1.1344.429-1.4745.9404-.3405.5112-.499 1.1347-.552 1.7558-.1233 1.4442.3143 2.9324 1.1923 4.053"
			}), s.a.createElement("path", {
				fill: "#F7E1CB",
				d: "M11.2195 30.4984l9.4083-2.7606 1.318 7.9058-7.4904 2.7607"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M12.7516 37.7683c.2136.2304.5864.1393.8525-.0207 1.096-.6588 1.5454-2.1516 1.337-3.4564-.108-.6758-.3805-1.3463-.877-1.792-.4966-.446-1.243-.6212-1.827-.3125-.402.212-.682.6167-.8776 1.041-.4437.9637-.5192 2.107-.206 3.1258.1683.548.462 1.0782.9255 1.388.4637.3095 1.1184.3464 1.543-.0195"
			}), s.a.createElement("g", null, s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M27.37 11.0563c-2.068-.6386-4.2747-.727-6.4318-.54-2.669.2313-5.8933.8336-7.6967 2.1168-.6986.4972-3.0193 1.2145-3.5257 3.1977"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M10.0543 14.9054c-1.561-.3985-3.317.0782-4.4594 1.2103-1.1422 1.132-1.726 2.906-1.237 4.4356.5752 1.8004 1.926 3.0712 2.306 3.275"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M10.0543 14.9054c-1.561-.3985-3.317.0782-4.4594 1.2103-1.1422 1.132-1.7258 2.906-1.237 4.4356.5756 1.8004 1.926 3.0712 2.306 3.275"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M11.823 29.9606c-2.7657-.9024-4.92-3.4455-5.3476-6.3126-.034-.2298.0103-.55.2428-.5677M33.1486 15.4973c.192.314.384.6286.576.9427.114.1872.2283.374.33.5677.5276 1.003.7084 2.182.5062 3.2958M35.8308 16.6844c-1.6376 4.9262-3.3644 9.8235-5.1785 14.688"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M35.671 17.0804c.2263-.288.586-.4587.9517-.4895.366-.0313.736.0692 1.0563.2483.2708.1508.515.364.6543.6404.1393.276.161.6202.0118.8913M38.3983 17.8874c-.6142 1.9982-1.3304 3.9652-2.145 5.891"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M37.245 21.08c.2485-.5347.1342-1.2158-.2747-1.641-.4093-.425-1.0872-.5678-1.6347-.3436-.1367.0562-.278.1512-.301.297"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M37.2275 21.501c.0044-.5535-.3094-1.0984-.791-1.374-.482-.2753-1.113-.2705-1.5904.012"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M34.2996 20.788c.7136-.389 1.6686-.2757 2.2706.269.2052.1856.376.4304.3964.706.006.0785-.0008.1578-.0196.2345M31.8127 33.921c.3626.1424.7564.1912 1.1458.1963 2.1737.0294 4.2697-1.3607 5.1896-3.3225.92-1.961.6773-4.386-.512-6.1982-.5268-.803-1.3562-1.5457-2.3166-1.4785-.6087.0423-1.1624.4184-1.511.9168-.3488.4983-.5113 1.106-.5655 1.7115-.1264 1.4077.322 2.8584 1.2216 3.9508M33.9912 29.3915l-1.467 4.0393M32.6352 33.0774c-.951.6286-1.8904 1.2738-2.8177 1.935"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M30.6496 31.0486l-.6455 4.1743c-.0058.0366-.0053.083.0385.099.044.0162.0833-.0547.0346-.0517"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M30.1422 33.367c.1982-.3278.4635-.6147.7748-.8386.078.1534.1257.3226.139.4943.287-.1218.5986-.183.9103-.1802-.3703.3692-.701.778-.9844 1.2173"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M31.195 33.0817c-.389.5013-.7464 1.0268-1.0695 1.5725.0302-.0257.0604-.0514.0902-.0775M30.7412 32.969c.0104.3634-.12.7275-.3766 1.0607M32.6658 33.0168c.1094-.676.1787-1.3585.2074-2.0422-.326.1956-.6525.3912-.979.5872-.1045.0627-.2386.1262-.3414.06-.063-.04-.091-.1166-.1135-.1874-.133-.4158-.2417-.8396-.3253-1.2682-.291.3247-.547.6807-.7626 1.0594"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M33.4372 28.176c-.177.4906-.354.9812-.5313 1.472-.285.7874-.5726 1.5822-1.0206 2.291M36.2456 21.1264c.048-.0176.0608-.0917.0218-.1244-.3043.6815-.5497 1.3883-.732 2.1112M30.4806 30.95c-.0843.2098-.1095.43-.074.6453M32.6366 25.235c-1.3602 1.8225-3.2855 3.1704-5.3524 4.1286-2.0672.958-4.284 1.55-6.5023 2.0763M30.348 27.747c.454.2455.8732.5552 1.24.9174M31.3832 34.1252c.6447 1.895.9225 3.913.8134 5.9105"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M20.2203 27.5033c.529 2.5225.9453 5.069 1.2474 7.6282.0048.042.0063.0925-.0276.1178-.0345.0253-.095-.029-.0603-.0536"
			}), s.a.createElement("path", {
				stroke: "#000",
				d: "M21.462 35.1753c-2.4317 1.1842-4.9882 2.113-7.614 2.7662-.0714.0177-.1587.031-.208-.023-.0494-.0544.038-.1667.0828-.1083",
				strokeLinecap: "round",
				strokeLinejoin: "round"
			}), s.a.createElement("path", {
				stroke: "#000",
				d: "M13.3965 36.9094l.6482 1.51c-.01-.0428-.0207-.086-.0312-.129",
				strokeLinecap: "round",
				strokeLinejoin: "round"
			}), s.a.createElement("path", {
				stroke: "#000",
				d: "M12.104 37.242c.219.2246.601.1358.8735-.0202 1.123-.6422 1.5835-2.0972 1.3698-3.369-.111-.659-.3898-1.3124-.8986-1.747-.5087-.4348-1.2736-.6054-1.872-.3045-.4118.2066-.6988.601-.8992 1.0147-.4546.9394-.532 2.054-.211 3.047.1723.5342.4733 1.051.9482 1.353.4753.3016 1.1462.3376 1.5813-.019M10.6766 30.3595c-.0715-.0158-.065.1064-.022.1655l.7927 1.0914c.011.0154.0276.0326.0457.0264.018-.006.0015-.0418-.01-.0268M10.6893 30.2222c3.1114-1.025 6.255-1.953 9.425-2.782.0814.1758.1628.352.2443.5274",
				strokeLinecap: "round",
				strokeLinejoin: "round"
			}), s.a.createElement("path", {
				stroke: "#000",
				d: "M17.6433 28.0588c-.2222-.2202-.246-.6037-.5073-.7755-.2244-.148-.522-.0737-.7792.0048-1.0368.3175-2.073.6346-3.11.952-.2287.07-.4843.163-.579.382-.1275.2944.111.6096.332.843M13.849 27.877c-.025-.1897.085-.3783.2402-.4906.1554-.1123.349-.1592.5393-.1816.302-.0364.678.0275.7848.3115M17.774 36.8926c-.1595-.0286-.2392.1064-.234.201.068 1.193.0596 2.3876-.0247 3.5806M27.3276 14.627c-1.155-.254-2.4348.1776-3.1982 1.0778-.763.9005-.975 2.23-.5294 3.3214.203.498.537.9487.9825 1.252.757.5157 1.7714.556 2.64.263.9157-.3095 1.7137-.983 2.115-1.8592.401-.8763.3797-1.9464-.108-2.7783-.4875-.8312-1.447-1.3828-2.412-1.3303",
				strokeLinecap: "round",
				strokeLinejoin: "round"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeWidth: ".5",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M15.604 17.5287c-.993-.5754-2.3376-.3743-3.2093.371-.872.745-1.2777 1.9505-1.1753 3.0903.038.4224.1422.845.359 1.2103.4368.7372 1.309 1.1618 2.168 1.1684.8592.007 1.6937-.3673 2.346-.924.2724-.2316.518-.497.7086-.799.465-.738.5666-1.6924.2675-2.511-.2992-.8188-.993-1.485-1.8255-1.7524"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M25.8734 23.061c.019.8443.036 1.706-.2144 2.513-.3128 1.0058-1.0497 1.8733-1.9936 2.347-.9442.4738-2.0827.547-3.0803.1982"
			}), s.a.createElement("path", {
				fill: "#000",
				d: "M24.826 27.045c-.909 1.0263-2.4282 1.5463-3.7262 1.098-.325-.1124-.682-.385-.5983-.7172-.305-.1123-.6554.132-.9616.024-.1132-.0405-.2045-.124-.2882-.21-.507-.519-.8602-1.1846-1.0054-1.894 1.3742.2257 2.797.237 4.147-.1035.6403-.1614 1.2614-.404 1.8365-.7284.2493-.1406 1.482-1.2717 1.6324-1.2287.3404.0972-.014 1.6884-.081 1.9398-.1798.6673-.4952 1.3003-.9554 1.82"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M24.826 27.045c-.909 1.0263-2.4282 1.5463-3.7262 1.098-.325-.1124-.682-.385-.5983-.7172-.305-.1123-.6554.132-.9616.024-.1132-.0405-.2045-.124-.2882-.21-.507-.519-.8602-1.1846-1.0054-1.894 1.3742.2257 2.797.237 4.147-.1035.6403-.1614 1.2614-.404 1.8365-.7284.2493-.1406 1.482-1.2717 1.6324-1.2287.3404.0972-.014 1.6884-.081 1.9398-.1798.6673-.4952 1.3003-.9554 1.82z"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M27.1593 11.0486c.356-.539.901-.9515 1.5182-1.148.3725-.1184.7656-.1595 1.157-.1632 1.2186-.011 2.452.3553 3.4137 1.1013.9616.7464 1.63 1.8822 1.7275 3.0925l.0405 1.2437c.0792.8083-.1735 1.644-.687 2.274-.0244.03-.0506.0716-.0296.1038.021.0323.0833-.0212.0465-.033"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M27.1593 11.0486c.356-.539.901-.9515 1.5182-1.148.3725-.1184.7656-.1595 1.157-.1632 1.2186-.011 2.452.3553 3.4137 1.1013.9616.7464 1.63 1.8822 1.7275 3.0925l.0405 1.2437c.0792.8083-.1735 1.644-.687 2.274-.0244.03-.0506.0716-.0296.1038.021.0323.0833-.0212.0465-.033M19.0092 10.923c-.1602-.079-.1772-.2954-.172-.4733.078-2.7703.1672-5.5993 1.1384-8.1964 1.835.0793 3.6632.3303 5.4515.7494"
			}), s.a.createElement("path", {
				fill: "#FFF",
				d: "M24.8624 3.1944c-.9362 1.032-.8485 2.7633.0626 3.8172.9108 1.0536 2.4758 1.4224 3.826 1.0687.64-.1677 1.2505-.4896 1.6915-.981 1.0054-1.121.9137-2.9152.1555-4.215-.237-.407-.534-.784-.9052-1.075-.72-.5643-1.7132-.7643-2.597-.5235-.883.241-1.6355.917-1.9667 1.768"
			}), s.a.createElement("path", {
				stroke: "#000",
				strokeLinecap: "round",
				strokeLinejoin: "round",
				d: "M24.8624 3.1944c-.9362 1.032-.8485 2.7633.0626 3.8172.9108 1.0536 2.4758 1.4224 3.826 1.0687.64-.1677 1.2505-.4896 1.6915-.981 1.0054-1.121.9137-2.9152.1555-4.215-.237-.407-.534-.784-.9052-1.075-.72-.5643-1.7132-.7643-2.597-.5235-.883.241-1.6355.917-1.9667 1.768"
			}))))
		},
		"./src/reddit/icons/svgs/TextPost/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_13NhOjx-Siom7MKe3Dex5y"
			}
		},
		"./src/reddit/icons/svgs/TextPost/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/TextPost/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("path", {
				fill: "inherit",
				fillRule: "evenodd",
				d: "M16.8656 7.205H13.139c-.3428 0-.621-.2782-.621-.621 0-.343.2782-.621.621-.621h3.7266c.343 0 .621.278.621.621 0 .3428-.278.621-.621.621zm0 3.416H13.139c-.3428 0-.621-.2782-.621-.621s.2782-.621.621-.621h3.7266c.343 0 .621.2782.621.621s-.278.621-.621.621zm0 3.416H3.2016c-.343 0-.621-.278-.621-.621 0-.3428.278-.621.621-.621h13.664c.343 0 .621.2782.621.621 0 .343-.278.621-.621.621zm-13.664 3.416c-.343 0-.621-.278-.621-.621 0-.3428.278-.621.621-.621h13.664c.343 0 .621.2782.621.621 0 .343-.278.621-.621.621H3.2016zm-.621-14.285c0-.343.278-.621.621-.621h6.5997c.343 0 .621.278.621.621V10c0 .3428-.278.621-.621.621H3.2016c-.343 0-.621-.2782-.621-.621V3.168zM1.3382.0625C.6513.0625.096.6178.096 1.3047v17.3906c0 .687.5554 1.2422 1.2423 1.2422H18.729c.6868 0 1.242-.5553 1.242-1.2422V1.3047c0-.687-.5552-1.2422-1.242-1.2422H1.3382z"
			}))
		},
		"./src/reddit/icons/svgs/ThumbnailSelect/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_3QNLLzw_kUPhkWkxg22tT9"
			}
		},
		"./src/reddit/icons/svgs/ThumbnailSelect/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/ThumbnailSelect/index.m.less"),
				a = n.n(i);
			t.a = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg"
			}, s.a.createElement("g", {
				fill: "none",
				fillRule: "evenodd"
			}, s.a.createElement("path", {
				d: "M0 0h20v20H0z"
			}), s.a.createElement("path", {
				fill: "#A5A4A4",
				d: "M6 3h8c1.1046 0 2 .8954 2 2v10c0 1.1046-.8954 2-2 2H6c-1.1046 0-2-.8954-2-2V5c0-1.1046.8954-2 2-2zm11 1c1.1046 0 2 .8954 2 2v8c0 1.1046-.8954 2-2 2V4zM3 4v12h-.6667C1.597 16 1 15.1734 1 14.1538V5.8462C1 4.8266 1.597 4 2.3333 4H3z"
			})))
		},
		"./src/reddit/icons/svgs/Trash2/index.m.less": function(e, t, n) {
			e.exports = {
				icon: "_1Fa4RPHlhrfUZuNaXK2-eP"
			}
		},
		"./src/reddit/icons/svgs/Trash2/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return c
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/reddit/icons/svgs/Trash2/index.m.less"),
				a = n.n(i);
			const c = e => s.a.createElement("svg", {
				className: Object(r.a)(a.a.icon, e.className),
				viewBox: "0 0 20 20",
				xmlns: "http://www.w3.org/2000/svg",
				onClick: e.onClick
			}, s.a.createElement("path", {
				d: "M16.5,2H12.71l-.85-.85A.5.5,0,0,0,11.5,1h-3a.5.5,0,0,0-.35.15L7.29,2H3.5a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5h13a.5.5,0,0,0,.5-.5v-1A.5.5,0,0,0,16.5,2Z"
			}), s.a.createElement("path", {
				d: "M16.5,5H3.5a.5.5,0,0,0-.5.5v12A1.5,1.5,0,0,0,4.5,19h11A1.5,1.5,0,0,0,17,17.5V5.5A.5.5,0,0,0,16.5,5ZM6.75,15.5a.75.75,0,0,1-1.5,0v-7a.75.75,0,0,1,1.5,0Zm4,0a.75.75,0,0,1-1.5,0v-7a.75.75,0,0,1,1.5,0Zm4,0a.75.75,0,0,1-1.5,0v-7a.75.75,0,0,1,1.5,0Z"
			}));
			t.b = c
		},
		"./src/reddit/icons/svgs/Video/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o);
			t.a = e => s.a.createElement("svg", {
				className: e.className,
				xmlns: "http://www.w3.org/2000/svg",
				viewBox: "0 0 20 20"
			}, s.a.createElement("g", {
				transform: "translate(3, 4)"
			}, s.a.createElement("path", {
				d: "M15.4927,2.1514 C15.1797,1.9734 14.7947,1.9784 14.4857,2.1644 L11.9997,3.6554 L11.9997,2.0004 C11.9997,0.8974 11.1027,0.0004 9.9997,0.0004 L1.9997,0.0004 C0.8967,0.0004 -0.0003,0.8974 -0.0003,2.0004 L-0.0003,10.0004 C-0.0003,11.1034 0.8967,12.0004 1.9997,12.0004 L9.9997,12.0004 C11.1027,12.0004 11.9997,11.1034 11.9997,10.0004 L11.9997,8.3664 L14.4907,9.8394 C14.6477,9.9324 14.8237,9.9784 14.9997,9.9784 C15.1707,9.9784 15.3417,9.9344 15.4957,9.8474 C15.8077,9.6694 15.9997,9.3384 15.9997,8.9784 L15.9997,3.0214 C15.9997,2.6614 15.8057,2.3284 15.4927,2.1514"
			})))
		},
		"./src/reddit/layout/page/Listing/BackgroundContainer.m.less": function(e, t, n) {
			e.exports = {
				backgroundContainer: "_2wxsLGNmMLx6sEMLJyn2o9"
			}
		},
		"./src/reddit/layout/page/Listing/BackgroundContainer.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return p
			}));
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/lib/classNames/index.ts"),
				i = n("./src/lib/CSSVariableProvider/withTheme.tsx"),
				a = n("./src/reddit/models/Theme/index.ts"),
				c = n("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				l = n("./src/reddit/layout/page/Listing/BackgroundContainer.m.less"),
				d = n.n(l);

			function u() {
				return (u = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const p = Object(i.a)(e => {
				const {
					backgroundColor: t,
					className: n,
					redditStyle: o,
					theme: i,
					...l
				} = e, p = Object(c.a)(e), m = {
					"--pseudo-before-background": t || Object(a.f)(p.canvas, p.canvasImgUrl, p.canvasImgPosition)
				};
				return s.a.createElement("div", u({
					className: Object(r.a)(d.a.backgroundContainer, n),
					style: m
				}, l))
			})
		},
		"./src/reddit/layout/page/Listing/Content.m.less": function(e, t, n) {
			e.exports = {
				styledContent: "_1OVBBWLtHoSPfGCRaPzpTf",
				mCanFlexFullWidth: "PaJBYLqPf_Gie2aZntVQ7",
				mLargePostLayout: "_3nSp9cdBpqL13CqjdMr2L_",
				mDisableFullScreen: "_2udhMC-jldHp_EpAuBeSR1",
				mClassicWidth: "_1Tc65kRFm7a8piCXHVL4L4",
				mIsEditing: "_25-JsrYQ-pXWBM8eqpxeN7",
				onlyChildMargin: "_2OVNlZuUd8L9v0yVECZ2iA"
			}
		},
		"./src/reddit/layout/page/Listing/Content.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/reddit/constants/postLayout.ts"),
				l = n("./src/reddit/contexts/PageLayer/index.tsx"),
				d = n("./src/reddit/selectors/structuredStyles.ts"),
				u = n("./src/reddit/layout/page/Listing/Content.m.less"),
				p = n.n(u);

			function m() {
				return (m = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const h = Object(l.v)(),
				b = Object(i.c)({
					isEditing: d.i,
					layout: (e, t) => t.forcedLayout || Object(l.U)(e, t)
				}),
				f = Object(r.b)(b);
			t.a = h(f(e => {
				let {
					className: t,
					hideOnlyChildMargin: n,
					disableFullscreen: o,
					dispatch: r,
					fitPageToContent: i,
					forcedLayout: d,
					isCollectionLayout: u,
					isEditing: h,
					layout: b,
					pageLayer: f,
					...g
				} = e;
				return s.a.createElement("div", m({
					className: Object(a.a)(t, p.a.styledContent, {
						[p.a.mLargePostLayout]: b === c.g.Large || Object(l.R)(f),
						[p.a.mDisableFullScreen]: o && !u,
						[p.a.mClassicWidth]: u,
						[p.a.mIsEditing]: !!h,
						[p.a.mCanFlexFullWidth]: !i,
						[p.a.onlyChildMargin]: !n
					})
				}, g))
			}))
		},
		"./src/reddit/layout/page/Listing/index.m.less": function(e, t, n) {
			e.exports = {
				body: "_31N0dvxfpsO6Ur5AKx4O5d",
				sidebar: "_3Kd8DQpBIbsr5E1JcrMFTY",
				defaultLayout: "_1tvThPWQpORoc2taKebHxs",
				"m-collectionLayout": "K1OCXipJxqOt01sOdQXEx",
				mCollectionLayout: "K1OCXipJxqOt01sOdQXEx",
				outerContainer: "qYj03fU5CXf5t2Fc5iSvg",
				outerContainerExp: "_35NDNOyTzBcywfeEavUt6p",
				innerContainer: "_3ozFtOe6WpJEMUtxDOIvtU",
				bannerNavContainer: "q4a8asWOWdfdniAbgNhMh"
			}
		},
		"./src/reddit/layout/page/Listing/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/reddit/layout/page/Listing/BackgroundContainer.tsx"),
				i = n("./src/reddit/layout/page/Listing/Content.tsx"),
				a = n("./src/lib/classNames/index.ts"),
				c = n("./src/reddit/constants/componentSizes.ts"),
				l = n("./src/reddit/constants/elementClassNames.ts"),
				d = n("./src/reddit/constants/screenWidths.ts"),
				u = n("./src/reddit/contexts/NavbarExp.ts"),
				p = n("./node_modules/classnames/index.js"),
				m = n.n(p),
				h = n("./node_modules/react-router-dom/esm/react-router-dom.js"),
				b = n("./src/lib/constants/icons.ts"),
				f = n("./src/reddit/components/SubredditIcon/index.tsx"),
				g = n("./src/reddit/icons/fonts/index.tsx"),
				v = n("./src/reddit/components/BackToSubreddit/index.m.less"),
				x = n.n(v);
			var C = e => {
					const {
						subredditName: t
					} = e, n = `/${t}`;
					return s.a.createElement(h.a, {
						className: x.a.backToSubreddit,
						to: n
					}, s.a.createElement("div", {
						className: x.a.innerContainer
					}, s.a.createElement(g.a, {
						name: b.a.back,
						className: m()(x.a.content, x.a.back)
					}), s.a.createElement(f.b, {
						className: m()(x.a.content, x.a.subredditIcon)
					}), s.a.createElement("span", {
						className: m()(x.a.content, x.a.title)
					}, t)))
				},
				E = n("./src/reddit/components/StructuredStyles/BladeManager/index.tsx"),
				y = n("./src/reddit/layout/page/Listing/index.m.less"),
				O = n.n(y);
			t.a = e => {
				const {
					backgroundColor: t,
					backToSubredditName: n,
					className: p,
					containerRef: m,
					content: h,
					contentBanner: b,
					contentClassName: f,
					contentNavBar: g,
					disableFullscreen: v,
					fitPageToContent: x,
					forcedLayout: y,
					hideOnlyChildMargin: k,
					isCollectionLayout: _,
					isPageSwapped: j,
					maxWidth: S,
					navBar: T,
					redditStyle: w,
					sidebar: I,
					sidebars: P,
					trendingUnit: M,
					subredditId: R
				} = e, N = M ? "28px" : "0", D = j ? {
					marginRight: `${c.p}px`,
					marginTop: N
				} : {
					marginLeft: `${c.p}px`,
					marginTop: N
				}, L = I && s.a.createElement("div", {
					className: Object(a.a)(O.a.sidebar, _ ? O.a["m-collectionLayout"] : O.a.defaultLayout),
					style: D
				}, I), A = s.a.createElement(i.a, {
					hideOnlyChildMargin: k,
					className: f,
					disableFullscreen: v,
					fitPageToContent: x,
					forcedLayout: y,
					isCollectionLayout: _
				}, b, n && s.a.createElement(C, {
					subredditName: n
				}), h);
				let B;
				B = P ? s.a.createElement(s.a.Fragment, null, P[0], A, P[1]) : j ? s.a.createElement(s.a.Fragment, null, L, A) : s.a.createElement(s.a.Fragment, null, A, L);
				const F = v ? `${S||d.a+2*c.l}px` : "100%",
					U = Object(o.useContext)(u.a);
				return s.a.createElement(E.a, {
					subredditId: R
				}, s.a.createElement("div", {
					className: Object(a.a)(O.a.outerContainer, l.i, p, {
						[O.a.outerContainerExp]: U
					}),
					ref: m
				}, s.a.createElement(r.a, {
					className: l.h,
					redditStyle: w,
					backgroundColor: t
				}), s.a.createElement("div", {
					className: O.a.innerContainer
				}, T, g, (e => e.hero ? s.a.createElement(s.a.Fragment, null, e.hero) : null)(e), s.a.createElement("div", {
					style: {
						maxWidth: F
					}
				}, M), s.a.createElement("div", {
					className: O.a.body,
					style: {
						maxWidth: F
					}
				}, B))))
			}
		},
		"./src/reddit/layout/row/Inline/index.m.less": function(e, t, n) {
			e.exports = {
				inlineRow: "XZK-LTFT5CgGo9MvPQQsy"
			}
		},
		"./src/reddit/layout/row/Inline/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/layout/row/Inline/index.m.less"),
				r = n.n(s);
			t.a = o.a.div("inlineRow", r.a)
		},
		"./src/reddit/layout/row/InlineButton/index.m.less": function(e, t, n) {
			e.exports = {
				inlineButton: "_10K5i7NW6qcm-UoCtpB3aK"
			}
		},
		"./src/reddit/layout/row/InlineButton/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/layout/row/InlineButton/index.m.less"),
				r = n.n(s);
			t.a = o.a.button("inlineButton", r.a)
		},
		"./src/reddit/layout/row/RightAlign/index.m.less": function(e, t, n) {
			e.exports = {
				rightAligned: "_1sEFSGIUpFtX1hzGDyWJpr"
			}
		},
		"./src/reddit/layout/row/RightAlign/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./src/lib/lessComponent.tsx"),
				s = n("./src/reddit/layout/row/RightAlign/index.m.less"),
				r = n.n(s);
			t.a = o.a.div("rightAligned", r.a)
		},
		"./src/reddit/layout/threeCol/ExpandCenter/index.m.less": function(e, t, n) {
			e.exports = {
				leftAndRight: "_3P6gMBKOhtWWrytWm-8hc",
				center: "CEs01bewsmQQV7LRLaHib",
				expandedCenterContainer: "_2FZY7HXlkf-PdemHbQoAEt"
			}
		},
		"./src/reddit/layout/threeCol/ExpandCenter/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/higherOrderComponents/warnOnChildrenCount/index.tsx"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/layout/threeCol/ExpandCenter/index.m.less"),
				c = n.n(a);
			t.a = Object(r.a)(e => s.a.createElement("div", {
				className: Object(i.a)(c.a.expandedCenterContainer, e.className)
			}, s.a.createElement("div", {
				className: c.a.leftAndRight,
				style: {
					flexBasis: e.widthLeft
				}
			}, Array.isArray(e.children) && e.children[0]), s.a.createElement("div", {
				className: c.a.center
			}, Array.isArray(e.children) && e.children[1]), s.a.createElement("div", {
				className: c.a.leftAndRight,
				style: {
					flexBasis: e.widthRight
				}
			}, Array.isArray(e.children) && e.children[2])), 3)
		},
		"./src/reddit/layout/twoCol/ExpandLeft/index.m.less": function(e, t, n) {
			e.exports = {
				left: "_5gAwSCo7K8G413IoE78Ml",
				right: "_2ghjBMFIsORwdO3oh2Kq6g",
				exapndLeftContainer: "_1zTJo0Ndih4fp__5DjbClN"
			}
		},
		"./src/reddit/layout/twoCol/ExpandLeft/index.tsx": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./src/higherOrderComponents/warnOnChildrenCount/index.tsx"),
				i = n("./src/lib/classNames/index.ts"),
				a = n("./src/reddit/layout/twoCol/ExpandLeft/index.m.less"),
				c = n.n(a);
			t.a = Object(r.a)(e => s.a.createElement("div", {
				className: Object(i.a)(c.a.exapndLeftContainer, e.className)
			}, s.a.createElement("div", {
				className: c.a.left
			}, Array.isArray(e.children) && e.children[0]), s.a.createElement("div", {
				className: c.a.right,
				style: {
					flexBasis: e.widthRight
				}
			}, Array.isArray(e.children) && e.children[1])), 2)
		},
		"./src/reddit/pages/ErrorPages/index.m.less": function(e, t, n) {
			e.exports = {
				primaryRouterLink: "WPSTJCepGLEWZl2fETrUM",
				container: "_3pfk0xbr5atzL7KT8pXEZG",
				title: "_3uo9iClHghoc_hoxzdgipi"
			}
		},
		"./src/reddit/pages/ErrorPages/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return d
			})), n.d(t, "a", (function() {
				return u
			}));
			var o = n("./node_modules/fbt/lib/FbtPublic.js"),
				s = n("./node_modules/react/index.js"),
				r = n.n(s),
				i = n("./src/reddit/controls/Button/index.tsx"),
				a = n("./src/reddit/pages/ErrorPages/index.m.less"),
				c = n.n(a);
			const l = e => {
					let {
						shouldReloadHome: t
					} = e;
					return t ? r.a.createElement(i.a, {
						kind: i.b.ExternalLink,
						priority: i.c.Primary,
						className: c.a.primaryRouterLink,
						href: "/"
					}, o.fbt._("Go Home", null, {
						hk: "3E9E1g"
					})) : r.a.createElement(i.a, {
						kind: i.b.InternalLink,
						priority: i.c.Primary,
						className: c.a.primaryRouterLink,
						to: "/"
					}, o.fbt._("Go Home", null, {
						hk: "3E9E1g"
					}))
				},
				d = e => {
					let {
						message: t,
						shouldReloadHome: n
					} = e;
					return r.a.createElement("div", {
						className: c.a.container
					}, r.a.createElement("h3", {
						className: c.a.title
					}, t || o.fbt._("Sorry, there doesn't seem to be anything here.", null, {
						hk: "3VvHek"
					})), r.a.createElement(l, {
						shouldReloadHome: n
					}))
				},
				u = e => {
					let {
						message: t,
						shouldReloadHome: n
					} = e;
					return r.a.createElement("div", {
						className: c.a.container
					}, r.a.createElement("h3", {
						className: c.a.title
					}, t || o.fbt._("Sorry, You do not have permission to view this page.", null, {
						hk: "4lRbHD"
					})), r.a.createElement(l, {
						shouldReloadHome: n
					}))
				}
		},
		"./src/reddit/pages/PostCreation/index.tsx": function(e, t, n) {
			"use strict";
			n.r(t);
			var o = n("./node_modules/react/index.js"),
				s = n.n(o),
				r = n("./node_modules/react-redux/es/index.js"),
				i = n("./node_modules/reselect/es/index.js"),
				a = n("./src/reddit/actions/postCreation/general.ts"),
				c = n("./src/reddit/components/JumpToContent/index.tsx"),
				l = n("./node_modules/fbt/lib/FbtPublic.js"),
				d = n("./node_modules/lodash/once.js"),
				u = n.n(d),
				p = n("./node_modules/react-router-redux/es/index.js"),
				m = n("./src/lib/classNames/index.ts"),
				h = n("./src/lib/constants/index.ts"),
				b = n("./node_modules/lodash/debounce.js"),
				f = n.n(b),
				g = n("./src/reddit/constants/experiments.ts"),
				v = n("./src/reddit/constants/keycodes.ts"),
				x = n("./src/reddit/helpers/correlationIdTracker.ts"),
				C = n("./src/reddit/models/PostCreationForm/index.ts"),
				E = n("./src/reddit/models/SubredditRestrictions/index.ts"),
				y = n("./src/reddit/pages/ErrorPages/index.tsx"),
				O = n("./src/reddit/selectors/experiments/postGuidance.ts"),
				k = n("./src/reddit/selectors/postCollection.ts"),
				_ = n("./src/reddit/selectors/postGuidance.ts"),
				j = n("./src/reddit/components/CrosspostBox/index.tsx"),
				S = n("./src/reddit/endpoints/talk/index.ts"),
				T = n("./src/reddit/hooks/useGqlContext.ts"),
				w = n("./src/reddit/selectors/experiments/econ/index.ts"),
				I = n("./src/reddit/selectors/postCreations.ts");

			function P() {
				return (P = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			var M = n("./src/reddit/components/RequestPendingBanner/index.tsx"),
				R = n("./src/reddit/components/RichTextEditor/media/helpers.ts"),
				N = n("./src/reddit/contexts/PageLayer/index.tsx"),
				D = n("./src/reddit/helpers/trackers/postComposer.ts"),
				L = n("./src/reddit/selectors/activeModalId.ts"),
				A = n("./src/reddit/selectors/platform.ts"),
				B = n("./src/reddit/selectors/postDraft.ts"),
				F = n("./src/reddit/selectors/subreddit.ts"),
				U = n("./src/reddit/selectors/user.ts"),
				K = n("./src/reddit/actions/changeUsername.ts"),
				W = n("./src/reddit/actions/externalAccount.ts"),
				H = n("./src/reddit/actions/postCreation/mediaUpload.ts"),
				q = n("./src/reddit/actions/postCreation/submit.ts"),
				z = n("./src/reddit/actions/postCreation/subredditChange.ts"),
				G = n("./src/reddit/actions/postDraft.ts"),
				V = n("./src/reddit/actions/reCaptchaEnterprise.ts"),
				Q = n("./src/reddit/actions/upload.ts"),
				J = n("./src/reddit/helpers/externalAccount/index.tsx"),
				X = n("./src/reddit/selectors/experiments/postCreationSubRec.ts"),
				Z = n("./node_modules/history/esm/history.js"),
				Y = n("./node_modules/react-router/esm/react-router.js"),
				$ = n("./src/lib/matchRoute/index.ts"),
				ee = n("./src/reddit/components/PostCreationForm/Prompt/PromptModal.tsx"),
				te = n("./src/reddit/components/TrackingHelper/index.tsx"),
				ne = n("./src/reddit/selectors/scheduledPosts/index.ts");
			const oe = "DISCARD_POST_ON_NAVIGATION_MODAL_ID",
				se = Object(i.c)({
					isEditingScheduledPost: e => !!Object(ne.r)(e),
					isScheduledPost: I.U
				});
			var re = Object(r.b)(se)(e => {
					const {
						isEditingScheduledPost: t,
						isScheduledPost: n,
						onAbort: r,
						onDiscardConfirmed: i,
						onSaveDraft: a,
						submissionType: c
					} = e, d = Object(te.b)(), u = Object(o.useCallback)(() => {
						r(), d(Object(D.l)())
					}, [r, d]);
					return h.I.has(c) && !n ? s.a.createElement(ee.a, {
						bodyText: l.fbt._("Do you want to save a draft of your post?", null, {
							hk: "3EV54t"
						}),
						onClose: r,
						onPrimaryAction: a,
						onSecondaryAction: i,
						primaryButtonText: l.fbt._("Save Draft", null, {
							hk: "1VdofA"
						}),
						secondaryButtonText: l.fbt._("Discard Post", null, {
							hk: "1CBjtn"
						}),
						titleText: l.fbt._("Save draft", null, {
							hk: "44JnYT"
						})
					}) : s.a.createElement(ee.a, {
						bodyText: t ? l.fbt._("Returning to the previous page will discard your changes", null, {
							hk: "2LlXOp"
						}) : l.fbt._("Returning to the previous page will discard your post", null, {
							hk: "3fT0mW"
						}),
						onClose: r,
						onPrimaryAction: u,
						onSecondaryAction: i,
						primaryButtonText: l.fbt._("Edit Post", null, {
							hk: "3dI1el"
						}),
						secondaryButtonText: t ? l.fbt._("Discard Changes", null, {
							hk: "7JOA"
						}) : l.fbt._("Discard Post", null, {
							hk: "1CBjtn"
						}),
						titleText: t ? l.fbt._("Discard Changes", null, {
							hk: "2vyCBa"
						}) : l.fbt._("Discard Post", null, {
							hk: "2BlkSe"
						})
					})
				}),
				ie = n("./src/reddit/routes/postCreation/index.ts");
			const ae = e => (e.returnValue = "", ""),
				ce = Object(i.c)({
					destSubreddit: I.h,
					hasError: I.w,
					havePostContent: I.D,
					isChanged: I.H,
					modalId: L.a,
					submitPostPending: I.tb
				}),
				le = Object(r.b)(ce, e => ({
					onToggleDiscardModal: () => e(a.z(oe))
				}), (e, t, n) => ({
					...e,
					...t,
					...n
				}));
			class de extends s.a.Component {
				constructor() {
					super(...arguments), this.unblockNavigation = null, this.ensureBlocked = e => {
						e.isChanged && (e.havePostContent || e.destSubreddit.name) ? this.block(e) : this.unblock()
					}, this.block = e => {
						this.unblockNavigation || (window.addEventListener("beforeunload", ae), this.unblockNavigation = e.history.block((e, t) => {
							if (!Object($.a)(Object(Z.e)(e), [ie.a])) return this.props.modalId !== oe && this.props.onToggleDiscardModal(), "Are you sure you want to leave?"
						}))
					}, this.unblock = () => {
						this.unblockNavigation && (this.unblockNavigation(), this.unblockNavigation = null), window.removeEventListener("beforeunload", ae)
					}
				}
				componentDidMount() {
					this.ensureBlocked(this.props)
				}
				componentWillReceiveProps(e) {
					!this.props.submitPostPending || e.submitPostPending || e.hasError ? this.ensureBlocked(e) : this.unblock()
				}
				componentWillUnmount() {
					this.unblock()
				}
				render() {
					return null
				}
			}
			var ue = Object(N.v)({
					draftId: N.w,
					pageLayer: e => e
				})(le(Object(Y.i)(de))),
				pe = n("./src/reddit/components/PostCreationForm/CollectionListModal/index.tsx"),
				me = n("./src/reddit/components/PostCreationForm/ControlRow/LivechatBadge/index.m.less"),
				he = n.n(me);
			const be = () => s.a.createElement("div", {
				className: he.a.container
			}, s.a.createElement("span", {
				className: he.a.liveTag
			}, l.fbt._("Live", null, {
				hk: "4o8ujy"
			})), l.fbt._("Chat Enabled", null, {
				hk: "1B6dGh"
			}));
			var fe = n("./src/telemetry/index.ts"),
				ge = n("./src/lib/lessComponent.tsx"),
				ve = n("./src/reddit/components/ContributorRequestFlow/ContributorRequestButton/index.tsx"),
				xe = n("./src/reddit/components/RichTextEditor/RTEState/index.tsx"),
				Ce = n("./src/reddit/components/ScheduledPost/PostSchedulePickerModal/loader.tsx"),
				Ee = n("./src/reddit/controls/ErrorText/index.tsx"),
				ye = n("./src/reddit/controls/LoadingIcon/index.tsx"),
				Oe = n("./src/reddit/helpers/trackers/scheduledPosts.ts"),
				ke = n("./src/reddit/icons/fonts/index.tsx"),
				_e = n("./src/reddit/models/Media/index.ts"),
				je = n("./src/reddit/models/Poll/index.ts"),
				Se = n("./src/reddit/models/Upload/index.ts"),
				Te = n("./src/reddit/selectors/moderatorPermissions.ts"),
				we = n("./src/reddit/models/Duplicates/index.ts"),
				Ie = n("./src/reddit/selectors/posts.ts");
			var Pe = n("./src/reddit/components/PostCreationForm/Button/index.tsx"),
				Me = n("./src/lib/timezone/index.ts"),
				Re = n("./src/reddit/icons/svgs/Replay/index.tsx"),
				Ne = n("./src/reddit/components/PostCreationForm/PostCreationFooter/ScheduledTimeInfo/index.m.less"),
				De = n.n(Ne);
			const {
				fbt: Le
			} = n("./node_modules/fbt/lib/FbtPublic.js"), Ae = ge.a.div("Container", De.a), Be = Object(i.c)({
				eventSchedule: I.p,
				postSchedule: I.gb
			});
			var Fe = Object(r.b)(Be)(e => {
					const {
						eventSchedule: t,
						postSchedule: n
					} = e;
					let o;
					if (t && t.submitTime !== C.j.Now) o = (e => {
						const t = Object(Me.f)(e.startDate);
						let n = `${t.toLocaleDateString(void 0,{month:"numeric",day:"numeric",year:"2-digit"})} ${t.toLocaleTimeString([],{hour:"numeric",minute:"numeric"}).replace(" ","")}`;
						const o = Object(Me.d)(e.timezoneName, +t);
						return o && (n += ` ${o.abbreviation}`), s.a.createElement("span", null, Le._("Will automatically post at", null, {
							hk: "1ixr16"
						}), " ", s.a.createElement("time", {
							dateTime: e.startDate
						}, n))
					})(t);
					else {
						if (!n) return null;
						o = (e => {
							const t = Object(Me.f)(e.submitDate);
							let n = `${t.toLocaleDateString(void 0,{month:"numeric",day:"numeric"})} ${t.toLocaleTimeString([],{hour:"numeric",minute:"numeric"}).replace(" ","")}`;
							const o = Object(Me.d)(e.timezoneName, +t);
							o && (n += ` ${o.abbreviation}`);
							const r = e.recurrenceInfo ? s.a.createElement("span", null, s.a.createElement(Re.a, {
								className: De.a.replayIcon
							}), Le._("Recurring post template scheduled for", null, {
								hk: "2tTwIB"
							})) : Le._("Post scheduled for", null, {
								hk: "47yVoo"
							});
							return s.a.createElement("span", null, r, " ", s.a.createElement("time", {
								dateTime: e.submitDate
							}, n))
						})(n)
					}
					return s.a.createElement(Ae, null, o)
				}),
				Ue = n("./src/lib/CSSVariableProvider/withTheme.tsx"),
				Ke = n("./src/lib/linkMatchers/index.ts"),
				We = n("./src/lib/makeActionCreator/index.ts"),
				He = n("./src/reddit/contexts/PageLayer/selectors.ts"),
				qe = n("./src/lib/makeApiRequest/index.ts"),
				ze = n("./src/lib/omitHeaders/index.ts"),
				Ge = n("./src/reddit/constants/headers.ts"),
				Ve = n("./src/reddit/helpers/r2/normalizeR2APIErrors/index.ts");
			var Qe = n("./src/reddit/actions/postCreation/constants.ts");
			const Je = Object(We.a)(Qe.L),
				Xe = Object(We.a)(Qe.M),
				Ze = (e, t) => async (n, o, s) => {
					let {
						apiContext: r
					} = s;
					const i = o(),
						a = Object(He.u)(i, {
							pageLayer: t
						});
					if (!a) return;
					const c = Object(I.q)(i, {
						field: e
					});
					if (!c) return;
					const d = Object(I.f)(i),
						u = await ((e, t, n, o, s) => Object(qe.a)(Object(ze.a)(e, [Ge.a]), {
							endpoint: `${e.apiUrl}/api/validate_submission_field`,
							method: h.nb.POST,
							data: {
								sr: t,
								field: n,
								kind: o,
								title: s.title || "",
								url: s.url || null,
								text: s.selftext,
								richtext_json: s.rtjson && JSON.stringify({
									document: s.rtjson
								}),
								flair_id: s.flairId || null,
								show_error_list: !0
							}
						}).then(Ve.b))(r(), a.name, e, d, c),
						p = u.error || function(e, t) {
							if (e === h.Bb.LINK && !Object(Ke.e)(Ke.c, t.url || "")) return {
								fields: [{
									field: h.Bb.LINK,
									msg: l.fbt._("Link doesn't look right", null, {
										hk: "11qrsa"
									})
								}],
								type: h.J.SUBMIT_VALIDATION_ERROR
							}
						}(e, c);
					p && p.fields && p.fields.length ? n(Je(p)) : n(Xe(e)), u.error && n(Object(q.e)(u.error))
				};
			var Ye = n("./src/reddit/components/Flair/index.tsx"),
				$e = n("./src/reddit/controls/TextButton/index.tsx"),
				et = n("./src/reddit/controls/Typography/index.tsx"),
				tt = n("./src/reddit/components/PostCreationForm/ControlRow/PostModifiers/OCDisclaimer/index.m.less"),
				nt = n.n(tt);
			const {
				fbt: ot
			} = n("./node_modules/fbt/lib/FbtPublic.js"), st = ge.a.wrapped($e.a, "DontShowButton", nt.a);
			var rt, it = ge.a.wrapped(e => {
					const {
						className: t,
						onDoNotShowClick: n
					} = e;
					return s.a.createElement("div", {
						className: t
					}, s.a.createElement(et.a, null, ot._("Use the OC tag if you want to take credit for your post as Original Content.", null, {
						hk: "2D3GYX"
					})), s.a.createElement(et.a, null, s.a.createElement(st, {
						onClick: n
					}, ot._("Cool, whatever, don't show me this again.", null, {
						hk: "4nvsEF"
					}))))
				}, "Component", nt.a),
				at = n("./src/reddit/components/RichTextEditor/HoverTooltip/index.tsx"),
				ct = n("./src/reddit/constants/colors.ts"),
				lt = n("./src/reddit/controls/Button/index.tsx");
			! function(e) {
				e.CHAT = "chat", e.FLAIR = "flair", e.GOVERNANCE = "gov", e.SPOILER = "spoiler", e.NSFW = "nsfw", e.ORIGINAL_CONTENT = "originalContent", e.SCHEDULE = "schedule"
			}(rt || (rt = {}));
			var dt = n("./src/reddit/components/PostCreationForm/ControlRow/PostModifiers/PostModifierButton/index.m.less"),
				ut = n.n(dt);
			ge.a.div("TintOverlay", ut.a);
			const pt = (e, t) => {
					switch (t) {
						case rt.ORIGINAL_CONTENT:
							return {
								backgroundColor: ct.a.orangered, textColor: e.newCommunityTheme.body, iconColor: e.newCommunityTheme.body
							};
						case rt.CHAT:
							return {
								backgroundColor: ct.a.chat, textColor: e.newCommunityTheme.lightText, iconColor: e.newCommunityTheme.lightText
							};
						case rt.SPOILER:
							return {
								backgroundColor: ct.a.spoiler, textColor: e.newCommunityTheme.lightText, iconColor: e.newCommunityTheme.lightText
							};
						case rt.NSFW:
							return {
								backgroundColor: ct.a.nsfw, textColor: e.newCommunityTheme.body, iconColor: e.newCommunityTheme.body
							};
						case rt.FLAIR:
							return {
								backgroundColor: e.newCommunityTheme.flair, textColor: e.newCommunityTheme.body, iconColor: e.newCommunityTheme.body
							};
						case rt.SCHEDULE:
							return {
								backgroundColor: e.newCommunityTheme.active, textColor: e.newCommunityTheme.body, iconColor: e.newCommunityTheme.body
							};
						case rt.GOVERNANCE:
							return {
								backgroundColor: e.newCommunityTheme.line, textColor: e.newCommunityTheme.bodyText, iconColor: e.newCommunityTheme.bodyText
							};
						default:
							return {
								backgroundColor: "none", textColor: e.newCommunityTheme.body, iconColor: e.newCommunityTheme.body
							}
					}
				},
				mt = e => Object(Ue.a)(t => {
					const {
						addModifierTooltip: n,
						children: o,
						className: r,
						disabled: i,
						disabledTooltip: a,
						Icon: c,
						id: l,
						onClick: d,
						removeModifierTooltip: u,
						style: p,
						text: h,
						theme: b,
						toggled: f
					} = t, g = i && a ? a : f ? u : n, v = {
						color: t.textColor || b && pt(b, e).textColor,
						fill: t.textColor || b && pt(b, e).iconColor,
						backgroundColor: t.backgroundColor || b && pt(b, e).backgroundColor,
						borderColor: "transparent"
					};
					return s.a.createElement(lt.t, {
						"aria-label": g,
						className: Object(m.a)(r, ut.a.PostModifierButton),
						disabled: i,
						Icon: c,
						id: l,
						onClick: d,
						priority: lt.c.Secondary,
						style: {
							...p,
							...f ? v : {}
						},
						text: h
					}, s.a.createElement(at.a, {
						text: g,
						className: ut.a.HoverTooltip,
						tooltipContentClass: t.shiftTooltipToRight ? ut.a.mShiftTooltipToTheRight : void 0
					}), o)
				});
			var ht, bt = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/index.tsx"),
				ft = n("./src/reddit/components/PostFlairPicker/index.tsx");
			! function(e) {
				e.ORIGINAL_CONTENT_DISCLAIMER = "original_content_disclaimer"
			}(ht || (ht = {}));
			var gt = n("./src/reddit/constants/postCreation.ts"),
				vt = n("./src/reddit/helpers/localStorage/index.ts"),
				xt = n("./src/reddit/helpers/trackers/postEvent.ts"),
				Ct = n("./src/reddit/icons/svgs/LiveChat/index.tsx"),
				Et = n("./src/reddit/layout/row/Inline/index.tsx"),
				yt = n("./src/reddit/models/Subreddit/index.ts"),
				Ot = n("./src/reddit/selectors/chatPost.ts");
			const kt = e => e.creations.formState.fieldValidation;
			var _t = n("./src/telemetry/models/PostComposer.ts"),
				jt = n("./src/reddit/components/PostCreationForm/ControlRow/PostModifiers/index.m.less"),
				St = n.n(jt);
			const Tt = "PostFlair--Modal--CreationForm",
				wt = e => {
					let t = Object(Me.f)(e.startDate).toLocaleDateString(void 0, {
						month: "numeric",
						day: "numeric",
						hour: "numeric",
						minute: "numeric"
					});
					return t = t.replace(" ", "").replace(",", " ")
				},
				It = ge.a.wrapped(Ye.c, "FlairComponent", St.a),
				Pt = ge.a.div("FlairTextWrapper", St.a),
				Mt = ge.a.wrapped(Et.a, "ModifierRow", St.a),
				Rt = mt(rt.ORIGINAL_CONTENT),
				Nt = mt(rt.CHAT),
				Dt = mt(rt.SPOILER),
				Lt = mt(rt.NSFW),
				At = mt(rt.FLAIR),
				Bt = mt(rt.SCHEDULE),
				Ft = Object(N.v)({
					draftId: N.w,
					pageLayer: e => e
				}),
				Ut = Object(i.c)({
					activeModalId: L.a,
					canAddPostFlair: I.c,
					currentSubredditId: N.o,
					destSubreddit: I.h,
					destSubredditAboutInfo: I.g,
					eventSchedule: I.p,
					isChatPostAvailable: Ot.a,
					isChatPostSelected: I.I,
					isEventPostCreationAvailable: I.N,
					isNsfw: I.Q,
					isSpoiler: I.V,
					isOriginalContent: I.R,
					flair: I.r,
					postCreationFieldErrors: kt,
					postSchedule: I.gb,
					submissionType: I.a
				}),
				Kt = Object(r.b)(Ut, (e, t) => {
					let {
						onPostFieldValidation: n,
						pageLayer: o
					} = t;
					return {
						doNotShowOriginalContentDisclaimerClicked: () => e((e, t) => D.f(t())),
						onEventScheduleChange: t => {
							e(a.a(t))
						},
						postFlairAdded: t => {
							e(a.b(t)), n(e(Ze(h.Bb.FLAIR, o)))
						},
						toggleSchedulePicker: (t, n) => {
							e(a.z(C.g)), t && e((e, t) => {
								(n ? xt.g : xt.f)(t())
							})
						},
						toggleChatPostTag: t => {
							e(a.u(!t)), e((e, n) => D.M(n(), !t, _t.ToggleNoun.CHAT))
						},
						toggleFlairPicker: () => e(a.z(Tt)),
						toggleNsfwTag: t => {
							e(a.v(!t)), e((e, n) => D.M(n(), !t, _t.ToggleNoun.NSFW))
						},
						toggleOriginalContentTag: t => {
							e(a.w(!t)), e((e, n) => D.M(n(), !t, _t.ToggleNoun.ORIGINAL_CONTENT))
						},
						toggleSpoilerTag: t => {
							e(a.y(!t)), e((e, n) => D.M(n(), !t, _t.ToggleNoun.SPOILER))
						}
					}
				});
			class Wt extends s.a.Component {
				constructor() {
					super(...arguments), this.state = {
						showOCDisclaimer: !1
					}, this.handlePostFlairSelected = e => {
						let {
							previewFlair: t
						} = e;
						this.props.flair !== t && this.props.postFlairAdded(t)
					}, this.handleOCDisclaimerDoNotShowClick = () => {
						const {
							doNotShowOriginalContentDisclaimerClicked: e
						} = this.props;
						e(), Object(vt.tb)(ht.ORIGINAL_CONTENT_DISCLAIMER, !0), this.setState({
							showOCDisclaimer: !1
						})
					}, this.handleOriginalContentClick = () => {
						this.props.toggleOriginalContentTag(this.props.isOriginalContent)
					}, this.handleChatPostClick = () => {
						this.props.toggleChatPostTag(this.props.isChatPostSelected)
					}, this.handleSpoilerClick = () => {
						this.props.toggleSpoilerTag(this.props.isSpoiler)
					}, this.handleNsfwClick = () => {
						this.props.toggleNsfwTag(this.props.isNsfw)
					}, this.handleToggleSchedulePicker = () => {
						const e = this.props.activeModalId !== C.g,
							t = !!this.props.eventSchedule;
						this.props.toggleSchedulePicker(e, t)
					}, this.handleToggleFlairPicker = () => {
						this.props.toggleFlairPicker(), this.props.sendEvent(D.y())
					}
				}
				componentDidMount() {
					this.setState({
						showOCDisclaimer: !Object(vt.j)(ht.ORIGINAL_CONTENT_DISCLAIMER)
					})
				}
				render() {
					const {
						activeModalId: e,
						canAddPostFlair: t,
						className: n,
						currentSubredditId: o,
						destSubreddit: r,
						destSubredditAboutInfo: i,
						eventSchedule: a,
						disabled: c,
						flair: d,
						isChatPostAvailable: u,
						isChatPostSelected: p,
						isEventPostCreationAvailable: b,
						isNsfw: f,
						isSpoiler: g,
						isOriginalContent: v,
						postCreationFieldErrors: x,
						postSchedule: E,
						submissionType: y,
						theme: O
					} = this.props, {
						showOCDisclaimer: k
					} = this.state, _ = !!d, {
						backgroundColor: j = null,
						textColor: S = null
					} = d || {}, {
						allOriginalContent: T = !1
					} = i || {}, w = r.isProfile || Object(yt.h)(i), I = c || !w || T || y === h.ac.CROSSPOST, P = c || !(r.isProfile || Object(yt.j)(i)), M = c, R = c || !!E;
					return s.a.createElement("div", {
						className: n
					}, s.a.createElement(Mt, null, u && s.a.createElement(Nt, {
						disabled: M,
						onClick: this.handleChatPostClick,
						toggled: p,
						addModifierTooltip: l.fbt._("Use live chat instead of comments", null, {
							hk: "27t9lW"
						}),
						removeModifierTooltip: l.fbt._("Use comments instead of live chat", null, {
							hk: "3seokS"
						}),
						Icon: p ? Object(ke.b)("checkmark") : Ct.a,
						text: l.fbt._("Live Chat", null, {
							hk: "cZlvm"
						})
					}), b && s.a.createElement(Bt, {
						disabled: R,
						id: gt.a,
						onClick: this.handleToggleSchedulePicker,
						shiftTooltipToRight: !0,
						toggled: !!a,
						addModifierTooltip: l.fbt._("Add time and date info", null, {
							hk: "L2KN8"
						}),
						removeModifierTooltip: l.fbt._("Edit event data", null, {
							hk: "1FSblM"
						}),
						Icon: Object(ke.b)("scheduled"),
						text: a ? wt(a) : l.fbt._("Event", null, {
							hk: "40pq7b"
						})
					}, a && s.a.createElement(ke.a, {
						name: "edit",
						className: St.a.editScheduledIcon
					})), e === C.g && s.a.createElement(bt.default, {
						schedule: this.props.eventSchedule,
						onClose: this.handleToggleSchedulePicker,
						onChange: this.props.onEventScheduleChange,
						shouldShowSubmitTime: !0,
						shouldShowDeleteButton: !0
					}), s.a.createElement(Rt, {
						disabled: I,
						onClick: this.handleOriginalContentClick,
						shiftTooltipToRight: !0,
						toggled: w && (v || T),
						addModifierTooltip: l.fbt._("Mark this post as Original Content [OC]", null, {
							hk: "3V5aHC"
						}),
						removeModifierTooltip: l.fbt._("Unmark this post as Original Content [OC]", null, {
							hk: "2oj9GI"
						}),
						disabledTooltip: w ? "" : l.fbt._("This community does not allow original content tag", null, {
							hk: "2ydrVm"
						}),
						Icon: Object(ke.b)(v ? "checkmark" : "add"),
						text: l.fbt._("OC", null, {
							hk: "2GRpRs"
						})
					}), s.a.createElement(Dt, {
						disabled: P,
						onClick: this.handleSpoilerClick,
						toggled: g,
						addModifierTooltip: l.fbt._("Mark as a spoiler", null, {
							hk: "3ICynB"
						}),
						removeModifierTooltip: l.fbt._("Unmark as a spoiler", null, {
							hk: "34pmqg"
						}),
						disabledTooltip: P ? l.fbt._("This community does not allow spoiler tag", null, {
							hk: "H75tq"
						}) : "",
						Icon: Object(ke.b)(g ? "checkmark" : "add"),
						text: l.fbt._("Spoiler", null, {
							hk: "4CA9TG"
						})
					}), s.a.createElement(Lt, {
						disabled: c,
						onClick: this.handleNsfwClick,
						toggled: f,
						addModifierTooltip: l.fbt._("Mark as Not Safe For Work", null, {
							hk: "1LNeZB"
						}),
						removeModifierTooltip: l.fbt._("Unmark Not Safe For Work", null, {
							hk: "1EcrjD"
						}),
						Icon: Object(ke.b)(f ? "checkmark" : "add"),
						text: l.fbt._("NSFW", null, {
							hk: "3Tg62D"
						})
					}), s.a.createElement(At, {
						className: Object(m.a)(St.a.AddFlair, {
							[St.a.isToggled]: _,
							[St.a.mHasError]: x[h.Bb.FLAIR].length > 0
						}),
						disabled: !t || c,
						disabledTooltip: r.id ? l.fbt._("Not available for this community", null, {
							hk: "2gkbLI"
						}) : l.fbt._("Select a subreddit to enable flair", null, {
							hk: "1LNvTq"
						}),
						onClick: this.handleToggleFlairPicker,
						toggled: _,
						addModifierTooltip: l.fbt._("Add flair", null, {
							hk: "1RHLMM"
						}),
						removeModifierTooltip: l.fbt._("Change or remove flair", null, {
							hk: "34t9cQ"
						}),
						backgroundColor: j,
						textColor: S,
						Icon: e => s.a.createElement(ke.a, {
							name: "tag",
							className: Object(m.a)(e.className, St.a.FlairIcon)
						}),
						style: {
							"--flairColor": _ ? Object(Ye.d)({
								...this.props,
								backgroundColor: j,
								textColor: S
							}) : !t || c ? O.newCommunityTheme.actionIconTinted80 : O.newCommunityTheme.actionIcon
						},
						text: s.a.createElement(s.a.Fragment, null, d ? s.a.createElement(It, {
							flair: d,
							forceSmallEmojis: !0
						}) : s.a.createElement(Pt, null, l.fbt._("Flair", null, {
							hk: "4Dtvp0"
						})), s.a.createElement(ke.a, {
							name: "caret_down",
							className: St.a.StyledCaretIcon
						}))
					}), e === Tt && s.a.createElement(ft.a, {
						flairs: d ? [d] : [],
						modalId: Tt,
						onFlairChanged: this.handlePostFlairSelected,
						subredditId: o || ""
					})), s.a.createElement(Ee.a, {
						className: St.a.errorMessages,
						messages: x[h.Bb.FLAIR]
					}), w && v && k && s.a.createElement(it, {
						onDoNotShowClick: this.handleOCDisclaimerDoNotShowClick
					}))
				}
			}
			var Ht = Ft(Object(Ue.a)(Object(te.c)(Kt(Wt)))),
				qt = n("./src/config.ts"),
				zt = n("./src/higherOrderComponents/asTooltip.tsx"),
				Gt = n("./src/reddit/components/PostCreationForm/EduTooltips/BaseEduTooltip/index.m.less"),
				Vt = n.n(Gt);
			const {
				fbt: Qt
			} = n("./node_modules/fbt/lib/FbtPublic.js"), Jt = ge.a.div("Container", Vt.a), Xt = ge.a.div("OuterContainer", Vt.a);
			class Zt extends s.a.Component {
				constructor() {
					super(...arguments), this.tooltipRef = null, this.onGotItClick = e => {
						this.close(!0), e.stopPropagation()
					}, this.onKeyDown = e => {
						e.keyCode === v.a.Escape && this.close(!1)
					}, this.onMouseClick = e => {
						this.tooltipRef && !this.tooltipRef.contains(e.target) && this.close(!1)
					}, this.onWindowResize = () => {
						this.close(!1)
					}, this.setTooltipRef = e => {
						this.tooltipRef = e
					}
				}
				componentDidMount() {
					document.addEventListener("keydown", this.onKeyDown), document.addEventListener("click", this.onMouseClick), window.addEventListener("resize", this.onWindowResize), this.tooltipRef && this.tooltipRef.scrollIntoView({
						behavior: "smooth",
						block: "end"
					})
				}
				componentWillUnmount() {
					document.removeEventListener("keydown", this.onKeyDown), document.removeEventListener("click", this.onMouseClick), window.removeEventListener("resize", this.onWindowResize)
				}
				close(e) {
					this.props.onClose(e)
				}
				render() {
					const e = this.props;
					return s.a.createElement(Xt, {
						className: e.className,
						innerRef: this.setTooltipRef,
						style: e.style
					}, s.a.createElement(Jt, {
						className: Vt.a.container
					}, s.a.createElement("img", {
						src: e.heroImagePath,
						className: Vt.a.hero
					}), s.a.createElement("div", {
						className: Vt.a.contentContainer
					}, s.a.createElement("div", {
						className: Vt.a.title
					}, e.title), s.a.createElement("div", {
						className: Vt.a.description
					}, e.description), s.a.createElement("div", {
						className: Vt.a.iconsExplanations
					}, e.iconsExplanations.map((e, t) => {
						const n = e.iconComponent;
						return s.a.createElement("div", {
							className: Vt.a.iconExplanation,
							key: t
						}, s.a.createElement(n, {
							className: Vt.a.icon
						}), e.text)
					})), s.a.createElement(lt.l, {
						className: Vt.a.gotIt,
						onClick: this.onGotItClick
					}, Qt._("Got it", null, {
						hk: "2RPumB"
					})))))
				}
			}
			var Yt = Object(zt.a)(Zt),
				$t = n("./src/reddit/actions/modal.ts"),
				en = n("./src/reddit/helpers/trackers/postCollection.ts");
			const tn = [{
					id: gt.d,
					getShowTimesLeft: vt.P,
					setShowTimesLeft: vt.Rb,
					tooltipShown: en.n,
					tooltipDismissed: en.m
				}, {
					id: gt.c,
					getShowTimesLeft: vt.O,
					setShowTimesLeft: vt.Qb,
					tooltipShown: en.f,
					tooltipDismissed: en.e
				}],
				nn = {};
			let on;
			const sn = () => (void 0 === on && (on = tn.filter(e => e.getShowTimesLeft() > 0).map(e => e.id)), on),
				rn = e => {
					const t = sn().indexOf(e);
					t > -1 && sn().splice(t, 1)
				},
				an = e => async (t, n) => {
					const o = tn.find(t => t.id === e);
					o && (cn(o, !0), Object(fe.a)(o.tooltipDismissed(n())))
				}, cn = (e, t) => {
					e.setShowTimesLeft(t ? 0 : e.getShowTimesLeft() - 1)
				}, ln = () => async (e, t) => {
					const n = Object(L.a)(t()),
						o = sn().find(e => !!nn[e]);
					if (!o || o === n) return;
					const s = tn.find(e => e.id === o);
					s && (Object(fe.a)(s.tooltipShown(t())), cn(s)), e($t.i(o))
				}, dn = f()(e => e(), 100);
			var un = n("./src/reddit/components/PostCreationForm/EduTooltips/CollectionButtonTooltip/index.m.less"),
				pn = n.n(un);
			var mn = function(e, t) {
					const n = Object(i.c)({
						isOpen: e => Object(L.a)(e) === t
					});
					class o extends s.a.Component {
						componentDidMount() {
							nn[t] = !0, dn(this.props.onShowNextTooltip)
						}
						componentWillUnmount() {
							nn[t] = !1, dn(this.props.onShowNextTooltip)
						}
						render() {
							const {
								isOpen: t,
								...n
							} = this.props;
							return t ? s.a.createElement(e, n) : null
						}
					}
					return Object(r.b)(n, e => ({
						onCloseTooltip: n => {
							rn(t), n && e(an(t)), e($t.i(t)), e(ln())
						},
						onShowNextTooltip: () => e(ln())
					}))(o)
				}(e => s.a.createElement(Yt, {
					className: pn.a.container,
					description: l.fbt._("Create a series of scheduled events or just group random things. Make something awesome.", null, {
						hk: "40PwoH"
					}),
					heroImagePath: `${qt.a.assetPath}/img/collection-tooltip-hero@2x.png`,
					iconsExplanations: [{
						iconComponent: Object(ke.b)("add"),
						text: l.fbt._("Compose a post like normal.", null, {
							hk: "466GER"
						})
					}, {
						iconComponent: Object(ke.b)("collection"),
						text: l.fbt._("Create & name your collection.", null, {
							hk: "3BuZKz"
						})
					}, {
						iconComponent: Object(ke.b)("add_to_feed"),
						text: l.fbt._("Add more posts to your collection.", null, {
							hk: "2wzlHs"
						})
					}],
					isOpen: !0,
					isOverlayOff: !0,
					onClose: e.onCloseTooltip,
					title: l.fbt._("Create Collections!", null, {
						hk: "3tSmbj"
					}),
					tooltipId: gt.g
				}), gt.c),
				hn = n("./src/reddit/components/PostCreationForm/ControlRow/ToggleDestCollectionButton/index.m.less"),
				bn = n.n(hn);
			var fn = s.a.memo(e => {
					const {
						disabled: t,
						isToggled: n
					} = e, o = n ? "delete" : "collection";
					return s.a.createElement(lt.t, {
						className: bn.a.button,
						priority: lt.c.Plain,
						disabled: t,
						id: gt.g,
						onClick: e.onClick,
						Icon: Object(ke.b)(o)
					}, s.a.createElement(at.a, {
						text: n ? l.fbt._("Cancel adding to collection", null, {
							hk: "359w09"
						}) : l.fbt._("Add to collection", null, {
							hk: "48nVCZ"
						})
					}), !n && s.a.createElement(mn, null))
				}),
				gn = n("./src/reddit/actions/economics/predictions/index.ts"),
				vn = n("./src/reddit/actions/toaster.ts"),
				xn = n("./src/reddit/helpers/trackers/predictions.ts"),
				Cn = n("./src/reddit/hooks/usePageLayer.ts"),
				En = n("./src/reddit/hooks/useTracking.ts"),
				yn = n("./src/reddit/models/Toast/index.ts"),
				On = n("./src/reddit/selectors/features/predictions/tournaments/index.ts");
			const {
				fbt: kn
			} = n("./node_modules/fbt/lib/FbtPublic.js"), _n = e => {
				let {
					onClose: t
				} = e;
				const n = Object(r.d)(),
					i = Object(En.a)(),
					[c, l] = Object(o.useState)(!1),
					d = Object(r.e)(I.u),
					u = Object(r.e)(I.v),
					m = Object(r.e)(I.xb),
					h = Object(Cn.a)(),
					{
						subredditName: b
					} = (null == h ? void 0 : h.urlParams) || {},
					f = Object(r.e)(e => Object(F.I)(e, b));
				return s.a.createElement(ee.a, {
					withOverlay: !0,
					onOverlayClick: t,
					titleText: kn._("Prediction created", null, {
						hk: "1O6btq"
					}),
					bodyText: kn._("The prediction remains unpublished until the tournament begins. More predictions can be added at any time before the tournament ends.", null, {
						hk: "20T2xQ"
					}),
					onClose: t,
					primaryButtonText: kn._("Start Tournament", null, {
						hk: "ft2Io"
					}),
					primaryButtonLoading: c,
					onPrimaryAction: async () => {
						i(Object(xn.j)()), l(!0), n(Object(gn.b)({
							prediction: {
								formData: d,
								formState: u
							}
						}));
						try {
							await n(Object(gn.g)(f, (null == m ? void 0 : m.name) || kn._("Predictions Tournament", null, {
								hk: "2Zgcqj"
							}), (null == m ? void 0 : m.theme) || "theme_1", (null == m ? void 0 : m.token) || null)), n(Object(a.s)()), n(Object(gn.v)()), n(Object(gn.l)(b)), n(Object(p.b)(`/r/${b}/predictions/`))
						} catch (e) {
							n(Object(gn.u)()), n(Object(vn.f)({
								duration: 5e3,
								kind: yn.b.Error,
								text: kn._("Error: Failed to create prediction tournament", null, {
									hk: "1gJN9i"
								})
							}))
						}
						l(!1)
					},
					onSecondaryAction: () => {
						i(Object(xn.c)()), n(Object(gn.b)({
							prediction: {
								formData: d,
								formState: u
							}
						})), n(Object(a.s)()), n(Object(a.g)({
							submissionType: "prediction"
						})), t()
					},
					secondaryButtonText: kn._("Create Another", null, {
						hk: "pQB1L"
					})
				})
			};
			var jn = n("./src/reddit/components/PostCreationForm/ControlRow/AddTournamentPredictionButton/index.m.less"),
				Sn = n.n(jn);
			const {
				fbt: Tn
			} = n("./node_modules/fbt/lib/FbtPublic.js");

			function wn(e) {
				let {
					className: t,
					disabled: n
				} = e;
				const i = Object(r.d)(),
					c = Object(En.a)(),
					l = Object(r.e)(I.u),
					d = Object(r.e)(I.v),
					[u, h] = Object(o.useState)(!1),
					[b, f] = Object(o.useState)(!1),
					g = Object(r.e)(I.F),
					v = Object(r.e)(I.z),
					x = Object(r.e)(I.y),
					C = Object(Cn.a)(),
					E = Object(r.e)(e => Object(He.q)(e, {
						pageLayer: C
					})),
					y = Object(r.e)(e => Object(F.X)(e, {
						subredditId: E
					})),
					O = Object(r.e)(e => Object(On.b)(e, {
						subredditId: E
					}));
				return s.a.createElement("div", {
					className: Object(m.a)(Sn.a.addTournamentPredictionButton, t)
				}, s.a.createElement(lt.l, {
					disabled: b || n || !v || !x,
					onClick: () => {
						O ? (async () => {
							f(!0), i(Object(gn.b)({
								prediction: {
									formData: l,
									formState: d
								}
							}));
							try {
								await i(Object(gn.a)(O.tournamentId, E)), i(Object(a.s)()), i(Object(gn.v)()), i(Object(gn.l)(y.name)), i(Object(p.b)(`/r/${y.name}/predictions/`))
							} catch (e) {
								i(Object(gn.u)()), e.message.match(/max limit/) ? i(Object(vn.f)({
									duration: 1e4,
									kind: yn.b.Error,
									text: Tn._("Oops, you’ve reached the limit of predictions in a single Tournament. You can always start a new Tournament after ending the current one.", null, {
										hk: "1LClJE"
									})
								})) : i(Object(vn.f)({
									duration: 5e3,
									kind: yn.b.Error,
									text: Tn._("Error: Failed to add prediction to tournament", null, {
										hk: "3YK8YR"
									})
								}))
							}
							f(!1)
						})() : (c(Object(xn.g)()), h(!0))
					}
				}, b ? s.a.createElement(ye.a, {
					sizePx: 16
				}) : O ? Tn._("Post", null, {
					hk: "12GkA5"
				}) : Tn._("Next", null, {
					hk: "2m41ub"
				})), s.a.createElement("div", {
					className: Sn.a.tooltip
				}, g ? v ? x ? null : Tn._("End must be at least one hour from now", null, {
					hk: "lWM41"
				}) : Tn._("Options cannot be empty", null, {
					hk: "2BR1pQ"
				}) : Tn._("A title is required", null, {
					hk: "2hoEW2"
				})), u && s.a.createElement(_n, {
					onClose: () => h(!1)
				}))
			}
			var In = n("./src/reddit/components/PostCreationForm/ControlRow/index.m.less"),
				Pn = n.n(In);
			const Mn = () => l.fbt._("Post", null, {
					hk: "47QFCY"
				}),
				Rn = () => l.fbt._("Cancel", null, {
					hk: "2TSLl5"
				}),
				Nn = () => l.fbt._("Saved!", null, {
					hk: "34qXtS"
				}),
				Dn = () => l.fbt._("Save Draft", null, {
					hk: "3wckxd"
				}),
				Ln = () => l.fbt._("Updated!", null, {
					hk: "45fGGU"
				}),
				An = () => l.fbt._("Update draft", null, {
					hk: "1c8tCb"
				}),
				Bn = () => l.fbt._("Please fix the above requirements", null, {
					hk: "17Yk98"
				}),
				Fn = () => l.fbt._("Something went wrong. Just don't panic.", null, {
					hk: "4x2ypi"
				}),
				Un = 10,
				Kn = e => {
					return [h.ac.LINK_ONLY, h.ac.POLL, h.ac.POST].includes(e)
				},
				Wn = ge.a.div("ButtonLayout", Pn.a),
				Hn = ge.a.div("SaveDraftButtonLayout", Pn.a),
				qn = ge.a.wrapped(ye.a, "PostLoadingIcon", Pn.a),
				zn = ge.a.wrapped(qn, "DraftLoadingIcon", Pn.a),
				Gn = Object(i.a)(I.lb, xe.a.getMediaCount),
				Vn = (e, t) => {
					return !!!Object(N.l)(e, t) && e.creations.formData.isPoll
				},
				Qn = [],
				Jn = e => {
					const t = Object(I.lb)(e),
						n = Object(I.rb)(e);
					if (!t.isBound || n !== h.ac.POST || !Object(I.nb)(e)) return Qn;
					const o = (e => {
						const {
							allowedPostTypes: t,
							name: n
						} = Object(I.h)(e), o = Gn(e);
						if (!o || !t) return null;
						let s = "";
						return !o.total || t.images || t.videos ? o.video && !t.videos ? s = l.fbt._("Videos are not allowed in r/{subreddit name}", [l.fbt._param("subreddit name", n)], {
							hk: "1EUr31"
						}) : !o.image && !o.gifvideo || t.images || (s = l.fbt._("Images are not allowed in r/{subreddit name}", [l.fbt._param("subreddit name", n)], {
							hk: "2pxaRa"
						})) : s = l.fbt._("Videos and images are not allowed in r/{subreddit name}", [l.fbt._param("subreddit name", n)], {
							hk: "3AMcQ8"
						}), s || null
					})(e);
					return o ? [o] : (e => {
						const t = Gn(e);
						if (!t) return Qn;
						const n = [];
						return t.image > h.eb && n.push(l.fbt._("Post may not contain more that 20 images", null, {
							hk: "1Szc36"
						})), t.video + t.gifvideo > h.hb && n.push(l.fbt._("Post may not contain more that 5 videos", null, {
							hk: "2WhZ8k"
						})), n
					})(e)
				},
				Xn = (e, t) => {
					let {
						sourcePostId: n
					} = t;
					const o = Object(I.pb)(e, {
							sourcePostId: n
						}),
						{
							allowedPostTypes: s,
							id: r,
							isProfile: i,
							name: a
						} = Object(I.h)(e);
					if (!n) return l.fbt._("A source post is required to crosspost", null, {
						hk: "2TeLDw"
					});
					if (!r) return l.fbt._("A destination community is required to crosspost", null, {
						hk: "3haidF"
					});
					const c = i ? Object(U.nb)(e, {
						userId: r
					}) : r;
					if (c) {
						if (((e, t, n) => {
								const o = Object(we.a)(n, {
										sort: "new",
										crossposts_only: !0
									}),
									s = e.subreddits.duplicates.models[t];
								return !(s && s[o])
							})(e, c, n)) return l.fbt._("Checking community...", null, {
							hk: "1ycXCe"
						});
						if (((e, t, n) => {
								const o = ((e, t, n) => {
									const o = e.subreddits.duplicates.models[t];
									return o ? o[n] : []
								})(e, t, Object(we.a)(n, {
									sort: "new",
									crossposts_only: !0
								}));
								return 0 !== o.length && Object(Ie.x)(e, o[0])
							})(e, c, n)) return l.fbt._("This community has the same crosspost within last 24 hours", null, {
							hk: "177pgf"
						})
					}
					if (!s || !o) return null;
					if (o.source) return !s.links && l.fbt._("This community does not allow for crossposting of link posts", null, {
						hk: "2cZPxJ"
					});
					const {
						isCrosspostableSubreddit: d
					} = Object(F.z)(e, {
						subredditName: a
					});
					if (!d) return l.fbt._("This community does not allow for crossposting of any posts", null, {
						hk: "2KrrAO"
					});
					switch (o.media && o.media.type) {
						case _e.o.TEXT:
						case _e.o.RTJSON:
							return !s.text && l.fbt._("This community does not allow for crossposting of text posts", null, {
								hk: "1a4voI"
							});
						case _e.o.IMAGE:
							return !s.images && l.fbt._("This community does not allow for crossposting of image posts", null, {
								hk: "tGzk7"
							});
						case _e.o.VIDEO:
						case _e.o.GIFVIDEO:
						case _e.o.EMBED:
							return !s.videos && l.fbt._("This community does not allow for crossposting of video posts", null, {
								hk: "w6HED"
							})
					}
					return null
				},
				Zn = (e, t) => {
					let {
						sourcePostId: n
					} = t;
					const o = Object(I.Z)(e),
						s = Object(I.lb)(e),
						r = Object(I.rb)(e);
					if (r === h.ac.IMAGE_ONLY) return !1;
					if (!Object(I.h)(e).name || !Object(I.F)(e)) return !1;
					if (r === h.ac.POST || r === h.ac.POLL || r === h.ac.PREDICTION) {
						const t = Jn(e),
							n = !xe.a.isAllMediaUploaded(s, e.uploads);
						return !t.length && !n
					}
					if (r === h.ac.MEDIA) {
						const {
							items: t
						} = o, n = t.every(t => {
							const n = e.uploads[t.uploadKey];
							return !(!n || !n.url || n.status !== Se.a.SUCCESS)
						});
						return t.length > 0 && n
					}
					return r === h.ac.LINK_ONLY ? Object(I.A)(e) : r === h.ac.CROSSPOST && !Xn(e, {
						sourcePostId: n
					})
				},
				Yn = Object(i.c)({
					isPoll: Vn,
					activeModalId: L.a,
					currentSubredditOrProfile: N.q,
					canPostAsModerator: I.e,
					currentCollection: N.g,
					errorMsgs: (e, t) => {
						let {
							sourcePostId: n
						} = t;
						if (Object(I.w)(e)) return Object(I.o)(e);
						if (n) {
							const t = Xn(e, {
								sourcePostId: n
							});
							if (t) return [t]
						}
						return Jn(e)
					},
					eventSchedule: I.p,
					hasDraftError: B.f,
					hasError: I.w,
					postGuidanceBlockRuleTriggered: _.c,
					hasSubmitValidationError: I.x,
					destSubredditAboutInfo: I.g,
					govType: e => e.creations.formData.govType,
					isAddingToTournament: (e, t) => {
						let {
							subredditId: n
						} = t;
						return !!n && Object(I.G)(e, {
							subredditId: n
						})
					},
					isChatPostSelected: I.I,
					isContestMode: I.J,
					isCreatingTournamentPrediction: (e, t) => {
						let {
							subredditId: n
						} = t;
						return !!n && Object(I.K)(e, {
							subredditId: n
						})
					},
					isDraftsFeatureEnabled: (e, t) => !Vn(e, t),
					isDraftPending: B.g,
					isMediaUploadPending: I.ab,
					isModeratorSomewhere: Te.k,
					isPostAsMetaMod: I.S,
					isPostPending: I.tb,
					isPostSubmitEnabled: Zn,
					isSaveDraftEnabled: e => {
						const t = Object(I.rb)(e);
						if (!h.I.has(t) || !Object(I.H)(e)) return !1;
						const n = Object(I.h)(e),
							o = Object(I.n)(e),
							s = t === h.ac.LINK_ONLY && Object(I.A)(e),
							r = t === h.ac.POST && o === C.i.RICH_TEXT && Object(I.E)(e),
							i = t === h.ac.POST && o === C.i.MARKDOWN && Object(I.B)(e),
							a = s || r || i;
						return !!n.name || Object(I.F)(e) || a
					},
					isScheduledPost: I.U,
					postSchedule: I.gb,
					postToTwitter: I.ib,
					isEditingScheduledPost: e => !!Object(ne.r)(e),
					showContributorRequestFlow: e => Object(F.w)(e, E.e.Post),
					showScheduledPosts: I.ob,
					stickyPosition: I.qb,
					submissionType: I.a,
					submitMode: I.sb,
					suggestedSort: I.vb
				}),
				$n = Object(N.v)(),
				eo = Object(r.b)(Yn, e => ({
					onResetDestCollection: () => e(z.c()),
					onScheduledPostSettingsChange: t => e(a.C(t)),
					onTrackCancelButtonClick: () => {
						e((e, t) => D.a(t()))
					},
					openCollectionsListOrCreationModal: t => e(a.n(t)),
					togglePostSchedulePicker: () => e(a.z(C.o)),
					clickPostSchedule: () => {
						e((e, t) => Object(fe.a)(Object(Oe.i)()(t())))
					}
				})),
				to = 2e3,
				no = e => e ? l.fbt._("Update", null, {
					hk: "3MoYFL"
				}) : l.fbt._("Schedule", null, {
					hk: "4bXWUG"
				});
			class oo extends s.a.Component {
				constructor() {
					super(...arguments), this.isSavedTimer = null, this.state = {
						draftId: null,
						isSaved: !1
					}, this.onCancel = () => {
						this.props.onTrackCancelButtonClick(), this.props.onCancel()
					}, this.handleDestCollectionClick = () => {
						const {
							currentCollection: e,
							onResetDestCollection: t,
							currentSubredditOrProfile: n,
							openCollectionsListOrCreationModal: o,
							sendEvent: s
						} = this.props;
						if (e) return t();
						n && (o(n.id), s(Object(en.b)(void 0, en.a.collectionComposer)))
					}, this.shouldDisablePostButton = () => {
						const {
							contributorRequestPending: e,
							hasSubmitValidationError: t,
							postGuidanceBlockRuleTriggered: n,
							isDraftPending: o,
							isMediaUploadPending: s,
							isPostPending: r,
							isPostSubmitEnabled: i
						} = this.props;
						return !i || o || r || s || this.state.isSaved || t || e || n
					}, this.shouldDisablePostScheduleButton = () => {
						const {
							eventSchedule: e,
							postToTwitter: t,
							submissionType: n
						} = this.props;
						return !!e || t || !Kn(n)
					}, this.openPostSchedulePickerModal = () => {
						this.props.togglePostSchedulePicker(), this.props.clickPostSchedule()
					}
				}
				UNSAFE_componentWillReceiveProps(e) {
					!this.props.isDraftPending || e.isDraftPending || e.hasDraftError || this.setState({
						isSaved: !0,
						draftId: this.props.draftId
					}, () => {
						this.isSavedTimer = window.setTimeout(() => {
							this.isSavedTimer = null, this.setState({
								isSaved: !1,
								draftId: null
							})
						}, to)
					})
				}
				componentWillUnmount() {
					this.isSavedTimer && (clearTimeout(this.isSavedTimer), this.isSavedTimer = null)
				}
				getSaveDraftButtonText() {
					const {
						draftId: e
					} = this.props, {
						isSaved: t,
						draftId: n
					} = this.state;
					return t ? n ? Ln() : Nn() : e ? An() : Dn()
				}
				render() {
					const {
						activeModalId: e,
						canPostAsModerator: t,
						currentCollection: n,
						destSubredditAboutInfo: r,
						govType: i,
						hasError: a,
						hasSubmitValidationError: c,
						isEditingScheduledPost: d,
						errorMsgs: u,
						isAddingToTournament: p,
						isChatPostSelected: b,
						isContestMode: f,
						isCreatingTournamentPrediction: g,
						isDraftsFeatureEnabled: v,
						isDraftPending: x,
						isPoll: y,
						isMediaUploadPending: O,
						isOpenAISubRec: k,
						isPostAsMetaMod: _,
						isPostPending: j,
						isSaveDraftEnabled: S,
						isScheduledPost: T,
						onPostFieldValidation: w,
						onSaveDraft: I,
						onScheduledPostSettingsChange: P,
						onSubmit: M,
						postSchedule: R,
						sendEvent: N,
						shouldRenderDivider: D = !0,
						showContributorRequestFlow: L,
						showScheduledPosts: A,
						stickyPosition: B,
						submissionType: F,
						submitMode: U,
						suggestedSort: K,
						togglePostSchedulePicker: W
					} = this.props, {
						isSaved: H
					} = this.state, q = x || j || O, z = U === C.r.Post && O, G = U === C.r.Draft && O, {
						collectionsEnabled: V = !1
					} = r || {}, Q = q, J = Object(m.a)(Pn.a.ButtonLayout, {
						[Pn.a.autoWidth]: y || L || A
					}), X = i === je.a.Prediction && (g || p);
					return s.a.createElement("div", {
						className: Object(m.a)(Pn.a.Container, {
							[Pn.a.isSubRec]: k
						})
					}, s.a.createElement(Ht, {
						className: Pn.a.postModifiers,
						disabled: q,
						onPostFieldValidation: w
					}), D && s.a.createElement("hr", {
						className: Pn.a.Divider
					}), s.a.createElement("div", {
						className: Pn.a.ButtonsAndErrors
					}, s.a.createElement("div", {
						className: Pn.a.formActionsPanel
					}, s.a.createElement("div", {
						className: Pn.a.buttons
					}, s.a.createElement("div", {
						className: J
					}, L ? s.a.createElement(ve.default, {
						eventSource: E.b.PostSubmission,
						smallButton: !0
					}) : X ? s.a.createElement(wn, {
						disabled: this.shouldDisablePostButton()
					}) : s.a.createElement(Pe.a, {
						disabled: this.shouldDisablePostButton(),
						onClick: () => {
							M()
						},
						className: Object(m.a)(A && Pn.a.removeRightBorderRadius)
					}, j || z ? s.a.createElement(qn, {
						sizePx: Un
					}) : s.a.createElement(o.Fragment, null, T ? no(d) : Mn())), A && !X && s.a.createElement(Pe.a, {
						title: l.fbt._("Make a scheduled post", null, {
							hk: "3TBSMs"
						}),
						disabled: this.shouldDisablePostScheduleButton(),
						onClick: this.openPostSchedulePickerModal,
						className: Pn.a.postScheduleButton,
						Icon: R ? Object(ke.b)("edit", {
							className: Pn.a.postScheduleIcon
						}) : Object(ke.b)("scheduled", {
							className: Pn.a.postScheduleIcon
						})
					})), e === C.o && s.a.createElement(Ce.a, {
						isContestMode: f,
						isPostAsMetaMod: _,
						sendEvent: N,
						schedule: R,
						stickyPosition: B,
						suggestedSort: K,
						onChange: P,
						onClose: W
					}), v && F !== h.ac.MEDIA && F !== h.ac.POLL && !T ? s.a.createElement(Hn, null, s.a.createElement(Pe.b, {
						disabled: !S || q || H,
						onClick: I
					}, x || G ? s.a.createElement(zn, {
						sizePx: Un
					}) : this.getSaveDraftButtonText())) : s.a.createElement(Wn, null, s.a.createElement(Pe.b, {
						disabled: q || H,
						onClick: this.onCancel
					}, Rn())), V && t && s.a.createElement(fn, {
						disabled: Q,
						isToggled: !!n,
						onClick: this.handleDestCollectionClick
					})), b && s.a.createElement(be, null)), s.a.createElement(Fe, null), !!(a || u.length || c) && s.a.createElement(Ee.a, {
						className: Pn.a.errorMessages,
						messages: u,
						fallbackMessage: c ? Bn() : Fn()
					})))
				}
			}
			var so = $n(eo(Object(te.c)(oo))),
				ro = n("./src/reddit/components/PostCreationForm/CreateOrEditCollectionModal/index.tsx"),
				io = n("./src/reddit/constants/posts.ts"),
				ao = n("./src/reddit/controls/SubredditPicker/index.tsx"),
				co = n("./src/reddit/controls/SubredditPicker/helpers.ts"),
				lo = n("./src/reddit/helpers/name/index.ts"),
				uo = n("./src/reddit/components/PostCreationForm/CreationControls/index.m.less"),
				po = n.n(uo);
			const mo = Object(i.a)(I.h, L.a, I.cb, U.m, N.s, U.H, (e, t, n, o, s, r) => {
					const i = n && !t ? n : e;
					if (!i || !i.name) return Object(co.b)("", null, null, r);
					const {
						name: a,
						isProfile: c
					} = i;
					return c ? Object(co.b)(Object(lo.e)(a), null, o, r) : Object(co.b)(Object(lo.d)(a), s, null, r)
				}),
				ho = Object(i.c)({
					pending: I.eb,
					pickerValue: mo
				}),
				bo = Object(r.b)(ho, (e, t) => {
					let {
						draftId: n,
						pageLayer: o
					} = t;
					return {
						onSubredditChangeRequested: t => e(z.b(t, o))
					}
				});
			class fo extends s.a.PureComponent {
				constructor() {
					super(...arguments), this.inputRef = null, this.onSelectSubreddit = e => {
						const {
							rawString: t,
							record: n
						} = e, o = n && n.name || Object(lo.i)(t), s = n && n.type === io.a.PROFILE || Object(lo.h)(t), r = {
							name: o,
							isProfile: s,
							allowedPostTypes: n && n.allowedPostTypes
						};
						this.props.onSubredditChangeRequested(r), s || this.props.sendEvent(Object(D.L)(null == n ? void 0 : n.id))
					}, this.setInputRef = e => this.inputRef = e, this.trackSearchEvent = (e, t) => {
						const n = !e && t && t.length > 0,
							o = e && e.length > 0 && !t;
						if (n || o) {
							const e = t ? "type" : "clear";
							this.props.sendEvent(Object(D.K)(e))
						}
					}, this.onTrackSubredditPickerClick = () => {
						this.props.sendEvent(Object(D.J)())
					}
				}
				render() {
					return s.a.createElement(Et.a, {
						className: Object(m.a)(po.a.ControlRow, this.props.className)
					}, s.a.createElement(ao.a, {
						allowCrosspostableOnly: this.props.allowCrosspostableOnly,
						className: po.a.SubredditPicker,
						disabled: this.props.pending,
						includeUserProfile: this.props.includeUserProfile,
						inputRef: this.setInputRef,
						onSelect: this.onSelectSubreddit,
						onFocus: this.onTrackSubredditPickerClick,
						selectOnBlur: !0,
						onInputChange: this.trackSearchEvent,
						value: this.props.pickerValue
					}))
				}
			}
			var go = Object(N.v)({
					draftId: N.w,
					pageLayer: e => e
				})(Object(te.c)(bo(fo))),
				vo = n("./node_modules/lodash/range.js"),
				xo = n.n(vo),
				Co = n("./src/higherOrderComponents/asModal/index.tsx"),
				Eo = n("./src/reddit/icons/svgs/Close/index.tsx"),
				yo = n("./src/reddit/controls/MetaSeparator/index.tsx"),
				Oo = n("./src/reddit/icons/svgs/Trash2/index.tsx"),
				ko = n("./src/reddit/models/User/index.ts"),
				_o = n("./src/reddit/components/HumanDate/index.tsx"),
				jo = n("./src/reddit/models/PostDraft/index.ts"),
				So = n("./src/reddit/components/PostCreationForm/DraftListModal/DraftListItem/Icon.m.less"),
				To = n.n(So),
				wo = n("./src/lib/constants/icons.ts");

			function Io() {
				return (Io = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const Po = {
				[jo.b.Image]: wo.a.image_post,
				[jo.b.Link]: wo.a.link_post,
				[jo.b.Markdown]: wo.a.text_post,
				[jo.b.RichText]: wo.a.text_post,
				[jo.b.Video]: wo.a.video_post
			};
			var Mo = ge.a.wrapped(e => {
					const {
						draftKind: t,
						...n
					} = e, o = Po[t] || wo.a.link_post;
					return s.a.createElement(ke.a, Io({
						name: o
					}, n))
				}, "Component", To.a),
				Ro = n("./src/reddit/components/PostCreationForm/DraftListModal/DraftListItem/index.m.less"),
				No = n.n(Ro);
			const Do = ge.a.div("Container", No.a),
				Lo = ge.a.div("LeftBlock", No.a),
				Ao = ge.a.div("Content", No.a),
				Bo = ge.a.div("RightBlock", No.a),
				Fo = ge.a.h2("PostTitle", No.a),
				Uo = ge.a.wrapped(Fo, "EditingPostTitle", No.a),
				Ko = ge.a.div("MetaLine", No.a),
				Wo = ge.a.span("SubredditName", No.a),
				Ho = ge.a.time("DraftSavedTime", No.a),
				qo = ge.a.wrapped(Oo.b, "TrashIcon", No.a),
				zo = ge.a.div("InteractiveDiv", No.a),
				Go = ge.a.button("ConfirmDelete", No.a),
				Vo = Object(i.c)({
					isDraftDeletionPending: (e, t) => {
						let {
							draft: {
								id: n
							}
						} = t;
						return Object(B.a)(e, n)
					},
					subreddit: (e, t) => {
						let {
							draft: {
								subredditId: n
							}
						} = t;
						return n ? Object(F.X)(e, {
							subredditId: n
						}) : void 0
					},
					user: U.m
				}),
				Qo = Object(r.b)(Vo, (e, t) => {
					let {
						pageLayer: n
					} = t;
					return {
						deleteDraft: t => e(G.o(t, n))
					}
				}),
				Jo = Object(N.v)({
					currentDraftId: N.w,
					pageLayer: e => e
				}),
				Xo = 1e3;
			class Zo extends s.a.Component {
				constructor() {
					super(...arguments), this.state = {
						showConfirmText: !1
					}, this.onClick = () => {
						this.props.onClick(this.props.draft.id)
					}, this.onConfirmClick = e => {
						e.stopPropagation(), this.props.deleteDraft(this.props.draft.id)
					}, this.onTrashCanClick = e => {
						e.stopPropagation(), this.setState({
							showConfirmText: !0
						})
					}
				}
				render() {
					const {
						draft: e,
						currentDraftId: t,
						isDraftDeletionPending: n,
						subreddit: o,
						user: r
					} = this.props, i = o && Object(yt.i)(o) && r ? {
						displayText: Object(lo.e)(Object(ko.e)(r)),
						url: `/user/${Object(ko.e)(r)}/`
					} : o;
					if (n) return null;
					const a = e.title || l.fbt._("Untitled", null, {
						hk: "2gEXjp"
					});
					return s.a.createElement(Do, {
						onClick: this.onClick
					}, s.a.createElement(Lo, null, s.a.createElement(Mo, {
						draftKind: e.kind
					})), s.a.createElement(Ao, null, t === e.id ? s.a.createElement(Uo, {
						"data-redditstyle": !0
					}, l.fbt._("EDITING: {postTitle}", [l.fbt._param("postTitle", a)], {
						hk: "3M5MUj"
					})) : s.a.createElement(Fo, {
						"data-redditstyle": !0
					}, a), s.a.createElement(Ko, {
						"data-redditstyle": !0
					}, i && s.a.createElement(Wo, {
						"data-redditstyle": !0
					}, i.displayText), i && s.a.createElement(yo.b, null), s.a.createElement(Ho, null, l.fbt._("Draft saved {draftSavedAtTime}", [l.fbt._param("draftSavedAtTime", s.a.createElement(_o.d, {
						seconds: (e.modified || e.created) / Xo
					}))], {
						hk: "2HjAWY"
					})))), s.a.createElement(Bo, null, this.state.showConfirmText ? s.a.createElement(Go, {
						onClick: this.onConfirmClick,
						"data-redditstyle": !0
					}, t === e.id ? l.fbt._("Delete working draft?", null, {
						hk: "2iGoUj"
					}) : l.fbt._("Confirm", null, {
						hk: "2bjb66"
					})) : s.a.createElement(zo, {
						onClick: this.onTrashCanClick
					}, s.a.createElement(qo, {
						"data-redditstyle": !0
					}))))
				}
			}
			var Yo = Jo(Qo(Zo)),
				$o = n("./src/reddit/helpers/styles/mixins/loading.ts"),
				es = n("./src/reddit/components/PostCreationForm/DraftListModal/DraftListItem/Placeholder.m.less"),
				ts = n.n(es);
			const ns = ge.a.div("Container", ts.a),
				os = ge.a.div("LeftBlock", ts.a),
				ss = ge.a.div("Content", ts.a),
				rs = ge.a.div("MediaIcon", ts.a),
				is = ge.a.div("Title", ts.a),
				as = ge.a.div("Secondary", ts.a);
			var cs = e => {
					let {
						className: t,
						isLoading: n
					} = e;
					return s.a.createElement(ns, {
						className: t,
						"data-redditstyle": !0
					}, s.a.createElement(os, null, s.a.createElement(rs, {
						className: Object($o.a)({
							isLoading: n
						}),
						"data-redditstyle": !0
					})), s.a.createElement(ss, null, s.a.createElement(is, {
						className: Object($o.b)({
							isLoading: n
						}),
						"data-redditstyle": !0
					}), s.a.createElement(as, {
						className: Object($o.b)({
							isLoading: n
						}),
						"data-redditstyle": !0
					})))
				},
				ls = n("./src/reddit/components/PostCreationForm/DraftListModal/index.m.less"),
				ds = n.n(ls);

			function us() {
				return (us = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const {
				fbt: ps
			} = n("./node_modules/fbt/lib/FbtPublic.js"), ms = `${qt.a.assetPath}/img/snoo-drafts.png`, hs = 3, bs = ge.a.div("Wrapper", ds.a), fs = ge.a.div("TitleRow", ds.a), gs = ge.a.span("DraftsNumber", ds.a), vs = ge.a.div("DetailsContainer", ds.a), xs = ge.a.wrapped(Et.a, "ButtonRow", ds.a), Cs = ge.a.wrapped(lt.o, "CancelButton", ds.a), Es = ge.a.div("CloseWrapper", ds.a), ys = ge.a.wrapped(Eo.a, "Close", ds.a), Os = ge.a.div("Empty", ds.a), ks = ge.a.img("EmptyImage", ds.a), _s = ge.a.p("EmptyText", ds.a), js = Object(i.c)({
				drafts: B.c,
				isPending: B.b,
				maxDrafts: U.eb
			}), Ss = Object(r.b)(js);
			class Ts extends s.a.PureComponent {
				constructor() {
					super(...arguments), this.handleEscapeKey = e => {
						e.keyCode === v.a.Escape && this.props.onClose()
					}, this.renderItem = e => s.a.createElement(Yo, {
						key: e.id,
						draft: e,
						onClick: () => this.props.onLoadDraft(e)
					})
				}
				componentDidMount() {
					document.addEventListener("keydown", this.handleEscapeKey)
				}
				componentWillUnmount() {
					document.removeEventListener("keydown", this.handleEscapeKey)
				}
				renderPlaceholder(e) {
					return s.a.createElement(cs, {
						isLoading: !0,
						key: e
					})
				}
				renderEmpty() {
					return s.a.createElement(Os, null, s.a.createElement(ks, {
						src: ms
					}), s.a.createElement(_s, null, ps._("Your drafts will live here", null, {
						hk: "NIEIr"
					})))
				}
				render() {
					const {
						drafts: e,
						isPending: t,
						maxDrafts: n
					} = this.props;
					let o;
					return o = t ? xo()(hs).map(this.renderPlaceholder) : 0 === e.length ? this.renderEmpty() : e.map(this.renderItem), s.a.createElement(bs, {
						"data-redditstyle": !0
					}, s.a.createElement(fs, {
						"data-redditstyle": !0
					}, ps._("Drafts", null, {
						hk: "1fvOmI"
					}), s.a.createElement(gs, {
						"data-redditstyle": !0
					}, e.length, "/", n), s.a.createElement(Es, {
						onClick: this.props.onClose
					}, s.a.createElement(ys, {
						"data-redditstyle": !0
					}))), s.a.createElement(vs, null, o), s.a.createElement(xs, {
						"data-redditstyle": !0
					}, s.a.createElement(Cs, {
						onClick: this.props.onClose,
						"data-redditstyle": !0
					}, ps._("Close", null, {
						hk: "4gbyAA"
					}))))
				}
			}
			const ws = ge.a.wrapped(Object(Co.a)(Ss(Ts)), "DraftListModal", ds.a);
			var Is = e => s.a.createElement(ws, us({
					withOverlay: !0,
					onOverlayClick: e.onClose
				}, e)),
				Ps = n("./node_modules/node-libs-browser/node_modules/url/url.js"),
				Ms = n("./src/lib/forceHttps/index.ts"),
				Rs = n("./src/reddit/components/PostCreationForm/SafeHarborText/index.m.less"),
				Ns = n.n(Rs);
			const {
				fbt: Ds
			} = n("./node_modules/fbt/lib/FbtPublic.js"), Ls = new RegExp(`\\b(${[..._e.y].join("|")})\\.com$`, "i"), As = new RegExp(`\\.(${_e.x.join("|")})$`), Bs = ge.a.div("TextContainer", Ns.a);
			class Fs extends s.a.Component {
				constructor() {
					super(...arguments), this.isUrlScraped = e => {
						const t = Object(Ps.parse)(Object(Ms.a)(e));
						return !(!t.hostname || !Ls.test(t.hostname)) || !(!t.pathname || !As.test(t.pathname))
					}
				}
				render() {
					return this.props.value && this.isUrlScraped(this.props.value) ? s.a.createElement(Bs, null, Ds._("Posting this link saves the image or gif to Reddit", null, {
						hk: "1zFV82"
					})) : null
				}
			}
			var Us = n("./node_modules/react-autosize-textarea/lib/index.js"),
				Ks = n.n(Us),
				Ws = n("./src/reddit/controls/GrowingOutlinedInput/index.m.less"),
				Hs = n.n(Ws);

			function qs() {
				return (qs = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			class zs extends s.a.Component {
				constructor(e) {
					super(e), this.innerRef = null, this.focused = !1, this.setInnerRef = e => {
						this.innerRef = e, this.props.textareaRef && this.props.textareaRef(e)
					}, this.handleOnValueChange = () => {
						this.props.onValueChange && this.props.onValueChange(this.state.value)
					}, this.onFocus = e => {
						this.focused = !0, this.props.onFocus && this.props.onFocus(e)
					}, this.onBlur = e => {
						this.focused = !1, this.props.onBlur && this.props.onBlur(e)
					}, this.onChange = e => {
						if (this.innerRef) {
							const e = this.innerRef.value.replace(/\n/g, " ");
							this.setState(() => ({
								value: e
							}), this.handleOnValueChange)
						}
						this.props.onChange && this.props.onChange(e)
					}, this.onKeyPress = e => {
						13 === e.which && e.preventDefault(), this.props.onKeyPress && this.props.onKeyPress(e)
					}, this.state = {
						value: e.value || ""
					}
				}
				componentWillReceiveProps(e) {
					this.focused || this.state.value === e.value || this.setState({
						value: e.value
					})
				}
				render() {
					const {
						value: e
					} = this.state, {
						className: t,
						onValueChange: n,
						textareaRef: o,
						minHeight: r,
						...i
					} = this.props;
					return s.a.createElement(Ks.a, qs({}, i, {
						className: Object(m.a)(Hs.a.growingOutlinedInput, t),
						style: {
							minHeight: r
						},
						innerRef: this.setInnerRef,
						onFocus: this.onFocus,
						onBlur: this.onBlur,
						onChange: this.onChange,
						onKeyPress: this.onKeyPress,
						value: e
					}))
				}
			}
			var Gs = n("./src/reddit/components/PostCreationForm/LinkEditor/index.m.less"),
				Vs = n.n(Gs);
			const Qs = Object(i.c)({
					pending: I.eb,
					postCreationFieldErrors: kt,
					subreddit: N.s,
					value: I.X
				}),
				Js = Object(r.b)(Qs, (e, t) => {
					let {
						onChange: n,
						onPostFieldValidation: o,
						pageLayer: s
					} = t;
					return {
						onBlur: () => {
							o(e(Ze(h.Bb.LINK, s)))
						},
						onChange: t => {
							e(a.r(t)), n(t)
						},
						onFocus: () => e((e, t) => D.s(t(), C.l.CLICK, C.m.URL))
					}
				});
			var Xs, Zs = Object(N.v)()(Js(e => {
					const {
						pending: t,
						postCreationFieldErrors: n,
						subreddit: o,
						value: r
					} = e, i = n[h.Bb.LINK].length > 0;
					return s.a.createElement("div", null, s.a.createElement(zs, {
						className: Object(m.a)(Vs.a.URLInput, {
							[Vs.a.mHasError]: i
						}),
						placeholder: l.fbt._("Url", null, {
							hk: "4dfMY"
						}),
						value: r,
						onBlur: e.onBlur,
						onFocus: e.onFocus,
						onKeyDown: e.onKeyDown,
						onValueChange: e.onChange,
						readOnly: t
					}), s.a.createElement(Ee.a, {
						errorModalTitle: o ? Object(lo.d)(o.name) : void 0,
						messages: n[h.Bb.LINK]
					}), s.a.createElement(Fs, {
						value: r
					}))
				})),
				Ys = n("./node_modules/lodash/clamp.js"),
				$s = n.n(Ys),
				er = n("./node_modules/lodash/pickBy.js"),
				tr = n.n(er),
				nr = n("./src/lib/formatApiError/index.ts"),
				or = n("./src/lib/objectSelector/index.ts"),
				sr = (n("./node_modules/core-js/modules/web.dom.iterable.js"), n("./node_modules/lodash/isEqual.js")),
				rr = n.n(sr),
				ir = n("./src/reddit/controls/Sortable/index.tsx");
			! function(e) {
				e.RemoveGalleryItem = "REMOVE_GALLERY_ITEM", e.SelectGalleryItem = "SELECT_GALLERY_ITEM", e.SetGalleryItems = "SET_GALLERY_ITEMS", e.SetCaptionInput = "SET_CAPTION_INPUT", e.SetURLInput = "SET_URL_INPUT", e.SelectPrevMedia = "SELECT_PREV_MEDIA", e.SelectNextMedia = "SELECT_NEXT_MEDIA"
			}(Xs || (Xs = {}));
			var ar = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/constants.ts"),
				cr = n("./node_modules/lodash/upperFirst.js"),
				lr = n.n(cr),
				dr = n("./src/reddit/icons/svgs/Hamster1/index.tsx"),
				ur = n("./src/reddit/icons/svgs/Hamster2/index.tsx"),
				pr = n("./src/reddit/components/PostCreationForm/MediaInput/DropArea/index.m.less"),
				mr = n.n(pr);
			const {
				fbt: hr
			} = n("./node_modules/fbt/lib/FbtPublic.js"), br = [...Array.from(h.b), ...Array.from(h.d)].join(), fr = ge.a.input("HiddenInput", mr.a), gr = ge.a.wrapped(lt.o, "UploadButton", mr.a), vr = ge.a.wrapped(dr.a, "HamsterSmall", mr.a), xr = ge.a.wrapped(ur.a, "HamsterLarge", mr.a), Cr = ge.a.div("Container", mr.a), Er = ge.a.div("DropArea", mr.a), yr = ge.a.wrapped(Er, "DropAreaActive", mr.a), Or = ge.a.wrapped(yr, "DropAreaOver", mr.a), kr = ge.a.p("Paragraph", mr.a), _r = ge.a.p("ErrorMsg", mr.a), jr = ge.a.div("Box", mr.a);
			class Sr extends s.a.Component {
				constructor() {
					super(...arguments), this.hiddenInputEl = null, this.onFileInput = e => {
						this.props.onFileInput(e.currentTarget.files)
					}, this.clickUploadButton = () => this.hiddenInputEl && this.hiddenInputEl.click()
				}
				render() {
					const {
						isOver: e,
						canDrop: t,
						lastErrorMsg: n,
						allowMultiple: o
					} = this.props;
					return s.a.createElement(Cr, null, s.a.createElement(fr, {
						innerRef: e => this.hiddenInputEl = e,
						onChange: this.onFileInput,
						type: "file",
						accept: br,
						multiple: o
					}), e ? s.a.createElement(Or, null, s.a.createElement(jr, null, s.a.createElement(xr, null), s.a.createElement(kr, null, hr._("Drop Here to Upload", null, {
						hk: "3e1xuE"
					})))) : t ? s.a.createElement(yr, null, s.a.createElement(jr, null, s.a.createElement(vr, null), hr._("Drop Here to Upload", null, {
						hk: "3e1xuE"
					}))) : s.a.createElement(Er, null, s.a.createElement(kr, null, hr._({
						"*": "Drag and drop images or {=Upload}",
						_1: "Drag and drop image or {=Upload}"
					}, [hr._plural(o ? 2 : 1), hr._param("=Upload", s.a.createElement(gr, {
						onClick: this.clickUploadButton
					}, hr._("Upload", null, {
						hk: "41ZNAf"
					})))], {
						hk: "2OuWpT"
					})), n && s.a.createElement(_r, null, lr()(n))))
				}
			}
			var Tr = n("./src/reddit/icons/svgs/Plus/index.tsx"),
				wr = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/AddImageItem.m.less"),
				Ir = n.n(wr);

			function Pr(e) {
				const {
					onClickEvent: t,
					onFileInput: n
				} = e, r = Object(o.useRef)(null), i = Object(o.useCallback)(() => {
					r && r.current && r.current.click(), t()
				}, [t, r]), a = Object(o.useCallback)(e => {
					n(e.currentTarget.files)
				}, [n]);
				return s.a.createElement("span", {
					className: Ir.a.AddImageWrapper
				}, s.a.createElement("input", {
					accept: br,
					className: Ir.a.hiddenInput,
					multiple: !0,
					onChange: a,
					ref: r,
					type: "file"
				}), s.a.createElement("button", {
					className: Ir.a.AddImageItem,
					onClick: i
				}, s.a.createElement(Tr.a, {
					className: Ir.a.plusIcon
				})))
			}
			var Mr = n("./src/reddit/components/StructuredStyles/StyledComponents/navs.tsx"),
				Rr = n("./src/reddit/icons/svgs/ClearFilled/index.tsx"),
				Nr = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/ImageItem.m.less"),
				Dr = n.n(Nr);
			var Lr = e => {
					const {
						canDrop: t,
						mediaUpload: n,
						isDragging: r,
						isOver: i,
						isSelected: a,
						mediaItem: c,
						removeGalleryItem: l,
						dispatch: d
					} = e, u = Object(o.useRef)(null), p = n.key, h = n.status === Se.a.FAILED, b = Object(o.useCallback)(() => d((e => ({
						type: Xs.SelectGalleryItem,
						payload: {
							key: e
						}
					}))(p)), [d, p]), f = Object(o.useCallback)(e => {
						e.stopPropagation(), l(c)
					}, [l, c]), g = n.metadata.localUrl;
					return g ? s.a.createElement("span", {
						ref: u
					}, s.a.createElement(Mr.a, {
						canDrop: t,
						className: Object(m.a)(Dr.a.GalleryMediaUpload, {
							[Dr.a.isDragging]: r,
							[Dr.a.isSelected]: a,
							[Dr.a.isError]: h
						}),
						isDragging: r,
						isOver: i
					}, s.a.createElement("span", {
						className: Object(m.a)(Dr.a.galleryImage, {
							[Dr.a.isDragging]: r,
							[Dr.a.isSelected]: a,
							[Dr.a.isError]: h
						}),
						onClick: b,
						style: {
							backgroundImage: `url("${g}")`
						}
					}, s.a.createElement("button", {
						className: Object(m.a)(Dr.a.deleteButton, {
							[Dr.a.isDragging]: r,
							[Dr.a.showDeleteNormal]: !a,
							[Dr.a.isError]: h
						}),
						onClick: f
					}, s.a.createElement(Rr.a, {
						className: Object(m.a)(Dr.a.deleteIcon, {
							[Dr.a.isDragging]: r
						})
					}))))) : null
				},
				Ar = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/ImageItemsWrapper.m.less"),
				Br = n.n(Ar);
			var Fr = e => {
					const {
						onRemoveUpload: t,
						dispatch: n,
						mediaState: r,
						uploads: i
					} = e, a = Object(En.a)(), c = Object(o.useCallback)(() => a(D.o()), [a]), l = Object(o.useCallback)(e => {
						t(e.uploadKey), a(D.q())
					}, [a, t]);
					return s.a.createElement("div", {
						className: Br.a.itemsWrapper
					}, s.a.createElement(ir.a, {
						className: Br.a.sortableImages,
						values: r.items,
						getReactKey: e => e.uploadKey,
						render: (e, t, o, a, c) => {
							const d = i[e.uploadKey];
							if (!d) return null;
							if (Object(Se.c)(d)) return s.a.createElement("span", {
								className: Object(m.a)(Br.a.pendingItem, Object($o.b)({
									isLoading: !0
								}))
							});
							const u = e.uploadKey === r.selectedKey;
							return s.a.createElement("span", {
								className: Br.a.imageStyles
							}, a && s.a.createElement("span", {
								className: Br.a.hoverMarker
							}), s.a.createElement(Lr, {
								canDrop: c,
								dispatch: n,
								isDragging: o,
								isOver: a,
								isSelected: u,
								mediaItem: e,
								key: e.uploadKey,
								mediaUpload: d,
								removeGalleryItem: l
							}))
						},
						onDrop: (e, t, o) => {
							n((e => ({
								type: Xs.SetGalleryItems,
								payload: {
									items: e
								}
							}))(o))
						}
					}), r.items.length < ar.b && s.a.createElement(Pr, {
						onClickEvent: c,
						onFileInput: e.onFileInput
					}))
				},
				Ur = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/InputWrapper.m.less"),
				Kr = n.n(Ur);
			var Wr = e => {
					const {
						uploads: t,
						galleryItem: n,
						isSelected: r,
						dispatch: i
					} = e, a = t[n.uploadKey], c = n.caption, d = n.url, u = Object(En.a)(), p = Object(o.useCallback)(e => i((e => ({
						type: Xs.SetCaptionInput,
						payload: {
							input: e
						}
					}))(e)), [i]), h = Object(o.useCallback)(e => i((e => ({
						type: Xs.SetURLInput,
						payload: {
							input: e
						}
					}))(e)), [i]), b = Object(o.useCallback)(e => u(D.p(e)), [u]), f = Object(o.useCallback)(() => b(C.m.CAPTION), [b]), g = Object(o.useCallback)(() => b(C.m.OUTBOUND_URL), [b]), v = !r || !a || !a.url || Object(Se.c)(a);
					return s.a.createElement("div", null, s.a.createElement("div", {
						className: Kr.a.inputWrapper
					}, s.a.createElement(zs, {
						className: Kr.a.inputStyles,
						disabled: v,
						maxLength: ar.a,
						onFocus: f,
						onValueChange: p,
						placeholder: l.fbt._("Add a caption...", null, {
							hk: "1fOmKi"
						}),
						value: c
					}), s.a.createElement("div", {
						className: Kr.a.charsCounter
					}, c.length, "/", ar.a)), s.a.createElement("div", {
						className: Kr.a.inputWrapper
					}, s.a.createElement(zs, {
						className: Object(m.a)(Kr.a.inputStyles, Kr.a.urlInputStyles),
						disabled: v,
						onFocus: g,
						onValueChange: h,
						placeholder: l.fbt._("Add a link...", null, {
							hk: "Z6l9K"
						}),
						value: d
					})))
				},
				Hr = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/Layout.m.less"),
				qr = n.n(Hr);
			var zr = e => {
					const {
						heroSlot: t,
						mainContent: n,
						sideMetaContent: o,
						bottomContent: r
					} = e;
					return s.a.createElement("div", {
						className: qr.a.Layout
					}, s.a.createElement("div", {
						className: qr.a.hero
					}, t), n && s.a.createElement("div", {
						className: qr.a.mainContent
					}, n), o && s.a.createElement("div", {
						className: qr.a.sideMetaContent
					}, o), s.a.createElement("div", {
						className: qr.a.bottomContent
					}, r))
				},
				Gr = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/components/SelectedImage.m.less"),
				Vr = n.n(Gr);
			var Qr = e => {
					const {
						upload: t
					} = e, n = t.metadata.localUrl;
					return Object(Se.c)(t) ? s.a.createElement("span", {
						className: Object(m.a)(Vr.a.pendingImage, Object($o.b)({
							isLoading: !0
						}))
					}) : s.a.createElement("img", {
						className: Vr.a.selectedImage,
						src: n
					})
				},
				Jr = n("./src/reddit/components/ProgressBar/index.tsx"),
				Xr = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/MultipleUploadStatusBar/index.m.less"),
				Zr = n.n(Xr);
			const {
				fbt: Yr
			} = n("./node_modules/fbt/lib/FbtPublic.js"), $r = ge.a.div("ControlRow", Zr.a), ei = ge.a.div("Status", Zr.a);
			var ti = ge.a.wrapped(e => {
					const {
						progress: t
					} = e, n = t && t.percent || 0;
					return s.a.createElement("div", {
						className: e.className
					}, s.a.createElement(Jr.a, {
						percent: n,
						className: Zr.a.OuterDivProgressBar,
						innerBarClassName: Zr.a.ProgressBar
					}), s.a.createElement($r, null, s.a.createElement(ei, {
						className: Zr.a.StatusText
					}, n < 100 ? Yr._("Image uploading in progress...", null, {
						hk: "n2dCj"
					}) : Yr._("Image uploading completed", null, {
						hk: "4ko42w"
					}))))
				}, "Component", Zr.a),
				ni = n("./src/reddit/components/PostCreationForm/MediaInput/ImageGalleryDrop/index.m.less"),
				oi = n.n(ni);

			function si(e) {
				const {
					canDrop: t,
					dispatch: n,
					isOver: r,
					mediaState: i,
					onFileInput: a,
					onRemoveUpload: c,
					uploads: d
				} = e, [u, p] = Object(o.useState)([]), h = i.selectedKey, b = i.items.length > 1, f = i.items.find(e => e.uploadKey === h), g = h && d[h], v = i.items.filter(e => {
					const t = d[e.uploadKey];
					return !!t && t.status === Se.a.FAILED
				}).length, x = Object.values(d).filter(Se.c);
				if (!rr()(u, x))
					if (0 === x.length) p([]);
					else {
						const e = x.filter(e => !u.some(t => t.key === e.key));
						e.length > 0 && p([...u, ...e])
					} const C = u.length > 0,
					E = {
						percent: (() => {
							if (!C) return 0;
							let e = 0;
							return u.forEach(t => {
								const n = d[t.key];
								if (null == n || n && (n.status === Se.a.CANCELED || n.status === Se.a.FAILED || n.status === Se.a.SUCCESS)) e += 100;
								else {
									const n = d[t.key].progress;
									e += n && n.percent || 0
								}
							}), e / u.length
						})(),
						uploaded: 0
					};
				return s.a.createElement(s.a.Fragment, null, s.a.createElement("div", {
					className: Object(m.a)(oi.a.dropArea, {
						[oi.a.isDropAreaActive]: t,
						[oi.a.isDropAreaOver]: r
					})
				}, s.a.createElement(zr, {
					heroSlot: s.a.createElement(Fr, {
						mediaState: i,
						onFileInput: a,
						onRemoveUpload: c,
						uploads: d,
						dispatch: n
					}),
					mainContent: g && b && s.a.createElement(Qr, {
						upload: g
					}),
					sideMetaContent: f && b && s.a.createElement(Wr, {
						dispatch: n,
						galleryItem: f,
						uploads: d,
						isSelected: !!h
					}),
					bottomContent: null
				})), C ? s.a.createElement(ti, {
					progress: E
				}) : null, !!v && s.a.createElement(Ee.a, {
					className: oi.a.errorMessage,
					messages: [l.fbt._("Some files failed to upload, please remove or retry them", null, {
						hk: "3BP9AQ"
					})]
				}))
			}
			var ri = n("./src/reddit/components/RichTextEditor/DragController/helpers.ts"),
				ii = n("./src/reddit/components/ThumbnailSelector/index.tsx"),
				ai = n("./src/reddit/controls/FileDrop/index.tsx"),
				ci = n("./src/reddit/helpers/media/index.ts"),
				li = n("./src/telemetry/models/Media.ts"),
				di = n("./src/reddit/components/MakeGifToggle/index.tsx"),
				ui = n("./src/reddit/icons/svgs/ThumbnailSelect/index.tsx"),
				pi = n("./src/reddit/components/HTML5StreamPlayer/index.tsx"),
				mi = n("./src/reddit/components/Media/ShredditPlayerWrapper/index.tsx"),
				hi = n("./src/reddit/selectors/experiments/d2xShredditPlayer.ts"),
				bi = n("./src/reddit/components/PostCreationForm/MediaInput/MediaUpload/Preview/index.m.less"),
				fi = n.n(bi);
			const gi = ge.a.img("Img", fi.a),
				vi = ge.a.img("BlurImg", fi.a),
				xi = ge.a.wrapped(e => {
					const {
						className: t,
						url: n
					} = e;
					return s.a.createElement("div", {
						className: t
					}, s.a.createElement(vi, {
						src: n
					}), s.a.createElement(gi, {
						src: n
					}))
				}, "ImagePreview", fi.a),
				Ci = ge.a.wrapped(e => {
					const {
						className: t,
						url: n,
						showControls: o,
						videoBlurImgSrc: i
					} = e;
					return Object(r.e)(hi.c) ? s.a.createElement("div", {
						className: t
					}, s.a.createElement(mi.a, {
						isGif: !1,
						isListing: !1,
						posterUrl: i,
						preventAutoplay: !0,
						shouldUseInitializationOptimization: !0,
						source: n
					})) : s.a.createElement("div", {
						className: t
					}, s.a.createElement(pi.b, {
						shouldLoad: !1,
						shouldPause: !1,
						isGif: !1,
						otherSource: n,
						showControlBar: o,
						showSettingsIcon: !1,
						blurImageSrc: i
					}))
				}, "VideoPreview", fi.a);
			var Ei = ge.a.wrapped(e => {
					const {
						className: t,
						type: n,
						url: o,
						showControls: r,
						videoBlurImgSrc: i
					} = e;
					return s.a.createElement("div", {
						className: t
					}, "image" === n ? s.a.createElement(xi, {
						url: o
					}) : s.a.createElement(Ci, {
						url: o,
						videoBlurImgSrc: i,
						showControls: r
					}))
				}, "Component", fi.a),
				yi = n("./src/reddit/components/PostCreationForm/MediaInput/MediaUpload/UploadStatusBar/index.m.less"),
				Oi = n.n(yi);
			const {
				fbt: ki
			} = n("./node_modules/fbt/lib/FbtPublic.js"), _i = ge.a.div("ControlRow", Oi.a), ji = ge.a.wrapped(lt.r, "Button", Oi.a), Si = ge.a.div("Status", Oi.a);
			var Ti = ge.a.wrapped(e => {
					const {
						name: t,
						progress: n,
						onCancel: o
					} = e, r = n && n.percent || 0;
					return s.a.createElement("div", {
						className: e.className
					}, s.a.createElement(Jr.a, {
						percent: r
					}), s.a.createElement(_i, null, s.a.createElement(Si, null, r < 100 ? ki._("Uploading {fileName}", [ki._param("fileName", t)], {
						hk: "1F1ZHh"
					}) : ki._("Success!", null, {
						hk: "2SQAeu"
					})), r < 100 && s.a.createElement(ji, {
						onClick: o
					}, ki._("Cancel", null, {
						hk: "2TSLl5"
					}))))
				}, "Component", Oi.a),
				wi = n("./src/reddit/components/RichTextEditor/Toolbar/FormatterButton/index.tsx"),
				Ii = n("./src/reddit/components/PostCreationForm/MediaInput/MediaUpload/index.m.less"),
				Pi = n.n(Ii);
			const Mi = ge.a.div("Wrapper", Pi.a),
				Ri = ge.a.div("Controls", Pi.a),
				Ni = ge.a.wrapped(ui.a, "ThumbnailSelect", Pi.a),
				Di = e => {
					let {
						isFilled: t,
						...n
					} = e;
					return s.a.createElement(Ni, n)
				};

			function Li(e) {
				const {
					isPostSubmitPending: t,
					mediaType: n,
					onCancelUpload: o,
					onRemove: r,
					upload: i
				} = e, a = i.metadata, {
					localUrl: c,
					videoFirstFrameUrl: d
				} = a, u = i.status, p = u === Se.a.PENDING || u === Se.a.UPLOADING, m = u === Se.a.SUCCESS, h = !t;
				return s.a.createElement(Mi, null, p ? s.a.createElement(Ti, {
					className: Pi.a.UploadStatusBar,
					name: i.file.name,
					progress: i.progress,
					onCancel: o
				}) : null, c ? s.a.createElement(Ei, {
					type: n,
					url: c,
					showControls: m,
					videoBlurImgSrc: d
				}) : null, m && s.a.createElement(Ri, null, "video" === n && s.a.createElement(di.a, {
					disabled: !!e.makeGifDisableReason || !h,
					tooltip: e.makeGifDisableReason,
					on: e.isMakeGifToggleOn,
					onClick: e.onMakeGifToggle
				}), "video" === n && s.a.createElement(wi.a, {
					enabled: h,
					Icon: Di,
					tooltip: l.fbt._("Choose thumbnail", null, {
						hk: "2XlKfd"
					}),
					onClick: e.onShowThumbnailSelector
				}), s.a.createElement(wi.a, {
					enabled: h,
					iconName: "delete",
					tooltip: l.fbt._("Remove", null, {
						hk: "H42IB"
					}),
					onClick: r
				})))
			}
			var Ai = n("./src/reddit/components/PostCreationForm/MediaInput/RemovePrompt/index.m.less"),
				Bi = n.n(Ai);
			const Fi = "POST_CREATION_MEDIA_REMOVE_PROMPT_ID",
				Ui = ge.a.div("Wrapper", Bi.a),
				Ki = ge.a.wrapped(Et.a, "TitleRow", Bi.a),
				Wi = ge.a.div("DetailsContainer", Bi.a),
				Hi = ge.a.wrapped(Et.a, "ButtonRow", Bi.a),
				qi = ge.a.wrapped(lt.o, "CancelButton", Bi.a),
				zi = ge.a.wrapped(lt.l, "ConfirmButton", Bi.a);
			var Gi = Object(Co.a)(e => {
					const {
						isVideo: t
					} = e;
					return s.a.createElement(Ui, null, s.a.createElement(Ki, null, t ? l.fbt._("Remove video?", null, {
						hk: "34eepe"
					}) : l.fbt._("Remove image?", null, {
						hk: "41e1Uy"
					})), s.a.createElement(Wi, null, t ? l.fbt._("Are you sure you want to remove your video?", null, {
						hk: "smTuF"
					}) : l.fbt._("Are you sure you want to remove your image?", null, {
						hk: "Ci5LM"
					})), s.a.createElement(Hi, null, s.a.createElement(qi, {
						onClick: e.onCanceled
					}, l.fbt._("Keep", null, {
						hk: "4gFSdj"
					})), s.a.createElement(zi, {
						onClick: e.onConfirmed
					}, l.fbt._("Remove", null, {
						hk: "3tYl0U"
					}))))
				}),
				Vi = n("./src/reddit/components/PostCreationForm/MediaInput/index.m.less"),
				Qi = n.n(Vi);
			const Ji = "MEDIA_POST_VIDEO_THUMBNAIL_SELECTOR_MODAL_ID",
				Xi = Object(N.v)(),
				Zi = Object(i.c)({
					activeModalId: L.a,
					isPostPending: I.eb,
					uploads: Object(or.a)(e => tr()(e.uploads, e => e.key.startsWith(H.a))),
					value: I.Z,
					isImageGalleryCreationEnabled: I.P,
					isVideoCreationEnabled: I.W
				}),
				Yi = Object(r.b)(Zi, e => ({
					onChange: t => e(a.d(t)),
					startMediaGalleryUploads: (t, n) => e(H.d(t, n)),
					removeUpload: t => e(Q.i(t, !0)),
					toggleThumbnailModal: () => e(a.z(Ji)),
					toggleRemovePrompt: () => e(a.z(Fi))
				})),
				$i = ge.a.div("Container", Qi.a),
				ea = (e, t, n) => {
					if (!e.length) return null;
					let o = e.findIndex(e => e.uploadKey === n);
					if (-1 === o) {
						const s = t.findIndex(e => e.uploadKey === n);
						o = $s()(s - 1, 0, e.length - 1)
					}
					return e[o].uploadKey
				};
			class ta extends s.a.Component {
				constructor() {
					super(...arguments), this.onFileDrop = e => this.uploadMediaFiles(e, li.FileSource.DragAndDrop), this.onFileInput = e => this.uploadMediaFiles(e, li.FileSource.FileSelector), this.onRemoveUpload = e => {
						const {
							value: t
						} = this.props, {
							items: n,
							selectedKey: o
						} = t, s = n.filter(t => t.uploadKey !== e);
						this.props.onChange({
							...t,
							items: s,
							selectedKey: ea(s, n, o)
						}), this.props.removeUpload(e)
					}, this.onCancelSingleMediaUpload = () => {
						this.onRemoveUpload(this.getSingleUpload().key)
					}, this.handlePaste = e => {
						if (e.clipboardData) {
							const t = Object(ri.a)(e.clipboardData);
							t.length && (e.preventDefault(), e.stopPropagation(), this.uploadMediaFiles(t, li.FileSource.Clipboard))
						}
					}, this.onRemoveConfirmed = () => {
						this.props.toggleRemovePrompt(), this.onRemoveUpload(this.getSingleUpload().key)
					}, this.onThumbnailSelect = e => {
						this.toggleThumbnailSelector();
						const {
							value: t
						} = this.props;
						if (!Object(C.x)(t)) return;
						const n = t.items[0],
							o = n.video;
						this.props.onChange({
							...t,
							items: [{
								...n,
								video: {
									...o,
									thumbnail: e
								}
							}]
						})
					}, this.toggleThumbnailSelector = () => {
						this.props.toggleThumbnailModal()
					}, this.onMakeGifToggle = () => {
						const {
							value: e
						} = this.props;
						if (!Object(C.x)(e)) return;
						const t = e.items[0],
							n = t.video;
						this.props.onChange({
							...e,
							items: [{
								...t,
								video: {
									...n,
									isMakeGif: !n.isMakeGif
								}
							}]
						})
					}, this.dispatchAction = e => {
						const {
							value: t
						} = this.props, n = function(e, t) {
							switch (t.type) {
								case Xs.SelectGalleryItem: {
									const {
										key: n
									} = t.payload;
									return {
										...e,
										selectedKey: n
									}
								}
								case Xs.SetGalleryItems: {
									const {
										items: n
									} = t.payload;
									return {
										...e,
										items: n
									}
								}
								case Xs.SetCaptionInput: {
									const {
										input: n
									} = t.payload, {
										selectedKey: o,
										items: s
									} = e;
									return o ? {
										...e,
										items: s.map(e => e.uploadKey === o ? {
											...e,
											caption: n
										} : e)
									} : e
								}
								case Xs.SetURLInput: {
									const {
										input: n
									} = t.payload, {
										selectedKey: o,
										items: s
									} = e;
									return o ? {
										...e,
										items: s.map(e => e.uploadKey === o ? {
											...e,
											url: n
										} : e)
									} : e
								}
								case Xs.SelectPrevMedia: {
									const {
										selectedKey: t,
										items: n
									} = e, o = n.findIndex(e => e.uploadKey === t);
									let s = -1 === o ? 0 : o - 1;
									return s < 0 && (s = n.length - 1), {
										...e,
										selectedKey: n[s].uploadKey
									}
								}
								case Xs.SelectNextMedia: {
									const {
										selectedKey: t,
										items: n
									} = e, o = n.findIndex(e => e.uploadKey === t), s = -1 === o ? 0 : (o + 1) % n.length;
									return {
										...e,
										selectedKey: n[s].uploadKey
									}
								}
								default:
									return e
							}
						}(t, e);
						this.props.onChange(n)
					}, this.renderDropArea = (e, t) => {
						const {
							isPostPending: n,
							value: o,
							isImageGalleryCreationEnabled: r,
							uploads: i
						} = this.props;
						if (!Object(C.x)(o) && r && o.items.length >= 1) return s.a.createElement(si, {
							isOver: e,
							canDrop: t,
							dispatch: this.dispatchAction,
							mediaState: o,
							onFileInput: this.onFileInput,
							onRemoveUpload: this.onRemoveUpload,
							uploads: i
						}); {
							const i = this.getSingleUpload(),
								a = this.props.value.items[0],
								{
									isMakeGif: c = !1,
									makeGifDisableReason: l = null
								} = a && a.video || {},
								d = i && i.status === Se.a.FAILED,
								u = i && d ? Object(nr.a)(i.error) : "",
								p = i && Object(ci.g)(i.metadata.mimetype);
							return o && p && i && !d ? s.a.createElement(Li, {
								isPostSubmitPending: n,
								upload: i,
								mediaType: p,
								onRemove: this.props.toggleRemovePrompt,
								onCancelUpload: this.onCancelSingleMediaUpload,
								onShowThumbnailSelector: this.toggleThumbnailSelector,
								onMakeGifToggle: this.onMakeGifToggle,
								isMakeGifToggleOn: c,
								makeGifDisableReason: l
							}) : s.a.createElement(Sr, {
								lastErrorMsg: u,
								isOver: e,
								canDrop: t,
								onFileInput: this.onFileInput,
								allowMultiple: r
							})
						}
					}
				}
				componentDidMount() {
					document.addEventListener("paste", this.handlePaste)
				}
				componentWillUnmount() {
					document.removeEventListener("paste", this.handlePaste)
				}
				getSingleUpload() {
					const {
						items: e
					} = this.props.value, t = 1 === e.length && e[0];
					return t && this.props.uploads[t.uploadKey] || void 0
				}
				uploadMediaFiles(e, t) {
					this.props.startMediaGalleryUploads([...e], t)
				}
				render() {
					const {
						value: e
					} = this.props, {
						items: t
					} = e, n = this.getSingleUpload(), o = t[0], r = Object(C.x)(e), i = r && o.video.thumbnail || void 0;
					return s.a.createElement($i, null, s.a.createElement(ai.a, {
						render: (e, t) => this.renderDropArea(e, t),
						onDrop: this.onFileDrop
					}), n && n.metadata.videoDuration && s.a.createElement(ii.a, {
						onSelect: this.onThumbnailSelect,
						onToggleModal: this.toggleThumbnailSelector,
						videoSource: n.metadata.localUrl,
						videoDuration: n.metadata.videoDuration,
						selected: i,
						isOpen: this.props.activeModalId === Ji
					}), this.props.activeModalId === Fi && s.a.createElement(Gi, {
						isVideo: r,
						onCanceled: this.props.toggleRemovePrompt,
						onConfirmed: this.onRemoveConfirmed
					}))
				}
			}
			var na = Xi(Yi(ta)),
				oa = n("./src/reddit/actions/post.ts"),
				sa = n("./src/reddit/controls/CheckboxInput/index.tsx"),
				ra = n("./src/reddit/controls/OutboundLink/index.tsx"),
				ia = n("./src/reddit/selectors/externalAccount.ts"),
				aa = n("./src/reddit/icons/fonts/Info/index.tsx"),
				ca = n("./src/reddit/components/PostCreationForm/PostCreationFooter/PostSettings/Hint/index.m.less"),
				la = n.n(ca);
			const da = ge.a.wrapped(aa.a, "Info", la.a),
				ua = ge.a.div("TooltipContent", la.a);
			var pa = e => s.a.createElement("div", {
					className: la.a.Hint
				}, s.a.createElement(at.a, {
					className: la.a.HoverTooltip,
					tooltipContentClass: la.a.tooltipContentClass,
					text: s.a.createElement(ua, null, e.text)
				}), s.a.createElement(da, null)),
				ma = n("./src/reddit/components/PostCreationForm/PostCreationFooter/PostSettings/index.m.less"),
				ha = n.n(ma);
			const ba = ge.a.wrapped(sa.a, "CheckboxInput", ha.a),
				fa = ge.a.wrapped(ra.b, "ConnectAccountLink", ha.a),
				ga = ge.a.div("Container", ha.a),
				va = ge.a.div("ContainerLeft", ha.a),
				xa = ge.a.div("ContainerRight", ha.a),
				Ca = ge.a.div("CheckboxText", ha.a),
				Ea = ge.a.div("Option", ha.a),
				ya = ge.a.wrapped($e.a, "TextButton", ha.a),
				Oa = ge.a.input("TextBox", ha.a),
				ka = ge.a.div("Wrapper", ha.a),
				_a = Object(i.c)({
					connectedTwitterAccount: ia.a,
					currentSubredditOrProfile: N.q,
					currentUser: U.m,
					isDraftPending: B.g,
					isMediaUploadPending: I.ab,
					isPostPending: I.tb,
					isPublicLink: I.T,
					postToTwitter: I.ib,
					sendReplies: I.mb,
					sharingLink: B.i,
					submissionType: I.a
				}),
				ja = Object(r.b)(_a, (e, t) => ({
					togglePostToTwitter: t => {
						e(a.A(t)), e((e, n) => D.I(n(), t))
					},
					toggleSendReplies: t => {
						e(a.B(t))
					},
					toggleDraftIsPublic: n => {
						e(G.s(n)), e(Object(G.r)(t.draftId)), e((e, o) => {
							const s = Object(B.h)(o(), t.draftId);
							s && D.i(o(), s, n)
						})
					},
					copyLink: t => e(Object(oa.C)(t)),
					trackConnectAccountsClick: () => e((e, t) => D.d(t()))
				}), (e, t, n) => ({
					...e,
					...t,
					...n,
					onTogglePostToTwitter: () => t.togglePostToTwitter(!e.postToTwitter),
					onToggleSendReplies: () => t.toggleSendReplies(!e.sendReplies),
					onToggleDraftIsPublic: () => {
						t.toggleDraftIsPublic(!e.isPublicLink), e.isPublicLink || t.copyLink(e.sharingLink)
					},
					onCopyLink: () => t.copyLink(e.sharingLink)
				}));
			var Sa = Object(N.v)()(ja(e => {
					const {
						connectedTwitterAccount: t,
						currentSubredditOrProfile: n,
						currentUser: o,
						draftId: r,
						submissionType: i
					} = e, a = !!n && !!n.isQuarantined, c = e.isDraftPending || e.isPostPending || e.isMediaUploadPending, d = i !== h.ac.MEDIA && r, u = e.isPublicLink, p = o && o.hasUserProfile;
					return s.a.createElement(ga, null, s.a.createElement(va, {
						className: e.className
					}, s.a.createElement(Et.a, null, s.a.createElement(Ea, null, s.a.createElement(ba, {
						disabled: c,
						name: "send-replies",
						onChange: e.onToggleSendReplies,
						value: e.sendReplies
					}, s.a.createElement(Ca, null, l.fbt._("Send me post reply notifications", null, {
						hk: "3kNmey"
					}))))), p && t && s.a.createElement(Et.a, null, s.a.createElement(Ea, null, s.a.createElement(ba, {
						disabled: c || a,
						name: "post-to-twitter",
						onChange: e.onTogglePostToTwitter,
						value: e.postToTwitter
					}, s.a.createElement(Ca, null, l.fbt._("Share this post on Twitter", null, {
						hk: "3SPI4V"
					}))))), p && !t && !a && s.a.createElement(Et.a, null, s.a.createElement(fa, {
						href: "/settings#connected-accounts",
						onClick: e.trackConnectAccountsClick
					}, l.fbt._("Connect accounts to share your post", null, {
						hk: "1nIuWp"
					})), s.a.createElement(pa, {
						text: l.fbt._("Connect a Twitter account in your User Settings. With a connected account you can choose to share new posts you make directly to Twitter.", null, {
							hk: "JRoQz"
						})
					}))), s.a.createElement(xa, {
						className: e.className
					}, d && s.a.createElement(ka, null, s.a.createElement(Ea, null, s.a.createElement(ba, {
						name: "enable-public-link",
						onChange: e.onToggleDraftIsPublic,
						value: e.isPublicLink
					}, s.a.createElement(Ca, null, l.fbt._("Enable public draft link", null, {
						hk: "1SpDgT"
					})), s.a.createElement(pa, {
						text: l.fbt._("This option will create a link to a preview of this draft. Anyone with this link will be able to see this draft. You can disable this link at any time.", null, {
							hk: "1r77YF"
						})
					})))), d && u && s.a.createElement(Et.a, null, s.a.createElement(Oa, {
						disabled: !0,
						value: e.sharingLink
					}), s.a.createElement(ya, {
						onClick: e.onCopyLink
					}, l.fbt._("Copy link", null, {
						hk: "22rywZ"
					})))))
				})),
				Ta = n("./src/reddit/components/PostCreationForm/PostCreationFooter/index.m.less"),
				wa = n.n(Ta);
			const Ia = ge.a.div("Container", wa.a);
			var Pa = e => s.a.createElement(Ia, null, s.a.createElement(Sa, {
					draftId: e.draftId
				})),
				Ma = n("./src/reddit/featureFlags/profileCollections.ts"),
				Ra = n("./src/reddit/selectors/profile.ts"),
				Na = n("./src/reddit/components/PostCreationForm/PostCreationHeader/index.m.less"),
				Da = n.n(Na);
			const La = ge.a.span("CountIndicator", Da.a),
				Aa = ge.a.wrapped(lt.r, "LinkButton", Da.a),
				Ba = Aa,
				Fa = Object(i.c)({
					canPostAsModerator: I.e,
					collectionsCount: e => {
						const t = Object(I.h)(e);
						let n = t.id;
						if (t.isProfile && Object(Ma.a)(e)) {
							const o = Object(Ra.k)(e, {
								profileName: t.name
							});
							n = o && o.id
						}
						return n ? Object(k.u)(e, {
							subredditId: n
						}) : 0
					},
					destSubredditAboutInfo: I.g,
					draftsCount: U.n,
					isPending: I.eb,
					isOpenAIPilotV1: X.g
				});
			var Ua = Object(r.b)(Fa, e => ({
					showDraftsList: () => {
						e(G.p()), e(a.z(C.e))
					},
					showCollectionsList: () => {
						e(a.z(C.a))
					}
				}))(e => {
					const {
						canPostAsModerator: t,
						collectionsCount: n,
						destSubredditAboutInfo: r,
						draftsCount: i,
						isPending: a,
						showCollectionsList: c,
						showDraftsList: d,
						submissionType: u,
						submitMode: p,
						isOpenAIPilotV1: b
					} = e, f = Object(te.b)(), g = Object(o.useCallback)(() => {
						d(), f(Object(D.k)(i))
					}, [d, f, i]), v = u === h.ac.CROSSPOST, x = v ? l.fbt._("Create a crosspost", null, {
						hk: "1oNF7H"
					}) : l.fbt._("Create a post", null, {
						hk: "4u8qEy"
					}), E = t && r && r.collectionsEnabled;
					return s.a.createElement("div", {
						className: Object(m.a)(Da.a.CreatePostHeader, {
							[Da.a.isSubredditRec]: b
						})
					}, s.a.createElement("div", {
						className: Da.a.CreateLabel
					}, p === C.r.Draft ? l.fbt._("Edit draft", null, {
						hk: "oMgcW"
					}) : x), !v && s.a.createElement(s.a.Fragment, null, E && s.a.createElement(Ba, {
						onClick: c
					}, l.fbt._("Collections", null, {
						hk: "2FVot0"
					}), s.a.createElement(La, null, n)), s.a.createElement(Aa, {
						disabled: a,
						onClick: g
					}, l.fbt._("Drafts", null, {
						hk: "25z4rQ"
					}), s.a.createElement(La, null, i))))
				}),
				Ka = n("./node_modules/lodash/curryRight.js"),
				Wa = n.n(Ka),
				Ha = n("./src/reddit/actions/polls.ts"),
				qa = n("./src/reddit/actions/postCreation/editorContent.ts"),
				za = n("./src/reddit/actions/postCreation/postGuidance.ts"),
				Ga = n("./src/reddit/components/Governance/TokenAmount/index.tsx"),
				Va = n("./src/reddit/selectors/crypto/points.ts"),
				Qa = n("./src/reddit/components/Governance/PollHelpText/index.m.less"),
				Ja = n.n(Qa);

			function Xa(e) {
				var t;
				const {
					subreddit: n
				} = e, o = Object(r.e)(e => Object(Va.b)(e, n.id));
				if (!o) return null;
				const i = null === (t = o.polls) || void 0 === t ? void 0 : t.decisionThreshold;
				return s.a.createElement("div", {
					className: Ja.a.pollHelpText
				}, i && s.a.createElement(s.a.Fragment, null, s.a.createElement(Ga.a, {
					className: Ja.a.decisionThreholdAmount,
					amount: i,
					subredditId: n.id
				}), s.a.createElement("div", {
					className: Ja.a.decisionThresholdTitle
				}, l.fbt._("Decision Threshold", null, {
					hk: "39nut8"
				}))), s.a.createElement("div", {
					className: Ja.a.decisionThresholdExplanation
				}, l.fbt._("Governance Polls pass when one option reaches the Decision Threshold. The Decision Threshold is updated regularly based on the number of {tokenName} that voted in previous governance polls.", [l.fbt._param("tokenName", o.name)], {
					hk: "Di1tp"
				})))
			}
			var Za = n("./src/reddit/actions/governance/index.ts"),
				Ya = n("./src/reddit/actions/tooltip.ts"),
				$a = n("./src/reddit/controls/Dropdown/index.tsx"),
				ec = n("./src/reddit/controls/Dropdown/Row.tsx"),
				tc = n("./src/reddit/icons/svgs/Dropdown/index.tsx"),
				nc = n("./src/reddit/components/PollCreator/EndDatePicker/utils.ts");
			const oc = () => ({
					text: ""
				}),
				sc = () => ({
					duration: 3 * h.D,
					endDate: Object(nc.b)(),
					options: Array.from({
						length: 2
					}).map(oc)
				});
			var rc = n("./src/reddit/components/PollCreator/SortableOptions/index.m.less"),
				ic = n.n(rc),
				ac = n("./src/reddit/icons/svgs/Grapple/index.tsx");

			function cc(e) {
				return s.a.createElement("div", {
					className: Object(m.a)(e.className, ic.a.container),
					style: {
						left: e.isDropTarget ? 16 : 0,
						opacity: lc(e),
						pointerEvents: e.isDisabled ? "none" : void 0
					}
				}, s.a.createElement(ac.a, {
					className: ic.a.grapple
				}), s.a.createElement("input", {
					className: ic.a.input,
					maxLength: 120,
					placeholder: `${l.fbt._("option",null,{hk:"3IGnB"})} ${e.index+1}`,
					value: e.text,
					onBlur: e.onBlur,
					onChange: t => e.onTextChange(t.currentTarget.value),
					onFocus: e.onFocus
				}), e.removable && s.a.createElement(Oo.a, {
					className: ic.a.trash,
					onClick: e.onRemove
				}))
			}

			function lc(e) {
				return e.isDisabled ? .5 : e.isBeingDragged ? .25 : 1
			}
			const {
				fbt: dc
			} = n("./node_modules/fbt/lib/FbtPublic.js");

			function uc(e, t) {
				return `${t}-${e}`
			}
			const pc = e => {
				let {
					poll: t,
					onUpdatePoll: n,
					disabled: r,
					renderExtraControls: i
				} = e;
				const a = Object(En.a)(),
					[c, l] = Object(o.useState)(!1),
					d = () => l(!1),
					u = () => l(!0),
					p = e => {
						c && (e.preventDefault(), e.stopPropagation())
					},
					m = e => o => {
						const s = t.options.indexOf(e);
						n({
							...t,
							options: t.options.slice(0, s).concat({
								text: o
							}).concat(t.options.slice(s + 1))
						})
					},
					h = e => () => {
						n({
							...t,
							options: t.options.filter(t => t !== e)
						})
					};
				Object(o.useEffect)(() => (document.addEventListener("dragstart", p), document.addEventListener("drop", p), document.addEventListener("dragover", p), () => {
					document.removeEventListener("dragstart", p), document.removeEventListener("drop", p), document.removeEventListener("dragover", p)
				}));
				const b = t.options.length >= 6 || r;
				return s.a.createElement("div", {
					className: ic.a.options
				}, s.a.createElement(ir.a, {
					getReactKey: uc,
					render: (e, t, n, o, i) => s.a.createElement(cc, {
						index: t,
						isBeingDragged: n,
						isDisabled: r,
						isDropTarget: o && i,
						option: e,
						removable: t > 1,
						text: e.text,
						onBlur: d,
						onFocus: u,
						onTextChange: m(e),
						onRemove: h(e)
					}),
					values: t.options,
					onDrop: (e, o, s) => n({
						...t,
						options: s
					})
				}), s.a.createElement("div", {
					className: ic.a.controls
				}, s.a.createElement(lt.t, {
					className: ic.a.addButton,
					disabled: b,
					onClick: () => void(t.options.length <= 6 && (a(Object(D.z)()), n({
						...t,
						options: t.options.concat({
							text: ""
						})
					}))),
					priority: lt.c.Plain
				}, dc._("Add Option", null, {
					hk: "hUP0k"
				})), i && i()))
			};
			var mc = n("./src/reddit/components/PollCreator/index.m.less"),
				hc = n.n(mc);
			const bc = 7,
				fc = "poll-creation-voting-length";
			var gc;
			! function(e) {
				e.Options = "options", e.VotingLength = "votingLength"
			}(gc || (gc = {}));
			const vc = Object(zt.a)($a.a),
				xc = Object(i.c)({
					tournamentsEnabled: (e, t) => {
						let {
							subredditId: n
						} = t;
						return !!n && Object(F.S)(e, {
							subredditId: n
						})
					},
					allowPolls: I.d,
					votingLengthDropdownIsOpen: e => e.tooltip.tooltipId === fc
				});
			class Cc extends s.a.Component {
				constructor(e) {
					super(e), this.handleVotingLengthDropdownClick = () => {
						const {
							sendEvent: e,
							votingLengthDropdownIsOpen: t
						} = this.props;
						t || e(Object(D.A)()), this.props.onToggleVotingLengthDropdown()
					}, this.handleChangeVotingLength = e => t => {
						this.props.onUpdatePoll({
							...e,
							duration: t
						}), this.props.onToggleVotingLengthDropdown()
					}
				}
				sectionIsDisabled(e) {
					return this.props.disabledSections && this.props.disabledSections.includes(e)
				}
				render() {
					const {
						className: e,
						poll: t = sc()
					} = this.props;
					return s.a.createElement("div", {
						"data-testid": "poll-creator"
					}, s.a.createElement("div", {
						className: Object(m.a)(e, hc.a.container)
					}, s.a.createElement(pc, {
						poll: t,
						disabled: Boolean(this.sectionIsDisabled(gc.Options)),
						onUpdatePoll: this.props.onUpdatePoll,
						renderExtraControls: () => this.renderControls(t)
					}), this.props.hintTextComponent && s.a.createElement("div", {
						className: hc.a.help
					}, this.props.hintTextComponent)))
				}
				renderControls(e) {
					const t = this.sectionIsDisabled(gc.VotingLength),
						n = Math.floor(e.duration / h.D);
					return s.a.createElement("div", {
						className: Object(m.a)(hc.a.votingLengthSelector, {
							[hc.a.votingLengthSelector__disabled]: !!t
						})
					}, s.a.createElement("div", {
						className: hc.a.votingLengthTitleText
					}, l.fbt._("Voting length:", null, {
						hk: "4pPVUg"
					})), s.a.createElement("div", {
						className: hc.a.votingLengthDropdownContainer,
						id: fc
					}, s.a.createElement("div", {
						className: hc.a.votingLengthDisplay,
						onClick: this.handleVotingLengthDropdownClick
					}, s.a.createElement("div", null, l.fbt._({
						"*": "{numDays} days",
						_1: "{numDays} day"
					}, [l.fbt._param("numDays", String(n)), l.fbt._plural(n)], {
						hk: "2HsFBA"
					})), s.a.createElement(tc.a, {
						className: hc.a.votingLengthCaret
					})), this.renderVotingLengthDropdown(e)))
				}
				renderVotingLengthDropdown(e) {
					const {
						votingLengthDropdownIsOpen: t
					} = this.props, n = this.handleChangeVotingLength(e);
					return s.a.createElement(vc, {
						className: hc.a.votingLengthDropdown,
						tooltipId: fc,
						isOpen: t
					}, Array.from({
						length: bc
					}).map((t, o) => {
						const r = o + 1;
						return s.a.createElement(ec.b, {
							"data-redditstyle": !0,
							key: o,
							index: o,
							displayText: l.fbt._({
								"*": "{number} days",
								_1: "1 day"
							}, [l.fbt._plural(r, "number")], {
								hk: "bXXYo"
							}),
							isSelected: Math.floor(e.duration / h.D) === r,
							onClick: () => n(r * h.D)
						})
					}))
				}
			}
			var Ec = Object(r.b)(xc, (e, t) => ({
					onToggleVotingLengthDropdown: () => e(Object(Ya.h)({
						tooltipId: fc
					})),
					setPollType: n => e(Object(a.l)({
						oldType: t.pollType || null,
						type: n
					}))
				}))(Object(te.c)(Cc)),
				yc = n("./src/reddit/components/Governance/ProposalTemplates/Generic/index.m.less"),
				Oc = n.n(yc);
			const kc = [{
				text: "Yes"
			}, {
				text: "No"
			}];

			function _c(e) {
				const t = {
					duration: e.poll ? e.poll.duration : h.D,
					options: e.options || kc
				};
				return s.a.createElement("div", {
					className: Object(m.a)(Oc.a.container, e.className)
				}, s.a.createElement("div", {
					className: Oc.a.topline
				}, e.children.map(e => "string" == typeof e ? s.a.createElement("div", {
					className: Oc.a.text
				}, e) : e)), s.a.createElement(Ec, {
					disabledSections: [gc.Options],
					hintTextComponent: s.a.createElement("div", {
						className: Oc.a.hintText
					}, s.a.createElement(Xa, {
						subreddit: e.subreddit
					})),
					poll: t,
					onUpdatePoll: e.onUpdatePoll
				}))
			}
			var jc = n("./src/reddit/controls/FormFields/index.tsx"),
				Sc = n("./src/reddit/components/Governance/ProposalTemplates/Spinoff/index.m.less"),
				Tc = n.n(Sc);
			const wc = 3,
				Ic = 20,
				Pc = /[^(\w|_)]/g;
			const Mc = Object(i.c)({
				newSubredditName: e => e.creations.formData.newSubreddit
			});
			var Rc = Object(r.b)(Mc, e => ({
					onSubredditNameChange: t => e(Object(Za.a)({
						subredditName: t
					}))
				}))((function(e) {
					return s.a.createElement(_c, {
						className: e.className,
						options: je.f[je.a.Spinoff](e.newSubredditName),
						poll: e.poll,
						subreddit: e.subreddit,
						onUpdatePoll: e.onUpdatePoll
					}, l.fbt._("Should we spin-off to", null, {
						hk: "3oKiyE"
					}), s.a.createElement(jc.c, {
						redditStyle: !0,
						className: Tc.a.input,
						label: l.fbt._("subreddit name", null, {
							hk: "1qzJqB"
						}),
						max: Ic,
						min: wc,
						type: "text",
						value: e.newSubredditName,
						onChange: t => {
							const n = t.currentTarget.value.replace(Pc, "");
							e.onSubredditNameChange(n)
						}
					}), l.fbt._("?", null, {
						hk: "1b1vhH"
					}))
				})),
				Nc = n("./src/reddit/components/Governance/ProposalTemplates/TopModReplacement/index.m.less"),
				Dc = n.n(Nc);
			const Lc = 20;
			const Ac = Object(i.c)({
				topMod: e => e.creations.formData.newTopMod
			});
			var Bc = Object(r.b)(Ac, e => ({
					onUsernameChange: t => e(Object(Za.b)({
						username: t
					}))
				}))((function(e) {
					return s.a.createElement(_c, {
						className: e.className,
						options: je.f[je.a.ReplaceTopMod](),
						poll: e.poll,
						subreddit: e.subreddit,
						onUpdatePoll: e.onUpdatePoll
					}, l.fbt._("Should", null, {
						hk: "22RF0A"
					}), s.a.createElement(jc.c, {
						redditStyle: !0,
						className: Dc.a.input,
						label: l.fbt._("username", null, {
							hk: "1Fk03V"
						}),
						max: Lc,
						type: "text",
						value: e.topMod,
						onChange: t => e.onUsernameChange(t.currentTarget.value)
					}), l.fbt._("become the top moderator?", null, {
						hk: "4COtce"
					}))
				})),
				Fc = n("./src/reddit/icons/svgs/Info/index.tsx"),
				Uc = n("./src/reddit/components/PollCreator/DefaultHintText/index.m.less"),
				Kc = n.n(Uc);
			const Wc = e => [() => l.fbt._("Suggest short clear options", null, {
				hk: "4bpIfe"
			}), () => l.fbt._("The more options, the better", null, {
				hk: "37GJUq"
			}), () => e ? l.fbt._("Choose the prediction duration", null, {
				hk: "16Yw7y"
			}) : l.fbt._("Choose the poll duration", null, {
				hk: "19Gh6D"
			}), () => l.fbt._("Options can't be edited after post creation", null, {
				hk: "3iRICg"
			})];

			function Hc(e) {
				const {
					isPrediction: t
				} = e;
				return s.a.createElement(o.Fragment, null, s.a.createElement("div", {
					className: Kc.a.helpTitle
				}, s.a.createElement(Fc.a, {
					className: Kc.a.infoIcon
				}), s.a.createElement("div", {
					className: Kc.a.helpTitleText
				}, t ? l.fbt._("Tips on Better Predictions", null, {
					hk: "3kIzkr"
				}) : l.fbt._("Tips on Better Polls", null, {
					hk: "2QMuX9"
				}))), s.a.createElement("ol", {
					className: Kc.a.helpTextList
				}, Wc(!!t).map(e => s.a.createElement("li", {
					className: Kc.a.helpTextItem,
					key: e()
				}, e()))))
			}
			var qc = n("./src/reddit/components/PostCreationForm/MarkdownEditor/index.tsx"),
				zc = n("./src/reddit/components/RichTextEditor/index.tsx"),
				Gc = n("./src/reddit/featureFlags/component.tsx"),
				Vc = n("./src/reddit/helpers/richTextEditor/index.ts"),
				Qc = n("./src/reddit/models/PostRequirements/index.ts"),
				Jc = n("./src/reddit/components/Econ/Prediction/hooks/useTournamentsQuery.ts"),
				Xc = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/DateInput/index.tsx"),
				Zc = n("./src/reddit/components/PostCreationForm/SchedulePickerModal/TimeInput/index.tsx"),
				Yc = n("./src/reddit/components/PollCreator/EndDatePicker/useEndDatePicker.tsx"),
				$c = n("./src/reddit/components/PollCreator/EndDatePicker/index.m.less"),
				el = n.n($c);

			function tl(e) {
				let {
					poll: t
				} = e;
				const n = Object(r.d)(),
					{
						endDate: o
					} = t,
					{
						date: i,
						time: a,
						timeZoneAbbr: c,
						onChange: d,
						maxDate: u,
						minDate: p,
						minTime: m
					} = Object(Yc.a)(o, e => n(Object(Ha.b)({
						...t,
						endDate: e
					})));
				return s.a.createElement("div", {
					className: el.a.dateTime
				}, s.a.createElement(Xc.a, {
					"aria-label": l.fbt._("Prediction end date", null, {
						hk: "4zYv4T"
					}),
					onChange: e => d({
						date: e
					}),
					min: p,
					max: u,
					value: i,
					required: !0
				}), s.a.createElement(Zc.a, {
					className: el.a.timeInput,
					"aria-label": l.fbt._("Prediction end time", null, {
						hk: "1idFl4"
					}),
					onChange: e => d({
						time: e
					}),
					min: m,
					value: a,
					required: !0
				}), c && s.a.createElement("div", {
					className: el.a.timeZone
				}, c))
			}
			var nl = n("./src/reddit/components/ContentTooltip/index.tsx"),
				ol = n("./src/reddit/selectors/telemetry.ts");
			const sl = e => ({
					...Object(ol.q)(e),
					source: xn.a,
					action: "view",
					noun: "predict_info_modal",
					subreddit: Object(ol.nb)(e)
				}),
				rl = e => ({
					...Object(ol.q)(e),
					source: xn.a,
					action: "close",
					noun: "predict_info_modal",
					subreddit: Object(ol.nb)(e)
				}),
				il = e => ({
					...Object(ol.q)(e),
					source: xn.a,
					action: "click",
					noun: "predictions_how_it_works",
					subreddit: Object(ol.nb)(e),
					actionInfo: {
						pageType: "predict_info_modal"
					}
				});
			var al = n("./src/reddit/components/PostCreationForm/PredictionEditor/TooltipHeader/index.m.less"),
				cl = n.n(al);
			const {
				fbt: ll
			} = n("./node_modules/fbt/lib/FbtPublic.js"), dl = {
				top: ct.a.alienblue,
				bottom: ct.a.alienblue
			}, ul = e => {
				let {
					tooltipId: t,
					tooltipContent: n,
					className: i,
					isDisabled: a,
					children: c
				} = e;
				const [l, d] = Object(o.useState)(!1), u = Object(r.d)(), p = Object(En.a)(), h = Object(ke.b)("help"), b = () => {
					d(!l), u(Object(Ya.h)({
						tooltipId: t
					}))
				};
				return s.a.createElement("div", {
					className: Object(m.a)(cl.a.wrapper, i, {
						[cl.a.isDisabled]: a
					})
				}, s.a.createElement("h3", {
					className: cl.a.sectionLabel
				}, c), s.a.createElement("span", {
					id: t,
					onMouseEnter: () => {
						p((e => t => ({
							...Object(ol.q)(t),
							source: xn.a,
							action: "view",
							noun: "info_tooltip",
							subreddit: Object(ol.nb)(t),
							actionInfo: {
								...Object(ol.d)(t),
								reason: e
							}
						}))(t)), b()
					},
					onMouseLeave: b
				}, s.a.createElement(h, {
					className: Object(m.a)(cl.a.helpIcon, {
						[cl.a.activeHelpIcon]: l
					})
				}), s.a.createElement(nl.a, {
					tooltipId: t,
					defaultTooltipPosition: "top",
					caretColor: dl
				}, s.a.createElement("div", {
					className: cl.a.content
				}, n))))
			}, {
				fbt: pl
			} = n("./node_modules/fbt/lib/FbtPublic.js"), ml = () => {
				const e = Object(r.d)(),
					t = Object(N.ib)(),
					n = Object(r.e)(e => Object(N.s)(e, {
						pageLayer: t
					})),
					i = Object(r.e)(I.s),
					c = Object(r.e)(I.t) || sc();
				return Object(Jc.a)((null == n ? void 0 : n.id) || ""), Object(o.useEffect)(() => {
					e(Object(a.l)({
						oldType: i || null,
						type: je.a.Prediction
					}))
				}, [e, i]), n ? s.a.createElement(s.a.Fragment, null, s.a.createElement(ul, {
					tooltipId: "option",
					tooltipContent: pl._("Provide up to 6 answers that redditors can choose from as their prediction. If your question could have more than 6 answers, try providing the top five with a sixth option like “none of these.”", null, {
						hk: "h7WeS"
					})
				}, pl._("Options", null, {
					hk: "2unvji"
				})), s.a.createElement(pc, {
					poll: c,
					onUpdatePoll: t => e(Object(Ha.b)(t))
				}), s.a.createElement(ul, {
					tooltipId: "prediction_end_date",
					tooltipContent: pl._("The time when redditors can no longer make predictions. After this time you can select the correct answer to resolve the question and then manually end the tournament when all questions are answered.", null, {
						hk: "Z5iQv"
					})
				}, pl._("Prediction End Date", null, {
					hk: "1r06y3"
				})), s.a.createElement(tl, {
					poll: c
				})) : null
			};
			var hl = n("./src/reddit/featureFlags/index.ts"),
				bl = n("./src/reddit/icons/svgs/GovSmall/index.tsx"),
				fl = n("./src/reddit/icons/svgs/Poll/index.tsx"),
				gl = n("./src/reddit/components/PostCreationForm/PostEditor/GovTypeSelector/index.m.less"),
				vl = n.n(gl);
			const xl = Object(zt.a)($a.a),
				Cl = [{
					Icon: fl.a,
					showNewTag: !0,
					text: () => l.fbt._("general", null, {
						hk: "2zk1er"
					}),
					type: null
				}, {
					Icon: bl.a,
					showNewTag: !1,
					text: () => l.fbt._("governance", null, {
						hk: "1wlLfQ"
					}),
					type: je.a.GovGeneric
				}, {
					Icon: bl.a,
					showNewTag: !1,
					text: () => l.fbt._("spin-off a new community", null, {
						hk: "jNK0c"
					}),
					type: je.a.Spinoff
				}],
				El = "gov-type-selector-dropdown";
			const yl = Object(i.c)({
				dropdownIsOpen: e => e.tooltip.tooltipId === El,
				govType: e => e.creations.formData.govType,
				spinoffEnabled: hl.d.spSpinoffs
			});
			var Ol = Object(r.b)(yl, e => ({
					onChangeGovType: (t, n) => {
						e(Object(a.l)({
							oldType: n,
							type: t
						})), e(Object(Ya.i)())
					},
					onToggleDropdown: () => e(Object(Ya.h)({
						tooltipId: El
					}))
				}))((function(e) {
					const t = function(e, t) {
							return Cl.filter(e => {
								let {
									type: n
								} = e;
								return !(!t.spinoffEnabled && n === je.a.Spinoff)
							})
						}(0, e),
						n = t.find(t => t.type === e.govType) || t[0];
					return s.a.createElement("div", {
						className: Object(m.a)(vl.a.container, e.className)
					}, s.a.createElement("div", {
						className: vl.a.currentSelection,
						id: El,
						onClick: e.onToggleDropdown
					}, s.a.createElement(n.Icon, {
						className: vl.a.pollTypeIcon
					}), s.a.createElement("div", {
						className: vl.a.text
					}, n.text()), s.a.createElement(tc.a, {
						className: vl.a.dropdownIcon
					}), n.showNewTag && s.a.createElement("div", {
						className: vl.a.newLabel
					}, l.fbt._("new", null, {
						hk: "4iv34v"
					}))), s.a.createElement(xl, {
						className: vl.a.dropdown,
						tooltipId: El,
						isOpen: e.dropdownIsOpen
					}, t.map((t, o) => s.a.createElement(ec.b, {
						"data-redditstyle": !0,
						displayText: t.text(),
						isSelected: t.type === n.type,
						key: o,
						onClick: () => e.onChangeGovType(t.type, e.govType)
					}))))
				})),
				kl = n("./src/reddit/components/PostGuidance/index.tsx"),
				_l = n("./src/redditGQL/types.ts"),
				jl = n("./src/reddit/components/PostCreationForm/PostEditor/index.m.less"),
				Sl = n.n(jl);

			function Tl() {
				return (Tl = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const wl = Object(Gc.a)("spGovPolls", Ol),
				Il = (e, t) => !e && t && t.bodyRestrictionPolicy === Qc.a.Required,
				Pl = Object(i.c)({
					canPostAsModerator: I.e,
					destSubreddit: I.h,
					draft: B.d,
					editorMode: I.n,
					govType: e => e.creations.formData.govType,
					markdownBody: I.Y,
					pending: I.eb,
					poll: e => e.creations.formData.polls || void 0,
					postCreationFieldErrors: kt,
					postRequirements: I.ub,
					postGuidanceBodyTriggeredRules: _.d,
					postGuidanceBlockRuleTriggered: _.c,
					rteState: I.lb,
					shouldAllowBodyText: I.nb,
					subreddit: N.s,
					isImageCreationEnabled: I.O,
					isVideoCreationEnabled: I.W,
					isFormEmpty: e => {
						var t;
						const n = (null === (t = Object(I.q)(e, {
								field: h.Bb.TITLE
							})) || void 0 === t ? void 0 : t.title) || "",
							o = Object(I.n)(e),
							s = Object(I.lb)(e),
							r = o === C.i.RICH_TEXT ? xe.a.getRawText(s, " ") : Object(I.Y)(e);
						return "" === n && "" === r
					}
				}),
				Ml = Object(r.b)(Pl, (e, t) => {
					let {
						onChange: n,
						onPostFieldValidation: o,
						onPostGuidanceValidation: s,
						pageLayer: r
					} = t;
					return {
						onBlur: () => {
							o(e(Ze(h.Bb.BODY, r)))
						},
						onFocus: () => {
							e((e, t) => D.s(t(), C.l.CLICK, C.m.BODY))
						},
						onMarkdownStateChange: () => {
							s(() => e(za.a(r))), n()
						},
						onRTEStateChange: (t, o) => {
							e(a.e({
								rteState: t,
								isContentChanged: o
							})), s(() => e(za.a(r))), n()
						},
						onTrackPostGuidanceView: (t, n, o, s) => {
							e((e, r) => D.B(r(), t, n, o, s))
						},
						onToggleEditorMode: (t, n) => e(qa.d(C.h.POST_CREATION, t, n)),
						onTrackToolbarClick: (t, n) => e((e, o) => D.N(o(), t, n)),
						onUpdatePoll: t => e(Object(Ha.b)(t)),
						setSubmissionType: t => e(a.g({
							submissionType: t
						}))
					}
				});
			class Rl extends s.a.Component {
				constructor() {
					super(...arguments), this.state = {
						hasFocus: !1
					}, this.onEditorResize = e => {
						this.setState({
							editorHeight: e
						})
					}, this.onToggleEditorMode = async (e, t) => {
						await this.props.onToggleEditorMode(e, t), e === C.i.RICH_TEXT ? this.rteRef && this.rteRef.focus() : this.markdownEditorRef && this.markdownEditorRef.focus()
					}, this.setRteRef = e => this.rteRef = e, this.setMarkdownEditorRef = e => this.markdownEditorRef = e, this.onBlur = () => {
						setTimeout(() => this.setState({
							hasFocus: !1
						}), 150), this.props.onBlur()
					}, this.onFocus = () => {
						this.setState({
							hasFocus: !0
						}), this.props.onFocus()
					}, this.hasPostGuidanceBlockingError = () => this.props.postGuidanceBodyTriggeredRules.some(e => e.actionType === _l.N.Block), this.showPostGuidance = () => this.state.hasFocus || this.hasPostGuidanceBlockingError()
				}
				componentDidMount() {
					const {
						pageLayer: e,
						setSubmissionType: t
					} = this.props;
					(null == e ? void 0 : e.queryParams.type) === h.Cb && t(h.ac.PREDICTION)
				}
				renderEditor() {
					const {
						canPostAsModerator: e,
						destSubreddit: t,
						editorMode: n,
						isImageCreationEnabled: o,
						isVideoCreationEnabled: r,
						markdownBody: i,
						pending: a,
						postCreationFieldErrors: c,
						postRequirements: d,
						rteState: u,
						submissionType: p,
						isFormEmpty: b
					} = this.props, f = p === h.ac.POLL, g = c[h.Bb.BODY].length > 0 || this.hasPostGuidanceBlockingError() && !b, v = Il(e, d) ? l.fbt._("Text (required)", null, {
						hk: "E1dIP"
					}) : l.fbt._("Text (optional)", null, {
						hk: "4jfNex"
					});
					return n === C.i.RICH_TEXT ? s.a.createElement(zc.a, {
						allowImageUploads: o,
						allowVideoUploads: r,
						focusableContentRTEClassName: Object(m.a)(Sl.a.focusableContent, {
							[Sl.a.mHasError]: g,
							[Sl.a.mPollBorder]: !!f
						}),
						destSubreddit: t,
						editorType: Vc.a.Post,
						initialHeight: this.state.editorHeight,
						rteState: u,
						onBlur: this.onBlur,
						onChange: this.props.onRTEStateChange,
						onEditorResize: this.onEditorResize,
						onFocus: this.onFocus,
						onSubmit: this.props.onSubmit,
						onSwitchEditorMode: this.onToggleEditorMode,
						placeholderText: v,
						readOnly: a,
						rteRef: this.setRteRef,
						trackToolbarClick: this.props.onTrackToolbarClick
					}) : s.a.createElement(qc.a, {
						focusableContentMarkdownClassName: Object(m.a)(Sl.a.focusableContent, {
							[Sl.a.mHasError]: g,
							[Sl.a.mPollBorder]: !!f
						}),
						initialHeight: this.state.editorHeight,
						instanceRef: this.setMarkdownEditorRef,
						onBlur: this.onBlur,
						onChange: this.props.onMarkdownStateChange,
						onEditorResize: this.onEditorResize,
						onFocus: this.onFocus,
						value: i,
						onSubmit: this.props.onSubmit,
						onSwitchEditorMode: this.onToggleEditorMode,
						placeholderText: v
					})
				}
				render() {
					const {
						postCreationFieldErrors: e,
						postGuidanceBodyTriggeredRules: t,
						shouldAllowBodyText: n,
						submissionType: o,
						subreddit: r,
						onTrackPostGuidanceView: i,
						isFormEmpty: a,
						destSubreddit: c
					} = this.props;
					return s.a.createElement("div", null, n && this.renderEditor(), o === h.ac.POLL && s.a.createElement("div", {
						className: Sl.a.pollCreator
					}, s.a.createElement(wl, {
						className: Sl.a.govToggle
					}), this.govType()), o === h.ac.PREDICTION && s.a.createElement(ml, null), s.a.createElement(Ee.a, {
						errorModalTitle: r ? Object(lo.d)(r.name) : void 0,
						messages: e[h.Bb.BODY]
					}), this.showPostGuidance() && s.a.createElement(kl.a, {
						triggeredRules: t,
						trackPostGuidanceView: Wa()(i)(null, c.name),
						emptyState: a
					}))
				}
				govType() {
					var e;
					const {
						govType: t,
						poll: n,
						subreddit: o
					} = this.props, r = {
						onUpdatePoll: this.props.onUpdatePoll,
						poll: n
					}, i = {
						...r,
						pollType: t
					}, a = {
						...i,
						allowPredictions: this.props.isPredictionCreationAllowed,
						subredditId: null === (e = this.props.subreddit) || void 0 === e ? void 0 : e.id
					};
					switch (t) {
						case je.a.ReplaceTopMod:
							return o ? s.a.createElement(Bc, Tl({}, r, {
								subreddit: o
							})) : s.a.createElement(Ec, Tl({}, i, {
								hintTextComponent: s.a.createElement(Hc, null)
							}));
						case je.a.GovGeneric:
							return s.a.createElement(Ec, Tl({}, i, {
								hintTextComponent: o ? s.a.createElement(Xa, {
									subreddit: o
								}) : s.a.createElement(Hc, null)
							}));
						case je.a.Spinoff:
							return o ? s.a.createElement(Rc, Tl({}, r, {
								subreddit: o
							})) : s.a.createElement(Ec, Tl({}, i, {
								hintTextComponent: s.a.createElement(Hc, null)
							}));
						case je.a.Prediction:
							return s.a.createElement(Ec, Tl({}, a, {
								hintTextComponent: s.a.createElement(Hc, {
									isPrediction: !0
								})
							}));
						case je.a.GA:
						case null:
							return s.a.createElement(Ec, Tl({}, a, {
								hintTextComponent: s.a.createElement(Hc, null)
							}))
					}
				}
			}
			var Nl = Object(N.v)({
					draftId: N.w,
					pageLayer: e => e
				})(Ml(Rl)),
				Dl = n("./src/reddit/components/Econ/Prediction/UnicornIcon/index.tsx"),
				Ll = n("./src/reddit/icons/svgs/AddSquare/index.tsx"),
				Al = n("./src/reddit/components/PostCreationForm/PredictionEditor/TokenPicker/index.m.less"),
				Bl = n.n(Al);
			const Fl = e => {
				let {
					subredditId: t,
					value: n,
					onChange: o
				} = e;
				const [i, a] = s.a.useState(), c = s.a.useRef(null), d = Object(r.e)(e => Object(On.f)(e, {
					subredditId: t
				}));
				return s.a.createElement("div", {
					className: Bl.a.container
				}, s.a.createElement("input", {
					ref: c,
					style: {
						display: "none"
					},
					onChange: async e => {
						const t = e.currentTarget.files;
						(null == t ? void 0 : t.length) && (a(t[0]), o(t[0]))
					},
					type: "file",
					accept: "image/png,image/jpeg"
				}), i ? s.a.createElement("div", {
					className: Bl.a.customTokenContainer
				}, s.a.createElement("button", {
					className: Object(m.a)(Bl.a.tokenButton, {
						[Bl.a.selected]: n === i
					}),
					onClick: () => o(i),
					title: l.fbt._("Set Custom Token", null, {
						hk: "1wFp57"
					})
				}, s.a.createElement("img", {
					className: Bl.a.tokenIcon,
					alt: l.fbt._("Custom Token", null, {
						hk: "3M8nxA"
					}),
					src: URL.createObjectURL(i)
				})), s.a.createElement("button", {
					className: Bl.a.clearTokenButton,
					onClick: () => {
						n === i && o(null), a(void 0), c.current.value = ""
					}
				}, s.a.createElement(Eo.a, {
					className: Bl.a.clearTokenIcon
				}))) : s.a.createElement("button", {
					className: Bl.a.tokenButton,
					onClick: () => {
						var e;
						return null === (e = c.current) || void 0 === e ? void 0 : e.click()
					},
					title: l.fbt._("Add Custom Token", null, {
						hk: "3vDASa"
					})
				}, s.a.createElement(Ll.a, {
					className: Object(m.a)(Bl.a.tokenIcon, Bl.a.addTokenIcon)
				})), (null == d ? void 0 : d.tokenIconUrl) && s.a.createElement("button", {
					className: Object(m.a)(Bl.a.tokenButton, {
						[Bl.a.selected]: n === d.tokenIconUrl
					}),
					onClick: () => o(d.tokenIconUrl),
					title: l.fbt._("Previous Tournament Token", null, {
						hk: "3mEGE9"
					})
				}, s.a.createElement("img", {
					className: Bl.a.tokenIcon,
					alt: l.fbt._("Previous Tournament Token", null, {
						hk: "19mBuu"
					}),
					src: d.tokenIconUrl
				})), s.a.createElement("button", {
					className: Object(m.a)(Bl.a.tokenButton, {
						[Bl.a.selected]: null === n
					}),
					onClick: () => o(null),
					title: l.fbt._("Default Token", null, {
						hk: "2Qsr4e"
					})
				}, s.a.createElement(Dl.a, {
					className: Bl.a.tokenIcon
				})))
			};
			var Ul = n("./src/reddit/components/Econ/Prediction/themes.ts"),
				Kl = n("./src/reddit/components/Econ/Prediction/TournamentTokenIcon/index.tsx"),
				Wl = n("./src/reddit/components/PostCreationForm/PredictionEditor/TournamentCreation/TournamentBanner/index.m.less"),
				Hl = n.n(Wl);
			const ql = e => {
				let {
					tournament: t
				} = e;
				return s.a.createElement("div", {
					className: Hl.a.container,
					style: {
						backgroundImage: Ul.a[t.theme] || Ul.a.theme_1
					}
				}, s.a.createElement("div", {
					className: Hl.a.label
				}, s.a.createElement(Kl.a, {
					className: Hl.a.icon,
					tournamentId: t.tournamentId
				}), l.fbt._("Current Tournament", null, {
					hk: "jBKr3"
				})), s.a.createElement("h3", {
					className: Hl.a.tournamentName
				}, t.name))
			};
			var zl = n("./src/reddit/constants/modals.ts"),
				Gl = n("./src/reddit/components/PostCreationForm/PredictionEditor/CharacterLimitedInput/index.m.less"),
				Vl = n.n(Gl);
			const Ql = e => {
				let {
					isDisabled: t,
					name: n,
					onChange: o
				} = e;
				const i = Object(r.e)(A.e),
					a = (null == i ? void 0 : i.displayText) ? `${i.displayText} Predictions Tournament` : "Predictions Tournament";
				return s.a.createElement("div", {
					className: Vl.a.wrapper
				}, s.a.createElement("input", {
					"aria-label": l.fbt._("tournament-name-input", null, {
						hk: "3n3HoG"
					}),
					name: "tournament-name",
					className: Vl.a.limitedInput,
					disabled: t,
					type: "text",
					value: n,
					onChange: e => {
						const {
							value: t
						} = e.target;
						t.length <= 90 && o(t)
					},
					placeholder: l.fbt._("e.g. {Sample tournament name prefixed with subreddit display text}", [l.fbt._param("Sample tournament name prefixed with subreddit display text", a)], {
						hk: "1Mu4q8"
					})
				}), !t && s.a.createElement("div", {
					className: Vl.a.charLimit
				}, n.length, "/", 90))
			};
			var Jl = n("./src/reddit/components/PostCreationForm/PredictionEditor/ThemePicker/index.m.less"),
				Xl = n.n(Jl);
			const Zl = ["#493AC1", "#00756F", "#99941A", "#DC8F1A", "#ED622C", "#EB7A7A", "#61676A", "#303030"],
				Yl = e => {
					let {
						theme: t = Zl[0],
						isDisabled: n,
						onChange: o
					} = e;
					const r = Object(En.a)(),
						i = e => {
							r((e => t => ({
								...Object(ol.q)(t),
								source: xn.a,
								action: "click",
								noun: "theme_selection",
								subreddit: Object(ol.nb)(t),
								predictions: {
									tournamentThemeId: e
								}
							}))(e)), o(e)
						};
					return s.a.createElement("div", {
						className: Xl.a.wrapper
					}, Zl.map((e, o) => {
						const r = `theme_${o+1}`;
						return s.a.createElement(lt.t, {
							key: r,
							className: Xl.a.colorTile,
							style: {
								background: e
							},
							Icon: r === t ? Object(ke.b)("checkmark_fill") : void 0,
							onClick: () => i(r),
							priority: lt.c.Plain,
							disabled: n
						})
					}))
				};
			var $l = n("./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/index.tsx"),
				ed = n("./src/reddit/components/Econ/Prediction/PredictionEducationMessage/EducationMessage/constants.ts"),
				td = n("./src/reddit/hooks/useModalState.ts"),
				nd = n("./src/reddit/components/Econ/Tournament/Sidebar/HowItWorks/Content.tsx"),
				od = n("./src/reddit/components/PostCreationForm/PredictionEditor/TournamentCreation/index.m.less"),
				sd = n.n(od);

			function rd() {
				return (rd = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			const id = [{
					title: l.fbt._("Create questions", null, {
						hk: "hokTI"
					}),
					description: l.fbt._("Start a Predictions Tournament by creating questions, giving it a name, and selecting a theme. Try to create questions at least 2-3 days ahead of their end date. You can always add more later!", null, {
						hk: "1oN9ta"
					})
				}, {
					title: l.fbt._("Redditors make predictions", null, {
						hk: "USPzW"
					}),
					description: l.fbt._("Redditors predict using free tokens. They win bigger rewards by using more tokens when they’re confident with their predictions. More questions = more chances to predict.", null, {
						hk: "1hfMP9"
					})
				}, {
					title: l.fbt._("Resolve questions and announce winners", null, {
						hk: "4CZw7"
					}),
					description: l.fbt._("You resolve predictions by selecting the correct answer once it ends. When all questions are resolved, you can end the Tournament and Top Predictors will be announced!", null, {
						hk: "4fsynq"
					})
				}],
				ad = Object(Co.a)(e => {
					let {
						onClose: t
					} = e;
					return s.a.createElement("div", {
						className: sd.a.modalWrapper
					}, s.a.createElement(lt.t, {
						"aria-label": l.fbt._("Close", null, {
							hk: "2xO1CF"
						}),
						className: sd.a.closeButton,
						Icon: Object(ke.b)("close"),
						onClick: t,
						priority: lt.c.Plain
					}), s.a.createElement(nd.a, {
						steps: id,
						withModalStyles: !0
					}))
				}),
				cd = e => s.a.createElement(ad, rd({
					className: sd.a.modal,
					withOverlay: !0,
					onOverlayClick: e.onClose
				}, e)),
				ld = () => {
					const [e, t, n] = Object(td.a)(!1), o = Object(En.a)();
					return s.a.createElement(s.a.Fragment, null, s.a.createElement($l.a, {
						onClose: () => o(rl),
						onView: () => o(sl),
						title: l.fbt._("Predictions", null, {
							hk: "4pJFGW"
						}),
						newBadge: !0,
						message: s.a.createElement(s.a.Fragment, null, s.a.createElement("h3", {
							className: sd.a.learnMoreText
						}, l.fbt._("A prediction tournament is a series of questions where redditors can win free tokens by predicting the future. Start a Tournament, add questions at any time and when you end the tournament winners are announced!", null, {
							hk: "10ymoN"
						})), s.a.createElement("button", {
							className: sd.a.learnMoreLink,
							onClick: () => {
								o(il), t()
							}
						}, l.fbt._("Learn more about prediction tournaments", null, {
							hk: "1chKID"
						}))),
						storageKey: ed.a.feature,
						isFullWidth: !0
					}), e && s.a.createElement(cd, {
						onClose: n
					}))
				},
				dd = e => {
					let {
						isApprovedUser: t,
						subredditId: n
					} = e;
					const i = Object(r.d)(),
						c = Object(r.e)(w.j),
						d = Object(r.e)(e => Object(On.b)(e, {
							subredditId: n
						})),
						u = Object(r.e)(e => !!n && Object(On.k)(e, {
							subredditId: n
						})),
						p = Object(r.e)(e => Object(On.i)(e, {
							subredditId: n
						})),
						m = Object(r.e)(e => Object(On.h)(e, {
							subredditId: n
						})),
						h = Object(r.e)(I.xb);
					Object(o.useEffect)(() => {
						!u && p && !d && t && i(Object($t.h)(zl.a.ECON_PREDICTIONS_START_TOURNAMENT_LIMIT))
					}, [i, d, p, t, u]), Object(o.useEffect)(() => {
						!1 === (null == d ? void 0 : d.isActive) && m && i(Object($t.h)(zl.a.ECON_PREDICTIONS_INACTIVITY_MODAL))
					}, [i, d, m]);
					const b = !d;
					return s.a.createElement(s.a.Fragment, null, s.a.createElement(ld, null), b ? s.a.createElement(s.a.Fragment, null, s.a.createElement(ul, {
						className: sd.a.firstHeader,
						tooltipId: "tournament_name",
						tooltipContent: l.fbt._("The name of the tournament shown to your community. Questions in this tournament will be grouped together in one post, and you can change the name later in mod tools.", null, {
							hk: "11na95"
						}),
						isDisabled: !b
					}, l.fbt._("Tournament Name", null, {
						hk: "4HBhy"
					})), s.a.createElement(Ql, {
						name: h.name,
						onChange: e => {
							i(Object(a.D)({
								name: e
							}))
						},
						isDisabled: !b
					}), s.a.createElement(ul, {
						tooltipId: "tournament_theme",
						tooltipContent: l.fbt._("The main color used to style the tournament.", null, {
							hk: "2QKzZn"
						}),
						isDisabled: !b
					}, l.fbt._("Tournament Theme", null, {
						hk: "4nMPA"
					})), s.a.createElement(Yl, {
						theme: h.theme,
						onChange: e => {
							i(Object(a.D)({
								theme: e
							}))
						},
						isDisabled: !b
					}), c && s.a.createElement(s.a.Fragment, null, s.a.createElement(ul, {
						tooltipId: "tournament_token",
						tooltipContent: l.fbt._("The image to be used for the Tournament token shown to users. Remember, tokens are free, but are a fun way to allow users to predict and get ranked when they win.", null, {
							hk: "2rxVIk"
						}),
						isDisabled: !b
					}, l.fbt._("Tournament Token", null, {
						hk: "eLf9P"
					})), s.a.createElement(Fl, {
						subredditId: n,
						value: h.token,
						onChange: e => {
							i(Object(a.D)({
								token: e
							}))
						}
					}))) : s.a.createElement(ql, {
						tournament: d
					}), s.a.createElement(ul, {
						tooltipId: "prediction_question",
						tooltipContent: l.fbt._("This should be a question about a future event that can only be answered after the event has passed. You can add more questions later.", null, {
							hk: "1kli3v"
						})
					}, l.fbt._("Prediction Question", null, {
						hk: "1MRcq1"
					})))
				};
			var ud = n("./src/reddit/components/PostCreationForm/PostTitle/index.m.less"),
				pd = n.n(ud);
			const md = Object(i.c)({
					canPostAsModerator: I.e,
					disableTitleEdits: e => e.creations.formData.govType === je.a.ReplaceTopMod || e.creations.formData.govType === je.a.Spinoff,
					pending: I.eb,
					postCreationFieldErrors: kt,
					postRequirements: I.ub,
					postGuidanceBlockRuleTriggered: _.c,
					postGuidanceTitleTriggeredRules: _.f,
					shouldAllowBodyText: I.nb,
					submissionType: I.a,
					subreddit: N.s,
					title: I.wb,
					isFormEmpty: e => {
						var t;
						const n = (null === (t = Object(I.q)(e, {
								field: h.Bb.TITLE
							})) || void 0 === t ? void 0 : t.title) || "",
							o = Object(I.n)(e),
							s = Object(I.lb)(e),
							r = o === C.i.RICH_TEXT ? xe.a.getRawText(s, " ") : Object(I.Y)(e);
						return "" === n && "" === r
					}
				}),
				hd = Object(r.b)(md, (e, t) => {
					let {
						onChange: n,
						onPostFieldValidation: o,
						onPostGuidanceValidation: s,
						pageLayer: r
					} = t;
					return {
						onBlur: () => {
							o(e(Ze(h.Bb.TITLE, r)))
						},
						onChange: t => {
							e(a.h(t)), s(() => e(za.a(r))), n(t)
						},
						onInputFocus: () => e((e, t) => D.s(t(), C.l.CLICK, C.m.TITLE)),
						onTrackPostGuidanceView: (t, n, o, s) => {
							e((e, r) => D.B(r(), t, n, o, s))
						}
					}
				});
			var bd = Object(N.v)()(hd(e => {
					const {
						canPostAsModerator: t,
						isApprovedUser: n,
						isFormEmpty: r,
						onBlur: i,
						onInputFocus: a,
						onTrackPostGuidanceView: c,
						postRequirements: d,
						postGuidanceTitleTriggeredRules: u,
						postCreationFieldErrors: p,
						subreddit: b
					} = e, f = null == b ? void 0 : b.id, g = null == b ? void 0 : b.name, v = e.submissionType === h.ac.POST && !e.shouldAllowBodyText, x = u.some(e => e.actionType === _l.N.Block), C = p[h.Bb.TITLE].length > 0 || x && !r, E = t ? gt.f : d && d.titleTextMaxLength || gt.f, y = e.submissionType === h.ac.PREDICTION, O = y ? l.fbt._("e.g. Who will win best actress at the Oscars this year?", null, {
						hk: "YLQFW"
					}) : l.fbt._("Title", null, {
						hk: "j3s6r"
					}), [k, _] = Object(o.useState)(!1), j = Object(o.useCallback)(() => {
						setTimeout(() => _(!1), 150), i()
					}, [i]), S = Object(o.useCallback)(() => {
						_(!0), a()
					}, [a]), T = x || k;
					return s.a.createElement("div", {
						className: pd.a.container
					}, y && s.a.createElement(dd, {
						isApprovedUser: n,
						subredditId: (null == b ? void 0 : b.id) || ""
					}), s.a.createElement("div", {
						className: pd.a.inputWrapper
					}, s.a.createElement(zs, {
						className: Object(m.a)(pd.a.PostTitleInput, {
							[pd.a.mHasError]: C
						}),
						disabled: e.disableTitleEdits,
						maxLength: E,
						minHeight: v ? 92 : void 0,
						onBlur: j,
						onFocus: S,
						onKeyDown: e.onKeyDown,
						onValueChange: e.onChange,
						placeholder: O,
						readOnly: e.pending,
						value: e.title
					}), s.a.createElement("div", {
						className: pd.a.charsCounter
					}, e.title.length, "/", E)), s.a.createElement(Ee.a, {
						errorModalTitle: b ? Object(lo.d)(b.name) : void 0,
						messages: p[h.Bb.TITLE]
					}), T && s.a.createElement(kl.a, {
						triggeredRules: u,
						trackPostGuidanceView: Wa()(c)(f, g),
						emptyState: r
					}))
				})),
				fd = n("./src/reddit/components/PostCreationForm/Prompt/index.tsx");
			const gd = "g-recaptcha",
				vd = "image",
				xd = {
					COMPACT: "compact",
					NORMAL: "normal"
				},
				Cd = () => new Promise(e => {
					if (window.grecaptcha) return e(window.grecaptcha);
					window.grecaptchaOnLoad = () => e(window.grecaptcha);
					const t = document.createElement("script");
					t.src = "https://www.google.com/recaptcha/api.js?onload=grecaptchaOnLoad&render=explicit", document.body.appendChild(t)
				});
			class Ed extends s.a.Component {
				shouldComponentUpdate() {
					return !1
				}
				componentDidMount() {
					const {
						callback: e,
						size: t,
						type: n
					} = this.props;
					Cd().then(o => {
						o.render(gd, {
							callback: e,
							type: n,
							sitekey: qt.a.recaptchaSitekey,
							size: t || xd.COMPACT
						})
					})
				}
				componentWillReceiveProps(e) {
					this.props.submissionPending && !e.submissionPending && Cd().then(e => {
						e.reset()
					})
				}
				render() {
					return s.a.createElement("div", {
						className: "Recaptcha",
						id: gd
					})
				}
			}
			var yd = n("./src/reddit/components/PostCreationForm/RecaptchaOverlay/index.m.less"),
				Od = n.n(yd);
			const {
				fbt: kd
			} = n("./node_modules/fbt/lib/FbtPublic.js"), _d = ge.a.div("OverlayWrapper", Od.a), jd = ge.a.div("OverlayContent", Od.a), Sd = ge.a.div("ExplanationText", Od.a);
			var Td = Object(r.b)(void 0, (e, t) => ({
				onChange: n => {
					e(a.f(n)), t.callback(n)
				}
			}))(e => s.a.createElement(_d, null, s.a.createElement(jd, null, s.a.createElement(Sd, null, kd._("Ok, one more thing ... you're human, right?", null, {
				hk: "2xDwBB"
			})), s.a.createElement(Ed, {
				submissionPending: !0,
				callback: e.onChange,
				size: xd.NORMAL,
				type: vd
			}))));
			const wd = "POST_CREATION__CONFIRM_SAVE_DRAFT_WITH_LIMITATIONS";

			function Id(e) {
				const {
					hasEventSchedule: t,
					hasRichPostMedia: n
				} = e;
				let o = l.fbt._("Saving this draft will not save media and the applied event schedule, all other information will be saved", null, {
					hk: "3NIEQF"
				});
				return n && !t ? o = l.fbt._("Saving this draft will not save media, all other information will be saved", null, {
					hk: "2tpNPY"
				}) : !n && t && (o = l.fbt._("Saving this draft will not save the applied event schedule, all other information will be saved", null, {
					hk: "3wm3T3"
				})), s.a.createElement(ee.a, {
					bodyText: o,
					onClose: e.onCancel,
					onPrimaryAction: e.onConfirm,
					onSecondaryAction: e.onCancel,
					primaryButtonText: l.fbt._("Save", null, {
						hk: "4yMsMq"
					}),
					secondaryButtonText: l.fbt._("Cancel", null, {
						hk: "2TSLl5"
					}),
					titleText: l.fbt._("Save draft", null, {
						hk: "1RxZQJ"
					})
				})
			}
			var Pd = n("./src/reddit/components/PostCreationForm/SubredditChangePrompt/index.m.less"),
				Md = n.n(Pd);
			const Rd = {
					[C.q.ImageWillBeRemoved]: {
						removePromptTitle: () => l.fbt._("Remove image?", null, {
							hk: "3Pk53F"
						}),
						removeConfirm: () => l.fbt._("Change and remove image", null, {
							hk: "Ik8BT"
						}),
						removeCancel: () => l.fbt._("Keep image", null, {
							hk: "1e7FY0"
						}),
						details: e => l.fbt._("Aw crap, {sureddit name} doesn't allow images. If you change to {suredditName} your image will be removed.", [l.fbt._param("sureddit name", `r/${e}`), l.fbt._param("suredditName", `r/${e}`)], {
							hk: "1zQOEn"
						})
					},
					[C.q.VideoWillBeRemovedMediaNotAllowed]: {
						removePromptTitle: () => l.fbt._("Remove video?", null, {
							hk: "12xLOq"
						}),
						removeConfirm: () => l.fbt._("Change and remove video", null, {
							hk: "3izwIJ"
						}),
						removeCancel: () => l.fbt._("Keep video", null, {
							hk: "32ZDlX"
						}),
						details: e => l.fbt._("Aw crap, {sureddit name} doesn't allow videos. If you change to {suredditName} your video will be removed.", [l.fbt._param("sureddit name", `r/${e}`), l.fbt._param("suredditName", `r/${e}`)], {
							hk: "1sxEJG"
						})
					},
					[C.q.VideoWillBeRemovedTooLongForGif]: {
						removePromptTitle: () => l.fbt._("Remove video?", null, {
							hk: "12xLOq"
						}),
						removeConfirm: () => l.fbt._("Change and remove video", null, {
							hk: "3izwIJ"
						}),
						removeCancel: () => l.fbt._("Keep video", null, {
							hk: "32ZDlX"
						}),
						details: e => l.fbt._("Aw crap, {sureddit name} doesn't allow videos. Please upload a video less than 60 seconds to convert to animated GIF. If you change to {suredditName} your video will be removed.", [l.fbt._param("sureddit name", `r/${e}`), l.fbt._param("suredditName", `r/${e}`)], {
							hk: "34j8hI"
						})
					},
					[C.q.GalleryWillBeRemovedGalleryNotAllowed]: {
						removePromptTitle: () => l.fbt._("Remove gallery?", null, {
							hk: "4mddlm"
						}),
						removeConfirm: () => l.fbt._("Change and remove gallery", null, {
							hk: "2JB1HN"
						}),
						removeCancel: () => l.fbt._("Keep gallery", null, {
							hk: "26kW19"
						}),
						details: e => l.fbt._("Aw crap, {sureddit name} doesn't allow galleries. If you change to {suredditName} your gallery will be removed.", [l.fbt._param("sureddit name", `r/${e}`), l.fbt._param("suredditName", `r/${e}`)], {
							hk: "11irkw"
						})
					}
				},
				Nd = ge.a.div("Wrapper", Md.a),
				Dd = ge.a.wrapped(Et.a, "TitleRow", Md.a),
				Ld = ge.a.div("DetailsContainer", Md.a),
				Ad = ge.a.wrapped(Et.a, "ButtonRow", Md.a),
				Bd = ge.a.wrapped(lt.l, "CancelButton", Md.a),
				Fd = ge.a.wrapped(lt.o, "ConfirmButton", Md.a);
			var Ud = Object(Co.a)(e => {
					const {
						promptType: t,
						nextSubreddit: n
					} = e, o = Rd[t];
					return s.a.createElement(Nd, null, s.a.createElement(Dd, null, o.removePromptTitle()), s.a.createElement(Ld, null, o.details(n.name)), s.a.createElement(Ad, null, s.a.createElement(Fd, {
						onClick: e.onConfirmed
					}, o.removeConfirm()), s.a.createElement(Bd, {
						onClick: e.onCanceled
					}, o.removeCancel())))
				}),
				Kd = n("./src/lib/filterQueryParams/index.ts"),
				Wd = n("./src/reddit/models/ScheduledPost/index.ts"),
				Hd = n("./src/reddit/selectors/experiments/nsfwCommunityMediaUpload.ts"),
				qd = n("./src/reddit/selectors/features/predictions/creation/index.ts"),
				zd = n("./src/reddit/components/PostCreationForm/Tabs/index.m.less"),
				Gd = n.n(zd);
			const Vd = e => s.a.createElement("button", {
					className: Object(m.a)(Gd.a.Tab, e.className, {
						[Gd.a.isActive]: e.active
					}),
					disabled: e.disabled,
					onClick: e.onClick
				}, e.children),
				Qd = Object(i.a)(I.d, I.e, I.h, I.U, I.eb, N.s, Hd.a, (e, t, n, o, s, r, i) => {
					const {
						images: a = !0,
						links: c = !0,
						text: l = !0,
						videos: d = !0
					} = n.allowedPostTypes || {}, u = !!r && r.isNSFW && i;
					return {
						link: s || !c || o && !Object(Wd.h)("links"),
						media: !d && !a && !t || s || u || o && !Object(Wd.h)("images"),
						post: !l && !t || s || o && !Object(Wd.h)("text"),
						poll: !e || o && !Object(Wd.h)("polls")
					}
				}),
				Jd = Object(i.c)({
					canPostAsModerator: I.e,
					destSubreddit: I.h,
					govType: e => e.creations.formData.govType,
					hasCreatedPredictionDrafts: qd.a,
					isTabsDisabled: Qd,
					pending: I.eb,
					submissionType: I.a,
					subreddit: N.s,
					isImageGalleryCreationEnabled: I.P
				}),
				Xd = Object(r.b)(Jd, (e, t) => ({
					onChange: (n, o) => {
						e(a.g({
							submissionType: n,
							extra: o
						})), e((e, t) => D.D(t(), n)), e(a.x(n === h.ac.POLL)), ((e, t, n) => {
							if (!t) return;
							const o = Object(Kd.a)(t.url, n);
							t.url !== o && e(Object(p.c)(o))
						})(e, t.pageLayer, ["url", "media", "onlyTitle", "text", "selftext", "type"])
					}
				}));
			class Zd extends s.a.PureComponent {
				constructor() {
					super(...arguments), this.onPostTabClick = () => {
						this.props.isTabsDisabled.post || this.props.onChange(h.ac.POST, {
							govType: this.props.govType
						})
					}, this.onMediaTabClick = () => {
						this.props.isTabsDisabled.media || this.props.onChange(h.ac.MEDIA, {
							govType: this.props.govType
						})
					}, this.onLinkTabClick = () => {
						this.props.isTabsDisabled.link || this.props.onChange(h.ac.LINK_ONLY, {
							govType: this.props.govType
						})
					}, this.onPollTabClick = () => {
						this.props.isTabsDisabled.poll && !this.props.isPredictionCreationAllowed || this.props.onChange(h.ac.POLL, {
							govType: this.props.govType
						})
					}, this.onPredictionTabClick = () => {
						this.props.onChange(h.ac.PREDICTION, {
							govType: this.props.govType
						})
					}
				}
				render() {
					const {
						destSubreddit: e,
						hasCreatedPredictionDrafts: t,
						isTabsDisabled: n,
						submissionType: o,
						isImageGalleryCreationEnabled: r,
						isPredictionCreationAllowed: i
					} = this.props, {
						name: a = "",
						allowedPostTypes: c
					} = e, {
						images: d = !0,
						videos: u = !0
					} = c || {};
					let p = l.fbt._({
						"*": "Images & Video",
						_1: "Image & Video"
					}, [l.fbt._plural(r ? 2 : 1)], {
						hk: "3VeQoy"
					});
					return d && !u ? p = r ? l.fbt._("Images", null, {
						hk: "3fSX8N"
					}) : l.fbt._("Image", null, {
						hk: "uFHQ1"
					}) : u && !d && (p = l.fbt._("Video", null, {
						hk: "3w6DFr"
					})), s.a.createElement("div", {
						className: Gd.a.Container
					}, s.a.createElement("div", {
						className: Gd.a.row
					}, s.a.createElement(Vd, {
						active: o === h.ac.POST,
						disabled: t || n.post,
						onClick: this.onPostTabClick
					}, s.a.createElement(ke.a, {
						name: "text_post",
						isFilled: o === h.ac.POST,
						className: Gd.a.Icon
					}), l.fbt._("Post", null, {
						hk: "ozUj2"
					})), s.a.createElement(Vd, {
						active: o === h.ac.MEDIA,
						disabled: t || n.media,
						onClick: this.onMediaTabClick
					}, n.media && s.a.createElement(at.a, {
						text: l.fbt._("Images and videos are not allowed in {subreddit name}", [l.fbt._param("subreddit name", `r/${a}`)], {
							hk: "2uC6BP"
						})
					}), s.a.createElement(ke.a, {
						name: "image_post",
						isFilled: o === h.ac.MEDIA,
						className: Gd.a.Icon
					}), p), s.a.createElement(Vd, {
						active: o === h.ac.LINK_ONLY,
						disabled: t || n.link,
						onClick: this.onLinkTabClick
					}, s.a.createElement(ke.a, {
						name: "link_post",
						isFilled: o === h.ac.LINK_ONLY,
						className: Gd.a.Icon
					}), l.fbt._("Link", null, {
						hk: "1pbEKv"
					})), s.a.createElement(Vd, {
						active: o === h.ac.POLL,
						disabled: t || n.poll && !i,
						onClick: this.onPollTabClick
					}, s.a.createElement(ke.a, {
						name: "poll_post",
						isFilled: o === h.ac.POLL,
						className: Gd.a.Icon
					}), l.fbt._("Poll", null, {
						hk: "SQdo4"
					})), i && s.a.createElement(Vd, {
						active: o === h.ac.PREDICTION,
						disabled: t || !i,
						onClick: this.onPredictionTabClick
					}, s.a.createElement(ke.a, {
						name: "prediction",
						isFilled: "prediction" === o,
						className: Gd.a.Icon
					}), l.fbt._("Predictions", null, {
						hk: "QtPNQ"
					}))))
				}
			}
			var Yd = Object(N.v)()(Xd(Zd));

			function $d() {
				return ($d = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o])
					}
					return e
				}).apply(this, arguments)
			}
			var eu = n("./src/reddit/components/PostCreationForm/index.m.less"),
				tu = n.n(eu),
				nu = n("./src/reddit/selectors/isModeratorOfSubreddit.ts");
			const ou = ge.a.div("FormContent", tu.a),
				su = ge.a.wrapped(j.c, "CrosspostBox", tu.a),
				ru = ge.a.div("FormContainer", tu.a),
				iu = ge.a.div("TabContent", tu.a),
				au = Object(N.v)({
					draftId: N.w,
					isPostCreationPage: N.I,
					pageLayer: e => e,
					sourcePostId: e => Object(N.ab)(e).source_id
				}),
				cu = Object(i.c)({
					submissionType: I.a,
					allowNavigationCallback: A.a,
					contributorRequestPending: e => Object(F.e)(e, E.e.Post),
					discardGoesBack: (e, t) => {
						let {
							pageLayer: n
						} = t;
						const o = Object(N.X)(e, {
							pageLayer: n
						});
						return !!o && "/" === o[0]
					},
					draft: B.d,
					draftsCount: U.n,
					editorMode: I.n,
					eventSchedule: I.p,
					includeUserProfile: U.j,
					isChanged: I.H,
					isNameEditable: U.U,
					isPostSubmitEnabled: Zn,
					isScheduledPost: I.U,
					flair: I.r,
					hasError: I.w,
					havePostContent: I.D,
					linkBody: I.X,
					markdownBody: I.Y,
					rteBody: I.lb,
					maxDrafts: U.eb,
					modalId: L.a,
					needsCaptcha: I.bb,
					nextSubreddit: I.cb,
					pending: I.eb,
					isPostGuidanceEligible: (e, t) => {
						var n;
						const o = Object(N.q)(e, t);
						if (!o) return !1;
						const s = Object(_.e)(e, {
								subredditName: o.name.toLowerCase()
							}),
							r = Object(nu.c)(e, {
								subredditId: o.id
							});
						return !("post" !== Object(I.a)(e) || null === (n = null == s ? void 0 : s.postGuidanceConfig) || void 0 === n || !n.length || r) && Object(O.a)(e)
					},
					postRequirements: I.ub,
					sourcePostRoot: I.pb,
					submitMode: I.sb,
					subredditOrProfile: N.q,
					title: I.wb,
					uploads: e => e.uploads,
					isModeratorOfSubreddit: (e, t) => {
						const n = Object(N.q)(e, t);
						return !!n && Object(nu.c)(e, {
							subredditId: n.id
						})
					},
					isOpenAIPilotV1: X.g,
					isSubredditHasCollections: (e, t) => {
						const n = Object(N.q)(e, t);
						return !!n && Object(k.m)(e, {
							subredditId: n.id
						})
					},
					isTalkTopicSelectionEnabled: w.v,
					isScheduledTalksEnabled: w.o
				});
			class lu extends s.a.Component {
				constructor(e) {
					super(e), this.postFieldValidationPending = null, this.postGuidanceValidationPending = null, this.sendStartTypingInputBodyEvent = u()(() => this.props.onStartTypingInput(C.m.BODY)), this.sendStartTypingInputTitleEvent = u()(() => this.props.onStartTypingInput(C.m.TITLE)), this.sendStartTypingInputUrlEvent = u()(() => this.props.onStartTypingInput(C.m.URL)), this.onExternalAccountConnected = () => {
						this.props.onExternalAccountsDataRequested()
					}, this.onRecaptchaSucceeded = () => {
						this.props.onSubmit(this.props.submitMode, this.postFieldValidationPending, this.postGuidanceValidationPending)
					}, this.onDiscardPromptOnNavigationConfirm = () => {
						this.props.onTrackDiscardButtonClick(), this.props.discardGoesBack || this.props.onDiscardPromptOnNavigationConfirmed(), this.props.allowNavigationCallback && this.props.allowNavigationCallback(!0)
					}, this.onDiscardPromptOnNewPostConfirm = () => {
						this.props.onTrackDiscardButtonClick(), this.props.onToggleModal(C.d), this.props.onDiscardPromptOnCreatePostConfirmed()
					}, this.onDiscardPromptAbort = () => {
						this.props.onToggleModal(this.props.modalId), this.props.allowNavigationCallback && this.props.allowNavigationCallback(!1)
					}, this.onDiscardPromptSaveDraft = () => {
						this.props.onToggleModal(this.props.modalId), this.onSaveDraft()
					}, this.handleKeyDown = e => {
						const {
							ctrlKey: t,
							metaKey: n,
							keyCode: o
						} = e;
						(t || n) && o === v.a.Enter && this.onSubmit()
					}, this.onSubredditChangePromptConfirmed = () => {
						this.props.nextSubreddit && (this.props.onCancelAndRemoveMediaUpload(), this.props.onRedirectToSubreddit(this.props.nextSubreddit))
					}, this.onSubmit = () => {
						const {
							isPostSubmitEnabled: e,
							isScheduledPost: t,
							onSubmit: n
						} = this.props, o = Object(x.c)(x.a.PostComposer);
						e && n(t ? C.r.ScheduledPost : C.r.Post, this.postFieldValidationPending, this.postGuidanceValidationPending, o)
					}, this.onSaveDraft = async () => {
						const {
							draftId: e,
							draftsCount: t,
							eventSchedule: n,
							maxDrafts: o,
							onToggleModal: s
						} = this.props;
						!e && t >= o ? s(fd.a.MAX_DRAFTS_MODAL_ID) : n || this.hasRichPostMedia() ? s(wd) : this.props.onSubmit(C.r.Draft, this.postFieldValidationPending, this.postGuidanceValidationPending)
					}, this.tryLoadDraft = e => {
						this.props.isChanged ? (this.setState({
							draftToLoad: e
						}), this.props.onToggleModal(fd.a.LOAD_DRAFT_MODAL_ID)) : (this.props.onToggleModal(C.e), this.onLoadDraft(e))
					}, this.onLoadDraft = e => {
						e && this.props.onLoadDraft(e)
					}, this.onSelectCollection = e => {
						this.props.onSetDestCollection(e.id)
					}, this.onPromptCancel = e => {
						this.props.onToggleModal(e)
					}, this.onToggleCurrentModal = () => {
						this.props.modalId && this.props.onToggleModal(this.props.modalId)
					}, this.onPromptConfirm = e => {
						switch (e) {
							case fd.a.LOAD_DRAFT_MODAL_ID:
								this.props.onToggleModal(e), this.onLoadDraft(this.state.draftToLoad);
								break;
							case fd.a.MAX_DRAFTS_MODAL_ID:
								this.props.onRequestDraftList(), this.props.onToggleModal(C.e);
								break;
							default:
								this.props.onToggleModal(e)
						}
					}, this.onConfirmSavingDraftWithLimitations = () => {
						this.onToggleCurrentModal(), this.props.onSubmit(C.r.Draft, this.postFieldValidationPending, this.postGuidanceValidationPending)
					}, this.onToggleCollectionListModal = () => {
						this.props.onToggleModal(C.a)
					}, this.onCollectionCreated = e => {
						this.onToggleCurrentModal(), this.onSelectCollection(e)
					}, this.onDraftListClose = () => {
						this.props.onToggleModal(C.e)
					}, this.onPostFieldValidation = e => {
						this.postFieldValidationPending = e
					}, this.onPostGuidanceValidation = f()(e => {
						if (!this.props.isPostGuidanceEligible) return Promise.resolve();
						this.postGuidanceValidationPending = e()
					}, 150), this.renderTabContent = () => s.a.createElement(s.a.Fragment, null, s.a.createElement(bd, {
						isApprovedUser: this.props.isApprovedUser,
						onChange: this.sendStartTypingInputTitleEvent,
						onKeyDown: this.handleKeyDown,
						onPostFieldValidation: this.onPostFieldValidation,
						onPostGuidanceValidation: this.onPostGuidanceValidation
					}), this.renderActiveForm()), this.state = {
						draftToLoad: null
					}
				}
				componentDidMount() {
					Object(x.d)(x.a.PostComposer, !1), this.externalAccountEventsChannel = Object(J.a)(), this.externalAccountEventsChannel.addEventListener("message", this.onExternalAccountConnected), this.props.isNameEditable && this.props.startChangeUsernameFlow(), this.props.onLoadRecaptchaEnterprise()
				}
				componentWillUnmount() {
					Object(x.b)(x.a.PostComposer), this.externalAccountEventsChannel && this.externalAccountEventsChannel.close(), this.props.onUnmount()
				}
				hasRichPostMedia() {
					const {
						rteBody: e,
						submissionType: t
					} = this.props;
					return t === h.ac.POST && e.isBound && Object(R.j)(e.editorState.getCurrentContent())
				}
				renderActiveForm() {
					switch (this.props.submissionType) {
						case h.ac.POST:
						case h.ac.POLL:
						case h.ac.PREDICTION:
							return s.a.createElement(Nl, {
								submissionType: this.props.submissionType,
								isPredictionCreationAllowed: this.props.isPredictionCreationAllowed,
								onChange: this.sendStartTypingInputBodyEvent,
								onPostFieldValidation: this.onPostFieldValidation,
								onPostGuidanceValidation: this.onPostGuidanceValidation,
								onSubmit: this.onSubmit
							});
						case h.ac.MEDIA:
							return s.a.createElement(na, null);
						case h.ac.LINK_ONLY:
							return s.a.createElement(Zs, {
								onChange: this.sendStartTypingInputUrlEvent,
								onKeyDown: this.handleKeyDown,
								onPostFieldValidation: this.onPostFieldValidation
							});
						case h.ac.CROSSPOST: {
							const {
								sourcePostRoot: e
							} = this.props;
							return e && s.a.createElement(su, {
								postId: e.id,
								mediaProps: {
									isExpando: !1,
									isListing: !1,
									isNotCardView: !0,
									post: e,
									primaryContent: !1,
									showCentered: !0,
									showFull: !0,
									shouldLoad: !0,
									shouldPause: !1
								}
							})
						}
						default:
							return l.fbt._("Invalid submissionType", null, {
								hk: "3GqKJS"
							})
					}
				}
				render() {
					const {
						contributorRequestPending: e,
						draftId: t,
						includeUserProfile: n,
						isApprovedUser: o,
						isOpenAIPilotV1: r,
						isPredictionCreationAllowed: i,
						modalId: a,
						needsCaptcha: c,
						nextSubreddit: d,
						postRequirements: u,
						sourcePostId: p,
						sourcePostRoot: b,
						submissionType: f,
						submitMode: g,
						subredditOrProfile: v
					} = this.props;
					if (f === h.ac.CROSSPOST) {
						if (!b) return s.a.createElement(y.b, {
							message: l.fbt._("The original post cannot be found", null, {
								hk: "3ieS5B"
							})
						});
						if (!b.isCrosspostable || b.isSponsored) return s.a.createElement(y.a, {
							message: l.fbt._("The original post cannot be crossposted", null, {
								hk: "4hn9ht"
							})
						})
					}
					const x = u && u.guidelinesText && u.guidelinesText.trim() || "";
					return s.a.createElement(ru, null, s.a.createElement(Ua, {
						submissionType: f,
						submitMode: g
					}), !r && s.a.createElement(s.a.Fragment, null, s.a.createElement(go, {
						includeUserProfile: n,
						allowCrosspostableOnly: !!p
					}), !!x && s.a.createElement("div", {
						className: tu.a.PostingGuidelines
					}, x)), s.a.createElement(ou, null, f !== h.ac.CROSSPOST && s.a.createElement(Yd, {
						isPredictionCreationAllowed: i,
						isApprovedUser: o
					}), s.a.createElement(iu, null, this.renderTabContent()), r && s.a.createElement(s.a.Fragment, null, s.a.createElement("div", {
						className: tu.a.postToTitle
					}, l.fbt._("Post to", null, {
						hk: "1t9e1N"
					})), s.a.createElement(go, {
						includeUserProfile: n,
						allowCrosspostableOnly: !!p,
						className: po.a.SubredditRec
					}), !!x && s.a.createElement("div", {
						className: Object(m.a)(tu.a.PostingGuidelines, tu.a.isSubredditRec)
					}, x)), e && s.a.createElement(M.a, null), s.a.createElement(so, {
						contributorRequestPending: e,
						draftId: t,
						onCancel: this.props.onDiscardPromptOnNavigationConfirmed,
						onPostFieldValidation: this.onPostFieldValidation,
						onSaveDraft: this.onSaveDraft,
						onSubmit: this.onSubmit,
						sourcePostId: p,
						subredditId: null == v ? void 0 : v.id,
						shouldRenderDivider: !r,
						isOpenAISubRec: r
					}), s.a.createElement(Pa, {
						draftId: t
					})), c && s.a.createElement(Td, {
						callback: this.onRecaptchaSucceeded
					}), a === oe && s.a.createElement(re, {
						onAbort: this.onDiscardPromptAbort,
						onDiscardConfirmed: this.onDiscardPromptOnNavigationConfirm,
						onSaveDraft: this.onDiscardPromptSaveDraft,
						submissionType: f
					}), a === C.d && s.a.createElement(re, {
						onAbort: this.onDiscardPromptAbort,
						onDiscardConfirmed: this.onDiscardPromptOnNewPostConfirm,
						onSaveDraft: this.onDiscardPromptSaveDraft,
						submissionType: f
					}), a === C.e && s.a.createElement(Is, {
						onClose: this.onDraftListClose,
						onLoadDraft: this.tryLoadDraft
					}), a === C.a && v && s.a.createElement(pe.a, {
						onClose: this.onToggleCollectionListModal,
						onSelectCollection: this.onSelectCollection,
						subredditId: v.id
					}), Object(C.v)(a) && v && s.a.createElement(ro.a, {
						onCancel: this.props.closeCreateCollectionModal,
						onCollectionCreated: this.onCollectionCreated,
						subredditId: v.id
					}), a === fd.a.LOAD_DRAFT_MODAL_ID && s.a.createElement(fd.b, {
						modalId: fd.a.LOAD_DRAFT_MODAL_ID,
						onCancel: this.onPromptCancel,
						onConfirm: this.onPromptConfirm
					}), a === fd.a.MAX_DRAFTS_MODAL_ID && s.a.createElement(fd.b, {
						modalId: fd.a.MAX_DRAFTS_MODAL_ID,
						onCancel: this.onPromptCancel,
						onConfirm: this.onPromptConfirm
					}), a === wd && s.a.createElement(Id, {
						onCancel: this.onToggleCurrentModal,
						onConfirm: this.onConfirmSavingDraftWithLimitations,
						hasEventSchedule: !!this.props.eventSchedule,
						hasRichPostMedia: this.hasRichPostMedia()
					}), d && (a === C.q.ImageWillBeRemoved || a === C.q.VideoWillBeRemovedTooLongForGif || a === C.q.VideoWillBeRemovedMediaNotAllowed || a === C.q.GalleryWillBeRemovedGalleryNotAllowed) && s.a.createElement(Ud, {
						withOverlay: !0,
						promptType: a,
						nextSubreddit: d,
						onConfirmed: this.onSubredditChangePromptConfirmed,
						onCanceled: this.props.onCancelSubredditChange
					}), s.a.createElement(ue, null))
				}
			}
			var du, uu = au(Object(r.b)(cu, (e, t) => {
					let {
						draftId: n,
						sourcePostId: o,
						pageLayer: s
					} = t;
					return {
						onLoadDraft: t => e(G.q(t)),
						onSubmit: (t, r, i, a) => e(q.c(t, {
							draftId: n || void 0,
							pageLayer: s,
							postFieldValidationPending: r,
							postGuidanceValidationPending: i,
							sourcePostId: o,
							correlationId: a
						})),
						onDiscardPromptOnCreatePostConfirmed: () => {
							e(a.q(!1, s))
						},
						onDiscardPromptOnNavigationConfirmed: (t, n) => {
							e(t ? Object(p.a)() : n ? Object(p.b)(n.url) : Object(p.b)("/"))
						},
						onExternalAccountsDataRequested: () => e(W.o()),
						onRedirectToSubreddit: t => e(z.a(t, n)),
						onCancelSubredditChange: () => {
							e(a.z("")), e(z.e())
						},
						onCancelAndRemoveMediaUpload: () => {
							e(Object(a.d)({
								items: [],
								selectedKey: null
							})), e(Q.j(H.a, !0))
						},
						onClearErrors: (t, n) => t && e(a.i(n)),
						onLoadRecaptchaEnterprise: () => e(Object(V.d)(g.gf, !0)),
						onRequestDraftList: () => e(G.p()),
						onSetDestCollection: t => e(z.d(t)),
						onStartTypingInput: t => e((e, n) => D.s(n(), C.l.TYPE, t)),
						onToggleIsChanged: t => e(a.t(t)),
						onToggleModal: t => e(a.z(t)),
						onTrackDiscardButtonClick: () => e((e, t) => D.e(t())),
						onUnmount: () => e((e, t) => {
							e(Q.j(H.a, !0)), e(Q.i(C.n, !0))
						}),
						onUploadPendingThumbnails: t => e(H.f(t)),
						startChangeUsernameFlow: () => e(Object(K.startChangeUsernameFlow)())
					}
				}, (e, t, n) => ({
					...e,
					...t,
					...n,
					onClearErrors: n => t.onClearErrors(e.hasError || e.hasSubmitValidationError, n),
					onDiscardPromptOnNavigationConfirmed: () => t.onDiscardPromptOnNavigationConfirmed(e.discardGoesBack, e.subreddit),
					closeCreateCollectionModal: () => {
						e.isSubredditHasCollections || e.modalId !== C.c ? t.onToggleModal(C.a) : t.onToggleModal(C.c)
					}
				}))(function(e) {
					return t => {
						const {
							isPredictionCreationAllowed: n,
							isApprovedUser: o
						} = function() {
							const [e, t] = s.a.useState(!1), [n, o] = s.a.useState(!1), i = Object(r.d)(), a = Object(N.ib)(), c = Object(r.e)(e => Object(N.s)(e, {
								pageLayer: a
							})), l = Object(r.e)(e => c && Object(Te.h)(e, {
								subredditId: c.id
							}));
							return s.a.useEffect(() => c && c.allowPredictions ? l ? t(!0) : void Promise.resolve(i(Object(gn.h)(c.id))).then(e => {
								t(Boolean(e)), o(Boolean(e))
							}) : t(!1), [i, c, l]), {
								isPredictionCreationAllowed: e,
								isApprovedUser: n
							}
						}();
						return s.a.createElement(e, $d({}, t, {
							isPredictionCreationAllowed: n,
							isApprovedUser: o
						}))
					}
				}((du = lu, e => {
					const t = Object(T.a)(),
						[n, i] = Object(o.useState)(!1),
						a = Object(r.e)(e => Object(I.h)(e)),
						c = Object(r.e)(w.w),
						l = Object(o.useMemo)(() => {
							var e;
							return !!(null === (e = a.allowedPostTypes) || void 0 === e ? void 0 : e.talks)
						}, [a]);
					return Object(o.useEffect)(() => {
						let e = !1;
						return a.id && (a.isProfile && c ? (async () => {
							const n = await Object(S.a)(t(), {
								name: a.name
							});
							e || i(n)
						})() : l && (async () => {
							const n = await Object(S.b)(t(), {
								subredditId: a.id
							});
							e || i(n)
						})()), () => {
							e = !0
						}
					}, [a, t, c, l]), s.a.createElement(du, P({}, e, {
						isTalkCreationAllowedForUser: n
					}))
				})))),
				pu = n("./src/reddit/components/PostingSidebar/index.tsx"),
				mu = n("./src/reddit/layout/page/Listing/index.tsx"),
				hu = n("./src/lib/makePostCreationPageKey/index.ts"),
				bu = n("./src/reddit/helpers/trackers/screenview.ts"),
				fu = n("./src/telemetry/models/Timer.ts");
			const gu = Object(i.c)({
					destSubreddit: I.h,
					user: U.m
				}),
				vu = Object(r.b)(gu, (e, t) => {
					let {
						pageLayer: n
					} = t;
					return {
						onResetForm: () => e(a.q(!1, n))
					}
				}),
				xu = Object(N.v)({
					draftId: N.w,
					pageLayer: e => e
				});
			class Cu extends o.Component {
				componentDidMount() {
					document.documentElement.scrollTop = document.body.scrollTop = 0;
					const e = this.props.pageLayer;
					if (e) {
						const t = Object(hu.a)(e.urlParams);
						fe.c.has(t) && this.props.sendEvent(Object(bu.k)(t, fu.TimerType.InApp, fe.c.end(t)))
					}
				}
				UNSAFE_componentWillReceiveProps(e) {
					this.props.draftId && !e.draftId && e.onResetForm()
				}
				render() {
					const {
						destSubreddit: e,
						user: t
					} = this.props;
					if (e.isProfile) {
						if (!t) return s.a.createElement(y.b, null);
						if (Object(ko.e)(t).toLowerCase() !== e.name.toLowerCase()) return s.a.createElement(y.a, null)
					}
					return s.a.createElement(mu.a, {
						redditStyle: !0,
						disableFullscreen: !0,
						navBar: s.a.createElement("div", null),
						content: s.a.createElement(s.a.Fragment, null, s.a.createElement(c.a, null), s.a.createElement(uu, null)),
						sidebar: s.a.createElement(pu.a, null)
					})
				}
			}
			t.default = xu(vu(Object(te.c)(Cu)))
		},
		"./src/reddit/reducers/features/avatar/index.ts": function(e, t, n) {
			"use strict";
			var o, s, r = n("./node_modules/redux/es/redux.js"),
				i = n("./src/reddit/actions/snoovatar.ts");
			! function(e) {
				e.PREMIUM = "PREMIUM"
			}(o || (o = {})),
			function(e) {
				e[e.BACKGROUND = 0] = "BACKGROUND", e[e.ACCESSORY_BACK = 1] = "ACCESSORY_BACK", e[e.HAIR_BACK = 2] = "HAIR_BACK", e[e.BODY_BOTTOM = 3] = "BODY_BOTTOM", e[e.BODY = 4] = "BODY", e[e.ACCESSORY = 5] = "ACCESSORY", e[e.FACE_LOWER = 6] = "FACE_LOWER", e[e.FACE_UPPER = 7] = "FACE_UPPER", e[e.HAIR = 8] = "HAIR", e[e.HEAD_ACCESSORY = 9] = "HEAD_ACCESSORY"
			}(s || (s = {}));
			const a = {
				id: "",
				csrf_token: "",
				snoovatar: null,
				websocketsUrls: {
					renderer: "",
					download: ""
				},
				capabilities: [o.PREMIUM],
				hasActiveClosetSubscription: !1
			};
			var c = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case i.b:
						return {
							...t.payload
						};
					default:
						return e
				}
			};
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			const l = {
					marketingEvent: {
						active: !1,
						assetUrls: null,
						experimentRequired: null
					},
					quickCreateV1: {
						id: "-1",
						active: !1,
						text: "",
						min_days_on_reddit: 0,
						should_have_avatar: !1,
						max_event_views: 0,
						min_days_since_last_event_interaction: 0,
						webAssetUrls: []
					},
					pushcard: null
				},
				d = "avatar_quick_create_event",
				u = "avatar_marketing_event",
				p = "avatar_pushcard",
				m = "avatar_promo_archived";
			var h;
			! function(e) {
				e.MaxEventViews = "targeting:max_event_views", e.Title = "copy:pushcard_title", e.Cta = "copy:pushcard_cta", e.BannerTitle = "copy:banner_title", e.BannerBody = "copy:banner_body", e.Deeplink = "deeplink"
			}(h || (h = {}));
			const b = e => {
					let {
						startsAt: t,
						endsAt: n
					} = e;
					const o = t && new Date(t) <= new Date,
						s = !!n && new Date(n) < new Date;
					return !!o && !s
				},
				f = e => {
					const {
						id: t,
						tags: n,
						webAssetUrls: o
					} = e, [s, r] = o, i = n.reduce((e, t) => {
						if (!t) return e;
						const n = Object.values(h).find(e => t.startsWith(e));
						return n ? (e[n] = t.slice(n.length + 1), e) : e
					}, {});
					return {
						id: t,
						maxViews: parseInt(i[h.MaxEventViews], 10),
						banner: {
							id: t,
							iconUrl: s,
							title: i[h.BannerTitle],
							body: i[h.BannerBody]
						},
						imageUrl: r,
						title: i[h.Title],
						cta: i[h.Cta],
						deeplink: i[h.Deeplink]
					}
				},
				g = e => {
					const t = {};
					return null == e || e.forEach(e => {
						if (null == e ? void 0 : e.startsWith("targeting:")) {
							const n = e.split(":");
							if (!n.length && n.length < 3) return null;
							try {
								t[n[1]] = JSON.parse(n[2])
							} catch {
								t[n[1]] = n[2]
							}
						}
					}), t
				};

			function v(e) {
				const t = {};
				return e.forEach(e => {
					var n;
					const {
						webAssetUrls: o,
						tags: s
					} = e;
					if (!(null == s ? void 0 : s.includes(m))) {
						if ((null == s ? void 0 : s.includes(p)) && o && o.length >= 2 && (t.pushcard = f(e)), null == s ? void 0 : s.includes(d)) {
							const {
								text: n,
								id: r
							} = e, i = o || null, a = g(s);
							t.quickCreateV1 = {
								...a,
								id: r,
								text: n,
								active: b(e) && !!i,
								webAssetUrls: i
							}
						}
						if (null == s ? void 0 : s.includes(u)) {
							const r = o || null,
								i = (null === (n = s.find(e => (null == e ? void 0 : e.startsWith("feature:")) && e.includes("web"))) || void 0 === n ? void 0 : n.split("feature:")[1]) || null;
							t.marketingEvent = {
								active: b(e) && !!r,
								assetUrls: r,
								experimentRequired: i
							}
						}
					}
				}), t
			}
			var x = n("./src/reddit/actions/economics/marketplace/constants.ts"),
				C = n("./src/reddit/actions/goldPurchaseModals/constants.ts"),
				E = n("./src/reddit/actions/modal.ts"),
				y = n("./src/reddit/constants/modals.ts");
			var O = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				var n, o;
				switch (t.type) {
					case C.s:
						const {
							avatarMarketingEvents: s
						} = t.payload;
						return s ? {
							...l,
							...v(s)
						} : l;
					case x.b:
					case x.c:
					case x.f:
						return (null == e ? void 0 : e.pushcard) ? {
							...e,
							pushcard: {
								...e.pushcard
							}
						} : e;
					case E.c:
						return (null === (n = t.payload) || void 0 === n ? void 0 : n.id) === y.a.SNOOVATAR_MODAL ? {
							...l,
							pushcard: null !== (o = null == e ? void 0 : e.pushcard) && void 0 !== o ? o : null
						} : e;
					default:
						return e
				}
			};
			var k = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case i.a: {
						const {
							image: e,
							accessory_ids: n
						} = t.payload;
						return {
							image: e,
							accessoryIds: n
						}
					}
					default:
						return e
				}
			};
			t.a = Object(r.c)({
				marketing: O,
				avatarUser: c,
				randomAvatar: k
			})
		},
		"./src/reddit/reducers/features/eligibleUXExperiences/index.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./src/reddit/actions/eligibleUxExperiences/constants.ts");
			const s = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
						experiences: {}
					},
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case o.a: {
						const n = Date.now(),
							{
								experiences: o
							} = t.payload;
						return {
							...e,
							experiences: {
								...e.experiences,
								...Object.keys(o).reduce((e, t) => ({
									...e,
									[t]: {
										value: o[t],
										fetched: n
									}
								}), {})
							}
						}
					}
					case o.b: {
						const {
							experience: n,
							value: o
						} = t.payload;
						return {
							...e,
							experiences: {
								...e.experiences,
								[n]: {
									...e.experiences[n],
									value: o
								}
							}
						}
					}
				}
				return e
			}
		},
		"./src/reddit/reducers/pages/modHub/index.ts": function(e, t, n) {
			"use strict";
			var o = n("./node_modules/redux/es/redux.js"),
				s = n("./src/reddit/actions/subredditModeration/constants.ts");
			var r = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.g:
						case s.f:
							return null;
						case s.e:
							return t.payload;
						default:
							return e
					}
				},
				i = n("./src/reddit/models/SubredditModeration/index.ts");
			const a = {};
			var c = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.g: {
							const {
								subredditId: n,
								fetchedToken: o
							} = t.payload, s = Object(i.e)(n, o);
							return {
								...e,
								[s]: !0
							}
						}
						case s.f:
						case s.e: {
							const {
								subredditId: n,
								fetchedToken: o
							} = t.payload, s = Object(i.e)(n, o);
							return {
								...e,
								[s]: !1
							}
						}
						default:
							return e
					}
				},
				l = Object(o.c)({
					error: r,
					pending: c
				});
			const d = {};
			var u = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : d,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.f: {
						const {
							fetchedToken: n,
							subredditId: o
						} = t.payload, s = Object(i.e)(o, n);
						return {
							...e,
							[s]: !0
						}
					}
					default:
						return e
				}
			};
			const p = {};
			var m = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : p,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.f: {
							const {
								subredditId: e,
								after: n
							} = t.payload;
							return {
								[e]: n
							}
						}
						default:
							return e
					}
				},
				h = n("./node_modules/icepick/icepick.js");
			const b = {};
			var f = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : b,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.d:
					case s.f: {
						const {
							subredditId: n,
							approvedSubmitters: o
						} = t.payload, s = {
							[n]: o
						};
						return Object(h.merge)(e, s)
					}
					case s.k: {
						const {
							subredditId: n,
							userId: o
						} = t.payload;
						return Object(h.unsetIn)(e, [n, o])
					}
					default:
						return e
				}
			};
			var g = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.j:
					case s.i:
						return null;
					case s.h:
						return t.payload;
					default:
						return e
				}
			};
			var v = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.j:
							return !0;
						case s.i:
						case s.h:
							return !1;
						default:
							return e
					}
				},
				x = Object(o.c)({
					error: g,
					pending: v
				});
			var C = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.j:
							return null;
						case s.i: {
							const e = t.payload.approvedSubmitterIds[0];
							return e ? t.payload.approvedSubmitters[e] : null
						}
						default:
							return e
					}
				},
				E = Object(o.c)({
					api: x,
					result: C
				});
			const y = {};
			var O = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : y,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.f: {
							const {
								subredditId: n,
								approvedSubmitterIds: o
							} = t.payload;
							return e[n] ? {
								...e,
								[n]: [...e[n], ...o]
							} : {
								...e,
								[n]: o
							}
						}
						case s.k: {
							const {
								subredditId: n,
								userId: o
							} = t.payload;
							return {
								[n]: e[n].filter(e => e !== o)
							}
						}
						case s.d: {
							const {
								subredditId: n,
								approvedSubmitterIds: o
							} = t.payload, s = o[0];
							return s && e[n] && -1 === e[n].indexOf(s) ? {
								[n]: [s, ...e[n]]
							} : e
						}
						default:
							return e
					}
				},
				k = Object(o.c)({
					api: l,
					fetchedTokens: u,
					loadMore: m,
					models: f,
					search: E,
					userOrder: O
				});
			var _ = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.n:
					case s.m:
						return null;
					case s.l:
						return t.payload;
					default:
						return e
				}
			};
			const j = {};
			var S = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : j,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.n: {
							const {
								subredditId: n,
								fetchedToken: o
							} = t.payload, s = Object(i.f)(n, o);
							return {
								...e,
								[s]: !0
							}
						}
						case s.m:
						case s.l: {
							const {
								subredditId: n,
								fetchedToken: o
							} = t.payload, s = Object(i.f)(n, o);
							return {
								...e,
								[s]: !1
							}
						}
						default:
							return e
					}
				},
				T = Object(o.c)({
					error: _,
					pending: S
				});
			const w = {};
			var I = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : w,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.m: {
						const {
							fetchedToken: n,
							subredditId: o
						} = t.payload, s = Object(i.f)(o, n);
						return {
							...e,
							[s]: !0
						}
					}
					default:
						return e
				}
			};
			const P = {};
			var M = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : P,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.m: {
						const {
							subredditId: e,
							loadMoreToken: n
						} = t.payload;
						return {
							[e]: n
						}
					}
					default:
						return e
				}
			};
			const R = {};
			var N = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : R,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.m: {
							const {
								subredditId: n,
								approvedTalkHosts: o,
								forceRefresh: s
							} = t.payload, r = {
								[n]: [...s ? [] : e[n] || [], ...o]
							};
							return Object(h.merge)(e, r)
						}
						case s.o: {
							const {
								subredditId: n,
								userId: o
							} = t.payload, s = {
								[n]: e[n].filter(e => e.redditor.id !== o)
							};
							return Object(h.merge)(e, s)
						}
						default:
							return e
					}
				},
				D = Object(o.c)({
					api: T,
					fetchedTokens: I,
					loadMore: M,
					models: N
				}),
				L = n("./src/reddit/actions/grantUserFlair/constants.ts");
			var A = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case L.g:
					case L.i:
						return null;
					case L.f:
						return t.payload;
					default:
						return e
				}
			};
			var B = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case L.i:
							return !0;
						case L.g:
						case L.f:
							return !1;
						default:
							return e
					}
				},
				F = Object(o.c)({
					error: A,
					pending: B
				}),
				U = n("./node_modules/lodash/merge.js"),
				K = n.n(U),
				W = n("./node_modules/lodash/omit.js"),
				H = n.n(W);
			const q = {};
			var z = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : q,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case L.g:
					case L.k: {
						const {
							subredditId: n,
							flairedUsers: o
						} = t.payload;
						return K()({
							...e
						}, {
							[n]: o
						})
					}
					case L.c: {
						const {
							subredditId: n,
							userName: o
						} = t.payload, s = H()(e[n], o);
						return {
							...e,
							[n]: s
						}
					}
					case L.a:
					case L.b:
					case L.h:
						const {
							subredditId: n, userName: o, applied: s
						} = t.payload;
						return s ? {
							...e,
							[n]: {
								...e[n],
								[o]: s
							}
						} : e;
					default:
						return e
				}
			};
			const G = {};
			var V = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : G,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case L.g: {
						const {
							key: n,
							pageInfo: o
						} = t.payload;
						return {
							...e,
							[n]: o
						}
					}
					default:
						return e
				}
			};
			var Q = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case L.l:
					case L.k:
						return null;
					case L.j:
						return t.payload;
					default:
						return e
				}
			};
			var J = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case L.l:
							return !0;
						case L.k:
						case L.j:
							return !1;
						default:
							return e
					}
				},
				X = Object(o.c)({
					error: Q,
					pending: J
				});
			var Z = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case L.k: {
							const {
								searchResult: e
							} = t.payload;
							return e
						}
						case L.c: {
							const {
								userName: n
							} = t.payload;
							return e === n ? null : e
						}
						default:
							return e
					}
				},
				Y = Object(o.c)({
					api: X,
					result: Z
				});
			const $ = {};
			var ee = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : $,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case L.g: {
							const {
								key: n,
								userOrder: o
							} = t.payload;
							return {
								...e,
								[n]: o
							}
						}
						case L.a: {
							const {
								key: n,
								userName: o
							} = t.payload;
							if (!n) return e;
							if (!e[n].includes(o)) {
								const t = [...e[n], o];
								return {
									...e,
									[n]: t
								}
							}
							return e
						}
						case L.c: {
							const {
								userName: n
							} = t.payload, o = {};
							for (const t in e) o[t] = e[t].filter(e => e !== n);
							return o
						}
						default:
							return e
					}
				},
				te = Object(o.c)({
					api: F,
					models: z,
					pageInfo: V,
					search: Y,
					userOrder: ee
				}),
				ne = n("./src/reddit/actions/moderationLog/constants.ts");
			const oe = {};
			var se = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : oe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.b: {
						const {
							normalizedCategories: n
						} = t.payload;
						return Object(h.merge)(e, n)
					}
					default:
						return e
				}
			};
			const re = {};
			var ie = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : re,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.c: {
						const {
							actionIds: n,
							key: o,
							subredditId: s
						} = t.payload;
						return {
							...e,
							[s]: {
								...e[s] || {},
								[o]: n
							}
						}
					}
					default:
						return e
				}
			};
			const ae = {};
			var ce = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ae,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ne.c: {
							const {
								normalizedModerationLog: n,
								subredditId: o
							} = t.payload, s = {};
							n.forEach(e => {
								s[e.id] = e
							});
							const r = {
								[o]: s
							};
							return K()({
								...e
							}, r)
						}
						default:
							return e
					}
				},
				le = Object(o.c)({
					itemOrder: ie,
					models: ce
				});
			var de = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.c: {
						const {
							approximateCount: e
						} = t.payload;
						return e
					}
					default:
						return e
				}
			};
			var ue = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.c: {
						const {
							endCursor: e
						} = t.payload;
						return e
					}
					default:
						return e
				}
			};
			const pe = {};
			var me = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.c: {
						const {
							hasNextPage: n,
							subredditId: o
						} = t.payload;
						return {
							...e,
							[o]: n
						}
					}
					default:
						return e
				}
			};
			const he = {};
			var be = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : he,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.c: {
						const {
							hasPreviousPage: n,
							subredditId: o
						} = t.payload;
						return {
							...e,
							[o]: n
						}
					}
					default:
						return e
				}
			};
			var fe = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.c: {
						const {
							subredditId: n,
							insightsData: o
						} = t.payload;
						return {
							...e,
							[n]: o
						}
					}
					default:
						return e
				}
			};
			const ge = [];
			var ve = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ge,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ne.a: {
						const {
							normalizedModerators: n,
							subredditId: o
						} = t.payload;
						return {
							...e,
							[o]: n
						}
					}
					default:
						return e
				}
			};
			var xe = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ne.c: {
							const {
								startCursor: e
							} = t.payload;
							return e
						}
						default:
							return e
					}
				},
				Ce = Object(o.c)({
					actionCategories: se,
					actions: le,
					approximateCount: de,
					endCursor: ue,
					hasNextPage: me,
					hasPreviousPage: be,
					moderators: ve,
					startCursor: xe,
					insightsEntrypoint: fe
				});
			const Ee = {};
			var ye = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ee,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.O:
					case s.y: {
						const {
							subredditId: n,
							moderators: o
						} = t.payload.response || t.payload, s = {
							[n]: o
						};
						return Object(h.merge)(e, s)
					}
					case s.C: {
						const {
							subredditId: n,
							userId: o,
							permissions: s
						} = t.payload;
						return Object(h.setIn)(e, [n, o, "modPermissions"], s)
					}
					case s.jb: {
						const {
							subredditId: n,
							userId: o
						} = t.payload;
						return Object(h.unsetIn)(e, [n, o])
					}
					default:
						return e
				}
			};
			const Oe = {};
			var ke = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Oe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.z:
					case s.y: {
						const {
							key: n,
							subredditId: o
						} = t.payload;
						return o ? {
							...e,
							[n]: null
						} : e
					}
					case s.x: {
						const {
							error: n,
							key: o,
							subredditId: s
						} = t.payload;
						return s ? {
							...e,
							[o]: n
						} : e
					}
					default:
						return e
				}
			};
			const _e = {};
			var je = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _e,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.x:
						case s.y: {
							const {
								subredditId: n,
								key: o
							} = t.payload;
							return n ? {
								...e,
								[o]: !1
							} : e
						}
						case s.z: {
							const {
								subredditId: n,
								key: o
							} = t.payload;
							return n ? {
								...e,
								[o]: !0
							} : e
						}
						default:
							return e
					}
				},
				Se = Object(o.c)({
					error: ke,
					pending: je
				});
			const Te = {};
			var we = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Te,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.y: {
							const {
								subredditId: n,
								response: o,
								key: s
							} = t.payload;
							return Object(h.setIn)(e, [n, s], o.moderatorIds)
						}
						case s.jb: {
							const {
								subredditId: n,
								userId: o,
								key: s
							} = t.payload, r = e[n][s].filter(e => e !== o);
							return Object(h.setIn)(e, [n, s], r)
						}
						default:
							return e
					}
				},
				Ie = Object(o.c)({
					data: we,
					api: Se
				});
			var Pe = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.F:
					case s.E:
						return null;
					case s.D:
						return t.payload;
					default:
						return e
				}
			};
			var Me = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.E:
						case s.D:
							return !1;
						case s.F:
							return !0;
						default:
							return e
					}
				},
				Re = Object(o.c)({
					error: Pe,
					pending: Me
				});
			const Ne = {};
			var De = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ne,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.E: {
						const {
							subredditId: n,
							moderators: o
						} = t.payload;
						return Object(h.set)(e, n, o)
					}
					case s.gb: {
						const {
							subredditId: n,
							userId: o
						} = t.payload;
						return Object(h.unsetIn)(e, [n, o])
					}
					case s.c: {
						const n = t.payload,
							{
								subredditId: o,
								moderators: s
							} = n,
							r = {
								[o]: s
							};
						return Object(h.merge)(e, r)
					}
					default:
						return e
				}
			};
			const Le = {};
			var Ae = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Le,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.E: {
							const {
								subredditId: n,
								moderatorIds: o
							} = t.payload;
							return {
								...e,
								[n]: o
							}
						}
						case s.gb: {
							const {
								subredditId: n,
								userId: o
							} = t.payload, s = e[n].filter(e => e !== o);
							return {
								...e,
								[n]: s
							}
						}
						case s.c: {
							const n = t.payload,
								{
									subredditId: o,
									moderatorIds: s
								} = n,
								r = [...e[o] || [], ...s];
							return {
								...e,
								[o]: r
							}
						}
						default:
							return e
					}
				},
				Be = Object(o.c)({
					api: Re,
					models: De,
					userOrder: Ae
				});
			const Fe = {};
			var Ue = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Fe,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.L: {
						const {
							subredditId: n,
							response: o
						} = t.payload, {
							invitePending: s
						} = o, r = {
							[n]: s
						};
						return Object(h.merge)(e, r)
					}
					case s.I:
					case s.J: {
						const {
							subredditId: n
						} = t.payload;
						return Object(h.unset)(e, n)
					}
					default:
						return e
				}
			};
			const Ke = {};
			var We = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ke,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.y: {
						const {
							response: e
						} = t.payload;
						return {
							[e.subredditId]: {
								after: e.after,
								before: e.before
							}
						}
					}
					default:
						return e
				}
			};
			const He = {};
			var qe = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : He,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.L: {
						const {
							response: e
						} = t.payload;
						return {
							[e.subredditId]: {
								after: e.after,
								before: e.before
							}
						}
					}
					default:
						return e
				}
			};
			const ze = {};
			var Ge = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ze,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.L: {
						const {
							response: n
						} = t.payload, o = {
							[n.subredditId]: n.moderators
						};
						return Object(h.merge)({
							...e
						}, o)
					}
					case s.C: {
						const n = t.payload,
							{
								subredditId: o,
								userId: s,
								permissions: r
							} = n;
						return e[o] && e[o][s] ? Object(h.setIn)(e, [o, s, "modPermissions"], r) : e
					}
					default:
						return e
				}
			};
			var Ve = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.P:
					case s.O:
						return null;
					case s.N:
						return t.payload;
					default:
						return e
				}
			};
			var Qe = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.P:
							return !0;
						case s.O:
						case s.N:
							return !1;
						default:
							return e
					}
				},
				Je = Object(o.c)({
					error: Ve,
					pending: Qe
				}),
				Xe = n("./node_modules/lodash/isEqual.js"),
				Ze = n.n(Xe);
			var Ye = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.P:
						case s.N:
						case s.jb:
							return null;
						case s.O: {
							const e = t.payload.moderatorIds[0];
							return e ? t.payload.moderators[e] : null
						}
						case s.C: {
							const {
								userId: n,
								permissions: o
							} = t.payload;
							return e && e.id === n && !Ze()(e.modPermissions, o) ? {
								...e,
								modPermissions: o
							} : e
						}
						default:
							return e
					}
				},
				$e = Object(o.c)({
					api: Je,
					result: Ye
				});
			const et = {};
			var tt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : et,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.M:
					case s.L: {
						const {
							subredditId: n,
							key: o
						} = t.payload;
						return n ? {
							...e,
							[o]: null
						} : e
					}
					case s.K: {
						const {
							error: n,
							subredditId: o,
							key: s
						} = t.payload;
						return o ? {
							...e,
							[s]: n
						} : e
					}
					default:
						return e
				}
			};
			const nt = {};
			var ot = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : nt,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.K:
						case s.L: {
							const {
								subredditId: n,
								key: o
							} = t.payload;
							return n ? {
								...e,
								[o]: !1
							} : e
						}
						case s.M: {
							const {
								subredditId: n,
								key: o
							} = t.payload;
							return n ? {
								...e,
								[o]: !0
							} : e
						}
						default:
							return e
					}
				},
				st = Object(o.c)({
					error: tt,
					pending: ot
				});
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			const rt = {};
			var it = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : rt,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.L: {
							const {
								response: n,
								subredditId: o,
								key: s
							} = t.payload, {
								moderatorIds: r
							} = n;
							return Object(h.merge)(e, {
								[o]: {
									[s]: r
								}
							})
						}
						case s.jb: {
							const {
								subredditId: n,
								userId: o
							} = t.payload, s = {
								...e[n]
							};
							return Object.keys(e[n]).forEach(t => {
								const r = e[n][t].filter(e => e !== o);
								s[t] = r
							}), Object(h.set)(e, n, s)
						}
						default:
							return e
					}
				},
				at = Object(o.c)({
					data: it,
					api: st
				}),
				ct = Object(o.c)({
					editableModerators: ye,
					editableUserOrder: Ie,
					invitedModerators: Be,
					invitePending: Ue,
					loadMoreModerators: qe,
					loadMoreEditableModerators: We,
					models: Ge,
					search: $e,
					userOrder: at
				}),
				lt = n("./src/reddit/actions/bulkActions/constants.ts");
			var dt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case lt.c:
						case lt.b:
							return null;
						case lt.a:
							return t.payload;
						default:
							return e
					}
				},
				ut = n("./src/reddit/actions/modQueue/constants.ts");
			var pt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case lt.c:
							return !0;
						case lt.b:
						case lt.a:
						case ut.x:
						case ut.w:
							return !1;
						default:
							return e
					}
				},
				mt = Object(o.c)({
					error: dt,
					pending: pt
				});
			const ht = {};
			var bt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ht,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.a: {
							const {
								ids: n
							} = t.payload, o = {};
							return n.forEach(e => o[e] = !0), {
								...e,
								...o
							}
						}
						case ut.d: {
							const {
								ids: n
							} = t.payload;
							return H()(e, n)
						}
						case ut.c: {
							const {
								ids: e
							} = t.payload, n = {};
							return e.forEach(e => n[e] = !0), n
						}
						default:
							return e
					}
				},
				ft = n("./src/reddit/models/ModQueue/index.ts");
			const gt = {};
			var vt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : gt,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case lt.b: {
							const {
								operation: e,
								ids: n
							} = t.payload;
							return "approve" === e ? gt : {
								[ft.c[e]]: n
							}
						}
						default:
							return e
					}
				},
				xt = Object(o.c)({
					api: mt,
					selectedItems: bt,
					undoLastAction: vt
				});
			var Ct = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.g:
					case ut.f:
						return null;
					case ut.e:
						return t.payload;
					default:
						return e
				}
			};
			var Et = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.g:
							return !0;
						case ut.f:
						case ut.e:
							return !1;
						default:
							return e
					}
				},
				yt = Object(o.c)({
					error: Ct,
					pending: Et
				});
			const Ot = {};
			var kt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ot,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.f: {
						const {
							listingKey: n,
							page: o,
							response: s
						} = t.payload, {
							modqueue: r
						} = s;
						return {
							...e,
							[n]: {
								...e[n] || {},
								[o]: r
							}
						}
					}
					default:
						return e
				}
			};
			const _t = {};
			var jt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _t,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.f: {
							const {
								listingKey: n,
								response: o
							} = t.payload, {
								modqueue: s
							} = o, r = s[s.length - 1] || null;
							return {
								...e,
								[n]: r
							}
						}
						default:
							return e
					}
				},
				St = Object(o.c)({
					api: yt,
					itemOrder: kt,
					loadMore: jt
				}),
				Tt = n("./src/reddit/actions/pages/modListing/constants.ts");
			var wt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case Tt.e: {
						const n = t.payload,
							{
								moderatingSubreddits: o
							} = n;
						return o ? null : e
					}
					case ut.i:
					case ut.f:
					case ut.r:
					case ut.u:
					case ut.A: {
						const {
							response: e
						} = t.payload, {
							moderatedAfter: n
						} = e;
						return n
					}
					case ut.n: {
						const e = t.payload,
							{
								moderatedAfter: n
							} = e;
						return n
					}
					default:
						return e
				}
			};
			const It = [];
			var Pt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : It,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.i:
					case ut.f:
					case ut.r:
					case ut.u:
					case ut.A: {
						const {
							response: e
						} = t.payload, {
							listingOrder: n
						} = e;
						return n
					}
					case ut.n: {
						const n = t.payload,
							{
								listingOrder: o
							} = n;
						return [...e, ...o]
					}
					case Tt.e: {
						const n = t.payload,
							{
								listingOrder: o
							} = n;
						return o || e
					}
					default:
						return e
				}
			};
			var Mt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.b:
						return !0;
					default:
						return e
				}
			};
			var Rt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.n:
							return !0;
						case ut.b:
							return !1;
						default:
							return e
					}
				},
				Nt = Object(o.c)({
					after: wt,
					data: Pt,
					loaded: Mt,
					pending: Rt
				});
			var Dt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.j:
					case ut.i:
						return null;
					case ut.h:
						return t.payload;
					default:
						return e
				}
			};
			var Lt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.j:
							return !0;
						case ut.i:
						case ut.h:
							return !1;
						default:
							return e
					}
				},
				At = Object(o.c)({
					error: Dt,
					pending: Lt
				});
			const Bt = {};
			var Ft = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Bt,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.i: {
						const {
							listingKey: n,
							page: o,
							response: s
						} = t.payload, {
							modqueue: r
						} = s;
						return {
							...e,
							[n]: {
								...e[n] || {},
								[o]: r
							}
						}
					}
					default:
						return e
				}
			};
			const Ut = {};
			var Kt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ut,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.i: {
							const {
								listingKey: n,
								response: o
							} = t.payload, {
								modqueue: s
							} = o, r = s[s.length - 1] || null;
							return {
								...e,
								[n]: r
							}
						}
						default:
							return e
					}
				},
				Wt = Object(o.c)({
					api: At,
					itemOrder: Ft,
					loadMore: Kt
				});
			var Ht = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.s:
					case ut.r:
						return null;
					case ut.q:
						return t.payload;
					default:
						return e
				}
			};
			var qt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.s:
							return !0;
						case ut.r:
						case ut.q:
							return !1;
						default:
							return e
					}
				},
				zt = Object(o.c)({
					error: Ht,
					pending: qt
				});
			const Gt = {};
			var Vt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Gt,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.r: {
						const {
							listingKey: n,
							page: o,
							response: s
						} = t.payload, {
							modqueue: r
						} = s;
						return {
							...e,
							[n]: {
								...e[n] || {},
								[o]: r
							}
						}
					}
					default:
						return e
				}
			};
			const Qt = {};
			var Jt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Qt,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.r: {
							const {
								listingKey: n,
								response: o
							} = t.payload, {
								modqueue: s
							} = o, r = s[s.length - 1] || null;
							return {
								...e,
								[n]: r
							}
						}
						default:
							return e
					}
				},
				Xt = Object(o.c)({
					api: zt,
					itemOrder: Vt,
					loadMore: Jt
				});
			var Zt = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.v:
					case ut.u:
						return null;
					case ut.t:
						return t.payload;
					default:
						return e
				}
			};
			var Yt = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.v:
							return !0;
						case ut.u:
						case ut.t:
							return !1;
						default:
							return e
					}
				},
				$t = Object(o.c)({
					error: Zt,
					pending: Yt
				});
			const en = {};
			var tn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : en,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.u: {
						const {
							listingKey: n,
							page: o,
							response: s
						} = t.payload, {
							modqueue: r
						} = s;
						return {
							...e,
							[n]: {
								...e[n] || {},
								[o]: r
							}
						}
					}
					default:
						return e
				}
			};
			const nn = {};
			var on = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : nn,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.u: {
							const {
								listingKey: n,
								response: o
							} = t.payload, {
								modqueue: s
							} = o, r = s[s.length - 1] || null;
							return {
								...e,
								[n]: r
							}
						}
						default:
							return e
					}
				},
				sn = Object(o.c)({
					api: $t,
					itemOrder: tn,
					loadMore: on
				});
			var rn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.B:
					case ut.A:
						return null;
					case ut.z:
						return t.payload;
					default:
						return e
				}
			};
			var an = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.B:
							return !0;
						case ut.A:
						case ut.z:
							return !1;
						default:
							return e
					}
				},
				cn = Object(o.c)({
					error: rn,
					pending: an
				});
			const ln = {};
			var dn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ln,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case ut.A: {
						const {
							listingKey: n,
							page: o,
							response: s
						} = t.payload, {
							modqueue: r
						} = s;
						return {
							...e,
							[n]: {
								...e[n] || {},
								[o]: r
							}
						}
					}
					default:
						return e
				}
			};
			const un = {};
			var pn = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : un,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case ut.A: {
							const {
								listingKey: n,
								response: o
							} = t.payload, {
								modqueue: s
							} = o, r = s[s.length - 1] || null;
							return {
								...e,
								[n]: r
							}
						}
						default:
							return e
					}
				},
				mn = Object(o.c)({
					api: cn,
					itemOrder: dn,
					loadMore: pn
				}),
				hn = Object(o.c)({
					bulkAction: xt,
					edited: St,
					moderatedCommunitiesOrder: Nt,
					modqueue: Wt,
					reports: Xt,
					spam: sn,
					unmoderated: mn
				});
			var bn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.Y:
					case s.W:
						return null;
					case s.V:
						return t.payload;
					default:
						return e
				}
			};
			const fn = {};
			var gn = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : fn,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.Y: {
							const {
								subredditId: n,
								fetchedToken: o
							} = t.payload, s = Object(i.e)(n, o);
							return {
								...e,
								[s]: !0
							}
						}
						case s.W:
						case s.V: {
							const {
								subredditId: n,
								fetchedToken: o
							} = t.payload, s = Object(i.e)(n, o);
							return {
								...e,
								[s]: !1
							}
						}
						default:
							return e
					}
				},
				vn = Object(o.c)({
					error: bn,
					pending: gn
				});
			const xn = {};
			var Cn = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : xn,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.W: {
							const {
								fetchedToken: n,
								subredditId: o
							} = t.payload, s = Object(i.e)(o, n);
							return {
								...e,
								[s]: !0
							}
						}
						default:
							return e
					}
				},
				En = n("./src/reddit/actions/inContextModeration.ts");
			var yn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case En.b:
						return t.payload;
					default:
						return e
				}
			};
			const On = {};
			var kn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : On,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.W: {
						const {
							subredditId: e,
							after: n
						} = t.payload;
						return {
							[e]: n
						}
					}
					default:
						return e
				}
			};
			const _n = {};
			var jn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _n,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.X:
					case s.W: {
						const {
							subredditId: n,
							mutedUsers: o
						} = t.payload, s = {
							[n]: o
						};
						return Object(h.merge)(e, s)
					}
					case s.cb: {
						const {
							subredditId: n,
							userId: o
						} = t.payload;
						return Object(h.unsetIn)(e, [n, o])
					}
					default:
						return e
				}
			};
			var Sn = function() {
				let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
					t = arguments.length > 1 ? arguments[1] : void 0;
				switch (t.type) {
					case s.bb:
					case s.ab:
						return null;
					case s.Z:
						return t.payload;
					default:
						return e
				}
			};
			var Tn = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.bb:
							return !0;
						case s.ab:
						case s.Z:
							return !1;
						default:
							return e
					}
				},
				wn = Object(o.c)({
					error: Sn,
					pending: Tn
				});
			var In = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.bb:
						case s.Z:
							return null;
						case s.ab: {
							const e = t.payload.mutedUserIds[0];
							return e ? t.payload.mutedUsers[e] : null
						}
						default:
							return e
					}
				},
				Pn = Object(o.c)({
					api: wn,
					result: In
				});
			const Mn = {};
			var Rn = function() {
					let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Mn,
						t = arguments.length > 1 ? arguments[1] : void 0;
					switch (t.type) {
						case s.W: {
							const {
								subredditId: n,
								mutedUserIds: o
							} = t.payload;
							return e[n] ? {
								...e,
								[n]: [...e[n], ...o]
							} : {
								...e,
								[n]: o
							}
						}
						case s.cb: {
							const {
								subredditId: n,
								userId: o
							} = t.payload;
							return {
								[n]: e[n].filter(e => e !== o)
							}
						}
						case s.X: {
							const {
								subredditId: n,
								mutedUserIds: o
							} = t.payload, s = o[0];
							return s && e[n] && -1 === e[n].indexOf(s) ? {
								[n]: [s, ...e[n]]
							} : e
						}
						default:
							return e
					}
				},
				Nn = Object(o.c)({
					api: vn,
					fetchedTokens: Cn,
					inContext: yn,
					loadMore: kn,
					models: jn,
					search: Pn,
					userOrder: Rn
				});
			t.a = Object(o.c)({
				approvedSubmitters: k,
				approvedTalkHosts: D,
				flairedUsers: te,
				moderationLog: Ce,
				moderators: ct,
				modQueue: hn,
				muted: Nn
			})
		},
		"./src/reddit/selectors/authorFlair.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			})), n.d(t, "c", (function() {
				return r
			}));
			const o = (e, t) => {
					let {
						post: n
					} = t;
					const o = n.belongsTo.id;
					if (!o) return null;
					const s = e.authorFlair.models[o];
					if (!s) return null;
					const r = n.author;
					return r && s[r] || null
				},
				s = (e, t) => {
					let {
						subredditId: n
					} = t;
					const o = e.authorFlair && e.authorFlair.inContext && e.authorFlair.inContext.username;
					if (!o) return null;
					if (!n) return null;
					const s = e.authorFlair.models[n];
					return s ? s[o] : null
				},
				r = e => e.authorFlair.inContext
		},
		"./src/reddit/selectors/avatar.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			})), n.d(t, "c", (function() {
				return a
			}));
			var o = n("./src/lib/initializeClient/installReducer.ts"),
				s = n("./src/reddit/reducers/features/avatar/index.ts");
			Object(o.a)({
				features: {
					avatar: s.a
				}
			});
			const r = e => {
					var t, n;
					return null === (n = null === (t = e.features) || void 0 === t ? void 0 : t.avatar) || void 0 === n ? void 0 : n.avatarUser
				},
				i = e => {
					var t, n;
					return null === (n = null === (t = e.features) || void 0 === t ? void 0 : t.avatar) || void 0 === n ? void 0 : n.avatarUser.csrf_token
				},
				a = e => {
					var t, n;
					return (null === (n = null === (t = e.features) || void 0 === t ? void 0 : t.avatar) || void 0 === n ? void 0 : n.randomAvatar) || null
				}
		},
		"./src/reddit/selectors/avatarMarketing.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return i
			})), n.d(t, "a", (function() {
				return a
			}));
			var o = n("./src/lib/initializeClient/installReducer.ts"),
				s = n("./src/reddit/reducers/features/avatar/index.ts"),
				r = n("./src/reddit/selectors/experiments/econ/simpleExperiment.ts");
			Object(o.a)({
				features: {
					avatar: s.a
				}
			});
			const i = e => {
					var t, n;
					return !!(null === (n = null === (t = e.features) || void 0 === t ? void 0 : t.avatar) || void 0 === n ? void 0 : n.marketing)
				},
				a = e => {
					var t, n, o, s;
					const i = null === (o = null === (n = null === (t = e.features) || void 0 === t ? void 0 : t.avatar) || void 0 === n ? void 0 : n.marketing) || void 0 === o ? void 0 : o.marketingEvent;
					if (!(null == i ? void 0 : i.active) || !(null === (s = null == i ? void 0 : i.assetUrls) || void 0 === s ? void 0 : s.length)) return null;
					const a = i.assetUrls[0];
					return !i.experimentRequired || Object(r.a)(i.experimentRequired)(e) ? a : null
				}
		},
		"./src/reddit/selectors/editorContent.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			}));
			var o = n("./src/reddit/actions/postCreation/constants.ts");
			const s = (e, t) => e.creations.api.editor.converting.pending[t || o.k]
		},
		"./src/reddit/selectors/eligibleUXExperiences.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./src/lib/initializeClient/installReducer.ts"),
				s = n("./src/reddit/reducers/features/eligibleUXExperiences/index.ts");
			Object(o.a)({
				features: {
					eligibleUXExperiences: s.a
				}
			});
			const r = (e, t) => {
				var n, o, s;
				return (null === (s = null === (o = null === (n = e.features) || void 0 === n ? void 0 : n.eligibleUXExperiences) || void 0 === o ? void 0 : o.experiences) || void 0 === s ? void 0 : s[t.experience]) || null
			}
		},
		"./src/reddit/selectors/experiments/antievil/index.tsx": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./src/reddit/constants/experiments.ts"),
				s = n("./src/reddit/helpers/chooseVariant/index.ts");
			const r = e => {
				return Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: o.I
				}) === o.Rd
			}
		},
		"./src/reddit/selectors/experiments/contributeBeforeSignUp.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return d
			})), n.d(t, "c", (function() {
				return u
			})), n.d(t, "b", (function() {
				return p
			}));
			var o = n("./node_modules/reselect/es/index.js"),
				s = n("./src/reddit/constants/experiments.ts"),
				r = n("./src/reddit/helpers/chooseVariant/index.ts"),
				i = n("./src/reddit/selectors/experiments/utils.ts");
			const a = ["au", "br", "ca", "de", "fr", "gb", "in", "mx", "us", "row"],
				c = Object(o.a)((e, t) => Object(r.c)(e, {
					experimentEligibilitySelector: r.a,
					experimentName: `d2x_start_comment_before_sign_up_${t}`
				}), i.a),
				l = e => a.find(t => !!Object(i.a)(c(e, t))),
				d = Object(o.a)(l, e => !!e),
				u = e => {
					const t = l(e);
					return !!t && c(e, t) === s.U.SkipOnboarding
				},
				p = e => {
					const t = l(e);
					return !!t && c(e, t) === s.U.RegOnboarding
				}
		},
		"./src/reddit/selectors/experiments/d2xPdpSideRailRecs.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return u
			})), n.d(t, "b", (function() {
				return p
			}));
			var o = n("./src/reddit/constants/experiments.ts"),
				s = n("./src/reddit/helpers/chooseVariant/index.ts"),
				r = n("./src/reddit/selectors/experiments/index.ts"),
				i = n("./src/reddit/selectors/experiments/utils.ts"),
				a = n("./src/reddit/selectors/meta.ts"),
				c = n("./node_modules/reselect/es/index.js");
			const l = Object(c.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: e => Object(a.h)(e) && Object(r.f)(e),
					experimentName: o.pc
				}), i.a),
				d = Object(c.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: e => !Object(a.h)(e) && Object(r.f)(e),
					experimentName: o.oc
				}), i.a),
				u = Object(c.a)(l, d, (e, t) => e || t),
				p = Object(c.a)(l, d, (e, t) => !(!e && !t))
		},
		"./src/reddit/selectors/experiments/navbarLikeMweb.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./src/reddit/constants/experiments.ts"),
				s = n("./src/reddit/helpers/chooseVariant/index.ts");
			const r = e => Object(s.c)(e, {
				experimentName: o.Ke,
				experimentEligibilitySelector: s.a
			}) === o.Te.Enabled
		},
		"./src/reddit/selectors/experiments/presence.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return r
			}));
			var o = n("./src/reddit/constants/experiments.ts"),
				s = n("./src/reddit/helpers/chooseVariant/index.ts");
			const r = e => {
				return Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: o.hf
				}) === o.Rd
			}
		},
		"./src/reddit/selectors/experiments/typingIndicators.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return a
			})), n.d(t, "d", (function() {
				return c
			})), n.d(t, "b", (function() {
				return l
			})), n.d(t, "a", (function() {
				return d
			}));
			var o = n("./src/reddit/constants/experiments.ts"),
				s = n("./src/reddit/helpers/chooseVariant/index.ts"),
				r = n("./src/reddit/selectors/experiments/index.ts"),
				i = n("./src/reddit/selectors/experiments/presence.ts");
			const a = e => {
					if (Object(i.a)(e)) return !1;
					return Object(s.c)(e, {
						experimentEligibilitySelector: r.e,
						experimentName: o.pg
					}) === o.Rd
				},
				c = e => {
					return Object(s.c)(e, {
						experimentEligibilitySelector: r.e,
						experimentName: o.qg
					}) === o.Rd
				},
				l = e => {
					if (Object(i.a)(e)) return !1;
					const t = Object(s.c)(e, {
						experimentEligibilitySelector: r.e,
						experimentName: o.og
					});
					return t === o.hg.TypingIndicators || t === o.hg.IndicatorsPlusCTA
				},
				d = e => {
					if (Object(i.a)(e)) return !1;
					const t = Object(r.d)(e, {
						experimentName: o.og
					});
					return (null == t ? void 0 : t.variant) === o.hg.IndicatorsPlusCTA
				}
		},
		"./src/reddit/selectors/experiments/uxtsIntegration.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return a
			})), n.d(t, "b", (function() {
				return c
			})), n.d(t, "a", (function() {
				return l
			}));
			var o = n("./node_modules/reselect/es/index.js"),
				s = n("./src/reddit/constants/experiments.ts"),
				r = n("./src/reddit/helpers/chooseVariant/index.ts"),
				i = n("./src/reddit/selectors/user.ts");
			const a = e => {
					var t;
					return (null === (t = null == e ? void 0 : e.user.experiments.byName[s.Wc]) || void 0 === t ? void 0 : t.variant) === s.Rd
				},
				c = Object(o.a)(e => Object(r.c)(e, {
					experimentEligibilitySelector: i.S,
					experimentName: s.Xb
				}), e => e === s.gd.BottomSheet),
				l = Object(o.a)(e => Object(r.c)(e, {
					experimentEligibilitySelector: i.S,
					experimentName: s.Xb,
					expEventOverride: !1
				}), e => !!e)
		},
		"./src/reddit/selectors/gild.ts": function(e, t, n) {
			"use strict";
			n.d(t, "d", (function() {
				return o
			})), n.d(t, "b", (function() {
				return s
			})), n.d(t, "f", (function() {
				return r
			})), n.d(t, "g", (function() {
				return i
			})), n.d(t, "c", (function() {
				return a
			})), n.d(t, "e", (function() {
				return c
			})), n.d(t, "a", (function() {
				return l
			}));
			const o = e => e.gild.gildModalThingId,
				s = e => e.gild.correlationId || void 0,
				r = e => e.gild.isAnonymous,
				i = e => e.gild.isIframed,
				a = e => e.gild.message,
				c = e => e.gild.api.pending,
				l = e => e.gild.api.error
		},
		"./src/reddit/selectors/gold/awardIcon.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return p
			})), n.d(t, "b", (function() {
				return m
			})), n.d(t, "a", (function() {
				return h
			})), n.d(t, "e", (function() {
				return b
			})), n.d(t, "d", (function() {
				return f
			}));
			var o = n("./src/lib/objectSelector/index.ts"),
				s = n("./src/reddit/models/Gold/Award.ts"),
				r = n("./src/reddit/selectors/commentSelector.ts"),
				i = n("./src/reddit/selectors/gold/giveAwards.ts"),
				a = n("./src/reddit/selectors/posts.ts"),
				c = n("./src/reddit/selectors/user.ts"),
				l = n("./src/reddit/selectors/userPrefs.ts");
			const d = [32, 48, 64, 128],
				u = (e, t, n) => {
					const o = t ? e[`staticIcon${n}`] : e[`icon${n}`];
					return (null == o ? void 0 : o.url) ? o.url : t ? e.staticIcon.url : e.icon.url
				},
				p = e => {
					let {
						award: t,
						size: n,
						prefersReducedMotion: o,
						postOrComment: r
					} = e;
					return t.awardSubType === s.d.Group ? (e => {
						let {
							award: t,
							size: n,
							prefersReducedMotion: o,
							postOrComment: s
						} = e, r = t;
						if ((null == s ? void 0 : s.awardCountsById) && s.awardCountsById[t.id] && t.tiers) {
							const e = s.awardCountsById[t.id];
							r = t.tiers.reduce((t, n) => e >= n.awardingsRequired ? n : t)
						}
						return u(r, o, n)
					})({
						award: t,
						size: n,
						prefersReducedMotion: o,
						postOrComment: r
					}) : u(t, o, n)
				},
				m = Object(o.a)((e, t) => {
					let {
						awards: n,
						minSize: o,
						postOrCommentId: s
					} = t;
					const i = Object(l.d)(e),
						c = d.find(e => e >= o),
						u = s ? Object(a.F)(e, {
							postId: s
						}) || Object(r.c)(e, {
							commentId: s
						}) : void 0;
					return n.reduce((e, t) => (t && (e[t.id] = p({
						award: t,
						size: c,
						prefersReducedMotion: i,
						postOrComment: u
					})), e), {})
				}),
				h = (e, t) => {
					let {
						award: n,
						minSize: o,
						postOrCommentId: s
					} = t;
					return n ? m(e, {
						awards: [n],
						minSize: o,
						postOrCommentId: s
					})[n.id] : void 0
				},
				b = (e, t) => {
					let {
						minSize: n,
						userName: o
					} = t;
					const s = Object(c.Db)(e, {
						userName: o
					});
					if (s && s.awardedLastMonth && s.awardedLastMonth.topAward) return h(e, {
						award: s.awardedLastMonth.topAward,
						minSize: n
					})
				},
				f = e => {
					const t = Object(i.b)(e),
						n = Object(i.a)(e);
					return h(e, {
						award: t,
						postOrCommentId: n || void 0,
						minSize: 512
					})
				}
		},
		"./src/reddit/selectors/gold/enabledFeatures.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return c
			})), n.d(t, "a", (function() {
				return l
			})), n.d(t, "c", (function() {
				return d
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./node_modules/reselect/es/index.js"),
				s = n("./src/reddit/featureFlags/index.ts"),
				r = n("./src/reddit/selectors/economics.ts"),
				i = n("./src/reddit/selectors/gold/powerups/index.ts"),
				a = n("./src/reddit/selectors/gold/powerups/benefitSettings.ts");
			const c = Object(o.a)(s.d.spEmotes, r.b, i.a, (e, t, n) => {
					if (n) return !0;
					const o = !(!t || !Object.keys(t).length);
					return e && o
				}),
				l = Object(o.a)(r.b, i.b, i.c, i.a, (e, t, n, o) => {
					if (o) return [...t, ...n].slice(0, 3);
					let s = [];
					for (const r of e || [])
						if ((s = [...s, ...Object.values(r.emotes)]).length > 3) break;
					return s.slice(0, 3)
				}),
				d = Object(o.a)(s.d.spGiphy, i.a, a.a, (e, t, n) => !!(e || t && n))
		},
		"./src/reddit/selectors/gold/giveAwards.ts": function(e, t, n) {
			"use strict";
			n.d(t, "b", (function() {
				return o
			})), n.d(t, "a", (function() {
				return s
			}));
			const o = e => e.gild.selectedAward,
				s = e => e.gild.gildedThing
		},
		"./src/reddit/selectors/goldPurchaseModals.ts": function(e, t, n) {
			"use strict";
			n.d(t, "r", (function() {
				return i
			})), n.d(t, "t", (function() {
				return a
			})), n.d(t, "s", (function() {
				return c
			})), n.d(t, "v", (function() {
				return l
			})), n.d(t, "u", (function() {
				return d
			})), n.d(t, "b", (function() {
				return u
			})), n.d(t, "q", (function() {
				return p
			})), n.d(t, "a", (function() {
				return m
			})), n.d(t, "o", (function() {
				return h
			})), n.d(t, "p", (function() {
				return b
			})), n.d(t, "c", (function() {
				return f
			})), n.d(t, "h", (function() {
				return g
			})), n.d(t, "l", (function() {
				return v
			})), n.d(t, "x", (function() {
				return x
			})), n.d(t, "y", (function() {
				return C
			})), n.d(t, "w", (function() {
				return E
			})), n.d(t, "z", (function() {
				return y
			})), n.d(t, "f", (function() {
				return O
			})), n.d(t, "g", (function() {
				return k
			})), n.d(t, "i", (function() {
				return _
			})), n.d(t, "k", (function() {
				return j
			})), n.d(t, "m", (function() {
				return S
			})), n.d(t, "j", (function() {
				return T
			})), n.d(t, "n", (function() {
				return w
			})), n.d(t, "e", (function() {
				return I
			})), n.d(t, "d", (function() {
				return P
			}));
			var o = n("./src/reddit/selectors/gold/purchaseCatalog.ts"),
				s = n("./src/lib/initializeClient/installReducer.ts"),
				r = n("./src/reddit/reducers/features/goldPurchase/index.ts");
			Object(s.a)({
				features: {
					goldPurchase: r.a
				}
			});
			const i = e => e.features.goldPurchase.purchaseModal.activePage,
				a = e => e.features.goldPurchase.purchaseModal.gildThingId || void 0,
				c = e => e.features.goldPurchase.purchaseModal.correlationId || void 0,
				l = e => e.features.goldPurchase.purchaseModal.showModal,
				d = e => e.features.goldPurchase.purchaseModal.packageId,
				u = e => e.features.goldPurchase.packageOfferModal.packageId,
				p = e => e.features.goldPurchase.premiumPurchaseModal.renewInterval,
				m = e => {
					const t = Object(o.i)(e),
						n = (e => e.features.goldPurchase.premiumPurchaseModal.packageId)(e);
					return t.length && n && t.find(e => e.mobileId === n) || null
				},
				h = e => e.features.goldPurchase.premiumPurchaseModal.activePage,
				b = e => e.features.goldPurchase.premiumPurchaseModal.showModal,
				f = e => e.features.goldPurchase.payment.paymentMethod,
				g = e => e.features.goldPurchase.payment.cardName,
				v = e => e.features.goldPurchase.payment.postalCode,
				x = e => e.features.goldPurchase.payment.savedCardsPending,
				C = e => e.features.goldPurchase.payment.savedCards,
				E = e => e.features.goldPurchase.payment.rememberCard,
				y = e => e.features.goldPurchase.payment.useSavedCard,
				O = e => e.features.goldPurchase.payment.cardValidation.cardCvc,
				k = e => e.features.goldPurchase.payment.cardValidation.cardExpiry,
				_ = e => e.features.goldPurchase.payment.cardValidation.cardNumber,
				j = e => e.features.goldPurchase.payment.cardValidation.nameOnCard,
				S = e => e.features.goldPurchase.payment.cardValidation.postalCode,
				T = e => e.features.goldPurchase.payment.stripeToken.errorMessage,
				w = e => e.features.goldPurchase.payment.stripeToken.pending,
				I = e => e.features.goldPurchase.payment.paypal.passthrough,
				P = e => e.features.goldPurchase.payment.paypal.errorMessage
		},
		"./src/reddit/selectors/products.ts": function(e, t, n) {
			"use strict";
			n.d(t, "a", (function() {
				return s
			})), n.d(t, "b", (function() {
				return r
			}));
			n("./node_modules/core-js/modules/web.dom.iterable.js");
			var o = n("./src/reddit/models/Product/index.ts");
			const s = (e, t) => {
					const n = e.products.models[t];
					if (n && n.type === o.a.Badge) return n
				},
				r = (e, t) => {
					let {
						productId: n
					} = t;
					const o = e.products.models[n];
					if (o) {
						const t = o.subredditId,
							s = Object.keys(e.user.ownedBadges[t] || {}),
							r = e.badges.models,
							i = Date.now();
						let a = !1;
						return s.forEach(e => {
							const t = r[e];
							t && t.type === n && t.endsAt > i && (a = !0)
						}), a
					}
					return !1
				}
		},
		"./src/reddit/selectors/userPrefs.ts": function(e, t, n) {
			"use strict";
			n.d(t, "c", (function() {
				return r
			})), n.d(t, "b", (function() {
				return i
			})), n.d(t, "d", (function() {
				return a
			})), n.d(t, "a", (function() {
				return c
			}));
			var o = n("./src/lib/constants/index.ts"),
				s = n("./src/reddit/selectors/user.ts");
			const r = e => {
					const t = Object(s.S)(e);
					if (i(e)) return !1;
					const {
						subscriptionsPinned: n
					} = e.user.prefs;
					return void 0 === n && !t || !!n
				},
				i = e => !(!e.platform.currentPage || !e.platform.currentPage.meta || e.platform.currentPage.meta.name !== o.Sb.MODERATION_PAGES),
				a = e => e.user.prefs.reduceAnimationsFromAwards,
				c = e => !!e.user.prefs.over18
		},
		"./src/reddit/singleton/EventSystem.ts": function(e, t, n) {
			"use strict";
			var o = n("./src/config.ts"),
				s = n("./src/lib/fastdom/index.ts"),
				r = n("./src/reddit/actions/jsApi.ts");
			const i = "JSAPI customEvent.detail.name is deprecated. Please upgrade to <meta>",
				a = "jsapi.consumer",
				c = "/r/redesign/wiki/jsapi";
			var l = n("./src/reddit/constants/jsapiEvents.ts");
			const d = 100;
			const u = new class {
				constructor() {
					if (this.queue = [], this.active = !1, "undefined" == typeof document) return;
					let e;
					this.store = new Promise(t => e = t), this.attachStore = t => e(t);
					const t = document.querySelectorAll(`meta[name="${a}"]`);
					t.length && (t.forEach(e => {
						const t = e.content;
						this.store.then(e => e.dispatch(r.b(t)))
					}), this.store.then(() => this.fireEventsQueue())), document.addEventListener(l.b, e => this.onReadyEvent(e), !0)
				}
				onReadyEvent(e) {
					let t;
					if (this.active = !0, e.target && e.target instanceof HTMLMetaElement && e.target.name === a && (t = e.target.content), !t) try {
						e.detail && (t = e.detail.name, console.warn(i, `${o.a.redditUrl}${c}`, e))
					} catch (n) {
						return void console.error(i, `${o.a.redditUrl}${c}`, n)
					}
					this.store.then(e => {
						e.dispatch(r.b(t || "")), this.fireEventsQueue()
					})
				}
				publish(e, t, n) {
					const o = {
						name: e,
						props: t,
						element: n
					};
					this.queue.push(o), this.queue.length > d && this.queue.shift(), this.active && this.fireEvent(o)
				}
				fireEvent(e) {
					e.element.dispatchEvent(new CustomEvent(e.name, {
						detail: e.props
					}))
				}
				fireEventsQueue() {
					s.a.read(() => {
						for (let e = 0; e < this.queue.length; e++) {
							const t = this.queue[e];
							this.fireEvent(t)
						}
					})
				}
			};
			t.a = u
		},
		"./src/redditGQL/operations/CommentToxicity.json": function(e) {
			e.exports = JSON.parse('{"id":"445164f0825f"}')
		},
		"./src/redditGQL/operations/CreateComment.json": function(e) {
			e.exports = JSON.parse('{"id":"f0b0ca6701b9"}')
		},
		"./src/redditGQL/operations/CreateLiveAudioRoomOnProfile.json": function(e) {
			e.exports = JSON.parse('{"id":"e35a47c6aa21"}')
		},
		"./src/redditGQL/operations/CreateLiveAudioRoomOrError.json": function(e) {
			e.exports = JSON.parse('{"id":"f1f366237119"}')
		},
		"./src/redditGQL/operations/DeleteSubredditMuteSettings.json": function(e) {
			e.exports = JSON.parse('{"id":"c518a45f60a5"}')
		},
		"./src/redditGQL/operations/FetchEligibleUXExperiences.json": function(e) {
			e.exports = JSON.parse('{"id":"388d61b2a794"}')
		},
		"./src/redditGQL/operations/GetAvailableAudioRoomTopics.json": function(e) {
			e.exports = JSON.parse('{"id":"05271fef4b69"}')
		},
		"./src/redditGQL/operations/GetSubredditAllowedPostTypes.json": function(e) {
			e.exports = JSON.parse('{"id":"f65cf1eba776"}')
		},
		"./src/redditGQL/operations/GetUserProfileAllowedPostTypes.json": function(e) {
			e.exports = JSON.parse('{"id":"34fa0ef8e099"}')
		},
		"./src/redditGQL/operations/LanguageSelections.json": function(e) {
			e.exports = JSON.parse('{"id":"40df26b7117b"}')
		},
		"./src/redditGQL/operations/MutedSubreddits.json": function(e) {
			e.exports = JSON.parse('{"id":"c09ff0d041c1"}')
		},
		"./src/redditGQL/operations/PostGuidanceValidation.json": function(e) {
			e.exports = JSON.parse('{"id":"f61154c007f1"}')
		},
		"./src/redditGQL/operations/PrepareLiveAudioRoom.json": function(e) {
			e.exports = JSON.parse('{"id":"a04297924fc8"}')
		},
		"./src/redditGQL/operations/PrepareLiveAudioRoomOnProfile.json": function(e) {
			e.exports = JSON.parse('{"id":"649e9f8bd6d9"}')
		},
		"./src/redditGQL/operations/ReportTalk.json": function(e) {
			e.exports = JSON.parse('{"id":"139ca5b89cf9"}')
		},
		"./src/redditGQL/operations/StartLiveAudioRoom.json": function(e) {
			e.exports = JSON.parse('{"id":"6e7ab4bd4873"}')
		},
		"./src/redditGQL/operations/StoreUxTargetingAction.json": function(e) {
			e.exports = JSON.parse('{"id":"e734e21836ec"}')
		},
		"./src/redditGQL/operations/SubredditTypeaheadSearch.json": function(e) {
			e.exports = JSON.parse('{"id":"20edc5ee12df"}')
		},
		"./src/redditGQL/operations/UpdateComment.json": function(e) {
			e.exports = JSON.parse('{"id":"3d83ef4f0375"}')
		},
		"./src/redditGQL/operations/UpdateCommentFollowState.json": function(e) {
			e.exports = JSON.parse('{"id":"0a2ed51664c5"}')
		},
		"./src/redditGQL/operations/UpdateSpokenLanguagesPreference.json": function(e) {
			e.exports = JSON.parse('{"id":"6d0707c83164"}')
		},
		"./src/redditGQL/operations/UpdateSubredditMuteAndNotificationLevelSettings.json": function(e) {
			e.exports = JSON.parse('{"id":"2620d72fd633"}')
		},
		"./src/redditGQL/operations/UpdateSubredditMuteSettings.json": function(e) {
			e.exports = JSON.parse('{"id":"432f6b475ece"}')
		}
	}
]);
//# sourceMappingURL=https://www.redditstatic.com/desktop2x/PostCreation.09dc613acf2cebc3ddc9.js.map