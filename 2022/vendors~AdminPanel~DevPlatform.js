// https://www.redditstatic.com/desktop2x/vendors~AdminPanel~DevPlatform.ee8083200593ff747afb.js
// Retrieved at 8/22/2022, 4:50:10 PM by Reddit Dataminer v1.0.0
(window.__LOADABLE_LOADED_CHUNKS__ = window.__LOADABLE_LOADED_CHUNKS__ || []).push([
	["vendors~AdminPanel~DevPlatform"], {
		"./node_modules/@devvit/protos/index.js": function(e, t, o) {
			"use strict";
			o.d(t, "c", (function() {
				return I.a
			})), o.d(t, "e", (function() {
				return D
			})), o.d(t, "d", (function() {
				return _
			})), o.d(t, "f", (function() {
				return C
			})), o.d(t, "B", (function() {
				return A.b
			})), o.d(t, "K", (function() {
				return P.a
			})), o.d(t, "E", (function() {
				return U
			})), o.d(t, "H", (function() {
				return W
			})), o.d(t, "h", (function() {
				return Pt
			})), o.d(t, "b", (function() {
				return jt
			})), o.d(t, "l", (function() {
				return Zt.a
			})), o.d(t, "n", (function() {
				return Zt.b
			})), o.d(t, "s", (function() {
				return Yt
			})), o.d(t, "p", (function() {
				return Qt
			})), o.d(t, "q", (function() {
				return eo
			})), o.d(t, "r", (function() {
				return to
			})), o.d(t, "o", (function() {
				return oo
			})), o.d(t, "y", (function() {
				return ro
			})), o.d(t, "u", (function() {
				return ao
			})), o.d(t, "t", (function() {
				return lo
			})), o.d(t, "m", (function() {
				return So
			})), o.d(t, "v", (function() {
				return Yo
			})), o.d(t, "w", (function() {
				return Xo
			})), o.d(t, "z", (function() {
				return Qo
			})), o.d(t, "A", (function() {
				return ar
			})), o.d(t, "C", (function() {
				return dr
			})), o.d(t, "F", (function() {
				return ur
			})), o.d(t, "G", (function() {
				return pr
			})), o.d(t, "x", (function() {
				return gr.a
			})), o.d(t, "I", (function() {
				return gr.b
			})), o.d(t, "a", (function() {
				return yr
			})), o.d(t, "i", (function() {
				return Tr
			})), o.d(t, "D", (function() {
				return Rr
			})), o.d(t, "N", (function() {
				return Er
			})), o.d(t, "L", (function() {
				return Ar
			})), o.d(t, "J", (function() {
				return Sr
			})), o.d(t, "k", (function() {
				return $r
			})), o.d(t, "j", (function() {
				return d.a
			})), o.d(t, "M", (function() {
				return re.a
			})), o.d(t, "g", (function() {
				return Dr
			}));
			var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
				r = o("./node_modules/long/src/long.js"),
				n = o.n(r),
				a = o("./node_modules/protobufjs/minimal.js"),
				s = o.n(a),
				d = o("./node_modules/@devvit/protos/types/google/protobuf/empty.js");
			const l = {
				$type: "devvit.actor.bot.CommandDescription",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.name && t.uint32(10).string(e.name), "" !== e.command && t.uint32(18).string(e.command), "" !== e.description && t.uint32(26).string(e.description), "" !== e.usage && t.uint32(34).string(e.usage), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.bot.CommandDescription",
						name: "",
						command: "",
						description: "",
						usage: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.name = o.string();
								break;
							case 2:
								r.command = o.string();
								break;
							case 3:
								r.description = o.string();
								break;
							case 4:
								r.usage = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: l.$type,
					name: v(e.name) ? String(e.name) : "",
					command: v(e.command) ? String(e.command) : "",
					description: v(e.description) ? String(e.description) : "",
					usage: v(e.usage) ? String(e.usage) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.name && (t.name = e.name), void 0 !== e.command && (t.command = e.command), void 0 !== e.description && (t.description = e.description), void 0 !== e.usage && (t.usage = e.usage), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.actor.bot.CommandDescription",
						name: "",
						command: "",
						description: "",
						usage: ""
					};
					return n.name = null !== (t = e.name) && void 0 !== t ? t : "", n.command = null !== (o = e.command) && void 0 !== o ? o : "", n.description = null !== (i = e.description) && void 0 !== i ? i : "", n.usage = null !== (r = e.usage) && void 0 !== r ? r : "", n
				}
			};
			i.a.set(l.$type, l);
			const u = {
				$type: "devvit.actor.bot.CommandsList",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.commands) l.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.bot.CommandsList",
						commands: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.commands.push(l.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: u.$type,
					commands: Array.isArray(null == e ? void 0 : e.commands) ? e.commands.map(e => l.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.commands ? t.commands = e.commands.map(e => e ? l.toJSON(e) : void 0) : t.commands = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.bot.CommandsList",
						commands: []
					};
					return o.commands = (null === (t = e.commands) || void 0 === t ? void 0 : t.map(e => l.fromPartial(e))) || [], o
				}
			};
			i.a.set(u.$type, u);
			const c = {
				$type: "devvit.actor.bot.CommandContext",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.user && t.uint32(10).string(e.user), "" !== e.subreddit && t.uint32(18).string(e.subreddit), "" !== e.post && t.uint32(26).string(e.post), "" !== e.comment && t.uint32(34).string(e.comment), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.bot.CommandContext",
						user: "",
						subreddit: "",
						post: "",
						comment: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.user = o.string();
								break;
							case 2:
								r.subreddit = o.string();
								break;
							case 3:
								r.post = o.string();
								break;
							case 4:
								r.comment = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: c.$type,
					user: v(e.user) ? String(e.user) : "",
					subreddit: v(e.subreddit) ? String(e.subreddit) : "",
					post: v(e.post) ? String(e.post) : "",
					comment: v(e.comment) ? String(e.comment) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.user && (t.user = e.user), void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.post && (t.post = e.post), void 0 !== e.comment && (t.comment = e.comment), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.actor.bot.CommandContext",
						user: "",
						subreddit: "",
						post: "",
						comment: ""
					};
					return n.user = null !== (t = e.user) && void 0 !== t ? t : "", n.subreddit = null !== (o = e.subreddit) && void 0 !== o ? o : "", n.post = null !== (i = e.post) && void 0 !== i ? i : "", n.comment = null !== (r = e.comment) && void 0 !== r ? r : "", n
				}
			};
			i.a.set(c.$type, c);
			const p = {
				$type: "devvit.actor.bot.CommandRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.context && c.encode(e.context, t.uint32(10).fork()).ldelim(), "" !== e.command && t.uint32(18).string(e.command), "" !== e.args && t.uint32(26).string(e.args), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.bot.CommandRequest",
						context: void 0,
						command: "",
						args: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.context = c.decode(o, o.uint32());
								break;
							case 2:
								r.command = o.string();
								break;
							case 3:
								r.args = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: p.$type,
					context: v(e.context) ? c.fromJSON(e.context) : void 0,
					command: v(e.command) ? String(e.command) : "",
					args: v(e.args) ? String(e.args) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.context && (t.context = e.context ? c.toJSON(e.context) : void 0), void 0 !== e.command && (t.command = e.command), void 0 !== e.args && (t.args = e.args), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.bot.CommandRequest",
						context: void 0,
						command: "",
						args: ""
					};
					return i.context = void 0 !== e.context && null !== e.context ? c.fromPartial(e.context) : void 0, i.command = null !== (t = e.command) && void 0 !== t ? t : "", i.args = null !== (o = e.args) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(p.$type, p);
			d.a, d.a;

			function v(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const m = {
				$type: "devvit.actor.gl.ConfigMessage",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.width && t.uint32(8).int32(e.width), 0 !== e.height && t.uint32(16).int32(e.height), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.gl.ConfigMessage",
						width: 0,
						height: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.width = o.int32();
								break;
							case 2:
								r.height = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: m.$type,
					width: h(e.width) ? Number(e.width) : 0,
					height: h(e.height) ? Number(e.height) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.width && (t.width = Math.round(e.width)), void 0 !== e.height && (t.height = Math.round(e.height)), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.gl.ConfigMessage",
						width: 0,
						height: 0
					};
					return i.width = null !== (t = e.width) && void 0 !== t ? t : 0, i.height = null !== (o = e.height) && void 0 !== o ? o : 0, i
				}
			};
			i.a.set(m.$type, m);
			const f = {
				$type: "devvit.actor.gl.TickMessage",
				encode(e) {
					return arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create()
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.gl.TickMessage"
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						o.skipType(7 & e)
					}
					return r
				},
				fromJSON: e => ({
					$type: f.$type
				}),
				toJSON: e => ({}),
				fromPartial: e => ({
					$type: "devvit.actor.gl.TickMessage"
				})
			};
			i.a.set(f.$type, f);
			const g = {
				$type: "devvit.actor.gl.InputMessage",
				encode(e) {
					return arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create()
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.gl.InputMessage"
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						o.skipType(7 & e)
					}
					return r
				},
				fromJSON: e => ({
					$type: g.$type
				}),
				toJSON: e => ({}),
				fromPartial: e => ({
					$type: "devvit.actor.gl.InputMessage"
				})
			};
			i.a.set(g.$type, g);
			d.a, d.a, d.a;

			function h(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const y = {
				$type: "devvit.actor.hello.PingMessage",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.message && t.uint32(10).string(e.message), 0 !== e.delayMillis && t.uint32(16).int32(e.delayMillis), 0 !== e.successProbability && t.uint32(29).float(e.successProbability), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.hello.PingMessage",
						message: "",
						delayMillis: 0,
						successProbability: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.message = o.string();
								break;
							case 2:
								r.delayMillis = o.int32();
								break;
							case 3:
								r.successProbability = o.float();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: y.$type,
					message: b(e.message) ? String(e.message) : "",
					delayMillis: b(e.delayMillis) ? Number(e.delayMillis) : 0,
					successProbability: b(e.successProbability) ? Number(e.successProbability) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.message && (t.message = e.message), void 0 !== e.delayMillis && (t.delayMillis = Math.round(e.delayMillis)), void 0 !== e.successProbability && (t.successProbability = e.successProbability), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.actor.hello.PingMessage",
						message: "",
						delayMillis: 0,
						successProbability: 0
					};
					return r.message = null !== (t = e.message) && void 0 !== t ? t : "", r.delayMillis = null !== (o = e.delayMillis) && void 0 !== o ? o : 0, r.successProbability = null !== (i = e.successProbability) && void 0 !== i ? i : 0, r
				}
			};
			i.a.set(y.$type, y);

			function b(e) {
				return null != e
			}
			var k;

			function S(e) {
				switch (e) {
					case 0:
					case "SYSTEM":
						return k.SYSTEM;
					case 1:
					case "HTTP":
						return k.HTTP;
					case -1:
					case "UNRECOGNIZED":
					default:
						return k.UNRECOGNIZED
				}
			}

			function w(e) {
				switch (e) {
					case k.SYSTEM:
						return "SYSTEM";
					case k.HTTP:
						return "HTTP";
					default:
						return "UNKNOWN"
				}
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.SYSTEM = 0] = "SYSTEM", e[e.HTTP = 1] = "HTTP", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(k || (k = {}));
			const O = {
				$type: "devvit.actor.permissions.NestedRule",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.requires) T.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.permissions.NestedRule",
						requires: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.requires.push(T.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: O.$type,
					requires: Array.isArray(null == e ? void 0 : e.requires) ? e.requires.map(e => T.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.requires ? t.requires = e.requires.map(e => e ? T.toJSON(e) : void 0) : t.requires = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.permissions.NestedRule",
						requires: []
					};
					return o.requires = (null === (t = e.requires) || void 0 === t ? void 0 : t.map(e => T.fromPartial(e))) || [], o
				}
			};
			i.a.set(O.$type, O);
			const T = {
				$type: "devvit.actor.permissions.PermissionOrRule",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.permission && t.uint32(8).int32(e.permission), void 0 !== e.and && O.encode(e.and, t.uint32(18).fork()).ldelim(), void 0 !== e.or && O.encode(e.or, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.permissions.PermissionOrRule",
						permission: void 0,
						and: void 0,
						or: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.permission = o.int32();
								break;
							case 2:
								r.and = O.decode(o, o.uint32());
								break;
							case 3:
								r.or = O.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: T.$type,
					permission: $(e.permission) ? S(e.permission) : void 0,
					and: $(e.and) ? O.fromJSON(e.and) : void 0,
					or: $(e.or) ? O.fromJSON(e.or) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.permission && (t.permission = void 0 !== e.permission ? w(e.permission) : void 0), void 0 !== e.and && (t.and = e.and ? O.toJSON(e.and) : void 0), void 0 !== e.or && (t.or = e.or ? O.toJSON(e.or) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.permissions.PermissionOrRule",
						permission: void 0,
						and: void 0,
						or: void 0
					};
					return o.permission = null !== (t = e.permission) && void 0 !== t ? t : void 0, o.and = void 0 !== e.and && null !== e.and ? O.fromPartial(e.and) : void 0, o.or = void 0 !== e.or && null !== e.or ? O.fromPartial(e.or) : void 0, o
				}
			};
			i.a.set(T.$type, T);
			const N = {
				$type: "devvit.actor.permissions.PermissionConfig",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.actor && t.uint32(10).string(e.actor), t.uint32(18).fork();
					for (const o of e.has) t.int32(o);
					t.ldelim();
					for (const o of e.requires) T.encode(o, t.uint32(26).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.permissions.PermissionConfig",
						actor: "",
						has: [],
						requires: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actor = o.string();
								break;
							case 2:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.has.push(o.int32())
								} else r.has.push(o.int32());
								break;
							case 3:
								r.requires.push(T.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: N.$type,
					actor: $(e.actor) ? String(e.actor) : "",
					has: Array.isArray(null == e ? void 0 : e.has) ? e.has.map(e => S(e)) : [],
					requires: Array.isArray(null == e ? void 0 : e.requires) ? e.requires.map(e => T.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actor && (t.actor = e.actor), e.has ? t.has = e.has.map(e => w(e)) : t.has = [], e.requires ? t.requires = e.requires.map(e => e ? T.toJSON(e) : void 0) : t.requires = [], t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.actor.permissions.PermissionConfig",
						actor: "",
						has: [],
						requires: []
					};
					return r.actor = null !== (t = e.actor) && void 0 !== t ? t : "", r.has = (null === (o = e.has) || void 0 === o ? void 0 : o.map(e => e)) || [], r.requires = (null === (i = e.requires) || void 0 === i ? void 0 : i.map(e => T.fromPartial(e))) || [], r
				}
			};
			i.a.set(N.$type, N);
			const R = {
				$type: "devvit.actor.permissions.PermissionList",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.permissions) N.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.permissions.PermissionList",
						permissions: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.permissions.push(N.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: R.$type,
					permissions: Array.isArray(null == e ? void 0 : e.permissions) ? e.permissions.map(e => N.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.permissions ? t.permissions = e.permissions.map(e => e ? N.toJSON(e) : void 0) : t.permissions = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.permissions.PermissionList",
						permissions: []
					};
					return o.permissions = (null === (t = e.permissions) || void 0 === t ? void 0 : t.map(e => N.fromPartial(e))) || [], o
				}
			};

			function $(e) {
				return null != e
			}
			i.a.set(R.$type, R), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var C, I = o("./node_modules/@devvit/protos/types/devvit/actor/reddit/comment.js");

			function E(e) {
				switch (e) {
					case 0:
					case "POST":
						return C.POST;
					case 1:
					case "COMMENT":
						return C.COMMENT;
					case 2:
					case "SUBREDDIT":
						return C.SUBREDDIT;
					case -1:
					case "UNRECOGNIZED":
					default:
						return C.UNRECOGNIZED
				}
			}! function(e) {
				e[e.POST = 0] = "POST", e[e.COMMENT = 1] = "COMMENT", e[e.SUBREDDIT = 2] = "SUBREDDIT", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(C || (C = {})), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var A = o("./node_modules/@devvit/protos/types/devvit/actor/reddit/post.js"),
				P = o("./node_modules/@devvit/protos/types/devvit/actor/reddit/subreddit.js");
			const x = {
				$type: "devvit.actor.reddit.ContextActionAllowedContexts",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.post && t.uint32(8).bool(e.post), !0 === e.comment && t.uint32(16).bool(e.comment), !0 === e.subreddit && t.uint32(24).bool(e.subreddit), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.ContextActionAllowedContexts",
						post: !1,
						comment: !1,
						subreddit: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.post = o.bool();
								break;
							case 2:
								r.comment = o.bool();
								break;
							case 3:
								r.subreddit = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: x.$type,
					post: !!B(e.post) && Boolean(e.post),
					comment: !!B(e.comment) && Boolean(e.comment),
					subreddit: !!B(e.subreddit) && Boolean(e.subreddit)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.post && (t.post = e.post), void 0 !== e.comment && (t.comment = e.comment), void 0 !== e.subreddit && (t.subreddit = e.subreddit), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.actor.reddit.ContextActionAllowedContexts",
						post: !1,
						comment: !1,
						subreddit: !1
					};
					return r.post = null !== (t = e.post) && void 0 !== t && t, r.comment = null !== (o = e.comment) && void 0 !== o && o, r.subreddit = null !== (i = e.subreddit) && void 0 !== i && i, r
				}
			};
			i.a.set(x.$type, x);
			const F = {
				$type: "devvit.actor.reddit.ContextActionAllowedUsers",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.moderator && t.uint32(8).bool(e.moderator), !0 === e.member && t.uint32(16).bool(e.member), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.ContextActionAllowedUsers",
						moderator: !1,
						member: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.moderator = o.bool();
								break;
							case 2:
								r.member = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: F.$type,
					moderator: !!B(e.moderator) && Boolean(e.moderator),
					member: !!B(e.member) && Boolean(e.member)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.moderator && (t.moderator = e.moderator), void 0 !== e.member && (t.member = e.member), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.reddit.ContextActionAllowedUsers",
						moderator: !1,
						member: !1
					};
					return i.moderator = null !== (t = e.moderator) && void 0 !== t && t, i.member = null !== (o = e.member) && void 0 !== o && o, i
				}
			};
			i.a.set(F.$type, F);
			const j = {
				$type: "devvit.actor.reddit.ContextActionDescription",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.actionId && t.uint32(10).string(e.actionId), "" !== e.name && t.uint32(18).string(e.name), "" !== e.description && t.uint32(26).string(e.description), void 0 !== e.contexts && x.encode(e.contexts, t.uint32(34).fork()).ldelim(), void 0 !== e.users && F.encode(e.users, t.uint32(42).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.ContextActionDescription",
						actionId: "",
						name: "",
						description: "",
						contexts: void 0,
						users: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actionId = o.string();
								break;
							case 2:
								r.name = o.string();
								break;
							case 3:
								r.description = o.string();
								break;
							case 4:
								r.contexts = x.decode(o, o.uint32());
								break;
							case 5:
								r.users = F.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: j.$type,
					actionId: B(e.actionId) ? String(e.actionId) : "",
					name: B(e.name) ? String(e.name) : "",
					description: B(e.description) ? String(e.description) : "",
					contexts: B(e.contexts) ? x.fromJSON(e.contexts) : void 0,
					users: B(e.users) ? F.fromJSON(e.users) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actionId && (t.actionId = e.actionId), void 0 !== e.name && (t.name = e.name), void 0 !== e.description && (t.description = e.description), void 0 !== e.contexts && (t.contexts = e.contexts ? x.toJSON(e.contexts) : void 0), void 0 !== e.users && (t.users = e.users ? F.toJSON(e.users) : void 0), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.actor.reddit.ContextActionDescription",
						actionId: "",
						name: "",
						description: "",
						contexts: void 0,
						users: void 0
					};
					return r.actionId = null !== (t = e.actionId) && void 0 !== t ? t : "", r.name = null !== (o = e.name) && void 0 !== o ? o : "", r.description = null !== (i = e.description) && void 0 !== i ? i : "", r.contexts = void 0 !== e.contexts && null !== e.contexts ? x.fromPartial(e.contexts) : void 0, r.users = void 0 !== e.users && null !== e.users ? F.fromPartial(e.users) : void 0, r
				}
			};
			i.a.set(j.$type, j);
			const M = {
				$type: "devvit.actor.reddit.ContextActionList",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.actions) j.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.ContextActionList",
						actions: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actions.push(j.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: M.$type,
					actions: Array.isArray(null == e ? void 0 : e.actions) ? e.actions.map(e => j.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.actions ? t.actions = e.actions.map(e => e ? j.toJSON(e) : void 0) : t.actions = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.reddit.ContextActionList",
						actions: []
					};
					return o.actions = (null === (t = e.actions) || void 0 === t ? void 0 : t.map(e => j.fromPartial(e))) || [], o
				}
			};
			i.a.set(M.$type, M);
			const D = {
				$type: "devvit.actor.reddit.ContextActionRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.context && t.uint32(8).int32(e.context), void 0 !== e.post && A.b.encode(e.post, t.uint32(18).fork()).ldelim(), void 0 !== e.comment && I.a.encode(e.comment, t.uint32(26).fork()).ldelim(), void 0 !== e.subreddit && P.a.encode(e.subreddit, t.uint32(34).fork()).ldelim(), "" !== e.actionId && t.uint32(42).string(e.actionId), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.ContextActionRequest",
						context: 0,
						post: void 0,
						comment: void 0,
						subreddit: void 0,
						actionId: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.context = o.int32();
								break;
							case 2:
								r.post = A.b.decode(o, o.uint32());
								break;
							case 3:
								r.comment = I.a.decode(o, o.uint32());
								break;
							case 4:
								r.subreddit = P.a.decode(o, o.uint32());
								break;
							case 5:
								r.actionId = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: D.$type,
					context: B(e.context) ? E(e.context) : 0,
					post: B(e.post) ? A.b.fromJSON(e.post) : void 0,
					comment: B(e.comment) ? I.a.fromJSON(e.comment) : void 0,
					subreddit: B(e.subreddit) ? P.a.fromJSON(e.subreddit) : void 0,
					actionId: B(e.actionId) ? String(e.actionId) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.context && (t.context = function(e) {
						switch (e) {
							case C.POST:
								return "POST";
							case C.COMMENT:
								return "COMMENT";
							case C.SUBREDDIT:
								return "SUBREDDIT";
							default:
								return "UNKNOWN"
						}
					}(e.context)), void 0 !== e.post && (t.post = e.post ? A.b.toJSON(e.post) : void 0), void 0 !== e.comment && (t.comment = e.comment ? I.a.toJSON(e.comment) : void 0), void 0 !== e.subreddit && (t.subreddit = e.subreddit ? P.a.toJSON(e.subreddit) : void 0), void 0 !== e.actionId && (t.actionId = e.actionId), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.reddit.ContextActionRequest",
						context: 0,
						post: void 0,
						comment: void 0,
						subreddit: void 0,
						actionId: ""
					};
					return i.context = null !== (t = e.context) && void 0 !== t ? t : 0, i.post = void 0 !== e.post && null !== e.post ? A.b.fromPartial(e.post) : void 0, i.comment = void 0 !== e.comment && null !== e.comment ? I.a.fromPartial(e.comment) : void 0, i.subreddit = void 0 !== e.subreddit && null !== e.subreddit ? P.a.fromPartial(e.subreddit) : void 0, i.actionId = null !== (o = e.actionId) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(D.$type, D);
			const J = {
				$type: "devvit.actor.reddit.ContextActionResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.success && t.uint32(8).bool(e.success), "" !== e.message && t.uint32(18).string(e.message), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.ContextActionResponse",
						success: !1,
						message: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.success = o.bool();
								break;
							case 2:
								r.message = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: J.$type,
					success: !!B(e.success) && Boolean(e.success),
					message: B(e.message) ? String(e.message) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.success && (t.success = e.success), void 0 !== e.message && (t.message = e.message), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.reddit.ContextActionResponse",
						success: !1,
						message: ""
					};
					return i.success = null !== (t = e.success) && void 0 !== t && t, i.message = null !== (o = e.message) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(J.$type, J);
			const _ = {
				name: "ContextAction",
				fullName: "devvit.actor.reddit.ContextAction",
				methods: {
					getActions: {
						name: "GetActions",
						requestType: d.a,
						requestStream: !1,
						responseType: M,
						responseStream: !1,
						options: {}
					},
					onAction: {
						name: "OnAction",
						requestType: D,
						requestStream: !1,
						responseType: J,
						responseStream: !1,
						options: {}
					}
				}
			};

			function B(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const V = {
				$type: "devvit.actor.reddit.Response",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.accepted && t.uint32(8).bool(e.accepted), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.reddit.Response",
						accepted: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.accepted = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: V.$type,
						accepted: (t = e.accepted, null != t && Boolean(e.accepted))
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.accepted && (t.accepted = e.accepted), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.reddit.Response",
						accepted: !1
					};
					return o.accepted = null !== (t = e.accepted) && void 0 !== t && t, o
				}
			};
			i.a.set(V.$type, V);
			A.b;
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var L = o("./node_modules/@devvit/protos/types/google/protobuf/struct.js");
			const U = {
				$type: "devvit.actor.scheduler.ScheduledAction",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.type && t.uint32(10).string(e.type), void 0 !== e.data && L.b.encode(L.b.wrap(e.data), t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.scheduler.ScheduledAction",
						type: "",
						data: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.type = o.string();
								break;
							case 2:
								r.data = L.b.unwrap(L.b.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: U.$type,
						type: (t = e.type, null != t ? String(e.type) : ""),
						data: q(e.data) ? e.data : void 0
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.type && (t.type = e.type), void 0 !== e.data && (t.data = e.data), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.scheduler.ScheduledAction",
						type: "",
						data: void 0
					};
					return i.type = null !== (t = e.type) && void 0 !== t ? t : "", i.data = null !== (o = e.data) && void 0 !== o ? o : void 0, i
				}
			};

			function q(e) {
				return "object" == typeof e && null !== e
			}
			i.a.set(U.$type, U), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const W = {
				name: "SchedulerHandler",
				fullName: "devvit.actor.scheduler.SchedulerHandler",
				methods: {
					handleScheduledAction: {
						name: "HandleScheduledAction",
						requestType: U,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			o("./node_modules/@devvit/protos/node_modules/rxjs/dist/esm5/internal/operators/map.js");
			const G = {
				$type: "devvit.actor.test.TestMessage",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.number && t.uint32(8).int32(e.number), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.test.TestMessage",
						number: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.number = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: G.$type,
						number: (t = e.number, null != t ? Number(e.number) : 0)
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.number && (t.number = Math.round(e.number)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.test.TestMessage",
						number: 0
					};
					return o.number = null !== (t = e.number) && void 0 !== t ? t : 0, o
				}
			};
			i.a.set(G.$type, G);
			var H;

			function z(e) {
				switch (e) {
					case 0:
					case "STRING":
						return H.STRING;
					case 1:
					case "PARAGRAPH":
						return H.PARAGRAPH;
					case 2:
					case "NUMBER":
						return H.NUMBER;
					case 3:
					case "BOOLEAN":
						return H.BOOLEAN;
					case -1:
					case "UNRECOGNIZED":
					default:
						return H.UNRECOGNIZED
				}
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.STRING = 0] = "STRING", e[e.PARAGRAPH = 1] = "PARAGRAPH", e[e.NUMBER = 2] = "NUMBER", e[e.BOOLEAN = 3] = "BOOLEAN", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(H || (H = {}));
			const Y = {
				$type: "devvit.actor.user_configurable.ConfigForm",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.fields) Z.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.user_configurable.ConfigForm",
						fields: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.fields.push(Z.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Y.$type,
					fields: Array.isArray(null == e ? void 0 : e.fields) ? e.fields.map(e => Z.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.fields ? t.fields = e.fields.map(e => e ? Z.toJSON(e) : void 0) : t.fields = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.actor.user_configurable.ConfigForm",
						fields: []
					};
					return o.fields = (null === (t = e.fields) || void 0 === t ? void 0 : t.map(e => Z.fromPartial(e))) || [], o
				}
			};
			i.a.set(Y.$type, Y);
			const Z = {
				$type: "devvit.actor.user_configurable.ConfigField",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.fieldType && t.uint32(8).int32(e.fieldType), "" !== e.key && t.uint32(18).string(e.key), "" !== e.prompt && t.uint32(26).string(e.prompt), "" !== e.response && t.uint32(34).string(e.response), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.user_configurable.ConfigField",
						fieldType: 0,
						key: "",
						prompt: "",
						response: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.fieldType = o.int32();
								break;
							case 2:
								r.key = o.string();
								break;
							case 3:
								r.prompt = o.string();
								break;
							case 4:
								r.response = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Z.$type,
					fieldType: K(e.fieldType) ? z(e.fieldType) : 0,
					key: K(e.key) ? String(e.key) : "",
					prompt: K(e.prompt) ? String(e.prompt) : "",
					response: K(e.response) ? String(e.response) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.fieldType && (t.fieldType = function(e) {
						switch (e) {
							case H.STRING:
								return "STRING";
							case H.PARAGRAPH:
								return "PARAGRAPH";
							case H.NUMBER:
								return "NUMBER";
							case H.BOOLEAN:
								return "BOOLEAN";
							default:
								return "UNKNOWN"
						}
					}(e.fieldType)), void 0 !== e.key && (t.key = e.key), void 0 !== e.prompt && (t.prompt = e.prompt), void 0 !== e.response && (t.response = e.response), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.actor.user_configurable.ConfigField",
						fieldType: 0,
						key: "",
						prompt: "",
						response: ""
					};
					return n.fieldType = null !== (t = e.fieldType) && void 0 !== t ? t : 0, n.key = null !== (o = e.key) && void 0 !== o ? o : "", n.prompt = null !== (i = e.prompt) && void 0 !== i ? i : "", n.response = null !== (r = e.response) && void 0 !== r ? r : "", n
				}
			};
			i.a.set(Z.$type, Z);
			const X = {
				$type: "devvit.actor.user_configurable.FormResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					!0 === e.success && t.uint32(8).bool(e.success);
					for (const o of e.messages) t.uint32(18).string(o);
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.actor.user_configurable.FormResponse",
						success: !1,
						messages: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.success = o.bool();
								break;
							case 2:
								r.messages.push(o.string());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: X.$type,
					success: !!K(e.success) && Boolean(e.success),
					messages: Array.isArray(null == e ? void 0 : e.messages) ? e.messages.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.success && (t.success = e.success), e.messages ? t.messages = e.messages.map(e => e) : t.messages = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.actor.user_configurable.FormResponse",
						success: !1,
						messages: []
					};
					return i.success = null !== (t = e.success) && void 0 !== t && t, i.messages = (null === (o = e.messages) || void 0 === o ? void 0 : o.map(e => e)) || [], i
				}
			};
			i.a.set(X.$type, X);
			d.a;

			function K(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Q = {
				$type: "devvit.dev_portal.actor.ActorTypeInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), "" !== e.name && t.uint32(18).string(e.name), !0 === e.isEnabled && t.uint32(24).bool(e.isEnabled), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.actor.ActorTypeInfo",
						id: "",
						name: "",
						isEnabled: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.name = o.string();
								break;
							case 3:
								r.isEnabled = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Q.$type,
					id: ee(e.id) ? String(e.id) : "",
					name: ee(e.name) ? String(e.name) : "",
					isEnabled: !!ee(e.isEnabled) && Boolean(e.isEnabled)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.name && (t.name = e.name), void 0 !== e.isEnabled && (t.isEnabled = e.isEnabled), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.dev_portal.actor.ActorTypeInfo",
						id: "",
						name: "",
						isEnabled: !1
					};
					return r.id = null !== (t = e.id) && void 0 !== t ? t : "", r.name = null !== (o = e.name) && void 0 !== o ? o : "", r.isEnabled = null !== (i = e.isEnabled) && void 0 !== i && i, r
				}
			};

			function ee(e) {
				return null != e
			}
			i.a.set(Q.$type, Q), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var te, oe, ie, re = o("./node_modules/@devvit/protos/types/google/protobuf/timestamp.js"),
				ne = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js");

			function ae(e) {
				switch (e) {
					case 0:
					case "PUBLIC":
						return te.PUBLIC;
					case 1:
					case "PRIVATE":
						return te.PRIVATE;
					case 2:
					case "UNPUBLISHED":
						return te.UNPUBLISHED;
					case -1:
					case "UNRECOGNIZED":
					default:
						return te.UNRECOGNIZED
				}
			}

			function se(e) {
				switch (e) {
					case te.PUBLIC:
						return "PUBLIC";
					case te.PRIVATE:
						return "PRIVATE";
					case te.UNPUBLISHED:
						return "UNPUBLISHED";
					default:
						return "UNKNOWN"
				}
			}

			function de(e) {
				switch (e) {
					case 0:
					case "BUILDING":
						return oe.BUILDING;
					case 1:
					case "READY":
						return oe.READY;
					case 2:
					case "FAILED":
						return oe.FAILED;
					case -1:
					case "UNRECOGNIZED":
					default:
						return oe.UNRECOGNIZED
				}
			}

			function le(e) {
				switch (e) {
					case 0:
					case "USER":
						return ie.USER;
					case 1:
					case "SUBREDDIT":
						return ie.SUBREDDIT;
					case -1:
					case "UNRECOGNIZED":
					default:
						return ie.UNRECOGNIZED
				}
			}

			function ue(e) {
				switch (e) {
					case ie.USER:
						return "USER";
					case ie.SUBREDDIT:
						return "SUBREDDIT";
					default:
						return "UNKNOWN"
				}
			}! function(e) {
				e[e.PUBLIC = 0] = "PUBLIC", e[e.PRIVATE = 1] = "PRIVATE", e[e.UNPUBLISHED = 2] = "UNPUBLISHED", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(te || (te = {})),
			function(e) {
				e[e.BUILDING = 0] = "BUILDING", e[e.READY = 1] = "READY", e[e.FAILED = 2] = "FAILED", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(oe || (oe = {})),
			function(e) {
				e[e.USER = 0] = "USER", e[e.SUBREDDIT = 1] = "SUBREDDIT", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(ie || (ie = {}));
			const ce = {
				$type: "devvit.dev_portal.app_version.info.OptionalVersionVisibility",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.value && t.uint32(8).int32(e.value), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.info.OptionalVersionVisibility",
						value: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.value = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ce.$type,
					value: ge(e.value) ? ae(e.value) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.value && (t.value = se(e.value)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app_version.info.OptionalVersionVisibility",
						value: 0
					};
					return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
				}
			};
			i.a.set(ce.$type, ce);
			const pe = {
				$type: "devvit.dev_portal.app_version.info.AppVersionInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.id && t.uint32(10).string(e.id), 0 !== e.visibility && t.uint32(16).int32(e.visibility), !0 === e.isTrusted && t.uint32(24).bool(e.isTrusted), t.uint32(34).fork();
					for (const o of e.validInstallTypes) t.int32(o);
					return t.ldelim(), 0 !== e.majorVersion && t.uint32(40).int32(e.majorVersion), 0 !== e.minorVersion && t.uint32(48).int32(e.minorVersion), 0 !== e.patchVersion && t.uint32(56).int32(e.patchVersion), void 0 !== e.prereleaseVersion && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.prereleaseVersion
					}, t.uint32(66).fork()).ldelim(), void 0 !== e.uploadedAt && re.a.encode(ve(e.uploadedAt), t.uint32(74).fork()).ldelim(), 0 !== e.buildStatus && t.uint32(80).int32(e.buildStatus), void 0 !== e.builtAt && re.a.encode(ve(e.builtAt), t.uint32(90).fork()).ldelim(), "" !== e.about && t.uint32(98).string(e.about), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.info.AppVersionInfo",
						id: "",
						visibility: 0,
						isTrusted: !1,
						validInstallTypes: [],
						majorVersion: 0,
						minorVersion: 0,
						patchVersion: 0,
						prereleaseVersion: void 0,
						uploadedAt: void 0,
						buildStatus: 0,
						builtAt: void 0,
						about: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.visibility = o.int32();
								break;
							case 3:
								r.isTrusted = o.bool();
								break;
							case 4:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.validInstallTypes.push(o.int32())
								} else r.validInstallTypes.push(o.int32());
								break;
							case 5:
								r.majorVersion = o.int32();
								break;
							case 6:
								r.minorVersion = o.int32();
								break;
							case 7:
								r.patchVersion = o.int32();
								break;
							case 8:
								r.prereleaseVersion = ne.b.decode(o, o.uint32()).value;
								break;
							case 9:
								r.uploadedAt = me(re.a.decode(o, o.uint32()));
								break;
							case 10:
								r.buildStatus = o.int32();
								break;
							case 11:
								r.builtAt = me(re.a.decode(o, o.uint32()));
								break;
							case 12:
								r.about = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: pe.$type,
					id: ge(e.id) ? String(e.id) : "",
					visibility: ge(e.visibility) ? ae(e.visibility) : 0,
					isTrusted: !!ge(e.isTrusted) && Boolean(e.isTrusted),
					validInstallTypes: Array.isArray(null == e ? void 0 : e.validInstallTypes) ? e.validInstallTypes.map(e => le(e)) : [],
					majorVersion: ge(e.majorVersion) ? Number(e.majorVersion) : 0,
					minorVersion: ge(e.minorVersion) ? Number(e.minorVersion) : 0,
					patchVersion: ge(e.patchVersion) ? Number(e.patchVersion) : 0,
					prereleaseVersion: ge(e.prereleaseVersion) ? Number(e.prereleaseVersion) : void 0,
					uploadedAt: ge(e.uploadedAt) ? fe(e.uploadedAt) : void 0,
					buildStatus: ge(e.buildStatus) ? de(e.buildStatus) : 0,
					builtAt: ge(e.builtAt) ? fe(e.builtAt) : void 0,
					about: ge(e.about) ? String(e.about) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.visibility && (t.visibility = se(e.visibility)), void 0 !== e.isTrusted && (t.isTrusted = e.isTrusted), e.validInstallTypes ? t.validInstallTypes = e.validInstallTypes.map(e => ue(e)) : t.validInstallTypes = [], void 0 !== e.majorVersion && (t.majorVersion = Math.round(e.majorVersion)), void 0 !== e.minorVersion && (t.minorVersion = Math.round(e.minorVersion)), void 0 !== e.patchVersion && (t.patchVersion = Math.round(e.patchVersion)), void 0 !== e.prereleaseVersion && (t.prereleaseVersion = e.prereleaseVersion), void 0 !== e.uploadedAt && (t.uploadedAt = e.uploadedAt.toISOString()), void 0 !== e.buildStatus && (t.buildStatus = function(e) {
						switch (e) {
							case oe.BUILDING:
								return "BUILDING";
							case oe.READY:
								return "READY";
							case oe.FAILED:
								return "FAILED";
							default:
								return "UNKNOWN"
						}
					}(e.buildStatus)), void 0 !== e.builtAt && (t.builtAt = e.builtAt.toISOString()), void 0 !== e.about && (t.about = e.about), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l, u, c, p;
					const v = {
						$type: "devvit.dev_portal.app_version.info.AppVersionInfo",
						id: "",
						visibility: 0,
						isTrusted: !1,
						validInstallTypes: [],
						majorVersion: 0,
						minorVersion: 0,
						patchVersion: 0,
						prereleaseVersion: void 0,
						uploadedAt: void 0,
						buildStatus: 0,
						builtAt: void 0,
						about: ""
					};
					return v.id = null !== (t = e.id) && void 0 !== t ? t : "", v.visibility = null !== (o = e.visibility) && void 0 !== o ? o : 0, v.isTrusted = null !== (i = e.isTrusted) && void 0 !== i && i, v.validInstallTypes = (null === (r = e.validInstallTypes) || void 0 === r ? void 0 : r.map(e => e)) || [], v.majorVersion = null !== (n = e.majorVersion) && void 0 !== n ? n : 0, v.minorVersion = null !== (a = e.minorVersion) && void 0 !== a ? a : 0, v.patchVersion = null !== (s = e.patchVersion) && void 0 !== s ? s : 0, v.prereleaseVersion = null !== (d = e.prereleaseVersion) && void 0 !== d ? d : void 0, v.uploadedAt = null !== (l = e.uploadedAt) && void 0 !== l ? l : void 0, v.buildStatus = null !== (u = e.buildStatus) && void 0 !== u ? u : 0, v.builtAt = null !== (c = e.builtAt) && void 0 !== c ? c : void 0, v.about = null !== (p = e.about) && void 0 !== p ? p : "", v
				}
			};

			function ve(e) {
				return {
					$type: "google.protobuf.Timestamp",
					seconds: e.getTime() / 1e3,
					nanos: e.getTime() % 1e3 * 1e6
				}
			}

			function me(e) {
				let t = 1e3 * e.seconds;
				return t += e.nanos / 1e6, new Date(t)
			}

			function fe(e) {
				return e instanceof Date ? e : "string" == typeof e ? new Date(e) : me(re.a.fromJSON(e))
			}

			function ge(e) {
				return null != e
			}
			i.a.set(pe.$type, pe), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const he = {
				$type: "devvit.dev_portal.reddit.Redditor",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), "" !== e.displayName && t.uint32(18).string(e.displayName), "" !== e.snoovatarIconUrl && t.uint32(26).string(e.snoovatarIconUrl), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.reddit.Redditor",
						id: "",
						displayName: "",
						snoovatarIconUrl: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.displayName = o.string();
								break;
							case 3:
								r.snoovatarIconUrl = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: he.$type,
					id: ye(e.id) ? String(e.id) : "",
					displayName: ye(e.displayName) ? String(e.displayName) : "",
					snoovatarIconUrl: ye(e.snoovatarIconUrl) ? String(e.snoovatarIconUrl) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.displayName && (t.displayName = e.displayName), void 0 !== e.snoovatarIconUrl && (t.snoovatarIconUrl = e.snoovatarIconUrl), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.dev_portal.reddit.Redditor",
						id: "",
						displayName: "",
						snoovatarIconUrl: ""
					};
					return r.id = null !== (t = e.id) && void 0 !== t ? t : "", r.displayName = null !== (o = e.displayName) && void 0 !== o ? o : "", r.snoovatarIconUrl = null !== (i = e.snoovatarIconUrl) && void 0 !== i ? i : "", r
				}
			};

			function ye(e) {
				return null != e
			}
			var be;

			function ke(e) {
				switch (e) {
					case 0:
					case "MODERATION":
						return be.MODERATION;
					case 1:
					case "CUSTOM_POSTS":
						return be.CUSTOM_POSTS;
					case 2:
					case "UTILITIES":
						return be.UTILITIES;
					case 3:
					case "OTHER_SITES":
						return be.OTHER_SITES;
					case 4:
					case "FUNNY":
						return be.FUNNY;
					case 5:
					case "WEIRD":
						return be.WEIRD;
					case 6:
					case "AWW":
						return be.AWW;
					case 7:
					case "LEARNING":
						return be.LEARNING;
					case 8:
					case "FINANCIAL":
						return be.FINANCIAL;
					case 9:
					case "SPORTS":
						return be.SPORTS;
					case 10:
					case "GAMES":
						return be.GAMES;
					case 11:
					case "MOVIES":
						return be.MOVIES;
					case 12:
					case "MUSIC":
						return be.MUSIC;
					case 13:
					case "TV":
						return be.TV;
					case 14:
					case "BOOKS":
						return be.BOOKS;
					case 15:
					case "ANIME":
						return be.ANIME;
					case 16:
					case "PROGRAMMING":
						return be.PROGRAMMING;
					case 17:
					case "COOKING":
						return be.COOKING;
					case 18:
					case "FITNESS":
						return be.FITNESS;
					case 19:
					case "TRAVEL":
						return be.TRAVEL;
					case 20:
					case "CONTEXT_MENU":
						return be.CONTEXT_MENU;
					case 21:
					case "MOD_CONTEXT":
						return be.MOD_CONTEXT;
					case 22:
					case "FILTER":
						return be.FILTER;
					case 23:
					case "POST_FILTER":
						return be.POST_FILTER;
					case 24:
					case "COMMENT_FILTER":
						return be.COMMENT_FILTER;
					case 25:
					case "ANTI_SPAM":
						return be.ANTI_SPAM;
					case 26:
					case "ANTI_HARASSMENT":
						return be.ANTI_HARASSMENT;
					case 27:
					case "NSFW_FILTER":
						return be.NSFW_FILTER;
					case 28:
					case "CITIZEN_FILTER":
						return be.CITIZEN_FILTER;
					case 29:
					case "POST_FLAIR":
						return be.POST_FLAIR;
					case 30:
					case "COMMENT_FLAIR":
						return be.COMMENT_FLAIR;
					case 31:
					case "USER_FLAIR":
						return be.USER_FLAIR;
					case 32:
					case "MESSAGING":
						return be.MESSAGING;
					case 420:
					case "MISCHIEF":
						return be.MISCHIEF;
					case -1:
					case "UNRECOGNIZED":
					default:
						return be.UNRECOGNIZED
				}
			}

			function Se(e) {
				switch (e) {
					case be.MODERATION:
						return "MODERATION";
					case be.CUSTOM_POSTS:
						return "CUSTOM_POSTS";
					case be.UTILITIES:
						return "UTILITIES";
					case be.OTHER_SITES:
						return "OTHER_SITES";
					case be.FUNNY:
						return "FUNNY";
					case be.WEIRD:
						return "WEIRD";
					case be.AWW:
						return "AWW";
					case be.LEARNING:
						return "LEARNING";
					case be.FINANCIAL:
						return "FINANCIAL";
					case be.SPORTS:
						return "SPORTS";
					case be.GAMES:
						return "GAMES";
					case be.MOVIES:
						return "MOVIES";
					case be.MUSIC:
						return "MUSIC";
					case be.TV:
						return "TV";
					case be.BOOKS:
						return "BOOKS";
					case be.ANIME:
						return "ANIME";
					case be.PROGRAMMING:
						return "PROGRAMMING";
					case be.COOKING:
						return "COOKING";
					case be.FITNESS:
						return "FITNESS";
					case be.TRAVEL:
						return "TRAVEL";
					case be.CONTEXT_MENU:
						return "CONTEXT_MENU";
					case be.MOD_CONTEXT:
						return "MOD_CONTEXT";
					case be.FILTER:
						return "FILTER";
					case be.POST_FILTER:
						return "POST_FILTER";
					case be.COMMENT_FILTER:
						return "COMMENT_FILTER";
					case be.ANTI_SPAM:
						return "ANTI_SPAM";
					case be.ANTI_HARASSMENT:
						return "ANTI_HARASSMENT";
					case be.NSFW_FILTER:
						return "NSFW_FILTER";
					case be.CITIZEN_FILTER:
						return "CITIZEN_FILTER";
					case be.POST_FLAIR:
						return "POST_FLAIR";
					case be.COMMENT_FLAIR:
						return "COMMENT_FLAIR";
					case be.USER_FLAIR:
						return "USER_FLAIR";
					case be.MESSAGING:
						return "MESSAGING";
					case be.MISCHIEF:
						return "MISCHIEF";
					default:
						return "UNKNOWN"
				}
			}
			i.a.set(he.$type, he), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.MODERATION = 0] = "MODERATION", e[e.CUSTOM_POSTS = 1] = "CUSTOM_POSTS", e[e.UTILITIES = 2] = "UTILITIES", e[e.OTHER_SITES = 3] = "OTHER_SITES", e[e.FUNNY = 4] = "FUNNY", e[e.WEIRD = 5] = "WEIRD", e[e.AWW = 6] = "AWW", e[e.LEARNING = 7] = "LEARNING", e[e.FINANCIAL = 8] = "FINANCIAL", e[e.SPORTS = 9] = "SPORTS", e[e.GAMES = 10] = "GAMES", e[e.MOVIES = 11] = "MOVIES", e[e.MUSIC = 12] = "MUSIC", e[e.TV = 13] = "TV", e[e.BOOKS = 14] = "BOOKS", e[e.ANIME = 15] = "ANIME", e[e.PROGRAMMING = 16] = "PROGRAMMING", e[e.COOKING = 17] = "COOKING", e[e.FITNESS = 18] = "FITNESS", e[e.TRAVEL = 19] = "TRAVEL", e[e.CONTEXT_MENU = 20] = "CONTEXT_MENU", e[e.MOD_CONTEXT = 21] = "MOD_CONTEXT", e[e.FILTER = 22] = "FILTER", e[e.POST_FILTER = 23] = "POST_FILTER", e[e.COMMENT_FILTER = 24] = "COMMENT_FILTER", e[e.ANTI_SPAM = 25] = "ANTI_SPAM", e[e.ANTI_HARASSMENT = 26] = "ANTI_HARASSMENT", e[e.NSFW_FILTER = 27] = "NSFW_FILTER", e[e.CITIZEN_FILTER = 28] = "CITIZEN_FILTER", e[e.POST_FLAIR = 29] = "POST_FLAIR", e[e.COMMENT_FLAIR = 30] = "COMMENT_FLAIR", e[e.USER_FLAIR = 31] = "USER_FLAIR", e[e.MESSAGING = 32] = "MESSAGING", e[e.MISCHIEF = 420] = "MISCHIEF", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(be || (be = {})), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const we = {
				$type: "devvit.dev_portal.app.info.AppInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.id && t.uint32(10).string(e.id), "" !== e.slug && t.uint32(18).string(e.slug), "" !== e.name && t.uint32(26).string(e.name), "" !== e.description && t.uint32(34).string(e.description), !0 === e.isNsfw && t.uint32(40).bool(e.isNsfw), !0 === e.isDelisted && t.uint32(48).bool(e.isDelisted), void 0 !== e.createdAt && re.a.encode(function(e) {
						const t = e.getTime() / 1e3,
							o = e.getTime() % 1e3 * 1e6;
						return {
							$type: "google.protobuf.Timestamp",
							seconds: t,
							nanos: o
						}
					}(e.createdAt), t.uint32(58).fork()).ldelim(), void 0 !== e.owner && he.encode(e.owner, t.uint32(66).fork()).ldelim(), t.uint32(74).fork();
					for (const o of e.categories) t.int32(o);
					return t.ldelim(), void 0 !== e.stats && Te.encode(e.stats, t.uint32(82).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.info.AppInfo",
						id: "",
						slug: "",
						name: "",
						description: "",
						isNsfw: !1,
						isDelisted: !1,
						createdAt: void 0,
						owner: void 0,
						categories: [],
						stats: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.slug = o.string();
								break;
							case 3:
								r.name = o.string();
								break;
							case 4:
								r.description = o.string();
								break;
							case 5:
								r.isNsfw = o.bool();
								break;
							case 6:
								r.isDelisted = o.bool();
								break;
							case 7:
								r.createdAt = Ne(re.a.decode(o, o.uint32()));
								break;
							case 8:
								r.owner = he.decode(o, o.uint32());
								break;
							case 9:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.categories.push(o.int32())
								} else r.categories.push(o.int32());
								break;
							case 10:
								r.stats = Te.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: we.$type,
					id: $e(e.id) ? String(e.id) : "",
					slug: $e(e.slug) ? String(e.slug) : "",
					name: $e(e.name) ? String(e.name) : "",
					description: $e(e.description) ? String(e.description) : "",
					isNsfw: !!$e(e.isNsfw) && Boolean(e.isNsfw),
					isDelisted: !!$e(e.isDelisted) && Boolean(e.isDelisted),
					createdAt: $e(e.createdAt) ? Re(e.createdAt) : void 0,
					owner: $e(e.owner) ? he.fromJSON(e.owner) : void 0,
					categories: Array.isArray(null == e ? void 0 : e.categories) ? e.categories.map(e => ke(e)) : [],
					stats: $e(e.stats) ? Te.fromJSON(e.stats) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.slug && (t.slug = e.slug), void 0 !== e.name && (t.name = e.name), void 0 !== e.description && (t.description = e.description), void 0 !== e.isNsfw && (t.isNsfw = e.isNsfw), void 0 !== e.isDelisted && (t.isDelisted = e.isDelisted), void 0 !== e.createdAt && (t.createdAt = e.createdAt.toISOString()), void 0 !== e.owner && (t.owner = e.owner ? he.toJSON(e.owner) : void 0), e.categories ? t.categories = e.categories.map(e => Se(e)) : t.categories = [], void 0 !== e.stats && (t.stats = e.stats ? Te.toJSON(e.stats) : void 0), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d;
					const l = {
						$type: "devvit.dev_portal.app.info.AppInfo",
						id: "",
						slug: "",
						name: "",
						description: "",
						isNsfw: !1,
						isDelisted: !1,
						createdAt: void 0,
						owner: void 0,
						categories: [],
						stats: void 0
					};
					return l.id = null !== (t = e.id) && void 0 !== t ? t : "", l.slug = null !== (o = e.slug) && void 0 !== o ? o : "", l.name = null !== (i = e.name) && void 0 !== i ? i : "", l.description = null !== (r = e.description) && void 0 !== r ? r : "", l.isNsfw = null !== (n = e.isNsfw) && void 0 !== n && n, l.isDelisted = null !== (a = e.isDelisted) && void 0 !== a && a, l.createdAt = null !== (s = e.createdAt) && void 0 !== s ? s : void 0, l.owner = void 0 !== e.owner && null !== e.owner ? he.fromPartial(e.owner) : void 0, l.categories = (null === (d = e.categories) || void 0 === d ? void 0 : d.map(e => e)) || [], l.stats = void 0 !== e.stats && null !== e.stats ? Te.fromPartial(e.stats) : void 0, l
				}
			};
			i.a.set(we.$type, we);
			const Oe = {
				$type: "devvit.dev_portal.app.info.MultipleAppInfos",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.apps) we.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.info.MultipleAppInfos",
						apps: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.apps.push(we.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Oe.$type,
					apps: Array.isArray(null == e ? void 0 : e.apps) ? e.apps.map(e => we.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.apps ? t.apps = e.apps.map(e => e ? we.toJSON(e) : void 0) : t.apps = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app.info.MultipleAppInfos",
						apps: []
					};
					return o.apps = (null === (t = e.apps) || void 0 === t ? void 0 : t.map(e => we.fromPartial(e))) || [], o
				}
			};
			i.a.set(Oe.$type, Oe);
			const Te = {
				$type: "devvit.dev_portal.app.info.AppStats",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.installCount && t.uint32(8).int32(e.installCount), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.info.AppStats",
						installCount: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.installCount = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Te.$type,
					installCount: $e(e.installCount) ? Number(e.installCount) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.installCount && (t.installCount = Math.round(e.installCount)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app.info.AppStats",
						installCount: 0
					};
					return o.installCount = null !== (t = e.installCount) && void 0 !== t ? t : 0, o
				}
			};

			function Ne(e) {
				let t = 1e3 * e.seconds;
				return t += e.nanos / 1e6, new Date(t)
			}

			function Re(e) {
				return e instanceof Date ? e : "string" == typeof e ? new Date(e) : Ne(re.a.fromJSON(e))
			}

			function $e(e) {
				return null != e
			}
			i.a.set(Te.$type, Te), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Ce = {
				$type: "devvit.runtime.SerializableServiceDefinition",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.fullName && t.uint32(10).string(e.fullName);
					for (const o of e.methods) Ie.encode(o, t.uint32(18).fork()).ldelim();
					return "" !== e.name && t.uint32(26).string(e.name), "" !== e.version && t.uint32(34).string(e.version), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.SerializableServiceDefinition",
						fullName: "",
						methods: [],
						name: "",
						version: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.fullName = o.string();
								break;
							case 2:
								r.methods.push(Ie.decode(o, o.uint32()));
								break;
							case 3:
								r.name = o.string();
								break;
							case 4:
								r.version = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ce.$type,
					fullName: Ee(e.fullName) ? String(e.fullName) : "",
					methods: Array.isArray(null == e ? void 0 : e.methods) ? e.methods.map(e => Ie.fromJSON(e)) : [],
					name: Ee(e.name) ? String(e.name) : "",
					version: Ee(e.version) ? String(e.version) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.fullName && (t.fullName = e.fullName), e.methods ? t.methods = e.methods.map(e => e ? Ie.toJSON(e) : void 0) : t.methods = [], void 0 !== e.name && (t.name = e.name), void 0 !== e.version && (t.version = e.version), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.runtime.SerializableServiceDefinition",
						fullName: "",
						methods: [],
						name: "",
						version: ""
					};
					return n.fullName = null !== (t = e.fullName) && void 0 !== t ? t : "", n.methods = (null === (o = e.methods) || void 0 === o ? void 0 : o.map(e => Ie.fromPartial(e))) || [], n.name = null !== (i = e.name) && void 0 !== i ? i : "", n.version = null !== (r = e.version) && void 0 !== r ? r : "", n
				}
			};
			i.a.set(Ce.$type, Ce);
			const Ie = {
				$type: "devvit.runtime.SerializableMethodDefinition",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.fullName && t.uint32(10).string(e.fullName), "" !== e.name && t.uint32(18).string(e.name), !0 === e.requestStream && t.uint32(24).bool(e.requestStream), !0 === e.responseStream && t.uint32(32).bool(e.responseStream), "" !== e.requestType && t.uint32(42).string(e.requestType), "" !== e.responseType && t.uint32(50).string(e.responseType), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.SerializableMethodDefinition",
						fullName: "",
						name: "",
						requestStream: !1,
						responseStream: !1,
						requestType: "",
						responseType: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.fullName = o.string();
								break;
							case 2:
								r.name = o.string();
								break;
							case 3:
								r.requestStream = o.bool();
								break;
							case 4:
								r.responseStream = o.bool();
								break;
							case 5:
								r.requestType = o.string();
								break;
							case 6:
								r.responseType = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ie.$type,
					fullName: Ee(e.fullName) ? String(e.fullName) : "",
					name: Ee(e.name) ? String(e.name) : "",
					requestStream: !!Ee(e.requestStream) && Boolean(e.requestStream),
					responseStream: !!Ee(e.responseStream) && Boolean(e.responseStream),
					requestType: Ee(e.requestType) ? String(e.requestType) : "",
					responseType: Ee(e.responseType) ? String(e.responseType) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.fullName && (t.fullName = e.fullName), void 0 !== e.name && (t.name = e.name), void 0 !== e.requestStream && (t.requestStream = e.requestStream), void 0 !== e.responseStream && (t.responseStream = e.responseStream), void 0 !== e.requestType && (t.requestType = e.requestType), void 0 !== e.responseType && (t.responseType = e.responseType), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.runtime.SerializableMethodDefinition",
						fullName: "",
						name: "",
						requestStream: !1,
						responseStream: !1,
						requestType: "",
						responseType: ""
					};
					return s.fullName = null !== (t = e.fullName) && void 0 !== t ? t : "", s.name = null !== (o = e.name) && void 0 !== o ? o : "", s.requestStream = null !== (i = e.requestStream) && void 0 !== i && i, s.responseStream = null !== (r = e.responseStream) && void 0 !== r && r, s.requestType = null !== (n = e.requestType) && void 0 !== n ? n : "", s.responseType = null !== (a = e.responseType) && void 0 !== a ? a : "", s
				}
			};

			function Ee(e) {
				return null != e
			}
			var Ae;
			i.a.set(Ie.$type, Ie), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.BROWSER = 0] = "BROWSER", e[e.V8 = 1] = "V8", e[e.SKINNY = 2] = "SKINNY", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(Ae || (Ae = {}));
			const Pe = {
				$type: "devvit.runtime.ActorSpec",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.name && t.uint32(10).string(e.name), "" !== e.owner && t.uint32(18).string(e.owner), "" !== e.version && t.uint32(26).string(e.version), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.ActorSpec",
						name: "",
						owner: "",
						version: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.name = o.string();
								break;
							case 2:
								r.owner = o.string();
								break;
							case 3:
								r.version = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Pe.$type,
					name: Je(e.name) ? String(e.name) : "",
					owner: Je(e.owner) ? String(e.owner) : "",
					version: Je(e.version) ? String(e.version) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.name && (t.name = e.name), void 0 !== e.owner && (t.owner = e.owner), void 0 !== e.version && (t.version = e.version), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.runtime.ActorSpec",
						name: "",
						owner: "",
						version: ""
					};
					return r.name = null !== (t = e.name) && void 0 !== t ? t : "", r.owner = null !== (o = e.owner) && void 0 !== o ? o : "", r.version = null !== (i = e.version) && void 0 !== i ? i : "", r
				}
			};
			i.a.set(Pe.$type, Pe);
			const xe = {
				$type: "devvit.runtime.LocationFilter",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.allow) t.uint32(10).string(o);
					for (const o of e.deny) t.uint32(18).string(o);
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.LocationFilter",
						allow: [],
						deny: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.allow.push(o.string());
								break;
							case 2:
								r.deny.push(o.string());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: xe.$type,
					allow: Array.isArray(null == e ? void 0 : e.allow) ? e.allow.map(e => String(e)) : [],
					deny: Array.isArray(null == e ? void 0 : e.deny) ? e.deny.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.allow ? t.allow = e.allow.map(e => e) : t.allow = [], e.deny ? t.deny = e.deny.map(e => e) : t.deny = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.runtime.LocationFilter",
						allow: [],
						deny: []
					};
					return i.allow = (null === (t = e.allow) || void 0 === t ? void 0 : t.map(e => e)) || [], i.deny = (null === (o = e.deny) || void 0 === o ? void 0 : o.map(e => e)) || [], i
				}
			};
			i.a.set(xe.$type, xe);
			const Fe = {
				$type: "devvit.runtime.PackageSpec",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.actor && Pe.encode(e.actor, t.uint32(10).fork()).ldelim(), void 0 !== e.definition && Ce.encode(e.definition, t.uint32(18).fork()).ldelim(), void 0 !== e.locations && xe.encode(e.locations, t.uint32(26).fork()).ldelim();
					for (const o of e.partitionsBy) t.uint32(34).string(o);
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.PackageSpec",
						actor: void 0,
						definition: void 0,
						locations: void 0,
						partitionsBy: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actor = Pe.decode(o, o.uint32());
								break;
							case 2:
								r.definition = Ce.decode(o, o.uint32());
								break;
							case 3:
								r.locations = xe.decode(o, o.uint32());
								break;
							case 4:
								r.partitionsBy.push(o.string());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Fe.$type,
					actor: Je(e.actor) ? Pe.fromJSON(e.actor) : void 0,
					definition: Je(e.definition) ? Ce.fromJSON(e.definition) : void 0,
					locations: Je(e.locations) ? xe.fromJSON(e.locations) : void 0,
					partitionsBy: Array.isArray(null == e ? void 0 : e.partitionsBy) ? e.partitionsBy.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actor && (t.actor = e.actor ? Pe.toJSON(e.actor) : void 0), void 0 !== e.definition && (t.definition = e.definition ? Ce.toJSON(e.definition) : void 0), void 0 !== e.locations && (t.locations = e.locations ? xe.toJSON(e.locations) : void 0), e.partitionsBy ? t.partitionsBy = e.partitionsBy.map(e => e) : t.partitionsBy = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.runtime.PackageSpec",
						actor: void 0,
						definition: void 0,
						locations: void 0,
						partitionsBy: []
					};
					return o.actor = void 0 !== e.actor && null !== e.actor ? Pe.fromPartial(e.actor) : void 0, o.definition = void 0 !== e.definition && null !== e.definition ? Ce.fromPartial(e.definition) : void 0, o.locations = void 0 !== e.locations && null !== e.locations ? xe.fromPartial(e.locations) : void 0, o.partitionsBy = (null === (t = e.partitionsBy) || void 0 === t ? void 0 : t.map(e => e)) || [], o
				}
			};
			i.a.set(Fe.$type, Fe);
			const je = {
				$type: "devvit.runtime.PackageQuery",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.owner && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.owner
					}, t.uint32(18).fork()).ldelim(), "" !== e.typeName && t.uint32(26).string(e.typeName), void 0 !== e.versions && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.versions
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.PackageQuery",
						name: void 0,
						owner: void 0,
						typeName: "",
						versions: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.owner = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.typeName = o.string();
								break;
							case 4:
								r.versions = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: je.$type,
					name: Je(e.name) ? String(e.name) : void 0,
					owner: Je(e.owner) ? String(e.owner) : void 0,
					typeName: Je(e.typeName) ? String(e.typeName) : "",
					versions: Je(e.versions) ? String(e.versions) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.name && (t.name = e.name), void 0 !== e.owner && (t.owner = e.owner), void 0 !== e.typeName && (t.typeName = e.typeName), void 0 !== e.versions && (t.versions = e.versions), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.runtime.PackageQuery",
						name: void 0,
						owner: void 0,
						typeName: "",
						versions: void 0
					};
					return n.name = null !== (t = e.name) && void 0 !== t ? t : void 0, n.owner = null !== (o = e.owner) && void 0 !== o ? o : void 0, n.typeName = null !== (i = e.typeName) && void 0 !== i ? i : "", n.versions = null !== (r = e.versions) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(je.$type, je);
			const Me = {
				$type: "devvit.runtime.DependencySpec",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.actor && Pe.encode(e.actor, t.uint32(10).fork()).ldelim(), "" !== e.hostname && t.uint32(18).string(e.hostname);
					for (const o of e.provides) Fe.encode(o, t.uint32(26).fork()).ldelim();
					for (const o of e.uses) je.encode(o, t.uint32(34).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.DependencySpec",
						actor: void 0,
						hostname: "",
						provides: [],
						uses: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actor = Pe.decode(o, o.uint32());
								break;
							case 2:
								r.hostname = o.string();
								break;
							case 3:
								r.provides.push(Fe.decode(o, o.uint32()));
								break;
							case 4:
								r.uses.push(je.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Me.$type,
					actor: Je(e.actor) ? Pe.fromJSON(e.actor) : void 0,
					hostname: Je(e.hostname) ? String(e.hostname) : "",
					provides: Array.isArray(null == e ? void 0 : e.provides) ? e.provides.map(e => Fe.fromJSON(e)) : [],
					uses: Array.isArray(null == e ? void 0 : e.uses) ? e.uses.map(e => je.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actor && (t.actor = e.actor ? Pe.toJSON(e.actor) : void 0), void 0 !== e.hostname && (t.hostname = e.hostname), e.provides ? t.provides = e.provides.map(e => e ? Fe.toJSON(e) : void 0) : t.provides = [], e.uses ? t.uses = e.uses.map(e => e ? je.toJSON(e) : void 0) : t.uses = [], t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.runtime.DependencySpec",
						actor: void 0,
						hostname: "",
						provides: [],
						uses: []
					};
					return r.actor = void 0 !== e.actor && null !== e.actor ? Pe.fromPartial(e.actor) : void 0, r.hostname = null !== (t = e.hostname) && void 0 !== t ? t : "", r.provides = (null === (o = e.provides) || void 0 === o ? void 0 : o.map(e => Fe.fromPartial(e))) || [], r.uses = (null === (i = e.uses) || void 0 === i ? void 0 : i.map(e => je.fromPartial(e))) || [], r
				}
			};
			i.a.set(Me.$type, Me);
			const De = {
				$type: "devvit.runtime.LinkedBundle",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.actor && Pe.encode(e.actor, t.uint32(10).fork()).ldelim(), "" !== e.code && t.uint32(18).string(e.code), "" !== e.hostname && t.uint32(26).string(e.hostname);
					for (const o of e.provides) Ce.encode(o, t.uint32(34).fork()).ldelim();
					for (const o of e.uses) De.encode(o, t.uint32(42).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.LinkedBundle",
						actor: void 0,
						code: "",
						hostname: "",
						provides: [],
						uses: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actor = Pe.decode(o, o.uint32());
								break;
							case 2:
								r.code = o.string();
								break;
							case 3:
								r.hostname = o.string();
								break;
							case 4:
								r.provides.push(Ce.decode(o, o.uint32()));
								break;
							case 5:
								r.uses.push(De.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: De.$type,
					actor: Je(e.actor) ? Pe.fromJSON(e.actor) : void 0,
					code: Je(e.code) ? String(e.code) : "",
					hostname: Je(e.hostname) ? String(e.hostname) : "",
					provides: Array.isArray(null == e ? void 0 : e.provides) ? e.provides.map(e => Ce.fromJSON(e)) : [],
					uses: Array.isArray(null == e ? void 0 : e.uses) ? e.uses.map(e => De.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actor && (t.actor = e.actor ? Pe.toJSON(e.actor) : void 0), void 0 !== e.code && (t.code = e.code), void 0 !== e.hostname && (t.hostname = e.hostname), e.provides ? t.provides = e.provides.map(e => e ? Ce.toJSON(e) : void 0) : t.provides = [], e.uses ? t.uses = e.uses.map(e => e ? De.toJSON(e) : void 0) : t.uses = [], t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.runtime.LinkedBundle",
						actor: void 0,
						code: "",
						hostname: "",
						provides: [],
						uses: []
					};
					return n.actor = void 0 !== e.actor && null !== e.actor ? Pe.fromPartial(e.actor) : void 0, n.code = null !== (t = e.code) && void 0 !== t ? t : "", n.hostname = null !== (o = e.hostname) && void 0 !== o ? o : "", n.provides = (null === (i = e.provides) || void 0 === i ? void 0 : i.map(e => Ce.fromPartial(e))) || [], n.uses = (null === (r = e.uses) || void 0 === r ? void 0 : r.map(e => De.fromPartial(e))) || [], n
				}
			};

			function Je(e) {
				return null != e
			}
			i.a.set(De.$type, De), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const _e = {
				$type: "devvit.plugin.buildpack.File",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.path && t.uint32(10).string(e.path), "" !== e.content && t.uint32(18).string(e.content), !0 === e.isDirectory && t.uint32(24).bool(e.isDirectory), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.File",
						path: "",
						content: "",
						isDirectory: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.path = o.string();
								break;
							case 2:
								r.content = o.string();
								break;
							case 3:
								r.isDirectory = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: _e.$type,
					path: Ve(e.path) ? String(e.path) : "",
					content: Ve(e.content) ? String(e.content) : "",
					isDirectory: !!Ve(e.isDirectory) && Boolean(e.isDirectory)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.path && (t.path = e.path), void 0 !== e.content && (t.content = e.content), void 0 !== e.isDirectory && (t.isDirectory = e.isDirectory), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.buildpack.File",
						path: "",
						content: "",
						isDirectory: !1
					};
					return r.path = null !== (t = e.path) && void 0 !== t ? t : "", r.content = null !== (o = e.content) && void 0 !== o ? o : "", r.isDirectory = null !== (i = e.isDirectory) && void 0 !== i && i, r
				}
			};
			i.a.set(_e.$type, _e);
			const Be = {
				$type: "devvit.plugin.buildpack.FileSystem",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.files) _e.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.FileSystem",
						files: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.files.push(_e.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Be.$type,
					files: Array.isArray(null == e ? void 0 : e.files) ? e.files.map(e => _e.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.files ? t.files = e.files.map(e => e ? _e.toJSON(e) : void 0) : t.files = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.buildpack.FileSystem",
						files: []
					};
					return o.files = (null === (t = e.files) || void 0 === t ? void 0 : t.map(e => _e.fromPartial(e))) || [], o
				}
			};

			function Ve(e) {
				return null != e
			}
			var Le;

			function Ue(e) {
				switch (e) {
					case 0:
					case "NONE":
						return Le.NONE;
					case 1:
					case "ALL":
						return Le.ALL;
					case -1:
					case "UNRECOGNIZED":
					default:
						return Le.UNRECOGNIZED
				}
			}
			i.a.set(Be.$type, Be), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.NONE = 0] = "NONE", e[e.ALL = 1] = "ALL", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(Le || (Le = {}));
			const qe = {
				$type: "devvit.plugin.buildpack.Bundle",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.code && t.uint32(10).string(e.code), void 0 !== e.dependencies && Me.encode(e.dependencies, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.Bundle",
						code: "",
						dependencies: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.code = o.string();
								break;
							case 2:
								r.dependencies = Me.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: qe.$type,
					code: Ye(e.code) ? String(e.code) : "",
					dependencies: Ye(e.dependencies) ? Me.fromJSON(e.dependencies) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.code && (t.code = e.code), void 0 !== e.dependencies && (t.dependencies = e.dependencies ? Me.toJSON(e.dependencies) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.buildpack.Bundle",
						code: "",
						dependencies: void 0
					};
					return o.code = null !== (t = e.code) && void 0 !== t ? t : "", o.dependencies = void 0 !== e.dependencies && null !== e.dependencies ? Me.fromPartial(e.dependencies) : void 0, o
				}
			};
			i.a.set(qe.$type, qe);
			const We = {
				$type: "devvit.plugin.buildpack.CompileParams",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.virtualFileSystem && Be.encode(e.virtualFileSystem, t.uint32(10).fork()).ldelim(), void 0 !== e.filename && t.uint32(18).string(e.filename), 0 !== e.minify && t.uint32(24).int32(e.minify), void 0 !== e.info && Pe.encode(e.info, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.CompileParams",
						virtualFileSystem: void 0,
						filename: void 0,
						minify: 0,
						info: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.virtualFileSystem = Be.decode(o, o.uint32());
								break;
							case 2:
								r.filename = o.string();
								break;
							case 3:
								r.minify = o.int32();
								break;
							case 4:
								r.info = Pe.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: We.$type,
					virtualFileSystem: Ye(e.virtualFileSystem) ? Be.fromJSON(e.virtualFileSystem) : void 0,
					filename: Ye(e.filename) ? String(e.filename) : void 0,
					minify: Ye(e.minify) ? Ue(e.minify) : 0,
					info: Ye(e.info) ? Pe.fromJSON(e.info) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.virtualFileSystem && (t.virtualFileSystem = e.virtualFileSystem ? Be.toJSON(e.virtualFileSystem) : void 0), void 0 !== e.filename && (t.filename = e.filename), void 0 !== e.minify && (t.minify = function(e) {
						switch (e) {
							case Le.NONE:
								return "NONE";
							case Le.ALL:
								return "ALL";
							default:
								return "UNKNOWN"
						}
					}(e.minify)), void 0 !== e.info && (t.info = e.info ? Pe.toJSON(e.info) : void 0), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.buildpack.CompileParams",
						virtualFileSystem: void 0,
						filename: void 0,
						minify: 0,
						info: void 0
					};
					return i.virtualFileSystem = void 0 !== e.virtualFileSystem && null !== e.virtualFileSystem ? Be.fromPartial(e.virtualFileSystem) : void 0, i.filename = null !== (t = e.filename) && void 0 !== t ? t : void 0, i.minify = null !== (o = e.minify) && void 0 !== o ? o : 0, i.info = void 0 !== e.info && null !== e.info ? Pe.fromPartial(e.info) : void 0, i
				}
			};
			i.a.set(We.$type, We);
			const Ge = {
				$type: "devvit.plugin.buildpack.CompileLog",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.detail && He.encode(e.detail, t.uint32(10).fork()).ldelim(), "" !== e.text && t.uint32(18).string(e.text), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.CompileLog",
						detail: void 0,
						text: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.detail = He.decode(o, o.uint32());
								break;
							case 2:
								r.text = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ge.$type,
					detail: Ye(e.detail) ? He.fromJSON(e.detail) : void 0,
					text: Ye(e.text) ? String(e.text) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.detail && (t.detail = e.detail ? He.toJSON(e.detail) : void 0), void 0 !== e.text && (t.text = e.text), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.buildpack.CompileLog",
						detail: void 0,
						text: ""
					};
					return o.detail = void 0 !== e.detail && null !== e.detail ? He.fromPartial(e.detail) : void 0, o.text = null !== (t = e.text) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Ge.$type, Ge);
			const He = {
				$type: "devvit.plugin.buildpack.CompileLogLineDetail",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.column && t.uint32(8).uint32(e.column), "" !== e.filename && t.uint32(18).string(e.filename), 0 !== e.line && t.uint32(24).uint32(e.line), "" !== e.suggestion && t.uint32(34).string(e.suggestion), "" !== e.text && t.uint32(42).string(e.text), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.CompileLogLineDetail",
						column: 0,
						filename: "",
						line: 0,
						suggestion: "",
						text: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.column = o.uint32();
								break;
							case 2:
								r.filename = o.string();
								break;
							case 3:
								r.line = o.uint32();
								break;
							case 4:
								r.suggestion = o.string();
								break;
							case 5:
								r.text = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: He.$type,
					column: Ye(e.column) ? Number(e.column) : 0,
					filename: Ye(e.filename) ? String(e.filename) : "",
					line: Ye(e.line) ? Number(e.line) : 0,
					suggestion: Ye(e.suggestion) ? String(e.suggestion) : "",
					text: Ye(e.text) ? String(e.text) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.column && (t.column = Math.round(e.column)), void 0 !== e.filename && (t.filename = e.filename), void 0 !== e.line && (t.line = Math.round(e.line)), void 0 !== e.suggestion && (t.suggestion = e.suggestion), void 0 !== e.text && (t.text = e.text), t
				},
				fromPartial(e) {
					var t, o, i, r, n;
					const a = {
						$type: "devvit.plugin.buildpack.CompileLogLineDetail",
						column: 0,
						filename: "",
						line: 0,
						suggestion: "",
						text: ""
					};
					return a.column = null !== (t = e.column) && void 0 !== t ? t : 0, a.filename = null !== (o = e.filename) && void 0 !== o ? o : "", a.line = null !== (i = e.line) && void 0 !== i ? i : 0, a.suggestion = null !== (r = e.suggestion) && void 0 !== r ? r : "", a.text = null !== (n = e.text) && void 0 !== n ? n : "", a
				}
			};
			i.a.set(He.$type, He);
			const ze = {
				$type: "devvit.plugin.buildpack.CompileResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.bundle && qe.encode(e.bundle, t.uint32(10).fork()).ldelim();
					for (const o of e.errors) Ge.encode(o, t.uint32(18).fork()).ldelim();
					for (const o of e.warnings) Ge.encode(o, t.uint32(26).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.buildpack.CompileResponse",
						bundle: void 0,
						errors: [],
						warnings: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.bundle = qe.decode(o, o.uint32());
								break;
							case 2:
								r.errors.push(Ge.decode(o, o.uint32()));
								break;
							case 3:
								r.warnings.push(Ge.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ze.$type,
					bundle: Ye(e.bundle) ? qe.fromJSON(e.bundle) : void 0,
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => Ge.fromJSON(e)) : [],
					warnings: Array.isArray(null == e ? void 0 : e.warnings) ? e.warnings.map(e => Ge.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.bundle && (t.bundle = e.bundle ? qe.toJSON(e.bundle) : void 0), e.errors ? t.errors = e.errors.map(e => e ? Ge.toJSON(e) : void 0) : t.errors = [], e.warnings ? t.warnings = e.warnings.map(e => e ? Ge.toJSON(e) : void 0) : t.warnings = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.buildpack.CompileResponse",
						bundle: void 0,
						errors: [],
						warnings: []
					};
					return i.bundle = void 0 !== e.bundle && null !== e.bundle ? qe.fromPartial(e.bundle) : void 0, i.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => Ge.fromPartial(e))) || [], i.warnings = (null === (o = e.warnings) || void 0 === o ? void 0 : o.map(e => Ge.fromPartial(e))) || [], i
				}
			};

			function Ye(e) {
				return null != e
			}
			i.a.set(ze.$type, ze), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var Ze, Xe = o("./node_modules/@devvit/protos/types/google/protobuf/any.js");

			function Ke(e) {
				switch (e) {
					case 0:
					case "MANUAL":
						return Ze.MANUAL;
					case 1:
					case "AUTOMATIC":
						return Ze.AUTOMATIC;
					case -1:
					case "UNRECOGNIZED":
					default:
						return Ze.UNRECOGNIZED
				}
			}

			function Qe(e) {
				switch (e) {
					case Ze.MANUAL:
						return "MANUAL";
					case Ze.AUTOMATIC:
						return "AUTOMATIC";
					default:
						return "UNKNOWN"
				}
			}! function(e) {
				e[e.MANUAL = 0] = "MANUAL", e[e.AUTOMATIC = 1] = "AUTOMATIC", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(Ze || (Ze = {}));
			const et = {
				$type: "devvit.dev_portal.installation.OptionalUpgradeStrategy",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.value && t.uint32(8).int32(e.value), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.OptionalUpgradeStrategy",
						value: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.value = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: et.$type,
					value: lt(e.value) ? Ke(e.value) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.value && (t.value = Qe(e.value)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.installation.OptionalUpgradeStrategy",
						value: 0
					};
					return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
				}
			};
			i.a.set(et.$type, et);
			const tt = {
				$type: "devvit.dev_portal.installation.InstallationCreationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.appVersionId && t.uint32(10).string(e.appVersionId), void 0 !== e.runAs && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.runAs
					}, t.uint32(26).fork()).ldelim(), 0 !== e.type && t.uint32(32).int32(e.type), "" !== e.location && t.uint32(42).string(e.location), 0 !== e.upgradeStrategy && t.uint32(48).int32(e.upgradeStrategy), void 0 !== e.upgradeStrategyConfig && Xe.a.encode(e.upgradeStrategyConfig, t.uint32(58).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.InstallationCreationRequest",
						appVersionId: "",
						runAs: void 0,
						type: 0,
						location: "",
						upgradeStrategy: 0,
						upgradeStrategyConfig: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.appVersionId = o.string();
								break;
							case 3:
								r.runAs = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.type = o.int32();
								break;
							case 5:
								r.location = o.string();
								break;
							case 6:
								r.upgradeStrategy = o.int32();
								break;
							case 7:
								r.upgradeStrategyConfig = Xe.a.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: tt.$type,
					appVersionId: lt(e.appVersionId) ? String(e.appVersionId) : "",
					runAs: lt(e.runAs) ? String(e.runAs) : void 0,
					type: lt(e.type) ? le(e.type) : 0,
					location: lt(e.location) ? String(e.location) : "",
					upgradeStrategy: lt(e.upgradeStrategy) ? Ke(e.upgradeStrategy) : 0,
					upgradeStrategyConfig: lt(e.upgradeStrategyConfig) ? Xe.a.fromJSON(e.upgradeStrategyConfig) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.appVersionId && (t.appVersionId = e.appVersionId), void 0 !== e.runAs && (t.runAs = e.runAs), void 0 !== e.type && (t.type = ue(e.type)), void 0 !== e.location && (t.location = e.location), void 0 !== e.upgradeStrategy && (t.upgradeStrategy = Qe(e.upgradeStrategy)), void 0 !== e.upgradeStrategyConfig && (t.upgradeStrategyConfig = e.upgradeStrategyConfig ? Xe.a.toJSON(e.upgradeStrategyConfig) : void 0), t
				},
				fromPartial(e) {
					var t, o, i, r, n;
					const a = {
						$type: "devvit.dev_portal.installation.InstallationCreationRequest",
						appVersionId: "",
						runAs: void 0,
						type: 0,
						location: "",
						upgradeStrategy: 0,
						upgradeStrategyConfig: void 0
					};
					return a.appVersionId = null !== (t = e.appVersionId) && void 0 !== t ? t : "", a.runAs = null !== (o = e.runAs) && void 0 !== o ? o : void 0, a.type = null !== (i = e.type) && void 0 !== i ? i : 0, a.location = null !== (r = e.location) && void 0 !== r ? r : "", a.upgradeStrategy = null !== (n = e.upgradeStrategy) && void 0 !== n ? n : 0, a.upgradeStrategyConfig = void 0 !== e.upgradeStrategyConfig && null !== e.upgradeStrategyConfig ? Xe.a.fromPartial(e.upgradeStrategyConfig) : void 0, a
				}
			};
			i.a.set(tt.$type, tt);
			const ot = {
				$type: "devvit.dev_portal.installation.InstallationUpdateRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), void 0 !== e.runAs && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.runAs
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.upgradeStrategy && et.encode(e.upgradeStrategy, t.uint32(34).fork()).ldelim(), void 0 !== e.upgradeStrategyConfig && Xe.a.encode(e.upgradeStrategyConfig, t.uint32(42).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.InstallationUpdateRequest",
						id: "",
						runAs: void 0,
						upgradeStrategy: void 0,
						upgradeStrategyConfig: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 3:
								r.runAs = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.upgradeStrategy = et.decode(o, o.uint32());
								break;
							case 5:
								r.upgradeStrategyConfig = Xe.a.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ot.$type,
					id: lt(e.id) ? String(e.id) : "",
					runAs: lt(e.runAs) ? String(e.runAs) : void 0,
					upgradeStrategy: lt(e.upgradeStrategy) ? et.fromJSON(e.upgradeStrategy) : void 0,
					upgradeStrategyConfig: lt(e.upgradeStrategyConfig) ? Xe.a.fromJSON(e.upgradeStrategyConfig) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.runAs && (t.runAs = e.runAs), void 0 !== e.upgradeStrategy && (t.upgradeStrategy = e.upgradeStrategy ? et.toJSON(e.upgradeStrategy) : void 0), void 0 !== e.upgradeStrategyConfig && (t.upgradeStrategyConfig = e.upgradeStrategyConfig ? Xe.a.toJSON(e.upgradeStrategyConfig) : void 0), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.installation.InstallationUpdateRequest",
						id: "",
						runAs: void 0,
						upgradeStrategy: void 0,
						upgradeStrategyConfig: void 0
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.runAs = null !== (o = e.runAs) && void 0 !== o ? o : void 0, i.upgradeStrategy = void 0 !== e.upgradeStrategy && null !== e.upgradeStrategy ? et.fromPartial(e.upgradeStrategy) : void 0, i.upgradeStrategyConfig = void 0 !== e.upgradeStrategyConfig && null !== e.upgradeStrategyConfig ? Xe.a.fromPartial(e.upgradeStrategyConfig) : void 0, i
				}
			};
			i.a.set(ot.$type, ot);
			const it = {
				$type: "devvit.dev_portal.installation.InstallationUpgradeRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), void 0 !== e.appVersionId && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.appVersionId
					}, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.InstallationUpgradeRequest",
						id: "",
						appVersionId: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.appVersionId = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: it.$type,
					id: lt(e.id) ? String(e.id) : "",
					appVersionId: lt(e.appVersionId) ? String(e.appVersionId) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.appVersionId && (t.appVersionId = e.appVersionId), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.installation.InstallationUpgradeRequest",
						id: "",
						appVersionId: void 0
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.appVersionId = null !== (o = e.appVersionId) && void 0 !== o ? o : void 0, i
				}
			};
			i.a.set(it.$type, it);
			const rt = {
				$type: "devvit.dev_portal.installation.GetAllWithInstallLocationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.type && t.uint32(8).int32(e.type), "" !== e.location && t.uint32(18).string(e.location), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.GetAllWithInstallLocationRequest",
						type: 0,
						location: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.type = o.int32();
								break;
							case 2:
								r.location = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: rt.$type,
					type: lt(e.type) ? le(e.type) : 0,
					location: lt(e.location) ? String(e.location) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.type && (t.type = ue(e.type)), void 0 !== e.location && (t.location = e.location), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.installation.GetAllWithInstallLocationRequest",
						type: 0,
						location: ""
					};
					return i.type = null !== (t = e.type) && void 0 !== t ? t : 0, i.location = null !== (o = e.location) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(rt.$type, rt);
			const nt = {
				$type: "devvit.dev_portal.installation.GetAllWithInstallerRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.installedBy && t.uint32(10).string(e.installedBy), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.GetAllWithInstallerRequest",
						installedBy: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.installedBy = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: nt.$type,
					installedBy: lt(e.installedBy) ? String(e.installedBy) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.installedBy && (t.installedBy = e.installedBy), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.installation.GetAllWithInstallerRequest",
						installedBy: ""
					};
					return o.installedBy = null !== (t = e.installedBy) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(nt.$type, nt);
			const at = {
				$type: "devvit.dev_portal.installation.InstallationInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), "" !== e.installedBy && t.uint32(18).string(e.installedBy), 0 !== e.upgradeStrategy && t.uint32(24).int32(e.upgradeStrategy), void 0 !== e.upgradeStrategyConfig && Xe.a.encode(e.upgradeStrategyConfig, t.uint32(34).fork()).ldelim(), void 0 !== e.runAs && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.runAs
					}, t.uint32(50).fork()).ldelim(), 0 !== e.type && t.uint32(56).int32(e.type), "" !== e.location && t.uint32(66).string(e.location), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.InstallationInfo",
						id: "",
						installedBy: "",
						upgradeStrategy: 0,
						upgradeStrategyConfig: void 0,
						runAs: void 0,
						type: 0,
						location: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.installedBy = o.string();
								break;
							case 3:
								r.upgradeStrategy = o.int32();
								break;
							case 4:
								r.upgradeStrategyConfig = Xe.a.decode(o, o.uint32());
								break;
							case 6:
								r.runAs = ne.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.type = o.int32();
								break;
							case 8:
								r.location = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: at.$type,
					id: lt(e.id) ? String(e.id) : "",
					installedBy: lt(e.installedBy) ? String(e.installedBy) : "",
					upgradeStrategy: lt(e.upgradeStrategy) ? Ke(e.upgradeStrategy) : 0,
					upgradeStrategyConfig: lt(e.upgradeStrategyConfig) ? Xe.a.fromJSON(e.upgradeStrategyConfig) : void 0,
					runAs: lt(e.runAs) ? String(e.runAs) : void 0,
					type: lt(e.type) ? le(e.type) : 0,
					location: lt(e.location) ? String(e.location) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.installedBy && (t.installedBy = e.installedBy), void 0 !== e.upgradeStrategy && (t.upgradeStrategy = Qe(e.upgradeStrategy)), void 0 !== e.upgradeStrategyConfig && (t.upgradeStrategyConfig = e.upgradeStrategyConfig ? Xe.a.toJSON(e.upgradeStrategyConfig) : void 0), void 0 !== e.runAs && (t.runAs = e.runAs), void 0 !== e.type && (t.type = ue(e.type)), void 0 !== e.location && (t.location = e.location), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.dev_portal.installation.InstallationInfo",
						id: "",
						installedBy: "",
						upgradeStrategy: 0,
						upgradeStrategyConfig: void 0,
						runAs: void 0,
						type: 0,
						location: ""
					};
					return s.id = null !== (t = e.id) && void 0 !== t ? t : "", s.installedBy = null !== (o = e.installedBy) && void 0 !== o ? o : "", s.upgradeStrategy = null !== (i = e.upgradeStrategy) && void 0 !== i ? i : 0, s.upgradeStrategyConfig = void 0 !== e.upgradeStrategyConfig && null !== e.upgradeStrategyConfig ? Xe.a.fromPartial(e.upgradeStrategyConfig) : void 0, s.runAs = null !== (r = e.runAs) && void 0 !== r ? r : void 0, s.type = null !== (n = e.type) && void 0 !== n ? n : 0, s.location = null !== (a = e.location) && void 0 !== a ? a : "", s
				}
			};
			i.a.set(at.$type, at);
			const st = {
				$type: "devvit.dev_portal.installation.FullInstallationInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.installation && at.encode(e.installation, t.uint32(10).fork()).ldelim(), void 0 !== e.appVersion && pe.encode(e.appVersion, t.uint32(18).fork()).ldelim(), void 0 !== e.app && we.encode(e.app, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.FullInstallationInfo",
						installation: void 0,
						appVersion: void 0,
						app: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.installation = at.decode(o, o.uint32());
								break;
							case 2:
								r.appVersion = pe.decode(o, o.uint32());
								break;
							case 3:
								r.app = we.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: st.$type,
					installation: lt(e.installation) ? at.fromJSON(e.installation) : void 0,
					appVersion: lt(e.appVersion) ? pe.fromJSON(e.appVersion) : void 0,
					app: lt(e.app) ? we.fromJSON(e.app) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.installation && (t.installation = e.installation ? at.toJSON(e.installation) : void 0), void 0 !== e.appVersion && (t.appVersion = e.appVersion ? pe.toJSON(e.appVersion) : void 0), void 0 !== e.app && (t.app = e.app ? we.toJSON(e.app) : void 0), t
				},
				fromPartial(e) {
					const t = {
						$type: "devvit.dev_portal.installation.FullInstallationInfo",
						installation: void 0,
						appVersion: void 0,
						app: void 0
					};
					return t.installation = void 0 !== e.installation && null !== e.installation ? at.fromPartial(e.installation) : void 0, t.appVersion = void 0 !== e.appVersion && null !== e.appVersion ? pe.fromPartial(e.appVersion) : void 0, t.app = void 0 !== e.app && null !== e.app ? we.fromPartial(e.app) : void 0, t
				}
			};
			i.a.set(st.$type, st);
			const dt = {
				$type: "devvit.dev_portal.installation.MultipleInstallationsResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.installations) at.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.installation.MultipleInstallationsResponse",
						installations: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.installations.push(at.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: dt.$type,
					installations: Array.isArray(null == e ? void 0 : e.installations) ? e.installations.map(e => at.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.installations ? t.installations = e.installations.map(e => e ? at.toJSON(e) : void 0) : t.installations = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.installation.MultipleInstallationsResponse",
						installations: []
					};
					return o.installations = (null === (t = e.installations) || void 0 === t ? void 0 : t.map(e => at.fromPartial(e))) || [], o
				}
			};

			function lt(e) {
				return null != e
			}
			i.a.set(dt.$type, dt), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const ut = {
				$type: "devvit.dev_portal.app_version.AppVersionCreationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.appId && t.uint32(10).string(e.appId), 0 !== e.visibility && t.uint32(16).int32(e.visibility), t.uint32(26).fork();
					for (const o of e.validInstallTypes) t.int32(o);
					t.ldelim(), 0 !== e.majorVersion && t.uint32(32).int32(e.majorVersion), 0 !== e.minorVersion && t.uint32(40).int32(e.minorVersion), 0 !== e.patchVersion && t.uint32(48).int32(e.patchVersion), void 0 !== e.prereleaseVersion && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.prereleaseVersion
					}, t.uint32(58).fork()).ldelim();
					for (const o of e.actorBundles) qe.encode(o, t.uint32(66).fork()).ldelim();
					return "" !== e.about && t.uint32(74).string(e.about), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.AppVersionCreationRequest",
						appId: "",
						visibility: 0,
						validInstallTypes: [],
						majorVersion: 0,
						minorVersion: 0,
						patchVersion: 0,
						prereleaseVersion: void 0,
						actorBundles: [],
						about: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.appId = o.string();
								break;
							case 2:
								r.visibility = o.int32();
								break;
							case 3:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.validInstallTypes.push(o.int32())
								} else r.validInstallTypes.push(o.int32());
								break;
							case 4:
								r.majorVersion = o.int32();
								break;
							case 5:
								r.minorVersion = o.int32();
								break;
							case 6:
								r.patchVersion = o.int32();
								break;
							case 7:
								r.prereleaseVersion = ne.b.decode(o, o.uint32()).value;
								break;
							case 8:
								r.actorBundles.push(qe.decode(o, o.uint32()));
								break;
							case 9:
								r.about = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ut.$type,
					appId: bt(e.appId) ? String(e.appId) : "",
					visibility: bt(e.visibility) ? ae(e.visibility) : 0,
					validInstallTypes: Array.isArray(null == e ? void 0 : e.validInstallTypes) ? e.validInstallTypes.map(e => le(e)) : [],
					majorVersion: bt(e.majorVersion) ? Number(e.majorVersion) : 0,
					minorVersion: bt(e.minorVersion) ? Number(e.minorVersion) : 0,
					patchVersion: bt(e.patchVersion) ? Number(e.patchVersion) : 0,
					prereleaseVersion: bt(e.prereleaseVersion) ? Number(e.prereleaseVersion) : void 0,
					actorBundles: Array.isArray(null == e ? void 0 : e.actorBundles) ? e.actorBundles.map(e => qe.fromJSON(e)) : [],
					about: bt(e.about) ? String(e.about) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.appId && (t.appId = e.appId), void 0 !== e.visibility && (t.visibility = se(e.visibility)), e.validInstallTypes ? t.validInstallTypes = e.validInstallTypes.map(e => ue(e)) : t.validInstallTypes = [], void 0 !== e.majorVersion && (t.majorVersion = Math.round(e.majorVersion)), void 0 !== e.minorVersion && (t.minorVersion = Math.round(e.minorVersion)), void 0 !== e.patchVersion && (t.patchVersion = Math.round(e.patchVersion)), void 0 !== e.prereleaseVersion && (t.prereleaseVersion = e.prereleaseVersion), e.actorBundles ? t.actorBundles = e.actorBundles.map(e => e ? qe.toJSON(e) : void 0) : t.actorBundles = [], void 0 !== e.about && (t.about = e.about), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l;
					const u = {
						$type: "devvit.dev_portal.app_version.AppVersionCreationRequest",
						appId: "",
						visibility: 0,
						validInstallTypes: [],
						majorVersion: 0,
						minorVersion: 0,
						patchVersion: 0,
						prereleaseVersion: void 0,
						actorBundles: [],
						about: ""
					};
					return u.appId = null !== (t = e.appId) && void 0 !== t ? t : "", u.visibility = null !== (o = e.visibility) && void 0 !== o ? o : 0, u.validInstallTypes = (null === (i = e.validInstallTypes) || void 0 === i ? void 0 : i.map(e => e)) || [], u.majorVersion = null !== (r = e.majorVersion) && void 0 !== r ? r : 0, u.minorVersion = null !== (n = e.minorVersion) && void 0 !== n ? n : 0, u.patchVersion = null !== (a = e.patchVersion) && void 0 !== a ? a : 0, u.prereleaseVersion = null !== (s = e.prereleaseVersion) && void 0 !== s ? s : void 0, u.actorBundles = (null === (d = e.actorBundles) || void 0 === d ? void 0 : d.map(e => qe.fromPartial(e))) || [], u.about = null !== (l = e.about) && void 0 !== l ? l : "", u
				}
			};
			i.a.set(ut.$type, ut);
			const ct = {
				$type: "devvit.dev_portal.app_version.AppSlugAndVersion",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.slug && t.uint32(10).string(e.slug), "" !== e.version && t.uint32(18).string(e.version), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.AppSlugAndVersion",
						slug: "",
						version: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.slug = o.string();
								break;
							case 2:
								r.version = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ct.$type,
					slug: bt(e.slug) ? String(e.slug) : "",
					version: bt(e.version) ? String(e.version) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.slug && (t.slug = e.slug), void 0 !== e.version && (t.version = e.version), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.app_version.AppSlugAndVersion",
						slug: "",
						version: ""
					};
					return i.slug = null !== (t = e.slug) && void 0 !== t ? t : "", i.version = null !== (o = e.version) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(ct.$type, ct);
			const pt = {
				$type: "devvit.dev_portal.app_version.AppVersionUpdateRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.id && t.uint32(10).string(e.id), void 0 !== e.visibility && ce.encode(e.visibility, t.uint32(18).fork()).ldelim(), void 0 !== e.isTrusted && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isTrusted
					}, t.uint32(26).fork()).ldelim(), t.uint32(34).fork();
					for (const o of e.validInstallTypes) t.int32(o);
					return t.ldelim(), void 0 !== e.about && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.about
					}, t.uint32(42).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.AppVersionUpdateRequest",
						id: "",
						visibility: void 0,
						isTrusted: void 0,
						validInstallTypes: [],
						about: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.visibility = ce.decode(o, o.uint32());
								break;
							case 3:
								r.isTrusted = ne.a.decode(o, o.uint32()).value;
								break;
							case 4:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.validInstallTypes.push(o.int32())
								} else r.validInstallTypes.push(o.int32());
								break;
							case 5:
								r.about = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: pt.$type,
					id: bt(e.id) ? String(e.id) : "",
					visibility: bt(e.visibility) ? ce.fromJSON(e.visibility) : void 0,
					isTrusted: bt(e.isTrusted) ? Boolean(e.isTrusted) : void 0,
					validInstallTypes: Array.isArray(null == e ? void 0 : e.validInstallTypes) ? e.validInstallTypes.map(e => le(e)) : [],
					about: bt(e.about) ? String(e.about) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.visibility && (t.visibility = e.visibility ? ce.toJSON(e.visibility) : void 0), void 0 !== e.isTrusted && (t.isTrusted = e.isTrusted), e.validInstallTypes ? t.validInstallTypes = e.validInstallTypes.map(e => ue(e)) : t.validInstallTypes = [], void 0 !== e.about && (t.about = e.about), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.dev_portal.app_version.AppVersionUpdateRequest",
						id: "",
						visibility: void 0,
						isTrusted: void 0,
						validInstallTypes: [],
						about: void 0
					};
					return n.id = null !== (t = e.id) && void 0 !== t ? t : "", n.visibility = void 0 !== e.visibility && null !== e.visibility ? ce.fromPartial(e.visibility) : void 0, n.isTrusted = null !== (o = e.isTrusted) && void 0 !== o ? o : void 0, n.validInstallTypes = (null === (i = e.validInstallTypes) || void 0 === i ? void 0 : i.map(e => e)) || [], n.about = null !== (r = e.about) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(pt.$type, pt);
			const vt = {
				$type: "devvit.dev_portal.app_version.AppVersionsGetInstallLocationsRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.id && t.uint32(10).string(e.id);
					for (const o of e.pagingInfo) ht.encode(o, t.uint32(18).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.AppVersionsGetInstallLocationsRequest",
						id: "",
						pagingInfo: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.pagingInfo.push(ht.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: vt.$type,
					id: bt(e.id) ? String(e.id) : "",
					pagingInfo: Array.isArray(null == e ? void 0 : e.pagingInfo) ? e.pagingInfo.map(e => ht.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), e.pagingInfo ? t.pagingInfo = e.pagingInfo.map(e => e ? ht.toJSON(e) : void 0) : t.pagingInfo = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.app_version.AppVersionsGetInstallLocationsRequest",
						id: "",
						pagingInfo: []
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.pagingInfo = (null === (o = e.pagingInfo) || void 0 === o ? void 0 : o.map(e => ht.fromPartial(e))) || [], i
				}
			};
			i.a.set(vt.$type, vt);
			const mt = {
				$type: "devvit.dev_portal.app_version.InstallLocationPageInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.type && t.uint32(8).int32(e.type), void 0 !== e.before && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.before
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.after && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.after
					}, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.InstallLocationPageInfo",
						type: 0,
						before: void 0,
						after: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.type = o.int32();
								break;
							case 2:
								r.before = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.after = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: mt.$type,
					type: bt(e.type) ? le(e.type) : 0,
					before: bt(e.before) ? String(e.before) : void 0,
					after: bt(e.after) ? String(e.after) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.type && (t.type = ue(e.type)), void 0 !== e.before && (t.before = e.before), void 0 !== e.after && (t.after = e.after), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.dev_portal.app_version.InstallLocationPageInfo",
						type: 0,
						before: void 0,
						after: void 0
					};
					return r.type = null !== (t = e.type) && void 0 !== t ? t : 0, r.before = null !== (o = e.before) && void 0 !== o ? o : void 0, r.after = null !== (i = e.after) && void 0 !== i ? i : void 0, r
				}
			};
			i.a.set(mt.$type, mt);
			const ft = {
				$type: "devvit.dev_portal.app_version.FullAppVersionInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.appVersion && pe.encode(e.appVersion, t.uint32(10).fork()).ldelim(), void 0 !== e.app && we.encode(e.app, t.uint32(18).fork()).ldelim();
					for (const o of e.actorTypes) Q.encode(o, t.uint32(26).fork()).ldelim();
					for (const o of e.installations) at.encode(o, t.uint32(34).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.FullAppVersionInfo",
						appVersion: void 0,
						app: void 0,
						actorTypes: [],
						installations: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.appVersion = pe.decode(o, o.uint32());
								break;
							case 2:
								r.app = we.decode(o, o.uint32());
								break;
							case 3:
								r.actorTypes.push(Q.decode(o, o.uint32()));
								break;
							case 4:
								r.installations.push(at.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ft.$type,
					appVersion: bt(e.appVersion) ? pe.fromJSON(e.appVersion) : void 0,
					app: bt(e.app) ? we.fromJSON(e.app) : void 0,
					actorTypes: Array.isArray(null == e ? void 0 : e.actorTypes) ? e.actorTypes.map(e => Q.fromJSON(e)) : [],
					installations: Array.isArray(null == e ? void 0 : e.installations) ? e.installations.map(e => at.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.appVersion && (t.appVersion = e.appVersion ? pe.toJSON(e.appVersion) : void 0), void 0 !== e.app && (t.app = e.app ? we.toJSON(e.app) : void 0), e.actorTypes ? t.actorTypes = e.actorTypes.map(e => e ? Q.toJSON(e) : void 0) : t.actorTypes = [], e.installations ? t.installations = e.installations.map(e => e ? at.toJSON(e) : void 0) : t.installations = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.app_version.FullAppVersionInfo",
						appVersion: void 0,
						app: void 0,
						actorTypes: [],
						installations: []
					};
					return i.appVersion = void 0 !== e.appVersion && null !== e.appVersion ? pe.fromPartial(e.appVersion) : void 0, i.app = void 0 !== e.app && null !== e.app ? we.fromPartial(e.app) : void 0, i.actorTypes = (null === (t = e.actorTypes) || void 0 === t ? void 0 : t.map(e => Q.fromPartial(e))) || [], i.installations = (null === (o = e.installations) || void 0 === o ? void 0 : o.map(e => at.fromPartial(e))) || [], i
				}
			};
			i.a.set(ft.$type, ft);
			const gt = {
				$type: "devvit.dev_portal.app_version.ValidInstallLocationsResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.locations) ht.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.ValidInstallLocationsResponse",
						locations: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.locations.push(ht.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: gt.$type,
					locations: Array.isArray(null == e ? void 0 : e.locations) ? e.locations.map(e => ht.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.locations ? t.locations = e.locations.map(e => e ? ht.toJSON(e) : void 0) : t.locations = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app_version.ValidInstallLocationsResponse",
						locations: []
					};
					return o.locations = (null === (t = e.locations) || void 0 === t ? void 0 : t.map(e => ht.fromPartial(e))) || [], o
				}
			};
			i.a.set(gt.$type, gt);
			const ht = {
				$type: "devvit.dev_portal.app_version.InstallLocationInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					0 !== e.type && t.uint32(8).int32(e.type);
					for (const o of e.locations) t.uint32(18).string(o);
					return void 0 !== e.pageInfo && yt.encode(e.pageInfo, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.InstallLocationInfo",
						type: 0,
						locations: [],
						pageInfo: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.type = o.int32();
								break;
							case 2:
								r.locations.push(o.string());
								break;
							case 3:
								r.pageInfo = yt.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ht.$type,
					type: bt(e.type) ? le(e.type) : 0,
					locations: Array.isArray(null == e ? void 0 : e.locations) ? e.locations.map(e => String(e)) : [],
					pageInfo: bt(e.pageInfo) ? yt.fromJSON(e.pageInfo) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.type && (t.type = ue(e.type)), e.locations ? t.locations = e.locations.map(e => e) : t.locations = [], void 0 !== e.pageInfo && (t.pageInfo = e.pageInfo ? yt.toJSON(e.pageInfo) : void 0), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.dev_portal.app_version.InstallLocationInfo",
						type: 0,
						locations: [],
						pageInfo: void 0
					};
					return i.type = null !== (t = e.type) && void 0 !== t ? t : 0, i.locations = (null === (o = e.locations) || void 0 === o ? void 0 : o.map(e => e)) || [], i.pageInfo = void 0 !== e.pageInfo && null !== e.pageInfo ? yt.fromPartial(e.pageInfo) : void 0, i
				}
			};
			i.a.set(ht.$type, ht);
			const yt = {
				$type: "devvit.dev_portal.app_version.PageInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.hasNextPage && t.uint32(8).bool(e.hasNextPage), !0 === e.hasPreviousPage && t.uint32(16).bool(e.hasPreviousPage), "" !== e.startCursor && t.uint32(26).string(e.startCursor), "" !== e.endCursor && t.uint32(34).string(e.endCursor), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app_version.PageInfo",
						hasNextPage: !1,
						hasPreviousPage: !1,
						startCursor: "",
						endCursor: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.hasNextPage = o.bool();
								break;
							case 2:
								r.hasPreviousPage = o.bool();
								break;
							case 3:
								r.startCursor = o.string();
								break;
							case 4:
								r.endCursor = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: yt.$type,
					hasNextPage: !!bt(e.hasNextPage) && Boolean(e.hasNextPage),
					hasPreviousPage: !!bt(e.hasPreviousPage) && Boolean(e.hasPreviousPage),
					startCursor: bt(e.startCursor) ? String(e.startCursor) : "",
					endCursor: bt(e.endCursor) ? String(e.endCursor) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.hasNextPage && (t.hasNextPage = e.hasNextPage), void 0 !== e.hasPreviousPage && (t.hasPreviousPage = e.hasPreviousPage), void 0 !== e.startCursor && (t.startCursor = e.startCursor), void 0 !== e.endCursor && (t.endCursor = e.endCursor), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.dev_portal.app_version.PageInfo",
						hasNextPage: !1,
						hasPreviousPage: !1,
						startCursor: "",
						endCursor: ""
					};
					return n.hasNextPage = null !== (t = e.hasNextPage) && void 0 !== t && t, n.hasPreviousPage = null !== (o = e.hasPreviousPage) && void 0 !== o && o, n.startCursor = null !== (i = e.startCursor) && void 0 !== i ? i : "", n.endCursor = null !== (r = e.endCursor) && void 0 !== r ? r : "", n
				}
			};

			function bt(e) {
				return null != e
			}
			var kt;

			function St(e) {
				switch (e) {
					case 0:
					case "DATE_CREATED":
						return kt.DATE_CREATED;
					case 1:
					case "NAME":
						return kt.NAME;
					case -1:
					case "UNRECOGNIZED":
					default:
						return kt.UNRECOGNIZED
				}
			}
			i.a.set(yt.$type, yt), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.DATE_CREATED = 0] = "DATE_CREATED", e[e.NAME = 1] = "NAME", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(kt || (kt = {}));
			const wt = {
				$type: "devvit.dev_portal.app.AppSearchRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.searchTerm && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.searchTerm
					}, t.uint32(10).fork()).ldelim(), t.uint32(18).fork();
					for (const o of e.categories) t.int32(o);
					return t.ldelim(), void 0 !== e.page && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.page
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.pageSize && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.pageSize
					}, t.uint32(34).fork()).ldelim(), 0 !== e.orderBy && t.uint32(40).int32(e.orderBy), void 0 !== e.isAscending && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isAscending
					}, t.uint32(50).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.AppSearchRequest",
						searchTerm: void 0,
						categories: [],
						page: void 0,
						pageSize: void 0,
						orderBy: 0,
						isAscending: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.searchTerm = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.categories.push(o.int32())
								} else r.categories.push(o.int32());
								break;
							case 3:
								r.page = ne.b.decode(o, o.uint32()).value;
								break;
							case 4:
								r.pageSize = ne.b.decode(o, o.uint32()).value;
								break;
							case 5:
								r.orderBy = o.int32();
								break;
							case 6:
								r.isAscending = ne.a.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: wt.$type,
					searchTerm: It(e.searchTerm) ? String(e.searchTerm) : void 0,
					categories: Array.isArray(null == e ? void 0 : e.categories) ? e.categories.map(e => ke(e)) : [],
					page: It(e.page) ? Number(e.page) : void 0,
					pageSize: It(e.pageSize) ? Number(e.pageSize) : void 0,
					orderBy: It(e.orderBy) ? St(e.orderBy) : 0,
					isAscending: It(e.isAscending) ? Boolean(e.isAscending) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.searchTerm && (t.searchTerm = e.searchTerm), e.categories ? t.categories = e.categories.map(e => Se(e)) : t.categories = [], void 0 !== e.page && (t.page = e.page), void 0 !== e.pageSize && (t.pageSize = e.pageSize), void 0 !== e.orderBy && (t.orderBy = function(e) {
						switch (e) {
							case kt.DATE_CREATED:
								return "DATE_CREATED";
							case kt.NAME:
								return "NAME";
							default:
								return "UNKNOWN"
						}
					}(e.orderBy)), void 0 !== e.isAscending && (t.isAscending = e.isAscending), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.dev_portal.app.AppSearchRequest",
						searchTerm: void 0,
						categories: [],
						page: void 0,
						pageSize: void 0,
						orderBy: 0,
						isAscending: void 0
					};
					return s.searchTerm = null !== (t = e.searchTerm) && void 0 !== t ? t : void 0, s.categories = (null === (o = e.categories) || void 0 === o ? void 0 : o.map(e => e)) || [], s.page = null !== (i = e.page) && void 0 !== i ? i : void 0, s.pageSize = null !== (r = e.pageSize) && void 0 !== r ? r : void 0, s.orderBy = null !== (n = e.orderBy) && void 0 !== n ? n : 0, s.isAscending = null !== (a = e.isAscending) && void 0 !== a ? a : void 0, s
				}
			};
			i.a.set(wt.$type, wt);
			const Ot = {
				$type: "devvit.dev_portal.app.GetAppBySlugRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.slug && t.uint32(10).string(e.slug), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.GetAppBySlugRequest",
						slug: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.slug = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ot.$type,
					slug: It(e.slug) ? String(e.slug) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.slug && (t.slug = e.slug), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app.GetAppBySlugRequest",
						slug: ""
					};
					return o.slug = null !== (t = e.slug) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Ot.$type, Ot);
			const Tt = {
				$type: "devvit.dev_portal.app.AppCreationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.slug && t.uint32(10).string(e.slug), "" !== e.name && t.uint32(18).string(e.name), "" !== e.description && t.uint32(26).string(e.description), !0 === e.isNsfw && t.uint32(32).bool(e.isNsfw), t.uint32(42).fork();
					for (const o of e.categories) t.int32(o);
					return t.ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.AppCreationRequest",
						slug: "",
						name: "",
						description: "",
						isNsfw: !1,
						categories: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.slug = o.string();
								break;
							case 2:
								r.name = o.string();
								break;
							case 3:
								r.description = o.string();
								break;
							case 4:
								r.isNsfw = o.bool();
								break;
							case 5:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.categories.push(o.int32())
								} else r.categories.push(o.int32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Tt.$type,
					slug: It(e.slug) ? String(e.slug) : "",
					name: It(e.name) ? String(e.name) : "",
					description: It(e.description) ? String(e.description) : "",
					isNsfw: !!It(e.isNsfw) && Boolean(e.isNsfw),
					categories: Array.isArray(null == e ? void 0 : e.categories) ? e.categories.map(e => ke(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.slug && (t.slug = e.slug), void 0 !== e.name && (t.name = e.name), void 0 !== e.description && (t.description = e.description), void 0 !== e.isNsfw && (t.isNsfw = e.isNsfw), e.categories ? t.categories = e.categories.map(e => Se(e)) : t.categories = [], t
				},
				fromPartial(e) {
					var t, o, i, r, n;
					const a = {
						$type: "devvit.dev_portal.app.AppCreationRequest",
						slug: "",
						name: "",
						description: "",
						isNsfw: !1,
						categories: []
					};
					return a.slug = null !== (t = e.slug) && void 0 !== t ? t : "", a.name = null !== (o = e.name) && void 0 !== o ? o : "", a.description = null !== (i = e.description) && void 0 !== i ? i : "", a.isNsfw = null !== (r = e.isNsfw) && void 0 !== r && r, a.categories = (null === (n = e.categories) || void 0 === n ? void 0 : n.map(e => e)) || [], a
				}
			};
			i.a.set(Tt.$type, Tt);
			const Nt = {
				$type: "devvit.dev_portal.app.GetPopularAppsRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.limit && t.uint32(8).int32(e.limit), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.GetPopularAppsRequest",
						limit: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.limit = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Nt.$type,
					limit: It(e.limit) ? Number(e.limit) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.limit && (t.limit = Math.round(e.limit)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app.GetPopularAppsRequest",
						limit: 0
					};
					return o.limit = null !== (t = e.limit) && void 0 !== t ? t : 0, o
				}
			};
			i.a.set(Nt.$type, Nt);
			const Rt = {
				$type: "devvit.dev_portal.app.AppUpdateRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.id && t.uint32(10).string(e.id), void 0 !== e.slug && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.slug
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.description && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.description
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.isNsfw && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isNsfw
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.isDelisted && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isDelisted
					}, t.uint32(50).fork()).ldelim(), t.uint32(58).fork();
					for (const o of e.categories) t.int32(o);
					return t.ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.AppUpdateRequest",
						id: "",
						slug: void 0,
						name: void 0,
						description: void 0,
						isNsfw: void 0,
						isDelisted: void 0,
						categories: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.slug = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.description = ne.d.decode(o, o.uint32()).value;
								break;
							case 5:
								r.isNsfw = ne.a.decode(o, o.uint32()).value;
								break;
							case 6:
								r.isDelisted = ne.a.decode(o, o.uint32()).value;
								break;
							case 7:
								if (2 == (7 & e)) {
									const e = o.uint32() + o.pos;
									for (; o.pos < e;) r.categories.push(o.int32())
								} else r.categories.push(o.int32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Rt.$type,
					id: It(e.id) ? String(e.id) : "",
					slug: It(e.slug) ? String(e.slug) : void 0,
					name: It(e.name) ? String(e.name) : void 0,
					description: It(e.description) ? String(e.description) : void 0,
					isNsfw: It(e.isNsfw) ? Boolean(e.isNsfw) : void 0,
					isDelisted: It(e.isDelisted) ? Boolean(e.isDelisted) : void 0,
					categories: Array.isArray(null == e ? void 0 : e.categories) ? e.categories.map(e => ke(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.slug && (t.slug = e.slug), void 0 !== e.name && (t.name = e.name), void 0 !== e.description && (t.description = e.description), void 0 !== e.isNsfw && (t.isNsfw = e.isNsfw), void 0 !== e.isDelisted && (t.isDelisted = e.isDelisted), e.categories ? t.categories = e.categories.map(e => Se(e)) : t.categories = [], t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s;
					const d = {
						$type: "devvit.dev_portal.app.AppUpdateRequest",
						id: "",
						slug: void 0,
						name: void 0,
						description: void 0,
						isNsfw: void 0,
						isDelisted: void 0,
						categories: []
					};
					return d.id = null !== (t = e.id) && void 0 !== t ? t : "", d.slug = null !== (o = e.slug) && void 0 !== o ? o : void 0, d.name = null !== (i = e.name) && void 0 !== i ? i : void 0, d.description = null !== (r = e.description) && void 0 !== r ? r : void 0, d.isNsfw = null !== (n = e.isNsfw) && void 0 !== n ? n : void 0, d.isDelisted = null !== (a = e.isDelisted) && void 0 !== a ? a : void 0, d.categories = (null === (s = e.categories) || void 0 === s ? void 0 : s.map(e => e)) || [], d
				}
			};
			i.a.set(Rt.$type, Rt);
			const $t = {
				$type: "devvit.dev_portal.app.FullAppInfo",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.app && we.encode(e.app, t.uint32(10).fork()).ldelim();
					for (const o of e.versions) pe.encode(o, t.uint32(18).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.FullAppInfo",
						app: void 0,
						versions: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.app = we.decode(o, o.uint32());
								break;
							case 2:
								r.versions.push(pe.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: $t.$type,
					app: It(e.app) ? we.fromJSON(e.app) : void 0,
					versions: Array.isArray(null == e ? void 0 : e.versions) ? e.versions.map(e => pe.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.app && (t.app = e.app ? we.toJSON(e.app) : void 0), e.versions ? t.versions = e.versions.map(e => e ? pe.toJSON(e) : void 0) : t.versions = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.dev_portal.app.FullAppInfo",
						app: void 0,
						versions: []
					};
					return o.app = void 0 !== e.app && null !== e.app ? we.fromPartial(e.app) : void 0, o.versions = (null === (t = e.versions) || void 0 === t ? void 0 : t.map(e => pe.fromPartial(e))) || [], o
				}
			};
			i.a.set($t.$type, $t);
			const Ct = {
				$type: "devvit.dev_portal.app.AppSearchResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.apps) we.encode(o, t.uint32(10).fork()).ldelim();
					return 0 !== e.totalResults && t.uint32(16).int32(e.totalResults), 0 !== e.pageNumber && t.uint32(24).int32(e.pageNumber), 0 !== e.pageSize && t.uint32(32).int32(e.pageSize), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.dev_portal.app.AppSearchResponse",
						apps: [],
						totalResults: 0,
						pageNumber: 0,
						pageSize: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.apps.push(we.decode(o, o.uint32()));
								break;
							case 2:
								r.totalResults = o.int32();
								break;
							case 3:
								r.pageNumber = o.int32();
								break;
							case 4:
								r.pageSize = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ct.$type,
					apps: Array.isArray(null == e ? void 0 : e.apps) ? e.apps.map(e => we.fromJSON(e)) : [],
					totalResults: It(e.totalResults) ? Number(e.totalResults) : 0,
					pageNumber: It(e.pageNumber) ? Number(e.pageNumber) : 0,
					pageSize: It(e.pageSize) ? Number(e.pageSize) : 0
				}),
				toJSON(e) {
					const t = {};
					return e.apps ? t.apps = e.apps.map(e => e ? we.toJSON(e) : void 0) : t.apps = [], void 0 !== e.totalResults && (t.totalResults = Math.round(e.totalResults)), void 0 !== e.pageNumber && (t.pageNumber = Math.round(e.pageNumber)), void 0 !== e.pageSize && (t.pageSize = Math.round(e.pageSize)), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.dev_portal.app.AppSearchResponse",
						apps: [],
						totalResults: 0,
						pageNumber: 0,
						pageSize: 0
					};
					return n.apps = (null === (t = e.apps) || void 0 === t ? void 0 : t.map(e => we.fromPartial(e))) || [], n.totalResults = null !== (o = e.totalResults) && void 0 !== o ? o : 0, n.pageNumber = null !== (i = e.pageNumber) && void 0 !== i ? i : 0, n.pageSize = null !== (r = e.pageSize) && void 0 !== r ? r : 0, n
				}
			};

			function It(e) {
				return null != e
			}
			i.a.set(Ct.$type, Ct), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Et = {
				$type: "devvit.UUID",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.UUID",
						id: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: Et.$type,
						id: (t = e.id, null != t ? String(e.id) : "")
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.UUID",
						id: ""
					};
					return o.id = null !== (t = e.id) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Et.$type, Et), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			d.a;
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const At = {
				$type: "devvit.gql.SubredditContextActions",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.actorHostname && t.uint32(10).string(e.actorHostname), void 0 !== e.actions && M.encode(e.actions, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.gql.SubredditContextActions",
						actorHostname: "",
						actions: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actorHostname = o.string();
								break;
							case 2:
								r.actions = M.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: At.$type,
					actorHostname: xt(e.actorHostname) ? String(e.actorHostname) : "",
					actions: xt(e.actions) ? M.fromJSON(e.actions) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actorHostname && (t.actorHostname = e.actorHostname), void 0 !== e.actions && (t.actions = e.actions ? M.toJSON(e.actions) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.gql.SubredditContextActions",
						actorHostname: "",
						actions: void 0
					};
					return o.actorHostname = null !== (t = e.actorHostname) && void 0 !== t ? t : "", o.actions = void 0 !== e.actions && null !== e.actions ? M.fromPartial(e.actions) : void 0, o
				}
			};
			i.a.set(At.$type, At);
			const Pt = {
				$type: "devvit.gql.DevvitSubredditMetadata",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.installedRemoteApps) De.encode(o, t.uint32(10).fork()).ldelim();
					for (const o of e.contextActions) At.encode(o, t.uint32(18).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.gql.DevvitSubredditMetadata",
						installedRemoteApps: [],
						contextActions: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.installedRemoteApps.push(De.decode(o, o.uint32()));
								break;
							case 2:
								r.contextActions.push(At.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Pt.$type,
					installedRemoteApps: Array.isArray(null == e ? void 0 : e.installedRemoteApps) ? e.installedRemoteApps.map(e => De.fromJSON(e)) : [],
					contextActions: Array.isArray(null == e ? void 0 : e.contextActions) ? e.contextActions.map(e => At.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.installedRemoteApps ? t.installedRemoteApps = e.installedRemoteApps.map(e => e ? De.toJSON(e) : void 0) : t.installedRemoteApps = [], e.contextActions ? t.contextActions = e.contextActions.map(e => e ? At.toJSON(e) : void 0) : t.contextActions = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.gql.DevvitSubredditMetadata",
						installedRemoteApps: [],
						contextActions: []
					};
					return i.installedRemoteApps = (null === (t = e.installedRemoteApps) || void 0 === t ? void 0 : t.map(e => De.fromPartial(e))) || [], i.contextActions = (null === (o = e.contextActions) || void 0 === o ? void 0 : o.map(e => At.fromPartial(e))) || [], i
				}
			};

			function xt(e) {
				return null != e
			}
			i.a.set(Pt.$type, Pt), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Ft = {
				$type: "devvit.plugin.builder.BuildResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.bundle && De.encode(e.bundle, t.uint32(10).fork()).ldelim();
					for (const o of e.errors) Ge.encode(o, t.uint32(18).fork()).ldelim();
					for (const o of e.warnings) Ge.encode(o, t.uint32(26).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.builder.BuildResponse",
						bundle: void 0,
						errors: [],
						warnings: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.bundle = De.decode(o, o.uint32());
								break;
							case 2:
								r.errors.push(Ge.decode(o, o.uint32()));
								break;
							case 3:
								r.warnings.push(Ge.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: Ft.$type,
						bundle: (t = e.bundle, null != t ? De.fromJSON(e.bundle) : void 0),
						errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => Ge.fromJSON(e)) : [],
						warnings: Array.isArray(null == e ? void 0 : e.warnings) ? e.warnings.map(e => Ge.fromJSON(e)) : []
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.bundle && (t.bundle = e.bundle ? De.toJSON(e.bundle) : void 0), e.errors ? t.errors = e.errors.map(e => e ? Ge.toJSON(e) : void 0) : t.errors = [], e.warnings ? t.warnings = e.warnings.map(e => e ? Ge.toJSON(e) : void 0) : t.warnings = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.builder.BuildResponse",
						bundle: void 0,
						errors: [],
						warnings: []
					};
					return i.bundle = void 0 !== e.bundle && null !== e.bundle ? De.fromPartial(e.bundle) : void 0, i.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => Ge.fromPartial(e))) || [], i.warnings = (null === (o = e.warnings) || void 0 === o ? void 0 : o.map(e => Ge.fromPartial(e))) || [], i
				}
			};
			i.a.set(Ft.$type, Ft);
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const jt = {
				name: "Clock",
				fullName: "devvit.plugin.clock.Clock",
				methods: {
					now: {
						name: "Now",
						requestType: d.a,
						requestStream: !1,
						responseType: re.a,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			o("./node_modules/core-js/modules/web.dom.iterable.js");
			const Mt = {
				$type: "devvit.plugin.devserver.TestCasesList",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.actorName && t.uint32(10).string(e.actorName);
					for (const o of e.testCases) Dt.encode(o, t.uint32(18).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.TestCasesList",
						actorName: "",
						testCases: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actorName = o.string();
								break;
							case 2:
								r.testCases.push(Dt.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Mt.$type,
					actorName: Jt(e.actorName) ? String(e.actorName) : "",
					testCases: Array.isArray(null == e ? void 0 : e.testCases) ? e.testCases.map(e => Dt.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actorName && (t.actorName = e.actorName), e.testCases ? t.testCases = e.testCases.map(e => e ? Dt.toJSON(e) : void 0) : t.testCases = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.devserver.TestCasesList",
						actorName: "",
						testCases: []
					};
					return i.actorName = null !== (t = e.actorName) && void 0 !== t ? t : "", i.testCases = (null === (o = e.testCases) || void 0 === o ? void 0 : o.map(e => Dt.fromPartial(e))) || [], i
				}
			};
			i.a.set(Mt.$type, Mt);
			const Dt = {
				$type: "devvit.plugin.devserver.TestCase",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.methodName && t.uint32(10).string(e.methodName), "" !== e.testName && t.uint32(18).string(e.testName), "" !== e.testInput && t.uint32(26).string(e.testInput), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.TestCase",
						methodName: "",
						testName: "",
						testInput: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.methodName = o.string();
								break;
							case 2:
								r.testName = o.string();
								break;
							case 3:
								r.testInput = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Dt.$type,
					methodName: Jt(e.methodName) ? String(e.methodName) : "",
					testName: Jt(e.testName) ? String(e.testName) : "",
					testInput: Jt(e.testInput) ? String(e.testInput) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.methodName && (t.methodName = e.methodName), void 0 !== e.testName && (t.testName = e.testName), void 0 !== e.testInput && (t.testInput = e.testInput), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.devserver.TestCase",
						methodName: "",
						testName: "",
						testInput: ""
					};
					return r.methodName = null !== (t = e.methodName) && void 0 !== t ? t : "", r.testName = null !== (o = e.testName) && void 0 !== o ? o : "", r.testInput = null !== (i = e.testInput) && void 0 !== i ? i : "", r
				}
			};

			function Jt(e) {
				return null != e
			}
			i.a.set(Dt.$type, Dt), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const _t = {
				$type: "devvit.plugin.devserver.ProjectListRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.projectRootDirectory && t.uint32(10).string(e.projectRootDirectory), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectListRequest",
						projectRootDirectory: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.projectRootDirectory = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: _t.$type,
					projectRootDirectory: zt(e.projectRootDirectory) ? String(e.projectRootDirectory) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.projectRootDirectory && (t.projectRootDirectory = e.projectRootDirectory), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.devserver.ProjectListRequest",
						projectRootDirectory: ""
					};
					return o.projectRootDirectory = null !== (t = e.projectRootDirectory) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(_t.$type, _t);
			const Bt = {
				$type: "devvit.plugin.devserver.ProjectBuildProblems",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.warnings) Ge.encode(o, t.uint32(10).fork()).ldelim();
					for (const o of e.errors) Ge.encode(o, t.uint32(18).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectBuildProblems",
						warnings: [],
						errors: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.warnings.push(Ge.decode(o, o.uint32()));
								break;
							case 2:
								r.errors.push(Ge.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Bt.$type,
					warnings: Array.isArray(null == e ? void 0 : e.warnings) ? e.warnings.map(e => Ge.fromJSON(e)) : [],
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => Ge.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.warnings ? t.warnings = e.warnings.map(e => e ? Ge.toJSON(e) : void 0) : t.warnings = [], e.errors ? t.errors = e.errors.map(e => e ? Ge.toJSON(e) : void 0) : t.errors = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.devserver.ProjectBuildProblems",
						warnings: [],
						errors: []
					};
					return i.warnings = (null === (t = e.warnings) || void 0 === t ? void 0 : t.map(e => Ge.fromPartial(e))) || [], i.errors = (null === (o = e.errors) || void 0 === o ? void 0 : o.map(e => Ge.fromPartial(e))) || [], i
				}
			};
			i.a.set(Bt.$type, Bt);
			const Vt = {
				$type: "devvit.plugin.devserver.ProjectListingResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.projectRootDirectory && t.uint32(10).string(e.projectRootDirectory), void 0 !== e.projectFileSystem && Be.encode(e.projectFileSystem, t.uint32(18).fork()).ldelim(), Object.entries(e.buildProblems).forEach(e => {
						let [o, i] = e;
						Lt.encode({
							$type: "devvit.plugin.devserver.ProjectListingResponse.BuildProblemsEntry",
							key: o,
							value: i
						}, t.uint32(26).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectListingResponse",
						projectRootDirectory: "",
						projectFileSystem: void 0,
						buildProblems: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.projectRootDirectory = o.string();
								break;
							case 2:
								r.projectFileSystem = Be.decode(o, o.uint32());
								break;
							case 3:
								const t = Lt.decode(o, o.uint32());
								void 0 !== t.value && (r.buildProblems[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Vt.$type,
					projectRootDirectory: zt(e.projectRootDirectory) ? String(e.projectRootDirectory) : "",
					projectFileSystem: zt(e.projectFileSystem) ? Be.fromJSON(e.projectFileSystem) : void 0,
					buildProblems: Ht(e.buildProblems) ? Object.entries(e.buildProblems).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = Bt.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.projectRootDirectory && (t.projectRootDirectory = e.projectRootDirectory), void 0 !== e.projectFileSystem && (t.projectFileSystem = e.projectFileSystem ? Be.toJSON(e.projectFileSystem) : void 0), t.buildProblems = {}, e.buildProblems && Object.entries(e.buildProblems).forEach(e => {
						let [o, i] = e;
						t.buildProblems[o] = Bt.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.devserver.ProjectListingResponse",
						projectRootDirectory: "",
						projectFileSystem: void 0,
						buildProblems: {}
					};
					return i.projectRootDirectory = null !== (t = e.projectRootDirectory) && void 0 !== t ? t : "", i.projectFileSystem = void 0 !== e.projectFileSystem && null !== e.projectFileSystem ? Be.fromPartial(e.projectFileSystem) : void 0, i.buildProblems = Object.entries(null !== (o = e.buildProblems) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = Bt.fromPartial(i)), e
					}, {}), i
				}
			};
			i.a.set(Vt.$type, Vt);
			const Lt = {
				$type: "devvit.plugin.devserver.ProjectListingResponse.BuildProblemsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && Bt.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectListingResponse.BuildProblemsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = Bt.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Lt.$type,
					key: zt(e.key) ? String(e.key) : "",
					value: zt(e.value) ? Bt.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? Bt.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.devserver.ProjectListingResponse.BuildProblemsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? Bt.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Lt.$type, Lt);
			const Ut = {
				$type: "devvit.plugin.devserver.ProjectUpdatesRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.projectRootDirectory && t.uint32(10).string(e.projectRootDirectory), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectUpdatesRequest",
						projectRootDirectory: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.projectRootDirectory = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ut.$type,
					projectRootDirectory: zt(e.projectRootDirectory) ? String(e.projectRootDirectory) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.projectRootDirectory && (t.projectRootDirectory = e.projectRootDirectory), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.devserver.ProjectUpdatesRequest",
						projectRootDirectory: ""
					};
					return o.projectRootDirectory = null !== (t = e.projectRootDirectory) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Ut.$type, Ut);
			const qt = {
				$type: "devvit.plugin.devserver.ProjectUpdateResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.projectRootDirectory && t.uint32(10).string(e.projectRootDirectory), void 0 !== e.file && _e.encode(e.file, t.uint32(18).fork()).ldelim(), void 0 !== e.linkedBundle && De.encode(e.linkedBundle, t.uint32(26).fork()).ldelim(), "" !== e.actorPath && t.uint32(34).string(e.actorPath), Object.entries(e.buildProblems).forEach(e => {
						let [o, i] = e;
						Wt.encode({
							$type: "devvit.plugin.devserver.ProjectUpdateResponse.BuildProblemsEntry",
							key: o,
							value: i
						}, t.uint32(42).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectUpdateResponse",
						projectRootDirectory: "",
						file: void 0,
						linkedBundle: void 0,
						actorPath: "",
						buildProblems: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.projectRootDirectory = o.string();
								break;
							case 2:
								r.file = _e.decode(o, o.uint32());
								break;
							case 3:
								r.linkedBundle = De.decode(o, o.uint32());
								break;
							case 4:
								r.actorPath = o.string();
								break;
							case 5:
								const t = Wt.decode(o, o.uint32());
								void 0 !== t.value && (r.buildProblems[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: qt.$type,
					projectRootDirectory: zt(e.projectRootDirectory) ? String(e.projectRootDirectory) : "",
					file: zt(e.file) ? _e.fromJSON(e.file) : void 0,
					linkedBundle: zt(e.linkedBundle) ? De.fromJSON(e.linkedBundle) : void 0,
					actorPath: zt(e.actorPath) ? String(e.actorPath) : "",
					buildProblems: Ht(e.buildProblems) ? Object.entries(e.buildProblems).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = Bt.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.projectRootDirectory && (t.projectRootDirectory = e.projectRootDirectory), void 0 !== e.file && (t.file = e.file ? _e.toJSON(e.file) : void 0), void 0 !== e.linkedBundle && (t.linkedBundle = e.linkedBundle ? De.toJSON(e.linkedBundle) : void 0), void 0 !== e.actorPath && (t.actorPath = e.actorPath), t.buildProblems = {}, e.buildProblems && Object.entries(e.buildProblems).forEach(e => {
						let [o, i] = e;
						t.buildProblems[o] = Bt.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.devserver.ProjectUpdateResponse",
						projectRootDirectory: "",
						file: void 0,
						linkedBundle: void 0,
						actorPath: "",
						buildProblems: {}
					};
					return r.projectRootDirectory = null !== (t = e.projectRootDirectory) && void 0 !== t ? t : "", r.file = void 0 !== e.file && null !== e.file ? _e.fromPartial(e.file) : void 0, r.linkedBundle = void 0 !== e.linkedBundle && null !== e.linkedBundle ? De.fromPartial(e.linkedBundle) : void 0, r.actorPath = null !== (o = e.actorPath) && void 0 !== o ? o : "", r.buildProblems = Object.entries(null !== (i = e.buildProblems) && void 0 !== i ? i : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = Bt.fromPartial(i)), e
					}, {}), r
				}
			};
			i.a.set(qt.$type, qt);
			const Wt = {
				$type: "devvit.plugin.devserver.ProjectUpdateResponse.BuildProblemsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && Bt.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.ProjectUpdateResponse.BuildProblemsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = Bt.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Wt.$type,
					key: zt(e.key) ? String(e.key) : "",
					value: zt(e.value) ? Bt.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? Bt.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.devserver.ProjectUpdateResponse.BuildProblemsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? Bt.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Wt.$type, Wt);
			const Gt = {
				$type: "devvit.plugin.devserver.TestCasesRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.actorName && t.uint32(10).string(e.actorName), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.devserver.TestCasesRequest",
						actorName: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.actorName = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Gt.$type,
					actorName: zt(e.actorName) ? String(e.actorName) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.actorName && (t.actorName = e.actorName), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.devserver.TestCasesRequest",
						actorName: ""
					};
					return o.actorName = null !== (t = e.actorName) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Gt.$type, Gt);
			d.a;

			function Ht(e) {
				return "object" == typeof e && null !== e
			}

			function zt(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			o("./node_modules/@devvit/protos/types/devvit/plugin/gl/glrenderer.js"), o("./node_modules/@devvit/protos/types/devvit/plugin/gl/methods.js"), o("./node_modules/@devvit/protos/types/devvit/plugin/gl/methodtype.js");
			var Yt, Zt = o("./node_modules/@devvit/protos/types/devvit/plugin/http/http.js");

			function Xt(e) {
				switch (e) {
					case 0:
					case "ADDED":
						return Yt.ADDED;
					case 1:
					case "REMOVED":
						return Yt.REMOVED;
					case 2:
					case "CHANGED":
						return Yt.CHANGED;
					case 3:
					case "SUBSCRIBED":
						return Yt.SUBSCRIBED;
					case -1:
					case "UNRECOGNIZED":
					default:
						return Yt.UNRECOGNIZED
				}
			}! function(e) {
				e[e.ADDED = 0] = "ADDED", e[e.REMOVED = 1] = "REMOVED", e[e.CHANGED = 2] = "CHANGED", e[e.SUBSCRIBED = 3] = "SUBSCRIBED", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(Yt || (Yt = {}));
			const Kt = {
				$type: "devvit.plugin.inspector.InspectorQuery",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.type && t.uint32(10).string(e.type), "" !== e.hostname && t.uint32(18).string(e.hostname), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.inspector.InspectorQuery",
						type: "",
						hostname: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.type = o.string();
								break;
							case 2:
								r.hostname = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Kt.$type,
					type: io(e.type) ? String(e.type) : "",
					hostname: io(e.hostname) ? String(e.hostname) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.type && (t.type = e.type), void 0 !== e.hostname && (t.hostname = e.hostname), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.inspector.InspectorQuery",
						type: "",
						hostname: ""
					};
					return i.type = null !== (t = e.type) && void 0 !== t ? t : "", i.hostname = null !== (o = e.hostname) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(Kt.$type, Kt);
			const Qt = {
				$type: "devvit.plugin.inspector.InspectorDescription",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.provides) Ce.encode(o, t.uint32(10).fork()).ldelim();
					return "" !== e.hostname && t.uint32(18).string(e.hostname), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.inspector.InspectorDescription",
						provides: [],
						hostname: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.provides.push(Ce.decode(o, o.uint32()));
								break;
							case 2:
								r.hostname = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Qt.$type,
					provides: Array.isArray(null == e ? void 0 : e.provides) ? e.provides.map(e => Ce.fromJSON(e)) : [],
					hostname: io(e.hostname) ? String(e.hostname) : ""
				}),
				toJSON(e) {
					const t = {};
					return e.provides ? t.provides = e.provides.map(e => e ? Ce.toJSON(e) : void 0) : t.provides = [], void 0 !== e.hostname && (t.hostname = e.hostname), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.inspector.InspectorDescription",
						provides: [],
						hostname: ""
					};
					return i.provides = (null === (t = e.provides) || void 0 === t ? void 0 : t.map(e => Ce.fromPartial(e))) || [], i.hostname = null !== (o = e.hostname) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(Qt.$type, Qt);
			const eo = {
				$type: "devvit.plugin.inspector.InspectorDescriptions",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.descriptions) Qt.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.inspector.InspectorDescriptions",
						descriptions: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.descriptions.push(Qt.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: eo.$type,
					descriptions: Array.isArray(null == e ? void 0 : e.descriptions) ? e.descriptions.map(e => Qt.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.descriptions ? t.descriptions = e.descriptions.map(e => e ? Qt.toJSON(e) : void 0) : t.descriptions = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.inspector.InspectorDescriptions",
						descriptions: []
					};
					return o.descriptions = (null === (t = e.descriptions) || void 0 === t ? void 0 : t.map(e => Qt.fromPartial(e))) || [], o
				}
			};
			i.a.set(eo.$type, eo);
			const to = {
				$type: "devvit.plugin.inspector.InspectorUpdate",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.description && Qt.encode(e.description, t.uint32(10).fork()).ldelim(), 0 !== e.type && t.uint32(16).int32(e.type), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.inspector.InspectorUpdate",
						description: void 0,
						type: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.description = Qt.decode(o, o.uint32());
								break;
							case 2:
								r.type = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: to.$type,
					description: io(e.description) ? Qt.fromJSON(e.description) : void 0,
					type: io(e.type) ? Xt(e.type) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.description && (t.description = e.description ? Qt.toJSON(e.description) : void 0), void 0 !== e.type && (t.type = function(e) {
						switch (e) {
							case Yt.ADDED:
								return "ADDED";
							case Yt.REMOVED:
								return "REMOVED";
							case Yt.CHANGED:
								return "CHANGED";
							case Yt.SUBSCRIBED:
								return "SUBSCRIBED";
							default:
								return "UNKNOWN"
						}
					}(e.type)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.inspector.InspectorUpdate",
						description: void 0,
						type: 0
					};
					return o.description = void 0 !== e.description && null !== e.description ? Qt.fromPartial(e.description) : void 0, o.type = null !== (t = e.type) && void 0 !== t ? t : 0, o
				}
			};
			i.a.set(to.$type, to);
			const oo = {
				name: "Inspector",
				fullName: "devvit.plugin.inspector.Inspector",
				methods: {
					listActors: {
						name: "ListActors",
						requestType: Kt,
						requestStream: !1,
						responseType: eo,
						responseStream: !1,
						options: {}
					},
					actorChanges: {
						name: "ActorChanges",
						requestType: d.a,
						requestStream: !1,
						responseType: to,
						responseStream: !0,
						options: {}
					}
				}
			};

			function io(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const ro = {
				$type: "devvit.plugin.kvstore.MessageSet",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						no.encode({
							$type: "devvit.plugin.kvstore.MessageSet.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(10).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.kvstore.MessageSet",
						messages: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								const t = no.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: ro.$type,
						messages: (t = e.messages, "object" == typeof t && null !== t ? Object.entries(e.messages).reduce((e, t) => {
							let [o, i] = t;
							return e[o] = String(i), e
						}, {}) : {})
					};
					var t
				},
				toJSON(e) {
					const t = {
						messages: {}
					};
					return e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = i
					}), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.kvstore.MessageSet",
						messages: {}
					};
					return o.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = String(i)), e
					}, {}), o
				}
			};
			i.a.set(ro.$type, ro);
			const no = {
				$type: "devvit.plugin.kvstore.MessageSet.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), "" !== e.value && t.uint32(18).string(e.value), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.kvstore.MessageSet.MessagesEntry",
						key: "",
						value: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: no.$type,
					key: uo(e.key) ? String(e.key) : "",
					value: uo(e.value) ? String(e.value) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.kvstore.MessageSet.MessagesEntry",
						key: "",
						value: ""
					};
					return i.key = null !== (t = e.key) && void 0 !== t ? t : "", i.value = null !== (o = e.value) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(no.$type, no);
			const ao = {
				$type: "devvit.plugin.kvstore.KeySet",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.keys) t.uint32(10).string(o);
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.kvstore.KeySet",
						keys: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.keys.push(o.string());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ao.$type,
					keys: Array.isArray(null == e ? void 0 : e.keys) ? e.keys.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.keys ? t.keys = e.keys.map(e => e) : t.keys = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.kvstore.KeySet",
						keys: []
					};
					return o.keys = (null === (t = e.keys) || void 0 === t ? void 0 : t.map(e => e)) || [], o
				}
			};
			i.a.set(ao.$type, ao);
			const so = {
				$type: "devvit.plugin.kvstore.ListFilter",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.filter && t.uint32(10).string(e.filter), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.kvstore.ListFilter",
						filter: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.filter = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: so.$type,
					filter: uo(e.filter) ? String(e.filter) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.filter && (t.filter = e.filter), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.kvstore.ListFilter",
						filter: ""
					};
					return o.filter = null !== (t = e.filter) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(so.$type, so);
			const lo = {
				name: "KVStore",
				fullName: "devvit.plugin.kvstore.KVStore",
				methods: {
					put: {
						name: "Put",
						requestType: ro,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					get: {
						name: "Get",
						requestType: ao,
						requestStream: !1,
						responseType: ro,
						responseStream: !1,
						options: {}
					},
					del: {
						name: "Del",
						requestType: ao,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					list: {
						name: "List",
						requestType: so,
						requestStream: !1,
						responseType: ao,
						responseStream: !1,
						options: {}
					}
				}
			};

			function uo(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const co = {
				$type: "devvit.plugin.linker.Resolution",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.bundle && qe.encode(e.bundle, t.uint32(10).fork()).ldelim(), void 0 !== e.error && po.encode(e.error, t.uint32(18).fork()).ldelim(), void 0 !== e.plugin && Qt.encode(e.plugin, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.linker.Resolution",
						bundle: void 0,
						error: void 0,
						plugin: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.bundle = qe.decode(o, o.uint32());
								break;
							case 2:
								r.error = po.decode(o, o.uint32());
								break;
							case 3:
								r.plugin = Qt.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: co.$type,
					bundle: vo(e.bundle) ? qe.fromJSON(e.bundle) : void 0,
					error: vo(e.error) ? po.fromJSON(e.error) : void 0,
					plugin: vo(e.plugin) ? Qt.fromJSON(e.plugin) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.bundle && (t.bundle = e.bundle ? qe.toJSON(e.bundle) : void 0), void 0 !== e.error && (t.error = e.error ? po.toJSON(e.error) : void 0), void 0 !== e.plugin && (t.plugin = e.plugin ? Qt.toJSON(e.plugin) : void 0), t
				},
				fromPartial(e) {
					const t = {
						$type: "devvit.plugin.linker.Resolution",
						bundle: void 0,
						error: void 0,
						plugin: void 0
					};
					return t.bundle = void 0 !== e.bundle && null !== e.bundle ? qe.fromPartial(e.bundle) : void 0, t.error = void 0 !== e.error && null !== e.error ? po.fromPartial(e.error) : void 0, t.plugin = void 0 !== e.plugin && null !== e.plugin ? Qt.fromPartial(e.plugin) : void 0, t
				}
			};
			i.a.set(co.$type, co);
			const po = {
				$type: "devvit.plugin.linker.ResolutionError",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.query && je.encode(e.query, t.uint32(10).fork()).ldelim(), "" !== e.text && t.uint32(18).string(e.text), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.linker.ResolutionError",
						query: void 0,
						text: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.query = je.decode(o, o.uint32());
								break;
							case 2:
								r.text = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: po.$type,
					query: vo(e.query) ? je.fromJSON(e.query) : void 0,
					text: vo(e.text) ? String(e.text) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.query && (t.query = e.query ? je.toJSON(e.query) : void 0), void 0 !== e.text && (t.text = e.text), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.linker.ResolutionError",
						query: void 0,
						text: ""
					};
					return o.query = void 0 !== e.query && null !== e.query ? je.fromPartial(e.query) : void 0, o.text = null !== (t = e.text) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(po.$type, po);
			d.a, d.a;

			function vo(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const mo = {
				$type: "devvit.plugin.linker.LinkerResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.bundle && De.encode(e.bundle, t.uint32(10).fork()).ldelim();
					for (const o of e.errors) po.encode(o, t.uint32(18).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.linker.LinkerResponse",
						bundle: void 0,
						errors: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.bundle = De.decode(o, o.uint32());
								break;
							case 2:
								r.errors.push(po.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: mo.$type,
						bundle: (t = e.bundle, null != t ? De.fromJSON(e.bundle) : void 0),
						errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => po.fromJSON(e)) : []
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.bundle && (t.bundle = e.bundle ? De.toJSON(e.bundle) : void 0), e.errors ? t.errors = e.errors.map(e => e ? po.toJSON(e) : void 0) : t.errors = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.linker.LinkerResponse",
						bundle: void 0,
						errors: []
					};
					return o.bundle = void 0 !== e.bundle && null !== e.bundle ? De.fromPartial(e.bundle) : void 0, o.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => po.fromPartial(e))) || [], o
				}
			};
			i.a.set(mo.$type, mo);
			var fo;

			function go(e) {
				switch (e) {
					case 0:
					case "DEBUG":
						return fo.DEBUG;
					case 1:
					case "INFO":
						return fo.INFO;
					case 2:
					case "WARN":
						return fo.WARN;
					case 3:
					case "ERROR":
						return fo.ERROR;
					case -1:
					case "UNRECOGNIZED":
					default:
						return fo.UNRECOGNIZED
				}
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()),
				function(e) {
					e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(fo || (fo = {}));
			const ho = {
				$type: "devvit.plugin.logger.LogMessage",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.severity && t.uint32(8).int32(e.severity), "" !== e.message && t.uint32(18).string(e.message), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.logger.LogMessage",
						severity: 0,
						message: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.severity = o.int32();
								break;
							case 2:
								r.message = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ho.$type,
					severity: yo(e.severity) ? go(e.severity) : 0,
					message: yo(e.message) ? String(e.message) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.severity && (t.severity = function(e) {
						switch (e) {
							case fo.DEBUG:
								return "DEBUG";
							case fo.INFO:
								return "INFO";
							case fo.WARN:
								return "WARN";
							case fo.ERROR:
								return "ERROR";
							default:
								return "UNKNOWN"
						}
					}(e.severity)), void 0 !== e.message && (t.message = e.message), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.logger.LogMessage",
						severity: 0,
						message: ""
					};
					return i.severity = null !== (t = e.severity) && void 0 !== t ? t : 0, i.message = null !== (o = e.message) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(ho.$type, ho);
			d.a;

			function yo(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var bo = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/common/common_msg.js"),
				ko = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/flair/flair_msg.js");
			const So = {
				name: "Flair",
				fullName: "devvit.plugin.redditapi.flair.Flair",
				methods: {
					clearFlairTemplates: {
						name: "ClearFlairTemplates",
						requestType: ko.a,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					deleteFlair: {
						name: "DeleteFlair",
						requestType: ko.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					deleteFlairTemplate: {
						name: "DeleteFlairTemplate",
						requestType: ko.c,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					flair: {
						name: "Flair",
						requestType: ko.k,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					flairTemplateOrder: {
						name: "FlairTemplateOrder",
						requestType: ko.n,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					flairConfig: {
						name: "FlairConfig",
						requestType: ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					flairCsv: {
						name: "FlairCsv",
						requestType: ko.f,
						requestStream: !1,
						responseType: ko.g,
						responseStream: !1,
						options: {}
					},
					flairList: {
						name: "FlairList",
						requestType: ko.h,
						requestStream: !1,
						responseType: ko.i,
						responseStream: !1,
						options: {}
					},
					flairSelector: {
						name: "FlairSelector",
						requestType: ko.l,
						requestStream: !1,
						responseType: ko.m,
						responseStream: !1,
						options: {}
					},
					flairTemplate: {
						name: "FlairTemplate",
						requestType: ko.o,
						requestStream: !1,
						responseType: ko.j,
						responseStream: !1,
						options: {}
					},
					linkFlair: {
						name: "LinkFlair",
						requestType: ko.p,
						requestStream: !1,
						responseType: ko.d,
						responseStream: !1,
						options: {}
					},
					selectFlair: {
						name: "SelectFlair",
						requestType: ko.q,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					setFlairEnabled: {
						name: "SetFlairEnabled",
						requestType: ko.r,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					userFlair: {
						name: "UserFlair",
						requestType: d.a,
						requestStream: !1,
						responseType: ko.d,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const wo = {
				$type: "devvit.plugin.redditapi.linksandcomments.CommentRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.returnRtjson && t.uint32(8).bool(e.returnRtjson), "" !== e.richtextJson && t.uint32(18).string(e.richtextJson), "" !== e.text && t.uint32(26).string(e.text), "" !== e.thingId && t.uint32(34).string(e.thingId), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.CommentRequest",
						returnRtjson: !1,
						richtextJson: "",
						text: "",
						thingId: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.returnRtjson = o.bool();
								break;
							case 2:
								r.richtextJson = o.string();
								break;
							case 3:
								r.text = o.string();
								break;
							case 4:
								r.thingId = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: wo.$type,
					returnRtjson: !!zo(e.returnRtjson) && Boolean(e.returnRtjson),
					richtextJson: zo(e.richtextJson) ? String(e.richtextJson) : "",
					text: zo(e.text) ? String(e.text) : "",
					thingId: zo(e.thingId) ? String(e.thingId) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.returnRtjson && (t.returnRtjson = e.returnRtjson), void 0 !== e.richtextJson && (t.richtextJson = e.richtextJson), void 0 !== e.text && (t.text = e.text), void 0 !== e.thingId && (t.thingId = e.thingId), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.linksandcomments.CommentRequest",
						returnRtjson: !1,
						richtextJson: "",
						text: "",
						thingId: ""
					};
					return n.returnRtjson = null !== (t = e.returnRtjson) && void 0 !== t && t, n.richtextJson = null !== (o = e.richtextJson) && void 0 !== o ? o : "", n.text = null !== (i = e.text) && void 0 !== i ? i : "", n.thingId = null !== (r = e.thingId) && void 0 !== r ? r : "", n
				}
			};
			i.a.set(wo.$type, wo);
			const Oo = {
				$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.eventEnd && t.uint32(10).string(e.eventEnd), "" !== e.eventStart && t.uint32(18).string(e.eventStart), "" !== e.eventTz && t.uint32(26).string(e.eventTz), "" !== e.id && t.uint32(34).string(e.id), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeRequest",
						eventEnd: "",
						eventStart: "",
						eventTz: "",
						id: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.eventEnd = o.string();
								break;
							case 2:
								r.eventStart = o.string();
								break;
							case 3:
								r.eventTz = o.string();
								break;
							case 4:
								r.id = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Oo.$type,
					eventEnd: zo(e.eventEnd) ? String(e.eventEnd) : "",
					eventStart: zo(e.eventStart) ? String(e.eventStart) : "",
					eventTz: zo(e.eventTz) ? String(e.eventTz) : "",
					id: zo(e.id) ? String(e.id) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.eventEnd && (t.eventEnd = e.eventEnd), void 0 !== e.eventStart && (t.eventStart = e.eventStart), void 0 !== e.eventTz && (t.eventTz = e.eventTz), void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeRequest",
						eventEnd: "",
						eventStart: "",
						eventTz: "",
						id: ""
					};
					return n.eventEnd = null !== (t = e.eventEnd) && void 0 !== t ? t : "", n.eventStart = null !== (o = e.eventStart) && void 0 !== o ? o : "", n.eventTz = null !== (i = e.eventTz) && void 0 !== i ? i : "", n.id = null !== (r = e.id) && void 0 !== r ? r : "", n
				}
			};
			i.a.set(Oo.$type, Oo);
			const To = {
				$type: "devvit.plugin.redditapi.linksandcomments.FollowPostRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.follow && t.uint32(8).bool(e.follow), "" !== e.fullname && t.uint32(18).string(e.fullname), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.FollowPostRequest",
						follow: !1,
						fullname: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.follow = o.bool();
								break;
							case 2:
								r.fullname = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: To.$type,
					follow: !!zo(e.follow) && Boolean(e.follow),
					fullname: zo(e.fullname) ? String(e.fullname) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.follow && (t.follow = e.follow), void 0 !== e.fullname && (t.fullname = e.fullname), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.linksandcomments.FollowPostRequest",
						follow: !1,
						fullname: ""
					};
					return i.follow = null !== (t = e.follow) && void 0 !== t && t, i.fullname = null !== (o = e.fullname) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(To.$type, To);
			const No = {
				$type: "devvit.plugin.redditapi.linksandcomments.BasicIdRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.BasicIdRequest",
						id: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: No.$type,
					id: zo(e.id) ? String(e.id) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.BasicIdRequest",
						id: ""
					};
					return o.id = null !== (t = e.id) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(No.$type, No);
			const Ro = {
				$type: "devvit.plugin.redditapi.linksandcomments.InfoRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.subreddits) t.uint32(10).string(o);
					for (const o of e.thingIds) t.uint32(18).string(o);
					return void 0 !== e.url && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.url
					}, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.InfoRequest",
						subreddits: [],
						thingIds: [],
						url: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.subreddits.push(o.string());
								break;
							case 2:
								r.thingIds.push(o.string());
								break;
							case 3:
								r.url = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ro.$type,
					subreddits: Array.isArray(null == e ? void 0 : e.subreddits) ? e.subreddits.map(e => String(e)) : [],
					thingIds: Array.isArray(null == e ? void 0 : e.thingIds) ? e.thingIds.map(e => String(e)) : [],
					url: zo(e.url) ? String(e.url) : void 0
				}),
				toJSON(e) {
					const t = {};
					return e.subreddits ? t.subreddits = e.subreddits.map(e => e) : t.subreddits = [], e.thingIds ? t.thingIds = e.thingIds.map(e => e) : t.thingIds = [], void 0 !== e.url && (t.url = e.url), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.InfoRequest",
						subreddits: [],
						thingIds: [],
						url: void 0
					};
					return r.subreddits = (null === (t = e.subreddits) || void 0 === t ? void 0 : t.map(e => e)) || [], r.thingIds = (null === (o = e.thingIds) || void 0 === o ? void 0 : o.map(e => e)) || [], r.url = null !== (i = e.url) && void 0 !== i ? i : void 0, r
				}
			};
			i.a.set(Ro.$type, Ro);
			const $o = {
				$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.children && t.uint32(8).bool(e.children), 0 !== e.depth && t.uint32(16).int32(e.depth), "" !== e.id && t.uint32(26).string(e.id), !0 === e.limitChildren && t.uint32(32).bool(e.limitChildren), "" !== e.linkId && t.uint32(42).string(e.linkId), "" !== e.sort && t.uint32(50).string(e.sort), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenRequest",
						children: !1,
						depth: 0,
						id: "",
						limitChildren: !1,
						linkId: "",
						sort: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.children = o.bool();
								break;
							case 2:
								r.depth = o.int32();
								break;
							case 3:
								r.id = o.string();
								break;
							case 4:
								r.limitChildren = o.bool();
								break;
							case 5:
								r.linkId = o.string();
								break;
							case 6:
								r.sort = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: $o.$type,
					children: !!zo(e.children) && Boolean(e.children),
					depth: zo(e.depth) ? Number(e.depth) : 0,
					id: zo(e.id) ? String(e.id) : "",
					limitChildren: !!zo(e.limitChildren) && Boolean(e.limitChildren),
					linkId: zo(e.linkId) ? String(e.linkId) : "",
					sort: zo(e.sort) ? String(e.sort) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.children && (t.children = e.children), void 0 !== e.depth && (t.depth = Math.round(e.depth)), void 0 !== e.id && (t.id = e.id), void 0 !== e.limitChildren && (t.limitChildren = e.limitChildren), void 0 !== e.linkId && (t.linkId = e.linkId), void 0 !== e.sort && (t.sort = e.sort), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenRequest",
						children: !1,
						depth: 0,
						id: "",
						limitChildren: !1,
						linkId: "",
						sort: ""
					};
					return s.children = null !== (t = e.children) && void 0 !== t && t, s.depth = null !== (o = e.depth) && void 0 !== o ? o : 0, s.id = null !== (i = e.id) && void 0 !== i ? i : "", s.limitChildren = null !== (r = e.limitChildren) && void 0 !== r && r, s.linkId = null !== (n = e.linkId) && void 0 !== n ? n : "", s.sort = null !== (a = e.sort) && void 0 !== a ? a : "", s
				}
			};
			i.a.set($o.$type, $o);
			const Co = {
				$type: "devvit.plugin.redditapi.linksandcomments.ReportRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.additionalInfo && t.uint32(10).string(e.additionalInfo), "" !== e.customText && t.uint32(18).string(e.customText), !0 === e.fromHelpDesk && t.uint32(24).bool(e.fromHelpDesk), !0 === e.fromModmail && t.uint32(32).bool(e.fromModmail), "" !== e.modmailConvId && t.uint32(42).string(e.modmailConvId), "" !== e.otherReason && t.uint32(50).string(e.otherReason), "" !== e.reason && t.uint32(58).string(e.reason), "" !== e.ruleReason && t.uint32(66).string(e.ruleReason), "" !== e.siteReason && t.uint32(74).string(e.siteReason), "" !== e.srName && t.uint32(82).string(e.srName), "" !== e.thingId && t.uint32(90).string(e.thingId), "" !== e.usernames && t.uint32(98).string(e.usernames), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.ReportRequest",
						additionalInfo: "",
						customText: "",
						fromHelpDesk: !1,
						fromModmail: !1,
						modmailConvId: "",
						otherReason: "",
						reason: "",
						ruleReason: "",
						siteReason: "",
						srName: "",
						thingId: "",
						usernames: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.additionalInfo = o.string();
								break;
							case 2:
								r.customText = o.string();
								break;
							case 3:
								r.fromHelpDesk = o.bool();
								break;
							case 4:
								r.fromModmail = o.bool();
								break;
							case 5:
								r.modmailConvId = o.string();
								break;
							case 6:
								r.otherReason = o.string();
								break;
							case 7:
								r.reason = o.string();
								break;
							case 8:
								r.ruleReason = o.string();
								break;
							case 9:
								r.siteReason = o.string();
								break;
							case 10:
								r.srName = o.string();
								break;
							case 11:
								r.thingId = o.string();
								break;
							case 12:
								r.usernames = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Co.$type,
					additionalInfo: zo(e.additionalInfo) ? String(e.additionalInfo) : "",
					customText: zo(e.customText) ? String(e.customText) : "",
					fromHelpDesk: !!zo(e.fromHelpDesk) && Boolean(e.fromHelpDesk),
					fromModmail: !!zo(e.fromModmail) && Boolean(e.fromModmail),
					modmailConvId: zo(e.modmailConvId) ? String(e.modmailConvId) : "",
					otherReason: zo(e.otherReason) ? String(e.otherReason) : "",
					reason: zo(e.reason) ? String(e.reason) : "",
					ruleReason: zo(e.ruleReason) ? String(e.ruleReason) : "",
					siteReason: zo(e.siteReason) ? String(e.siteReason) : "",
					srName: zo(e.srName) ? String(e.srName) : "",
					thingId: zo(e.thingId) ? String(e.thingId) : "",
					usernames: zo(e.usernames) ? String(e.usernames) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.additionalInfo && (t.additionalInfo = e.additionalInfo), void 0 !== e.customText && (t.customText = e.customText), void 0 !== e.fromHelpDesk && (t.fromHelpDesk = e.fromHelpDesk), void 0 !== e.fromModmail && (t.fromModmail = e.fromModmail), void 0 !== e.modmailConvId && (t.modmailConvId = e.modmailConvId), void 0 !== e.otherReason && (t.otherReason = e.otherReason), void 0 !== e.reason && (t.reason = e.reason), void 0 !== e.ruleReason && (t.ruleReason = e.ruleReason), void 0 !== e.siteReason && (t.siteReason = e.siteReason), void 0 !== e.srName && (t.srName = e.srName), void 0 !== e.thingId && (t.thingId = e.thingId), void 0 !== e.usernames && (t.usernames = e.usernames), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l, u, c, p;
					const v = {
						$type: "devvit.plugin.redditapi.linksandcomments.ReportRequest",
						additionalInfo: "",
						customText: "",
						fromHelpDesk: !1,
						fromModmail: !1,
						modmailConvId: "",
						otherReason: "",
						reason: "",
						ruleReason: "",
						siteReason: "",
						srName: "",
						thingId: "",
						usernames: ""
					};
					return v.additionalInfo = null !== (t = e.additionalInfo) && void 0 !== t ? t : "", v.customText = null !== (o = e.customText) && void 0 !== o ? o : "", v.fromHelpDesk = null !== (i = e.fromHelpDesk) && void 0 !== i && i, v.fromModmail = null !== (r = e.fromModmail) && void 0 !== r && r, v.modmailConvId = null !== (n = e.modmailConvId) && void 0 !== n ? n : "", v.otherReason = null !== (a = e.otherReason) && void 0 !== a ? a : "", v.reason = null !== (s = e.reason) && void 0 !== s ? s : "", v.ruleReason = null !== (d = e.ruleReason) && void 0 !== d ? d : "", v.siteReason = null !== (l = e.siteReason) && void 0 !== l ? l : "", v.srName = null !== (u = e.srName) && void 0 !== u ? u : "", v.thingId = null !== (c = e.thingId) && void 0 !== c ? c : "", v.usernames = null !== (p = e.usernames) && void 0 !== p ? p : "", v
				}
			};
			i.a.set(Co.$type, Co);
			const Io = {
				$type: "devvit.plugin.redditapi.linksandcomments.ReportAwardRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.awardId && t.uint32(10).string(e.awardId), "" !== e.reason && t.uint32(18).string(e.reason), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.ReportAwardRequest",
						awardId: "",
						reason: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.awardId = o.string();
								break;
							case 2:
								r.reason = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Io.$type,
					awardId: zo(e.awardId) ? String(e.awardId) : "",
					reason: zo(e.reason) ? String(e.reason) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.awardId && (t.awardId = e.awardId), void 0 !== e.reason && (t.reason = e.reason), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.linksandcomments.ReportAwardRequest",
						awardId: "",
						reason: ""
					};
					return i.awardId = null !== (t = e.awardId) && void 0 !== t ? t : "", i.reason = null !== (o = e.reason) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(Io.$type, Io);
			const Eo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SaveRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), "" !== e.category && t.uint32(18).string(e.category), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SaveRequest",
						id: "",
						category: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.category = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Eo.$type,
					id: zo(e.id) ? String(e.id) : "",
					category: zo(e.category) ? String(e.category) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.category && (t.category = e.category), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.linksandcomments.SaveRequest",
						id: "",
						category: ""
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.category = null !== (o = e.category) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(Eo.$type, Eo);
			const Ao = {
				$type: "devvit.plugin.redditapi.linksandcomments.SendRepliesRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), !0 === e.state && t.uint32(16).bool(e.state), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SendRepliesRequest",
						id: "",
						state: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.state = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ao.$type,
					id: zo(e.id) ? String(e.id) : "",
					state: !!zo(e.state) && Boolean(e.state)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.state && (t.state = e.state), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.linksandcomments.SendRepliesRequest",
						id: "",
						state: !1
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.state = null !== (o = e.state) && void 0 !== o && o, i
				}
			};
			i.a.set(Ao.$type, Ao);
			const Po = {
				$type: "devvit.plugin.redditapi.linksandcomments.SetContestModeRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), !0 === e.state && t.uint32(16).bool(e.state), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SetContestModeRequest",
						id: "",
						state: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.state = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Po.$type,
					id: zo(e.id) ? String(e.id) : "",
					state: !!zo(e.state) && Boolean(e.state)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.state && (t.state = e.state), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.linksandcomments.SetContestModeRequest",
						id: "",
						state: !1
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.state = null !== (o = e.state) && void 0 !== o && o, i
				}
			};
			i.a.set(Po.$type, Po);
			const xo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SetSubredditStickyRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), 0 !== e.num && t.uint32(16).int32(e.num), !0 === e.state && t.uint32(24).bool(e.state), !0 === e.toProfile && t.uint32(32).bool(e.toProfile), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SetSubredditStickyRequest",
						id: "",
						num: 0,
						state: !1,
						toProfile: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.num = o.int32();
								break;
							case 3:
								r.state = o.bool();
								break;
							case 4:
								r.toProfile = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: xo.$type,
					id: zo(e.id) ? String(e.id) : "",
					num: zo(e.num) ? Number(e.num) : 0,
					state: !!zo(e.state) && Boolean(e.state),
					toProfile: !!zo(e.toProfile) && Boolean(e.toProfile)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.num && (t.num = Math.round(e.num)), void 0 !== e.state && (t.state = e.state), void 0 !== e.toProfile && (t.toProfile = e.toProfile), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.linksandcomments.SetSubredditStickyRequest",
						id: "",
						num: 0,
						state: !1,
						toProfile: !1
					};
					return n.id = null !== (t = e.id) && void 0 !== t ? t : "", n.num = null !== (o = e.num) && void 0 !== o ? o : 0, n.state = null !== (i = e.state) && void 0 !== i && i, n.toProfile = null !== (r = e.toProfile) && void 0 !== r && r, n
				}
			};
			i.a.set(xo.$type, xo);
			const Fo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SetSuggestedSortRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), "" !== e.sort && t.uint32(18).string(e.sort), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SetSuggestedSortRequest",
						id: "",
						sort: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							case 2:
								r.sort = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Fo.$type,
					id: zo(e.id) ? String(e.id) : "",
					sort: zo(e.sort) ? String(e.sort) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.sort && (t.sort = e.sort), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.linksandcomments.SetSuggestedSortRequest",
						id: "",
						sort: ""
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.sort = null !== (o = e.sort) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(Fo.$type, Fo);
			const jo = {
				$type: "devvit.plugin.redditapi.linksandcomments.StoreVisitsRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.links && t.uint32(10).string(e.links), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.StoreVisitsRequest",
						links: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.links = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: jo.$type,
					links: zo(e.links) ? String(e.links) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.links && (t.links = e.links), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.StoreVisitsRequest",
						links: ""
					};
					return o.links = null !== (t = e.links) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(jo.$type, jo);
			const Mo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SubmitRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.ad && t.uint32(8).bool(e.ad), "" !== e.collectionId && t.uint32(18).string(e.collectionId), "" !== e.eventEnd && t.uint32(26).string(e.eventEnd), "" !== e.eventStart && t.uint32(34).string(e.eventStart), "" !== e.eventTz && t.uint32(42).string(e.eventTz), "" !== e.extension && t.uint32(50).string(e.extension), "" !== e.flairId && t.uint32(58).string(e.flairId), "" !== e.flairText && t.uint32(66).string(e.flairText), "" !== e.kind && t.uint32(74).string(e.kind), !0 === e.nsfw && t.uint32(80).bool(e.nsfw), !0 === e.resubmit && t.uint32(88).bool(e.resubmit), "" !== e.richtextJson && t.uint32(98).string(e.richtextJson), !0 === e.sendreplies && t.uint32(104).bool(e.sendreplies), !0 === e.spoiler && t.uint32(112).bool(e.spoiler), "" !== e.sr && t.uint32(122).string(e.sr), "" !== e.text && t.uint32(130).string(e.text), "" !== e.title && t.uint32(138).string(e.title), "" !== e.url && t.uint32(146).string(e.url), "" !== e.videoPosterUrl && t.uint32(154).string(e.videoPosterUrl), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitRequest",
						ad: !1,
						collectionId: "",
						eventEnd: "",
						eventStart: "",
						eventTz: "",
						extension: "",
						flairId: "",
						flairText: "",
						kind: "",
						nsfw: !1,
						resubmit: !1,
						richtextJson: "",
						sendreplies: !1,
						spoiler: !1,
						sr: "",
						text: "",
						title: "",
						url: "",
						videoPosterUrl: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.ad = o.bool();
								break;
							case 2:
								r.collectionId = o.string();
								break;
							case 3:
								r.eventEnd = o.string();
								break;
							case 4:
								r.eventStart = o.string();
								break;
							case 5:
								r.eventTz = o.string();
								break;
							case 6:
								r.extension = o.string();
								break;
							case 7:
								r.flairId = o.string();
								break;
							case 8:
								r.flairText = o.string();
								break;
							case 9:
								r.kind = o.string();
								break;
							case 10:
								r.nsfw = o.bool();
								break;
							case 11:
								r.resubmit = o.bool();
								break;
							case 12:
								r.richtextJson = o.string();
								break;
							case 13:
								r.sendreplies = o.bool();
								break;
							case 14:
								r.spoiler = o.bool();
								break;
							case 15:
								r.sr = o.string();
								break;
							case 16:
								r.text = o.string();
								break;
							case 17:
								r.title = o.string();
								break;
							case 18:
								r.url = o.string();
								break;
							case 19:
								r.videoPosterUrl = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Mo.$type,
					ad: !!zo(e.ad) && Boolean(e.ad),
					collectionId: zo(e.collectionId) ? String(e.collectionId) : "",
					eventEnd: zo(e.eventEnd) ? String(e.eventEnd) : "",
					eventStart: zo(e.eventStart) ? String(e.eventStart) : "",
					eventTz: zo(e.eventTz) ? String(e.eventTz) : "",
					extension: zo(e.extension) ? String(e.extension) : "",
					flairId: zo(e.flairId) ? String(e.flairId) : "",
					flairText: zo(e.flairText) ? String(e.flairText) : "",
					kind: zo(e.kind) ? String(e.kind) : "",
					nsfw: !!zo(e.nsfw) && Boolean(e.nsfw),
					resubmit: !!zo(e.resubmit) && Boolean(e.resubmit),
					richtextJson: zo(e.richtextJson) ? String(e.richtextJson) : "",
					sendreplies: !!zo(e.sendreplies) && Boolean(e.sendreplies),
					spoiler: !!zo(e.spoiler) && Boolean(e.spoiler),
					sr: zo(e.sr) ? String(e.sr) : "",
					text: zo(e.text) ? String(e.text) : "",
					title: zo(e.title) ? String(e.title) : "",
					url: zo(e.url) ? String(e.url) : "",
					videoPosterUrl: zo(e.videoPosterUrl) ? String(e.videoPosterUrl) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.ad && (t.ad = e.ad), void 0 !== e.collectionId && (t.collectionId = e.collectionId), void 0 !== e.eventEnd && (t.eventEnd = e.eventEnd), void 0 !== e.eventStart && (t.eventStart = e.eventStart), void 0 !== e.eventTz && (t.eventTz = e.eventTz), void 0 !== e.extension && (t.extension = e.extension), void 0 !== e.flairId && (t.flairId = e.flairId), void 0 !== e.flairText && (t.flairText = e.flairText), void 0 !== e.kind && (t.kind = e.kind), void 0 !== e.nsfw && (t.nsfw = e.nsfw), void 0 !== e.resubmit && (t.resubmit = e.resubmit), void 0 !== e.richtextJson && (t.richtextJson = e.richtextJson), void 0 !== e.sendreplies && (t.sendreplies = e.sendreplies), void 0 !== e.spoiler && (t.spoiler = e.spoiler), void 0 !== e.sr && (t.sr = e.sr), void 0 !== e.text && (t.text = e.text), void 0 !== e.title && (t.title = e.title), void 0 !== e.url && (t.url = e.url), void 0 !== e.videoPosterUrl && (t.videoPosterUrl = e.videoPosterUrl), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l, u, c, p, v, m, f, g, h, y, b;
					const k = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitRequest",
						ad: !1,
						collectionId: "",
						eventEnd: "",
						eventStart: "",
						eventTz: "",
						extension: "",
						flairId: "",
						flairText: "",
						kind: "",
						nsfw: !1,
						resubmit: !1,
						richtextJson: "",
						sendreplies: !1,
						spoiler: !1,
						sr: "",
						text: "",
						title: "",
						url: "",
						videoPosterUrl: ""
					};
					return k.ad = null !== (t = e.ad) && void 0 !== t && t, k.collectionId = null !== (o = e.collectionId) && void 0 !== o ? o : "", k.eventEnd = null !== (i = e.eventEnd) && void 0 !== i ? i : "", k.eventStart = null !== (r = e.eventStart) && void 0 !== r ? r : "", k.eventTz = null !== (n = e.eventTz) && void 0 !== n ? n : "", k.extension = null !== (a = e.extension) && void 0 !== a ? a : "", k.flairId = null !== (s = e.flairId) && void 0 !== s ? s : "", k.flairText = null !== (d = e.flairText) && void 0 !== d ? d : "", k.kind = null !== (l = e.kind) && void 0 !== l ? l : "", k.nsfw = null !== (u = e.nsfw) && void 0 !== u && u, k.resubmit = null !== (c = e.resubmit) && void 0 !== c && c, k.richtextJson = null !== (p = e.richtextJson) && void 0 !== p ? p : "", k.sendreplies = null !== (v = e.sendreplies) && void 0 !== v && v, k.spoiler = null !== (m = e.spoiler) && void 0 !== m && m, k.sr = null !== (f = e.sr) && void 0 !== f ? f : "", k.text = null !== (g = e.text) && void 0 !== g ? g : "", k.title = null !== (h = e.title) && void 0 !== h ? h : "", k.url = null !== (y = e.url) && void 0 !== y ? y : "", k.videoPosterUrl = null !== (b = e.videoPosterUrl) && void 0 !== b ? b : "", k
				}
			};
			i.a.set(Mo.$type, Mo);
			const Do = {
				$type: "devvit.plugin.redditapi.linksandcomments.VoteRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.dir && t.uint32(8).int32(e.dir), "" !== e.id && t.uint32(18).string(e.id), 0 !== e.rank && t.uint32(24).int32(e.rank), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.VoteRequest",
						dir: 0,
						id: "",
						rank: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.dir = o.int32();
								break;
							case 2:
								r.id = o.string();
								break;
							case 3:
								r.rank = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Do.$type,
					dir: zo(e.dir) ? Number(e.dir) : 0,
					id: zo(e.id) ? String(e.id) : "",
					rank: zo(e.rank) ? Number(e.rank) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.dir && (t.dir = Math.round(e.dir)), void 0 !== e.id && (t.id = e.id), void 0 !== e.rank && (t.rank = Math.round(e.rank)), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.VoteRequest",
						dir: 0,
						id: "",
						rank: 0
					};
					return r.dir = null !== (t = e.dir) && void 0 !== t ? t : 0, r.id = null !== (o = e.id) && void 0 !== o ? o : "", r.rank = null !== (i = e.rank) && void 0 !== i ? i : 0, r
				}
			};
			i.a.set(Do.$type, Do);
			const Jo = {
				$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.eventIsLive && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.eventIsLive
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.eventStart && ne.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.eventStart
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.eventEnd && ne.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.eventEnd
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.json && _o.encode(e.json, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeResponse",
						eventIsLive: void 0,
						eventStart: void 0,
						eventEnd: void 0,
						json: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.eventIsLive = ne.a.decode(o, o.uint32()).value;
								break;
							case 2:
								r.eventStart = ne.c.decode(o, o.uint32()).value;
								break;
							case 3:
								r.eventEnd = ne.c.decode(o, o.uint32()).value;
								break;
							case 4:
								r.json = _o.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Jo.$type,
					eventIsLive: zo(e.eventIsLive) ? Boolean(e.eventIsLive) : void 0,
					eventStart: zo(e.eventStart) ? Number(e.eventStart) : void 0,
					eventEnd: zo(e.eventEnd) ? Number(e.eventEnd) : void 0,
					json: zo(e.json) ? _o.fromJSON(e.json) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.eventIsLive && (t.eventIsLive = e.eventIsLive), void 0 !== e.eventStart && (t.eventStart = e.eventStart), void 0 !== e.eventEnd && (t.eventEnd = e.eventEnd), void 0 !== e.json && (t.json = e.json ? _o.toJSON(e.json) : void 0), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeResponse",
						eventIsLive: void 0,
						eventStart: void 0,
						eventEnd: void 0,
						json: void 0
					};
					return r.eventIsLive = null !== (t = e.eventIsLive) && void 0 !== t ? t : void 0, r.eventStart = null !== (o = e.eventStart) && void 0 !== o ? o : void 0, r.eventEnd = null !== (i = e.eventEnd) && void 0 !== i ? i : void 0, r.json = void 0 !== e.json && null !== e.json ? _o.fromPartial(e.json) : void 0, r
				}
			};
			i.a.set(Jo.$type, Jo);
			const _o = {
				$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeResponse.JsonErrorType",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.errors) Xe.a.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeResponse.JsonErrorType",
						errors: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.errors.push(Xe.a.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: _o.$type,
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => Xe.a.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.errors ? t.errors = e.errors.map(e => e ? Xe.a.toJSON(e) : void 0) : t.errors = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.EventPostTimeResponse.JsonErrorType",
						errors: []
					};
					return o.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => Xe.a.fromPartial(e))) || [], o
				}
			};
			i.a.set(_o.$type, _o);
			const Bo = {
				$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.json && Vo.encode(e.json, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse",
						json: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 4:
								r.json = Vo.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Bo.$type,
					json: zo(e.json) ? Vo.fromJSON(e.json) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.json && (t.json = e.json ? Vo.toJSON(e.json) : void 0), t
				},
				fromPartial(e) {
					const t = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse",
						json: void 0
					};
					return t.json = void 0 !== e.json && null !== e.json ? Vo.fromPartial(e.json) : void 0, t
				}
			};
			i.a.set(Bo.$type, Bo);
			const Vo = {
				$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse.JsonType",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.errors) Xe.a.encode(o, t.uint32(10).fork()).ldelim();
					return void 0 !== e.data && Lo.encode(e.data, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse.JsonType",
						errors: [],
						data: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.errors.push(Xe.a.decode(o, o.uint32()));
								break;
							case 2:
								r.data = Lo.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Vo.$type,
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => Xe.a.fromJSON(e)) : [],
					data: zo(e.data) ? Lo.fromJSON(e.data) : void 0
				}),
				toJSON(e) {
					const t = {};
					return e.errors ? t.errors = e.errors.map(e => e ? Xe.a.toJSON(e) : void 0) : t.errors = [], void 0 !== e.data && (t.data = e.data ? Lo.toJSON(e.data) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse.JsonType",
						errors: [],
						data: void 0
					};
					return o.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => Xe.a.fromPartial(e))) || [], o.data = void 0 !== e.data && null !== e.data ? Lo.fromPartial(e.data) : void 0, o
				}
			};
			i.a.set(Vo.$type, Vo);
			const Lo = {
				$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse.JsonType.JsonData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.things) bo.e.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse.JsonType.JsonData",
						things: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.things.push(bo.e.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Lo.$type,
					things: Array.isArray(null == e ? void 0 : e.things) ? e.things.map(e => bo.e.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.things ? t.things = e.things.map(e => e ? bo.e.toJSON(e) : void 0) : t.things = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.MoreChildrenResponse.JsonType.JsonData",
						things: []
					};
					return o.things = (null === (t = e.things) || void 0 === t ? void 0 : t.map(e => bo.e.fromPartial(e))) || [], o
				}
			};
			i.a.set(Lo.$type, Lo);
			const Uo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SavedCategoriesResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.categories) qo.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SavedCategoriesResponse",
						categories: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.categories.push(qo.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Uo.$type,
					categories: Array.isArray(null == e ? void 0 : e.categories) ? e.categories.map(e => qo.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.categories ? t.categories = e.categories.map(e => e ? qo.toJSON(e) : void 0) : t.categories = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.SavedCategoriesResponse",
						categories: []
					};
					return o.categories = (null === (t = e.categories) || void 0 === t ? void 0 : t.map(e => qo.fromPartial(e))) || [], o
				}
			};
			i.a.set(Uo.$type, Uo);
			const qo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SavedCategoriesResponse.Category",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.category && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.category
					}, t.uint32(10).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SavedCategoriesResponse.Category",
						category: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.category = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: qo.$type,
					category: zo(e.category) ? String(e.category) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.category && (t.category = e.category), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.SavedCategoriesResponse.Category",
						category: void 0
					};
					return o.category = null !== (t = e.category) && void 0 !== t ? t : void 0, o
				}
			};
			i.a.set(qo.$type, qo);
			const Wo = {
				$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.json && Go.encode(e.json, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse",
						json: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 4:
								r.json = Go.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Wo.$type,
					json: zo(e.json) ? Go.fromJSON(e.json) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.json && (t.json = e.json ? Go.toJSON(e.json) : void 0), t
				},
				fromPartial(e) {
					const t = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse",
						json: void 0
					};
					return t.json = void 0 !== e.json && null !== e.json ? Go.fromPartial(e.json) : void 0, t
				}
			};
			i.a.set(Wo.$type, Wo);
			const Go = {
				$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.errors) Xe.a.encode(o, t.uint32(10).fork()).ldelim();
					return void 0 !== e.data && Ho.encode(e.data, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType",
						errors: [],
						data: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.errors.push(Xe.a.decode(o, o.uint32()));
								break;
							case 2:
								r.data = Ho.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Go.$type,
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => Xe.a.fromJSON(e)) : [],
					data: zo(e.data) ? Ho.fromJSON(e.data) : void 0
				}),
				toJSON(e) {
					const t = {};
					return e.errors ? t.errors = e.errors.map(e => e ? Xe.a.toJSON(e) : void 0) : t.errors = [], void 0 !== e.data && (t.data = e.data ? Ho.toJSON(e.data) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType",
						errors: [],
						data: void 0
					};
					return o.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => Xe.a.fromPartial(e))) || [], o.data = void 0 !== e.data && null !== e.data ? Ho.fromPartial(e.data) : void 0, o
				}
			};
			i.a.set(Go.$type, Go);
			const Ho = {
				$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType.JsonData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.url && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.url
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.draftsCount && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.draftsCount
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType.JsonData",
						url: void 0,
						draftsCount: void 0,
						id: void 0,
						name: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.url = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.draftsCount = ne.b.decode(o, o.uint32()).value;
								break;
							case 3:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ho.$type,
					url: zo(e.url) ? String(e.url) : void 0,
					draftsCount: zo(e.draftsCount) ? Number(e.draftsCount) : void 0,
					id: zo(e.id) ? String(e.id) : void 0,
					name: zo(e.name) ? String(e.name) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.url && (t.url = e.url), void 0 !== e.draftsCount && (t.draftsCount = e.draftsCount), void 0 !== e.id && (t.id = e.id), void 0 !== e.name && (t.name = e.name), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.linksandcomments.SubmitResponse.JsonType.JsonData",
						url: void 0,
						draftsCount: void 0,
						id: void 0,
						name: void 0
					};
					return n.url = null !== (t = e.url) && void 0 !== t ? t : void 0, n.draftsCount = null !== (o = e.draftsCount) && void 0 !== o ? o : void 0, n.id = null !== (i = e.id) && void 0 !== i ? i : void 0, n.name = null !== (r = e.name) && void 0 !== r ? r : void 0, n
				}
			};

			function zo(e) {
				return null != e
			}
			i.a.set(Ho.$type, Ho), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Yo = {
				name: "LinksAndComments",
				fullName: "devvit.plugin.redditapi.linksandcomments.LinksAndComments",
				methods: {
					comment: {
						name: "Comment",
						requestType: wo,
						requestStream: !1,
						responseType: bo.d,
						responseStream: !1,
						options: {}
					},
					del: {
						name: "Del",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					editUserText: {
						name: "EditUserText",
						requestType: wo,
						requestStream: !1,
						responseType: bo.d,
						responseStream: !1,
						options: {}
					},
					eventPostTime: {
						name: "EventPostTime",
						requestType: Oo,
						requestStream: !1,
						responseType: Jo,
						responseStream: !1,
						options: {}
					},
					followPost: {
						name: "FollowPost",
						requestType: To,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					hide: {
						name: "Hide",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					info: {
						name: "Info",
						requestType: Ro,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					lock: {
						name: "Lock",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					markNSFW: {
						name: "MarkNSFW",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					moreChildren: {
						name: "MoreChildren",
						requestType: $o,
						requestStream: !1,
						responseType: Bo,
						responseStream: !1,
						options: {}
					},
					report: {
						name: "Report",
						requestType: Co,
						requestStream: !1,
						responseType: bo.a,
						responseStream: !1,
						options: {}
					},
					reportAward: {
						name: "ReportAward",
						requestType: Io,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					save: {
						name: "Save",
						requestType: Eo,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					savedCategories: {
						name: "SavedCategories",
						requestType: d.a,
						requestStream: !1,
						responseType: Uo,
						responseStream: !1,
						options: {}
					},
					sendReplies: {
						name: "SendReplies",
						requestType: Ao,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					setContestMode: {
						name: "SetContestMode",
						requestType: Po,
						requestStream: !1,
						responseType: bo.a,
						responseStream: !1,
						options: {}
					},
					setSubredditSticky: {
						name: "SetSubredditSticky",
						requestType: xo,
						requestStream: !1,
						responseType: bo.a,
						responseStream: !1,
						options: {}
					},
					setSuggestedSort: {
						name: "SetSuggestedSort",
						requestType: Fo,
						requestStream: !1,
						responseType: bo.a,
						responseStream: !1,
						options: {}
					},
					spoiler: {
						name: "Spoiler",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					storeVisits: {
						name: "StoreVisits",
						requestType: jo,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					submit: {
						name: "Submit",
						requestType: Mo,
						requestStream: !1,
						responseType: Wo,
						responseStream: !1,
						options: {}
					},
					unhide: {
						name: "Unhide",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unlock: {
						name: "Unlock",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unmarkNSFW: {
						name: "UnmarkNSFW",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unsave: {
						name: "Unsave",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unspoiler: {
						name: "Unspoiler",
						requestType: No,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					vote: {
						name: "Vote",
						requestType: Do,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var Zo = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/listings/listings_msg.js");
			const Xo = {
				name: "Listings",
				fullName: "devvit.plugin.redditapi.listings.Listings",
				methods: {
					best: {
						name: "Best",
						requestType: Zo.a,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					byId: {
						name: "ById",
						requestType: Zo.b,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					comments: {
						name: "Comments",
						requestType: Zo.d,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					commentsArticle: {
						name: "CommentsArticle",
						requestType: Zo.c,
						requestStream: !1,
						responseType: Zo.k,
						responseStream: !1,
						options: {}
					},
					duplicates: {
						name: "Duplicates",
						requestType: Zo.e,
						requestStream: !1,
						responseType: Zo.k,
						responseStream: !1,
						options: {}
					},
					hot: {
						name: "Hot",
						requestType: Zo.f,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					new: {
						name: "New",
						requestType: Zo.g,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					random: {
						name: "Random",
						requestType: Zo.h,
						requestStream: !1,
						responseType: Zo.k,
						responseStream: !1,
						options: {}
					},
					rising: {
						name: "Rising",
						requestType: Zo.i,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					sort: {
						name: "Sort",
						requestType: Zo.j,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var Ko = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/moderation/moderation_msg.js");
			const Qo = {
				name: "Moderation",
				fullName: "devvit.plugin.redditapi.moderation.Moderation",
				methods: {
					aboutLog: {
						name: "AboutLog",
						requestType: Ko.b,
						requestStream: !1,
						responseType: Ko.c,
						responseStream: !1,
						options: {}
					},
					aboutLocation: {
						name: "AboutLocation",
						requestType: Ko.a,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					},
					acceptModeratorInvite: {
						name: "AcceptModeratorInvite",
						requestType: Ko.d,
						requestStream: !1,
						responseType: bo.a,
						responseStream: !1,
						options: {}
					},
					approve: {
						name: "Approve",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					distinguish: {
						name: "Distinguish",
						requestType: Ko.f,
						requestStream: !1,
						responseType: bo.b,
						responseStream: !1,
						options: {}
					},
					ignoreReports: {
						name: "IgnoreReports",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					leaveContributor: {
						name: "LeaveContributor",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					leaveModerator: {
						name: "LeaveModerator",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					muteMessageAuthor: {
						name: "MuteMessageAuthor",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					remove: {
						name: "Remove",
						requestType: Ko.g,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					showComment: {
						name: "ShowComment",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					snoozeReports: {
						name: "SnoozeReports",
						requestType: Ko.h,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unignoreReports: {
						name: "UnignoreReports",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unmuteMessageAuthor: {
						name: "UnmuteMessageAuthor",
						requestType: Ko.e,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unsnoozeReports: {
						name: "UnsnoozeReports",
						requestType: Ko.h,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					updateCrowdControlLevel: {
						name: "UpdateCrowdControlLevel",
						requestType: Ko.j,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					stylesheet: {
						name: "Stylesheet",
						requestType: Ko.i,
						requestStream: !1,
						responseType: ne.d,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const ei = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.isAuto && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isAuto
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.participant && fi.encode(e.participant, t.uint32(18).fork()).ldelim();
					for (const o of e.objIds) ti.encode(o, t.uint32(26).fork()).ldelim();
					void 0 !== e.isRepliable && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isRepliable
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.lastUserUpdate && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.lastUserUpdate
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.isInternal && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isInternal
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.lastModUpdate && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.lastModUpdate
					}, t.uint32(58).fork()).ldelim();
					for (const o of e.authors) fi.encode(o, t.uint32(66).fork()).ldelim();
					return void 0 !== e.lastUpdated && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.lastUpdated
					}, t.uint32(74).fork()).ldelim(), void 0 !== e.legacyFirstMessageId && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.legacyFirstMessageId
					}, t.uint32(82).fork()).ldelim(), void 0 !== e.state && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.state
					}, t.uint32(90).fork()).ldelim(), void 0 !== e.conversationType && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.conversationType
					}, t.uint32(98).fork()).ldelim(), void 0 !== e.lastUnread && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.lastUnread
					}, t.uint32(106).fork()).ldelim(), void 0 !== e.owner && oi.encode(e.owner, t.uint32(114).fork()).ldelim(), void 0 !== e.subject && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.subject
					}, t.uint32(122).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(130).fork()).ldelim(), void 0 !== e.isHighlighted && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isHighlighted
					}, t.uint32(138).fork()).ldelim(), void 0 !== e.numMessages && ne.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.numMessages
					}, t.uint32(146).fork()).ldelim(), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						ii.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(154).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData",
						isAuto: void 0,
						participant: void 0,
						objIds: [],
						isRepliable: void 0,
						lastUserUpdate: void 0,
						isInternal: void 0,
						lastModUpdate: void 0,
						authors: [],
						lastUpdated: void 0,
						legacyFirstMessageId: void 0,
						state: void 0,
						conversationType: void 0,
						lastUnread: void 0,
						owner: void 0,
						subject: void 0,
						id: void 0,
						isHighlighted: void 0,
						numMessages: void 0,
						modActions: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.isAuto = ne.a.decode(o, o.uint32()).value;
								break;
							case 2:
								r.participant = fi.decode(o, o.uint32());
								break;
							case 3:
								r.objIds.push(ti.decode(o, o.uint32()));
								break;
							case 4:
								r.isRepliable = ne.a.decode(o, o.uint32()).value;
								break;
							case 5:
								r.lastUserUpdate = ne.d.decode(o, o.uint32()).value;
								break;
							case 6:
								r.isInternal = ne.a.decode(o, o.uint32()).value;
								break;
							case 7:
								r.lastModUpdate = ne.d.decode(o, o.uint32()).value;
								break;
							case 8:
								r.authors.push(fi.decode(o, o.uint32()));
								break;
							case 9:
								r.lastUpdated = ne.d.decode(o, o.uint32()).value;
								break;
							case 10:
								r.legacyFirstMessageId = ne.d.decode(o, o.uint32()).value;
								break;
							case 11:
								r.state = ne.b.decode(o, o.uint32()).value;
								break;
							case 12:
								r.conversationType = ne.d.decode(o, o.uint32()).value;
								break;
							case 13:
								r.lastUnread = ne.d.decode(o, o.uint32()).value;
								break;
							case 14:
								r.owner = oi.decode(o, o.uint32());
								break;
							case 15:
								r.subject = ne.d.decode(o, o.uint32()).value;
								break;
							case 16:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 17:
								r.isHighlighted = ne.a.decode(o, o.uint32()).value;
								break;
							case 18:
								r.numMessages = ne.c.decode(o, o.uint32()).value;
								break;
							case 19:
								const t = ii.decode(o, o.uint32());
								void 0 !== t.value && (r.modActions[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ei.$type,
					isAuto: nr(e.isAuto) ? Boolean(e.isAuto) : void 0,
					participant: nr(e.participant) ? fi.fromJSON(e.participant) : void 0,
					objIds: Array.isArray(null == e ? void 0 : e.objIds) ? e.objIds.map(e => ti.fromJSON(e)) : [],
					isRepliable: nr(e.isRepliable) ? Boolean(e.isRepliable) : void 0,
					lastUserUpdate: nr(e.lastUserUpdate) ? String(e.lastUserUpdate) : void 0,
					isInternal: nr(e.isInternal) ? Boolean(e.isInternal) : void 0,
					lastModUpdate: nr(e.lastModUpdate) ? String(e.lastModUpdate) : void 0,
					authors: Array.isArray(null == e ? void 0 : e.authors) ? e.authors.map(e => fi.fromJSON(e)) : [],
					lastUpdated: nr(e.lastUpdated) ? String(e.lastUpdated) : void 0,
					legacyFirstMessageId: nr(e.legacyFirstMessageId) ? String(e.legacyFirstMessageId) : void 0,
					state: nr(e.state) ? Number(e.state) : void 0,
					conversationType: nr(e.conversationType) ? String(e.conversationType) : void 0,
					lastUnread: nr(e.lastUnread) ? String(e.lastUnread) : void 0,
					owner: nr(e.owner) ? oi.fromJSON(e.owner) : void 0,
					subject: nr(e.subject) ? String(e.subject) : void 0,
					id: nr(e.id) ? String(e.id) : void 0,
					isHighlighted: nr(e.isHighlighted) ? Boolean(e.isHighlighted) : void 0,
					numMessages: nr(e.numMessages) ? Number(e.numMessages) : void 0,
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.isAuto && (t.isAuto = e.isAuto), void 0 !== e.participant && (t.participant = e.participant ? fi.toJSON(e.participant) : void 0), e.objIds ? t.objIds = e.objIds.map(e => e ? ti.toJSON(e) : void 0) : t.objIds = [], void 0 !== e.isRepliable && (t.isRepliable = e.isRepliable), void 0 !== e.lastUserUpdate && (t.lastUserUpdate = e.lastUserUpdate), void 0 !== e.isInternal && (t.isInternal = e.isInternal), void 0 !== e.lastModUpdate && (t.lastModUpdate = e.lastModUpdate), e.authors ? t.authors = e.authors.map(e => e ? fi.toJSON(e) : void 0) : t.authors = [], void 0 !== e.lastUpdated && (t.lastUpdated = e.lastUpdated), void 0 !== e.legacyFirstMessageId && (t.legacyFirstMessageId = e.legacyFirstMessageId), void 0 !== e.state && (t.state = e.state), void 0 !== e.conversationType && (t.conversationType = e.conversationType), void 0 !== e.lastUnread && (t.lastUnread = e.lastUnread), void 0 !== e.owner && (t.owner = e.owner ? oi.toJSON(e.owner) : void 0), void 0 !== e.subject && (t.subject = e.subject), void 0 !== e.id && (t.id = e.id), void 0 !== e.isHighlighted && (t.isHighlighted = e.isHighlighted), void 0 !== e.numMessages && (t.numMessages = e.numMessages), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l, u, c, p, v, m, f, g, h;
					const y = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData",
						isAuto: void 0,
						participant: void 0,
						objIds: [],
						isRepliable: void 0,
						lastUserUpdate: void 0,
						isInternal: void 0,
						lastModUpdate: void 0,
						authors: [],
						lastUpdated: void 0,
						legacyFirstMessageId: void 0,
						state: void 0,
						conversationType: void 0,
						lastUnread: void 0,
						owner: void 0,
						subject: void 0,
						id: void 0,
						isHighlighted: void 0,
						numMessages: void 0,
						modActions: {}
					};
					return y.isAuto = null !== (t = e.isAuto) && void 0 !== t ? t : void 0, y.participant = void 0 !== e.participant && null !== e.participant ? fi.fromPartial(e.participant) : void 0, y.objIds = (null === (o = e.objIds) || void 0 === o ? void 0 : o.map(e => ti.fromPartial(e))) || [], y.isRepliable = null !== (i = e.isRepliable) && void 0 !== i ? i : void 0, y.lastUserUpdate = null !== (r = e.lastUserUpdate) && void 0 !== r ? r : void 0, y.isInternal = null !== (n = e.isInternal) && void 0 !== n ? n : void 0, y.lastModUpdate = null !== (a = e.lastModUpdate) && void 0 !== a ? a : void 0, y.authors = (null === (s = e.authors) || void 0 === s ? void 0 : s.map(e => fi.fromPartial(e))) || [], y.lastUpdated = null !== (d = e.lastUpdated) && void 0 !== d ? d : void 0, y.legacyFirstMessageId = null !== (l = e.legacyFirstMessageId) && void 0 !== l ? l : void 0, y.state = null !== (u = e.state) && void 0 !== u ? u : void 0, y.conversationType = null !== (c = e.conversationType) && void 0 !== c ? c : void 0, y.lastUnread = null !== (p = e.lastUnread) && void 0 !== p ? p : void 0, y.owner = void 0 !== e.owner && null !== e.owner ? oi.fromPartial(e.owner) : void 0, y.subject = null !== (v = e.subject) && void 0 !== v ? v : void 0, y.id = null !== (m = e.id) && void 0 !== m ? m : void 0, y.isHighlighted = null !== (f = e.isHighlighted) && void 0 !== f ? f : void 0, y.numMessages = null !== (g = e.numMessages) && void 0 !== g ? g : void 0, y.modActions = Object.entries(null !== (h = e.modActions) && void 0 !== h ? h : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), y
				}
			};
			i.a.set(ei.$type, ei);
			const ti = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ObjId",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.key && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.key
					}, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ObjId",
						id: void 0,
						key: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.key = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ti.$type,
					id: nr(e.id) ? String(e.id) : void 0,
					key: nr(e.key) ? String(e.key) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.key && (t.key = e.key), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ObjId",
						id: void 0,
						key: void 0
					};
					return i.id = null !== (t = e.id) && void 0 !== t ? t : void 0, i.key = null !== (o = e.key) && void 0 !== o ? o : void 0, i
				}
			};
			i.a.set(ti.$type, ti);
			const oi = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationData.Owner",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.displayName && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.displayName
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.type && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.type
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData.Owner",
						displayName: void 0,
						type: void 0,
						id: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.displayName = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.type = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: oi.$type,
					displayName: nr(e.displayName) ? String(e.displayName) : void 0,
					type: nr(e.type) ? String(e.type) : void 0,
					id: nr(e.id) ? String(e.id) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.displayName && (t.displayName = e.displayName), void 0 !== e.type && (t.type = e.type), void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData.Owner",
						displayName: void 0,
						type: void 0,
						id: void 0
					};
					return r.displayName = null !== (t = e.displayName) && void 0 !== t ? t : void 0, r.type = null !== (o = e.type) && void 0 !== o ? o : void 0, r.id = null !== (i = e.id) && void 0 !== i ? i : void 0, r
				}
			};
			i.a.set(oi.$type, oi);
			const ii = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ii.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationData.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(ii.$type, ii);
			const ri = {
				$type: "devvit.plugin.redditapi.newmodmail.MessageData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.body && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.body
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.author && fi.encode(e.author, t.uint32(18).fork()).ldelim(), void 0 !== e.isInternal && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isInternal
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.date && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.date
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.bodyMarkdown && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.bodyMarkdown
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.participatingAs && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.participatingAs
					}, t.uint32(58).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.MessageData",
						body: void 0,
						author: void 0,
						isInternal: void 0,
						date: void 0,
						bodyMarkdown: void 0,
						id: void 0,
						participatingAs: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.body = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.author = fi.decode(o, o.uint32());
								break;
							case 3:
								r.isInternal = ne.a.decode(o, o.uint32()).value;
								break;
							case 4:
								r.date = ne.d.decode(o, o.uint32()).value;
								break;
							case 5:
								r.bodyMarkdown = ne.d.decode(o, o.uint32()).value;
								break;
							case 6:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.participatingAs = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ri.$type,
					body: nr(e.body) ? String(e.body) : void 0,
					author: nr(e.author) ? fi.fromJSON(e.author) : void 0,
					isInternal: nr(e.isInternal) ? Boolean(e.isInternal) : void 0,
					date: nr(e.date) ? String(e.date) : void 0,
					bodyMarkdown: nr(e.bodyMarkdown) ? String(e.bodyMarkdown) : void 0,
					id: nr(e.id) ? String(e.id) : void 0,
					participatingAs: nr(e.participatingAs) ? String(e.participatingAs) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.body && (t.body = e.body), void 0 !== e.author && (t.author = e.author ? fi.toJSON(e.author) : void 0), void 0 !== e.isInternal && (t.isInternal = e.isInternal), void 0 !== e.date && (t.date = e.date), void 0 !== e.bodyMarkdown && (t.bodyMarkdown = e.bodyMarkdown), void 0 !== e.id && (t.id = e.id), void 0 !== e.participatingAs && (t.participatingAs = e.participatingAs), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.plugin.redditapi.newmodmail.MessageData",
						body: void 0,
						author: void 0,
						isInternal: void 0,
						date: void 0,
						bodyMarkdown: void 0,
						id: void 0,
						participatingAs: void 0
					};
					return s.body = null !== (t = e.body) && void 0 !== t ? t : void 0, s.author = void 0 !== e.author && null !== e.author ? fi.fromPartial(e.author) : void 0, s.isInternal = null !== (o = e.isInternal) && void 0 !== o ? o : void 0, s.date = null !== (i = e.date) && void 0 !== i ? i : void 0, s.bodyMarkdown = null !== (r = e.bodyMarkdown) && void 0 !== r ? r : void 0, s.id = null !== (n = e.id) && void 0 !== n ? n : void 0, s.participatingAs = null !== (a = e.participatingAs) && void 0 !== a ? a : void 0, s
				}
			};
			i.a.set(ri.$type, ri);
			const ni = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return Object.entries(e.recentComments).forEach(e => {
						let [o, i] = e;
						pi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentCommentsEntry",
							key: o,
							value: i
						}, t.uint32(10).fork()).ldelim()
					}), void 0 !== e.muteStatus && si.encode(e.muteStatus, t.uint32(18).fork()).ldelim(), void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.created && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.created
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.banStatus && di.encode(e.banStatus, t.uint32(42).fork()).ldelim(), void 0 !== e.isSuspended && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isSuspended
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.approveStatus && li.encode(e.approveStatus, t.uint32(58).fork()).ldelim(), void 0 !== e.isShadowBanned && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isShadowBanned
					}, t.uint32(66).fork()).ldelim(), Object.entries(e.recentPosts).forEach(e => {
						let [o, i] = e;
						vi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentPostsEntry",
							key: o,
							value: i
						}, t.uint32(74).fork()).ldelim()
					}), Object.entries(e.recentConvos).forEach(e => {
						let [o, i] = e;
						mi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentConvosEntry",
							key: o,
							value: i
						}, t.uint32(82).fork()).ldelim()
					}), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(90).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData",
						recentComments: {},
						muteStatus: void 0,
						name: void 0,
						created: void 0,
						banStatus: void 0,
						isSuspended: void 0,
						approveStatus: void 0,
						isShadowBanned: void 0,
						recentPosts: {},
						recentConvos: {},
						id: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								const t = pi.decode(o, o.uint32());
								void 0 !== t.value && (r.recentComments[t.key] = t.value);
								break;
							case 2:
								r.muteStatus = si.decode(o, o.uint32());
								break;
							case 3:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.created = ne.d.decode(o, o.uint32()).value;
								break;
							case 5:
								r.banStatus = di.decode(o, o.uint32());
								break;
							case 6:
								r.isSuspended = ne.a.decode(o, o.uint32()).value;
								break;
							case 7:
								r.approveStatus = li.decode(o, o.uint32());
								break;
							case 8:
								r.isShadowBanned = ne.a.decode(o, o.uint32()).value;
								break;
							case 9:
								const i = vi.decode(o, o.uint32());
								void 0 !== i.value && (r.recentPosts[i.key] = i.value);
								break;
							case 10:
								const n = mi.decode(o, o.uint32());
								void 0 !== n.value && (r.recentConvos[n.key] = n.value);
								break;
							case 11:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ni.$type,
					recentComments: rr(e.recentComments) ? Object.entries(e.recentComments).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ai.fromJSON(i), e
					}, {}) : {},
					muteStatus: nr(e.muteStatus) ? si.fromJSON(e.muteStatus) : void 0,
					name: nr(e.name) ? String(e.name) : void 0,
					created: nr(e.created) ? String(e.created) : void 0,
					banStatus: nr(e.banStatus) ? di.fromJSON(e.banStatus) : void 0,
					isSuspended: nr(e.isSuspended) ? Boolean(e.isSuspended) : void 0,
					approveStatus: nr(e.approveStatus) ? li.fromJSON(e.approveStatus) : void 0,
					isShadowBanned: nr(e.isShadowBanned) ? Boolean(e.isShadowBanned) : void 0,
					recentPosts: rr(e.recentPosts) ? Object.entries(e.recentPosts).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ui.fromJSON(i), e
					}, {}) : {},
					recentConvos: rr(e.recentConvos) ? Object.entries(e.recentConvos).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ci.fromJSON(i), e
					}, {}) : {},
					id: nr(e.id) ? String(e.id) : void 0
				}),
				toJSON(e) {
					const t = {
						recentComments: {}
					};
					return e.recentComments && Object.entries(e.recentComments).forEach(e => {
						let [o, i] = e;
						t.recentComments[o] = ai.toJSON(i)
					}), void 0 !== e.muteStatus && (t.muteStatus = e.muteStatus ? si.toJSON(e.muteStatus) : void 0), void 0 !== e.name && (t.name = e.name), void 0 !== e.created && (t.created = e.created), void 0 !== e.banStatus && (t.banStatus = e.banStatus ? di.toJSON(e.banStatus) : void 0), void 0 !== e.isSuspended && (t.isSuspended = e.isSuspended), void 0 !== e.approveStatus && (t.approveStatus = e.approveStatus ? li.toJSON(e.approveStatus) : void 0), void 0 !== e.isShadowBanned && (t.isShadowBanned = e.isShadowBanned), t.recentPosts = {}, e.recentPosts && Object.entries(e.recentPosts).forEach(e => {
						let [o, i] = e;
						t.recentPosts[o] = ui.toJSON(i)
					}), t.recentConvos = {}, e.recentConvos && Object.entries(e.recentConvos).forEach(e => {
						let [o, i] = e;
						t.recentConvos[o] = ci.toJSON(i)
					}), void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d;
					const l = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData",
						recentComments: {},
						muteStatus: void 0,
						name: void 0,
						created: void 0,
						banStatus: void 0,
						isSuspended: void 0,
						approveStatus: void 0,
						isShadowBanned: void 0,
						recentPosts: {},
						recentConvos: {},
						id: void 0
					};
					return l.recentComments = Object.entries(null !== (t = e.recentComments) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ai.fromPartial(i)), e
					}, {}), l.muteStatus = void 0 !== e.muteStatus && null !== e.muteStatus ? si.fromPartial(e.muteStatus) : void 0, l.name = null !== (o = e.name) && void 0 !== o ? o : void 0, l.created = null !== (i = e.created) && void 0 !== i ? i : void 0, l.banStatus = void 0 !== e.banStatus && null !== e.banStatus ? di.fromPartial(e.banStatus) : void 0, l.isSuspended = null !== (r = e.isSuspended) && void 0 !== r ? r : void 0, l.approveStatus = void 0 !== e.approveStatus && null !== e.approveStatus ? li.fromPartial(e.approveStatus) : void 0, l.isShadowBanned = null !== (n = e.isShadowBanned) && void 0 !== n ? n : void 0, l.recentPosts = Object.entries(null !== (a = e.recentPosts) && void 0 !== a ? a : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ui.fromPartial(i)), e
					}, {}), l.recentConvos = Object.entries(null !== (s = e.recentConvos) && void 0 !== s ? s : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ci.fromPartial(i)), e
					}, {}), l.id = null !== (d = e.id) && void 0 !== d ? d : void 0, l
				}
			};
			i.a.set(ni.$type, ni);
			const ai = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.CommentData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.comment && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.comment
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.date && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.date
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.permalink && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.permalink
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.title && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.title
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.CommentData",
						comment: void 0,
						date: void 0,
						permalink: void 0,
						title: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.comment = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.date = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.permalink = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.title = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ai.$type,
					comment: nr(e.comment) ? String(e.comment) : void 0,
					date: nr(e.date) ? String(e.date) : void 0,
					permalink: nr(e.permalink) ? String(e.permalink) : void 0,
					title: nr(e.title) ? String(e.title) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.comment && (t.comment = e.comment), void 0 !== e.date && (t.date = e.date), void 0 !== e.permalink && (t.permalink = e.permalink), void 0 !== e.title && (t.title = e.title), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.CommentData",
						comment: void 0,
						date: void 0,
						permalink: void 0,
						title: void 0
					};
					return n.comment = null !== (t = e.comment) && void 0 !== t ? t : void 0, n.date = null !== (o = e.date) && void 0 !== o ? o : void 0, n.permalink = null !== (i = e.permalink) && void 0 !== i ? i : void 0, n.title = null !== (r = e.title) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(ai.$type, ai);
			const si = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.MuteStatus",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.muteCount && ne.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.muteCount
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.isMuted && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isMuted
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.endDate && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.endDate
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.reason && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.reason
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.MuteStatus",
						muteCount: void 0,
						isMuted: void 0,
						endDate: void 0,
						reason: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.muteCount = ne.c.decode(o, o.uint32()).value;
								break;
							case 2:
								r.isMuted = ne.a.decode(o, o.uint32()).value;
								break;
							case 3:
								r.endDate = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.reason = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: si.$type,
					muteCount: nr(e.muteCount) ? Number(e.muteCount) : void 0,
					isMuted: nr(e.isMuted) ? Boolean(e.isMuted) : void 0,
					endDate: nr(e.endDate) ? String(e.endDate) : void 0,
					reason: nr(e.reason) ? String(e.reason) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.muteCount && (t.muteCount = e.muteCount), void 0 !== e.isMuted && (t.isMuted = e.isMuted), void 0 !== e.endDate && (t.endDate = e.endDate), void 0 !== e.reason && (t.reason = e.reason), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.MuteStatus",
						muteCount: void 0,
						isMuted: void 0,
						endDate: void 0,
						reason: void 0
					};
					return n.muteCount = null !== (t = e.muteCount) && void 0 !== t ? t : void 0, n.isMuted = null !== (o = e.isMuted) && void 0 !== o ? o : void 0, n.endDate = null !== (i = e.endDate) && void 0 !== i ? i : void 0, n.reason = null !== (r = e.reason) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(si.$type, si);
			const di = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.BanStatus",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.isBanned && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isBanned
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.isPermanent && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isPermanent
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.endDate && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.endDate
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.reason && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.reason
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.BanStatus",
						isBanned: void 0,
						isPermanent: void 0,
						endDate: void 0,
						reason: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.isBanned = ne.a.decode(o, o.uint32()).value;
								break;
							case 2:
								r.isPermanent = ne.a.decode(o, o.uint32()).value;
								break;
							case 3:
								r.endDate = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.reason = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: di.$type,
					isBanned: nr(e.isBanned) ? Boolean(e.isBanned) : void 0,
					isPermanent: nr(e.isPermanent) ? Boolean(e.isPermanent) : void 0,
					endDate: nr(e.endDate) ? String(e.endDate) : void 0,
					reason: nr(e.reason) ? String(e.reason) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.isBanned && (t.isBanned = e.isBanned), void 0 !== e.isPermanent && (t.isPermanent = e.isPermanent), void 0 !== e.endDate && (t.endDate = e.endDate), void 0 !== e.reason && (t.reason = e.reason), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.BanStatus",
						isBanned: void 0,
						isPermanent: void 0,
						endDate: void 0,
						reason: void 0
					};
					return n.isBanned = null !== (t = e.isBanned) && void 0 !== t ? t : void 0, n.isPermanent = null !== (o = e.isPermanent) && void 0 !== o ? o : void 0, n.endDate = null !== (i = e.endDate) && void 0 !== i ? i : void 0, n.reason = null !== (r = e.reason) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(di.$type, di);
			const li = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.ApproveStatus",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.isApproved && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isApproved
					}, t.uint32(10).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.ApproveStatus",
						isApproved: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.isApproved = ne.a.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: li.$type,
					isApproved: nr(e.isApproved) ? Boolean(e.isApproved) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.isApproved && (t.isApproved = e.isApproved), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.ApproveStatus",
						isApproved: void 0
					};
					return o.isApproved = null !== (t = e.isApproved) && void 0 !== t ? t : void 0, o
				}
			};
			i.a.set(li.$type, li);
			const ui = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.PostData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.date && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.date
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.permalink && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.permalink
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.title && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.title
					}, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.PostData",
						date: void 0,
						permalink: void 0,
						title: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.date = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.permalink = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.title = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ui.$type,
					date: nr(e.date) ? String(e.date) : void 0,
					permalink: nr(e.permalink) ? String(e.permalink) : void 0,
					title: nr(e.title) ? String(e.title) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.date && (t.date = e.date), void 0 !== e.permalink && (t.permalink = e.permalink), void 0 !== e.title && (t.title = e.title), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.PostData",
						date: void 0,
						permalink: void 0,
						title: void 0
					};
					return r.date = null !== (t = e.date) && void 0 !== t ? t : void 0, r.permalink = null !== (o = e.permalink) && void 0 !== o ? o : void 0, r.title = null !== (i = e.title) && void 0 !== i ? i : void 0, r
				}
			};
			i.a.set(ui.$type, ui);
			const ci = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.ConvoData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.date && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.date
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.permalink && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.permalink
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.subject && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.subject
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.ConvoData",
						date: void 0,
						permalink: void 0,
						id: void 0,
						subject: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.date = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.permalink = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.subject = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ci.$type,
					date: nr(e.date) ? String(e.date) : void 0,
					permalink: nr(e.permalink) ? String(e.permalink) : void 0,
					id: nr(e.id) ? String(e.id) : void 0,
					subject: nr(e.subject) ? String(e.subject) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.date && (t.date = e.date), void 0 !== e.permalink && (t.permalink = e.permalink), void 0 !== e.id && (t.id = e.id), void 0 !== e.subject && (t.subject = e.subject), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.ConvoData",
						date: void 0,
						permalink: void 0,
						id: void 0,
						subject: void 0
					};
					return n.date = null !== (t = e.date) && void 0 !== t ? t : void 0, n.permalink = null !== (o = e.permalink) && void 0 !== o ? o : void 0, n.id = null !== (i = e.id) && void 0 !== i ? i : void 0, n.subject = null !== (r = e.subject) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(ci.$type, ci);
			const pi = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentCommentsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ai.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentCommentsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ai.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: pi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ai.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ai.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentCommentsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ai.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(pi.$type, pi);
			const vi = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentPostsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ui.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentPostsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ui.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: vi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ui.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ui.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentPostsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ui.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(vi.$type, vi);
			const mi = {
				$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentConvosEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ci.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentConvosEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ci.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: mi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ci.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ci.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ConversationUserData.RecentConvosEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ci.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(mi.$type, mi);
			const fi = {
				$type: "devvit.plugin.redditapi.newmodmail.Participant",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.isMod && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isMod
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.isAdmin && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isAdmin
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.isOp && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isOp
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.isParticipant && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isParticipant
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.isApproved && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isApproved
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.isHidden && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isHidden
					}, t.uint32(58).fork()).ldelim(), void 0 !== e.id && ne.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.id
					}, t.uint32(66).fork()).ldelim(), void 0 !== e.isDeleted && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isDeleted
					}, t.uint32(74).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.Participant",
						isMod: void 0,
						isAdmin: void 0,
						name: void 0,
						isOp: void 0,
						isParticipant: void 0,
						isApproved: void 0,
						isHidden: void 0,
						id: void 0,
						isDeleted: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.isMod = ne.a.decode(o, o.uint32()).value;
								break;
							case 2:
								r.isAdmin = ne.a.decode(o, o.uint32()).value;
								break;
							case 3:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.isOp = ne.a.decode(o, o.uint32()).value;
								break;
							case 5:
								r.isParticipant = ne.a.decode(o, o.uint32()).value;
								break;
							case 6:
								r.isApproved = ne.a.decode(o, o.uint32()).value;
								break;
							case 7:
								r.isHidden = ne.a.decode(o, o.uint32()).value;
								break;
							case 8:
								r.id = ne.c.decode(o, o.uint32()).value;
								break;
							case 9:
								r.isDeleted = ne.a.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: fi.$type,
					isMod: nr(e.isMod) ? Boolean(e.isMod) : void 0,
					isAdmin: nr(e.isAdmin) ? Boolean(e.isAdmin) : void 0,
					name: nr(e.name) ? String(e.name) : void 0,
					isOp: nr(e.isOp) ? Boolean(e.isOp) : void 0,
					isParticipant: nr(e.isParticipant) ? Boolean(e.isParticipant) : void 0,
					isApproved: nr(e.isApproved) ? Boolean(e.isApproved) : void 0,
					isHidden: nr(e.isHidden) ? Boolean(e.isHidden) : void 0,
					id: nr(e.id) ? Number(e.id) : void 0,
					isDeleted: nr(e.isDeleted) ? Boolean(e.isDeleted) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.isMod && (t.isMod = e.isMod), void 0 !== e.isAdmin && (t.isAdmin = e.isAdmin), void 0 !== e.name && (t.name = e.name), void 0 !== e.isOp && (t.isOp = e.isOp), void 0 !== e.isParticipant && (t.isParticipant = e.isParticipant), void 0 !== e.isApproved && (t.isApproved = e.isApproved), void 0 !== e.isHidden && (t.isHidden = e.isHidden), void 0 !== e.id && (t.id = e.id), void 0 !== e.isDeleted && (t.isDeleted = e.isDeleted), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l;
					const u = {
						$type: "devvit.plugin.redditapi.newmodmail.Participant",
						isMod: void 0,
						isAdmin: void 0,
						name: void 0,
						isOp: void 0,
						isParticipant: void 0,
						isApproved: void 0,
						isHidden: void 0,
						id: void 0,
						isDeleted: void 0
					};
					return u.isMod = null !== (t = e.isMod) && void 0 !== t ? t : void 0, u.isAdmin = null !== (o = e.isAdmin) && void 0 !== o ? o : void 0, u.name = null !== (i = e.name) && void 0 !== i ? i : void 0, u.isOp = null !== (r = e.isOp) && void 0 !== r ? r : void 0, u.isParticipant = null !== (n = e.isParticipant) && void 0 !== n ? n : void 0, u.isApproved = null !== (a = e.isApproved) && void 0 !== a ? a : void 0, u.isHidden = null !== (s = e.isHidden) && void 0 !== s ? s : void 0, u.id = null !== (d = e.id) && void 0 !== d ? d : void 0, u.isDeleted = null !== (l = e.isDeleted) && void 0 !== l ? l : void 0, u
				}
			};
			i.a.set(fi.$type, fi);
			const gi = {
				$type: "devvit.plugin.redditapi.newmodmail.ModActionData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.date && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.date
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.actionTypeId && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.actionTypeId
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.author && hi.encode(e.author, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ModActionData",
						date: void 0,
						actionTypeId: void 0,
						id: void 0,
						author: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.date = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.actionTypeId = ne.b.decode(o, o.uint32()).value;
								break;
							case 3:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.author = hi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: gi.$type,
					date: nr(e.date) ? String(e.date) : void 0,
					actionTypeId: nr(e.actionTypeId) ? Number(e.actionTypeId) : void 0,
					id: nr(e.id) ? String(e.id) : void 0,
					author: nr(e.author) ? hi.fromJSON(e.author) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.date && (t.date = e.date), void 0 !== e.actionTypeId && (t.actionTypeId = e.actionTypeId), void 0 !== e.id && (t.id = e.id), void 0 !== e.author && (t.author = e.author ? hi.toJSON(e.author) : void 0), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ModActionData",
						date: void 0,
						actionTypeId: void 0,
						id: void 0,
						author: void 0
					};
					return r.date = null !== (t = e.date) && void 0 !== t ? t : void 0, r.actionTypeId = null !== (o = e.actionTypeId) && void 0 !== o ? o : void 0, r.id = null !== (i = e.id) && void 0 !== i ? i : void 0, r.author = void 0 !== e.author && null !== e.author ? hi.fromPartial(e.author) : void 0, r
				}
			};
			i.a.set(gi.$type, gi);
			const hi = {
				$type: "devvit.plugin.redditapi.newmodmail.ModActionData.ModActionAuthor",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.isMod && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isMod
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.isAdmin && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isAdmin
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.isHidden && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isHidden
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.id && ne.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.id
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.isDeleted && ne.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isDeleted
					}, t.uint32(50).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ModActionData.ModActionAuthor",
						isMod: void 0,
						isAdmin: void 0,
						name: void 0,
						isHidden: void 0,
						id: void 0,
						isDeleted: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.isMod = ne.a.decode(o, o.uint32()).value;
								break;
							case 2:
								r.isAdmin = ne.a.decode(o, o.uint32()).value;
								break;
							case 3:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.isHidden = ne.a.decode(o, o.uint32()).value;
								break;
							case 5:
								r.id = ne.c.decode(o, o.uint32()).value;
								break;
							case 6:
								r.isDeleted = ne.a.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: hi.$type,
					isMod: nr(e.isMod) ? Boolean(e.isMod) : void 0,
					isAdmin: nr(e.isAdmin) ? Boolean(e.isAdmin) : void 0,
					name: nr(e.name) ? String(e.name) : void 0,
					isHidden: nr(e.isHidden) ? Boolean(e.isHidden) : void 0,
					id: nr(e.id) ? Number(e.id) : void 0,
					isDeleted: nr(e.isDeleted) ? Boolean(e.isDeleted) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.isMod && (t.isMod = e.isMod), void 0 !== e.isAdmin && (t.isAdmin = e.isAdmin), void 0 !== e.name && (t.name = e.name), void 0 !== e.isHidden && (t.isHidden = e.isHidden), void 0 !== e.id && (t.id = e.id), void 0 !== e.isDeleted && (t.isDeleted = e.isDeleted), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.plugin.redditapi.newmodmail.ModActionData.ModActionAuthor",
						isMod: void 0,
						isAdmin: void 0,
						name: void 0,
						isHidden: void 0,
						id: void 0,
						isDeleted: void 0
					};
					return s.isMod = null !== (t = e.isMod) && void 0 !== t ? t : void 0, s.isAdmin = null !== (o = e.isAdmin) && void 0 !== o ? o : void 0, s.name = null !== (i = e.name) && void 0 !== i ? i : void 0, s.isHidden = null !== (r = e.isHidden) && void 0 !== r ? r : void 0, s.id = null !== (n = e.id) && void 0 !== n ? n : void 0, s.isDeleted = null !== (a = e.isDeleted) && void 0 !== a ? a : void 0, s
				}
			};
			i.a.set(hi.$type, hi);
			const yi = {
				$type: "devvit.plugin.redditapi.newmodmail.BulkReadConversationsRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.entity && t.uint32(10).string(e.entity), "" !== e.state && t.uint32(18).string(e.state), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.BulkReadConversationsRequest",
						entity: "",
						state: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.entity = o.string();
								break;
							case 2:
								r.state = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: yi.$type,
					entity: nr(e.entity) ? String(e.entity) : "",
					state: nr(e.state) ? String(e.state) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.entity && (t.entity = e.entity), void 0 !== e.state && (t.state = e.state), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.BulkReadConversationsRequest",
						entity: "",
						state: ""
					};
					return i.entity = null !== (t = e.entity) && void 0 !== t ? t : "", i.state = null !== (o = e.state) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(yi.$type, yi);
			const bi = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationsRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.after && t.uint32(10).string(e.after), "" !== e.entity && t.uint32(18).string(e.entity), 0 !== e.limit && t.uint32(24).int32(e.limit), "" !== e.sort && t.uint32(34).string(e.sort), "" !== e.state && t.uint32(42).string(e.state), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsRequest",
						after: "",
						entity: "",
						limit: 0,
						sort: "",
						state: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.after = o.string();
								break;
							case 2:
								r.entity = o.string();
								break;
							case 3:
								r.limit = o.int32();
								break;
							case 4:
								r.sort = o.string();
								break;
							case 5:
								r.state = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: bi.$type,
					after: nr(e.after) ? String(e.after) : "",
					entity: nr(e.entity) ? String(e.entity) : "",
					limit: nr(e.limit) ? Number(e.limit) : 0,
					sort: nr(e.sort) ? String(e.sort) : "",
					state: nr(e.state) ? String(e.state) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.after && (t.after = e.after), void 0 !== e.entity && (t.entity = e.entity), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.sort && (t.sort = e.sort), void 0 !== e.state && (t.state = e.state), t
				},
				fromPartial(e) {
					var t, o, i, r, n;
					const a = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsRequest",
						after: "",
						entity: "",
						limit: 0,
						sort: "",
						state: ""
					};
					return a.after = null !== (t = e.after) && void 0 !== t ? t : "", a.entity = null !== (o = e.entity) && void 0 !== o ? o : "", a.limit = null !== (i = e.limit) && void 0 !== i ? i : 0, a.sort = null !== (r = e.sort) && void 0 !== r ? r : "", a.state = null !== (n = e.state) && void 0 !== n ? n : "", a
				}
			};
			i.a.set(bi.$type, bi);
			const ki = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.body && t.uint32(10).string(e.body), !0 === e.isAuthorHidden && t.uint32(16).bool(e.isAuthorHidden), "" !== e.srName && t.uint32(26).string(e.srName), "" !== e.subject && t.uint32(34).string(e.subject), "" !== e.to && t.uint32(42).string(e.to), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationRequest",
						body: "",
						isAuthorHidden: !1,
						srName: "",
						subject: "",
						to: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.body = o.string();
								break;
							case 2:
								r.isAuthorHidden = o.bool();
								break;
							case 3:
								r.srName = o.string();
								break;
							case 4:
								r.subject = o.string();
								break;
							case 5:
								r.to = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ki.$type,
					body: nr(e.body) ? String(e.body) : "",
					isAuthorHidden: !!nr(e.isAuthorHidden) && Boolean(e.isAuthorHidden),
					srName: nr(e.srName) ? String(e.srName) : "",
					subject: nr(e.subject) ? String(e.subject) : "",
					to: nr(e.to) ? String(e.to) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.body && (t.body = e.body), void 0 !== e.isAuthorHidden && (t.isAuthorHidden = e.isAuthorHidden), void 0 !== e.srName && (t.srName = e.srName), void 0 !== e.subject && (t.subject = e.subject), void 0 !== e.to && (t.to = e.to), t
				},
				fromPartial(e) {
					var t, o, i, r, n;
					const a = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationRequest",
						body: "",
						isAuthorHidden: !1,
						srName: "",
						subject: "",
						to: ""
					};
					return a.body = null !== (t = e.body) && void 0 !== t ? t : "", a.isAuthorHidden = null !== (o = e.isAuthorHidden) && void 0 !== o && o, a.srName = null !== (i = e.srName) && void 0 !== i ? i : "", a.subject = null !== (r = e.subject) && void 0 !== r ? r : "", a.to = null !== (n = e.to) && void 0 !== n ? n : "", a
				}
			};
			i.a.set(ki.$type, ki);
			const Si = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.conversationId && t.uint32(10).string(e.conversationId), !0 === e.markRead && t.uint32(16).bool(e.markRead), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationRequest",
						conversationId: "",
						markRead: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversationId = o.string();
								break;
							case 2:
								r.markRead = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Si.$type,
					conversationId: nr(e.conversationId) ? String(e.conversationId) : "",
					markRead: !!nr(e.markRead) && Boolean(e.markRead)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversationId && (t.conversationId = e.conversationId), void 0 !== e.markRead && (t.markRead = e.markRead), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationRequest",
						conversationId: "",
						markRead: !1
					};
					return i.conversationId = null !== (t = e.conversationId) && void 0 !== t ? t : "", i.markRead = null !== (o = e.markRead) && void 0 !== o && o, i
				}
			};
			i.a.set(Si.$type, Si);
			const wi = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.body && t.uint32(10).string(e.body), !0 === e.isAuthorHidden && t.uint32(16).bool(e.isAuthorHidden), !0 === e.isInternal && t.uint32(24).bool(e.isInternal), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageRequest",
						body: "",
						isAuthorHidden: !1,
						isInternal: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.body = o.string();
								break;
							case 2:
								r.isAuthorHidden = o.bool();
								break;
							case 3:
								r.isInternal = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: wi.$type,
					body: nr(e.body) ? String(e.body) : "",
					isAuthorHidden: !!nr(e.isAuthorHidden) && Boolean(e.isAuthorHidden),
					isInternal: !!nr(e.isInternal) && Boolean(e.isInternal)
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.body && (t.body = e.body), void 0 !== e.isAuthorHidden && (t.isAuthorHidden = e.isAuthorHidden), void 0 !== e.isInternal && (t.isInternal = e.isInternal), t
				},
				fromPartial(e) {
					var t, o, i;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageRequest",
						body: "",
						isAuthorHidden: !1,
						isInternal: !1
					};
					return r.body = null !== (t = e.body) && void 0 !== t ? t : "", r.isAuthorHidden = null !== (o = e.isAuthorHidden) && void 0 !== o && o, r.isInternal = null !== (i = e.isInternal) && void 0 !== i && i, r
				}
			};
			i.a.set(wi.$type, wi);
			const Oi = {
				$type: "devvit.plugin.redditapi.newmodmail.BasicConversationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.conversationId && t.uint32(10).string(e.conversationId), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.BasicConversationRequest",
						conversationId: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversationId = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Oi.$type,
					conversationId: nr(e.conversationId) ? String(e.conversationId) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversationId && (t.conversationId = e.conversationId), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.BasicConversationRequest",
						conversationId: ""
					};
					return o.conversationId = null !== (t = e.conversationId) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Oi.$type, Oi);
			const Ti = {
				$type: "devvit.plugin.redditapi.newmodmail.BasicConversationsRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.conversationIds && t.uint32(10).string(e.conversationIds), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.BasicConversationsRequest",
						conversationIds: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversationIds = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ti.$type,
					conversationIds: nr(e.conversationIds) ? String(e.conversationIds) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversationIds && (t.conversationIds = e.conversationIds), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.BasicConversationsRequest",
						conversationIds: ""
					};
					return o.conversationIds = null !== (t = e.conversationIds) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Ti.$type, Ti);
			const Ni = {
				$type: "devvit.plugin.redditapi.newmodmail.MuteConversationRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.conversationId && t.uint32(10).string(e.conversationId), 0 !== e.numHours && t.uint32(16).int32(e.numHours), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationRequest",
						conversationId: "",
						numHours: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversationId = o.string();
								break;
							case 2:
								r.numHours = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ni.$type,
					conversationId: nr(e.conversationId) ? String(e.conversationId) : "",
					numHours: nr(e.numHours) ? Number(e.numHours) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversationId && (t.conversationId = e.conversationId), void 0 !== e.numHours && (t.numHours = Math.round(e.numHours)), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationRequest",
						conversationId: "",
						numHours: 0
					};
					return i.conversationId = null !== (t = e.conversationId) && void 0 !== t ? t : "", i.numHours = null !== (o = e.numHours) && void 0 !== o ? o : 0, i
				}
			};
			i.a.set(Ni.$type, Ni);
			const Ri = {
				$type: "devvit.plugin.redditapi.newmodmail.TempBanRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.conversationId && t.uint32(10).string(e.conversationId), 0 !== e.duration && t.uint32(16).int32(e.duration), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanRequest",
						conversationId: "",
						duration: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversationId = o.string();
								break;
							case 2:
								r.duration = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ri.$type,
					conversationId: nr(e.conversationId) ? String(e.conversationId) : "",
					duration: nr(e.duration) ? Number(e.duration) : 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversationId && (t.conversationId = e.conversationId), void 0 !== e.duration && (t.duration = Math.round(e.duration)), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanRequest",
						conversationId: "",
						duration: 0
					};
					return i.conversationId = null !== (t = e.conversationId) && void 0 !== t ? t : "", i.duration = null !== (o = e.duration) && void 0 !== o ? o : 0, i
				}
			};
			i.a.set(Ri.$type, Ri);
			const $i = {
				$type: "devvit.plugin.redditapi.newmodmail.BulkReadConversationsResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.conversationIds) ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: o
					}, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.BulkReadConversationsResponse",
						conversationIds: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversationIds.push(ne.d.decode(o, o.uint32()).value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: $i.$type,
					conversationIds: Array.isArray(null == e ? void 0 : e.conversationIds) ? e.conversationIds.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.conversationIds ? t.conversationIds = e.conversationIds.map(e => e) : t.conversationIds = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.BulkReadConversationsResponse",
						conversationIds: []
					};
					return o.conversationIds = (null === (t = e.conversationIds) || void 0 === t ? void 0 : t.map(e => e)) || [], o
				}
			};
			i.a.set($i.$type, $i);
			const Ci = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					Object.entries(e.conversations).forEach(e => {
						let [o, i] = e;
						Ii.encode({
							$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.ConversationsEntry",
							key: o,
							value: i
						}, t.uint32(10).fork()).ldelim()
					}), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Ei.encode({
							$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), void 0 !== e.viewerId && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.viewerId
					}, t.uint32(26).fork()).ldelim();
					for (const o of e.conversationIds) ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: o
					}, t.uint32(34).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse",
						conversations: {},
						messages: {},
						viewerId: void 0,
						conversationIds: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								const t = Ii.decode(o, o.uint32());
								void 0 !== t.value && (r.conversations[t.key] = t.value);
								break;
							case 2:
								const i = Ei.decode(o, o.uint32());
								void 0 !== i.value && (r.messages[i.key] = i.value);
								break;
							case 3:
								r.viewerId = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.conversationIds.push(ne.d.decode(o, o.uint32()).value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ci.$type,
					conversations: rr(e.conversations) ? Object.entries(e.conversations).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ei.fromJSON(i), e
					}, {}) : {},
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					viewerId: nr(e.viewerId) ? String(e.viewerId) : void 0,
					conversationIds: Array.isArray(null == e ? void 0 : e.conversationIds) ? e.conversationIds.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {
						conversations: {}
					};
					return e.conversations && Object.entries(e.conversations).forEach(e => {
						let [o, i] = e;
						t.conversations[o] = ei.toJSON(i)
					}), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), void 0 !== e.viewerId && (t.viewerId = e.viewerId), e.conversationIds ? t.conversationIds = e.conversationIds.map(e => e) : t.conversationIds = [], t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse",
						conversations: {},
						messages: {},
						viewerId: void 0,
						conversationIds: []
					};
					return n.conversations = Object.entries(null !== (t = e.conversations) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ei.fromPartial(i)), e
					}, {}), n.messages = Object.entries(null !== (o = e.messages) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), n.viewerId = null !== (i = e.viewerId) && void 0 !== i ? i : void 0, n.conversationIds = (null === (r = e.conversationIds) || void 0 === r ? void 0 : r.map(e => e)) || [], n
				}
			};
			i.a.set(Ci.$type, Ci);
			const Ii = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.ConversationsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ei.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.ConversationsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ei.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ii.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ei.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ei.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.ConversationsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ei.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Ii.$type, Ii);
			const Ei = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ei.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationsResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Ei.$type, Ei);
			const Ai = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.conversation && ei.encode(e.conversation, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Pi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						xi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(26).fork()).ldelim()
					});
					for (const o of e.fields) ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: o
					}, t.uint32(34).fork()).ldelim();
					return void 0 !== e.reason && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.reason
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.message && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.message
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.explanation && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.explanation
					}, t.uint32(58).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse",
						conversation: void 0,
						messages: {},
						modActions: {},
						fields: [],
						reason: void 0,
						message: void 0,
						explanation: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversation = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Pi.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								const i = xi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							case 4:
								r.fields.push(ne.d.decode(o, o.uint32()).value);
								break;
							case 5:
								r.reason = ne.d.decode(o, o.uint32()).value;
								break;
							case 6:
								r.message = ne.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.explanation = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ai.$type,
					conversation: nr(e.conversation) ? ei.fromJSON(e.conversation) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {},
					fields: Array.isArray(null == e ? void 0 : e.fields) ? e.fields.map(e => String(e)) : [],
					reason: nr(e.reason) ? String(e.reason) : void 0,
					message: nr(e.message) ? String(e.message) : void 0,
					explanation: nr(e.explanation) ? String(e.explanation) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversation && (t.conversation = e.conversation ? ei.toJSON(e.conversation) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), e.fields ? t.fields = e.fields.map(e => e) : t.fields = [], void 0 !== e.reason && (t.reason = e.reason), void 0 !== e.message && (t.message = e.message), void 0 !== e.explanation && (t.explanation = e.explanation), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse",
						conversation: void 0,
						messages: {},
						modActions: {},
						fields: [],
						reason: void 0,
						message: void 0,
						explanation: void 0
					};
					return s.conversation = void 0 !== e.conversation && null !== e.conversation ? ei.fromPartial(e.conversation) : void 0, s.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), s.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), s.fields = (null === (i = e.fields) || void 0 === i ? void 0 : i.map(e => e)) || [], s.reason = null !== (r = e.reason) && void 0 !== r ? r : void 0, s.message = null !== (n = e.message) && void 0 !== n ? n : void 0, s.explanation = null !== (a = e.explanation) && void 0 !== a ? a : void 0, s
				}
			};
			i.a.set(Ai.$type, Ai);
			const Pi = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Pi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Pi.$type, Pi);
			const xi = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: xi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(xi.$type, xi);
			const Fi = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.conversation && ei.encode(e.conversation, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						ji.encode({
							$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						Mi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(26).fork()).ldelim()
					}), void 0 !== e.participantSubreddit && Xe.a.encode(e.participantSubreddit, t.uint32(34).fork()).ldelim(), void 0 !== e.user && ni.encode(e.user, t.uint32(42).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse",
						conversation: void 0,
						messages: {},
						modActions: {},
						participantSubreddit: void 0,
						user: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversation = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = ji.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								const i = Mi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							case 4:
								r.participantSubreddit = Xe.a.decode(o, o.uint32());
								break;
							case 5:
								r.user = ni.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Fi.$type,
					conversation: nr(e.conversation) ? ei.fromJSON(e.conversation) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {},
					participantSubreddit: nr(e.participantSubreddit) ? Xe.a.fromJSON(e.participantSubreddit) : void 0,
					user: nr(e.user) ? ni.fromJSON(e.user) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversation && (t.conversation = e.conversation ? ei.toJSON(e.conversation) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), void 0 !== e.participantSubreddit && (t.participantSubreddit = e.participantSubreddit ? Xe.a.toJSON(e.participantSubreddit) : void 0), void 0 !== e.user && (t.user = e.user ? ni.toJSON(e.user) : void 0), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse",
						conversation: void 0,
						messages: {},
						modActions: {},
						participantSubreddit: void 0,
						user: void 0
					};
					return i.conversation = void 0 !== e.conversation && null !== e.conversation ? ei.fromPartial(e.conversation) : void 0, i.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), i.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), i.participantSubreddit = void 0 !== e.participantSubreddit && null !== e.participantSubreddit ? Xe.a.fromPartial(e.participantSubreddit) : void 0, i.user = void 0 !== e.user && null !== e.user ? ni.fromPartial(e.user) : void 0, i
				}
			};
			i.a.set(Fi.$type, Fi);
			const ji = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ji.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(ji.$type, ji);
			const Mi = {
				$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Mi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.GetConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Mi.$type, Mi);
			const Di = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.conversation && ei.encode(e.conversation, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Ji.encode({
							$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse",
						conversation: void 0,
						messages: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversation = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Ji.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Di.$type,
					conversation: nr(e.conversation) ? ei.fromJSON(e.conversation) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversation && (t.conversation = e.conversation ? ei.toJSON(e.conversation) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse",
						conversation: void 0,
						messages: {}
					};
					return o.conversation = void 0 !== e.conversation && null !== e.conversation ? ei.fromPartial(e.conversation) : void 0, o.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), o
				}
			};
			i.a.set(Di.$type, Di);
			const Ji = {
				$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ji.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.CreateConversationMessageResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Ji.$type, Ji);
			const _i = {
				$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.conversations && ei.encode(e.conversations, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Bi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), void 0 !== e.user && ni.encode(e.user, t.uint32(26).fork()).ldelim(), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						Vi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(34).fork()).ldelim()
					});
					for (const o of e.fields) ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: o
					}, t.uint32(42).fork()).ldelim();
					return void 0 !== e.reason && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.reason
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.message && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.message
					}, t.uint32(58).fork()).ldelim(), void 0 !== e.explanation && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.explanation
					}, t.uint32(66).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse",
						conversations: void 0,
						messages: {},
						user: void 0,
						modActions: {},
						fields: [],
						reason: void 0,
						message: void 0,
						explanation: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversations = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Bi.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								r.user = ni.decode(o, o.uint32());
								break;
							case 4:
								const i = Vi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							case 5:
								r.fields.push(ne.d.decode(o, o.uint32()).value);
								break;
							case 6:
								r.reason = ne.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.message = ne.d.decode(o, o.uint32()).value;
								break;
							case 8:
								r.explanation = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: _i.$type,
					conversations: nr(e.conversations) ? ei.fromJSON(e.conversations) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					user: nr(e.user) ? ni.fromJSON(e.user) : void 0,
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {},
					fields: Array.isArray(null == e ? void 0 : e.fields) ? e.fields.map(e => String(e)) : [],
					reason: nr(e.reason) ? String(e.reason) : void 0,
					message: nr(e.message) ? String(e.message) : void 0,
					explanation: nr(e.explanation) ? String(e.explanation) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversations && (t.conversations = e.conversations ? ei.toJSON(e.conversations) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), void 0 !== e.user && (t.user = e.user ? ni.toJSON(e.user) : void 0), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), e.fields ? t.fields = e.fields.map(e => e) : t.fields = [], void 0 !== e.reason && (t.reason = e.reason), void 0 !== e.message && (t.message = e.message), void 0 !== e.explanation && (t.explanation = e.explanation), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse",
						conversations: void 0,
						messages: {},
						user: void 0,
						modActions: {},
						fields: [],
						reason: void 0,
						message: void 0,
						explanation: void 0
					};
					return s.conversations = void 0 !== e.conversations && null !== e.conversations ? ei.fromPartial(e.conversations) : void 0, s.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), s.user = void 0 !== e.user && null !== e.user ? ni.fromPartial(e.user) : void 0, s.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), s.fields = (null === (i = e.fields) || void 0 === i ? void 0 : i.map(e => e)) || [], s.reason = null !== (r = e.reason) && void 0 !== r ? r : void 0, s.message = null !== (n = e.message) && void 0 !== n ? n : void 0, s.explanation = null !== (a = e.explanation) && void 0 !== a ? a : void 0, s
				}
			};
			i.a.set(_i.$type, _i);
			const Bi = {
				$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Bi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Bi.$type, Bi);
			const Vi = {
				$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Vi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ApproveConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Vi.$type, Vi);
			const Li = {
				$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.conversations && ei.encode(e.conversations, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Ui.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						qi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(26).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse",
						conversations: void 0,
						messages: {},
						modActions: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversations = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Ui.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								const i = qi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Li.$type,
					conversations: nr(e.conversations) ? ei.fromJSON(e.conversations) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversations && (t.conversations = e.conversations ? ei.toJSON(e.conversations) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse",
						conversations: void 0,
						messages: {},
						modActions: {}
					};
					return i.conversations = void 0 !== e.conversations && null !== e.conversations ? ei.fromPartial(e.conversations) : void 0, i.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), i.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), i
				}
			};
			i.a.set(Li.$type, Li);
			const Ui = {
				$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ui.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Ui.$type, Ui);
			const qi = {
				$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: qi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.ArchiveConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(qi.$type, qi);
			const Wi = {
				$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.conversations && ei.encode(e.conversations, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Gi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						Hi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(26).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse",
						conversations: void 0,
						messages: {},
						modActions: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversations = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Gi.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								const i = Hi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Wi.$type,
					conversations: nr(e.conversations) ? ei.fromJSON(e.conversations) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversations && (t.conversations = e.conversations ? ei.toJSON(e.conversations) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse",
						conversations: void 0,
						messages: {},
						modActions: {}
					};
					return i.conversations = void 0 !== e.conversations && null !== e.conversations ? ei.fromPartial(e.conversations) : void 0, i.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), i.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), i
				}
			};
			i.a.set(Wi.$type, Wi);
			const Gi = {
				$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Gi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Gi.$type, Gi);
			const Hi = {
				$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Hi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.HighlightConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Hi.$type, Hi);
			const zi = {
				$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.conversations && ei.encode(e.conversations, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Yi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), void 0 !== e.user && ni.encode(e.user, t.uint32(26).fork()).ldelim(), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						Zi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(34).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse",
						conversations: void 0,
						messages: {},
						user: void 0,
						modActions: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversations = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Yi.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								r.user = ni.decode(o, o.uint32());
								break;
							case 4:
								const i = Zi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: zi.$type,
					conversations: nr(e.conversations) ? ei.fromJSON(e.conversations) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					user: nr(e.user) ? ni.fromJSON(e.user) : void 0,
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversations && (t.conversations = e.conversations ? ei.toJSON(e.conversations) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), void 0 !== e.user && (t.user = e.user ? ni.toJSON(e.user) : void 0), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse",
						conversations: void 0,
						messages: {},
						user: void 0,
						modActions: {}
					};
					return i.conversations = void 0 !== e.conversations && null !== e.conversations ? ei.fromPartial(e.conversations) : void 0, i.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), i.user = void 0 !== e.user && null !== e.user ? ni.fromPartial(e.user) : void 0, i.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), i
				}
			};
			i.a.set(zi.$type, zi);
			const Yi = {
				$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Yi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Yi.$type, Yi);
			const Zi = {
				$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Zi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.MuteConversationResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Zi.$type, Zi);
			const Xi = {
				$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.conversations && ei.encode(e.conversations, t.uint32(10).fork()).ldelim(), Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						Ki.encode({
							$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.MessagesEntry",
							key: o,
							value: i
						}, t.uint32(18).fork()).ldelim()
					}), void 0 !== e.user && ni.encode(e.user, t.uint32(26).fork()).ldelim(), Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						Qi.encode({
							$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.ModActionsEntry",
							key: o,
							value: i
						}, t.uint32(34).fork()).ldelim()
					});
					for (const o of e.fields) ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: o
					}, t.uint32(42).fork()).ldelim();
					return void 0 !== e.reason && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.reason
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.message && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.message
					}, t.uint32(58).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse",
						conversations: void 0,
						messages: {},
						user: void 0,
						modActions: {},
						fields: [],
						reason: void 0,
						message: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.conversations = ei.decode(o, o.uint32());
								break;
							case 2:
								const t = Ki.decode(o, o.uint32());
								void 0 !== t.value && (r.messages[t.key] = t.value);
								break;
							case 3:
								r.user = ni.decode(o, o.uint32());
								break;
							case 4:
								const i = Qi.decode(o, o.uint32());
								void 0 !== i.value && (r.modActions[i.key] = i.value);
								break;
							case 5:
								r.fields.push(ne.d.decode(o, o.uint32()).value);
								break;
							case 6:
								r.reason = ne.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.message = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Xi.$type,
					conversations: nr(e.conversations) ? ei.fromJSON(e.conversations) : void 0,
					messages: rr(e.messages) ? Object.entries(e.messages).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = ri.fromJSON(i), e
					}, {}) : {},
					user: nr(e.user) ? ni.fromJSON(e.user) : void 0,
					modActions: rr(e.modActions) ? Object.entries(e.modActions).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = gi.fromJSON(i), e
					}, {}) : {},
					fields: Array.isArray(null == e ? void 0 : e.fields) ? e.fields.map(e => String(e)) : [],
					reason: nr(e.reason) ? String(e.reason) : void 0,
					message: nr(e.message) ? String(e.message) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.conversations && (t.conversations = e.conversations ? ei.toJSON(e.conversations) : void 0), t.messages = {}, e.messages && Object.entries(e.messages).forEach(e => {
						let [o, i] = e;
						t.messages[o] = ri.toJSON(i)
					}), void 0 !== e.user && (t.user = e.user ? ni.toJSON(e.user) : void 0), t.modActions = {}, e.modActions && Object.entries(e.modActions).forEach(e => {
						let [o, i] = e;
						t.modActions[o] = gi.toJSON(i)
					}), e.fields ? t.fields = e.fields.map(e => e) : t.fields = [], void 0 !== e.reason && (t.reason = e.reason), void 0 !== e.message && (t.message = e.message), t
				},
				fromPartial(e) {
					var t, o, i, r, n;
					const a = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse",
						conversations: void 0,
						messages: {},
						user: void 0,
						modActions: {},
						fields: [],
						reason: void 0,
						message: void 0
					};
					return a.conversations = void 0 !== e.conversations && null !== e.conversations ? ei.fromPartial(e.conversations) : void 0, a.messages = Object.entries(null !== (t = e.messages) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = ri.fromPartial(i)), e
					}, {}), a.user = void 0 !== e.user && null !== e.user ? ni.fromPartial(e.user) : void 0, a.modActions = Object.entries(null !== (o = e.modActions) && void 0 !== o ? o : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = gi.fromPartial(i)), e
					}, {}), a.fields = (null === (i = e.fields) || void 0 === i ? void 0 : i.map(e => e)) || [], a.reason = null !== (r = e.reason) && void 0 !== r ? r : void 0, a.message = null !== (n = e.message) && void 0 !== n ? n : void 0, a
				}
			};
			i.a.set(Xi.$type, Xi);
			const Ki = {
				$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.MessagesEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && ri.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = ri.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Ki.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? ri.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? ri.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.MessagesEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? ri.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Ki.$type, Ki);
			const Qi = {
				$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.ModActionsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && gi.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = gi.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Qi.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? gi.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? gi.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.TempBanResponse.ModActionsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? gi.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(Qi.$type, Qi);
			const er = {
				$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return Object.entries(e.subreddits).forEach(e => {
						let [o, i] = e;
						or.encode({
							$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditsEntry",
							key: o,
							value: i
						}, t.uint32(10).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse",
						subreddits: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								const t = or.decode(o, o.uint32());
								void 0 !== t.value && (r.subreddits[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: er.$type,
					subreddits: rr(e.subreddits) ? Object.entries(e.subreddits).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = tr.fromJSON(i), e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {
						subreddits: {}
					};
					return e.subreddits && Object.entries(e.subreddits).forEach(e => {
						let [o, i] = e;
						t.subreddits[o] = tr.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse",
						subreddits: {}
					};
					return o.subreddits = Object.entries(null !== (t = e.subreddits) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = tr.fromPartial(i)), e
					}, {}), o
				}
			};
			i.a.set(er.$type, er);
			const tr = {
				$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.communityIcon && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.communityIcon
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.keyColor && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.keyColor
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.displayName && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.displayName
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.name && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.subscribers && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.subscribers
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.primaryColor && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.primaryColor
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.id && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(58).fork()).ldelim(), void 0 !== e.lastUpdated && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.lastUpdated
					}, t.uint32(66).fork()).ldelim(), void 0 !== e.icon && ne.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.icon
					}, t.uint32(74).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditData",
						communityIcon: void 0,
						keyColor: void 0,
						displayName: void 0,
						name: void 0,
						subscribers: void 0,
						primaryColor: void 0,
						id: void 0,
						lastUpdated: void 0,
						icon: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.communityIcon = ne.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.keyColor = ne.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.displayName = ne.d.decode(o, o.uint32()).value;
								break;
							case 4:
								r.name = ne.d.decode(o, o.uint32()).value;
								break;
							case 5:
								r.subscribers = ne.b.decode(o, o.uint32()).value;
								break;
							case 6:
								r.primaryColor = ne.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.id = ne.d.decode(o, o.uint32()).value;
								break;
							case 8:
								r.lastUpdated = ne.d.decode(o, o.uint32()).value;
								break;
							case 9:
								r.icon = ne.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: tr.$type,
					communityIcon: nr(e.communityIcon) ? String(e.communityIcon) : void 0,
					keyColor: nr(e.keyColor) ? String(e.keyColor) : void 0,
					displayName: nr(e.displayName) ? String(e.displayName) : void 0,
					name: nr(e.name) ? String(e.name) : void 0,
					subscribers: nr(e.subscribers) ? Number(e.subscribers) : void 0,
					primaryColor: nr(e.primaryColor) ? String(e.primaryColor) : void 0,
					id: nr(e.id) ? String(e.id) : void 0,
					lastUpdated: nr(e.lastUpdated) ? String(e.lastUpdated) : void 0,
					icon: nr(e.icon) ? String(e.icon) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.communityIcon && (t.communityIcon = e.communityIcon), void 0 !== e.keyColor && (t.keyColor = e.keyColor), void 0 !== e.displayName && (t.displayName = e.displayName), void 0 !== e.name && (t.name = e.name), void 0 !== e.subscribers && (t.subscribers = e.subscribers), void 0 !== e.primaryColor && (t.primaryColor = e.primaryColor), void 0 !== e.id && (t.id = e.id), void 0 !== e.lastUpdated && (t.lastUpdated = e.lastUpdated), void 0 !== e.icon && (t.icon = e.icon), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l;
					const u = {
						$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditData",
						communityIcon: void 0,
						keyColor: void 0,
						displayName: void 0,
						name: void 0,
						subscribers: void 0,
						primaryColor: void 0,
						id: void 0,
						lastUpdated: void 0,
						icon: void 0
					};
					return u.communityIcon = null !== (t = e.communityIcon) && void 0 !== t ? t : void 0, u.keyColor = null !== (o = e.keyColor) && void 0 !== o ? o : void 0, u.displayName = null !== (i = e.displayName) && void 0 !== i ? i : void 0, u.name = null !== (r = e.name) && void 0 !== r ? r : void 0, u.subscribers = null !== (n = e.subscribers) && void 0 !== n ? n : void 0, u.primaryColor = null !== (a = e.primaryColor) && void 0 !== a ? a : void 0, u.id = null !== (s = e.id) && void 0 !== s ? s : void 0, u.lastUpdated = null !== (d = e.lastUpdated) && void 0 !== d ? d : void 0, u.icon = null !== (l = e.icon) && void 0 !== l ? l : void 0, u
				}
			};
			i.a.set(tr.$type, tr);
			const or = {
				$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && tr.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = tr.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: or.$type,
					key: nr(e.key) ? String(e.key) : "",
					value: nr(e.value) ? tr.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? tr.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.newmodmail.SubredditsResponse.SubredditsEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? tr.fromPartial(e.value) : void 0, o
				}
			};
			i.a.set(or.$type, or);
			const ir = {
				$type: "devvit.plugin.redditapi.newmodmail.UnreadCountResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.archived && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.archived
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.appeals && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.appeals
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.highlighted && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.highlighted
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.notifications && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.notifications
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.joinRequests && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.joinRequests
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.filtered && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.filtered
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.new && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.new
					}, t.uint32(58).fork()).ldelim(), void 0 !== e.inprogress && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.inprogress
					}, t.uint32(66).fork()).ldelim(), void 0 !== e.mod && ne.b.encode({
						$type: "google.protobuf.Int32Value",
						value: e.mod
					}, t.uint32(74).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.newmodmail.UnreadCountResponse",
						archived: void 0,
						appeals: void 0,
						highlighted: void 0,
						notifications: void 0,
						joinRequests: void 0,
						filtered: void 0,
						new: void 0,
						inprogress: void 0,
						mod: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.archived = ne.b.decode(o, o.uint32()).value;
								break;
							case 2:
								r.appeals = ne.b.decode(o, o.uint32()).value;
								break;
							case 3:
								r.highlighted = ne.b.decode(o, o.uint32()).value;
								break;
							case 4:
								r.notifications = ne.b.decode(o, o.uint32()).value;
								break;
							case 5:
								r.joinRequests = ne.b.decode(o, o.uint32()).value;
								break;
							case 6:
								r.filtered = ne.b.decode(o, o.uint32()).value;
								break;
							case 7:
								r.new = ne.b.decode(o, o.uint32()).value;
								break;
							case 8:
								r.inprogress = ne.b.decode(o, o.uint32()).value;
								break;
							case 9:
								r.mod = ne.b.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ir.$type,
					archived: nr(e.archived) ? Number(e.archived) : void 0,
					appeals: nr(e.appeals) ? Number(e.appeals) : void 0,
					highlighted: nr(e.highlighted) ? Number(e.highlighted) : void 0,
					notifications: nr(e.notifications) ? Number(e.notifications) : void 0,
					joinRequests: nr(e.joinRequests) ? Number(e.joinRequests) : void 0,
					filtered: nr(e.filtered) ? Number(e.filtered) : void 0,
					new: nr(e.new) ? Number(e.new) : void 0,
					inprogress: nr(e.inprogress) ? Number(e.inprogress) : void 0,
					mod: nr(e.mod) ? Number(e.mod) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.archived && (t.archived = e.archived), void 0 !== e.appeals && (t.appeals = e.appeals), void 0 !== e.highlighted && (t.highlighted = e.highlighted), void 0 !== e.notifications && (t.notifications = e.notifications), void 0 !== e.joinRequests && (t.joinRequests = e.joinRequests), void 0 !== e.filtered && (t.filtered = e.filtered), void 0 !== e.new && (t.new = e.new), void 0 !== e.inprogress && (t.inprogress = e.inprogress), void 0 !== e.mod && (t.mod = e.mod), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l;
					const u = {
						$type: "devvit.plugin.redditapi.newmodmail.UnreadCountResponse",
						archived: void 0,
						appeals: void 0,
						highlighted: void 0,
						notifications: void 0,
						joinRequests: void 0,
						filtered: void 0,
						new: void 0,
						inprogress: void 0,
						mod: void 0
					};
					return u.archived = null !== (t = e.archived) && void 0 !== t ? t : void 0, u.appeals = null !== (o = e.appeals) && void 0 !== o ? o : void 0, u.highlighted = null !== (i = e.highlighted) && void 0 !== i ? i : void 0, u.notifications = null !== (r = e.notifications) && void 0 !== r ? r : void 0, u.joinRequests = null !== (n = e.joinRequests) && void 0 !== n ? n : void 0, u.filtered = null !== (a = e.filtered) && void 0 !== a ? a : void 0, u.new = null !== (s = e.new) && void 0 !== s ? s : void 0, u.inprogress = null !== (d = e.inprogress) && void 0 !== d ? d : void 0, u.mod = null !== (l = e.mod) && void 0 !== l ? l : void 0, u
				}
			};

			function rr(e) {
				return "object" == typeof e && null !== e
			}

			function nr(e) {
				return null != e
			}
			i.a.set(ir.$type, ir), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const ar = {
				name: "NewModmail",
				fullName: "devvit.plugin.redditapi.newmodmail.NewModmail",
				methods: {
					bulkReadConversations: {
						name: "BulkReadConversations",
						requestType: yi,
						requestStream: !1,
						responseType: $i,
						responseStream: !1,
						options: {}
					},
					getConversations: {
						name: "GetConversations",
						requestType: bi,
						requestStream: !1,
						responseType: Ci,
						responseStream: !1,
						options: {}
					},
					createConversation: {
						name: "CreateConversation",
						requestType: ki,
						requestStream: !1,
						responseType: Ai,
						responseStream: !1,
						options: {}
					},
					getConversation: {
						name: "GetConversation",
						requestType: Si,
						requestStream: !1,
						responseType: Fi,
						responseStream: !1,
						options: {}
					},
					createConversationMessage: {
						name: "CreateConversationMessage",
						requestType: wi,
						requestStream: !1,
						responseType: Di,
						responseStream: !1,
						options: {}
					},
					approveConversation: {
						name: "ApproveConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: _i,
						responseStream: !1,
						options: {}
					},
					archiveConversation: {
						name: "ArchiveConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: Li,
						responseStream: !1,
						options: {}
					},
					disapproveConversation: {
						name: "DisapproveConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: _i,
						responseStream: !1,
						options: {}
					},
					unhighlightConversation: {
						name: "UnhighlightConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: Wi,
						responseStream: !1,
						options: {}
					},
					highlightConversation: {
						name: "HighlightConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: Wi,
						responseStream: !1,
						options: {}
					},
					muteConversation: {
						name: "MuteConversation",
						requestType: Ni,
						requestStream: !1,
						responseType: zi,
						responseStream: !1,
						options: {}
					},
					tempBan: {
						name: "TempBan",
						requestType: Ri,
						requestStream: !1,
						responseType: Xi,
						responseStream: !1,
						options: {}
					},
					unarchiveConversation: {
						name: "UnarchiveConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: Li,
						responseStream: !1,
						options: {}
					},
					unban: {
						name: "Unban",
						requestType: Oi,
						requestStream: !1,
						responseType: Xi,
						responseStream: !1,
						options: {}
					},
					unmuteConversation: {
						name: "UnmuteConversation",
						requestType: Oi,
						requestStream: !1,
						responseType: zi,
						responseStream: !1,
						options: {}
					},
					userConversations: {
						name: "UserConversations",
						requestType: Oi,
						requestStream: !1,
						responseType: ni,
						responseStream: !1,
						options: {}
					},
					read: {
						name: "Read",
						requestType: Ti,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					subreddits: {
						name: "Subreddits",
						requestType: d.a,
						requestStream: !1,
						responseType: er,
						responseStream: !1,
						options: {}
					},
					unread: {
						name: "Unread",
						requestType: Ti,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unreadCount: {
						name: "UnreadCount",
						requestType: d.a,
						requestStream: !1,
						responseType: ir,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var sr = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/privatemessages/privatemessages_msg.js");
			const dr = {
				name: "PrivateMessages",
				fullName: "devvit.plugin.redditapi.privatemessages.PrivateMessages",
				methods: {
					block: {
						name: "Block",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					collapseMessage: {
						name: "CollapseMessage",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					compose: {
						name: "Compose",
						requestType: sr.a,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					delMsg: {
						name: "DelMsg",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					readAllMessages: {
						name: "ReadAllMessages",
						requestType: sr.d,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					readMessage: {
						name: "ReadMessage",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unblockSubreddit: {
						name: "UnblockSubreddit",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					uncollapseMessage: {
						name: "UncollapseMessage",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unreadMessage: {
						name: "UnreadMessage",
						requestType: sr.b,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					messageWhere: {
						name: "MessageWhere",
						requestType: sr.c,
						requestStream: !1,
						responseType: bo.c,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const lr = {
				$type: "devvit.plugin.scheduler.ScheduledActionRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.when && re.a.encode(function(e) {
						const t = e.getTime() / 1e3,
							o = e.getTime() % 1e3 * 1e6;
						return {
							$type: "google.protobuf.Timestamp",
							seconds: t,
							nanos: o
						}
					}(e.when), t.uint32(10).fork()).ldelim(), void 0 !== e.cron && t.uint32(18).string(e.cron), void 0 !== e.action && U.encode(e.action, t.uint32(26).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.scheduler.ScheduledActionRequest",
						when: void 0,
						cron: void 0,
						action: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.when = vr(re.a.decode(o, o.uint32()));
								break;
							case 2:
								r.cron = o.string();
								break;
							case 3:
								r.action = U.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: lr.$type,
					when: fr(e.when) ? mr(e.when) : void 0,
					cron: fr(e.cron) ? String(e.cron) : void 0,
					action: fr(e.action) ? U.fromJSON(e.action) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.when && (t.when = e.when.toISOString()), void 0 !== e.cron && (t.cron = e.cron), void 0 !== e.action && (t.action = e.action ? U.toJSON(e.action) : void 0), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.scheduler.ScheduledActionRequest",
						when: void 0,
						cron: void 0,
						action: void 0
					};
					return i.when = null !== (t = e.when) && void 0 !== t ? t : void 0, i.cron = null !== (o = e.cron) && void 0 !== o ? o : void 0, i.action = void 0 !== e.action && null !== e.action ? U.fromPartial(e.action) : void 0, i
				}
			};
			i.a.set(lr.$type, lr);
			const ur = {
				$type: "devvit.plugin.scheduler.ScheduledActionResponse",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.scheduler.ScheduledActionResponse",
						id: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: ur.$type,
					id: fr(e.id) ? String(e.id) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.scheduler.ScheduledActionResponse",
						id: ""
					};
					return o.id = null !== (t = e.id) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(ur.$type, ur);
			const cr = {
				$type: "devvit.plugin.scheduler.CancelActionRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(10).string(e.id), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.scheduler.CancelActionRequest",
						id: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.id = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: cr.$type,
					id: fr(e.id) ? String(e.id) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.scheduler.CancelActionRequest",
						id: ""
					};
					return o.id = null !== (t = e.id) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(cr.$type, cr);
			const pr = {
				name: "Scheduler",
				fullName: "devvit.plugin.scheduler.Scheduler",
				methods: {
					schedule: {
						name: "Schedule",
						requestType: lr,
						requestStream: !1,
						responseType: ur,
						responseStream: !1,
						options: {}
					},
					cancel: {
						name: "Cancel",
						requestType: cr,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					}
				}
			};

			function vr(e) {
				let t = 1e3 * e.seconds;
				return t += e.nanos / 1e6, new Date(t)
			}

			function mr(e) {
				return e instanceof Date ? e : "string" == typeof e ? new Date(e) : vr(re.a.fromJSON(e))
			}

			function fr(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			var gr = o("./node_modules/@devvit/protos/types/devvit/plugin/streambroker/streambroker.js");
			const hr = {
				$type: "devvit.plugin.timer.TimerMessage",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return 0 !== e.durationMillis && t.uint32(8).int32(e.durationMillis), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.timer.TimerMessage",
						durationMillis: 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.durationMillis = o.int32();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: hr.$type,
						durationMillis: (t = e.durationMillis, null != t ? Number(e.durationMillis) : 0)
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.durationMillis && (t.durationMillis = Math.round(e.durationMillis)), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.timer.TimerMessage",
						durationMillis: 0
					};
					return o.durationMillis = null !== (t = e.durationMillis) && void 0 !== t ? t : 0, o
				}
			};
			i.a.set(hr.$type, hr);
			d.a;
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const yr = {
				name: "BootstrapActor",
				fullName: "devvit.runtime.actor.BootstrapActor",
				methods: {
					loadActor: {
						name: "LoadActor",
						requestType: De,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					isResponding: {
						name: "IsResponding",
						requestType: d.a,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const br = {
				$type: "devvit.runtime.Ack",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					!0 === e.success && t.uint32(8).bool(e.success);
					for (const o of e.messages) t.uint32(18).string(o);
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.Ack",
						success: !1,
						messages: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.success = o.bool();
								break;
							case 2:
								r.messages.push(o.string());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: br.$type,
					success: !!Or(e.success) && Boolean(e.success),
					messages: Array.isArray(null == e ? void 0 : e.messages) ? e.messages.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.success && (t.success = e.success), e.messages ? t.messages = e.messages.map(e => e) : t.messages = [], t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.runtime.Ack",
						success: !1,
						messages: []
					};
					return i.success = null !== (t = e.success) && void 0 !== t && t, i.messages = (null === (o = e.messages) || void 0 === o ? void 0 : o.map(e => e)) || [], i
				}
			};
			i.a.set(br.$type, br);
			const kr = {
				$type: "devvit.runtime.Debug",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.message && L.c.encode(L.c.wrap(e.message), t.uint32(10).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.Debug",
						message: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.message = L.c.unwrap(L.c.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: kr.$type,
					message: Or(null == e ? void 0 : e.message) ? e.message : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.message && (t.message = e.message), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.runtime.Debug",
						message: void 0
					};
					return o.message = null !== (t = e.message) && void 0 !== t ? t : void 0, o
				}
			};
			i.a.set(kr.$type, kr);
			const Sr = {
				$type: "devvit.runtime.Strings",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.values) t.uint32(10).string(o);
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.Strings",
						values: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.values.push(o.string());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Sr.$type,
					values: Array.isArray(null == e ? void 0 : e.values) ? e.values.map(e => String(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.values ? t.values = e.values.map(e => e) : t.values = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.runtime.Strings",
						values: []
					};
					return o.values = (null === (t = e.values) || void 0 === t ? void 0 : t.map(e => e)) || [], o
				}
			};
			i.a.set(Sr.$type, Sr);
			const wr = {
				$type: "devvit.runtime.Str",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.value && t.uint32(10).string(e.value), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.Str",
						value: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.value = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: wr.$type,
					value: Or(e.value) ? String(e.value) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.value && (t.value = e.value), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.runtime.Str",
						value: ""
					};
					return o.value = null !== (t = e.value) && void 0 !== t ? t : "", o
				}
			};

			function Or(e) {
				return null != e
			}
			i.a.set(wr.$type, wr), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Tr = {
				name: "Echo",
				fullName: "devvit.runtime.actor.Echo",
				methods: {
					echo: {
						name: "Echo",
						requestType: wr,
						requestStream: !1,
						responseType: wr,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Nr = {
				$type: "devvit.runtime.actor.WorkerQuery",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.hostname && t.uint32(10).string(e.hostname), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.actor.WorkerQuery",
						hostname: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.hostname = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: Nr.$type,
						hostname: (t = e.hostname, null != t ? String(e.hostname) : "")
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.hostname && (t.hostname = e.hostname), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.runtime.actor.WorkerQuery",
						hostname: ""
					};
					return o.hostname = null !== (t = e.hostname) && void 0 !== t ? t : "", o
				}
			};
			i.a.set(Nr.$type, Nr);
			const Rr = {
				name: "RuntimeActor",
				fullName: "devvit.runtime.actor.RuntimeActor",
				methods: {
					newWorker: {
						name: "NewWorker",
						requestType: De,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					terminateWorker: {
						name: "TerminateWorker",
						requestType: Nr,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					}
				}
			};
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const $r = {
				$type: "devvit.runtime.Envelope",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.id && t.uint32(90).string(e.id), "" !== e.src && t.uint32(10).string(e.src), "" !== e.dst && t.uint32(18).string(e.dst), "" !== e.method && t.uint32(26).string(e.method), "" !== e.streamId && t.uint32(34).string(e.streamId), "" !== e.traceId && t.uint32(82).string(e.traceId), !0 === e.success && t.uint32(40).bool(e.success), void 0 !== e.message && L.c.encode(L.c.wrap(e.message), t.uint32(50).fork()).ldelim(), !0 === e.request && t.uint32(56).bool(e.request), !0 === e.complete && t.uint32(64).bool(e.complete), Object.entries(e.metadata).forEach(e => {
						let [o, i] = e;
						Cr.encode({
							$type: "devvit.runtime.Envelope.MetadataEntry",
							key: o,
							value: i
						}, t.uint32(74).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.Envelope",
						id: "",
						src: "",
						dst: "",
						method: "",
						streamId: "",
						traceId: "",
						success: !1,
						message: void 0,
						request: !1,
						complete: !1,
						metadata: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 11:
								r.id = o.string();
								break;
							case 1:
								r.src = o.string();
								break;
							case 2:
								r.dst = o.string();
								break;
							case 3:
								r.method = o.string();
								break;
							case 4:
								r.streamId = o.string();
								break;
							case 10:
								r.traceId = o.string();
								break;
							case 5:
								r.success = o.bool();
								break;
							case 6:
								r.message = L.c.unwrap(L.c.decode(o, o.uint32()));
								break;
							case 7:
								r.request = o.bool();
								break;
							case 8:
								r.complete = o.bool();
								break;
							case 9:
								const t = Cr.decode(o, o.uint32());
								void 0 !== t.value && (r.metadata[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON(e) {
					return {
						$type: $r.$type,
						id: Ir(e.id) ? String(e.id) : "",
						src: Ir(e.src) ? String(e.src) : "",
						dst: Ir(e.dst) ? String(e.dst) : "",
						method: Ir(e.method) ? String(e.method) : "",
						streamId: Ir(e.streamId) ? String(e.streamId) : "",
						traceId: Ir(e.traceId) ? String(e.traceId) : "",
						success: !!Ir(e.success) && Boolean(e.success),
						message: Ir(null == e ? void 0 : e.message) ? e.message : void 0,
						request: !!Ir(e.request) && Boolean(e.request),
						complete: !!Ir(e.complete) && Boolean(e.complete),
						metadata: (t = e.metadata, "object" == typeof t && null !== t ? Object.entries(e.metadata).reduce((e, t) => {
							let [o, i] = t;
							return e[o] = Sr.fromJSON(i), e
						}, {}) : {})
					};
					var t
				},
				toJSON(e) {
					const t = {};
					return void 0 !== e.id && (t.id = e.id), void 0 !== e.src && (t.src = e.src), void 0 !== e.dst && (t.dst = e.dst), void 0 !== e.method && (t.method = e.method), void 0 !== e.streamId && (t.streamId = e.streamId), void 0 !== e.traceId && (t.traceId = e.traceId), void 0 !== e.success && (t.success = e.success), void 0 !== e.message && (t.message = e.message), void 0 !== e.request && (t.request = e.request), void 0 !== e.complete && (t.complete = e.complete), t.metadata = {}, e.metadata && Object.entries(e.metadata).forEach(e => {
						let [o, i] = e;
						t.metadata[o] = Sr.toJSON(i)
					}), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l, u, c;
					const p = {
						$type: "devvit.runtime.Envelope",
						id: "",
						src: "",
						dst: "",
						method: "",
						streamId: "",
						traceId: "",
						success: !1,
						message: void 0,
						request: !1,
						complete: !1,
						metadata: {}
					};
					return p.id = null !== (t = e.id) && void 0 !== t ? t : "", p.src = null !== (o = e.src) && void 0 !== o ? o : "", p.dst = null !== (i = e.dst) && void 0 !== i ? i : "", p.method = null !== (r = e.method) && void 0 !== r ? r : "", p.streamId = null !== (n = e.streamId) && void 0 !== n ? n : "", p.traceId = null !== (a = e.traceId) && void 0 !== a ? a : "", p.success = null !== (s = e.success) && void 0 !== s && s, p.message = null !== (d = e.message) && void 0 !== d ? d : void 0, p.request = null !== (l = e.request) && void 0 !== l && l, p.complete = null !== (u = e.complete) && void 0 !== u && u, p.metadata = Object.entries(null !== (c = e.metadata) && void 0 !== c ? c : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = Sr.fromPartial(i)), e
					}, {}), p
				}
			};
			i.a.set($r.$type, $r);
			const Cr = {
				$type: "devvit.runtime.Envelope.MetadataEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && Sr.encode(e.value, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.Envelope.MetadataEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = Sr.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Cr.$type,
					key: Ir(e.key) ? String(e.key) : "",
					value: Ir(e.value) ? Sr.fromJSON(e.value) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value ? Sr.toJSON(e.value) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.runtime.Envelope.MetadataEntry",
						key: "",
						value: void 0
					};
					return o.key = null !== (t = e.key) && void 0 !== t ? t : "", o.value = void 0 !== e.value && null !== e.value ? Sr.fromPartial(e.value) : void 0, o
				}
			};

			function Ir(e) {
				return null != e
			}
			i.a.set(Cr.$type, Cr), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const Er = {
				$type: "devvit.runtime.actor.UnloadRequest",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return !0 === e.force && t.uint32(8).bool(e.force), "" !== e.hostname && t.uint32(18).string(e.hostname), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.runtime.actor.UnloadRequest",
						force: !1,
						hostname: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.force = o.bool();
								break;
							case 2:
								r.hostname = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Er.$type,
					force: !!Pr(e.force) && Boolean(e.force),
					hostname: Pr(e.hostname) ? String(e.hostname) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.force && (t.force = e.force), void 0 !== e.hostname && (t.hostname = e.hostname), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.runtime.actor.UnloadRequest",
						force: !1,
						hostname: ""
					};
					return i.force = null !== (t = e.force) && void 0 !== t && t, i.hostname = null !== (o = e.hostname) && void 0 !== o ? o : "", i
				}
			};
			i.a.set(Er.$type, Er);
			const Ar = {
				name: "Supervisor",
				fullName: "devvit.runtime.actor.Supervisor",
				methods: {
					load: {
						name: "Load",
						requestType: De,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					},
					unload: {
						name: "Unload",
						requestType: Er,
						requestStream: !1,
						responseType: d.a,
						responseStream: !1,
						options: {}
					}
				}
			};

			function Pr(e) {
				return null != e
			}
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			d.a;
			s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure()), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			const xr = {
				$type: "google.api.Http",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.rules) Fr.encode(o, t.uint32(10).fork()).ldelim();
					return !0 === e.fullyDecodeReservedExpansion && t.uint32(16).bool(e.fullyDecodeReservedExpansion), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.api.Http",
						rules: [],
						fullyDecodeReservedExpansion: !1
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.rules.push(Fr.decode(o, o.uint32()));
								break;
							case 2:
								r.fullyDecodeReservedExpansion = o.bool();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: xr.$type,
					rules: Array.isArray(null == e ? void 0 : e.rules) ? e.rules.map(e => Fr.fromJSON(e)) : [],
					fullyDecodeReservedExpansion: !!Mr(e.fullyDecodeReservedExpansion) && Boolean(e.fullyDecodeReservedExpansion)
				}),
				toJSON(e) {
					const t = {};
					return e.rules ? t.rules = e.rules.map(e => e ? Fr.toJSON(e) : void 0) : t.rules = [], void 0 !== e.fullyDecodeReservedExpansion && (t.fullyDecodeReservedExpansion = e.fullyDecodeReservedExpansion), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "google.api.Http",
						rules: [],
						fullyDecodeReservedExpansion: !1
					};
					return i.rules = (null === (t = e.rules) || void 0 === t ? void 0 : t.map(e => Fr.fromPartial(e))) || [], i.fullyDecodeReservedExpansion = null !== (o = e.fullyDecodeReservedExpansion) && void 0 !== o && o, i
				}
			};
			i.a.set(xr.$type, xr);
			const Fr = {
				$type: "google.api.HttpRule",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					"" !== e.selector && t.uint32(10).string(e.selector), void 0 !== e.get && t.uint32(18).string(e.get), void 0 !== e.put && t.uint32(26).string(e.put), void 0 !== e.post && t.uint32(34).string(e.post), void 0 !== e.delete && t.uint32(42).string(e.delete), void 0 !== e.patch && t.uint32(50).string(e.patch), void 0 !== e.custom && jr.encode(e.custom, t.uint32(66).fork()).ldelim(), "" !== e.body && t.uint32(58).string(e.body), "" !== e.responseBody && t.uint32(98).string(e.responseBody);
					for (const o of e.additionalBindings) Fr.encode(o, t.uint32(90).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.api.HttpRule",
						selector: "",
						get: void 0,
						put: void 0,
						post: void 0,
						delete: void 0,
						patch: void 0,
						custom: void 0,
						body: "",
						responseBody: "",
						additionalBindings: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.selector = o.string();
								break;
							case 2:
								r.get = o.string();
								break;
							case 3:
								r.put = o.string();
								break;
							case 4:
								r.post = o.string();
								break;
							case 5:
								r.delete = o.string();
								break;
							case 6:
								r.patch = o.string();
								break;
							case 8:
								r.custom = jr.decode(o, o.uint32());
								break;
							case 7:
								r.body = o.string();
								break;
							case 12:
								r.responseBody = o.string();
								break;
							case 11:
								r.additionalBindings.push(Fr.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: Fr.$type,
					selector: Mr(e.selector) ? String(e.selector) : "",
					get: Mr(e.get) ? String(e.get) : void 0,
					put: Mr(e.put) ? String(e.put) : void 0,
					post: Mr(e.post) ? String(e.post) : void 0,
					delete: Mr(e.delete) ? String(e.delete) : void 0,
					patch: Mr(e.patch) ? String(e.patch) : void 0,
					custom: Mr(e.custom) ? jr.fromJSON(e.custom) : void 0,
					body: Mr(e.body) ? String(e.body) : "",
					responseBody: Mr(e.responseBody) ? String(e.responseBody) : "",
					additionalBindings: Array.isArray(null == e ? void 0 : e.additionalBindings) ? e.additionalBindings.map(e => Fr.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.selector && (t.selector = e.selector), void 0 !== e.get && (t.get = e.get), void 0 !== e.put && (t.put = e.put), void 0 !== e.post && (t.post = e.post), void 0 !== e.delete && (t.delete = e.delete), void 0 !== e.patch && (t.patch = e.patch), void 0 !== e.custom && (t.custom = e.custom ? jr.toJSON(e.custom) : void 0), void 0 !== e.body && (t.body = e.body), void 0 !== e.responseBody && (t.responseBody = e.responseBody), e.additionalBindings ? t.additionalBindings = e.additionalBindings.map(e => e ? Fr.toJSON(e) : void 0) : t.additionalBindings = [], t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, d, l;
					const u = {
						$type: "google.api.HttpRule",
						selector: "",
						get: void 0,
						put: void 0,
						post: void 0,
						delete: void 0,
						patch: void 0,
						custom: void 0,
						body: "",
						responseBody: "",
						additionalBindings: []
					};
					return u.selector = null !== (t = e.selector) && void 0 !== t ? t : "", u.get = null !== (o = e.get) && void 0 !== o ? o : void 0, u.put = null !== (i = e.put) && void 0 !== i ? i : void 0, u.post = null !== (r = e.post) && void 0 !== r ? r : void 0, u.delete = null !== (n = e.delete) && void 0 !== n ? n : void 0, u.patch = null !== (a = e.patch) && void 0 !== a ? a : void 0, u.custom = void 0 !== e.custom && null !== e.custom ? jr.fromPartial(e.custom) : void 0, u.body = null !== (s = e.body) && void 0 !== s ? s : "", u.responseBody = null !== (d = e.responseBody) && void 0 !== d ? d : "", u.additionalBindings = (null === (l = e.additionalBindings) || void 0 === l ? void 0 : l.map(e => Fr.fromPartial(e))) || [], u
				}
			};
			i.a.set(Fr.$type, Fr);
			const jr = {
				$type: "google.api.CustomHttpPattern",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.kind && t.uint32(10).string(e.kind), "" !== e.path && t.uint32(18).string(e.path), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.api.CustomHttpPattern",
						kind: "",
						path: ""
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.kind = o.string();
								break;
							case 2:
								r.path = o.string();
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: jr.$type,
					kind: Mr(e.kind) ? String(e.kind) : "",
					path: Mr(e.path) ? String(e.path) : ""
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.kind && (t.kind = e.kind), void 0 !== e.path && (t.path = e.path), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "google.api.CustomHttpPattern",
						kind: "",
						path: ""
					};
					return i.kind = null !== (t = e.kind) && void 0 !== t ? t : "", i.path = null !== (o = e.path) && void 0 !== o ? o : "", i
				}
			};

			function Mr(e) {
				return null != e
			}
			i.a.set(jr.$type, jr), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure());
			o("./node_modules/@devvit/protos/types/google/protobuf/descriptor.js");
			const Dr = {
				toSerializable: e => (function(e) {
					return Array.isArray(e.methods)
				})(e) ? e : Ce.fromPartial({
					name: e.name,
					fullName: e.fullName,
					methods: Object.values(e.methods).map(t => {
						var o, i;
						return Ie.fromPartial({
							fullName: "/" + e.fullName + "/" + t.name,
							name: t.name,
							requestStream: t.requestStream,
							requestType: null === (o = t.requestType) || void 0 === o ? void 0 : o.$type,
							responseStream: t.responseStream,
							responseType: null === (i = t.responseType) || void 0 === i ? void 0 : i.$type
						})
					})
				}),
				fromSerializable(e) {
					const t = {};
					return Object.values(e.methods).forEach(e => {
						const o = e.name[0].toLocaleLowerCase() + e.name.slice(1);
						t[o] = {
							name: e.name,
							requestType: i.a.get(e.requestType),
							requestStream: e.requestStream,
							responseType: i.a.get(e.responseType),
							responseStream: e.responseStream
						}
					}), {
						fullName: e.fullName,
						name: e.name,
						methods: t
					}
				}
			}
		},
		"./node_modules/@devvit/protos/node_modules/rxjs/dist/esm5/internal/operators/map.js": function(e, t, o) {
			"use strict";

			function i(e) {
				return "function" == typeof e
			}

			function r(e) {
				return function(t) {
					if (function(e) {
							return i(null == e ? void 0 : e.lift)
						}(t)) return t.lift((function(t) {
						try {
							return e(t, this)
						} catch (o) {
							this.error(o)
						}
					}));
					throw new TypeError("Unable to lift unknown Observable type")
				}
			}
			o.d(t, "a", (function() {
				return R
			}));
			var n = o("./node_modules/tslib/tslib.es6.js");
			var a, s = ((a = function(e) {
				return function(t) {
					e(this), this.message = t ? t.length + " errors occurred during unsubscription:\n" + t.map((function(e, t) {
						return t + 1 + ") " + e.toString()
					})).join("\n  ") : "", this.name = "UnsubscriptionError", this.errors = t
				}
			}((function(e) {
				Error.call(e), e.stack = (new Error).stack
			}))).prototype = Object.create(Error.prototype), a.prototype.constructor = a, a);

			function d(e, t) {
				if (e) {
					var o = e.indexOf(t);
					0 <= o && e.splice(o, 1)
				}
			}
			var l = function() {
				function e(e) {
					this.initialTeardown = e, this.closed = !1, this._parentage = null, this._finalizers = null
				}
				var t;
				return e.prototype.unsubscribe = function() {
					var e, t, o, r, a;
					if (!this.closed) {
						this.closed = !0;
						var d = this._parentage;
						if (d)
							if (this._parentage = null, Array.isArray(d)) try {
								for (var l = Object(n.l)(d), c = l.next(); !c.done; c = l.next()) {
									c.value.remove(this)
								}
							} catch (h) {
								e = {
									error: h
								}
							} finally {
								try {
									c && !c.done && (t = l.return) && t.call(l)
								} finally {
									if (e) throw e.error
								}
							} else d.remove(this);
						var p = this.initialTeardown;
						if (i(p)) try {
							p()
						} catch (y) {
							a = y instanceof s ? y.errors : [y]
						}
						var v = this._finalizers;
						if (v) {
							this._finalizers = null;
							try {
								for (var m = Object(n.l)(v), f = m.next(); !f.done; f = m.next()) {
									var g = f.value;
									try {
										u(g)
									} catch (b) {
										a = null != a ? a : [], b instanceof s ? a = Object(n.k)(Object(n.k)([], Object(n.j)(a)), Object(n.j)(b.errors)) : a.push(b)
									}
								}
							} catch (k) {
								o = {
									error: k
								}
							} finally {
								try {
									f && !f.done && (r = m.return) && r.call(m)
								} finally {
									if (o) throw o.error
								}
							}
						}
						if (a) throw new s(a)
					}
				}, e.prototype.add = function(t) {
					var o;
					if (t && t !== this)
						if (this.closed) u(t);
						else {
							if (t instanceof e) {
								if (t.closed || t._hasParent(this)) return;
								t._addParent(this)
							}(this._finalizers = null !== (o = this._finalizers) && void 0 !== o ? o : []).push(t)
						}
				}, e.prototype._hasParent = function(e) {
					var t = this._parentage;
					return t === e || Array.isArray(t) && t.includes(e)
				}, e.prototype._addParent = function(e) {
					var t = this._parentage;
					this._parentage = Array.isArray(t) ? (t.push(e), t) : t ? [t, e] : e
				}, e.prototype._removeParent = function(e) {
					var t = this._parentage;
					t === e ? this._parentage = null : Array.isArray(t) && d(t, e)
				}, e.prototype.remove = function(t) {
					var o = this._finalizers;
					o && d(o, t), t instanceof e && t._removeParent(this)
				}, e.EMPTY = ((t = new e).closed = !0, t), e
			}();
			l.EMPTY;

			function u(e) {
				i(e) ? e() : e.unsubscribe()
			}
			var c = {
					onUnhandledError: null,
					onStoppedNotification: null,
					Promise: void 0,
					useDeprecatedSynchronousErrorHandling: !1,
					useDeprecatedNextContext: !1
				},
				p = {
					setTimeout: function(e, t) {
						for (var o = [], i = 2; i < arguments.length; i++) o[i - 2] = arguments[i];
						var r = p.delegate;
						return (null == r ? void 0 : r.setTimeout) ? r.setTimeout.apply(r, Object(n.k)([e, t], Object(n.j)(o))) : setTimeout.apply(void 0, Object(n.k)([e, t], Object(n.j)(o)))
					},
					clearTimeout: function(e) {
						var t = p.delegate;
						return ((null == t ? void 0 : t.clearTimeout) || clearTimeout)(e)
					},
					delegate: void 0
				};

			function v() {}
			var m = f("C", void 0, void 0);

			function f(e, t, o) {
				return {
					kind: e,
					value: t,
					error: o
				}
			}
			var g = null;
			var h = function(e) {
					function t(t) {
						var o, r = e.call(this) || this;
						return r.isStopped = !1, t ? (r.destination = t, ((o = t) instanceof l || o && "closed" in o && i(o.remove) && i(o.add) && i(o.unsubscribe)) && t.add(r)) : r.destination = T, r
					}
					return Object(n.h)(t, e), t.create = function(e, t, o) {
						return new S(e, t, o)
					}, t.prototype.next = function(e) {
						this.isStopped ? O(function(e) {
							return f("N", e, void 0)
						}(e), this) : this._next(e)
					}, t.prototype.error = function(e) {
						this.isStopped ? O(f("E", void 0, e), this) : (this.isStopped = !0, this._error(e))
					}, t.prototype.complete = function() {
						this.isStopped ? O(m, this) : (this.isStopped = !0, this._complete())
					}, t.prototype.unsubscribe = function() {
						this.closed || (this.isStopped = !0, e.prototype.unsubscribe.call(this), this.destination = null)
					}, t.prototype._next = function(e) {
						this.destination.next(e)
					}, t.prototype._error = function(e) {
						try {
							this.destination.error(e)
						} finally {
							this.unsubscribe()
						}
					}, t.prototype._complete = function() {
						try {
							this.destination.complete()
						} finally {
							this.unsubscribe()
						}
					}, t
				}(l),
				y = Function.prototype.bind;

			function b(e, t) {
				return y.call(e, t)
			}
			var k = function() {
					function e(e) {
						this.partialObserver = e
					}
					return e.prototype.next = function(e) {
						var t = this.partialObserver;
						if (t.next) try {
							t.next(e)
						} catch (o) {
							w(o)
						}
					}, e.prototype.error = function(e) {
						var t = this.partialObserver;
						if (t.error) try {
							t.error(e)
						} catch (o) {
							w(o)
						} else w(e)
					}, e.prototype.complete = function() {
						var e = this.partialObserver;
						if (e.complete) try {
							e.complete()
						} catch (t) {
							w(t)
						}
					}, e
				}(),
				S = function(e) {
					function t(t, o, r) {
						var n, a, s = e.call(this) || this;
						i(t) || !t ? n = {
							next: null != t ? t : void 0,
							error: null != o ? o : void 0,
							complete: null != r ? r : void 0
						} : s && c.useDeprecatedNextContext ? ((a = Object.create(t)).unsubscribe = function() {
							return s.unsubscribe()
						}, n = {
							next: t.next && b(t.next, a),
							error: t.error && b(t.error, a),
							complete: t.complete && b(t.complete, a)
						}) : n = t;
						return s.destination = new k(n), s
					}
					return Object(n.h)(t, e), t
				}(h);

			function w(e) {
				var t;
				c.useDeprecatedSynchronousErrorHandling ? (t = e, c.useDeprecatedSynchronousErrorHandling && g && (g.errorThrown = !0, g.error = t)) : function(e) {
					p.setTimeout((function() {
						var t = c.onUnhandledError;
						if (!t) throw e;
						t(e)
					}))
				}(e)
			}

			function O(e, t) {
				var o = c.onStoppedNotification;
				o && p.setTimeout((function() {
					return o(e, t)
				}))
			}
			var T = {
				closed: !0,
				next: v,
				error: function(e) {
					throw e
				},
				complete: v
			};
			var N = function(e) {
				function t(t, o, i, r, n, a) {
					var s = e.call(this, t) || this;
					return s.onFinalize = n, s.shouldUnsubscribe = a, s._next = o ? function(e) {
						try {
							o(e)
						} catch (i) {
							t.error(i)
						}
					} : e.prototype._next, s._error = r ? function(e) {
						try {
							r(e)
						} catch (e) {
							t.error(e)
						} finally {
							this.unsubscribe()
						}
					} : e.prototype._error, s._complete = i ? function() {
						try {
							i()
						} catch (e) {
							t.error(e)
						} finally {
							this.unsubscribe()
						}
					} : e.prototype._complete, s
				}
				return Object(n.h)(t, e), t.prototype.unsubscribe = function() {
					var t;
					if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
						var o = this.closed;
						e.prototype.unsubscribe.call(this), !o && (null === (t = this.onFinalize) || void 0 === t || t.call(this))
					}
				}, t
			}(h);

			function R(e, t) {
				return r((function(o, i) {
					var r, n, a, s = 0;
					o.subscribe(new N(i, (function(o) {
						i.next(e.call(t, o, s++))
					}), r, n, a))
				}))
			}
		},
		"./node_modules/@devvit/protos/types/devvit/actor/reddit/comment.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return c
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/common/common_msg.js"),
					l = o("./node_modules/@devvit/protos/types/devvit/actor/reddit/post.js"),
					u = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js");
				const c = {
					$type: "devvit.actor.reddit.Comment",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						"" !== e.subredditId && t.uint32(10).string(e.subredditId), void 0 !== e.approvedAtUtc && u.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.approvedAtUtc
						}, t.uint32(18).fork()).ldelim(), !0 === e.authorIsBlocked && t.uint32(24).bool(e.authorIsBlocked), void 0 !== e.commentType && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.commentType
						}, t.uint32(34).fork()).ldelim();
						for (const o of e.awarders) t.uint32(42).string(o);
						void 0 !== e.modReasonBy && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modReasonBy
						}, t.uint32(50).fork()).ldelim(), void 0 !== e.bannedBy && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.bannedBy
						}, t.uint32(58).fork()).ldelim(), "" !== e.authorFlairType && t.uint32(66).string(e.authorFlairType), 0 !== e.totalAwardsReceived && t.uint32(72).int64(e.totalAwardsReceived), "" !== e.subreddit && t.uint32(82).string(e.subreddit), void 0 !== e.authorFlairTemplateId && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairTemplateId
						}, t.uint32(90).fork()).ldelim(), void 0 !== e.likes && u.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.likes
						}, t.uint32(98).fork()).ldelim(), void 0 !== e.replies && d.c.encode(e.replies, t.uint32(106).fork()).ldelim();
						for (const o of e.userReports) l.a.encode(o, t.uint32(114).fork()).ldelim();
						!0 === e.saved && t.uint32(120).bool(e.saved), "" !== e.id && t.uint32(130).string(e.id), void 0 !== e.bannedAtUtc && u.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.bannedAtUtc
						}, t.uint32(138).fork()).ldelim(), void 0 !== e.modReasonTitle && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modReasonTitle
						}, t.uint32(146).fork()).ldelim(), 0 !== e.gilded && t.uint32(152).int64(e.gilded), !0 === e.archived && t.uint32(160).bool(e.archived), void 0 !== e.collapsedReasonCode && u.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.collapsedReasonCode
						}, t.uint32(170).fork()).ldelim(), !0 === e.noFollow && t.uint32(176).bool(e.noFollow), "" !== e.author && t.uint32(186).string(e.author), !0 === e.canModPost && t.uint32(192).bool(e.canModPost), 0 !== e.createdUtc && t.uint32(200).int64(e.createdUtc), !0 === e.sendReplies && t.uint32(208).bool(e.sendReplies), "" !== e.parentId && t.uint32(218).string(e.parentId), "" !== e.score && t.uint32(226).string(e.score), "" !== e.authorFullname && t.uint32(234).string(e.authorFullname), void 0 !== e.approvedBy && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.approvedBy
						}, t.uint32(242).fork()).ldelim(), void 0 !== e.modNote && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modNote
						}, t.uint32(250).fork()).ldelim(), !0 === e.collapsed && t.uint32(264).bool(e.collapsed), "" !== e.body && t.uint32(274).string(e.body), !0 === e.edited && t.uint32(280).bool(e.edited), void 0 !== e.topAwardedType && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.topAwardedType
						}, t.uint32(290).fork()).ldelim(), void 0 !== e.authorFlairCssClass && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairCssClass
						}, t.uint32(298).fork()).ldelim(), "" !== e.name && t.uint32(306).string(e.name), !0 === e.isSubmitter && t.uint32(312).bool(e.isSubmitter), 0 !== e.downs && t.uint32(320).int64(e.downs), "" !== e.authorFlairRichtext && t.uint32(330).string(e.authorFlairRichtext), !0 === e.authorPatreonFlair && t.uint32(336).bool(e.authorPatreonFlair), "" !== e.bodyHtml && t.uint32(346).string(e.bodyHtml), void 0 !== e.removalReason && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.removalReason
						}, t.uint32(354).fork()).ldelim(), void 0 !== e.collapsedReason && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.collapsedReason
						}, t.uint32(362).fork()).ldelim(), void 0 !== e.distinguished && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.distinguished
						}, t.uint32(370).fork()).ldelim(), void 0 !== e.associatedAward && l.a.encode(e.associatedAward, t.uint32(378).fork()).ldelim(), !0 === e.stickied && t.uint32(384).bool(e.stickied), !0 === e.authorPremium && t.uint32(392).bool(e.authorPremium), !0 === e.canGild && t.uint32(400).bool(e.canGild), void 0 !== e.gildings && l.a.encode(e.gildings, t.uint32(410).fork()).ldelim(), void 0 !== e.unrepliableReason && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.unrepliableReason
						}, t.uint32(418).fork()).ldelim(), void 0 !== e.authorFlairTextColor && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairTextColor
						}, t.uint32(426).fork()).ldelim(), !0 === e.scoreHidden && t.uint32(432).bool(e.scoreHidden), "" !== e.permalink && t.uint32(442).string(e.permalink), "" !== e.subredditType && t.uint32(450).string(e.subredditType), !0 === e.locked && t.uint32(456).bool(e.locked), void 0 !== e.reportReasons && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.reportReasons
						}, t.uint32(466).fork()).ldelim(), 0 !== e.created && t.uint32(472).int64(e.created), void 0 !== e.authorFlairText && u.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairText
						}, t.uint32(482).fork()).ldelim();
						for (const o of e.treatmentTags) u.d.encode({
							$type: "google.protobuf.StringValue",
							value: o
						}, t.uint32(490).fork()).ldelim();
						"" !== e.linkId && t.uint32(498).string(e.linkId), "" !== e.subredditNamePrefixed && t.uint32(506).string(e.subredditNamePrefixed), 0 !== e.controversiality && t.uint32(512).int64(e.controversiality), 0 !== e.depth && t.uint32(520).int64(e.depth), void 0 !== e.authorFlairBackgroundColor && l.a.encode(e.authorFlairBackgroundColor, t.uint32(530).fork()).ldelim(), void 0 !== e.collapsedBecauseCrowdControl && u.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.collapsedBecauseCrowdControl
						}, t.uint32(538).fork()).ldelim();
						for (const o of e.modReports) l.a.encode(o, t.uint32(546).fork()).ldelim();
						return 0 !== e.numReports && t.uint32(552).int64(e.numReports), 0 !== e.ups && t.uint32(560).int64(e.ups), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.actor.reddit.Comment",
							subredditId: "",
							approvedAtUtc: void 0,
							authorIsBlocked: !1,
							commentType: void 0,
							awarders: [],
							modReasonBy: void 0,
							bannedBy: void 0,
							authorFlairType: "",
							totalAwardsReceived: 0,
							subreddit: "",
							authorFlairTemplateId: void 0,
							likes: void 0,
							replies: void 0,
							userReports: [],
							saved: !1,
							id: "",
							bannedAtUtc: void 0,
							modReasonTitle: void 0,
							gilded: 0,
							archived: !1,
							collapsedReasonCode: void 0,
							noFollow: !1,
							author: "",
							canModPost: !1,
							createdUtc: 0,
							sendReplies: !1,
							parentId: "",
							score: "",
							authorFullname: "",
							approvedBy: void 0,
							modNote: void 0,
							collapsed: !1,
							body: "",
							edited: !1,
							topAwardedType: void 0,
							authorFlairCssClass: void 0,
							name: "",
							isSubmitter: !1,
							downs: 0,
							authorFlairRichtext: "",
							authorPatreonFlair: !1,
							bodyHtml: "",
							removalReason: void 0,
							collapsedReason: void 0,
							distinguished: void 0,
							associatedAward: void 0,
							stickied: !1,
							authorPremium: !1,
							canGild: !1,
							gildings: void 0,
							unrepliableReason: void 0,
							authorFlairTextColor: void 0,
							scoreHidden: !1,
							permalink: "",
							subredditType: "",
							locked: !1,
							reportReasons: void 0,
							created: 0,
							authorFlairText: void 0,
							treatmentTags: [],
							linkId: "",
							subredditNamePrefixed: "",
							controversiality: 0,
							depth: 0,
							authorFlairBackgroundColor: void 0,
							collapsedBecauseCrowdControl: void 0,
							modReports: [],
							numReports: 0,
							ups: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subredditId = o.string();
									break;
								case 2:
									r.approvedAtUtc = u.c.decode(o, o.uint32()).value;
									break;
								case 3:
									r.authorIsBlocked = o.bool();
									break;
								case 4:
									r.commentType = u.d.decode(o, o.uint32()).value;
									break;
								case 5:
									r.awarders.push(o.string());
									break;
								case 6:
									r.modReasonBy = u.d.decode(o, o.uint32()).value;
									break;
								case 7:
									r.bannedBy = u.d.decode(o, o.uint32()).value;
									break;
								case 8:
									r.authorFlairType = o.string();
									break;
								case 9:
									r.totalAwardsReceived = v(o.int64());
									break;
								case 10:
									r.subreddit = o.string();
									break;
								case 11:
									r.authorFlairTemplateId = u.d.decode(o, o.uint32()).value;
									break;
								case 12:
									r.likes = u.c.decode(o, o.uint32()).value;
									break;
								case 13:
									r.replies = d.c.decode(o, o.uint32());
									break;
								case 14:
									r.userReports.push(l.a.decode(o, o.uint32()));
									break;
								case 15:
									r.saved = o.bool();
									break;
								case 16:
									r.id = o.string();
									break;
								case 17:
									r.bannedAtUtc = u.c.decode(o, o.uint32()).value;
									break;
								case 18:
									r.modReasonTitle = u.d.decode(o, o.uint32()).value;
									break;
								case 19:
									r.gilded = v(o.int64());
									break;
								case 20:
									r.archived = o.bool();
									break;
								case 21:
									r.collapsedReasonCode = u.c.decode(o, o.uint32()).value;
									break;
								case 22:
									r.noFollow = o.bool();
									break;
								case 23:
									r.author = o.string();
									break;
								case 24:
									r.canModPost = o.bool();
									break;
								case 25:
									r.createdUtc = v(o.int64());
									break;
								case 26:
									r.sendReplies = o.bool();
									break;
								case 27:
									r.parentId = o.string();
									break;
								case 28:
									r.score = o.string();
									break;
								case 29:
									r.authorFullname = o.string();
									break;
								case 30:
									r.approvedBy = u.d.decode(o, o.uint32()).value;
									break;
								case 31:
									r.modNote = u.d.decode(o, o.uint32()).value;
									break;
								case 33:
									r.collapsed = o.bool();
									break;
								case 34:
									r.body = o.string();
									break;
								case 35:
									r.edited = o.bool();
									break;
								case 36:
									r.topAwardedType = u.d.decode(o, o.uint32()).value;
									break;
								case 37:
									r.authorFlairCssClass = u.d.decode(o, o.uint32()).value;
									break;
								case 38:
									r.name = o.string();
									break;
								case 39:
									r.isSubmitter = o.bool();
									break;
								case 40:
									r.downs = v(o.int64());
									break;
								case 41:
									r.authorFlairRichtext = o.string();
									break;
								case 42:
									r.authorPatreonFlair = o.bool();
									break;
								case 43:
									r.bodyHtml = o.string();
									break;
								case 44:
									r.removalReason = u.d.decode(o, o.uint32()).value;
									break;
								case 45:
									r.collapsedReason = u.d.decode(o, o.uint32()).value;
									break;
								case 46:
									r.distinguished = u.d.decode(o, o.uint32()).value;
									break;
								case 47:
									r.associatedAward = l.a.decode(o, o.uint32());
									break;
								case 48:
									r.stickied = o.bool();
									break;
								case 49:
									r.authorPremium = o.bool();
									break;
								case 50:
									r.canGild = o.bool();
									break;
								case 51:
									r.gildings = l.a.decode(o, o.uint32());
									break;
								case 52:
									r.unrepliableReason = u.d.decode(o, o.uint32()).value;
									break;
								case 53:
									r.authorFlairTextColor = u.d.decode(o, o.uint32()).value;
									break;
								case 54:
									r.scoreHidden = o.bool();
									break;
								case 55:
									r.permalink = o.string();
									break;
								case 56:
									r.subredditType = o.string();
									break;
								case 57:
									r.locked = o.bool();
									break;
								case 58:
									r.reportReasons = u.d.decode(o, o.uint32()).value;
									break;
								case 59:
									r.created = v(o.int64());
									break;
								case 60:
									r.authorFlairText = u.d.decode(o, o.uint32()).value;
									break;
								case 61:
									r.treatmentTags.push(u.d.decode(o, o.uint32()).value);
									break;
								case 62:
									r.linkId = o.string();
									break;
								case 63:
									r.subredditNamePrefixed = o.string();
									break;
								case 64:
									r.controversiality = v(o.int64());
									break;
								case 65:
									r.depth = v(o.int64());
									break;
								case 66:
									r.authorFlairBackgroundColor = l.a.decode(o, o.uint32());
									break;
								case 67:
									r.collapsedBecauseCrowdControl = u.a.decode(o, o.uint32()).value;
									break;
								case 68:
									r.modReports.push(l.a.decode(o, o.uint32()));
									break;
								case 69:
									r.numReports = v(o.int64());
									break;
								case 70:
									r.ups = v(o.int64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						subredditId: m(e.subredditId) ? String(e.subredditId) : "",
						approvedAtUtc: m(e.approvedAtUtc) ? Number(e.approvedAtUtc) : void 0,
						authorIsBlocked: !!m(e.authorIsBlocked) && Boolean(e.authorIsBlocked),
						commentType: m(e.commentType) ? String(e.commentType) : void 0,
						awarders: Array.isArray(null == e ? void 0 : e.awarders) ? e.awarders.map(e => String(e)) : [],
						modReasonBy: m(e.modReasonBy) ? String(e.modReasonBy) : void 0,
						bannedBy: m(e.bannedBy) ? String(e.bannedBy) : void 0,
						authorFlairType: m(e.authorFlairType) ? String(e.authorFlairType) : "",
						totalAwardsReceived: m(e.totalAwardsReceived) ? Number(e.totalAwardsReceived) : 0,
						subreddit: m(e.subreddit) ? String(e.subreddit) : "",
						authorFlairTemplateId: m(e.authorFlairTemplateId) ? String(e.authorFlairTemplateId) : void 0,
						likes: m(e.likes) ? Number(e.likes) : void 0,
						replies: m(e.replies) ? d.c.fromJSON(e.replies) : void 0,
						userReports: Array.isArray(null == e ? void 0 : e.userReports) ? e.userReports.map(e => l.a.fromJSON(e)) : [],
						saved: !!m(e.saved) && Boolean(e.saved),
						id: m(e.id) ? String(e.id) : "",
						bannedAtUtc: m(e.bannedAtUtc) ? Number(e.bannedAtUtc) : void 0,
						modReasonTitle: m(e.modReasonTitle) ? String(e.modReasonTitle) : void 0,
						gilded: m(e.gilded) ? Number(e.gilded) : 0,
						archived: !!m(e.archived) && Boolean(e.archived),
						collapsedReasonCode: m(e.collapsedReasonCode) ? Number(e.collapsedReasonCode) : void 0,
						noFollow: !!m(e.noFollow) && Boolean(e.noFollow),
						author: m(e.author) ? String(e.author) : "",
						canModPost: !!m(e.canModPost) && Boolean(e.canModPost),
						createdUtc: m(e.createdUtc) ? Number(e.createdUtc) : 0,
						sendReplies: !!m(e.sendReplies) && Boolean(e.sendReplies),
						parentId: m(e.parentId) ? String(e.parentId) : "",
						score: m(e.score) ? String(e.score) : "",
						authorFullname: m(e.authorFullname) ? String(e.authorFullname) : "",
						approvedBy: m(e.approvedBy) ? String(e.approvedBy) : void 0,
						modNote: m(e.modNote) ? String(e.modNote) : void 0,
						collapsed: !!m(e.collapsed) && Boolean(e.collapsed),
						body: m(e.body) ? String(e.body) : "",
						edited: !!m(e.edited) && Boolean(e.edited),
						topAwardedType: m(e.topAwardedType) ? String(e.topAwardedType) : void 0,
						authorFlairCssClass: m(e.authorFlairCssClass) ? String(e.authorFlairCssClass) : void 0,
						name: m(e.name) ? String(e.name) : "",
						isSubmitter: !!m(e.isSubmitter) && Boolean(e.isSubmitter),
						downs: m(e.downs) ? Number(e.downs) : 0,
						authorFlairRichtext: m(e.authorFlairRichtext) ? String(e.authorFlairRichtext) : "",
						authorPatreonFlair: !!m(e.authorPatreonFlair) && Boolean(e.authorPatreonFlair),
						bodyHtml: m(e.bodyHtml) ? String(e.bodyHtml) : "",
						removalReason: m(e.removalReason) ? String(e.removalReason) : void 0,
						collapsedReason: m(e.collapsedReason) ? String(e.collapsedReason) : void 0,
						distinguished: m(e.distinguished) ? String(e.distinguished) : void 0,
						associatedAward: m(e.associatedAward) ? l.a.fromJSON(e.associatedAward) : void 0,
						stickied: !!m(e.stickied) && Boolean(e.stickied),
						authorPremium: !!m(e.authorPremium) && Boolean(e.authorPremium),
						canGild: !!m(e.canGild) && Boolean(e.canGild),
						gildings: m(e.gildings) ? l.a.fromJSON(e.gildings) : void 0,
						unrepliableReason: m(e.unrepliableReason) ? String(e.unrepliableReason) : void 0,
						authorFlairTextColor: m(e.authorFlairTextColor) ? String(e.authorFlairTextColor) : void 0,
						scoreHidden: !!m(e.scoreHidden) && Boolean(e.scoreHidden),
						permalink: m(e.permalink) ? String(e.permalink) : "",
						subredditType: m(e.subredditType) ? String(e.subredditType) : "",
						locked: !!m(e.locked) && Boolean(e.locked),
						reportReasons: m(e.reportReasons) ? String(e.reportReasons) : void 0,
						created: m(e.created) ? Number(e.created) : 0,
						authorFlairText: m(e.authorFlairText) ? String(e.authorFlairText) : void 0,
						treatmentTags: Array.isArray(null == e ? void 0 : e.treatmentTags) ? e.treatmentTags.map(e => String(e)) : [],
						linkId: m(e.linkId) ? String(e.linkId) : "",
						subredditNamePrefixed: m(e.subredditNamePrefixed) ? String(e.subredditNamePrefixed) : "",
						controversiality: m(e.controversiality) ? Number(e.controversiality) : 0,
						depth: m(e.depth) ? Number(e.depth) : 0,
						authorFlairBackgroundColor: m(e.authorFlairBackgroundColor) ? l.a.fromJSON(e.authorFlairBackgroundColor) : void 0,
						collapsedBecauseCrowdControl: m(e.collapsedBecauseCrowdControl) ? Boolean(e.collapsedBecauseCrowdControl) : void 0,
						modReports: Array.isArray(null == e ? void 0 : e.modReports) ? e.modReports.map(e => l.a.fromJSON(e)) : [],
						numReports: m(e.numReports) ? Number(e.numReports) : 0,
						ups: m(e.ups) ? Number(e.ups) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subredditId && (t.subredditId = e.subredditId), void 0 !== e.approvedAtUtc && (t.approvedAtUtc = e.approvedAtUtc), void 0 !== e.authorIsBlocked && (t.authorIsBlocked = e.authorIsBlocked), void 0 !== e.commentType && (t.commentType = e.commentType), e.awarders ? t.awarders = e.awarders.map(e => e) : t.awarders = [], void 0 !== e.modReasonBy && (t.modReasonBy = e.modReasonBy), void 0 !== e.bannedBy && (t.bannedBy = e.bannedBy), void 0 !== e.authorFlairType && (t.authorFlairType = e.authorFlairType), void 0 !== e.totalAwardsReceived && (t.totalAwardsReceived = Math.round(e.totalAwardsReceived)), void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.authorFlairTemplateId && (t.authorFlairTemplateId = e.authorFlairTemplateId), void 0 !== e.likes && (t.likes = e.likes), void 0 !== e.replies && (t.replies = e.replies ? d.c.toJSON(e.replies) : void 0), e.userReports ? t.userReports = e.userReports.map(e => e ? l.a.toJSON(e) : void 0) : t.userReports = [], void 0 !== e.saved && (t.saved = e.saved), void 0 !== e.id && (t.id = e.id), void 0 !== e.bannedAtUtc && (t.bannedAtUtc = e.bannedAtUtc), void 0 !== e.modReasonTitle && (t.modReasonTitle = e.modReasonTitle), void 0 !== e.gilded && (t.gilded = Math.round(e.gilded)), void 0 !== e.archived && (t.archived = e.archived), void 0 !== e.collapsedReasonCode && (t.collapsedReasonCode = e.collapsedReasonCode), void 0 !== e.noFollow && (t.noFollow = e.noFollow), void 0 !== e.author && (t.author = e.author), void 0 !== e.canModPost && (t.canModPost = e.canModPost), void 0 !== e.createdUtc && (t.createdUtc = Math.round(e.createdUtc)), void 0 !== e.sendReplies && (t.sendReplies = e.sendReplies), void 0 !== e.parentId && (t.parentId = e.parentId), void 0 !== e.score && (t.score = e.score), void 0 !== e.authorFullname && (t.authorFullname = e.authorFullname), void 0 !== e.approvedBy && (t.approvedBy = e.approvedBy), void 0 !== e.modNote && (t.modNote = e.modNote), void 0 !== e.collapsed && (t.collapsed = e.collapsed), void 0 !== e.body && (t.body = e.body), void 0 !== e.edited && (t.edited = e.edited), void 0 !== e.topAwardedType && (t.topAwardedType = e.topAwardedType), void 0 !== e.authorFlairCssClass && (t.authorFlairCssClass = e.authorFlairCssClass), void 0 !== e.name && (t.name = e.name), void 0 !== e.isSubmitter && (t.isSubmitter = e.isSubmitter), void 0 !== e.downs && (t.downs = Math.round(e.downs)), void 0 !== e.authorFlairRichtext && (t.authorFlairRichtext = e.authorFlairRichtext), void 0 !== e.authorPatreonFlair && (t.authorPatreonFlair = e.authorPatreonFlair), void 0 !== e.bodyHtml && (t.bodyHtml = e.bodyHtml), void 0 !== e.removalReason && (t.removalReason = e.removalReason), void 0 !== e.collapsedReason && (t.collapsedReason = e.collapsedReason), void 0 !== e.distinguished && (t.distinguished = e.distinguished), void 0 !== e.associatedAward && (t.associatedAward = e.associatedAward ? l.a.toJSON(e.associatedAward) : void 0), void 0 !== e.stickied && (t.stickied = e.stickied), void 0 !== e.authorPremium && (t.authorPremium = e.authorPremium), void 0 !== e.canGild && (t.canGild = e.canGild), void 0 !== e.gildings && (t.gildings = e.gildings ? l.a.toJSON(e.gildings) : void 0), void 0 !== e.unrepliableReason && (t.unrepliableReason = e.unrepliableReason), void 0 !== e.authorFlairTextColor && (t.authorFlairTextColor = e.authorFlairTextColor), void 0 !== e.scoreHidden && (t.scoreHidden = e.scoreHidden), void 0 !== e.permalink && (t.permalink = e.permalink), void 0 !== e.subredditType && (t.subredditType = e.subredditType), void 0 !== e.locked && (t.locked = e.locked), void 0 !== e.reportReasons && (t.reportReasons = e.reportReasons), void 0 !== e.created && (t.created = Math.round(e.created)), void 0 !== e.authorFlairText && (t.authorFlairText = e.authorFlairText), e.treatmentTags ? t.treatmentTags = e.treatmentTags.map(e => e) : t.treatmentTags = [], void 0 !== e.linkId && (t.linkId = e.linkId), void 0 !== e.subredditNamePrefixed && (t.subredditNamePrefixed = e.subredditNamePrefixed), void 0 !== e.controversiality && (t.controversiality = Math.round(e.controversiality)), void 0 !== e.depth && (t.depth = Math.round(e.depth)), void 0 !== e.authorFlairBackgroundColor && (t.authorFlairBackgroundColor = e.authorFlairBackgroundColor ? l.a.toJSON(e.authorFlairBackgroundColor) : void 0), void 0 !== e.collapsedBecauseCrowdControl && (t.collapsedBecauseCrowdControl = e.collapsedBecauseCrowdControl), e.modReports ? t.modReports = e.modReports.map(e => e ? l.a.toJSON(e) : void 0) : t.modReports = [], void 0 !== e.numReports && (t.numReports = Math.round(e.numReports)), void 0 !== e.ups && (t.ups = Math.round(e.ups)), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, u, c, p, v, m, f, g, h, y, b, k, S, w, O, T, N, R, $, C, I, E, A, P, x, F, j, M, D, J, _, B, V, L, U, q, W, G, H, z, Y, Z, X, K, Q, ee, te, oe, ie, re, ne, ae, se, de, le, ue, ce, pe, ve;
						const me = {
							$type: "devvit.actor.reddit.Comment",
							subredditId: "",
							approvedAtUtc: void 0,
							authorIsBlocked: !1,
							commentType: void 0,
							awarders: [],
							modReasonBy: void 0,
							bannedBy: void 0,
							authorFlairType: "",
							totalAwardsReceived: 0,
							subreddit: "",
							authorFlairTemplateId: void 0,
							likes: void 0,
							replies: void 0,
							userReports: [],
							saved: !1,
							id: "",
							bannedAtUtc: void 0,
							modReasonTitle: void 0,
							gilded: 0,
							archived: !1,
							collapsedReasonCode: void 0,
							noFollow: !1,
							author: "",
							canModPost: !1,
							createdUtc: 0,
							sendReplies: !1,
							parentId: "",
							score: "",
							authorFullname: "",
							approvedBy: void 0,
							modNote: void 0,
							collapsed: !1,
							body: "",
							edited: !1,
							topAwardedType: void 0,
							authorFlairCssClass: void 0,
							name: "",
							isSubmitter: !1,
							downs: 0,
							authorFlairRichtext: "",
							authorPatreonFlair: !1,
							bodyHtml: "",
							removalReason: void 0,
							collapsedReason: void 0,
							distinguished: void 0,
							associatedAward: void 0,
							stickied: !1,
							authorPremium: !1,
							canGild: !1,
							gildings: void 0,
							unrepliableReason: void 0,
							authorFlairTextColor: void 0,
							scoreHidden: !1,
							permalink: "",
							subredditType: "",
							locked: !1,
							reportReasons: void 0,
							created: 0,
							authorFlairText: void 0,
							treatmentTags: [],
							linkId: "",
							subredditNamePrefixed: "",
							controversiality: 0,
							depth: 0,
							authorFlairBackgroundColor: void 0,
							collapsedBecauseCrowdControl: void 0,
							modReports: [],
							numReports: 0,
							ups: 0
						};
						return me.subredditId = null !== (t = e.subredditId) && void 0 !== t ? t : "", me.approvedAtUtc = null !== (o = e.approvedAtUtc) && void 0 !== o ? o : void 0, me.authorIsBlocked = null !== (i = e.authorIsBlocked) && void 0 !== i && i, me.commentType = null !== (r = e.commentType) && void 0 !== r ? r : void 0, me.awarders = (null === (n = e.awarders) || void 0 === n ? void 0 : n.map(e => e)) || [], me.modReasonBy = null !== (a = e.modReasonBy) && void 0 !== a ? a : void 0, me.bannedBy = null !== (s = e.bannedBy) && void 0 !== s ? s : void 0, me.authorFlairType = null !== (u = e.authorFlairType) && void 0 !== u ? u : "", me.totalAwardsReceived = null !== (c = e.totalAwardsReceived) && void 0 !== c ? c : 0, me.subreddit = null !== (p = e.subreddit) && void 0 !== p ? p : "", me.authorFlairTemplateId = null !== (v = e.authorFlairTemplateId) && void 0 !== v ? v : void 0, me.likes = null !== (m = e.likes) && void 0 !== m ? m : void 0, me.replies = void 0 !== e.replies && null !== e.replies ? d.c.fromPartial(e.replies) : void 0, me.userReports = (null === (f = e.userReports) || void 0 === f ? void 0 : f.map(e => l.a.fromPartial(e))) || [], me.saved = null !== (g = e.saved) && void 0 !== g && g, me.id = null !== (h = e.id) && void 0 !== h ? h : "", me.bannedAtUtc = null !== (y = e.bannedAtUtc) && void 0 !== y ? y : void 0, me.modReasonTitle = null !== (b = e.modReasonTitle) && void 0 !== b ? b : void 0, me.gilded = null !== (k = e.gilded) && void 0 !== k ? k : 0, me.archived = null !== (S = e.archived) && void 0 !== S && S, me.collapsedReasonCode = null !== (w = e.collapsedReasonCode) && void 0 !== w ? w : void 0, me.noFollow = null !== (O = e.noFollow) && void 0 !== O && O, me.author = null !== (T = e.author) && void 0 !== T ? T : "", me.canModPost = null !== (N = e.canModPost) && void 0 !== N && N, me.createdUtc = null !== (R = e.createdUtc) && void 0 !== R ? R : 0, me.sendReplies = null !== ($ = e.sendReplies) && void 0 !== $ && $, me.parentId = null !== (C = e.parentId) && void 0 !== C ? C : "", me.score = null !== (I = e.score) && void 0 !== I ? I : "", me.authorFullname = null !== (E = e.authorFullname) && void 0 !== E ? E : "", me.approvedBy = null !== (A = e.approvedBy) && void 0 !== A ? A : void 0, me.modNote = null !== (P = e.modNote) && void 0 !== P ? P : void 0, me.collapsed = null !== (x = e.collapsed) && void 0 !== x && x, me.body = null !== (F = e.body) && void 0 !== F ? F : "", me.edited = null !== (j = e.edited) && void 0 !== j && j, me.topAwardedType = null !== (M = e.topAwardedType) && void 0 !== M ? M : void 0, me.authorFlairCssClass = null !== (D = e.authorFlairCssClass) && void 0 !== D ? D : void 0, me.name = null !== (J = e.name) && void 0 !== J ? J : "", me.isSubmitter = null !== (_ = e.isSubmitter) && void 0 !== _ && _, me.downs = null !== (B = e.downs) && void 0 !== B ? B : 0, me.authorFlairRichtext = null !== (V = e.authorFlairRichtext) && void 0 !== V ? V : "", me.authorPatreonFlair = null !== (L = e.authorPatreonFlair) && void 0 !== L && L, me.bodyHtml = null !== (U = e.bodyHtml) && void 0 !== U ? U : "", me.removalReason = null !== (q = e.removalReason) && void 0 !== q ? q : void 0, me.collapsedReason = null !== (W = e.collapsedReason) && void 0 !== W ? W : void 0, me.distinguished = null !== (G = e.distinguished) && void 0 !== G ? G : void 0, me.associatedAward = void 0 !== e.associatedAward && null !== e.associatedAward ? l.a.fromPartial(e.associatedAward) : void 0, me.stickied = null !== (H = e.stickied) && void 0 !== H && H, me.authorPremium = null !== (z = e.authorPremium) && void 0 !== z && z, me.canGild = null !== (Y = e.canGild) && void 0 !== Y && Y, me.gildings = void 0 !== e.gildings && null !== e.gildings ? l.a.fromPartial(e.gildings) : void 0, me.unrepliableReason = null !== (Z = e.unrepliableReason) && void 0 !== Z ? Z : void 0, me.authorFlairTextColor = null !== (X = e.authorFlairTextColor) && void 0 !== X ? X : void 0, me.scoreHidden = null !== (K = e.scoreHidden) && void 0 !== K && K, me.permalink = null !== (Q = e.permalink) && void 0 !== Q ? Q : "", me.subredditType = null !== (ee = e.subredditType) && void 0 !== ee ? ee : "", me.locked = null !== (te = e.locked) && void 0 !== te && te, me.reportReasons = null !== (oe = e.reportReasons) && void 0 !== oe ? oe : void 0, me.created = null !== (ie = e.created) && void 0 !== ie ? ie : 0, me.authorFlairText = null !== (re = e.authorFlairText) && void 0 !== re ? re : void 0, me.treatmentTags = (null === (ne = e.treatmentTags) || void 0 === ne ? void 0 : ne.map(e => e)) || [], me.linkId = null !== (ae = e.linkId) && void 0 !== ae ? ae : "", me.subredditNamePrefixed = null !== (se = e.subredditNamePrefixed) && void 0 !== se ? se : "", me.controversiality = null !== (de = e.controversiality) && void 0 !== de ? de : 0, me.depth = null !== (le = e.depth) && void 0 !== le ? le : 0, me.authorFlairBackgroundColor = void 0 !== e.authorFlairBackgroundColor && null !== e.authorFlairBackgroundColor ? l.a.fromPartial(e.authorFlairBackgroundColor) : void 0, me.collapsedBecauseCrowdControl = null !== (ue = e.collapsedBecauseCrowdControl) && void 0 !== ue ? ue : void 0, me.modReports = (null === (ce = e.modReports) || void 0 === ce ? void 0 : ce.map(e => l.a.fromPartial(e))) || [], me.numReports = null !== (pe = e.numReports) && void 0 !== pe ? pe : 0, me.ups = null !== (ve = e.ups) && void 0 !== ve ? ve : 0, me
					}
				};
				i.a.set(c.$type, c);
				var p = (() => {
					if (void 0 !== p) return p;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function v(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new p.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function m(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/actor/reddit/post.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return l
				})), o.d(t, "b", (function() {
					return u
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js");
				const l = {
					$type: "devvit.actor.reddit.Ignored",
					encode(e) {
						return arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create()
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.actor.reddit.Ignored"
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							o.skipType(7 & e)
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type
					}),
					toJSON: e => ({}),
					fromPartial: e => ({
						$type: "devvit.actor.reddit.Ignored"
					})
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "devvit.actor.reddit.Post",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						void 0 !== e.approvedAtUtc && d.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.approvedAtUtc
						}, t.uint32(10).fork()).ldelim(), "" !== e.subreddit && t.uint32(18).string(e.subreddit), "" !== e.authorFullname && t.uint32(34).string(e.authorFullname), !0 === e.saved && t.uint32(40).bool(e.saved), void 0 !== e.modReasonTitle && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modReasonTitle
						}, t.uint32(50).fork()).ldelim(), 0 !== e.gilded && t.uint32(56).int64(e.gilded), !0 === e.clicked && t.uint32(64).bool(e.clicked), "" !== e.title && t.uint32(74).string(e.title), void 0 !== e.linkFlairRichtext && l.encode(e.linkFlairRichtext, t.uint32(82).fork()).ldelim(), "" !== e.subredditNamePrefixed && t.uint32(90).string(e.subredditNamePrefixed), !0 === e.hidden && t.uint32(96).bool(e.hidden), "" !== e.linkFlairCssClass && t.uint32(114).string(e.linkFlairCssClass), 0 !== e.downs && t.uint32(120).int64(e.downs), 0 !== e.thumbnailHeight && t.uint32(128).int64(e.thumbnailHeight), void 0 !== e.topAwardedType && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.topAwardedType
						}, t.uint32(138).fork()).ldelim(), !0 === e.hideScore && t.uint32(144).bool(e.hideScore), "" !== e.name && t.uint32(154).string(e.name), !0 === e.quarantine && t.uint32(160).bool(e.quarantine), "" !== e.linkFlairTextColor && t.uint32(170).string(e.linkFlairTextColor), 0 !== e.upvoteRatio && t.uint32(177).double(e.upvoteRatio), void 0 !== e.authorFlairBackgroundColor && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairBackgroundColor
						}, t.uint32(186).fork()).ldelim(), 0 !== e.ups && t.uint32(192).int64(e.ups), 0 !== e.totalAwardsReceived && t.uint32(200).int64(e.totalAwardsReceived), void 0 !== e.mediaEmbed && l.encode(e.mediaEmbed, t.uint32(210).fork()).ldelim(), 0 !== e.thumbnailWidth && t.uint32(216).int64(e.thumbnailWidth), void 0 !== e.authorFlairTemplateId && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairTemplateId
						}, t.uint32(226).fork()).ldelim(), !0 === e.isOriginalContent && t.uint32(232).bool(e.isOriginalContent);
						for (const o of e.userReports) l.encode(o, t.uint32(242).fork()).ldelim();
						void 0 !== e.secureMedia && l.encode(e.secureMedia, t.uint32(250).fork()).ldelim(), !0 === e.isRedditMediaDomain && t.uint32(256).bool(e.isRedditMediaDomain), !0 === e.isMeta && t.uint32(264).bool(e.isMeta), void 0 !== e.secureMediaEmbed && l.encode(e.secureMediaEmbed, t.uint32(282).fork()).ldelim(), "" !== e.linkFlairText && t.uint32(290).string(e.linkFlairText), !0 === e.canModPost && t.uint32(296).bool(e.canModPost), 0 !== e.score && t.uint32(304).int64(e.score), void 0 !== e.approvedBy && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.approvedBy
						}, t.uint32(314).fork()).ldelim(), !0 === e.isCreatedFromAdsUi && t.uint32(320).bool(e.isCreatedFromAdsUi), !0 === e.authorPremium && t.uint32(328).bool(e.authorPremium), "" !== e.thumbnail && t.uint32(338).string(e.thumbnail), !0 === e.edited && t.uint32(344).bool(e.edited), void 0 !== e.authorFlairCssClass && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairCssClass
						}, t.uint32(354).fork()).ldelim(), "" !== e.authorFlairRichtext && t.uint32(362).string(e.authorFlairRichtext), void 0 !== e.gildings && l.encode(e.gildings, t.uint32(370).fork()).ldelim(), "" !== e.postHint && t.uint32(378).string(e.postHint), !0 === e.isSelf && t.uint32(392).bool(e.isSelf), "" !== e.subredditType && t.uint32(402).string(e.subredditType), 0 !== e.created && t.uint32(408).int64(e.created), "" !== e.linkFlairType && t.uint32(418).string(e.linkFlairType), 0 !== e.wls && t.uint32(424).int64(e.wls), void 0 !== e.removedByCategory && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.removedByCategory
						}, t.uint32(434).fork()).ldelim(), void 0 !== e.bannedBy && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.bannedBy
						}, t.uint32(442).fork()).ldelim(), "" !== e.authorFlairType && t.uint32(450).string(e.authorFlairType), "" !== e.domain && t.uint32(458).string(e.domain), !0 === e.allowLiveComments && t.uint32(464).bool(e.allowLiveComments), void 0 !== e.selftextHtml && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.selftextHtml
						}, t.uint32(474).fork()).ldelim(), void 0 !== e.likes && d.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.likes
						}, t.uint32(482).fork()).ldelim(), void 0 !== e.suggestedSort && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.suggestedSort
						}, t.uint32(490).fork()).ldelim(), void 0 !== e.bannedAtUtc && d.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.bannedAtUtc
						}, t.uint32(498).fork()).ldelim(), "" !== e.urlOverriddenByDest && t.uint32(506).string(e.urlOverriddenByDest), void 0 !== e.viewCount && d.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.viewCount
						}, t.uint32(514).fork()).ldelim(), !0 === e.archived && t.uint32(520).bool(e.archived), !0 === e.noFollow && t.uint32(528).bool(e.noFollow), !0 === e.isCrosspostable && t.uint32(536).bool(e.isCrosspostable), !0 === e.pinned && t.uint32(544).bool(e.pinned), void 0 !== e.preview && l.encode(e.preview, t.uint32(562).fork()).ldelim();
						for (const o of e.awarders) t.uint32(578).string(o);
						"" !== e.mediaOnly && t.uint32(586).string(e.mediaOnly), "" !== e.linkFlairTemplateId && t.uint32(594).string(e.linkFlairTemplateId), !0 === e.canGild && t.uint32(600).bool(e.canGild), !0 === e.spoiler && t.uint32(608).bool(e.spoiler), !0 === e.locked && t.uint32(616).bool(e.locked), void 0 !== e.authorFlairText && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairText
						}, t.uint32(626).fork()).ldelim();
						for (const o of e.treatmentTags) t.uint32(634).string(o);
						!0 === e.visited && t.uint32(640).bool(e.visited), void 0 !== e.removedBy && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.removedBy
						}, t.uint32(650).fork()).ldelim(), void 0 !== e.modNote && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modNote
						}, t.uint32(658).fork()).ldelim(), void 0 !== e.distinguished && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.distinguished
						}, t.uint32(666).fork()).ldelim(), "" !== e.subredditId && t.uint32(674).string(e.subredditId), !0 === e.authorIsBlocked && t.uint32(680).bool(e.authorIsBlocked), void 0 !== e.modReasonBy && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modReasonBy
						}, t.uint32(690).fork()).ldelim(), void 0 !== e.numReports && d.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.numReports
						}, t.uint32(698).fork()).ldelim(), void 0 !== e.removalReason && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.removalReason
						}, t.uint32(706).fork()).ldelim(), "" !== e.linkFlairBackgroundColor && t.uint32(714).string(e.linkFlairBackgroundColor), "" !== e.id && t.uint32(722).string(e.id), !0 === e.isRobotIndexable && t.uint32(728).bool(e.isRobotIndexable), void 0 !== e.reportReasons && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.reportReasons
						}, t.uint32(738).fork()).ldelim(), "" !== e.author && t.uint32(746).string(e.author), void 0 !== e.discussionType && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.discussionType
						}, t.uint32(754).fork()).ldelim(), 0 !== e.numComments && t.uint32(760).int64(e.numComments), !0 === e.sendReplies && t.uint32(768).bool(e.sendReplies), "" !== e.whitelistStatus && t.uint32(778).string(e.whitelistStatus), !0 === e.contestMode && t.uint32(784).bool(e.contestMode);
						for (const o of e.modReports) l.encode(o, t.uint32(794).fork()).ldelim();
						return !0 === e.authorPatreonFlair && t.uint32(800).bool(e.authorPatreonFlair), void 0 !== e.authorFlairTextColor && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.authorFlairTextColor
						}, t.uint32(810).fork()).ldelim(), "" !== e.permalink && t.uint32(818).string(e.permalink), "" !== e.parentWhitelistStatus && t.uint32(826).string(e.parentWhitelistStatus), !0 === e.stickied && t.uint32(832).bool(e.stickied), "" !== e.url && t.uint32(842).string(e.url), 0 !== e.subredditSubscribers && t.uint32(848).int64(e.subredditSubscribers), 0 !== e.createdUtc && t.uint32(856).int64(e.createdUtc), 0 !== e.numCrossposts && t.uint32(864).int64(e.numCrossposts), void 0 !== e.media && l.encode(e.media, t.uint32(874).fork()).ldelim(), !0 === e.isVideo && t.uint32(880).bool(e.isVideo), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.actor.reddit.Post",
							approvedAtUtc: void 0,
							subreddit: "",
							authorFullname: "",
							saved: !1,
							modReasonTitle: void 0,
							gilded: 0,
							clicked: !1,
							title: "",
							linkFlairRichtext: void 0,
							subredditNamePrefixed: "",
							hidden: !1,
							linkFlairCssClass: "",
							downs: 0,
							thumbnailHeight: 0,
							topAwardedType: void 0,
							hideScore: !1,
							name: "",
							quarantine: !1,
							linkFlairTextColor: "",
							upvoteRatio: 0,
							authorFlairBackgroundColor: void 0,
							ups: 0,
							totalAwardsReceived: 0,
							mediaEmbed: void 0,
							thumbnailWidth: 0,
							authorFlairTemplateId: void 0,
							isOriginalContent: !1,
							userReports: [],
							secureMedia: void 0,
							isRedditMediaDomain: !1,
							isMeta: !1,
							secureMediaEmbed: void 0,
							linkFlairText: "",
							canModPost: !1,
							score: 0,
							approvedBy: void 0,
							isCreatedFromAdsUi: !1,
							authorPremium: !1,
							thumbnail: "",
							edited: !1,
							authorFlairCssClass: void 0,
							authorFlairRichtext: "",
							gildings: void 0,
							postHint: "",
							isSelf: !1,
							subredditType: "",
							created: 0,
							linkFlairType: "",
							wls: 0,
							removedByCategory: void 0,
							bannedBy: void 0,
							authorFlairType: "",
							domain: "",
							allowLiveComments: !1,
							selftextHtml: void 0,
							likes: void 0,
							suggestedSort: void 0,
							bannedAtUtc: void 0,
							urlOverriddenByDest: "",
							viewCount: void 0,
							archived: !1,
							noFollow: !1,
							isCrosspostable: !1,
							pinned: !1,
							preview: void 0,
							awarders: [],
							mediaOnly: "",
							linkFlairTemplateId: "",
							canGild: !1,
							spoiler: !1,
							locked: !1,
							authorFlairText: void 0,
							treatmentTags: [],
							visited: !1,
							removedBy: void 0,
							modNote: void 0,
							distinguished: void 0,
							subredditId: "",
							authorIsBlocked: !1,
							modReasonBy: void 0,
							numReports: void 0,
							removalReason: void 0,
							linkFlairBackgroundColor: "",
							id: "",
							isRobotIndexable: !1,
							reportReasons: void 0,
							author: "",
							discussionType: void 0,
							numComments: 0,
							sendReplies: !1,
							whitelistStatus: "",
							contestMode: !1,
							modReports: [],
							authorPatreonFlair: !1,
							authorFlairTextColor: void 0,
							permalink: "",
							parentWhitelistStatus: "",
							stickied: !1,
							url: "",
							subredditSubscribers: 0,
							createdUtc: 0,
							numCrossposts: 0,
							media: void 0,
							isVideo: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.approvedAtUtc = d.c.decode(o, o.uint32()).value;
									break;
								case 2:
									r.subreddit = o.string();
									break;
								case 4:
									r.authorFullname = o.string();
									break;
								case 5:
									r.saved = o.bool();
									break;
								case 6:
									r.modReasonTitle = d.d.decode(o, o.uint32()).value;
									break;
								case 7:
									r.gilded = p(o.int64());
									break;
								case 8:
									r.clicked = o.bool();
									break;
								case 9:
									r.title = o.string();
									break;
								case 10:
									r.linkFlairRichtext = l.decode(o, o.uint32());
									break;
								case 11:
									r.subredditNamePrefixed = o.string();
									break;
								case 12:
									r.hidden = o.bool();
									break;
								case 14:
									r.linkFlairCssClass = o.string();
									break;
								case 15:
									r.downs = p(o.int64());
									break;
								case 16:
									r.thumbnailHeight = p(o.int64());
									break;
								case 17:
									r.topAwardedType = d.d.decode(o, o.uint32()).value;
									break;
								case 18:
									r.hideScore = o.bool();
									break;
								case 19:
									r.name = o.string();
									break;
								case 20:
									r.quarantine = o.bool();
									break;
								case 21:
									r.linkFlairTextColor = o.string();
									break;
								case 22:
									r.upvoteRatio = o.double();
									break;
								case 23:
									r.authorFlairBackgroundColor = d.d.decode(o, o.uint32()).value;
									break;
								case 24:
									r.ups = p(o.int64());
									break;
								case 25:
									r.totalAwardsReceived = p(o.int64());
									break;
								case 26:
									r.mediaEmbed = l.decode(o, o.uint32());
									break;
								case 27:
									r.thumbnailWidth = p(o.int64());
									break;
								case 28:
									r.authorFlairTemplateId = d.d.decode(o, o.uint32()).value;
									break;
								case 29:
									r.isOriginalContent = o.bool();
									break;
								case 30:
									r.userReports.push(l.decode(o, o.uint32()));
									break;
								case 31:
									r.secureMedia = l.decode(o, o.uint32());
									break;
								case 32:
									r.isRedditMediaDomain = o.bool();
									break;
								case 33:
									r.isMeta = o.bool();
									break;
								case 35:
									r.secureMediaEmbed = l.decode(o, o.uint32());
									break;
								case 36:
									r.linkFlairText = o.string();
									break;
								case 37:
									r.canModPost = o.bool();
									break;
								case 38:
									r.score = p(o.int64());
									break;
								case 39:
									r.approvedBy = d.d.decode(o, o.uint32()).value;
									break;
								case 40:
									r.isCreatedFromAdsUi = o.bool();
									break;
								case 41:
									r.authorPremium = o.bool();
									break;
								case 42:
									r.thumbnail = o.string();
									break;
								case 43:
									r.edited = o.bool();
									break;
								case 44:
									r.authorFlairCssClass = d.d.decode(o, o.uint32()).value;
									break;
								case 45:
									r.authorFlairRichtext = o.string();
									break;
								case 46:
									r.gildings = l.decode(o, o.uint32());
									break;
								case 47:
									r.postHint = o.string();
									break;
								case 49:
									r.isSelf = o.bool();
									break;
								case 50:
									r.subredditType = o.string();
									break;
								case 51:
									r.created = p(o.int64());
									break;
								case 52:
									r.linkFlairType = o.string();
									break;
								case 53:
									r.wls = p(o.int64());
									break;
								case 54:
									r.removedByCategory = d.d.decode(o, o.uint32()).value;
									break;
								case 55:
									r.bannedBy = d.d.decode(o, o.uint32()).value;
									break;
								case 56:
									r.authorFlairType = o.string();
									break;
								case 57:
									r.domain = o.string();
									break;
								case 58:
									r.allowLiveComments = o.bool();
									break;
								case 59:
									r.selftextHtml = d.d.decode(o, o.uint32()).value;
									break;
								case 60:
									r.likes = d.c.decode(o, o.uint32()).value;
									break;
								case 61:
									r.suggestedSort = d.d.decode(o, o.uint32()).value;
									break;
								case 62:
									r.bannedAtUtc = d.c.decode(o, o.uint32()).value;
									break;
								case 63:
									r.urlOverriddenByDest = o.string();
									break;
								case 64:
									r.viewCount = d.c.decode(o, o.uint32()).value;
									break;
								case 65:
									r.archived = o.bool();
									break;
								case 66:
									r.noFollow = o.bool();
									break;
								case 67:
									r.isCrosspostable = o.bool();
									break;
								case 68:
									r.pinned = o.bool();
									break;
								case 70:
									r.preview = l.decode(o, o.uint32());
									break;
								case 72:
									r.awarders.push(o.string());
									break;
								case 73:
									r.mediaOnly = o.string();
									break;
								case 74:
									r.linkFlairTemplateId = o.string();
									break;
								case 75:
									r.canGild = o.bool();
									break;
								case 76:
									r.spoiler = o.bool();
									break;
								case 77:
									r.locked = o.bool();
									break;
								case 78:
									r.authorFlairText = d.d.decode(o, o.uint32()).value;
									break;
								case 79:
									r.treatmentTags.push(o.string());
									break;
								case 80:
									r.visited = o.bool();
									break;
								case 81:
									r.removedBy = d.d.decode(o, o.uint32()).value;
									break;
								case 82:
									r.modNote = d.d.decode(o, o.uint32()).value;
									break;
								case 83:
									r.distinguished = d.d.decode(o, o.uint32()).value;
									break;
								case 84:
									r.subredditId = o.string();
									break;
								case 85:
									r.authorIsBlocked = o.bool();
									break;
								case 86:
									r.modReasonBy = d.d.decode(o, o.uint32()).value;
									break;
								case 87:
									r.numReports = d.c.decode(o, o.uint32()).value;
									break;
								case 88:
									r.removalReason = d.d.decode(o, o.uint32()).value;
									break;
								case 89:
									r.linkFlairBackgroundColor = o.string();
									break;
								case 90:
									r.id = o.string();
									break;
								case 91:
									r.isRobotIndexable = o.bool();
									break;
								case 92:
									r.reportReasons = d.d.decode(o, o.uint32()).value;
									break;
								case 93:
									r.author = o.string();
									break;
								case 94:
									r.discussionType = d.d.decode(o, o.uint32()).value;
									break;
								case 95:
									r.numComments = p(o.int64());
									break;
								case 96:
									r.sendReplies = o.bool();
									break;
								case 97:
									r.whitelistStatus = o.string();
									break;
								case 98:
									r.contestMode = o.bool();
									break;
								case 99:
									r.modReports.push(l.decode(o, o.uint32()));
									break;
								case 100:
									r.authorPatreonFlair = o.bool();
									break;
								case 101:
									r.authorFlairTextColor = d.d.decode(o, o.uint32()).value;
									break;
								case 102:
									r.permalink = o.string();
									break;
								case 103:
									r.parentWhitelistStatus = o.string();
									break;
								case 104:
									r.stickied = o.bool();
									break;
								case 105:
									r.url = o.string();
									break;
								case 106:
									r.subredditSubscribers = p(o.int64());
									break;
								case 107:
									r.createdUtc = p(o.int64());
									break;
								case 108:
									r.numCrossposts = p(o.int64());
									break;
								case 109:
									r.media = l.decode(o, o.uint32());
									break;
								case 110:
									r.isVideo = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						approvedAtUtc: v(e.approvedAtUtc) ? Number(e.approvedAtUtc) : void 0,
						subreddit: v(e.subreddit) ? String(e.subreddit) : "",
						authorFullname: v(e.authorFullname) ? String(e.authorFullname) : "",
						saved: !!v(e.saved) && Boolean(e.saved),
						modReasonTitle: v(e.modReasonTitle) ? String(e.modReasonTitle) : void 0,
						gilded: v(e.gilded) ? Number(e.gilded) : 0,
						clicked: !!v(e.clicked) && Boolean(e.clicked),
						title: v(e.title) ? String(e.title) : "",
						linkFlairRichtext: v(e.linkFlairRichtext) ? l.fromJSON(e.linkFlairRichtext) : void 0,
						subredditNamePrefixed: v(e.subredditNamePrefixed) ? String(e.subredditNamePrefixed) : "",
						hidden: !!v(e.hidden) && Boolean(e.hidden),
						linkFlairCssClass: v(e.linkFlairCssClass) ? String(e.linkFlairCssClass) : "",
						downs: v(e.downs) ? Number(e.downs) : 0,
						thumbnailHeight: v(e.thumbnailHeight) ? Number(e.thumbnailHeight) : 0,
						topAwardedType: v(e.topAwardedType) ? String(e.topAwardedType) : void 0,
						hideScore: !!v(e.hideScore) && Boolean(e.hideScore),
						name: v(e.name) ? String(e.name) : "",
						quarantine: !!v(e.quarantine) && Boolean(e.quarantine),
						linkFlairTextColor: v(e.linkFlairTextColor) ? String(e.linkFlairTextColor) : "",
						upvoteRatio: v(e.upvoteRatio) ? Number(e.upvoteRatio) : 0,
						authorFlairBackgroundColor: v(e.authorFlairBackgroundColor) ? String(e.authorFlairBackgroundColor) : void 0,
						ups: v(e.ups) ? Number(e.ups) : 0,
						totalAwardsReceived: v(e.totalAwardsReceived) ? Number(e.totalAwardsReceived) : 0,
						mediaEmbed: v(e.mediaEmbed) ? l.fromJSON(e.mediaEmbed) : void 0,
						thumbnailWidth: v(e.thumbnailWidth) ? Number(e.thumbnailWidth) : 0,
						authorFlairTemplateId: v(e.authorFlairTemplateId) ? String(e.authorFlairTemplateId) : void 0,
						isOriginalContent: !!v(e.isOriginalContent) && Boolean(e.isOriginalContent),
						userReports: Array.isArray(null == e ? void 0 : e.userReports) ? e.userReports.map(e => l.fromJSON(e)) : [],
						secureMedia: v(e.secureMedia) ? l.fromJSON(e.secureMedia) : void 0,
						isRedditMediaDomain: !!v(e.isRedditMediaDomain) && Boolean(e.isRedditMediaDomain),
						isMeta: !!v(e.isMeta) && Boolean(e.isMeta),
						secureMediaEmbed: v(e.secureMediaEmbed) ? l.fromJSON(e.secureMediaEmbed) : void 0,
						linkFlairText: v(e.linkFlairText) ? String(e.linkFlairText) : "",
						canModPost: !!v(e.canModPost) && Boolean(e.canModPost),
						score: v(e.score) ? Number(e.score) : 0,
						approvedBy: v(e.approvedBy) ? String(e.approvedBy) : void 0,
						isCreatedFromAdsUi: !!v(e.isCreatedFromAdsUi) && Boolean(e.isCreatedFromAdsUi),
						authorPremium: !!v(e.authorPremium) && Boolean(e.authorPremium),
						thumbnail: v(e.thumbnail) ? String(e.thumbnail) : "",
						edited: !!v(e.edited) && Boolean(e.edited),
						authorFlairCssClass: v(e.authorFlairCssClass) ? String(e.authorFlairCssClass) : void 0,
						authorFlairRichtext: v(e.authorFlairRichtext) ? String(e.authorFlairRichtext) : "",
						gildings: v(e.gildings) ? l.fromJSON(e.gildings) : void 0,
						postHint: v(e.postHint) ? String(e.postHint) : "",
						isSelf: !!v(e.isSelf) && Boolean(e.isSelf),
						subredditType: v(e.subredditType) ? String(e.subredditType) : "",
						created: v(e.created) ? Number(e.created) : 0,
						linkFlairType: v(e.linkFlairType) ? String(e.linkFlairType) : "",
						wls: v(e.wls) ? Number(e.wls) : 0,
						removedByCategory: v(e.removedByCategory) ? String(e.removedByCategory) : void 0,
						bannedBy: v(e.bannedBy) ? String(e.bannedBy) : void 0,
						authorFlairType: v(e.authorFlairType) ? String(e.authorFlairType) : "",
						domain: v(e.domain) ? String(e.domain) : "",
						allowLiveComments: !!v(e.allowLiveComments) && Boolean(e.allowLiveComments),
						selftextHtml: v(e.selftextHtml) ? String(e.selftextHtml) : void 0,
						likes: v(e.likes) ? Number(e.likes) : void 0,
						suggestedSort: v(e.suggestedSort) ? String(e.suggestedSort) : void 0,
						bannedAtUtc: v(e.bannedAtUtc) ? Number(e.bannedAtUtc) : void 0,
						urlOverriddenByDest: v(e.urlOverriddenByDest) ? String(e.urlOverriddenByDest) : "",
						viewCount: v(e.viewCount) ? Number(e.viewCount) : void 0,
						archived: !!v(e.archived) && Boolean(e.archived),
						noFollow: !!v(e.noFollow) && Boolean(e.noFollow),
						isCrosspostable: !!v(e.isCrosspostable) && Boolean(e.isCrosspostable),
						pinned: !!v(e.pinned) && Boolean(e.pinned),
						preview: v(e.preview) ? l.fromJSON(e.preview) : void 0,
						awarders: Array.isArray(null == e ? void 0 : e.awarders) ? e.awarders.map(e => String(e)) : [],
						mediaOnly: v(e.mediaOnly) ? String(e.mediaOnly) : "",
						linkFlairTemplateId: v(e.linkFlairTemplateId) ? String(e.linkFlairTemplateId) : "",
						canGild: !!v(e.canGild) && Boolean(e.canGild),
						spoiler: !!v(e.spoiler) && Boolean(e.spoiler),
						locked: !!v(e.locked) && Boolean(e.locked),
						authorFlairText: v(e.authorFlairText) ? String(e.authorFlairText) : void 0,
						treatmentTags: Array.isArray(null == e ? void 0 : e.treatmentTags) ? e.treatmentTags.map(e => String(e)) : [],
						visited: !!v(e.visited) && Boolean(e.visited),
						removedBy: v(e.removedBy) ? String(e.removedBy) : void 0,
						modNote: v(e.modNote) ? String(e.modNote) : void 0,
						distinguished: v(e.distinguished) ? String(e.distinguished) : void 0,
						subredditId: v(e.subredditId) ? String(e.subredditId) : "",
						authorIsBlocked: !!v(e.authorIsBlocked) && Boolean(e.authorIsBlocked),
						modReasonBy: v(e.modReasonBy) ? String(e.modReasonBy) : void 0,
						numReports: v(e.numReports) ? Number(e.numReports) : void 0,
						removalReason: v(e.removalReason) ? String(e.removalReason) : void 0,
						linkFlairBackgroundColor: v(e.linkFlairBackgroundColor) ? String(e.linkFlairBackgroundColor) : "",
						id: v(e.id) ? String(e.id) : "",
						isRobotIndexable: !!v(e.isRobotIndexable) && Boolean(e.isRobotIndexable),
						reportReasons: v(e.reportReasons) ? String(e.reportReasons) : void 0,
						author: v(e.author) ? String(e.author) : "",
						discussionType: v(e.discussionType) ? String(e.discussionType) : void 0,
						numComments: v(e.numComments) ? Number(e.numComments) : 0,
						sendReplies: !!v(e.sendReplies) && Boolean(e.sendReplies),
						whitelistStatus: v(e.whitelistStatus) ? String(e.whitelistStatus) : "",
						contestMode: !!v(e.contestMode) && Boolean(e.contestMode),
						modReports: Array.isArray(null == e ? void 0 : e.modReports) ? e.modReports.map(e => l.fromJSON(e)) : [],
						authorPatreonFlair: !!v(e.authorPatreonFlair) && Boolean(e.authorPatreonFlair),
						authorFlairTextColor: v(e.authorFlairTextColor) ? String(e.authorFlairTextColor) : void 0,
						permalink: v(e.permalink) ? String(e.permalink) : "",
						parentWhitelistStatus: v(e.parentWhitelistStatus) ? String(e.parentWhitelistStatus) : "",
						stickied: !!v(e.stickied) && Boolean(e.stickied),
						url: v(e.url) ? String(e.url) : "",
						subredditSubscribers: v(e.subredditSubscribers) ? Number(e.subredditSubscribers) : 0,
						createdUtc: v(e.createdUtc) ? Number(e.createdUtc) : 0,
						numCrossposts: v(e.numCrossposts) ? Number(e.numCrossposts) : 0,
						media: v(e.media) ? l.fromJSON(e.media) : void 0,
						isVideo: !!v(e.isVideo) && Boolean(e.isVideo)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.approvedAtUtc && (t.approvedAtUtc = e.approvedAtUtc), void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.authorFullname && (t.authorFullname = e.authorFullname), void 0 !== e.saved && (t.saved = e.saved), void 0 !== e.modReasonTitle && (t.modReasonTitle = e.modReasonTitle), void 0 !== e.gilded && (t.gilded = Math.round(e.gilded)), void 0 !== e.clicked && (t.clicked = e.clicked), void 0 !== e.title && (t.title = e.title), void 0 !== e.linkFlairRichtext && (t.linkFlairRichtext = e.linkFlairRichtext ? l.toJSON(e.linkFlairRichtext) : void 0), void 0 !== e.subredditNamePrefixed && (t.subredditNamePrefixed = e.subredditNamePrefixed), void 0 !== e.hidden && (t.hidden = e.hidden), void 0 !== e.linkFlairCssClass && (t.linkFlairCssClass = e.linkFlairCssClass), void 0 !== e.downs && (t.downs = Math.round(e.downs)), void 0 !== e.thumbnailHeight && (t.thumbnailHeight = Math.round(e.thumbnailHeight)), void 0 !== e.topAwardedType && (t.topAwardedType = e.topAwardedType), void 0 !== e.hideScore && (t.hideScore = e.hideScore), void 0 !== e.name && (t.name = e.name), void 0 !== e.quarantine && (t.quarantine = e.quarantine), void 0 !== e.linkFlairTextColor && (t.linkFlairTextColor = e.linkFlairTextColor), void 0 !== e.upvoteRatio && (t.upvoteRatio = e.upvoteRatio), void 0 !== e.authorFlairBackgroundColor && (t.authorFlairBackgroundColor = e.authorFlairBackgroundColor), void 0 !== e.ups && (t.ups = Math.round(e.ups)), void 0 !== e.totalAwardsReceived && (t.totalAwardsReceived = Math.round(e.totalAwardsReceived)), void 0 !== e.mediaEmbed && (t.mediaEmbed = e.mediaEmbed ? l.toJSON(e.mediaEmbed) : void 0), void 0 !== e.thumbnailWidth && (t.thumbnailWidth = Math.round(e.thumbnailWidth)), void 0 !== e.authorFlairTemplateId && (t.authorFlairTemplateId = e.authorFlairTemplateId), void 0 !== e.isOriginalContent && (t.isOriginalContent = e.isOriginalContent), e.userReports ? t.userReports = e.userReports.map(e => e ? l.toJSON(e) : void 0) : t.userReports = [], void 0 !== e.secureMedia && (t.secureMedia = e.secureMedia ? l.toJSON(e.secureMedia) : void 0), void 0 !== e.isRedditMediaDomain && (t.isRedditMediaDomain = e.isRedditMediaDomain), void 0 !== e.isMeta && (t.isMeta = e.isMeta), void 0 !== e.secureMediaEmbed && (t.secureMediaEmbed = e.secureMediaEmbed ? l.toJSON(e.secureMediaEmbed) : void 0), void 0 !== e.linkFlairText && (t.linkFlairText = e.linkFlairText), void 0 !== e.canModPost && (t.canModPost = e.canModPost), void 0 !== e.score && (t.score = Math.round(e.score)), void 0 !== e.approvedBy && (t.approvedBy = e.approvedBy), void 0 !== e.isCreatedFromAdsUi && (t.isCreatedFromAdsUi = e.isCreatedFromAdsUi), void 0 !== e.authorPremium && (t.authorPremium = e.authorPremium), void 0 !== e.thumbnail && (t.thumbnail = e.thumbnail), void 0 !== e.edited && (t.edited = e.edited), void 0 !== e.authorFlairCssClass && (t.authorFlairCssClass = e.authorFlairCssClass), void 0 !== e.authorFlairRichtext && (t.authorFlairRichtext = e.authorFlairRichtext), void 0 !== e.gildings && (t.gildings = e.gildings ? l.toJSON(e.gildings) : void 0), void 0 !== e.postHint && (t.postHint = e.postHint), void 0 !== e.isSelf && (t.isSelf = e.isSelf), void 0 !== e.subredditType && (t.subredditType = e.subredditType), void 0 !== e.created && (t.created = Math.round(e.created)), void 0 !== e.linkFlairType && (t.linkFlairType = e.linkFlairType), void 0 !== e.wls && (t.wls = Math.round(e.wls)), void 0 !== e.removedByCategory && (t.removedByCategory = e.removedByCategory), void 0 !== e.bannedBy && (t.bannedBy = e.bannedBy), void 0 !== e.authorFlairType && (t.authorFlairType = e.authorFlairType), void 0 !== e.domain && (t.domain = e.domain), void 0 !== e.allowLiveComments && (t.allowLiveComments = e.allowLiveComments), void 0 !== e.selftextHtml && (t.selftextHtml = e.selftextHtml), void 0 !== e.likes && (t.likes = e.likes), void 0 !== e.suggestedSort && (t.suggestedSort = e.suggestedSort), void 0 !== e.bannedAtUtc && (t.bannedAtUtc = e.bannedAtUtc), void 0 !== e.urlOverriddenByDest && (t.urlOverriddenByDest = e.urlOverriddenByDest), void 0 !== e.viewCount && (t.viewCount = e.viewCount), void 0 !== e.archived && (t.archived = e.archived), void 0 !== e.noFollow && (t.noFollow = e.noFollow), void 0 !== e.isCrosspostable && (t.isCrosspostable = e.isCrosspostable), void 0 !== e.pinned && (t.pinned = e.pinned), void 0 !== e.preview && (t.preview = e.preview ? l.toJSON(e.preview) : void 0), e.awarders ? t.awarders = e.awarders.map(e => e) : t.awarders = [], void 0 !== e.mediaOnly && (t.mediaOnly = e.mediaOnly), void 0 !== e.linkFlairTemplateId && (t.linkFlairTemplateId = e.linkFlairTemplateId), void 0 !== e.canGild && (t.canGild = e.canGild), void 0 !== e.spoiler && (t.spoiler = e.spoiler), void 0 !== e.locked && (t.locked = e.locked), void 0 !== e.authorFlairText && (t.authorFlairText = e.authorFlairText), e.treatmentTags ? t.treatmentTags = e.treatmentTags.map(e => e) : t.treatmentTags = [], void 0 !== e.visited && (t.visited = e.visited), void 0 !== e.removedBy && (t.removedBy = e.removedBy), void 0 !== e.modNote && (t.modNote = e.modNote), void 0 !== e.distinguished && (t.distinguished = e.distinguished), void 0 !== e.subredditId && (t.subredditId = e.subredditId), void 0 !== e.authorIsBlocked && (t.authorIsBlocked = e.authorIsBlocked), void 0 !== e.modReasonBy && (t.modReasonBy = e.modReasonBy), void 0 !== e.numReports && (t.numReports = e.numReports), void 0 !== e.removalReason && (t.removalReason = e.removalReason), void 0 !== e.linkFlairBackgroundColor && (t.linkFlairBackgroundColor = e.linkFlairBackgroundColor), void 0 !== e.id && (t.id = e.id), void 0 !== e.isRobotIndexable && (t.isRobotIndexable = e.isRobotIndexable), void 0 !== e.reportReasons && (t.reportReasons = e.reportReasons), void 0 !== e.author && (t.author = e.author), void 0 !== e.discussionType && (t.discussionType = e.discussionType), void 0 !== e.numComments && (t.numComments = Math.round(e.numComments)), void 0 !== e.sendReplies && (t.sendReplies = e.sendReplies), void 0 !== e.whitelistStatus && (t.whitelistStatus = e.whitelistStatus), void 0 !== e.contestMode && (t.contestMode = e.contestMode), e.modReports ? t.modReports = e.modReports.map(e => e ? l.toJSON(e) : void 0) : t.modReports = [], void 0 !== e.authorPatreonFlair && (t.authorPatreonFlair = e.authorPatreonFlair), void 0 !== e.authorFlairTextColor && (t.authorFlairTextColor = e.authorFlairTextColor), void 0 !== e.permalink && (t.permalink = e.permalink), void 0 !== e.parentWhitelistStatus && (t.parentWhitelistStatus = e.parentWhitelistStatus), void 0 !== e.stickied && (t.stickied = e.stickied), void 0 !== e.url && (t.url = e.url), void 0 !== e.subredditSubscribers && (t.subredditSubscribers = Math.round(e.subredditSubscribers)), void 0 !== e.createdUtc && (t.createdUtc = Math.round(e.createdUtc)), void 0 !== e.numCrossposts && (t.numCrossposts = Math.round(e.numCrossposts)), void 0 !== e.media && (t.media = e.media ? l.toJSON(e.media) : void 0), void 0 !== e.isVideo && (t.isVideo = e.isVideo), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, u, c, p, v, m, f, g, h, y, b, k, S, w, O, T, N, R, $, C, I, E, A, P, x, F, j, M, D, J, _, B, V, L, U, q, W, G, H, z, Y, Z, X, K, Q, ee, te, oe, ie, re, ne, ae, se, de, le, ue, ce, pe, ve, me, fe, ge, he, ye, be, ke, Se, we, Oe, Te, Ne, Re, $e, Ce, Ie, Ee, Ae, Pe, xe, Fe, je, Me, De, Je, _e, Be, Ve, Le, Ue, qe;
						const We = {
							$type: "devvit.actor.reddit.Post",
							approvedAtUtc: void 0,
							subreddit: "",
							authorFullname: "",
							saved: !1,
							modReasonTitle: void 0,
							gilded: 0,
							clicked: !1,
							title: "",
							linkFlairRichtext: void 0,
							subredditNamePrefixed: "",
							hidden: !1,
							linkFlairCssClass: "",
							downs: 0,
							thumbnailHeight: 0,
							topAwardedType: void 0,
							hideScore: !1,
							name: "",
							quarantine: !1,
							linkFlairTextColor: "",
							upvoteRatio: 0,
							authorFlairBackgroundColor: void 0,
							ups: 0,
							totalAwardsReceived: 0,
							mediaEmbed: void 0,
							thumbnailWidth: 0,
							authorFlairTemplateId: void 0,
							isOriginalContent: !1,
							userReports: [],
							secureMedia: void 0,
							isRedditMediaDomain: !1,
							isMeta: !1,
							secureMediaEmbed: void 0,
							linkFlairText: "",
							canModPost: !1,
							score: 0,
							approvedBy: void 0,
							isCreatedFromAdsUi: !1,
							authorPremium: !1,
							thumbnail: "",
							edited: !1,
							authorFlairCssClass: void 0,
							authorFlairRichtext: "",
							gildings: void 0,
							postHint: "",
							isSelf: !1,
							subredditType: "",
							created: 0,
							linkFlairType: "",
							wls: 0,
							removedByCategory: void 0,
							bannedBy: void 0,
							authorFlairType: "",
							domain: "",
							allowLiveComments: !1,
							selftextHtml: void 0,
							likes: void 0,
							suggestedSort: void 0,
							bannedAtUtc: void 0,
							urlOverriddenByDest: "",
							viewCount: void 0,
							archived: !1,
							noFollow: !1,
							isCrosspostable: !1,
							pinned: !1,
							preview: void 0,
							awarders: [],
							mediaOnly: "",
							linkFlairTemplateId: "",
							canGild: !1,
							spoiler: !1,
							locked: !1,
							authorFlairText: void 0,
							treatmentTags: [],
							visited: !1,
							removedBy: void 0,
							modNote: void 0,
							distinguished: void 0,
							subredditId: "",
							authorIsBlocked: !1,
							modReasonBy: void 0,
							numReports: void 0,
							removalReason: void 0,
							linkFlairBackgroundColor: "",
							id: "",
							isRobotIndexable: !1,
							reportReasons: void 0,
							author: "",
							discussionType: void 0,
							numComments: 0,
							sendReplies: !1,
							whitelistStatus: "",
							contestMode: !1,
							modReports: [],
							authorPatreonFlair: !1,
							authorFlairTextColor: void 0,
							permalink: "",
							parentWhitelistStatus: "",
							stickied: !1,
							url: "",
							subredditSubscribers: 0,
							createdUtc: 0,
							numCrossposts: 0,
							media: void 0,
							isVideo: !1
						};
						return We.approvedAtUtc = null !== (t = e.approvedAtUtc) && void 0 !== t ? t : void 0, We.subreddit = null !== (o = e.subreddit) && void 0 !== o ? o : "", We.authorFullname = null !== (i = e.authorFullname) && void 0 !== i ? i : "", We.saved = null !== (r = e.saved) && void 0 !== r && r, We.modReasonTitle = null !== (n = e.modReasonTitle) && void 0 !== n ? n : void 0, We.gilded = null !== (a = e.gilded) && void 0 !== a ? a : 0, We.clicked = null !== (s = e.clicked) && void 0 !== s && s, We.title = null !== (d = e.title) && void 0 !== d ? d : "", We.linkFlairRichtext = void 0 !== e.linkFlairRichtext && null !== e.linkFlairRichtext ? l.fromPartial(e.linkFlairRichtext) : void 0, We.subredditNamePrefixed = null !== (u = e.subredditNamePrefixed) && void 0 !== u ? u : "", We.hidden = null !== (c = e.hidden) && void 0 !== c && c, We.linkFlairCssClass = null !== (p = e.linkFlairCssClass) && void 0 !== p ? p : "", We.downs = null !== (v = e.downs) && void 0 !== v ? v : 0, We.thumbnailHeight = null !== (m = e.thumbnailHeight) && void 0 !== m ? m : 0, We.topAwardedType = null !== (f = e.topAwardedType) && void 0 !== f ? f : void 0, We.hideScore = null !== (g = e.hideScore) && void 0 !== g && g, We.name = null !== (h = e.name) && void 0 !== h ? h : "", We.quarantine = null !== (y = e.quarantine) && void 0 !== y && y, We.linkFlairTextColor = null !== (b = e.linkFlairTextColor) && void 0 !== b ? b : "", We.upvoteRatio = null !== (k = e.upvoteRatio) && void 0 !== k ? k : 0, We.authorFlairBackgroundColor = null !== (S = e.authorFlairBackgroundColor) && void 0 !== S ? S : void 0, We.ups = null !== (w = e.ups) && void 0 !== w ? w : 0, We.totalAwardsReceived = null !== (O = e.totalAwardsReceived) && void 0 !== O ? O : 0, We.mediaEmbed = void 0 !== e.mediaEmbed && null !== e.mediaEmbed ? l.fromPartial(e.mediaEmbed) : void 0, We.thumbnailWidth = null !== (T = e.thumbnailWidth) && void 0 !== T ? T : 0, We.authorFlairTemplateId = null !== (N = e.authorFlairTemplateId) && void 0 !== N ? N : void 0, We.isOriginalContent = null !== (R = e.isOriginalContent) && void 0 !== R && R, We.userReports = (null === ($ = e.userReports) || void 0 === $ ? void 0 : $.map(e => l.fromPartial(e))) || [], We.secureMedia = void 0 !== e.secureMedia && null !== e.secureMedia ? l.fromPartial(e.secureMedia) : void 0, We.isRedditMediaDomain = null !== (C = e.isRedditMediaDomain) && void 0 !== C && C, We.isMeta = null !== (I = e.isMeta) && void 0 !== I && I, We.secureMediaEmbed = void 0 !== e.secureMediaEmbed && null !== e.secureMediaEmbed ? l.fromPartial(e.secureMediaEmbed) : void 0, We.linkFlairText = null !== (E = e.linkFlairText) && void 0 !== E ? E : "", We.canModPost = null !== (A = e.canModPost) && void 0 !== A && A, We.score = null !== (P = e.score) && void 0 !== P ? P : 0, We.approvedBy = null !== (x = e.approvedBy) && void 0 !== x ? x : void 0, We.isCreatedFromAdsUi = null !== (F = e.isCreatedFromAdsUi) && void 0 !== F && F, We.authorPremium = null !== (j = e.authorPremium) && void 0 !== j && j, We.thumbnail = null !== (M = e.thumbnail) && void 0 !== M ? M : "", We.edited = null !== (D = e.edited) && void 0 !== D && D, We.authorFlairCssClass = null !== (J = e.authorFlairCssClass) && void 0 !== J ? J : void 0, We.authorFlairRichtext = null !== (_ = e.authorFlairRichtext) && void 0 !== _ ? _ : "", We.gildings = void 0 !== e.gildings && null !== e.gildings ? l.fromPartial(e.gildings) : void 0, We.postHint = null !== (B = e.postHint) && void 0 !== B ? B : "", We.isSelf = null !== (V = e.isSelf) && void 0 !== V && V, We.subredditType = null !== (L = e.subredditType) && void 0 !== L ? L : "", We.created = null !== (U = e.created) && void 0 !== U ? U : 0, We.linkFlairType = null !== (q = e.linkFlairType) && void 0 !== q ? q : "", We.wls = null !== (W = e.wls) && void 0 !== W ? W : 0, We.removedByCategory = null !== (G = e.removedByCategory) && void 0 !== G ? G : void 0, We.bannedBy = null !== (H = e.bannedBy) && void 0 !== H ? H : void 0, We.authorFlairType = null !== (z = e.authorFlairType) && void 0 !== z ? z : "", We.domain = null !== (Y = e.domain) && void 0 !== Y ? Y : "", We.allowLiveComments = null !== (Z = e.allowLiveComments) && void 0 !== Z && Z, We.selftextHtml = null !== (X = e.selftextHtml) && void 0 !== X ? X : void 0, We.likes = null !== (K = e.likes) && void 0 !== K ? K : void 0, We.suggestedSort = null !== (Q = e.suggestedSort) && void 0 !== Q ? Q : void 0, We.bannedAtUtc = null !== (ee = e.bannedAtUtc) && void 0 !== ee ? ee : void 0, We.urlOverriddenByDest = null !== (te = e.urlOverriddenByDest) && void 0 !== te ? te : "", We.viewCount = null !== (oe = e.viewCount) && void 0 !== oe ? oe : void 0, We.archived = null !== (ie = e.archived) && void 0 !== ie && ie, We.noFollow = null !== (re = e.noFollow) && void 0 !== re && re, We.isCrosspostable = null !== (ne = e.isCrosspostable) && void 0 !== ne && ne, We.pinned = null !== (ae = e.pinned) && void 0 !== ae && ae, We.preview = void 0 !== e.preview && null !== e.preview ? l.fromPartial(e.preview) : void 0, We.awarders = (null === (se = e.awarders) || void 0 === se ? void 0 : se.map(e => e)) || [], We.mediaOnly = null !== (de = e.mediaOnly) && void 0 !== de ? de : "", We.linkFlairTemplateId = null !== (le = e.linkFlairTemplateId) && void 0 !== le ? le : "", We.canGild = null !== (ue = e.canGild) && void 0 !== ue && ue, We.spoiler = null !== (ce = e.spoiler) && void 0 !== ce && ce, We.locked = null !== (pe = e.locked) && void 0 !== pe && pe, We.authorFlairText = null !== (ve = e.authorFlairText) && void 0 !== ve ? ve : void 0, We.treatmentTags = (null === (me = e.treatmentTags) || void 0 === me ? void 0 : me.map(e => e)) || [], We.visited = null !== (fe = e.visited) && void 0 !== fe && fe, We.removedBy = null !== (ge = e.removedBy) && void 0 !== ge ? ge : void 0, We.modNote = null !== (he = e.modNote) && void 0 !== he ? he : void 0, We.distinguished = null !== (ye = e.distinguished) && void 0 !== ye ? ye : void 0, We.subredditId = null !== (be = e.subredditId) && void 0 !== be ? be : "", We.authorIsBlocked = null !== (ke = e.authorIsBlocked) && void 0 !== ke && ke, We.modReasonBy = null !== (Se = e.modReasonBy) && void 0 !== Se ? Se : void 0, We.numReports = null !== (we = e.numReports) && void 0 !== we ? we : void 0, We.removalReason = null !== (Oe = e.removalReason) && void 0 !== Oe ? Oe : void 0, We.linkFlairBackgroundColor = null !== (Te = e.linkFlairBackgroundColor) && void 0 !== Te ? Te : "", We.id = null !== (Ne = e.id) && void 0 !== Ne ? Ne : "", We.isRobotIndexable = null !== (Re = e.isRobotIndexable) && void 0 !== Re && Re, We.reportReasons = null !== ($e = e.reportReasons) && void 0 !== $e ? $e : void 0, We.author = null !== (Ce = e.author) && void 0 !== Ce ? Ce : "", We.discussionType = null !== (Ie = e.discussionType) && void 0 !== Ie ? Ie : void 0, We.numComments = null !== (Ee = e.numComments) && void 0 !== Ee ? Ee : 0, We.sendReplies = null !== (Ae = e.sendReplies) && void 0 !== Ae && Ae, We.whitelistStatus = null !== (Pe = e.whitelistStatus) && void 0 !== Pe ? Pe : "", We.contestMode = null !== (xe = e.contestMode) && void 0 !== xe && xe, We.modReports = (null === (Fe = e.modReports) || void 0 === Fe ? void 0 : Fe.map(e => l.fromPartial(e))) || [], We.authorPatreonFlair = null !== (je = e.authorPatreonFlair) && void 0 !== je && je, We.authorFlairTextColor = null !== (Me = e.authorFlairTextColor) && void 0 !== Me ? Me : void 0, We.permalink = null !== (De = e.permalink) && void 0 !== De ? De : "", We.parentWhitelistStatus = null !== (Je = e.parentWhitelistStatus) && void 0 !== Je ? Je : "", We.stickied = null !== (_e = e.stickied) && void 0 !== _e && _e, We.url = null !== (Be = e.url) && void 0 !== Be ? Be : "", We.subredditSubscribers = null !== (Ve = e.subredditSubscribers) && void 0 !== Ve ? Ve : 0, We.createdUtc = null !== (Le = e.createdUtc) && void 0 !== Le ? Le : 0, We.numCrossposts = null !== (Ue = e.numCrossposts) && void 0 !== Ue ? Ue : 0, We.media = void 0 !== e.media && null !== e.media ? l.fromPartial(e.media) : void 0, We.isVideo = null !== (qe = e.isVideo) && void 0 !== qe && qe, We
					}
				};
				i.a.set(u.$type, u);
				var c = (() => {
					if (void 0 !== c) return c;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function p(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new c.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function v(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/actor/reddit/subreddit.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return u
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/devvit/actor/reddit/post.js"),
					l = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js");
				const u = {
					$type: "devvit.actor.reddit.Subreddit",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						!0 === e.acceptFollowers && t.uint32(8).bool(e.acceptFollowers), !0 === e.accountsActiveIsFuzzed && t.uint32(16).bool(e.accountsActiveIsFuzzed), void 0 !== e.accountsActive && l.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.accountsActive
						}, t.uint32(26).fork()).ldelim(), void 0 !== e.activeUserCount && l.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.activeUserCount
						}, t.uint32(34).fork()).ldelim(), void 0 !== e.advertiserCategory && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.advertiserCategory
						}, t.uint32(42).fork()).ldelim(), !0 === e.allOriginalContent && t.uint32(48).bool(e.allOriginalContent), !0 === e.allowDiscovery && t.uint32(56).bool(e.allowDiscovery), !0 === e.allowGalleries && t.uint32(64).bool(e.allowGalleries), !0 === e.allowImages && t.uint32(72).bool(e.allowImages), !0 === e.allowPolls && t.uint32(80).bool(e.allowPolls), !0 === e.allowPredictionContributors && t.uint32(88).bool(e.allowPredictionContributors), !0 === e.allowPredictionsTournament && t.uint32(96).bool(e.allowPredictionsTournament), !0 === e.allowPredictions && t.uint32(104).bool(e.allowPredictions), !0 === e.allowTalks && t.uint32(112).bool(e.allowTalks), !0 === e.allowVideogifs && t.uint32(120).bool(e.allowVideogifs), !0 === e.allowVideos && t.uint32(128).bool(e.allowVideos), "" !== e.bannerBackgroundColor && t.uint32(138).string(e.bannerBackgroundColor), "" !== e.bannerBackgroundImage && t.uint32(146).string(e.bannerBackgroundImage), "" !== e.bannerImg && t.uint32(154).string(e.bannerImg), void 0 !== e.bannerSize && d.a.encode(e.bannerSize, t.uint32(162).fork()).ldelim(), !0 === e.canAssignLinkFlair && t.uint32(168).bool(e.canAssignLinkFlair), !0 === e.canAssignUserFlair && t.uint32(176).bool(e.canAssignUserFlair), !0 === e.collapseDeletedComments && t.uint32(184).bool(e.collapseDeletedComments), 0 !== e.commentScoreHideMins && t.uint32(192).int64(e.commentScoreHideMins), "" !== e.communityIcon && t.uint32(202).string(e.communityIcon), !0 === e.communityReviewed && t.uint32(208).bool(e.communityReviewed), 0 !== e.createdUtc && t.uint32(216).int64(e.createdUtc), 0 !== e.created && t.uint32(224).int64(e.created), "" !== e.descriptionHtml && t.uint32(234).string(e.descriptionHtml), "" !== e.description && t.uint32(242).string(e.description), !0 === e.disableContributorRequests && t.uint32(248).bool(e.disableContributorRequests), "" !== e.displayNamePrefixed && t.uint32(258).string(e.displayNamePrefixed), "" !== e.displayName && t.uint32(266).string(e.displayName), void 0 !== e.emojisCustomSize && d.a.encode(e.emojisCustomSize, t.uint32(274).fork()).ldelim(), !0 === e.emojisEnabled && t.uint32(280).bool(e.emojisEnabled), !0 === e.freeFormReports && t.uint32(288).bool(e.freeFormReports), !0 === e.hasMenuWidget && t.uint32(296).bool(e.hasMenuWidget), void 0 !== e.headerImg && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.headerImg
						}, t.uint32(306).fork()).ldelim(), void 0 !== e.headerSize && d.a.encode(e.headerSize, t.uint32(314).fork()).ldelim(), "" !== e.headerTitle && t.uint32(322).string(e.headerTitle), !0 === e.hideAds && t.uint32(328).bool(e.hideAds), "" !== e.iconImg && t.uint32(338).string(e.iconImg), t.uint32(346).fork();
						for (const o of e.iconSize) t.int64(o);
						t.ldelim(), "" !== e.id && t.uint32(354).string(e.id), !0 === e.isCrosspostableSubreddit && t.uint32(360).bool(e.isCrosspostableSubreddit), void 0 !== e.isEnrolledInNewModmail && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.isEnrolledInNewModmail
						}, t.uint32(370).fork()).ldelim(), "" !== e.keyColor && t.uint32(378).string(e.keyColor), "" !== e.lang && t.uint32(386).string(e.lang), !0 === e.linkFlairEnabled && t.uint32(392).bool(e.linkFlairEnabled), "" !== e.linkFlairPosition && t.uint32(402).string(e.linkFlairPosition), "" !== e.mobileBannerImage && t.uint32(410).string(e.mobileBannerImage), "" !== e.name && t.uint32(418).string(e.name), void 0 !== e.notificationLevel && d.a.encode(e.notificationLevel, t.uint32(426).fork()).ldelim(), !0 === e.originalContentTagEnabled && t.uint32(432).bool(e.originalContentTagEnabled), !0 === e.over18 && t.uint32(440).bool(e.over18), void 0 !== e.predictionLeaderboardEntryType && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.predictionLeaderboardEntryType
						}, t.uint32(450).fork()).ldelim(), "" !== e.primaryColor && t.uint32(458).string(e.primaryColor), "" !== e.publicDescriptionHtml && t.uint32(466).string(e.publicDescriptionHtml), "" !== e.publicDescription && t.uint32(474).string(e.publicDescription), !0 === e.publicTraffic && t.uint32(480).bool(e.publicTraffic), !0 === e.quarantine && t.uint32(488).bool(e.quarantine), !0 === e.restrictCommenting && t.uint32(496).bool(e.restrictCommenting), !0 === e.restrictPosting && t.uint32(504).bool(e.restrictPosting), !0 === e.shouldArchivePosts && t.uint32(512).bool(e.shouldArchivePosts), !0 === e.showMediaPreview && t.uint32(520).bool(e.showMediaPreview), !0 === e.showMedia && t.uint32(528).bool(e.showMedia), !0 === e.spoilersEnabled && t.uint32(536).bool(e.spoilersEnabled), "" !== e.submissionType && t.uint32(546).string(e.submissionType), "" !== e.submitLinkLabel && t.uint32(554).string(e.submitLinkLabel), void 0 !== e.submitTextHtml && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.submitTextHtml
						}, t.uint32(562).fork()).ldelim(), void 0 !== e.submitTextLabel && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.submitTextLabel
						}, t.uint32(570).fork()).ldelim(), void 0 !== e.submitText && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.submitText
						}, t.uint32(578).fork()).ldelim(), "" !== e.subredditType && t.uint32(586).string(e.subredditType), 0 !== e.subscribers && t.uint32(592).int64(e.subscribers), "" !== e.suggestedCommentSort && t.uint32(602).string(e.suggestedCommentSort), "" !== e.title && t.uint32(610).string(e.title), "" !== e.url && t.uint32(618).string(e.url), void 0 !== e.userCanFlairInSr && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userCanFlairInSr
						}, t.uint32(626).fork()).ldelim(), void 0 !== e.userFlairBackgroundColor && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.userFlairBackgroundColor
						}, t.uint32(634).fork()).ldelim(), void 0 !== e.userFlairCssClass && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.userFlairCssClass
						}, t.uint32(642).fork()).ldelim(), !0 === e.userFlairEnabledInSr && t.uint32(648).bool(e.userFlairEnabledInSr), "" !== e.userFlairPosition && t.uint32(658).string(e.userFlairPosition);
						for (const o of e.userFlairRichtext) t.uint32(666).string(o);
						return void 0 !== e.userFlairTemplateId && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.userFlairTemplateId
						}, t.uint32(674).fork()).ldelim(), void 0 !== e.userFlairTextColor && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.userFlairTextColor
						}, t.uint32(682).fork()).ldelim(), void 0 !== e.userFlairText && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.userFlairText
						}, t.uint32(690).fork()).ldelim(), void 0 !== e.userFlairType && l.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.userFlairType
						}, t.uint32(698).fork()).ldelim(), void 0 !== e.userHasFavorited && d.a.encode(e.userHasFavorited, t.uint32(706).fork()).ldelim(), void 0 !== e.userIsBanned && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userIsBanned
						}, t.uint32(714).fork()).ldelim(), void 0 !== e.userIsContributor && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userIsContributor
						}, t.uint32(722).fork()).ldelim(), void 0 !== e.userIsModerator && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userIsModerator
						}, t.uint32(730).fork()).ldelim(), void 0 !== e.userIsMuted && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userIsMuted
						}, t.uint32(738).fork()).ldelim(), void 0 !== e.userIsSubscriber && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userIsSubscriber
						}, t.uint32(746).fork()).ldelim(), void 0 !== e.userSrFlairEnabled && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userSrFlairEnabled
						}, t.uint32(754).fork()).ldelim(), void 0 !== e.userSrThemeEnabled && l.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.userSrThemeEnabled
						}, t.uint32(762).fork()).ldelim(), 0 !== e.videostreamLinksCount && t.uint32(768).int64(e.videostreamLinksCount), "" !== e.whitelistStatus && t.uint32(778).string(e.whitelistStatus), !0 === e.wikiEnabled && t.uint32(784).bool(e.wikiEnabled), 0 !== e.wls && t.uint32(792).int64(e.wls), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.actor.reddit.Subreddit",
							acceptFollowers: !1,
							accountsActiveIsFuzzed: !1,
							accountsActive: void 0,
							activeUserCount: void 0,
							advertiserCategory: void 0,
							allOriginalContent: !1,
							allowDiscovery: !1,
							allowGalleries: !1,
							allowImages: !1,
							allowPolls: !1,
							allowPredictionContributors: !1,
							allowPredictionsTournament: !1,
							allowPredictions: !1,
							allowTalks: !1,
							allowVideogifs: !1,
							allowVideos: !1,
							bannerBackgroundColor: "",
							bannerBackgroundImage: "",
							bannerImg: "",
							bannerSize: void 0,
							canAssignLinkFlair: !1,
							canAssignUserFlair: !1,
							collapseDeletedComments: !1,
							commentScoreHideMins: 0,
							communityIcon: "",
							communityReviewed: !1,
							createdUtc: 0,
							created: 0,
							descriptionHtml: "",
							description: "",
							disableContributorRequests: !1,
							displayNamePrefixed: "",
							displayName: "",
							emojisCustomSize: void 0,
							emojisEnabled: !1,
							freeFormReports: !1,
							hasMenuWidget: !1,
							headerImg: void 0,
							headerSize: void 0,
							headerTitle: "",
							hideAds: !1,
							iconImg: "",
							iconSize: [],
							id: "",
							isCrosspostableSubreddit: !1,
							isEnrolledInNewModmail: void 0,
							keyColor: "",
							lang: "",
							linkFlairEnabled: !1,
							linkFlairPosition: "",
							mobileBannerImage: "",
							name: "",
							notificationLevel: void 0,
							originalContentTagEnabled: !1,
							over18: !1,
							predictionLeaderboardEntryType: void 0,
							primaryColor: "",
							publicDescriptionHtml: "",
							publicDescription: "",
							publicTraffic: !1,
							quarantine: !1,
							restrictCommenting: !1,
							restrictPosting: !1,
							shouldArchivePosts: !1,
							showMediaPreview: !1,
							showMedia: !1,
							spoilersEnabled: !1,
							submissionType: "",
							submitLinkLabel: "",
							submitTextHtml: void 0,
							submitTextLabel: void 0,
							submitText: void 0,
							subredditType: "",
							subscribers: 0,
							suggestedCommentSort: "",
							title: "",
							url: "",
							userCanFlairInSr: void 0,
							userFlairBackgroundColor: void 0,
							userFlairCssClass: void 0,
							userFlairEnabledInSr: !1,
							userFlairPosition: "",
							userFlairRichtext: [],
							userFlairTemplateId: void 0,
							userFlairTextColor: void 0,
							userFlairText: void 0,
							userFlairType: void 0,
							userHasFavorited: void 0,
							userIsBanned: void 0,
							userIsContributor: void 0,
							userIsModerator: void 0,
							userIsMuted: void 0,
							userIsSubscriber: void 0,
							userSrFlairEnabled: void 0,
							userSrThemeEnabled: void 0,
							videostreamLinksCount: 0,
							whitelistStatus: "",
							wikiEnabled: !1,
							wls: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.acceptFollowers = o.bool();
									break;
								case 2:
									r.accountsActiveIsFuzzed = o.bool();
									break;
								case 3:
									r.accountsActive = l.c.decode(o, o.uint32()).value;
									break;
								case 4:
									r.activeUserCount = l.c.decode(o, o.uint32()).value;
									break;
								case 5:
									r.advertiserCategory = l.d.decode(o, o.uint32()).value;
									break;
								case 6:
									r.allOriginalContent = o.bool();
									break;
								case 7:
									r.allowDiscovery = o.bool();
									break;
								case 8:
									r.allowGalleries = o.bool();
									break;
								case 9:
									r.allowImages = o.bool();
									break;
								case 10:
									r.allowPolls = o.bool();
									break;
								case 11:
									r.allowPredictionContributors = o.bool();
									break;
								case 12:
									r.allowPredictionsTournament = o.bool();
									break;
								case 13:
									r.allowPredictions = o.bool();
									break;
								case 14:
									r.allowTalks = o.bool();
									break;
								case 15:
									r.allowVideogifs = o.bool();
									break;
								case 16:
									r.allowVideos = o.bool();
									break;
								case 17:
									r.bannerBackgroundColor = o.string();
									break;
								case 18:
									r.bannerBackgroundImage = o.string();
									break;
								case 19:
									r.bannerImg = o.string();
									break;
								case 20:
									r.bannerSize = d.a.decode(o, o.uint32());
									break;
								case 21:
									r.canAssignLinkFlair = o.bool();
									break;
								case 22:
									r.canAssignUserFlair = o.bool();
									break;
								case 23:
									r.collapseDeletedComments = o.bool();
									break;
								case 24:
									r.commentScoreHideMins = p(o.int64());
									break;
								case 25:
									r.communityIcon = o.string();
									break;
								case 26:
									r.communityReviewed = o.bool();
									break;
								case 27:
									r.createdUtc = p(o.int64());
									break;
								case 28:
									r.created = p(o.int64());
									break;
								case 29:
									r.descriptionHtml = o.string();
									break;
								case 30:
									r.description = o.string();
									break;
								case 31:
									r.disableContributorRequests = o.bool();
									break;
								case 32:
									r.displayNamePrefixed = o.string();
									break;
								case 33:
									r.displayName = o.string();
									break;
								case 34:
									r.emojisCustomSize = d.a.decode(o, o.uint32());
									break;
								case 35:
									r.emojisEnabled = o.bool();
									break;
								case 36:
									r.freeFormReports = o.bool();
									break;
								case 37:
									r.hasMenuWidget = o.bool();
									break;
								case 38:
									r.headerImg = l.d.decode(o, o.uint32()).value;
									break;
								case 39:
									r.headerSize = d.a.decode(o, o.uint32());
									break;
								case 40:
									r.headerTitle = o.string();
									break;
								case 41:
									r.hideAds = o.bool();
									break;
								case 42:
									r.iconImg = o.string();
									break;
								case 43:
									if (2 == (7 & e)) {
										const e = o.uint32() + o.pos;
										for (; o.pos < e;) r.iconSize.push(p(o.int64()))
									} else r.iconSize.push(p(o.int64()));
									break;
								case 44:
									r.id = o.string();
									break;
								case 45:
									r.isCrosspostableSubreddit = o.bool();
									break;
								case 46:
									r.isEnrolledInNewModmail = l.a.decode(o, o.uint32()).value;
									break;
								case 47:
									r.keyColor = o.string();
									break;
								case 48:
									r.lang = o.string();
									break;
								case 49:
									r.linkFlairEnabled = o.bool();
									break;
								case 50:
									r.linkFlairPosition = o.string();
									break;
								case 51:
									r.mobileBannerImage = o.string();
									break;
								case 52:
									r.name = o.string();
									break;
								case 53:
									r.notificationLevel = d.a.decode(o, o.uint32());
									break;
								case 54:
									r.originalContentTagEnabled = o.bool();
									break;
								case 55:
									r.over18 = o.bool();
									break;
								case 56:
									r.predictionLeaderboardEntryType = l.d.decode(o, o.uint32()).value;
									break;
								case 57:
									r.primaryColor = o.string();
									break;
								case 58:
									r.publicDescriptionHtml = o.string();
									break;
								case 59:
									r.publicDescription = o.string();
									break;
								case 60:
									r.publicTraffic = o.bool();
									break;
								case 61:
									r.quarantine = o.bool();
									break;
								case 62:
									r.restrictCommenting = o.bool();
									break;
								case 63:
									r.restrictPosting = o.bool();
									break;
								case 64:
									r.shouldArchivePosts = o.bool();
									break;
								case 65:
									r.showMediaPreview = o.bool();
									break;
								case 66:
									r.showMedia = o.bool();
									break;
								case 67:
									r.spoilersEnabled = o.bool();
									break;
								case 68:
									r.submissionType = o.string();
									break;
								case 69:
									r.submitLinkLabel = o.string();
									break;
								case 70:
									r.submitTextHtml = l.d.decode(o, o.uint32()).value;
									break;
								case 71:
									r.submitTextLabel = l.d.decode(o, o.uint32()).value;
									break;
								case 72:
									r.submitText = l.d.decode(o, o.uint32()).value;
									break;
								case 73:
									r.subredditType = o.string();
									break;
								case 74:
									r.subscribers = p(o.int64());
									break;
								case 75:
									r.suggestedCommentSort = o.string();
									break;
								case 76:
									r.title = o.string();
									break;
								case 77:
									r.url = o.string();
									break;
								case 78:
									r.userCanFlairInSr = l.a.decode(o, o.uint32()).value;
									break;
								case 79:
									r.userFlairBackgroundColor = l.d.decode(o, o.uint32()).value;
									break;
								case 80:
									r.userFlairCssClass = l.d.decode(o, o.uint32()).value;
									break;
								case 81:
									r.userFlairEnabledInSr = o.bool();
									break;
								case 82:
									r.userFlairPosition = o.string();
									break;
								case 83:
									r.userFlairRichtext.push(o.string());
									break;
								case 84:
									r.userFlairTemplateId = l.d.decode(o, o.uint32()).value;
									break;
								case 85:
									r.userFlairTextColor = l.d.decode(o, o.uint32()).value;
									break;
								case 86:
									r.userFlairText = l.d.decode(o, o.uint32()).value;
									break;
								case 87:
									r.userFlairType = l.d.decode(o, o.uint32()).value;
									break;
								case 88:
									r.userHasFavorited = d.a.decode(o, o.uint32());
									break;
								case 89:
									r.userIsBanned = l.a.decode(o, o.uint32()).value;
									break;
								case 90:
									r.userIsContributor = l.a.decode(o, o.uint32()).value;
									break;
								case 91:
									r.userIsModerator = l.a.decode(o, o.uint32()).value;
									break;
								case 92:
									r.userIsMuted = l.a.decode(o, o.uint32()).value;
									break;
								case 93:
									r.userIsSubscriber = l.a.decode(o, o.uint32()).value;
									break;
								case 94:
									r.userSrFlairEnabled = l.a.decode(o, o.uint32()).value;
									break;
								case 95:
									r.userSrThemeEnabled = l.a.decode(o, o.uint32()).value;
									break;
								case 96:
									r.videostreamLinksCount = p(o.int64());
									break;
								case 97:
									r.whitelistStatus = o.string();
									break;
								case 98:
									r.wikiEnabled = o.bool();
									break;
								case 99:
									r.wls = p(o.int64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						acceptFollowers: !!v(e.acceptFollowers) && Boolean(e.acceptFollowers),
						accountsActiveIsFuzzed: !!v(e.accountsActiveIsFuzzed) && Boolean(e.accountsActiveIsFuzzed),
						accountsActive: v(e.accountsActive) ? Number(e.accountsActive) : void 0,
						activeUserCount: v(e.activeUserCount) ? Number(e.activeUserCount) : void 0,
						advertiserCategory: v(e.advertiserCategory) ? String(e.advertiserCategory) : void 0,
						allOriginalContent: !!v(e.allOriginalContent) && Boolean(e.allOriginalContent),
						allowDiscovery: !!v(e.allowDiscovery) && Boolean(e.allowDiscovery),
						allowGalleries: !!v(e.allowGalleries) && Boolean(e.allowGalleries),
						allowImages: !!v(e.allowImages) && Boolean(e.allowImages),
						allowPolls: !!v(e.allowPolls) && Boolean(e.allowPolls),
						allowPredictionContributors: !!v(e.allowPredictionContributors) && Boolean(e.allowPredictionContributors),
						allowPredictionsTournament: !!v(e.allowPredictionsTournament) && Boolean(e.allowPredictionsTournament),
						allowPredictions: !!v(e.allowPredictions) && Boolean(e.allowPredictions),
						allowTalks: !!v(e.allowTalks) && Boolean(e.allowTalks),
						allowVideogifs: !!v(e.allowVideogifs) && Boolean(e.allowVideogifs),
						allowVideos: !!v(e.allowVideos) && Boolean(e.allowVideos),
						bannerBackgroundColor: v(e.bannerBackgroundColor) ? String(e.bannerBackgroundColor) : "",
						bannerBackgroundImage: v(e.bannerBackgroundImage) ? String(e.bannerBackgroundImage) : "",
						bannerImg: v(e.bannerImg) ? String(e.bannerImg) : "",
						bannerSize: v(e.bannerSize) ? d.a.fromJSON(e.bannerSize) : void 0,
						canAssignLinkFlair: !!v(e.canAssignLinkFlair) && Boolean(e.canAssignLinkFlair),
						canAssignUserFlair: !!v(e.canAssignUserFlair) && Boolean(e.canAssignUserFlair),
						collapseDeletedComments: !!v(e.collapseDeletedComments) && Boolean(e.collapseDeletedComments),
						commentScoreHideMins: v(e.commentScoreHideMins) ? Number(e.commentScoreHideMins) : 0,
						communityIcon: v(e.communityIcon) ? String(e.communityIcon) : "",
						communityReviewed: !!v(e.communityReviewed) && Boolean(e.communityReviewed),
						createdUtc: v(e.createdUtc) ? Number(e.createdUtc) : 0,
						created: v(e.created) ? Number(e.created) : 0,
						descriptionHtml: v(e.descriptionHtml) ? String(e.descriptionHtml) : "",
						description: v(e.description) ? String(e.description) : "",
						disableContributorRequests: !!v(e.disableContributorRequests) && Boolean(e.disableContributorRequests),
						displayNamePrefixed: v(e.displayNamePrefixed) ? String(e.displayNamePrefixed) : "",
						displayName: v(e.displayName) ? String(e.displayName) : "",
						emojisCustomSize: v(e.emojisCustomSize) ? d.a.fromJSON(e.emojisCustomSize) : void 0,
						emojisEnabled: !!v(e.emojisEnabled) && Boolean(e.emojisEnabled),
						freeFormReports: !!v(e.freeFormReports) && Boolean(e.freeFormReports),
						hasMenuWidget: !!v(e.hasMenuWidget) && Boolean(e.hasMenuWidget),
						headerImg: v(e.headerImg) ? String(e.headerImg) : void 0,
						headerSize: v(e.headerSize) ? d.a.fromJSON(e.headerSize) : void 0,
						headerTitle: v(e.headerTitle) ? String(e.headerTitle) : "",
						hideAds: !!v(e.hideAds) && Boolean(e.hideAds),
						iconImg: v(e.iconImg) ? String(e.iconImg) : "",
						iconSize: Array.isArray(null == e ? void 0 : e.iconSize) ? e.iconSize.map(e => Number(e)) : [],
						id: v(e.id) ? String(e.id) : "",
						isCrosspostableSubreddit: !!v(e.isCrosspostableSubreddit) && Boolean(e.isCrosspostableSubreddit),
						isEnrolledInNewModmail: v(e.isEnrolledInNewModmail) ? Boolean(e.isEnrolledInNewModmail) : void 0,
						keyColor: v(e.keyColor) ? String(e.keyColor) : "",
						lang: v(e.lang) ? String(e.lang) : "",
						linkFlairEnabled: !!v(e.linkFlairEnabled) && Boolean(e.linkFlairEnabled),
						linkFlairPosition: v(e.linkFlairPosition) ? String(e.linkFlairPosition) : "",
						mobileBannerImage: v(e.mobileBannerImage) ? String(e.mobileBannerImage) : "",
						name: v(e.name) ? String(e.name) : "",
						notificationLevel: v(e.notificationLevel) ? d.a.fromJSON(e.notificationLevel) : void 0,
						originalContentTagEnabled: !!v(e.originalContentTagEnabled) && Boolean(e.originalContentTagEnabled),
						over18: !!v(e.over18) && Boolean(e.over18),
						predictionLeaderboardEntryType: v(e.predictionLeaderboardEntryType) ? String(e.predictionLeaderboardEntryType) : void 0,
						primaryColor: v(e.primaryColor) ? String(e.primaryColor) : "",
						publicDescriptionHtml: v(e.publicDescriptionHtml) ? String(e.publicDescriptionHtml) : "",
						publicDescription: v(e.publicDescription) ? String(e.publicDescription) : "",
						publicTraffic: !!v(e.publicTraffic) && Boolean(e.publicTraffic),
						quarantine: !!v(e.quarantine) && Boolean(e.quarantine),
						restrictCommenting: !!v(e.restrictCommenting) && Boolean(e.restrictCommenting),
						restrictPosting: !!v(e.restrictPosting) && Boolean(e.restrictPosting),
						shouldArchivePosts: !!v(e.shouldArchivePosts) && Boolean(e.shouldArchivePosts),
						showMediaPreview: !!v(e.showMediaPreview) && Boolean(e.showMediaPreview),
						showMedia: !!v(e.showMedia) && Boolean(e.showMedia),
						spoilersEnabled: !!v(e.spoilersEnabled) && Boolean(e.spoilersEnabled),
						submissionType: v(e.submissionType) ? String(e.submissionType) : "",
						submitLinkLabel: v(e.submitLinkLabel) ? String(e.submitLinkLabel) : "",
						submitTextHtml: v(e.submitTextHtml) ? String(e.submitTextHtml) : void 0,
						submitTextLabel: v(e.submitTextLabel) ? String(e.submitTextLabel) : void 0,
						submitText: v(e.submitText) ? String(e.submitText) : void 0,
						subredditType: v(e.subredditType) ? String(e.subredditType) : "",
						subscribers: v(e.subscribers) ? Number(e.subscribers) : 0,
						suggestedCommentSort: v(e.suggestedCommentSort) ? String(e.suggestedCommentSort) : "",
						title: v(e.title) ? String(e.title) : "",
						url: v(e.url) ? String(e.url) : "",
						userCanFlairInSr: v(e.userCanFlairInSr) ? Boolean(e.userCanFlairInSr) : void 0,
						userFlairBackgroundColor: v(e.userFlairBackgroundColor) ? String(e.userFlairBackgroundColor) : void 0,
						userFlairCssClass: v(e.userFlairCssClass) ? String(e.userFlairCssClass) : void 0,
						userFlairEnabledInSr: !!v(e.userFlairEnabledInSr) && Boolean(e.userFlairEnabledInSr),
						userFlairPosition: v(e.userFlairPosition) ? String(e.userFlairPosition) : "",
						userFlairRichtext: Array.isArray(null == e ? void 0 : e.userFlairRichtext) ? e.userFlairRichtext.map(e => String(e)) : [],
						userFlairTemplateId: v(e.userFlairTemplateId) ? String(e.userFlairTemplateId) : void 0,
						userFlairTextColor: v(e.userFlairTextColor) ? String(e.userFlairTextColor) : void 0,
						userFlairText: v(e.userFlairText) ? String(e.userFlairText) : void 0,
						userFlairType: v(e.userFlairType) ? String(e.userFlairType) : void 0,
						userHasFavorited: v(e.userHasFavorited) ? d.a.fromJSON(e.userHasFavorited) : void 0,
						userIsBanned: v(e.userIsBanned) ? Boolean(e.userIsBanned) : void 0,
						userIsContributor: v(e.userIsContributor) ? Boolean(e.userIsContributor) : void 0,
						userIsModerator: v(e.userIsModerator) ? Boolean(e.userIsModerator) : void 0,
						userIsMuted: v(e.userIsMuted) ? Boolean(e.userIsMuted) : void 0,
						userIsSubscriber: v(e.userIsSubscriber) ? Boolean(e.userIsSubscriber) : void 0,
						userSrFlairEnabled: v(e.userSrFlairEnabled) ? Boolean(e.userSrFlairEnabled) : void 0,
						userSrThemeEnabled: v(e.userSrThemeEnabled) ? Boolean(e.userSrThemeEnabled) : void 0,
						videostreamLinksCount: v(e.videostreamLinksCount) ? Number(e.videostreamLinksCount) : 0,
						whitelistStatus: v(e.whitelistStatus) ? String(e.whitelistStatus) : "",
						wikiEnabled: !!v(e.wikiEnabled) && Boolean(e.wikiEnabled),
						wls: v(e.wls) ? Number(e.wls) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.acceptFollowers && (t.acceptFollowers = e.acceptFollowers), void 0 !== e.accountsActiveIsFuzzed && (t.accountsActiveIsFuzzed = e.accountsActiveIsFuzzed), void 0 !== e.accountsActive && (t.accountsActive = e.accountsActive), void 0 !== e.activeUserCount && (t.activeUserCount = e.activeUserCount), void 0 !== e.advertiserCategory && (t.advertiserCategory = e.advertiserCategory), void 0 !== e.allOriginalContent && (t.allOriginalContent = e.allOriginalContent), void 0 !== e.allowDiscovery && (t.allowDiscovery = e.allowDiscovery), void 0 !== e.allowGalleries && (t.allowGalleries = e.allowGalleries), void 0 !== e.allowImages && (t.allowImages = e.allowImages), void 0 !== e.allowPolls && (t.allowPolls = e.allowPolls), void 0 !== e.allowPredictionContributors && (t.allowPredictionContributors = e.allowPredictionContributors), void 0 !== e.allowPredictionsTournament && (t.allowPredictionsTournament = e.allowPredictionsTournament), void 0 !== e.allowPredictions && (t.allowPredictions = e.allowPredictions), void 0 !== e.allowTalks && (t.allowTalks = e.allowTalks), void 0 !== e.allowVideogifs && (t.allowVideogifs = e.allowVideogifs), void 0 !== e.allowVideos && (t.allowVideos = e.allowVideos), void 0 !== e.bannerBackgroundColor && (t.bannerBackgroundColor = e.bannerBackgroundColor), void 0 !== e.bannerBackgroundImage && (t.bannerBackgroundImage = e.bannerBackgroundImage), void 0 !== e.bannerImg && (t.bannerImg = e.bannerImg), void 0 !== e.bannerSize && (t.bannerSize = e.bannerSize ? d.a.toJSON(e.bannerSize) : void 0), void 0 !== e.canAssignLinkFlair && (t.canAssignLinkFlair = e.canAssignLinkFlair), void 0 !== e.canAssignUserFlair && (t.canAssignUserFlair = e.canAssignUserFlair), void 0 !== e.collapseDeletedComments && (t.collapseDeletedComments = e.collapseDeletedComments), void 0 !== e.commentScoreHideMins && (t.commentScoreHideMins = Math.round(e.commentScoreHideMins)), void 0 !== e.communityIcon && (t.communityIcon = e.communityIcon), void 0 !== e.communityReviewed && (t.communityReviewed = e.communityReviewed), void 0 !== e.createdUtc && (t.createdUtc = Math.round(e.createdUtc)), void 0 !== e.created && (t.created = Math.round(e.created)), void 0 !== e.descriptionHtml && (t.descriptionHtml = e.descriptionHtml), void 0 !== e.description && (t.description = e.description), void 0 !== e.disableContributorRequests && (t.disableContributorRequests = e.disableContributorRequests), void 0 !== e.displayNamePrefixed && (t.displayNamePrefixed = e.displayNamePrefixed), void 0 !== e.displayName && (t.displayName = e.displayName), void 0 !== e.emojisCustomSize && (t.emojisCustomSize = e.emojisCustomSize ? d.a.toJSON(e.emojisCustomSize) : void 0), void 0 !== e.emojisEnabled && (t.emojisEnabled = e.emojisEnabled), void 0 !== e.freeFormReports && (t.freeFormReports = e.freeFormReports), void 0 !== e.hasMenuWidget && (t.hasMenuWidget = e.hasMenuWidget), void 0 !== e.headerImg && (t.headerImg = e.headerImg), void 0 !== e.headerSize && (t.headerSize = e.headerSize ? d.a.toJSON(e.headerSize) : void 0), void 0 !== e.headerTitle && (t.headerTitle = e.headerTitle), void 0 !== e.hideAds && (t.hideAds = e.hideAds), void 0 !== e.iconImg && (t.iconImg = e.iconImg), e.iconSize ? t.iconSize = e.iconSize.map(e => Math.round(e)) : t.iconSize = [], void 0 !== e.id && (t.id = e.id), void 0 !== e.isCrosspostableSubreddit && (t.isCrosspostableSubreddit = e.isCrosspostableSubreddit), void 0 !== e.isEnrolledInNewModmail && (t.isEnrolledInNewModmail = e.isEnrolledInNewModmail), void 0 !== e.keyColor && (t.keyColor = e.keyColor), void 0 !== e.lang && (t.lang = e.lang), void 0 !== e.linkFlairEnabled && (t.linkFlairEnabled = e.linkFlairEnabled), void 0 !== e.linkFlairPosition && (t.linkFlairPosition = e.linkFlairPosition), void 0 !== e.mobileBannerImage && (t.mobileBannerImage = e.mobileBannerImage), void 0 !== e.name && (t.name = e.name), void 0 !== e.notificationLevel && (t.notificationLevel = e.notificationLevel ? d.a.toJSON(e.notificationLevel) : void 0), void 0 !== e.originalContentTagEnabled && (t.originalContentTagEnabled = e.originalContentTagEnabled), void 0 !== e.over18 && (t.over18 = e.over18), void 0 !== e.predictionLeaderboardEntryType && (t.predictionLeaderboardEntryType = e.predictionLeaderboardEntryType), void 0 !== e.primaryColor && (t.primaryColor = e.primaryColor), void 0 !== e.publicDescriptionHtml && (t.publicDescriptionHtml = e.publicDescriptionHtml), void 0 !== e.publicDescription && (t.publicDescription = e.publicDescription), void 0 !== e.publicTraffic && (t.publicTraffic = e.publicTraffic), void 0 !== e.quarantine && (t.quarantine = e.quarantine), void 0 !== e.restrictCommenting && (t.restrictCommenting = e.restrictCommenting), void 0 !== e.restrictPosting && (t.restrictPosting = e.restrictPosting), void 0 !== e.shouldArchivePosts && (t.shouldArchivePosts = e.shouldArchivePosts), void 0 !== e.showMediaPreview && (t.showMediaPreview = e.showMediaPreview), void 0 !== e.showMedia && (t.showMedia = e.showMedia), void 0 !== e.spoilersEnabled && (t.spoilersEnabled = e.spoilersEnabled), void 0 !== e.submissionType && (t.submissionType = e.submissionType), void 0 !== e.submitLinkLabel && (t.submitLinkLabel = e.submitLinkLabel), void 0 !== e.submitTextHtml && (t.submitTextHtml = e.submitTextHtml), void 0 !== e.submitTextLabel && (t.submitTextLabel = e.submitTextLabel), void 0 !== e.submitText && (t.submitText = e.submitText), void 0 !== e.subredditType && (t.subredditType = e.subredditType), void 0 !== e.subscribers && (t.subscribers = Math.round(e.subscribers)), void 0 !== e.suggestedCommentSort && (t.suggestedCommentSort = e.suggestedCommentSort), void 0 !== e.title && (t.title = e.title), void 0 !== e.url && (t.url = e.url), void 0 !== e.userCanFlairInSr && (t.userCanFlairInSr = e.userCanFlairInSr), void 0 !== e.userFlairBackgroundColor && (t.userFlairBackgroundColor = e.userFlairBackgroundColor), void 0 !== e.userFlairCssClass && (t.userFlairCssClass = e.userFlairCssClass), void 0 !== e.userFlairEnabledInSr && (t.userFlairEnabledInSr = e.userFlairEnabledInSr), void 0 !== e.userFlairPosition && (t.userFlairPosition = e.userFlairPosition), e.userFlairRichtext ? t.userFlairRichtext = e.userFlairRichtext.map(e => e) : t.userFlairRichtext = [], void 0 !== e.userFlairTemplateId && (t.userFlairTemplateId = e.userFlairTemplateId), void 0 !== e.userFlairTextColor && (t.userFlairTextColor = e.userFlairTextColor), void 0 !== e.userFlairText && (t.userFlairText = e.userFlairText), void 0 !== e.userFlairType && (t.userFlairType = e.userFlairType), void 0 !== e.userHasFavorited && (t.userHasFavorited = e.userHasFavorited ? d.a.toJSON(e.userHasFavorited) : void 0), void 0 !== e.userIsBanned && (t.userIsBanned = e.userIsBanned), void 0 !== e.userIsContributor && (t.userIsContributor = e.userIsContributor), void 0 !== e.userIsModerator && (t.userIsModerator = e.userIsModerator), void 0 !== e.userIsMuted && (t.userIsMuted = e.userIsMuted), void 0 !== e.userIsSubscriber && (t.userIsSubscriber = e.userIsSubscriber), void 0 !== e.userSrFlairEnabled && (t.userSrFlairEnabled = e.userSrFlairEnabled), void 0 !== e.userSrThemeEnabled && (t.userSrThemeEnabled = e.userSrThemeEnabled), void 0 !== e.videostreamLinksCount && (t.videostreamLinksCount = Math.round(e.videostreamLinksCount)), void 0 !== e.whitelistStatus && (t.whitelistStatus = e.whitelistStatus), void 0 !== e.wikiEnabled && (t.wikiEnabled = e.wikiEnabled), void 0 !== e.wls && (t.wls = Math.round(e.wls)), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, l, u, c, p, v, m, f, g, h, y, b, k, S, w, O, T, N, R, $, C, I, E, A, P, x, F, j, M, D, J, _, B, V, L, U, q, W, G, H, z, Y, Z, X, K, Q, ee, te, oe, ie, re, ne, ae, se, de, le, ue, ce, pe, ve, me, fe, ge, he, ye, be, ke, Se, we, Oe, Te, Ne, Re, $e, Ce, Ie, Ee, Ae, Pe, xe, Fe, je, Me, De, Je, _e, Be, Ve;
						const Le = {
							$type: "devvit.actor.reddit.Subreddit",
							acceptFollowers: !1,
							accountsActiveIsFuzzed: !1,
							accountsActive: void 0,
							activeUserCount: void 0,
							advertiserCategory: void 0,
							allOriginalContent: !1,
							allowDiscovery: !1,
							allowGalleries: !1,
							allowImages: !1,
							allowPolls: !1,
							allowPredictionContributors: !1,
							allowPredictionsTournament: !1,
							allowPredictions: !1,
							allowTalks: !1,
							allowVideogifs: !1,
							allowVideos: !1,
							bannerBackgroundColor: "",
							bannerBackgroundImage: "",
							bannerImg: "",
							bannerSize: void 0,
							canAssignLinkFlair: !1,
							canAssignUserFlair: !1,
							collapseDeletedComments: !1,
							commentScoreHideMins: 0,
							communityIcon: "",
							communityReviewed: !1,
							createdUtc: 0,
							created: 0,
							descriptionHtml: "",
							description: "",
							disableContributorRequests: !1,
							displayNamePrefixed: "",
							displayName: "",
							emojisCustomSize: void 0,
							emojisEnabled: !1,
							freeFormReports: !1,
							hasMenuWidget: !1,
							headerImg: void 0,
							headerSize: void 0,
							headerTitle: "",
							hideAds: !1,
							iconImg: "",
							iconSize: [],
							id: "",
							isCrosspostableSubreddit: !1,
							isEnrolledInNewModmail: void 0,
							keyColor: "",
							lang: "",
							linkFlairEnabled: !1,
							linkFlairPosition: "",
							mobileBannerImage: "",
							name: "",
							notificationLevel: void 0,
							originalContentTagEnabled: !1,
							over18: !1,
							predictionLeaderboardEntryType: void 0,
							primaryColor: "",
							publicDescriptionHtml: "",
							publicDescription: "",
							publicTraffic: !1,
							quarantine: !1,
							restrictCommenting: !1,
							restrictPosting: !1,
							shouldArchivePosts: !1,
							showMediaPreview: !1,
							showMedia: !1,
							spoilersEnabled: !1,
							submissionType: "",
							submitLinkLabel: "",
							submitTextHtml: void 0,
							submitTextLabel: void 0,
							submitText: void 0,
							subredditType: "",
							subscribers: 0,
							suggestedCommentSort: "",
							title: "",
							url: "",
							userCanFlairInSr: void 0,
							userFlairBackgroundColor: void 0,
							userFlairCssClass: void 0,
							userFlairEnabledInSr: !1,
							userFlairPosition: "",
							userFlairRichtext: [],
							userFlairTemplateId: void 0,
							userFlairTextColor: void 0,
							userFlairText: void 0,
							userFlairType: void 0,
							userHasFavorited: void 0,
							userIsBanned: void 0,
							userIsContributor: void 0,
							userIsModerator: void 0,
							userIsMuted: void 0,
							userIsSubscriber: void 0,
							userSrFlairEnabled: void 0,
							userSrThemeEnabled: void 0,
							videostreamLinksCount: 0,
							whitelistStatus: "",
							wikiEnabled: !1,
							wls: 0
						};
						return Le.acceptFollowers = null !== (t = e.acceptFollowers) && void 0 !== t && t, Le.accountsActiveIsFuzzed = null !== (o = e.accountsActiveIsFuzzed) && void 0 !== o && o, Le.accountsActive = null !== (i = e.accountsActive) && void 0 !== i ? i : void 0, Le.activeUserCount = null !== (r = e.activeUserCount) && void 0 !== r ? r : void 0, Le.advertiserCategory = null !== (n = e.advertiserCategory) && void 0 !== n ? n : void 0, Le.allOriginalContent = null !== (a = e.allOriginalContent) && void 0 !== a && a, Le.allowDiscovery = null !== (s = e.allowDiscovery) && void 0 !== s && s, Le.allowGalleries = null !== (l = e.allowGalleries) && void 0 !== l && l, Le.allowImages = null !== (u = e.allowImages) && void 0 !== u && u, Le.allowPolls = null !== (c = e.allowPolls) && void 0 !== c && c, Le.allowPredictionContributors = null !== (p = e.allowPredictionContributors) && void 0 !== p && p, Le.allowPredictionsTournament = null !== (v = e.allowPredictionsTournament) && void 0 !== v && v, Le.allowPredictions = null !== (m = e.allowPredictions) && void 0 !== m && m, Le.allowTalks = null !== (f = e.allowTalks) && void 0 !== f && f, Le.allowVideogifs = null !== (g = e.allowVideogifs) && void 0 !== g && g, Le.allowVideos = null !== (h = e.allowVideos) && void 0 !== h && h, Le.bannerBackgroundColor = null !== (y = e.bannerBackgroundColor) && void 0 !== y ? y : "", Le.bannerBackgroundImage = null !== (b = e.bannerBackgroundImage) && void 0 !== b ? b : "", Le.bannerImg = null !== (k = e.bannerImg) && void 0 !== k ? k : "", Le.bannerSize = void 0 !== e.bannerSize && null !== e.bannerSize ? d.a.fromPartial(e.bannerSize) : void 0, Le.canAssignLinkFlair = null !== (S = e.canAssignLinkFlair) && void 0 !== S && S, Le.canAssignUserFlair = null !== (w = e.canAssignUserFlair) && void 0 !== w && w, Le.collapseDeletedComments = null !== (O = e.collapseDeletedComments) && void 0 !== O && O, Le.commentScoreHideMins = null !== (T = e.commentScoreHideMins) && void 0 !== T ? T : 0, Le.communityIcon = null !== (N = e.communityIcon) && void 0 !== N ? N : "", Le.communityReviewed = null !== (R = e.communityReviewed) && void 0 !== R && R, Le.createdUtc = null !== ($ = e.createdUtc) && void 0 !== $ ? $ : 0, Le.created = null !== (C = e.created) && void 0 !== C ? C : 0, Le.descriptionHtml = null !== (I = e.descriptionHtml) && void 0 !== I ? I : "", Le.description = null !== (E = e.description) && void 0 !== E ? E : "", Le.disableContributorRequests = null !== (A = e.disableContributorRequests) && void 0 !== A && A, Le.displayNamePrefixed = null !== (P = e.displayNamePrefixed) && void 0 !== P ? P : "", Le.displayName = null !== (x = e.displayName) && void 0 !== x ? x : "", Le.emojisCustomSize = void 0 !== e.emojisCustomSize && null !== e.emojisCustomSize ? d.a.fromPartial(e.emojisCustomSize) : void 0, Le.emojisEnabled = null !== (F = e.emojisEnabled) && void 0 !== F && F, Le.freeFormReports = null !== (j = e.freeFormReports) && void 0 !== j && j, Le.hasMenuWidget = null !== (M = e.hasMenuWidget) && void 0 !== M && M, Le.headerImg = null !== (D = e.headerImg) && void 0 !== D ? D : void 0, Le.headerSize = void 0 !== e.headerSize && null !== e.headerSize ? d.a.fromPartial(e.headerSize) : void 0, Le.headerTitle = null !== (J = e.headerTitle) && void 0 !== J ? J : "", Le.hideAds = null !== (_ = e.hideAds) && void 0 !== _ && _, Le.iconImg = null !== (B = e.iconImg) && void 0 !== B ? B : "", Le.iconSize = (null === (V = e.iconSize) || void 0 === V ? void 0 : V.map(e => e)) || [], Le.id = null !== (L = e.id) && void 0 !== L ? L : "", Le.isCrosspostableSubreddit = null !== (U = e.isCrosspostableSubreddit) && void 0 !== U && U, Le.isEnrolledInNewModmail = null !== (q = e.isEnrolledInNewModmail) && void 0 !== q ? q : void 0, Le.keyColor = null !== (W = e.keyColor) && void 0 !== W ? W : "", Le.lang = null !== (G = e.lang) && void 0 !== G ? G : "", Le.linkFlairEnabled = null !== (H = e.linkFlairEnabled) && void 0 !== H && H, Le.linkFlairPosition = null !== (z = e.linkFlairPosition) && void 0 !== z ? z : "", Le.mobileBannerImage = null !== (Y = e.mobileBannerImage) && void 0 !== Y ? Y : "", Le.name = null !== (Z = e.name) && void 0 !== Z ? Z : "", Le.notificationLevel = void 0 !== e.notificationLevel && null !== e.notificationLevel ? d.a.fromPartial(e.notificationLevel) : void 0, Le.originalContentTagEnabled = null !== (X = e.originalContentTagEnabled) && void 0 !== X && X, Le.over18 = null !== (K = e.over18) && void 0 !== K && K, Le.predictionLeaderboardEntryType = null !== (Q = e.predictionLeaderboardEntryType) && void 0 !== Q ? Q : void 0, Le.primaryColor = null !== (ee = e.primaryColor) && void 0 !== ee ? ee : "", Le.publicDescriptionHtml = null !== (te = e.publicDescriptionHtml) && void 0 !== te ? te : "", Le.publicDescription = null !== (oe = e.publicDescription) && void 0 !== oe ? oe : "", Le.publicTraffic = null !== (ie = e.publicTraffic) && void 0 !== ie && ie, Le.quarantine = null !== (re = e.quarantine) && void 0 !== re && re, Le.restrictCommenting = null !== (ne = e.restrictCommenting) && void 0 !== ne && ne, Le.restrictPosting = null !== (ae = e.restrictPosting) && void 0 !== ae && ae, Le.shouldArchivePosts = null !== (se = e.shouldArchivePosts) && void 0 !== se && se, Le.showMediaPreview = null !== (de = e.showMediaPreview) && void 0 !== de && de, Le.showMedia = null !== (le = e.showMedia) && void 0 !== le && le, Le.spoilersEnabled = null !== (ue = e.spoilersEnabled) && void 0 !== ue && ue, Le.submissionType = null !== (ce = e.submissionType) && void 0 !== ce ? ce : "", Le.submitLinkLabel = null !== (pe = e.submitLinkLabel) && void 0 !== pe ? pe : "", Le.submitTextHtml = null !== (ve = e.submitTextHtml) && void 0 !== ve ? ve : void 0, Le.submitTextLabel = null !== (me = e.submitTextLabel) && void 0 !== me ? me : void 0, Le.submitText = null !== (fe = e.submitText) && void 0 !== fe ? fe : void 0, Le.subredditType = null !== (ge = e.subredditType) && void 0 !== ge ? ge : "", Le.subscribers = null !== (he = e.subscribers) && void 0 !== he ? he : 0, Le.suggestedCommentSort = null !== (ye = e.suggestedCommentSort) && void 0 !== ye ? ye : "", Le.title = null !== (be = e.title) && void 0 !== be ? be : "", Le.url = null !== (ke = e.url) && void 0 !== ke ? ke : "", Le.userCanFlairInSr = null !== (Se = e.userCanFlairInSr) && void 0 !== Se ? Se : void 0, Le.userFlairBackgroundColor = null !== (we = e.userFlairBackgroundColor) && void 0 !== we ? we : void 0, Le.userFlairCssClass = null !== (Oe = e.userFlairCssClass) && void 0 !== Oe ? Oe : void 0, Le.userFlairEnabledInSr = null !== (Te = e.userFlairEnabledInSr) && void 0 !== Te && Te, Le.userFlairPosition = null !== (Ne = e.userFlairPosition) && void 0 !== Ne ? Ne : "", Le.userFlairRichtext = (null === (Re = e.userFlairRichtext) || void 0 === Re ? void 0 : Re.map(e => e)) || [], Le.userFlairTemplateId = null !== ($e = e.userFlairTemplateId) && void 0 !== $e ? $e : void 0, Le.userFlairTextColor = null !== (Ce = e.userFlairTextColor) && void 0 !== Ce ? Ce : void 0, Le.userFlairText = null !== (Ie = e.userFlairText) && void 0 !== Ie ? Ie : void 0, Le.userFlairType = null !== (Ee = e.userFlairType) && void 0 !== Ee ? Ee : void 0, Le.userHasFavorited = void 0 !== e.userHasFavorited && null !== e.userHasFavorited ? d.a.fromPartial(e.userHasFavorited) : void 0, Le.userIsBanned = null !== (Ae = e.userIsBanned) && void 0 !== Ae ? Ae : void 0, Le.userIsContributor = null !== (Pe = e.userIsContributor) && void 0 !== Pe ? Pe : void 0, Le.userIsModerator = null !== (xe = e.userIsModerator) && void 0 !== xe ? xe : void 0, Le.userIsMuted = null !== (Fe = e.userIsMuted) && void 0 !== Fe ? Fe : void 0, Le.userIsSubscriber = null !== (je = e.userIsSubscriber) && void 0 !== je ? je : void 0, Le.userSrFlairEnabled = null !== (Me = e.userSrFlairEnabled) && void 0 !== Me ? Me : void 0, Le.userSrThemeEnabled = null !== (De = e.userSrThemeEnabled) && void 0 !== De ? De : void 0, Le.videostreamLinksCount = null !== (Je = e.videostreamLinksCount) && void 0 !== Je ? Je : 0, Le.whitelistStatus = null !== (_e = e.whitelistStatus) && void 0 !== _e ? _e : "", Le.wikiEnabled = null !== (Be = e.wikiEnabled) && void 0 !== Be && Be, Le.wls = null !== (Ve = e.wls) && void 0 !== Ve ? Ve : 0, Le
					}
				};
				i.a.set(u.$type, u);
				var c = (() => {
					if (void 0 !== c) return c;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function p(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new c.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function v(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/gl/glrenderer.js": function(e, t, o) {
			"use strict";
			(function(e) {
				var t = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					i = o("./node_modules/long/src/long.js"),
					r = o.n(i),
					n = o("./node_modules/protobufjs/minimal.js"),
					a = o.n(n),
					s = o("./node_modules/@devvit/protos/types/devvit/plugin/gl/methods.js"),
					d = o("./node_modules/@devvit/protos/types/devvit/plugin/gl/methodtype.js"),
					l = o("./node_modules/@devvit/protos/types/google/protobuf/empty.js"),
					u = o("./node_modules/@devvit/protos/types/google/protobuf/struct.js");
				const c = {
					$type: "devvit.plugin.gl.CommandArgument",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.a.Writer.create();
						return void 0 !== e.null && t.uint32(8).bool(e.null), void 0 !== e.scalar && u.c.encode(u.c.wrap(e.scalar), t.uint32(18).fork()).ldelim(), void 0 !== e.blob && t.uint32(26).bytes(e.blob), void 0 !== e.referenceId && t.uint32(32).uint64(e.referenceId), t
					},
					decode(e, t) {
						const o = e instanceof a.a.Reader ? e : new a.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.gl.CommandArgument",
							null: void 0,
							scalar: void 0,
							blob: void 0,
							referenceId: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.null = o.bool();
									break;
								case 2:
									r.scalar = u.c.unwrap(u.c.decode(o, o.uint32()));
									break;
								case 3:
									r.blob = o.bytes();
									break;
								case 4:
									r.referenceId = y(o.uint64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						null: b(e.null) ? Boolean(e.null) : void 0,
						scalar: b(null == e ? void 0 : e.scalar) ? e.scalar : void 0,
						blob: b(e.blob) ? g(e.blob) : void 0,
						referenceId: b(e.referenceId) ? Number(e.referenceId) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.null && (t.null = e.null), void 0 !== e.scalar && (t.scalar = e.scalar), void 0 !== e.blob && (t.blob = void 0 !== e.blob ? function(e) {
							const t = [];
							for (const o of e) t.push(String.fromCharCode(o));
							return h(t.join(""))
						}(e.blob) : void 0), void 0 !== e.referenceId && (t.referenceId = Math.round(e.referenceId)), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "devvit.plugin.gl.CommandArgument",
							null: void 0,
							scalar: void 0,
							blob: void 0,
							referenceId: void 0
						};
						return n.null = null !== (t = e.null) && void 0 !== t ? t : void 0, n.scalar = null !== (o = e.scalar) && void 0 !== o ? o : void 0, n.blob = null !== (i = e.blob) && void 0 !== i ? i : void 0, n.referenceId = null !== (r = e.referenceId) && void 0 !== r ? r : void 0, n
					}
				};
				t.a.set(c.$type, c);
				const p = {
					$type: "devvit.plugin.gl.GLCommand",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.a.Writer.create();
						0 !== e.method && t.uint32(8).int32(e.method), 0 !== e.type && t.uint32(16).int32(e.type);
						for (const o of e.args) c.encode(o, t.uint32(26).fork()).ldelim();
						return 0 !== e.referenceId && t.uint32(32).uint64(e.referenceId), t
					},
					decode(e, t) {
						const o = e instanceof a.a.Reader ? e : new a.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.gl.GLCommand",
							method: 0,
							type: 0,
							args: [],
							referenceId: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.method = o.int32();
									break;
								case 2:
									r.type = o.int32();
									break;
								case 3:
									r.args.push(c.decode(o, o.uint32()));
									break;
								case 4:
									r.referenceId = y(o.uint64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: p.$type,
						method: b(e.method) ? Object(s.a)(e.method) : 0,
						type: b(e.type) ? Object(d.a)(e.type) : 0,
						args: Array.isArray(null == e ? void 0 : e.args) ? e.args.map(e => c.fromJSON(e)) : [],
						referenceId: b(e.referenceId) ? Number(e.referenceId) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.method && (t.method = Object(s.b)(e.method)), void 0 !== e.type && (t.type = Object(d.b)(e.type)), e.args ? t.args = e.args.map(e => e ? c.toJSON(e) : void 0) : t.args = [], void 0 !== e.referenceId && (t.referenceId = Math.round(e.referenceId)), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "devvit.plugin.gl.GLCommand",
							method: 0,
							type: 0,
							args: [],
							referenceId: 0
						};
						return n.method = null !== (t = e.method) && void 0 !== t ? t : 0, n.type = null !== (o = e.type) && void 0 !== o ? o : 0, n.args = (null === (i = e.args) || void 0 === i ? void 0 : i.map(e => c.fromPartial(e))) || [], n.referenceId = null !== (r = e.referenceId) && void 0 !== r ? r : 0, n
					}
				};
				t.a.set(p.$type, p);
				const v = {
					$type: "devvit.plugin.gl.ExecuteMessage",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.a.Writer.create();
						for (const o of e.commands) p.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof a.a.Reader ? e : new a.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.gl.ExecuteMessage",
							commands: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.commands.push(p.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: v.$type,
						commands: Array.isArray(null == e ? void 0 : e.commands) ? e.commands.map(e => p.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.commands ? t.commands = e.commands.map(e => e ? p.toJSON(e) : void 0) : t.commands = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.gl.ExecuteMessage",
							commands: []
						};
						return o.commands = (null === (t = e.commands) || void 0 === t ? void 0 : t.map(e => p.fromPartial(e))) || [], o
					}
				};
				t.a.set(v.$type, v);
				l.a;
				var m = (() => {
					if (void 0 !== m) return m;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();
				const f = m.atob || (e => m.Buffer.from(e, "base64").toString("binary"));

				function g(e) {
					const t = f(e),
						o = new Uint8Array(t.length);
					for (let i = 0; i < t.length; ++i) o[i] = t.charCodeAt(i);
					return o
				}
				const h = m.btoa || (e => m.Buffer.from(e, "binary").toString("base64"));

				function y(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new m.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function b(e) {
					return null != e
				}
				a.a.util.Long !== r.a && (a.a.util.Long = r.a, a.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/gl/methods.js": function(e, t, o) {
			"use strict";
			o.d(t, "a", (function() {
				return d
			})), o.d(t, "b", (function() {
				return l
			}));
			var i, r = o("./node_modules/long/src/long.js"),
				n = o.n(r),
				a = o("./node_modules/protobufjs/minimal.js"),
				s = o.n(a);

			function d(e) {
				switch (e) {
					case 0:
					case "activeTexture":
						return i.activeTexture;
					case 1:
					case "attachShader":
						return i.attachShader;
					case 2:
					case "bindAttribLocation":
						return i.bindAttribLocation;
					case 3:
					case "bindBuffer":
						return i.bindBuffer;
					case 4:
					case "bindFramebuffer":
						return i.bindFramebuffer;
					case 5:
					case "bindRenderbuffer":
						return i.bindRenderbuffer;
					case 6:
					case "bindTexture":
						return i.bindTexture;
					case 7:
					case "blendColor":
						return i.blendColor;
					case 8:
					case "blendEquation":
						return i.blendEquation;
					case 9:
					case "blendEquationSeparate":
						return i.blendEquationSeparate;
					case 10:
					case "blendFunc":
						return i.blendFunc;
					case 11:
					case "blendFuncSeparate":
						return i.blendFuncSeparate;
					case 12:
					case "bufferData":
						return i.bufferData;
					case 13:
					case "bufferSubData":
						return i.bufferSubData;
					case 14:
					case "checkFramebufferStatus":
						return i.checkFramebufferStatus;
					case 15:
					case "clear":
						return i.clear;
					case 16:
					case "clearColor":
						return i.clearColor;
					case 17:
					case "clearDepth":
						return i.clearDepth;
					case 18:
					case "clearStencil":
						return i.clearStencil;
					case 19:
					case "colorMask":
						return i.colorMask;
					case 20:
					case "compileShader":
						return i.compileShader;
					case 21:
					case "copyTexImage2D":
						return i.copyTexImage2D;
					case 22:
					case "copyTexSubImage2D":
						return i.copyTexSubImage2D;
					case 23:
					case "createBuffer":
						return i.createBuffer;
					case 24:
					case "createFramebuffer":
						return i.createFramebuffer;
					case 25:
					case "createProgram":
						return i.createProgram;
					case 26:
					case "createRenderbuffer":
						return i.createRenderbuffer;
					case 27:
					case "createShader":
						return i.createShader;
					case 28:
					case "createTexture":
						return i.createTexture;
					case 29:
					case "cullFace":
						return i.cullFace;
					case 30:
					case "deleteBuffer":
						return i.deleteBuffer;
					case 31:
					case "deleteFramebuffer":
						return i.deleteFramebuffer;
					case 32:
					case "deleteProgram":
						return i.deleteProgram;
					case 33:
					case "deleteRenderbuffer":
						return i.deleteRenderbuffer;
					case 34:
					case "deleteShader":
						return i.deleteShader;
					case 35:
					case "deleteTexture":
						return i.deleteTexture;
					case 36:
					case "depthFunc":
						return i.depthFunc;
					case 37:
					case "depthMask":
						return i.depthMask;
					case 38:
					case "depthRange":
						return i.depthRange;
					case 39:
					case "detachShader":
						return i.detachShader;
					case 40:
					case "disable":
						return i.disable;
					case 41:
					case "disableVertexAttribArray":
						return i.disableVertexAttribArray;
					case 42:
					case "drawArrays":
						return i.drawArrays;
					case 43:
					case "drawElements":
						return i.drawElements;
					case 44:
					case "enable":
						return i.enable;
					case 45:
					case "enableVertexAttribArray":
						return i.enableVertexAttribArray;
					case 46:
					case "finish":
						return i.finish;
					case 47:
					case "flush":
						return i.flush;
					case 48:
					case "framebufferRenderbuffer":
						return i.framebufferRenderbuffer;
					case 49:
					case "framebufferTexture2D":
						return i.framebufferTexture2D;
					case 50:
					case "frontFace":
						return i.frontFace;
					case 51:
					case "generateMipmap":
						return i.generateMipmap;
					case 52:
					case "getActiveAttrib":
						return i.getActiveAttrib;
					case 53:
					case "getActiveUniform":
						return i.getActiveUniform;
					case 54:
					case "getAttachedShaders":
						return i.getAttachedShaders;
					case 55:
					case "getAttribLocation":
						return i.getAttribLocation;
					case 56:
					case "getBufferParameter":
						return i.getBufferParameter;
					case 57:
					case "getContextAttributes":
						return i.getContextAttributes;
					case 58:
					case "getError":
						return i.getError;
					case 59:
					case "getExtension":
						return i.getExtension;
					case 60:
					case "getFramebufferAttachmentParameter":
						return i.getFramebufferAttachmentParameter;
					case 61:
					case "getParameter":
						return i.getParameter;
					case 62:
					case "getProgramInfoLog":
						return i.getProgramInfoLog;
					case 63:
					case "getProgramParameter":
						return i.getProgramParameter;
					case 64:
					case "getRenderbufferParameter":
						return i.getRenderbufferParameter;
					case 65:
					case "getShaderInfoLog":
						return i.getShaderInfoLog;
					case 66:
					case "getShaderParameter":
						return i.getShaderParameter;
					case 67:
					case "getShaderPrecisionFormat":
						return i.getShaderPrecisionFormat;
					case 68:
					case "getShaderSource":
						return i.getShaderSource;
					case 69:
					case "getSupportedExtensions":
						return i.getSupportedExtensions;
					case 70:
					case "getTexParameter":
						return i.getTexParameter;
					case 71:
					case "getUniform":
						return i.getUniform;
					case 72:
					case "getUniformLocation":
						return i.getUniformLocation;
					case 73:
					case "getVertexAttrib":
						return i.getVertexAttrib;
					case 74:
					case "getVertexAttribOffset":
						return i.getVertexAttribOffset;
					case 75:
					case "hint":
						return i.hint;
					case 76:
					case "isBuffer":
						return i.isBuffer;
					case 77:
					case "isContextLost":
						return i.isContextLost;
					case 78:
					case "isEnabled":
						return i.isEnabled;
					case 79:
					case "isFramebuffer":
						return i.isFramebuffer;
					case 80:
					case "isProgram":
						return i.isProgram;
					case 81:
					case "isRenderbuffer":
						return i.isRenderbuffer;
					case 82:
					case "isShader":
						return i.isShader;
					case 83:
					case "isTexture":
						return i.isTexture;
					case 84:
					case "lineWidth":
						return i.lineWidth;
					case 85:
					case "linkProgram":
						return i.linkProgram;
					case 86:
					case "polygonOffset":
						return i.polygonOffset;
					case 87:
					case "renderbufferStorage":
						return i.renderbufferStorage;
					case 88:
					case "sampleCoverage":
						return i.sampleCoverage;
					case 89:
					case "scissor":
						return i.scissor;
					case 90:
					case "shaderSource":
						return i.shaderSource;
					case 91:
					case "stencilFunc":
						return i.stencilFunc;
					case 92:
					case "stencilFuncSeparate":
						return i.stencilFuncSeparate;
					case 93:
					case "stencilMask":
						return i.stencilMask;
					case 94:
					case "stencilMaskSeparate":
						return i.stencilMaskSeparate;
					case 95:
					case "stencilOp":
						return i.stencilOp;
					case 96:
					case "stencilOpSeparate":
						return i.stencilOpSeparate;
					case 97:
					case "texParameterf":
						return i.texParameterf;
					case 98:
					case "texParameteri":
						return i.texParameteri;
					case 99:
					case "uniform1f":
						return i.uniform1f;
					case 100:
					case "uniform1i":
						return i.uniform1i;
					case 101:
					case "uniform2f":
						return i.uniform2f;
					case 102:
					case "uniform2i":
						return i.uniform2i;
					case 103:
					case "uniform3f":
						return i.uniform3f;
					case 104:
					case "uniform3i":
						return i.uniform3i;
					case 105:
					case "uniform4f":
						return i.uniform4f;
					case 106:
					case "uniform4i":
						return i.uniform4i;
					case 107:
					case "useProgram":
						return i.useProgram;
					case 108:
					case "validateProgram":
						return i.validateProgram;
					case 109:
					case "vertexAttrib1f":
						return i.vertexAttrib1f;
					case 110:
					case "vertexAttrib2f":
						return i.vertexAttrib2f;
					case 111:
					case "vertexAttrib3f":
						return i.vertexAttrib3f;
					case 112:
					case "vertexAttrib4f":
						return i.vertexAttrib4f;
					case 113:
					case "vertexAttribPointer":
						return i.vertexAttribPointer;
					case 114:
					case "viewport":
						return i.viewport;
					case -1:
					case "UNRECOGNIZED":
					default:
						return i.UNRECOGNIZED
				}
			}

			function l(e) {
				switch (e) {
					case i.activeTexture:
						return "activeTexture";
					case i.attachShader:
						return "attachShader";
					case i.bindAttribLocation:
						return "bindAttribLocation";
					case i.bindBuffer:
						return "bindBuffer";
					case i.bindFramebuffer:
						return "bindFramebuffer";
					case i.bindRenderbuffer:
						return "bindRenderbuffer";
					case i.bindTexture:
						return "bindTexture";
					case i.blendColor:
						return "blendColor";
					case i.blendEquation:
						return "blendEquation";
					case i.blendEquationSeparate:
						return "blendEquationSeparate";
					case i.blendFunc:
						return "blendFunc";
					case i.blendFuncSeparate:
						return "blendFuncSeparate";
					case i.bufferData:
						return "bufferData";
					case i.bufferSubData:
						return "bufferSubData";
					case i.checkFramebufferStatus:
						return "checkFramebufferStatus";
					case i.clear:
						return "clear";
					case i.clearColor:
						return "clearColor";
					case i.clearDepth:
						return "clearDepth";
					case i.clearStencil:
						return "clearStencil";
					case i.colorMask:
						return "colorMask";
					case i.compileShader:
						return "compileShader";
					case i.copyTexImage2D:
						return "copyTexImage2D";
					case i.copyTexSubImage2D:
						return "copyTexSubImage2D";
					case i.createBuffer:
						return "createBuffer";
					case i.createFramebuffer:
						return "createFramebuffer";
					case i.createProgram:
						return "createProgram";
					case i.createRenderbuffer:
						return "createRenderbuffer";
					case i.createShader:
						return "createShader";
					case i.createTexture:
						return "createTexture";
					case i.cullFace:
						return "cullFace";
					case i.deleteBuffer:
						return "deleteBuffer";
					case i.deleteFramebuffer:
						return "deleteFramebuffer";
					case i.deleteProgram:
						return "deleteProgram";
					case i.deleteRenderbuffer:
						return "deleteRenderbuffer";
					case i.deleteShader:
						return "deleteShader";
					case i.deleteTexture:
						return "deleteTexture";
					case i.depthFunc:
						return "depthFunc";
					case i.depthMask:
						return "depthMask";
					case i.depthRange:
						return "depthRange";
					case i.detachShader:
						return "detachShader";
					case i.disable:
						return "disable";
					case i.disableVertexAttribArray:
						return "disableVertexAttribArray";
					case i.drawArrays:
						return "drawArrays";
					case i.drawElements:
						return "drawElements";
					case i.enable:
						return "enable";
					case i.enableVertexAttribArray:
						return "enableVertexAttribArray";
					case i.finish:
						return "finish";
					case i.flush:
						return "flush";
					case i.framebufferRenderbuffer:
						return "framebufferRenderbuffer";
					case i.framebufferTexture2D:
						return "framebufferTexture2D";
					case i.frontFace:
						return "frontFace";
					case i.generateMipmap:
						return "generateMipmap";
					case i.getActiveAttrib:
						return "getActiveAttrib";
					case i.getActiveUniform:
						return "getActiveUniform";
					case i.getAttachedShaders:
						return "getAttachedShaders";
					case i.getAttribLocation:
						return "getAttribLocation";
					case i.getBufferParameter:
						return "getBufferParameter";
					case i.getContextAttributes:
						return "getContextAttributes";
					case i.getError:
						return "getError";
					case i.getExtension:
						return "getExtension";
					case i.getFramebufferAttachmentParameter:
						return "getFramebufferAttachmentParameter";
					case i.getParameter:
						return "getParameter";
					case i.getProgramInfoLog:
						return "getProgramInfoLog";
					case i.getProgramParameter:
						return "getProgramParameter";
					case i.getRenderbufferParameter:
						return "getRenderbufferParameter";
					case i.getShaderInfoLog:
						return "getShaderInfoLog";
					case i.getShaderParameter:
						return "getShaderParameter";
					case i.getShaderPrecisionFormat:
						return "getShaderPrecisionFormat";
					case i.getShaderSource:
						return "getShaderSource";
					case i.getSupportedExtensions:
						return "getSupportedExtensions";
					case i.getTexParameter:
						return "getTexParameter";
					case i.getUniform:
						return "getUniform";
					case i.getUniformLocation:
						return "getUniformLocation";
					case i.getVertexAttrib:
						return "getVertexAttrib";
					case i.getVertexAttribOffset:
						return "getVertexAttribOffset";
					case i.hint:
						return "hint";
					case i.isBuffer:
						return "isBuffer";
					case i.isContextLost:
						return "isContextLost";
					case i.isEnabled:
						return "isEnabled";
					case i.isFramebuffer:
						return "isFramebuffer";
					case i.isProgram:
						return "isProgram";
					case i.isRenderbuffer:
						return "isRenderbuffer";
					case i.isShader:
						return "isShader";
					case i.isTexture:
						return "isTexture";
					case i.lineWidth:
						return "lineWidth";
					case i.linkProgram:
						return "linkProgram";
					case i.polygonOffset:
						return "polygonOffset";
					case i.renderbufferStorage:
						return "renderbufferStorage";
					case i.sampleCoverage:
						return "sampleCoverage";
					case i.scissor:
						return "scissor";
					case i.shaderSource:
						return "shaderSource";
					case i.stencilFunc:
						return "stencilFunc";
					case i.stencilFuncSeparate:
						return "stencilFuncSeparate";
					case i.stencilMask:
						return "stencilMask";
					case i.stencilMaskSeparate:
						return "stencilMaskSeparate";
					case i.stencilOp:
						return "stencilOp";
					case i.stencilOpSeparate:
						return "stencilOpSeparate";
					case i.texParameterf:
						return "texParameterf";
					case i.texParameteri:
						return "texParameteri";
					case i.uniform1f:
						return "uniform1f";
					case i.uniform1i:
						return "uniform1i";
					case i.uniform2f:
						return "uniform2f";
					case i.uniform2i:
						return "uniform2i";
					case i.uniform3f:
						return "uniform3f";
					case i.uniform3i:
						return "uniform3i";
					case i.uniform4f:
						return "uniform4f";
					case i.uniform4i:
						return "uniform4i";
					case i.useProgram:
						return "useProgram";
					case i.validateProgram:
						return "validateProgram";
					case i.vertexAttrib1f:
						return "vertexAttrib1f";
					case i.vertexAttrib2f:
						return "vertexAttrib2f";
					case i.vertexAttrib3f:
						return "vertexAttrib3f";
					case i.vertexAttrib4f:
						return "vertexAttrib4f";
					case i.vertexAttribPointer:
						return "vertexAttribPointer";
					case i.viewport:
						return "viewport";
					default:
						return "UNKNOWN"
				}
			}! function(e) {
				e[e.activeTexture = 0] = "activeTexture", e[e.attachShader = 1] = "attachShader", e[e.bindAttribLocation = 2] = "bindAttribLocation", e[e.bindBuffer = 3] = "bindBuffer", e[e.bindFramebuffer = 4] = "bindFramebuffer", e[e.bindRenderbuffer = 5] = "bindRenderbuffer", e[e.bindTexture = 6] = "bindTexture", e[e.blendColor = 7] = "blendColor", e[e.blendEquation = 8] = "blendEquation", e[e.blendEquationSeparate = 9] = "blendEquationSeparate", e[e.blendFunc = 10] = "blendFunc", e[e.blendFuncSeparate = 11] = "blendFuncSeparate", e[e.bufferData = 12] = "bufferData", e[e.bufferSubData = 13] = "bufferSubData", e[e.checkFramebufferStatus = 14] = "checkFramebufferStatus", e[e.clear = 15] = "clear", e[e.clearColor = 16] = "clearColor", e[e.clearDepth = 17] = "clearDepth", e[e.clearStencil = 18] = "clearStencil", e[e.colorMask = 19] = "colorMask", e[e.compileShader = 20] = "compileShader", e[e.copyTexImage2D = 21] = "copyTexImage2D", e[e.copyTexSubImage2D = 22] = "copyTexSubImage2D", e[e.createBuffer = 23] = "createBuffer", e[e.createFramebuffer = 24] = "createFramebuffer", e[e.createProgram = 25] = "createProgram", e[e.createRenderbuffer = 26] = "createRenderbuffer", e[e.createShader = 27] = "createShader", e[e.createTexture = 28] = "createTexture", e[e.cullFace = 29] = "cullFace", e[e.deleteBuffer = 30] = "deleteBuffer", e[e.deleteFramebuffer = 31] = "deleteFramebuffer", e[e.deleteProgram = 32] = "deleteProgram", e[e.deleteRenderbuffer = 33] = "deleteRenderbuffer", e[e.deleteShader = 34] = "deleteShader", e[e.deleteTexture = 35] = "deleteTexture", e[e.depthFunc = 36] = "depthFunc", e[e.depthMask = 37] = "depthMask", e[e.depthRange = 38] = "depthRange", e[e.detachShader = 39] = "detachShader", e[e.disable = 40] = "disable", e[e.disableVertexAttribArray = 41] = "disableVertexAttribArray", e[e.drawArrays = 42] = "drawArrays", e[e.drawElements = 43] = "drawElements", e[e.enable = 44] = "enable", e[e.enableVertexAttribArray = 45] = "enableVertexAttribArray", e[e.finish = 46] = "finish", e[e.flush = 47] = "flush", e[e.framebufferRenderbuffer = 48] = "framebufferRenderbuffer", e[e.framebufferTexture2D = 49] = "framebufferTexture2D", e[e.frontFace = 50] = "frontFace", e[e.generateMipmap = 51] = "generateMipmap", e[e.getActiveAttrib = 52] = "getActiveAttrib", e[e.getActiveUniform = 53] = "getActiveUniform", e[e.getAttachedShaders = 54] = "getAttachedShaders", e[e.getAttribLocation = 55] = "getAttribLocation", e[e.getBufferParameter = 56] = "getBufferParameter", e[e.getContextAttributes = 57] = "getContextAttributes", e[e.getError = 58] = "getError", e[e.getExtension = 59] = "getExtension", e[e.getFramebufferAttachmentParameter = 60] = "getFramebufferAttachmentParameter", e[e.getParameter = 61] = "getParameter", e[e.getProgramInfoLog = 62] = "getProgramInfoLog", e[e.getProgramParameter = 63] = "getProgramParameter", e[e.getRenderbufferParameter = 64] = "getRenderbufferParameter", e[e.getShaderInfoLog = 65] = "getShaderInfoLog", e[e.getShaderParameter = 66] = "getShaderParameter", e[e.getShaderPrecisionFormat = 67] = "getShaderPrecisionFormat", e[e.getShaderSource = 68] = "getShaderSource", e[e.getSupportedExtensions = 69] = "getSupportedExtensions", e[e.getTexParameter = 70] = "getTexParameter", e[e.getUniform = 71] = "getUniform", e[e.getUniformLocation = 72] = "getUniformLocation", e[e.getVertexAttrib = 73] = "getVertexAttrib", e[e.getVertexAttribOffset = 74] = "getVertexAttribOffset", e[e.hint = 75] = "hint", e[e.isBuffer = 76] = "isBuffer", e[e.isContextLost = 77] = "isContextLost", e[e.isEnabled = 78] = "isEnabled", e[e.isFramebuffer = 79] = "isFramebuffer", e[e.isProgram = 80] = "isProgram", e[e.isRenderbuffer = 81] = "isRenderbuffer", e[e.isShader = 82] = "isShader", e[e.isTexture = 83] = "isTexture", e[e.lineWidth = 84] = "lineWidth", e[e.linkProgram = 85] = "linkProgram", e[e.polygonOffset = 86] = "polygonOffset", e[e.renderbufferStorage = 87] = "renderbufferStorage", e[e.sampleCoverage = 88] = "sampleCoverage", e[e.scissor = 89] = "scissor", e[e.shaderSource = 90] = "shaderSource", e[e.stencilFunc = 91] = "stencilFunc", e[e.stencilFuncSeparate = 92] = "stencilFuncSeparate", e[e.stencilMask = 93] = "stencilMask", e[e.stencilMaskSeparate = 94] = "stencilMaskSeparate", e[e.stencilOp = 95] = "stencilOp", e[e.stencilOpSeparate = 96] = "stencilOpSeparate", e[e.texParameterf = 97] = "texParameterf", e[e.texParameteri = 98] = "texParameteri", e[e.uniform1f = 99] = "uniform1f", e[e.uniform1i = 100] = "uniform1i", e[e.uniform2f = 101] = "uniform2f", e[e.uniform2i = 102] = "uniform2i", e[e.uniform3f = 103] = "uniform3f", e[e.uniform3i = 104] = "uniform3i", e[e.uniform4f = 105] = "uniform4f", e[e.uniform4i = 106] = "uniform4i", e[e.useProgram = 107] = "useProgram", e[e.validateProgram = 108] = "validateProgram", e[e.vertexAttrib1f = 109] = "vertexAttrib1f", e[e.vertexAttrib2f = 110] = "vertexAttrib2f", e[e.vertexAttrib3f = 111] = "vertexAttrib3f", e[e.vertexAttrib4f = 112] = "vertexAttrib4f", e[e.vertexAttribPointer = 113] = "vertexAttribPointer", e[e.viewport = 114] = "viewport", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(i || (i = {})), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/gl/methodtype.js": function(e, t, o) {
			"use strict";
			o.d(t, "a", (function() {
				return d
			})), o.d(t, "b", (function() {
				return l
			}));
			var i, r = o("./node_modules/long/src/long.js"),
				n = o.n(r),
				a = o("./node_modules/protobufjs/minimal.js"),
				s = o.n(a);

			function d(e) {
				switch (e) {
					case 0:
					case "ASYNC":
						return i.ASYNC;
					case 1:
					case "CONSTRUCTOR":
						return i.CONSTRUCTOR;
					case 2:
					case "DESTRUCTOR":
						return i.DESTRUCTOR;
					case 3:
					case "SYNC":
						return i.SYNC;
					case -1:
					case "UNRECOGNIZED":
					default:
						return i.UNRECOGNIZED
				}
			}

			function l(e) {
				switch (e) {
					case i.ASYNC:
						return "ASYNC";
					case i.CONSTRUCTOR:
						return "CONSTRUCTOR";
					case i.DESTRUCTOR:
						return "DESTRUCTOR";
					case i.SYNC:
						return "SYNC";
					default:
						return "UNKNOWN"
				}
			}! function(e) {
				e[e.ASYNC = 0] = "ASYNC", e[e.CONSTRUCTOR = 1] = "CONSTRUCTOR", e[e.DESTRUCTOR = 2] = "DESTRUCTOR", e[e.SYNC = 3] = "SYNC", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(i || (i = {})), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/http/http.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return v
				})), o.d(t, "b", (function() {
					return f
				}));
				o("./node_modules/core-js/modules/web.dom.iterable.js");
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a);
				const d = {
					$type: "devvit.plugin.http.FetchRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.url && t.uint32(10).string(e.url), void 0 !== e.data && u.encode(e.data, t.uint32(18).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.http.FetchRequest",
							url: "",
							data: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.url = o.string();
									break;
								case 2:
									r.data = u.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: d.$type,
						url: w(e.url) ? String(e.url) : "",
						data: w(e.data) ? u.fromJSON(e.data) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.url && (t.url = e.url), void 0 !== e.data && (t.data = e.data ? u.toJSON(e.data) : void 0), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.http.FetchRequest",
							url: "",
							data: void 0
						};
						return o.url = null !== (t = e.url) && void 0 !== t ? t : "", o.data = void 0 !== e.data && null !== e.data ? u.fromPartial(e.data) : void 0, o
					}
				};

				function l() {
					return {
						$type: "devvit.plugin.http.RequestData",
						method: "",
						headers: {},
						body: new Uint8Array
					}
				}
				i.a.set(d.$type, d);
				const u = {
					$type: "devvit.plugin.http.RequestData",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.method && t.uint32(10).string(e.method), Object.entries(e.headers).forEach(e => {
							let [o, i] = e;
							c.encode({
								$type: "devvit.plugin.http.RequestData.HeadersEntry",
								key: o,
								value: i
							}, t.uint32(18).fork()).ldelim()
						}), 0 !== e.body.length && t.uint32(26).bytes(e.body), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = l();
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.method = o.string();
									break;
								case 2:
									const t = c.decode(o, o.uint32());
									void 0 !== t.value && (r.headers[t.key] = t.value);
									break;
								case 3:
									r.body = o.bytes();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						method: w(e.method) ? String(e.method) : "",
						headers: S(e.headers) ? Object.entries(e.headers).reduce((e, t) => {
							let [o, i] = t;
							return e[o] = String(i), e
						}, {}) : {},
						body: w(e.body) ? y(e.body) : new Uint8Array
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.method && (t.method = e.method), t.headers = {}, e.headers && Object.entries(e.headers).forEach(e => {
							let [o, i] = e;
							t.headers[o] = i
						}), void 0 !== e.body && (t.body = k(void 0 !== e.body ? e.body : new Uint8Array)), t
					},
					fromPartial(e) {
						var t, o, i;
						const r = l();
						return r.method = null !== (t = e.method) && void 0 !== t ? t : "", r.headers = Object.entries(null !== (o = e.headers) && void 0 !== o ? o : {}).reduce((e, t) => {
							let [o, i] = t;
							return void 0 !== i && (e[o] = String(i)), e
						}, {}), r.body = null !== (i = e.body) && void 0 !== i ? i : new Uint8Array, r
					}
				};
				i.a.set(u.$type, u);
				const c = {
					$type: "devvit.plugin.http.RequestData.HeadersEntry",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.key && t.uint32(10).string(e.key), "" !== e.value && t.uint32(18).string(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.http.RequestData.HeadersEntry",
							key: "",
							value: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.key = o.string();
									break;
								case 2:
									r.value = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						key: w(e.key) ? String(e.key) : "",
						value: w(e.value) ? String(e.value) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.http.RequestData.HeadersEntry",
							key: "",
							value: ""
						};
						return i.key = null !== (t = e.key) && void 0 !== t ? t : "", i.value = null !== (o = e.value) && void 0 !== o ? o : "", i
					}
				};

				function p() {
					return {
						$type: "devvit.plugin.http.FetchResponse",
						url: "",
						body: new Uint8Array,
						status: 0,
						headers: {}
					}
				}
				i.a.set(c.$type, c);
				const v = {
					$type: "devvit.plugin.http.FetchResponse",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.url && t.uint32(10).string(e.url), 0 !== e.body.length && t.uint32(18).bytes(e.body), 0 !== e.status && t.uint32(24).int32(e.status), Object.entries(e.headers).forEach(e => {
							let [o, i] = e;
							m.encode({
								$type: "devvit.plugin.http.FetchResponse.HeadersEntry",
								key: o,
								value: i
							}, t.uint32(34).fork()).ldelim()
						}), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = p();
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.url = o.string();
									break;
								case 2:
									r.body = o.bytes();
									break;
								case 3:
									r.status = o.int32();
									break;
								case 4:
									const t = m.decode(o, o.uint32());
									void 0 !== t.value && (r.headers[t.key] = t.value);
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: v.$type,
						url: w(e.url) ? String(e.url) : "",
						body: w(e.body) ? y(e.body) : new Uint8Array,
						status: w(e.status) ? Number(e.status) : 0,
						headers: S(e.headers) ? Object.entries(e.headers).reduce((e, t) => {
							let [o, i] = t;
							return e[o] = String(i), e
						}, {}) : {}
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.url && (t.url = e.url), void 0 !== e.body && (t.body = k(void 0 !== e.body ? e.body : new Uint8Array)), void 0 !== e.status && (t.status = Math.round(e.status)), t.headers = {}, e.headers && Object.entries(e.headers).forEach(e => {
							let [o, i] = e;
							t.headers[o] = i
						}), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = p();
						return n.url = null !== (t = e.url) && void 0 !== t ? t : "", n.body = null !== (o = e.body) && void 0 !== o ? o : new Uint8Array, n.status = null !== (i = e.status) && void 0 !== i ? i : 0, n.headers = Object.entries(null !== (r = e.headers) && void 0 !== r ? r : {}).reduce((e, t) => {
							let [o, i] = t;
							return void 0 !== i && (e[o] = String(i)), e
						}, {}), n
					}
				};
				i.a.set(v.$type, v);
				const m = {
					$type: "devvit.plugin.http.FetchResponse.HeadersEntry",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.key && t.uint32(10).string(e.key), "" !== e.value && t.uint32(18).string(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.http.FetchResponse.HeadersEntry",
							key: "",
							value: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.key = o.string();
									break;
								case 2:
									r.value = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: m.$type,
						key: w(e.key) ? String(e.key) : "",
						value: w(e.value) ? String(e.value) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.http.FetchResponse.HeadersEntry",
							key: "",
							value: ""
						};
						return i.key = null !== (t = e.key) && void 0 !== t ? t : "", i.value = null !== (o = e.value) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(m.$type, m);
				const f = {
					name: "HTTP",
					fullName: "devvit.plugin.http.HTTP",
					methods: {
						fetch: {
							name: "Fetch",
							requestType: d,
							requestStream: !1,
							responseType: v,
							responseStream: !1,
							options: {}
						}
					}
				};
				var g = (() => {
					if (void 0 !== g) return g;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();
				const h = g.atob || (e => g.Buffer.from(e, "base64").toString("binary"));

				function y(e) {
					const t = h(e),
						o = new Uint8Array(t.length);
					for (let i = 0; i < t.length; ++i) o[i] = t.charCodeAt(i);
					return o
				}
				const b = g.btoa || (e => g.Buffer.from(e, "binary").toString("base64"));

				function k(e) {
					const t = [];
					for (const o of e) t.push(String.fromCharCode(o));
					return b(t.join(""))
				}

				function S(e) {
					return "object" == typeof e && null !== e
				}

				function w(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/redditapi/common/common_msg.js": function(e, t, o) {
			"use strict";
			o.d(t, "c", (function() {
				return c
			})), o.d(t, "e", (function() {
				return v
			})), o.d(t, "b", (function() {
				return m
			})), o.d(t, "d", (function() {
				return h
			})), o.d(t, "a", (function() {
				return b
			}));
			var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
				r = o("./node_modules/long/src/long.js"),
				n = o.n(r),
				a = o("./node_modules/protobufjs/minimal.js"),
				s = o.n(a),
				d = o("./node_modules/@devvit/protos/types/google/protobuf/any.js"),
				l = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js"),
				u = o("./node_modules/@devvit/protos/types/google/protobuf/struct.js");
			const c = {
				$type: "devvit.plugin.redditapi.common.Listing",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.kind && t.uint32(10).string(e.kind), void 0 !== e.data && p.encode(e.data, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.Listing",
						kind: "",
						data: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.kind = o.string();
								break;
							case 2:
								r.data = p.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: c.$type,
					kind: S(e.kind) ? String(e.kind) : "",
					data: S(e.data) ? p.fromJSON(e.data) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.kind && (t.kind = e.kind), void 0 !== e.data && (t.data = e.data ? p.toJSON(e.data) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.common.Listing",
						kind: "",
						data: void 0
					};
					return o.kind = null !== (t = e.kind) && void 0 !== t ? t : "", o.data = void 0 !== e.data && null !== e.data ? p.fromPartial(e.data) : void 0, o
				}
			};
			i.a.set(c.$type, c);
			const p = {
				$type: "devvit.plugin.redditapi.common.Listing.ListingData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					void 0 !== e.after && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.after
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.before && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.before
					}, t.uint32(18).fork()).ldelim();
					for (const o of e.children) v.encode(o, t.uint32(26).fork()).ldelim();
					return void 0 !== e.dist && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.dist
					}, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.Listing.ListingData",
						after: void 0,
						before: void 0,
						children: [],
						dist: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.after = l.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.before = l.d.decode(o, o.uint32()).value;
								break;
							case 3:
								r.children.push(v.decode(o, o.uint32()));
								break;
							case 4:
								r.dist = l.c.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: p.$type,
					after: S(e.after) ? String(e.after) : void 0,
					before: S(e.before) ? String(e.before) : void 0,
					children: Array.isArray(null == e ? void 0 : e.children) ? e.children.map(e => v.fromJSON(e)) : [],
					dist: S(e.dist) ? Number(e.dist) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), e.children ? t.children = e.children.map(e => e ? v.toJSON(e) : void 0) : t.children = [], void 0 !== e.dist && (t.dist = e.dist), t
				},
				fromPartial(e) {
					var t, o, i, r;
					const n = {
						$type: "devvit.plugin.redditapi.common.Listing.ListingData",
						after: void 0,
						before: void 0,
						children: [],
						dist: void 0
					};
					return n.after = null !== (t = e.after) && void 0 !== t ? t : void 0, n.before = null !== (o = e.before) && void 0 !== o ? o : void 0, n.children = (null === (i = e.children) || void 0 === i ? void 0 : i.map(e => v.fromPartial(e))) || [], n.dist = null !== (r = e.dist) && void 0 !== r ? r : void 0, n
				}
			};
			i.a.set(p.$type, p);
			const v = {
				$type: "devvit.plugin.redditapi.common.WrappedRedditObject",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return "" !== e.kind && t.uint32(10).string(e.kind), void 0 !== e.data && h.encode(e.data, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.WrappedRedditObject",
						kind: "",
						data: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.kind = o.string();
								break;
							case 2:
								r.data = h.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: v.$type,
					kind: S(e.kind) ? String(e.kind) : "",
					data: S(e.data) ? h.fromJSON(e.data) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.kind && (t.kind = e.kind), void 0 !== e.data && (t.data = e.data ? h.toJSON(e.data) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.common.WrappedRedditObject",
						kind: "",
						data: void 0
					};
					return o.kind = null !== (t = e.kind) && void 0 !== t ? t : "", o.data = void 0 !== e.data && null !== e.data ? h.fromPartial(e.data) : void 0, o
				}
			};
			i.a.set(v.$type, v);
			const m = {
				$type: "devvit.plugin.redditapi.common.JsonRedditObjects",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.json && f.encode(e.json, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.JsonRedditObjects",
						json: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 4:
								r.json = f.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: m.$type,
					json: S(e.json) ? f.fromJSON(e.json) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.json && (t.json = e.json ? f.toJSON(e.json) : void 0), t
				},
				fromPartial(e) {
					const t = {
						$type: "devvit.plugin.redditapi.common.JsonRedditObjects",
						json: void 0
					};
					return t.json = void 0 !== e.json && null !== e.json ? f.fromPartial(e.json) : void 0, t
				}
			};
			i.a.set(m.$type, m);
			const f = {
				$type: "devvit.plugin.redditapi.common.JsonRedditObjects.JsonType",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.errors) d.a.encode(o, t.uint32(10).fork()).ldelim();
					return void 0 !== e.data && g.encode(e.data, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.JsonRedditObjects.JsonType",
						errors: [],
						data: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.errors.push(d.a.decode(o, o.uint32()));
								break;
							case 2:
								r.data = g.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: f.$type,
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => d.a.fromJSON(e)) : [],
					data: S(e.data) ? g.fromJSON(e.data) : void 0
				}),
				toJSON(e) {
					const t = {};
					return e.errors ? t.errors = e.errors.map(e => e ? d.a.toJSON(e) : void 0) : t.errors = [], void 0 !== e.data && (t.data = e.data ? g.toJSON(e.data) : void 0), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.common.JsonRedditObjects.JsonType",
						errors: [],
						data: void 0
					};
					return o.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => d.a.fromPartial(e))) || [], o.data = void 0 !== e.data && null !== e.data ? g.fromPartial(e.data) : void 0, o
				}
			};
			i.a.set(f.$type, f);
			const g = {
				$type: "devvit.plugin.redditapi.common.JsonRedditObjects.JsonType.JsonData",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.things) v.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.JsonRedditObjects.JsonType.JsonData",
						things: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.things.push(v.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: g.$type,
					things: Array.isArray(null == e ? void 0 : e.things) ? e.things.map(e => v.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.things ? t.things = e.things.map(e => e ? v.toJSON(e) : void 0) : t.things = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.common.JsonRedditObjects.JsonType.JsonData",
						things: []
					};
					return o.things = (null === (t = e.things) || void 0 === t ? void 0 : t.map(e => v.fromPartial(e))) || [], o
				}
			};
			i.a.set(g.$type, g);
			const h = {
				$type: "devvit.plugin.redditapi.common.RedditObject",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.allAwardings) d.a.encode(o, t.uint32(10).fork()).ldelim();
					void 0 !== e.approved && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.approved
					}, t.uint32(18).fork()).ldelim(), void 0 !== e.approvedAtUtc && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.approvedAtUtc
					}, t.uint32(26).fork()).ldelim(), void 0 !== e.approvedBy && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.approvedBy
					}, t.uint32(34).fork()).ldelim(), void 0 !== e.archived && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.archived
					}, t.uint32(42).fork()).ldelim(), void 0 !== e.associatedAward && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.associatedAward
					}, t.uint32(50).fork()).ldelim(), void 0 !== e.author && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.author
					}, t.uint32(58).fork()).ldelim(), void 0 !== e.authorFlairBackgroundColor && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFlairBackgroundColor
					}, t.uint32(66).fork()).ldelim(), void 0 !== e.authorFlairCssClass && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFlairCssClass
					}, t.uint32(74).fork()).ldelim();
					for (const o of e.authorFlairRichtext) y.encode(o, t.uint32(82).fork()).ldelim();
					void 0 !== e.authorFlairTemplateId && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFlairTemplateId
					}, t.uint32(90).fork()).ldelim(), void 0 !== e.authorFlairText && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFlairText
					}, t.uint32(98).fork()).ldelim(), void 0 !== e.authorFlairTextColor && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFlairTextColor
					}, t.uint32(106).fork()).ldelim(), void 0 !== e.authorFlairType && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFlairType
					}, t.uint32(114).fork()).ldelim(), void 0 !== e.authorFullname && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.authorFullname
					}, t.uint32(122).fork()).ldelim(), void 0 !== e.authorIsBlocked && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.authorIsBlocked
					}, t.uint32(130).fork()).ldelim(), void 0 !== e.authorPatreonFlair && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.authorPatreonFlair
					}, t.uint32(138).fork()).ldelim(), void 0 !== e.authorPremium && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.authorPremium
					}, t.uint32(146).fork()).ldelim();
					for (const o of e.awarders) l.d.encode({
						$type: "google.protobuf.StringValue",
						value: o
					}, t.uint32(154).fork()).ldelim();
					void 0 !== e.bannedAtUtc && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.bannedAtUtc
					}, t.uint32(162).fork()).ldelim(), void 0 !== e.bannedBy && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.bannedBy
					}, t.uint32(170).fork()).ldelim(), void 0 !== e.body && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.body
					}, t.uint32(178).fork()).ldelim(), void 0 !== e.bodyHtml && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.bodyHtml
					}, t.uint32(186).fork()).ldelim(), void 0 !== e.canGild && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.canGild
					}, t.uint32(194).fork()).ldelim(), void 0 !== e.canModPost && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.canModPost
					}, t.uint32(202).fork()).ldelim(), void 0 !== e.collapsed && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.collapsed
					}, t.uint32(210).fork()).ldelim(), void 0 !== e.collapsedBecauseCrowdControl && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.collapsedBecauseCrowdControl
					}, t.uint32(218).fork()).ldelim(), void 0 !== e.collapsedReason && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.collapsedReason
					}, t.uint32(226).fork()).ldelim(), void 0 !== e.collapsedReasonCode && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.collapsedReasonCode
					}, t.uint32(234).fork()).ldelim(), void 0 !== e.commentType && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.commentType
					}, t.uint32(242).fork()).ldelim(), void 0 !== e.controversiality && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.controversiality
					}, t.uint32(250).fork()).ldelim(), void 0 !== e.created && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.created
					}, t.uint32(258).fork()).ldelim(), void 0 !== e.createdUtc && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.createdUtc
					}, t.uint32(266).fork()).ldelim(), void 0 !== e.distinguished && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.distinguished
					}, t.uint32(274).fork()).ldelim(), void 0 !== e.downs && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.downs
					}, t.uint32(282).fork()).ldelim(), void 0 !== e.edited && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.edited
					}, t.uint32(290).fork()).ldelim(), void 0 !== e.gilded && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.gilded
					}, t.uint32(298).fork()).ldelim(), void 0 !== e.gildings && d.a.encode(e.gildings, t.uint32(306).fork()).ldelim(), void 0 !== e.id && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.id
					}, t.uint32(314).fork()).ldelim(), void 0 !== e.ignoreReports && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.ignoreReports
					}, t.uint32(322).fork()).ldelim(), void 0 !== e.isSubmitter && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.isSubmitter
					}, t.uint32(330).fork()).ldelim(), void 0 !== e.likes && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.likes
					}, t.uint32(338).fork()).ldelim(), void 0 !== e.linkId && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.linkId
					}, t.uint32(346).fork()).ldelim(), void 0 !== e.locked && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.locked
					}, t.uint32(354).fork()).ldelim(), void 0 !== e.modNote && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.modNote
					}, t.uint32(362).fork()).ldelim(), void 0 !== e.modReasonBy && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.modReasonBy
					}, t.uint32(370).fork()).ldelim(), void 0 !== e.modReasonTitle && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.modReasonTitle
					}, t.uint32(378).fork()).ldelim();
					for (const o of e.modReports) d.a.encode(o, t.uint32(386).fork()).ldelim();
					void 0 !== e.name && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.name
					}, t.uint32(394).fork()).ldelim(), void 0 !== e.noFollow && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.noFollow
					}, t.uint32(402).fork()).ldelim(), void 0 !== e.numReports && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.numReports
					}, t.uint32(418).fork()).ldelim(), void 0 !== e.parentId && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.parentId
					}, t.uint32(426).fork()).ldelim(), void 0 !== e.permalink && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.permalink
					}, t.uint32(434).fork()).ldelim(), void 0 !== e.removalReason && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.removalReason
					}, t.uint32(442).fork()).ldelim(), void 0 !== e.removed && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.removed
					}, t.uint32(450).fork()).ldelim(), void 0 !== e.replies && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.replies
					}, t.uint32(458).fork()).ldelim(), void 0 !== e.reportReasons && u.a.encode(u.a.wrap(e.reportReasons), t.uint32(466).fork()).ldelim(), void 0 !== e.rteMode && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.rteMode
					}, t.uint32(474).fork()).ldelim(), void 0 !== e.saved && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.saved
					}, t.uint32(482).fork()).ldelim(), void 0 !== e.score && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.score
					}, t.uint32(490).fork()).ldelim(), void 0 !== e.scoreHidden && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.scoreHidden
					}, t.uint32(498).fork()).ldelim(), void 0 !== e.sendReplies && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.sendReplies
					}, t.uint32(506).fork()).ldelim(), void 0 !== e.spam && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.spam
					}, t.uint32(514).fork()).ldelim(), void 0 !== e.stickied && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.stickied
					}, t.uint32(522).fork()).ldelim(), void 0 !== e.subreddit && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.subreddit
					}, t.uint32(530).fork()).ldelim(), void 0 !== e.subredditId && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.subredditId
					}, t.uint32(538).fork()).ldelim(), void 0 !== e.subredditNamePrefixed && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.subredditNamePrefixed
					}, t.uint32(546).fork()).ldelim(), void 0 !== e.subredditType && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.subredditType
					}, t.uint32(554).fork()).ldelim(), void 0 !== e.topAwardedType && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.topAwardedType
					}, t.uint32(562).fork()).ldelim(), void 0 !== e.totalAwardsReceived && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.totalAwardsReceived
					}, t.uint32(570).fork()).ldelim();
					for (const o of e.treatmentTags) d.a.encode(o, t.uint32(578).fork()).ldelim();
					void 0 !== e.unrepliableReason && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.unrepliableReason
					}, t.uint32(586).fork()).ldelim(), void 0 !== e.ups && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.ups
					}, t.uint32(594).fork()).ldelim();
					for (const o of e.userReports) d.a.encode(o, t.uint32(602).fork()).ldelim();
					return void 0 !== e.depth && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.depth
					}, t.uint32(610).fork()).ldelim(), void 0 !== e.linkTitle && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.linkTitle
					}, t.uint32(618).fork()).ldelim(), void 0 !== e.linkAuthor && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.linkAuthor
					}, t.uint32(626).fork()).ldelim(), void 0 !== e.numComments && l.c.encode({
						$type: "google.protobuf.Int64Value",
						value: e.numComments
					}, t.uint32(634).fork()).ldelim(), void 0 !== e.over18 && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.over18
					}, t.uint32(642).fork()).ldelim(), void 0 !== e.linkPermalink && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.linkPermalink
					}, t.uint32(650).fork()).ldelim(), void 0 !== e.quarantine && l.a.encode({
						$type: "google.protobuf.BoolValue",
						value: e.quarantine
					}, t.uint32(658).fork()).ldelim(), void 0 !== e.linkUrl && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.linkUrl
					}, t.uint32(666).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.RedditObject",
						allAwardings: [],
						approved: void 0,
						approvedAtUtc: void 0,
						approvedBy: void 0,
						archived: void 0,
						associatedAward: void 0,
						author: void 0,
						authorFlairBackgroundColor: void 0,
						authorFlairCssClass: void 0,
						authorFlairRichtext: [],
						authorFlairTemplateId: void 0,
						authorFlairText: void 0,
						authorFlairTextColor: void 0,
						authorFlairType: void 0,
						authorFullname: void 0,
						authorIsBlocked: void 0,
						authorPatreonFlair: void 0,
						authorPremium: void 0,
						awarders: [],
						bannedAtUtc: void 0,
						bannedBy: void 0,
						body: void 0,
						bodyHtml: void 0,
						canGild: void 0,
						canModPost: void 0,
						collapsed: void 0,
						collapsedBecauseCrowdControl: void 0,
						collapsedReason: void 0,
						collapsedReasonCode: void 0,
						commentType: void 0,
						controversiality: void 0,
						created: void 0,
						createdUtc: void 0,
						distinguished: void 0,
						downs: void 0,
						edited: void 0,
						gilded: void 0,
						gildings: void 0,
						id: void 0,
						ignoreReports: void 0,
						isSubmitter: void 0,
						likes: void 0,
						linkId: void 0,
						locked: void 0,
						modNote: void 0,
						modReasonBy: void 0,
						modReasonTitle: void 0,
						modReports: [],
						name: void 0,
						noFollow: void 0,
						numReports: void 0,
						parentId: void 0,
						permalink: void 0,
						removalReason: void 0,
						removed: void 0,
						replies: void 0,
						reportReasons: void 0,
						rteMode: void 0,
						saved: void 0,
						score: void 0,
						scoreHidden: void 0,
						sendReplies: void 0,
						spam: void 0,
						stickied: void 0,
						subreddit: void 0,
						subredditId: void 0,
						subredditNamePrefixed: void 0,
						subredditType: void 0,
						topAwardedType: void 0,
						totalAwardsReceived: void 0,
						treatmentTags: [],
						unrepliableReason: void 0,
						ups: void 0,
						userReports: [],
						depth: void 0,
						linkTitle: void 0,
						linkAuthor: void 0,
						numComments: void 0,
						over18: void 0,
						linkPermalink: void 0,
						quarantine: void 0,
						linkUrl: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.allAwardings.push(d.a.decode(o, o.uint32()));
								break;
							case 2:
								r.approved = l.a.decode(o, o.uint32()).value;
								break;
							case 3:
								r.approvedAtUtc = l.c.decode(o, o.uint32()).value;
								break;
							case 4:
								r.approvedBy = l.d.decode(o, o.uint32()).value;
								break;
							case 5:
								r.archived = l.a.decode(o, o.uint32()).value;
								break;
							case 6:
								r.associatedAward = l.d.decode(o, o.uint32()).value;
								break;
							case 7:
								r.author = l.d.decode(o, o.uint32()).value;
								break;
							case 8:
								r.authorFlairBackgroundColor = l.d.decode(o, o.uint32()).value;
								break;
							case 9:
								r.authorFlairCssClass = l.d.decode(o, o.uint32()).value;
								break;
							case 10:
								r.authorFlairRichtext.push(y.decode(o, o.uint32()));
								break;
							case 11:
								r.authorFlairTemplateId = l.d.decode(o, o.uint32()).value;
								break;
							case 12:
								r.authorFlairText = l.d.decode(o, o.uint32()).value;
								break;
							case 13:
								r.authorFlairTextColor = l.d.decode(o, o.uint32()).value;
								break;
							case 14:
								r.authorFlairType = l.d.decode(o, o.uint32()).value;
								break;
							case 15:
								r.authorFullname = l.d.decode(o, o.uint32()).value;
								break;
							case 16:
								r.authorIsBlocked = l.a.decode(o, o.uint32()).value;
								break;
							case 17:
								r.authorPatreonFlair = l.a.decode(o, o.uint32()).value;
								break;
							case 18:
								r.authorPremium = l.a.decode(o, o.uint32()).value;
								break;
							case 19:
								r.awarders.push(l.d.decode(o, o.uint32()).value);
								break;
							case 20:
								r.bannedAtUtc = l.c.decode(o, o.uint32()).value;
								break;
							case 21:
								r.bannedBy = l.d.decode(o, o.uint32()).value;
								break;
							case 22:
								r.body = l.d.decode(o, o.uint32()).value;
								break;
							case 23:
								r.bodyHtml = l.d.decode(o, o.uint32()).value;
								break;
							case 24:
								r.canGild = l.a.decode(o, o.uint32()).value;
								break;
							case 25:
								r.canModPost = l.a.decode(o, o.uint32()).value;
								break;
							case 26:
								r.collapsed = l.a.decode(o, o.uint32()).value;
								break;
							case 27:
								r.collapsedBecauseCrowdControl = l.d.decode(o, o.uint32()).value;
								break;
							case 28:
								r.collapsedReason = l.d.decode(o, o.uint32()).value;
								break;
							case 29:
								r.collapsedReasonCode = l.d.decode(o, o.uint32()).value;
								break;
							case 30:
								r.commentType = l.d.decode(o, o.uint32()).value;
								break;
							case 31:
								r.controversiality = l.c.decode(o, o.uint32()).value;
								break;
							case 32:
								r.created = l.c.decode(o, o.uint32()).value;
								break;
							case 33:
								r.createdUtc = l.c.decode(o, o.uint32()).value;
								break;
							case 34:
								r.distinguished = l.d.decode(o, o.uint32()).value;
								break;
							case 35:
								r.downs = l.c.decode(o, o.uint32()).value;
								break;
							case 36:
								r.edited = l.a.decode(o, o.uint32()).value;
								break;
							case 37:
								r.gilded = l.c.decode(o, o.uint32()).value;
								break;
							case 38:
								r.gildings = d.a.decode(o, o.uint32());
								break;
							case 39:
								r.id = l.d.decode(o, o.uint32()).value;
								break;
							case 40:
								r.ignoreReports = l.a.decode(o, o.uint32()).value;
								break;
							case 41:
								r.isSubmitter = l.a.decode(o, o.uint32()).value;
								break;
							case 42:
								r.likes = l.a.decode(o, o.uint32()).value;
								break;
							case 43:
								r.linkId = l.d.decode(o, o.uint32()).value;
								break;
							case 44:
								r.locked = l.a.decode(o, o.uint32()).value;
								break;
							case 45:
								r.modNote = l.d.decode(o, o.uint32()).value;
								break;
							case 46:
								r.modReasonBy = l.d.decode(o, o.uint32()).value;
								break;
							case 47:
								r.modReasonTitle = l.d.decode(o, o.uint32()).value;
								break;
							case 48:
								r.modReports.push(d.a.decode(o, o.uint32()));
								break;
							case 49:
								r.name = l.d.decode(o, o.uint32()).value;
								break;
							case 50:
								r.noFollow = l.a.decode(o, o.uint32()).value;
								break;
							case 52:
								r.numReports = l.c.decode(o, o.uint32()).value;
								break;
							case 53:
								r.parentId = l.d.decode(o, o.uint32()).value;
								break;
							case 54:
								r.permalink = l.d.decode(o, o.uint32()).value;
								break;
							case 55:
								r.removalReason = l.d.decode(o, o.uint32()).value;
								break;
							case 56:
								r.removed = l.a.decode(o, o.uint32()).value;
								break;
							case 57:
								r.replies = l.d.decode(o, o.uint32()).value;
								break;
							case 58:
								r.reportReasons = u.a.unwrap(u.a.decode(o, o.uint32()));
								break;
							case 59:
								r.rteMode = l.d.decode(o, o.uint32()).value;
								break;
							case 60:
								r.saved = l.a.decode(o, o.uint32()).value;
								break;
							case 61:
								r.score = l.c.decode(o, o.uint32()).value;
								break;
							case 62:
								r.scoreHidden = l.a.decode(o, o.uint32()).value;
								break;
							case 63:
								r.sendReplies = l.a.decode(o, o.uint32()).value;
								break;
							case 64:
								r.spam = l.a.decode(o, o.uint32()).value;
								break;
							case 65:
								r.stickied = l.a.decode(o, o.uint32()).value;
								break;
							case 66:
								r.subreddit = l.d.decode(o, o.uint32()).value;
								break;
							case 67:
								r.subredditId = l.d.decode(o, o.uint32()).value;
								break;
							case 68:
								r.subredditNamePrefixed = l.d.decode(o, o.uint32()).value;
								break;
							case 69:
								r.subredditType = l.d.decode(o, o.uint32()).value;
								break;
							case 70:
								r.topAwardedType = l.d.decode(o, o.uint32()).value;
								break;
							case 71:
								r.totalAwardsReceived = l.c.decode(o, o.uint32()).value;
								break;
							case 72:
								r.treatmentTags.push(d.a.decode(o, o.uint32()));
								break;
							case 73:
								r.unrepliableReason = l.d.decode(o, o.uint32()).value;
								break;
							case 74:
								r.ups = l.c.decode(o, o.uint32()).value;
								break;
							case 75:
								r.userReports.push(d.a.decode(o, o.uint32()));
								break;
							case 76:
								r.depth = l.c.decode(o, o.uint32()).value;
								break;
							case 77:
								r.linkTitle = l.d.decode(o, o.uint32()).value;
								break;
							case 78:
								r.linkAuthor = l.d.decode(o, o.uint32()).value;
								break;
							case 79:
								r.numComments = l.c.decode(o, o.uint32()).value;
								break;
							case 80:
								r.over18 = l.a.decode(o, o.uint32()).value;
								break;
							case 81:
								r.linkPermalink = l.d.decode(o, o.uint32()).value;
								break;
							case 82:
								r.quarantine = l.a.decode(o, o.uint32()).value;
								break;
							case 83:
								r.linkUrl = l.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: h.$type,
					allAwardings: Array.isArray(null == e ? void 0 : e.allAwardings) ? e.allAwardings.map(e => d.a.fromJSON(e)) : [],
					approved: S(e.approved) ? Boolean(e.approved) : void 0,
					approvedAtUtc: S(e.approvedAtUtc) ? Number(e.approvedAtUtc) : void 0,
					approvedBy: S(e.approvedBy) ? String(e.approvedBy) : void 0,
					archived: S(e.archived) ? Boolean(e.archived) : void 0,
					associatedAward: S(e.associatedAward) ? String(e.associatedAward) : void 0,
					author: S(e.author) ? String(e.author) : void 0,
					authorFlairBackgroundColor: S(e.authorFlairBackgroundColor) ? String(e.authorFlairBackgroundColor) : void 0,
					authorFlairCssClass: S(e.authorFlairCssClass) ? String(e.authorFlairCssClass) : void 0,
					authorFlairRichtext: Array.isArray(null == e ? void 0 : e.authorFlairRichtext) ? e.authorFlairRichtext.map(e => y.fromJSON(e)) : [],
					authorFlairTemplateId: S(e.authorFlairTemplateId) ? String(e.authorFlairTemplateId) : void 0,
					authorFlairText: S(e.authorFlairText) ? String(e.authorFlairText) : void 0,
					authorFlairTextColor: S(e.authorFlairTextColor) ? String(e.authorFlairTextColor) : void 0,
					authorFlairType: S(e.authorFlairType) ? String(e.authorFlairType) : void 0,
					authorFullname: S(e.authorFullname) ? String(e.authorFullname) : void 0,
					authorIsBlocked: S(e.authorIsBlocked) ? Boolean(e.authorIsBlocked) : void 0,
					authorPatreonFlair: S(e.authorPatreonFlair) ? Boolean(e.authorPatreonFlair) : void 0,
					authorPremium: S(e.authorPremium) ? Boolean(e.authorPremium) : void 0,
					awarders: Array.isArray(null == e ? void 0 : e.awarders) ? e.awarders.map(e => String(e)) : [],
					bannedAtUtc: S(e.bannedAtUtc) ? Number(e.bannedAtUtc) : void 0,
					bannedBy: S(e.bannedBy) ? String(e.bannedBy) : void 0,
					body: S(e.body) ? String(e.body) : void 0,
					bodyHtml: S(e.bodyHtml) ? String(e.bodyHtml) : void 0,
					canGild: S(e.canGild) ? Boolean(e.canGild) : void 0,
					canModPost: S(e.canModPost) ? Boolean(e.canModPost) : void 0,
					collapsed: S(e.collapsed) ? Boolean(e.collapsed) : void 0,
					collapsedBecauseCrowdControl: S(e.collapsedBecauseCrowdControl) ? String(e.collapsedBecauseCrowdControl) : void 0,
					collapsedReason: S(e.collapsedReason) ? String(e.collapsedReason) : void 0,
					collapsedReasonCode: S(e.collapsedReasonCode) ? String(e.collapsedReasonCode) : void 0,
					commentType: S(e.commentType) ? String(e.commentType) : void 0,
					controversiality: S(e.controversiality) ? Number(e.controversiality) : void 0,
					created: S(e.created) ? Number(e.created) : void 0,
					createdUtc: S(e.createdUtc) ? Number(e.createdUtc) : void 0,
					distinguished: S(e.distinguished) ? String(e.distinguished) : void 0,
					downs: S(e.downs) ? Number(e.downs) : void 0,
					edited: S(e.edited) ? Boolean(e.edited) : void 0,
					gilded: S(e.gilded) ? Number(e.gilded) : void 0,
					gildings: S(e.gildings) ? d.a.fromJSON(e.gildings) : void 0,
					id: S(e.id) ? String(e.id) : void 0,
					ignoreReports: S(e.ignoreReports) ? Boolean(e.ignoreReports) : void 0,
					isSubmitter: S(e.isSubmitter) ? Boolean(e.isSubmitter) : void 0,
					likes: S(e.likes) ? Boolean(e.likes) : void 0,
					linkId: S(e.linkId) ? String(e.linkId) : void 0,
					locked: S(e.locked) ? Boolean(e.locked) : void 0,
					modNote: S(e.modNote) ? String(e.modNote) : void 0,
					modReasonBy: S(e.modReasonBy) ? String(e.modReasonBy) : void 0,
					modReasonTitle: S(e.modReasonTitle) ? String(e.modReasonTitle) : void 0,
					modReports: Array.isArray(null == e ? void 0 : e.modReports) ? e.modReports.map(e => d.a.fromJSON(e)) : [],
					name: S(e.name) ? String(e.name) : void 0,
					noFollow: S(e.noFollow) ? Boolean(e.noFollow) : void 0,
					numReports: S(e.numReports) ? Number(e.numReports) : void 0,
					parentId: S(e.parentId) ? String(e.parentId) : void 0,
					permalink: S(e.permalink) ? String(e.permalink) : void 0,
					removalReason: S(e.removalReason) ? String(e.removalReason) : void 0,
					removed: S(e.removed) ? Boolean(e.removed) : void 0,
					replies: S(e.replies) ? String(e.replies) : void 0,
					reportReasons: Array.isArray(e.reportReasons) ? [...e.reportReasons] : void 0,
					rteMode: S(e.rteMode) ? String(e.rteMode) : void 0,
					saved: S(e.saved) ? Boolean(e.saved) : void 0,
					score: S(e.score) ? Number(e.score) : void 0,
					scoreHidden: S(e.scoreHidden) ? Boolean(e.scoreHidden) : void 0,
					sendReplies: S(e.sendReplies) ? Boolean(e.sendReplies) : void 0,
					spam: S(e.spam) ? Boolean(e.spam) : void 0,
					stickied: S(e.stickied) ? Boolean(e.stickied) : void 0,
					subreddit: S(e.subreddit) ? String(e.subreddit) : void 0,
					subredditId: S(e.subredditId) ? String(e.subredditId) : void 0,
					subredditNamePrefixed: S(e.subredditNamePrefixed) ? String(e.subredditNamePrefixed) : void 0,
					subredditType: S(e.subredditType) ? String(e.subredditType) : void 0,
					topAwardedType: S(e.topAwardedType) ? String(e.topAwardedType) : void 0,
					totalAwardsReceived: S(e.totalAwardsReceived) ? Number(e.totalAwardsReceived) : void 0,
					treatmentTags: Array.isArray(null == e ? void 0 : e.treatmentTags) ? e.treatmentTags.map(e => d.a.fromJSON(e)) : [],
					unrepliableReason: S(e.unrepliableReason) ? String(e.unrepliableReason) : void 0,
					ups: S(e.ups) ? Number(e.ups) : void 0,
					userReports: Array.isArray(null == e ? void 0 : e.userReports) ? e.userReports.map(e => d.a.fromJSON(e)) : [],
					depth: S(e.depth) ? Number(e.depth) : void 0,
					linkTitle: S(e.linkTitle) ? String(e.linkTitle) : void 0,
					linkAuthor: S(e.linkAuthor) ? String(e.linkAuthor) : void 0,
					numComments: S(e.numComments) ? Number(e.numComments) : void 0,
					over18: S(e.over18) ? Boolean(e.over18) : void 0,
					linkPermalink: S(e.linkPermalink) ? String(e.linkPermalink) : void 0,
					quarantine: S(e.quarantine) ? Boolean(e.quarantine) : void 0,
					linkUrl: S(e.linkUrl) ? String(e.linkUrl) : void 0
				}),
				toJSON(e) {
					const t = {};
					return e.allAwardings ? t.allAwardings = e.allAwardings.map(e => e ? d.a.toJSON(e) : void 0) : t.allAwardings = [], void 0 !== e.approved && (t.approved = e.approved), void 0 !== e.approvedAtUtc && (t.approvedAtUtc = e.approvedAtUtc), void 0 !== e.approvedBy && (t.approvedBy = e.approvedBy), void 0 !== e.archived && (t.archived = e.archived), void 0 !== e.associatedAward && (t.associatedAward = e.associatedAward), void 0 !== e.author && (t.author = e.author), void 0 !== e.authorFlairBackgroundColor && (t.authorFlairBackgroundColor = e.authorFlairBackgroundColor), void 0 !== e.authorFlairCssClass && (t.authorFlairCssClass = e.authorFlairCssClass), e.authorFlairRichtext ? t.authorFlairRichtext = e.authorFlairRichtext.map(e => e ? y.toJSON(e) : void 0) : t.authorFlairRichtext = [], void 0 !== e.authorFlairTemplateId && (t.authorFlairTemplateId = e.authorFlairTemplateId), void 0 !== e.authorFlairText && (t.authorFlairText = e.authorFlairText), void 0 !== e.authorFlairTextColor && (t.authorFlairTextColor = e.authorFlairTextColor), void 0 !== e.authorFlairType && (t.authorFlairType = e.authorFlairType), void 0 !== e.authorFullname && (t.authorFullname = e.authorFullname), void 0 !== e.authorIsBlocked && (t.authorIsBlocked = e.authorIsBlocked), void 0 !== e.authorPatreonFlair && (t.authorPatreonFlair = e.authorPatreonFlair), void 0 !== e.authorPremium && (t.authorPremium = e.authorPremium), e.awarders ? t.awarders = e.awarders.map(e => e) : t.awarders = [], void 0 !== e.bannedAtUtc && (t.bannedAtUtc = e.bannedAtUtc), void 0 !== e.bannedBy && (t.bannedBy = e.bannedBy), void 0 !== e.body && (t.body = e.body), void 0 !== e.bodyHtml && (t.bodyHtml = e.bodyHtml), void 0 !== e.canGild && (t.canGild = e.canGild), void 0 !== e.canModPost && (t.canModPost = e.canModPost), void 0 !== e.collapsed && (t.collapsed = e.collapsed), void 0 !== e.collapsedBecauseCrowdControl && (t.collapsedBecauseCrowdControl = e.collapsedBecauseCrowdControl), void 0 !== e.collapsedReason && (t.collapsedReason = e.collapsedReason), void 0 !== e.collapsedReasonCode && (t.collapsedReasonCode = e.collapsedReasonCode), void 0 !== e.commentType && (t.commentType = e.commentType), void 0 !== e.controversiality && (t.controversiality = e.controversiality), void 0 !== e.created && (t.created = e.created), void 0 !== e.createdUtc && (t.createdUtc = e.createdUtc), void 0 !== e.distinguished && (t.distinguished = e.distinguished), void 0 !== e.downs && (t.downs = e.downs), void 0 !== e.edited && (t.edited = e.edited), void 0 !== e.gilded && (t.gilded = e.gilded), void 0 !== e.gildings && (t.gildings = e.gildings ? d.a.toJSON(e.gildings) : void 0), void 0 !== e.id && (t.id = e.id), void 0 !== e.ignoreReports && (t.ignoreReports = e.ignoreReports), void 0 !== e.isSubmitter && (t.isSubmitter = e.isSubmitter), void 0 !== e.likes && (t.likes = e.likes), void 0 !== e.linkId && (t.linkId = e.linkId), void 0 !== e.locked && (t.locked = e.locked), void 0 !== e.modNote && (t.modNote = e.modNote), void 0 !== e.modReasonBy && (t.modReasonBy = e.modReasonBy), void 0 !== e.modReasonTitle && (t.modReasonTitle = e.modReasonTitle), e.modReports ? t.modReports = e.modReports.map(e => e ? d.a.toJSON(e) : void 0) : t.modReports = [], void 0 !== e.name && (t.name = e.name), void 0 !== e.noFollow && (t.noFollow = e.noFollow), void 0 !== e.numReports && (t.numReports = e.numReports), void 0 !== e.parentId && (t.parentId = e.parentId), void 0 !== e.permalink && (t.permalink = e.permalink), void 0 !== e.removalReason && (t.removalReason = e.removalReason), void 0 !== e.removed && (t.removed = e.removed), void 0 !== e.replies && (t.replies = e.replies), void 0 !== e.reportReasons && (t.reportReasons = e.reportReasons), void 0 !== e.rteMode && (t.rteMode = e.rteMode), void 0 !== e.saved && (t.saved = e.saved), void 0 !== e.score && (t.score = e.score), void 0 !== e.scoreHidden && (t.scoreHidden = e.scoreHidden), void 0 !== e.sendReplies && (t.sendReplies = e.sendReplies), void 0 !== e.spam && (t.spam = e.spam), void 0 !== e.stickied && (t.stickied = e.stickied), void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.subredditId && (t.subredditId = e.subredditId), void 0 !== e.subredditNamePrefixed && (t.subredditNamePrefixed = e.subredditNamePrefixed), void 0 !== e.subredditType && (t.subredditType = e.subredditType), void 0 !== e.topAwardedType && (t.topAwardedType = e.topAwardedType), void 0 !== e.totalAwardsReceived && (t.totalAwardsReceived = e.totalAwardsReceived), e.treatmentTags ? t.treatmentTags = e.treatmentTags.map(e => e ? d.a.toJSON(e) : void 0) : t.treatmentTags = [], void 0 !== e.unrepliableReason && (t.unrepliableReason = e.unrepliableReason), void 0 !== e.ups && (t.ups = e.ups), e.userReports ? t.userReports = e.userReports.map(e => e ? d.a.toJSON(e) : void 0) : t.userReports = [], void 0 !== e.depth && (t.depth = e.depth), void 0 !== e.linkTitle && (t.linkTitle = e.linkTitle), void 0 !== e.linkAuthor && (t.linkAuthor = e.linkAuthor), void 0 !== e.numComments && (t.numComments = e.numComments), void 0 !== e.over18 && (t.over18 = e.over18), void 0 !== e.linkPermalink && (t.linkPermalink = e.linkPermalink), void 0 !== e.quarantine && (t.quarantine = e.quarantine), void 0 !== e.linkUrl && (t.linkUrl = e.linkUrl), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a, s, l, u, c, p, v, m, f, g, h, b, k, S, w, O, T, N, R, $, C, I, E, A, P, x, F, j, M, D, J, _, B, V, L, U, q, W, G, H, z, Y, Z, X, K, Q, ee, te, oe, ie, re, ne, ae, se, de, le, ue, ce, pe, ve, me, fe, ge, he, ye, be, ke, Se, we, Oe, Te, Ne, Re, $e, Ce, Ie;
					const Ee = {
						$type: "devvit.plugin.redditapi.common.RedditObject",
						allAwardings: [],
						approved: void 0,
						approvedAtUtc: void 0,
						approvedBy: void 0,
						archived: void 0,
						associatedAward: void 0,
						author: void 0,
						authorFlairBackgroundColor: void 0,
						authorFlairCssClass: void 0,
						authorFlairRichtext: [],
						authorFlairTemplateId: void 0,
						authorFlairText: void 0,
						authorFlairTextColor: void 0,
						authorFlairType: void 0,
						authorFullname: void 0,
						authorIsBlocked: void 0,
						authorPatreonFlair: void 0,
						authorPremium: void 0,
						awarders: [],
						bannedAtUtc: void 0,
						bannedBy: void 0,
						body: void 0,
						bodyHtml: void 0,
						canGild: void 0,
						canModPost: void 0,
						collapsed: void 0,
						collapsedBecauseCrowdControl: void 0,
						collapsedReason: void 0,
						collapsedReasonCode: void 0,
						commentType: void 0,
						controversiality: void 0,
						created: void 0,
						createdUtc: void 0,
						distinguished: void 0,
						downs: void 0,
						edited: void 0,
						gilded: void 0,
						gildings: void 0,
						id: void 0,
						ignoreReports: void 0,
						isSubmitter: void 0,
						likes: void 0,
						linkId: void 0,
						locked: void 0,
						modNote: void 0,
						modReasonBy: void 0,
						modReasonTitle: void 0,
						modReports: [],
						name: void 0,
						noFollow: void 0,
						numReports: void 0,
						parentId: void 0,
						permalink: void 0,
						removalReason: void 0,
						removed: void 0,
						replies: void 0,
						reportReasons: void 0,
						rteMode: void 0,
						saved: void 0,
						score: void 0,
						scoreHidden: void 0,
						sendReplies: void 0,
						spam: void 0,
						stickied: void 0,
						subreddit: void 0,
						subredditId: void 0,
						subredditNamePrefixed: void 0,
						subredditType: void 0,
						topAwardedType: void 0,
						totalAwardsReceived: void 0,
						treatmentTags: [],
						unrepliableReason: void 0,
						ups: void 0,
						userReports: [],
						depth: void 0,
						linkTitle: void 0,
						linkAuthor: void 0,
						numComments: void 0,
						over18: void 0,
						linkPermalink: void 0,
						quarantine: void 0,
						linkUrl: void 0
					};
					return Ee.allAwardings = (null === (t = e.allAwardings) || void 0 === t ? void 0 : t.map(e => d.a.fromPartial(e))) || [], Ee.approved = null !== (o = e.approved) && void 0 !== o ? o : void 0, Ee.approvedAtUtc = null !== (i = e.approvedAtUtc) && void 0 !== i ? i : void 0, Ee.approvedBy = null !== (r = e.approvedBy) && void 0 !== r ? r : void 0, Ee.archived = null !== (n = e.archived) && void 0 !== n ? n : void 0, Ee.associatedAward = null !== (a = e.associatedAward) && void 0 !== a ? a : void 0, Ee.author = null !== (s = e.author) && void 0 !== s ? s : void 0, Ee.authorFlairBackgroundColor = null !== (l = e.authorFlairBackgroundColor) && void 0 !== l ? l : void 0, Ee.authorFlairCssClass = null !== (u = e.authorFlairCssClass) && void 0 !== u ? u : void 0, Ee.authorFlairRichtext = (null === (c = e.authorFlairRichtext) || void 0 === c ? void 0 : c.map(e => y.fromPartial(e))) || [], Ee.authorFlairTemplateId = null !== (p = e.authorFlairTemplateId) && void 0 !== p ? p : void 0, Ee.authorFlairText = null !== (v = e.authorFlairText) && void 0 !== v ? v : void 0, Ee.authorFlairTextColor = null !== (m = e.authorFlairTextColor) && void 0 !== m ? m : void 0, Ee.authorFlairType = null !== (f = e.authorFlairType) && void 0 !== f ? f : void 0, Ee.authorFullname = null !== (g = e.authorFullname) && void 0 !== g ? g : void 0, Ee.authorIsBlocked = null !== (h = e.authorIsBlocked) && void 0 !== h ? h : void 0, Ee.authorPatreonFlair = null !== (b = e.authorPatreonFlair) && void 0 !== b ? b : void 0, Ee.authorPremium = null !== (k = e.authorPremium) && void 0 !== k ? k : void 0, Ee.awarders = (null === (S = e.awarders) || void 0 === S ? void 0 : S.map(e => e)) || [], Ee.bannedAtUtc = null !== (w = e.bannedAtUtc) && void 0 !== w ? w : void 0, Ee.bannedBy = null !== (O = e.bannedBy) && void 0 !== O ? O : void 0, Ee.body = null !== (T = e.body) && void 0 !== T ? T : void 0, Ee.bodyHtml = null !== (N = e.bodyHtml) && void 0 !== N ? N : void 0, Ee.canGild = null !== (R = e.canGild) && void 0 !== R ? R : void 0, Ee.canModPost = null !== ($ = e.canModPost) && void 0 !== $ ? $ : void 0, Ee.collapsed = null !== (C = e.collapsed) && void 0 !== C ? C : void 0, Ee.collapsedBecauseCrowdControl = null !== (I = e.collapsedBecauseCrowdControl) && void 0 !== I ? I : void 0, Ee.collapsedReason = null !== (E = e.collapsedReason) && void 0 !== E ? E : void 0, Ee.collapsedReasonCode = null !== (A = e.collapsedReasonCode) && void 0 !== A ? A : void 0, Ee.commentType = null !== (P = e.commentType) && void 0 !== P ? P : void 0, Ee.controversiality = null !== (x = e.controversiality) && void 0 !== x ? x : void 0, Ee.created = null !== (F = e.created) && void 0 !== F ? F : void 0, Ee.createdUtc = null !== (j = e.createdUtc) && void 0 !== j ? j : void 0, Ee.distinguished = null !== (M = e.distinguished) && void 0 !== M ? M : void 0, Ee.downs = null !== (D = e.downs) && void 0 !== D ? D : void 0, Ee.edited = null !== (J = e.edited) && void 0 !== J ? J : void 0, Ee.gilded = null !== (_ = e.gilded) && void 0 !== _ ? _ : void 0, Ee.gildings = void 0 !== e.gildings && null !== e.gildings ? d.a.fromPartial(e.gildings) : void 0, Ee.id = null !== (B = e.id) && void 0 !== B ? B : void 0, Ee.ignoreReports = null !== (V = e.ignoreReports) && void 0 !== V ? V : void 0, Ee.isSubmitter = null !== (L = e.isSubmitter) && void 0 !== L ? L : void 0, Ee.likes = null !== (U = e.likes) && void 0 !== U ? U : void 0, Ee.linkId = null !== (q = e.linkId) && void 0 !== q ? q : void 0, Ee.locked = null !== (W = e.locked) && void 0 !== W ? W : void 0, Ee.modNote = null !== (G = e.modNote) && void 0 !== G ? G : void 0, Ee.modReasonBy = null !== (H = e.modReasonBy) && void 0 !== H ? H : void 0, Ee.modReasonTitle = null !== (z = e.modReasonTitle) && void 0 !== z ? z : void 0, Ee.modReports = (null === (Y = e.modReports) || void 0 === Y ? void 0 : Y.map(e => d.a.fromPartial(e))) || [], Ee.name = null !== (Z = e.name) && void 0 !== Z ? Z : void 0, Ee.noFollow = null !== (X = e.noFollow) && void 0 !== X ? X : void 0, Ee.numReports = null !== (K = e.numReports) && void 0 !== K ? K : void 0, Ee.parentId = null !== (Q = e.parentId) && void 0 !== Q ? Q : void 0, Ee.permalink = null !== (ee = e.permalink) && void 0 !== ee ? ee : void 0, Ee.removalReason = null !== (te = e.removalReason) && void 0 !== te ? te : void 0, Ee.removed = null !== (oe = e.removed) && void 0 !== oe ? oe : void 0, Ee.replies = null !== (ie = e.replies) && void 0 !== ie ? ie : void 0, Ee.reportReasons = null !== (re = e.reportReasons) && void 0 !== re ? re : void 0, Ee.rteMode = null !== (ne = e.rteMode) && void 0 !== ne ? ne : void 0, Ee.saved = null !== (ae = e.saved) && void 0 !== ae ? ae : void 0, Ee.score = null !== (se = e.score) && void 0 !== se ? se : void 0, Ee.scoreHidden = null !== (de = e.scoreHidden) && void 0 !== de ? de : void 0, Ee.sendReplies = null !== (le = e.sendReplies) && void 0 !== le ? le : void 0, Ee.spam = null !== (ue = e.spam) && void 0 !== ue ? ue : void 0, Ee.stickied = null !== (ce = e.stickied) && void 0 !== ce ? ce : void 0, Ee.subreddit = null !== (pe = e.subreddit) && void 0 !== pe ? pe : void 0, Ee.subredditId = null !== (ve = e.subredditId) && void 0 !== ve ? ve : void 0, Ee.subredditNamePrefixed = null !== (me = e.subredditNamePrefixed) && void 0 !== me ? me : void 0, Ee.subredditType = null !== (fe = e.subredditType) && void 0 !== fe ? fe : void 0, Ee.topAwardedType = null !== (ge = e.topAwardedType) && void 0 !== ge ? ge : void 0, Ee.totalAwardsReceived = null !== (he = e.totalAwardsReceived) && void 0 !== he ? he : void 0, Ee.treatmentTags = (null === (ye = e.treatmentTags) || void 0 === ye ? void 0 : ye.map(e => d.a.fromPartial(e))) || [], Ee.unrepliableReason = null !== (be = e.unrepliableReason) && void 0 !== be ? be : void 0, Ee.ups = null !== (ke = e.ups) && void 0 !== ke ? ke : void 0, Ee.userReports = (null === (Se = e.userReports) || void 0 === Se ? void 0 : Se.map(e => d.a.fromPartial(e))) || [], Ee.depth = null !== (we = e.depth) && void 0 !== we ? we : void 0, Ee.linkTitle = null !== (Oe = e.linkTitle) && void 0 !== Oe ? Oe : void 0, Ee.linkAuthor = null !== (Te = e.linkAuthor) && void 0 !== Te ? Te : void 0, Ee.numComments = null !== (Ne = e.numComments) && void 0 !== Ne ? Ne : void 0, Ee.over18 = null !== (Re = e.over18) && void 0 !== Re ? Re : void 0, Ee.linkPermalink = null !== ($e = e.linkPermalink) && void 0 !== $e ? $e : void 0, Ee.quarantine = null !== (Ce = e.quarantine) && void 0 !== Ce ? Ce : void 0, Ee.linkUrl = null !== (Ie = e.linkUrl) && void 0 !== Ie ? Ie : void 0, Ee
				}
			};
			i.a.set(h.$type, h);
			const y = {
				$type: "devvit.plugin.redditapi.common.RedditObject.AuthorFlairRichText",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.e && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.e
					}, t.uint32(10).fork()).ldelim(), void 0 !== e.t && l.d.encode({
						$type: "google.protobuf.StringValue",
						value: e.t
					}, t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.RedditObject.AuthorFlairRichText",
						e: void 0,
						t: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.e = l.d.decode(o, o.uint32()).value;
								break;
							case 2:
								r.t = l.d.decode(o, o.uint32()).value;
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: y.$type,
					e: S(e.e) ? String(e.e) : void 0,
					t: S(e.t) ? String(e.t) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.e && (t.e = e.e), void 0 !== e.t && (t.t = e.t), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "devvit.plugin.redditapi.common.RedditObject.AuthorFlairRichText",
						e: void 0,
						t: void 0
					};
					return i.e = null !== (t = e.e) && void 0 !== t ? t : void 0, i.t = null !== (o = e.t) && void 0 !== o ? o : void 0, i
				}
			};
			i.a.set(y.$type, y);
			const b = {
				$type: "devvit.plugin.redditapi.common.BasicJsonObject",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					return void 0 !== e.json && k.encode(e.json, t.uint32(34).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.BasicJsonObject",
						json: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 4:
								r.json = k.decode(o, o.uint32());
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: b.$type,
					json: S(e.json) ? k.fromJSON(e.json) : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.json && (t.json = e.json ? k.toJSON(e.json) : void 0), t
				},
				fromPartial(e) {
					const t = {
						$type: "devvit.plugin.redditapi.common.BasicJsonObject",
						json: void 0
					};
					return t.json = void 0 !== e.json && null !== e.json ? k.fromPartial(e.json) : void 0, t
				}
			};
			i.a.set(b.$type, b);
			const k = {
				$type: "devvit.plugin.redditapi.common.BasicJsonObject.JsonErrorType",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
					for (const o of e.errors) d.a.encode(o, t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "devvit.plugin.redditapi.common.BasicJsonObject.JsonErrorType",
						errors: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.errors.push(d.a.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: k.$type,
					errors: Array.isArray(null == e ? void 0 : e.errors) ? e.errors.map(e => d.a.fromJSON(e)) : []
				}),
				toJSON(e) {
					const t = {};
					return e.errors ? t.errors = e.errors.map(e => e ? d.a.toJSON(e) : void 0) : t.errors = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "devvit.plugin.redditapi.common.BasicJsonObject.JsonErrorType",
						errors: []
					};
					return o.errors = (null === (t = e.errors) || void 0 === t ? void 0 : t.map(e => d.a.fromPartial(e))) || [], o
				}
			};

			function S(e) {
				return null != e
			}
			i.a.set(k.$type, k), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/redditapi/flair/flair_msg.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return l
				})), o.d(t, "b", (function() {
					return u
				})), o.d(t, "c", (function() {
					return c
				})), o.d(t, "k", (function() {
					return p
				})), o.d(t, "n", (function() {
					return v
				})), o.d(t, "e", (function() {
					return m
				})), o.d(t, "f", (function() {
					return f
				})), o.d(t, "h", (function() {
					return g
				})), o.d(t, "l", (function() {
					return h
				})), o.d(t, "o", (function() {
					return y
				})), o.d(t, "p", (function() {
					return b
				})), o.d(t, "q", (function() {
					return k
				})), o.d(t, "r", (function() {
					return S
				})), o.d(t, "j", (function() {
					return w
				})), o.d(t, "d", (function() {
					return O
				})), o.d(t, "m", (function() {
					return N
				})), o.d(t, "i", (function() {
					return $
				})), o.d(t, "g", (function() {
					return A
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js");
				const l = {
					$type: "devvit.plugin.redditapi.flair.ClearFlairTemplatesRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.flairType && t.uint32(18).string(e.flairType), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.ClearFlairTemplatesRequest",
							subreddit: "",
							flairType: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.flairType = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						flairType: F(e.flairType) ? String(e.flairType) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.flairType && (t.flairType = e.flairType), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.flair.ClearFlairTemplatesRequest",
							subreddit: "",
							flairType: ""
						};
						return i.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", i.flairType = null !== (o = e.flairType) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "devvit.plugin.redditapi.flair.DeleteFlairRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.name && t.uint32(18).string(e.name), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.DeleteFlairRequest",
							subreddit: "",
							name: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.name = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						name: F(e.name) ? String(e.name) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.name && (t.name = e.name), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.flair.DeleteFlairRequest",
							subreddit: "",
							name: ""
						};
						return i.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", i.name = null !== (o = e.name) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(u.$type, u);
				const c = {
					$type: "devvit.plugin.redditapi.flair.DeleteFlairTemplateRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.flairTemplateId && t.uint32(18).string(e.flairTemplateId), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.DeleteFlairTemplateRequest",
							subreddit: "",
							flairTemplateId: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.flairTemplateId = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						flairTemplateId: F(e.flairTemplateId) ? String(e.flairTemplateId) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.flairTemplateId && (t.flairTemplateId = e.flairTemplateId), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.flair.DeleteFlairTemplateRequest",
							subreddit: "",
							flairTemplateId: ""
						};
						return i.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", i.flairTemplateId = null !== (o = e.flairTemplateId) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(c.$type, c);
				const p = {
					$type: "devvit.plugin.redditapi.flair.FlairRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.cssClass && t.uint32(18).string(e.cssClass), "" !== e.link && t.uint32(26).string(e.link), "" !== e.name && t.uint32(34).string(e.name), "" !== e.text && t.uint32(42).string(e.text), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairRequest",
							subreddit: "",
							cssClass: "",
							link: "",
							name: "",
							text: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.cssClass = o.string();
									break;
								case 3:
									r.link = o.string();
									break;
								case 4:
									r.name = o.string();
									break;
								case 5:
									r.text = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: p.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						cssClass: F(e.cssClass) ? String(e.cssClass) : "",
						link: F(e.link) ? String(e.link) : "",
						name: F(e.name) ? String(e.name) : "",
						text: F(e.text) ? String(e.text) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.cssClass && (t.cssClass = e.cssClass), void 0 !== e.link && (t.link = e.link), void 0 !== e.name && (t.name = e.name), void 0 !== e.text && (t.text = e.text), t
					},
					fromPartial(e) {
						var t, o, i, r, n;
						const a = {
							$type: "devvit.plugin.redditapi.flair.FlairRequest",
							subreddit: "",
							cssClass: "",
							link: "",
							name: "",
							text: ""
						};
						return a.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", a.cssClass = null !== (o = e.cssClass) && void 0 !== o ? o : "", a.link = null !== (i = e.link) && void 0 !== i ? i : "", a.name = null !== (r = e.name) && void 0 !== r ? r : "", a.text = null !== (n = e.text) && void 0 !== n ? n : "", a
					}
				};
				i.a.set(p.$type, p);
				const v = {
					$type: "devvit.plugin.redditapi.flair.FlairTemplateOrderRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						"" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.flairType && t.uint32(18).string(e.flairType);
						for (const o of e.order) t.uint32(26).string(o);
						return t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairTemplateOrderRequest",
							subreddit: "",
							flairType: "",
							order: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.flairType = o.string();
									break;
								case 3:
									r.order.push(o.string());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: v.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						flairType: F(e.flairType) ? String(e.flairType) : "",
						order: Array.isArray(null == e ? void 0 : e.order) ? e.order.map(e => String(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.flairType && (t.flairType = e.flairType), e.order ? t.order = e.order.map(e => e) : t.order = [], t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairTemplateOrderRequest",
							subreddit: "",
							flairType: "",
							order: []
						};
						return r.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", r.flairType = null !== (o = e.flairType) && void 0 !== o ? o : "", r.order = (null === (i = e.order) || void 0 === i ? void 0 : i.map(e => e)) || [], r
					}
				};
				i.a.set(v.$type, v);
				const m = {
					$type: "devvit.plugin.redditapi.flair.FlairConfigRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), !0 === e.flairEnabled && t.uint32(16).bool(e.flairEnabled), "" !== e.flairPosition && t.uint32(26).string(e.flairPosition), !0 === e.flairSelfAssignEnabled && t.uint32(32).bool(e.flairSelfAssignEnabled), "" !== e.linkFlairPosition && t.uint32(42).string(e.linkFlairPosition), !0 === e.linkFlairSelfAssignEnabled && t.uint32(48).bool(e.linkFlairSelfAssignEnabled), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairConfigRequest",
							subreddit: "",
							flairEnabled: !1,
							flairPosition: "",
							flairSelfAssignEnabled: !1,
							linkFlairPosition: "",
							linkFlairSelfAssignEnabled: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.flairEnabled = o.bool();
									break;
								case 3:
									r.flairPosition = o.string();
									break;
								case 4:
									r.flairSelfAssignEnabled = o.bool();
									break;
								case 5:
									r.linkFlairPosition = o.string();
									break;
								case 6:
									r.linkFlairSelfAssignEnabled = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: m.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						flairEnabled: !!F(e.flairEnabled) && Boolean(e.flairEnabled),
						flairPosition: F(e.flairPosition) ? String(e.flairPosition) : "",
						flairSelfAssignEnabled: !!F(e.flairSelfAssignEnabled) && Boolean(e.flairSelfAssignEnabled),
						linkFlairPosition: F(e.linkFlairPosition) ? String(e.linkFlairPosition) : "",
						linkFlairSelfAssignEnabled: !!F(e.linkFlairSelfAssignEnabled) && Boolean(e.linkFlairSelfAssignEnabled)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.flairEnabled && (t.flairEnabled = e.flairEnabled), void 0 !== e.flairPosition && (t.flairPosition = e.flairPosition), void 0 !== e.flairSelfAssignEnabled && (t.flairSelfAssignEnabled = e.flairSelfAssignEnabled), void 0 !== e.linkFlairPosition && (t.linkFlairPosition = e.linkFlairPosition), void 0 !== e.linkFlairSelfAssignEnabled && (t.linkFlairSelfAssignEnabled = e.linkFlairSelfAssignEnabled), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a;
						const s = {
							$type: "devvit.plugin.redditapi.flair.FlairConfigRequest",
							subreddit: "",
							flairEnabled: !1,
							flairPosition: "",
							flairSelfAssignEnabled: !1,
							linkFlairPosition: "",
							linkFlairSelfAssignEnabled: !1
						};
						return s.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", s.flairEnabled = null !== (o = e.flairEnabled) && void 0 !== o && o, s.flairPosition = null !== (i = e.flairPosition) && void 0 !== i ? i : "", s.flairSelfAssignEnabled = null !== (r = e.flairSelfAssignEnabled) && void 0 !== r && r, s.linkFlairPosition = null !== (n = e.linkFlairPosition) && void 0 !== n ? n : "", s.linkFlairSelfAssignEnabled = null !== (a = e.linkFlairSelfAssignEnabled) && void 0 !== a && a, s
					}
				};
				i.a.set(m.$type, m);
				const f = {
					$type: "devvit.plugin.redditapi.flair.FlairCsvRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.flairCsv && t.uint32(18).string(e.flairCsv), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvRequest",
							subreddit: "",
							flairCsv: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.flairCsv = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: f.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						flairCsv: F(e.flairCsv) ? String(e.flairCsv) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.flairCsv && (t.flairCsv = e.flairCsv), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvRequest",
							subreddit: "",
							flairCsv: ""
						};
						return i.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", i.flairCsv = null !== (o = e.flairCsv) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(f.$type, f);
				const g = {
					$type: "devvit.plugin.redditapi.flair.FlairListRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.after && t.uint32(18).string(e.after), "" !== e.before && t.uint32(26).string(e.before), 0 !== e.count && t.uint32(32).int64(e.count), 0 !== e.limit && t.uint32(40).int64(e.limit), "" !== e.name && t.uint32(50).string(e.name), "" !== e.show && t.uint32(58).string(e.show), !0 === e.srDetail && t.uint32(64).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairListRequest",
							subreddit: "",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							name: "",
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.after = o.string();
									break;
								case 3:
									r.before = o.string();
									break;
								case 4:
									r.count = x(o.int64());
									break;
								case 5:
									r.limit = x(o.int64());
									break;
								case 6:
									r.name = o.string();
									break;
								case 7:
									r.show = o.string();
									break;
								case 8:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: g.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						after: F(e.after) ? String(e.after) : "",
						before: F(e.before) ? String(e.before) : "",
						count: F(e.count) ? Number(e.count) : 0,
						limit: F(e.limit) ? Number(e.limit) : 0,
						name: F(e.name) ? String(e.name) : "",
						show: F(e.show) ? String(e.show) : "",
						srDetail: !!F(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.name && (t.name = e.name), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d;
						const l = {
							$type: "devvit.plugin.redditapi.flair.FlairListRequest",
							subreddit: "",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							name: "",
							show: "",
							srDetail: !1
						};
						return l.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", l.after = null !== (o = e.after) && void 0 !== o ? o : "", l.before = null !== (i = e.before) && void 0 !== i ? i : "", l.count = null !== (r = e.count) && void 0 !== r ? r : 0, l.limit = null !== (n = e.limit) && void 0 !== n ? n : 0, l.name = null !== (a = e.name) && void 0 !== a ? a : "", l.show = null !== (s = e.show) && void 0 !== s ? s : "", l.srDetail = null !== (d = e.srDetail) && void 0 !== d && d, l
					}
				};
				i.a.set(g.$type, g);
				const h = {
					$type: "devvit.plugin.redditapi.flair.FlairSelectorRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), !0 === e.isNewlink && t.uint32(16).bool(e.isNewlink), "" !== e.link && t.uint32(26).string(e.link), "" !== e.name && t.uint32(34).string(e.name), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairSelectorRequest",
							subreddit: "",
							isNewlink: !1,
							link: "",
							name: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.isNewlink = o.bool();
									break;
								case 3:
									r.link = o.string();
									break;
								case 4:
									r.name = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: h.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						isNewlink: !!F(e.isNewlink) && Boolean(e.isNewlink),
						link: F(e.link) ? String(e.link) : "",
						name: F(e.name) ? String(e.name) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.isNewlink && (t.isNewlink = e.isNewlink), void 0 !== e.link && (t.link = e.link), void 0 !== e.name && (t.name = e.name), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "devvit.plugin.redditapi.flair.FlairSelectorRequest",
							subreddit: "",
							isNewlink: !1,
							link: "",
							name: ""
						};
						return n.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", n.isNewlink = null !== (o = e.isNewlink) && void 0 !== o && o, n.link = null !== (i = e.link) && void 0 !== i ? i : "", n.name = null !== (r = e.name) && void 0 !== r ? r : "", n
					}
				};
				i.a.set(h.$type, h);
				const y = {
					$type: "devvit.plugin.redditapi.flair.FlairTemplateRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.allowableContent && t.uint32(18).string(e.allowableContent), "" !== e.backgroundColor && t.uint32(26).string(e.backgroundColor), "" !== e.cssClass && t.uint32(34).string(e.cssClass), "" !== e.flairTemplateId && t.uint32(42).string(e.flairTemplateId), "" !== e.flairType && t.uint32(50).string(e.flairType), 0 !== e.maxEmojis && t.uint32(56).int64(e.maxEmojis), !0 === e.modOnly && t.uint32(64).bool(e.modOnly), !0 === e.overrideCss && t.uint32(72).bool(e.overrideCss), "" !== e.text && t.uint32(82).string(e.text), "" !== e.textColor && t.uint32(90).string(e.textColor), !0 === e.textEditable && t.uint32(96).bool(e.textEditable), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairTemplateRequest",
							subreddit: "",
							allowableContent: "",
							backgroundColor: "",
							cssClass: "",
							flairTemplateId: "",
							flairType: "",
							maxEmojis: 0,
							modOnly: !1,
							overrideCss: !1,
							text: "",
							textColor: "",
							textEditable: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.allowableContent = o.string();
									break;
								case 3:
									r.backgroundColor = o.string();
									break;
								case 4:
									r.cssClass = o.string();
									break;
								case 5:
									r.flairTemplateId = o.string();
									break;
								case 6:
									r.flairType = o.string();
									break;
								case 7:
									r.maxEmojis = x(o.int64());
									break;
								case 8:
									r.modOnly = o.bool();
									break;
								case 9:
									r.overrideCss = o.bool();
									break;
								case 10:
									r.text = o.string();
									break;
								case 11:
									r.textColor = o.string();
									break;
								case 12:
									r.textEditable = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: y.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						allowableContent: F(e.allowableContent) ? String(e.allowableContent) : "",
						backgroundColor: F(e.backgroundColor) ? String(e.backgroundColor) : "",
						cssClass: F(e.cssClass) ? String(e.cssClass) : "",
						flairTemplateId: F(e.flairTemplateId) ? String(e.flairTemplateId) : "",
						flairType: F(e.flairType) ? String(e.flairType) : "",
						maxEmojis: F(e.maxEmojis) ? Number(e.maxEmojis) : 0,
						modOnly: !!F(e.modOnly) && Boolean(e.modOnly),
						overrideCss: !!F(e.overrideCss) && Boolean(e.overrideCss),
						text: F(e.text) ? String(e.text) : "",
						textColor: F(e.textColor) ? String(e.textColor) : "",
						textEditable: !!F(e.textEditable) && Boolean(e.textEditable)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.allowableContent && (t.allowableContent = e.allowableContent), void 0 !== e.backgroundColor && (t.backgroundColor = e.backgroundColor), void 0 !== e.cssClass && (t.cssClass = e.cssClass), void 0 !== e.flairTemplateId && (t.flairTemplateId = e.flairTemplateId), void 0 !== e.flairType && (t.flairType = e.flairType), void 0 !== e.maxEmojis && (t.maxEmojis = Math.round(e.maxEmojis)), void 0 !== e.modOnly && (t.modOnly = e.modOnly), void 0 !== e.overrideCss && (t.overrideCss = e.overrideCss), void 0 !== e.text && (t.text = e.text), void 0 !== e.textColor && (t.textColor = e.textColor), void 0 !== e.textEditable && (t.textEditable = e.textEditable), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u, c, p;
						const v = {
							$type: "devvit.plugin.redditapi.flair.FlairTemplateRequest",
							subreddit: "",
							allowableContent: "",
							backgroundColor: "",
							cssClass: "",
							flairTemplateId: "",
							flairType: "",
							maxEmojis: 0,
							modOnly: !1,
							overrideCss: !1,
							text: "",
							textColor: "",
							textEditable: !1
						};
						return v.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", v.allowableContent = null !== (o = e.allowableContent) && void 0 !== o ? o : "", v.backgroundColor = null !== (i = e.backgroundColor) && void 0 !== i ? i : "", v.cssClass = null !== (r = e.cssClass) && void 0 !== r ? r : "", v.flairTemplateId = null !== (n = e.flairTemplateId) && void 0 !== n ? n : "", v.flairType = null !== (a = e.flairType) && void 0 !== a ? a : "", v.maxEmojis = null !== (s = e.maxEmojis) && void 0 !== s ? s : 0, v.modOnly = null !== (d = e.modOnly) && void 0 !== d && d, v.overrideCss = null !== (l = e.overrideCss) && void 0 !== l && l, v.text = null !== (u = e.text) && void 0 !== u ? u : "", v.textColor = null !== (c = e.textColor) && void 0 !== c ? c : "", v.textEditable = null !== (p = e.textEditable) && void 0 !== p && p, v
					}
				};
				i.a.set(y.$type, y);
				const b = {
					$type: "devvit.plugin.redditapi.flair.LinkFlairRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.LinkFlairRequest",
							subreddit: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: b.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.flair.LinkFlairRequest",
							subreddit: ""
						};
						return o.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(b.$type, b);
				const k = {
					$type: "devvit.plugin.redditapi.flair.SelectFlairRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.backgroundColor && t.uint32(18).string(e.backgroundColor), "" !== e.cssClass && t.uint32(26).string(e.cssClass), "" !== e.flairTemplateId && t.uint32(34).string(e.flairTemplateId), "" !== e.link && t.uint32(42).string(e.link), "" !== e.name && t.uint32(50).string(e.name), "" !== e.returnRtjson && t.uint32(58).string(e.returnRtjson), "" !== e.text && t.uint32(66).string(e.text), "" !== e.textColor && t.uint32(74).string(e.textColor), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.SelectFlairRequest",
							subreddit: "",
							backgroundColor: "",
							cssClass: "",
							flairTemplateId: "",
							link: "",
							name: "",
							returnRtjson: "",
							text: "",
							textColor: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.backgroundColor = o.string();
									break;
								case 3:
									r.cssClass = o.string();
									break;
								case 4:
									r.flairTemplateId = o.string();
									break;
								case 5:
									r.link = o.string();
									break;
								case 6:
									r.name = o.string();
									break;
								case 7:
									r.returnRtjson = o.string();
									break;
								case 8:
									r.text = o.string();
									break;
								case 9:
									r.textColor = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: k.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						backgroundColor: F(e.backgroundColor) ? String(e.backgroundColor) : "",
						cssClass: F(e.cssClass) ? String(e.cssClass) : "",
						flairTemplateId: F(e.flairTemplateId) ? String(e.flairTemplateId) : "",
						link: F(e.link) ? String(e.link) : "",
						name: F(e.name) ? String(e.name) : "",
						returnRtjson: F(e.returnRtjson) ? String(e.returnRtjson) : "",
						text: F(e.text) ? String(e.text) : "",
						textColor: F(e.textColor) ? String(e.textColor) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.backgroundColor && (t.backgroundColor = e.backgroundColor), void 0 !== e.cssClass && (t.cssClass = e.cssClass), void 0 !== e.flairTemplateId && (t.flairTemplateId = e.flairTemplateId), void 0 !== e.link && (t.link = e.link), void 0 !== e.name && (t.name = e.name), void 0 !== e.returnRtjson && (t.returnRtjson = e.returnRtjson), void 0 !== e.text && (t.text = e.text), void 0 !== e.textColor && (t.textColor = e.textColor), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l;
						const u = {
							$type: "devvit.plugin.redditapi.flair.SelectFlairRequest",
							subreddit: "",
							backgroundColor: "",
							cssClass: "",
							flairTemplateId: "",
							link: "",
							name: "",
							returnRtjson: "",
							text: "",
							textColor: ""
						};
						return u.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", u.backgroundColor = null !== (o = e.backgroundColor) && void 0 !== o ? o : "", u.cssClass = null !== (i = e.cssClass) && void 0 !== i ? i : "", u.flairTemplateId = null !== (r = e.flairTemplateId) && void 0 !== r ? r : "", u.link = null !== (n = e.link) && void 0 !== n ? n : "", u.name = null !== (a = e.name) && void 0 !== a ? a : "", u.returnRtjson = null !== (s = e.returnRtjson) && void 0 !== s ? s : "", u.text = null !== (d = e.text) && void 0 !== d ? d : "", u.textColor = null !== (l = e.textColor) && void 0 !== l ? l : "", u
					}
				};
				i.a.set(k.$type, k);
				const S = {
					$type: "devvit.plugin.redditapi.flair.SetFlairEnabledRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), !0 === e.flairEnabled && t.uint32(16).bool(e.flairEnabled), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.SetFlairEnabledRequest",
							subreddit: "",
							flairEnabled: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.flairEnabled = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: S.$type,
						subreddit: F(e.subreddit) ? String(e.subreddit) : "",
						flairEnabled: !!F(e.flairEnabled) && Boolean(e.flairEnabled)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.flairEnabled && (t.flairEnabled = e.flairEnabled), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.flair.SetFlairEnabledRequest",
							subreddit: "",
							flairEnabled: !1
						};
						return i.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", i.flairEnabled = null !== (o = e.flairEnabled) && void 0 !== o && o, i
					}
				};
				i.a.set(S.$type, S);
				const w = {
					$type: "devvit.plugin.redditapi.flair.FlairObject",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						void 0 !== e.allowableContent && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.allowableContent
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.text && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.text
						}, t.uint32(18).fork()).ldelim(), void 0 !== e.textColor && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.textColor
						}, t.uint32(26).fork()).ldelim(), !0 === e.modOnly && t.uint32(32).bool(e.modOnly), void 0 !== e.backgroundColor && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.backgroundColor
						}, t.uint32(42).fork()).ldelim(), void 0 !== e.id && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.id
						}, t.uint32(50).fork()).ldelim(), void 0 !== e.cssClass && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.cssClass
						}, t.uint32(58).fork()).ldelim(), 0 !== e.maxEmojis && t.uint32(64).int64(e.maxEmojis);
						for (const o of e.richtext) d.d.encode({
							$type: "google.protobuf.StringValue",
							value: o
						}, t.uint32(74).fork()).ldelim();
						return !0 === e.textEditable && t.uint32(80).bool(e.textEditable), !0 === e.overrideCss && t.uint32(88).bool(e.overrideCss), void 0 !== e.type && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.type
						}, t.uint32(98).fork()).ldelim(), void 0 !== e.flairType && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairType
						}, t.uint32(106).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairObject",
							allowableContent: void 0,
							text: void 0,
							textColor: void 0,
							modOnly: !1,
							backgroundColor: void 0,
							id: void 0,
							cssClass: void 0,
							maxEmojis: 0,
							richtext: [],
							textEditable: !1,
							overrideCss: !1,
							type: void 0,
							flairType: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.allowableContent = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.text = d.d.decode(o, o.uint32()).value;
									break;
								case 3:
									r.textColor = d.d.decode(o, o.uint32()).value;
									break;
								case 4:
									r.modOnly = o.bool();
									break;
								case 5:
									r.backgroundColor = d.d.decode(o, o.uint32()).value;
									break;
								case 6:
									r.id = d.d.decode(o, o.uint32()).value;
									break;
								case 7:
									r.cssClass = d.d.decode(o, o.uint32()).value;
									break;
								case 8:
									r.maxEmojis = x(o.int64());
									break;
								case 9:
									r.richtext.push(d.d.decode(o, o.uint32()).value);
									break;
								case 10:
									r.textEditable = o.bool();
									break;
								case 11:
									r.overrideCss = o.bool();
									break;
								case 12:
									r.type = d.d.decode(o, o.uint32()).value;
									break;
								case 13:
									r.flairType = d.d.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: w.$type,
						allowableContent: F(e.allowableContent) ? String(e.allowableContent) : void 0,
						text: F(e.text) ? String(e.text) : void 0,
						textColor: F(e.textColor) ? String(e.textColor) : void 0,
						modOnly: !!F(e.modOnly) && Boolean(e.modOnly),
						backgroundColor: F(e.backgroundColor) ? String(e.backgroundColor) : void 0,
						id: F(e.id) ? String(e.id) : void 0,
						cssClass: F(e.cssClass) ? String(e.cssClass) : void 0,
						maxEmojis: F(e.maxEmojis) ? Number(e.maxEmojis) : 0,
						richtext: Array.isArray(null == e ? void 0 : e.richtext) ? e.richtext.map(e => String(e)) : [],
						textEditable: !!F(e.textEditable) && Boolean(e.textEditable),
						overrideCss: !!F(e.overrideCss) && Boolean(e.overrideCss),
						type: F(e.type) ? String(e.type) : void 0,
						flairType: F(e.flairType) ? String(e.flairType) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.allowableContent && (t.allowableContent = e.allowableContent), void 0 !== e.text && (t.text = e.text), void 0 !== e.textColor && (t.textColor = e.textColor), void 0 !== e.modOnly && (t.modOnly = e.modOnly), void 0 !== e.backgroundColor && (t.backgroundColor = e.backgroundColor), void 0 !== e.id && (t.id = e.id), void 0 !== e.cssClass && (t.cssClass = e.cssClass), void 0 !== e.maxEmojis && (t.maxEmojis = Math.round(e.maxEmojis)), e.richtext ? t.richtext = e.richtext.map(e => e) : t.richtext = [], void 0 !== e.textEditable && (t.textEditable = e.textEditable), void 0 !== e.overrideCss && (t.overrideCss = e.overrideCss), void 0 !== e.type && (t.type = e.type), void 0 !== e.flairType && (t.flairType = e.flairType), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u, c, p, v;
						const m = {
							$type: "devvit.plugin.redditapi.flair.FlairObject",
							allowableContent: void 0,
							text: void 0,
							textColor: void 0,
							modOnly: !1,
							backgroundColor: void 0,
							id: void 0,
							cssClass: void 0,
							maxEmojis: 0,
							richtext: [],
							textEditable: !1,
							overrideCss: !1,
							type: void 0,
							flairType: void 0
						};
						return m.allowableContent = null !== (t = e.allowableContent) && void 0 !== t ? t : void 0, m.text = null !== (o = e.text) && void 0 !== o ? o : void 0, m.textColor = null !== (i = e.textColor) && void 0 !== i ? i : void 0, m.modOnly = null !== (r = e.modOnly) && void 0 !== r && r, m.backgroundColor = null !== (n = e.backgroundColor) && void 0 !== n ? n : void 0, m.id = null !== (a = e.id) && void 0 !== a ? a : void 0, m.cssClass = null !== (s = e.cssClass) && void 0 !== s ? s : void 0, m.maxEmojis = null !== (d = e.maxEmojis) && void 0 !== d ? d : 0, m.richtext = (null === (l = e.richtext) || void 0 === l ? void 0 : l.map(e => e)) || [], m.textEditable = null !== (u = e.textEditable) && void 0 !== u && u, m.overrideCss = null !== (c = e.overrideCss) && void 0 !== c && c, m.type = null !== (p = e.type) && void 0 !== p ? p : void 0, m.flairType = null !== (v = e.flairType) && void 0 !== v ? v : void 0, m
					}
				};
				i.a.set(w.$type, w);
				const O = {
					$type: "devvit.plugin.redditapi.flair.FlairArray",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						for (const o of e.flair) w.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairArray",
							flair: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.flair.push(w.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: O.$type,
						flair: Array.isArray(null == e ? void 0 : e.flair) ? e.flair.map(e => w.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.flair ? t.flair = e.flair.map(e => e ? w.toJSON(e) : void 0) : t.flair = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.flair.FlairArray",
							flair: []
						};
						return o.flair = (null === (t = e.flair) || void 0 === t ? void 0 : t.map(e => w.fromPartial(e))) || [], o
					}
				};
				i.a.set(O.$type, O);
				const T = {
					$type: "devvit.plugin.redditapi.flair.FlairSelectorResponseOption",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return void 0 !== e.flairCssClass && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairCssClass
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.flairTemplateId && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairTemplateId
						}, t.uint32(18).fork()).ldelim(), void 0 !== e.flairText && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairText
						}, t.uint32(26).fork()).ldelim(), void 0 !== e.flairTextEditable && d.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.flairTextEditable
						}, t.uint32(34).fork()).ldelim(), void 0 !== e.flairPosition && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairPosition
						}, t.uint32(42).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairSelectorResponseOption",
							flairCssClass: void 0,
							flairTemplateId: void 0,
							flairText: void 0,
							flairTextEditable: void 0,
							flairPosition: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.flairCssClass = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.flairTemplateId = d.d.decode(o, o.uint32()).value;
									break;
								case 3:
									r.flairText = d.d.decode(o, o.uint32()).value;
									break;
								case 4:
									r.flairTextEditable = d.a.decode(o, o.uint32()).value;
									break;
								case 5:
									r.flairPosition = d.d.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: T.$type,
						flairCssClass: F(e.flairCssClass) ? String(e.flairCssClass) : void 0,
						flairTemplateId: F(e.flairTemplateId) ? String(e.flairTemplateId) : void 0,
						flairText: F(e.flairText) ? String(e.flairText) : void 0,
						flairTextEditable: F(e.flairTextEditable) ? Boolean(e.flairTextEditable) : void 0,
						flairPosition: F(e.flairPosition) ? String(e.flairPosition) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.flairCssClass && (t.flairCssClass = e.flairCssClass), void 0 !== e.flairTemplateId && (t.flairTemplateId = e.flairTemplateId), void 0 !== e.flairText && (t.flairText = e.flairText), void 0 !== e.flairTextEditable && (t.flairTextEditable = e.flairTextEditable), void 0 !== e.flairPosition && (t.flairPosition = e.flairPosition), t
					},
					fromPartial(e) {
						var t, o, i, r, n;
						const a = {
							$type: "devvit.plugin.redditapi.flair.FlairSelectorResponseOption",
							flairCssClass: void 0,
							flairTemplateId: void 0,
							flairText: void 0,
							flairTextEditable: void 0,
							flairPosition: void 0
						};
						return a.flairCssClass = null !== (t = e.flairCssClass) && void 0 !== t ? t : void 0, a.flairTemplateId = null !== (o = e.flairTemplateId) && void 0 !== o ? o : void 0, a.flairText = null !== (i = e.flairText) && void 0 !== i ? i : void 0, a.flairTextEditable = null !== (r = e.flairTextEditable) && void 0 !== r ? r : void 0, a.flairPosition = null !== (n = e.flairPosition) && void 0 !== n ? n : void 0, a
					}
				};
				i.a.set(T.$type, T);
				const N = {
					$type: "devvit.plugin.redditapi.flair.FlairSelectorResponse",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						void 0 !== e.current && T.encode(e.current, t.uint32(10).fork()).ldelim();
						for (const o of e.choices) T.encode(o, t.uint32(18).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairSelectorResponse",
							current: void 0,
							choices: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.current = T.decode(o, o.uint32());
									break;
								case 2:
									r.choices.push(T.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: N.$type,
						current: F(e.current) ? T.fromJSON(e.current) : void 0,
						choices: Array.isArray(null == e ? void 0 : e.choices) ? e.choices.map(e => T.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.current && (t.current = e.current ? T.toJSON(e.current) : void 0), e.choices ? t.choices = e.choices.map(e => e ? T.toJSON(e) : void 0) : t.choices = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.flair.FlairSelectorResponse",
							current: void 0,
							choices: []
						};
						return o.current = void 0 !== e.current && null !== e.current ? T.fromPartial(e.current) : void 0, o.choices = (null === (t = e.choices) || void 0 === t ? void 0 : t.map(e => T.fromPartial(e))) || [], o
					}
				};
				i.a.set(N.$type, N);
				const R = {
					$type: "devvit.plugin.redditapi.flair.UserFlair",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return void 0 !== e.flairCssClass && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairCssClass
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.user && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.user
						}, t.uint32(18).fork()).ldelim(), void 0 !== e.flairText && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.flairText
						}, t.uint32(26).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.UserFlair",
							flairCssClass: void 0,
							user: void 0,
							flairText: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.flairCssClass = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.user = d.d.decode(o, o.uint32()).value;
									break;
								case 3:
									r.flairText = d.d.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: R.$type,
						flairCssClass: F(e.flairCssClass) ? String(e.flairCssClass) : void 0,
						user: F(e.user) ? String(e.user) : void 0,
						flairText: F(e.flairText) ? String(e.flairText) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.flairCssClass && (t.flairCssClass = e.flairCssClass), void 0 !== e.user && (t.user = e.user), void 0 !== e.flairText && (t.flairText = e.flairText), t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "devvit.plugin.redditapi.flair.UserFlair",
							flairCssClass: void 0,
							user: void 0,
							flairText: void 0
						};
						return r.flairCssClass = null !== (t = e.flairCssClass) && void 0 !== t ? t : void 0, r.user = null !== (o = e.user) && void 0 !== o ? o : void 0, r.flairText = null !== (i = e.flairText) && void 0 !== i ? i : void 0, r
					}
				};
				i.a.set(R.$type, R);
				const $ = {
					$type: "devvit.plugin.redditapi.flair.FlairListResponse",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						for (const o of e.users) R.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairListResponse",
							users: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.users.push(R.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: $.$type,
						users: Array.isArray(null == e ? void 0 : e.users) ? e.users.map(e => R.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.users ? t.users = e.users.map(e => e ? R.toJSON(e) : void 0) : t.users = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.flair.FlairListResponse",
							users: []
						};
						return o.users = (null === (t = e.users) || void 0 === t ? void 0 : t.map(e => R.fromPartial(e))) || [], o
					}
				};
				i.a.set($.$type, $);
				const C = {
					$type: "devvit.plugin.redditapi.flair.FlairCsvResultError",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return void 0 !== e.css && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.css
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.row && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.row
						}, t.uint32(18).fork()).ldelim(), void 0 !== e.user && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.user
						}, t.uint32(26).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResultError",
							css: void 0,
							row: void 0,
							user: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.css = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.row = d.d.decode(o, o.uint32()).value;
									break;
								case 3:
									r.user = d.d.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: C.$type,
						css: F(e.css) ? String(e.css) : void 0,
						row: F(e.row) ? String(e.row) : void 0,
						user: F(e.user) ? String(e.user) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.css && (t.css = e.css), void 0 !== e.row && (t.row = e.row), void 0 !== e.user && (t.user = e.user), t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResultError",
							css: void 0,
							row: void 0,
							user: void 0
						};
						return r.css = null !== (t = e.css) && void 0 !== t ? t : void 0, r.row = null !== (o = e.row) && void 0 !== o ? o : void 0, r.user = null !== (i = e.user) && void 0 !== i ? i : void 0, r
					}
				};
				i.a.set(C.$type, C);
				const I = {
					$type: "devvit.plugin.redditapi.flair.FlairCsvResultWarning",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return void 0 !== e.text && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.text
						}, t.uint32(10).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResultWarning",
							text: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.text = d.d.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: I.$type,
						text: F(e.text) ? String(e.text) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.text && (t.text = e.text), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResultWarning",
							text: void 0
						};
						return o.text = null !== (t = e.text) && void 0 !== t ? t : void 0, o
					}
				};
				i.a.set(I.$type, I);
				const E = {
					$type: "devvit.plugin.redditapi.flair.FlairCsvResult",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return void 0 !== e.status && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.status
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.ok && d.a.encode({
							$type: "google.protobuf.BoolValue",
							value: e.ok
						}, t.uint32(18).fork()).ldelim(), void 0 !== e.errors && C.encode(e.errors, t.uint32(26).fork()).ldelim(), void 0 !== e.warnings && I.encode(e.warnings, t.uint32(34).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResult",
							status: void 0,
							ok: void 0,
							errors: void 0,
							warnings: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.status = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.ok = d.a.decode(o, o.uint32()).value;
									break;
								case 3:
									r.errors = C.decode(o, o.uint32());
									break;
								case 4:
									r.warnings = I.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: E.$type,
						status: F(e.status) ? String(e.status) : void 0,
						ok: F(e.ok) ? Boolean(e.ok) : void 0,
						errors: F(e.errors) ? C.fromJSON(e.errors) : void 0,
						warnings: F(e.warnings) ? I.fromJSON(e.warnings) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.status && (t.status = e.status), void 0 !== e.ok && (t.ok = e.ok), void 0 !== e.errors && (t.errors = e.errors ? C.toJSON(e.errors) : void 0), void 0 !== e.warnings && (t.warnings = e.warnings ? I.toJSON(e.warnings) : void 0), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResult",
							status: void 0,
							ok: void 0,
							errors: void 0,
							warnings: void 0
						};
						return i.status = null !== (t = e.status) && void 0 !== t ? t : void 0, i.ok = null !== (o = e.ok) && void 0 !== o ? o : void 0, i.errors = void 0 !== e.errors && null !== e.errors ? C.fromPartial(e.errors) : void 0, i.warnings = void 0 !== e.warnings && null !== e.warnings ? I.fromPartial(e.warnings) : void 0, i
					}
				};
				i.a.set(E.$type, E);
				const A = {
					$type: "devvit.plugin.redditapi.flair.FlairCsvResponse",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						for (const o of e.result) E.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResponse",
							result: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.result.push(E.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: A.$type,
						result: Array.isArray(null == e ? void 0 : e.result) ? e.result.map(e => E.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.result ? t.result = e.result.map(e => e ? E.toJSON(e) : void 0) : t.result = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.flair.FlairCsvResponse",
							result: []
						};
						return o.result = (null === (t = e.result) || void 0 === t ? void 0 : t.map(e => E.fromPartial(e))) || [], o
					}
				};
				i.a.set(A.$type, A);
				var P = (() => {
					if (void 0 !== P) return P;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function x(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new P.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function F(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/redditapi/listings/listings_msg.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return l
				})), o.d(t, "j", (function() {
					return u
				})), o.d(t, "d", (function() {
					return c
				})), o.d(t, "c", (function() {
					return p
				})), o.d(t, "b", (function() {
					return v
				})), o.d(t, "e", (function() {
					return m
				})), o.d(t, "f", (function() {
					return f
				})), o.d(t, "g", (function() {
					return g
				})), o.d(t, "i", (function() {
					return h
				})), o.d(t, "h", (function() {
					return y
				})), o.d(t, "k", (function() {
					return b
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/devvit/plugin/redditapi/common/common_msg.js");
				const l = {
					$type: "devvit.plugin.redditapi.listings.GetBestRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.after && t.uint32(10).string(e.after), "" !== e.before && t.uint32(18).string(e.before), 0 !== e.count && t.uint32(24).int64(e.count), 0 !== e.limit && t.uint32(32).int64(e.limit), "" !== e.show && t.uint32(42).string(e.show), !0 === e.srDetail && t.uint32(48).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetBestRequest",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.after = o.string();
									break;
								case 2:
									r.before = o.string();
									break;
								case 3:
									r.count = S(o.int64());
									break;
								case 4:
									r.limit = S(o.int64());
									break;
								case 5:
									r.show = o.string();
									break;
								case 6:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						after: w(e.after) ? String(e.after) : "",
						before: w(e.before) ? String(e.before) : "",
						count: w(e.count) ? Number(e.count) : 0,
						limit: w(e.limit) ? Number(e.limit) : 0,
						show: w(e.show) ? String(e.show) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a;
						const s = {
							$type: "devvit.plugin.redditapi.listings.GetBestRequest",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							srDetail: !1
						};
						return s.after = null !== (t = e.after) && void 0 !== t ? t : "", s.before = null !== (o = e.before) && void 0 !== o ? o : "", s.count = null !== (i = e.count) && void 0 !== i ? i : 0, s.limit = null !== (r = e.limit) && void 0 !== r ? r : 0, s.show = null !== (n = e.show) && void 0 !== n ? n : "", s.srDetail = null !== (a = e.srDetail) && void 0 !== a && a, s
					}
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "devvit.plugin.redditapi.listings.GetSortRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.sort && t.uint32(18).string(e.sort), "" !== e.after && t.uint32(26).string(e.after), "" !== e.before && t.uint32(34).string(e.before), 0 !== e.limit && t.uint32(40).int64(e.limit), 0 !== e.count && t.uint32(48).int64(e.count), "" !== e.show && t.uint32(58).string(e.show), !0 === e.srDetail && t.uint32(64).bool(e.srDetail), "" !== e.t && t.uint32(74).string(e.t), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetSortRequest",
							subreddit: "",
							sort: "",
							after: "",
							before: "",
							limit: 0,
							count: 0,
							show: "",
							srDetail: !1,
							t: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.sort = o.string();
									break;
								case 3:
									r.after = o.string();
									break;
								case 4:
									r.before = o.string();
									break;
								case 5:
									r.limit = S(o.int64());
									break;
								case 6:
									r.count = S(o.int64());
									break;
								case 7:
									r.show = o.string();
									break;
								case 8:
									r.srDetail = o.bool();
									break;
								case 9:
									r.t = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						subreddit: w(e.subreddit) ? String(e.subreddit) : "",
						sort: w(e.sort) ? String(e.sort) : "",
						after: w(e.after) ? String(e.after) : "",
						before: w(e.before) ? String(e.before) : "",
						limit: w(e.limit) ? Number(e.limit) : 0,
						count: w(e.count) ? Number(e.count) : 0,
						show: w(e.show) ? String(e.show) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail),
						t: w(e.t) ? String(e.t) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.sort && (t.sort = e.sort), void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), void 0 !== e.t && (t.t = e.t), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l;
						const u = {
							$type: "devvit.plugin.redditapi.listings.GetSortRequest",
							subreddit: "",
							sort: "",
							after: "",
							before: "",
							limit: 0,
							count: 0,
							show: "",
							srDetail: !1,
							t: ""
						};
						return u.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", u.sort = null !== (o = e.sort) && void 0 !== o ? o : "", u.after = null !== (i = e.after) && void 0 !== i ? i : "", u.before = null !== (r = e.before) && void 0 !== r ? r : "", u.limit = null !== (n = e.limit) && void 0 !== n ? n : 0, u.count = null !== (a = e.count) && void 0 !== a ? a : 0, u.show = null !== (s = e.show) && void 0 !== s ? s : "", u.srDetail = null !== (d = e.srDetail) && void 0 !== d && d, u.t = null !== (l = e.t) && void 0 !== l ? l : "", u
					}
				};
				i.a.set(u.$type, u);
				const c = {
					$type: "devvit.plugin.redditapi.listings.GetCommentsRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.comment && t.uint32(18).string(e.comment), 0 !== e.context && t.uint32(24).int64(e.context), 0 !== e.depth && t.uint32(32).int64(e.depth), 0 !== e.limit && t.uint32(40).int64(e.limit), !0 === e.showedits && t.uint32(48).bool(e.showedits), !0 === e.showmedia && t.uint32(56).bool(e.showmedia), !0 === e.showmore && t.uint32(64).bool(e.showmore), !0 === e.showtitle && t.uint32(72).bool(e.showtitle), "" !== e.sort && t.uint32(82).string(e.sort), !0 === e.srDetail && t.uint32(88).bool(e.srDetail), "" !== e.theme && t.uint32(98).string(e.theme), !0 === e.threaded && t.uint32(104).bool(e.threaded), 0 !== e.truncate && t.uint32(112).int64(e.truncate), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetCommentsRequest",
							subreddit: "",
							comment: "",
							context: 0,
							depth: 0,
							limit: 0,
							showedits: !1,
							showmedia: !1,
							showmore: !1,
							showtitle: !1,
							sort: "",
							srDetail: !1,
							theme: "",
							threaded: !1,
							truncate: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.comment = o.string();
									break;
								case 3:
									r.context = S(o.int64());
									break;
								case 4:
									r.depth = S(o.int64());
									break;
								case 5:
									r.limit = S(o.int64());
									break;
								case 6:
									r.showedits = o.bool();
									break;
								case 7:
									r.showmedia = o.bool();
									break;
								case 8:
									r.showmore = o.bool();
									break;
								case 9:
									r.showtitle = o.bool();
									break;
								case 10:
									r.sort = o.string();
									break;
								case 11:
									r.srDetail = o.bool();
									break;
								case 12:
									r.theme = o.string();
									break;
								case 13:
									r.threaded = o.bool();
									break;
								case 14:
									r.truncate = S(o.int64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						subreddit: w(e.subreddit) ? String(e.subreddit) : "",
						comment: w(e.comment) ? String(e.comment) : "",
						context: w(e.context) ? Number(e.context) : 0,
						depth: w(e.depth) ? Number(e.depth) : 0,
						limit: w(e.limit) ? Number(e.limit) : 0,
						showedits: !!w(e.showedits) && Boolean(e.showedits),
						showmedia: !!w(e.showmedia) && Boolean(e.showmedia),
						showmore: !!w(e.showmore) && Boolean(e.showmore),
						showtitle: !!w(e.showtitle) && Boolean(e.showtitle),
						sort: w(e.sort) ? String(e.sort) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail),
						theme: w(e.theme) ? String(e.theme) : "",
						threaded: !!w(e.threaded) && Boolean(e.threaded),
						truncate: w(e.truncate) ? Number(e.truncate) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.comment && (t.comment = e.comment), void 0 !== e.context && (t.context = Math.round(e.context)), void 0 !== e.depth && (t.depth = Math.round(e.depth)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.showedits && (t.showedits = e.showedits), void 0 !== e.showmedia && (t.showmedia = e.showmedia), void 0 !== e.showmore && (t.showmore = e.showmore), void 0 !== e.showtitle && (t.showtitle = e.showtitle), void 0 !== e.sort && (t.sort = e.sort), void 0 !== e.srDetail && (t.srDetail = e.srDetail), void 0 !== e.theme && (t.theme = e.theme), void 0 !== e.threaded && (t.threaded = e.threaded), void 0 !== e.truncate && (t.truncate = Math.round(e.truncate)), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u, c, p, v, m;
						const f = {
							$type: "devvit.plugin.redditapi.listings.GetCommentsRequest",
							subreddit: "",
							comment: "",
							context: 0,
							depth: 0,
							limit: 0,
							showedits: !1,
							showmedia: !1,
							showmore: !1,
							showtitle: !1,
							sort: "",
							srDetail: !1,
							theme: "",
							threaded: !1,
							truncate: 0
						};
						return f.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", f.comment = null !== (o = e.comment) && void 0 !== o ? o : "", f.context = null !== (i = e.context) && void 0 !== i ? i : 0, f.depth = null !== (r = e.depth) && void 0 !== r ? r : 0, f.limit = null !== (n = e.limit) && void 0 !== n ? n : 0, f.showedits = null !== (a = e.showedits) && void 0 !== a && a, f.showmedia = null !== (s = e.showmedia) && void 0 !== s && s, f.showmore = null !== (d = e.showmore) && void 0 !== d && d, f.showtitle = null !== (l = e.showtitle) && void 0 !== l && l, f.sort = null !== (u = e.sort) && void 0 !== u ? u : "", f.srDetail = null !== (c = e.srDetail) && void 0 !== c && c, f.theme = null !== (p = e.theme) && void 0 !== p ? p : "", f.threaded = null !== (v = e.threaded) && void 0 !== v && v, f.truncate = null !== (m = e.truncate) && void 0 !== m ? m : 0, f
					}
				};
				i.a.set(c.$type, c);
				const p = {
					$type: "devvit.plugin.redditapi.listings.GetCommentsArticleRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.article && t.uint32(10).string(e.article), "" !== e.comment && t.uint32(18).string(e.comment), 0 !== e.context && t.uint32(24).int64(e.context), 0 !== e.depth && t.uint32(32).int64(e.depth), 0 !== e.limit && t.uint32(40).int64(e.limit), !0 === e.showedits && t.uint32(48).bool(e.showedits), !0 === e.showmedia && t.uint32(56).bool(e.showmedia), !0 === e.showmore && t.uint32(64).bool(e.showmore), !0 === e.showtitle && t.uint32(72).bool(e.showtitle), "" !== e.sort && t.uint32(82).string(e.sort), !0 === e.srDetail && t.uint32(88).bool(e.srDetail), "" !== e.theme && t.uint32(98).string(e.theme), !0 === e.threaded && t.uint32(104).bool(e.threaded), 0 !== e.truncate && t.uint32(112).int64(e.truncate), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetCommentsArticleRequest",
							article: "",
							comment: "",
							context: 0,
							depth: 0,
							limit: 0,
							showedits: !1,
							showmedia: !1,
							showmore: !1,
							showtitle: !1,
							sort: "",
							srDetail: !1,
							theme: "",
							threaded: !1,
							truncate: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.article = o.string();
									break;
								case 2:
									r.comment = o.string();
									break;
								case 3:
									r.context = S(o.int64());
									break;
								case 4:
									r.depth = S(o.int64());
									break;
								case 5:
									r.limit = S(o.int64());
									break;
								case 6:
									r.showedits = o.bool();
									break;
								case 7:
									r.showmedia = o.bool();
									break;
								case 8:
									r.showmore = o.bool();
									break;
								case 9:
									r.showtitle = o.bool();
									break;
								case 10:
									r.sort = o.string();
									break;
								case 11:
									r.srDetail = o.bool();
									break;
								case 12:
									r.theme = o.string();
									break;
								case 13:
									r.threaded = o.bool();
									break;
								case 14:
									r.truncate = S(o.int64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: p.$type,
						article: w(e.article) ? String(e.article) : "",
						comment: w(e.comment) ? String(e.comment) : "",
						context: w(e.context) ? Number(e.context) : 0,
						depth: w(e.depth) ? Number(e.depth) : 0,
						limit: w(e.limit) ? Number(e.limit) : 0,
						showedits: !!w(e.showedits) && Boolean(e.showedits),
						showmedia: !!w(e.showmedia) && Boolean(e.showmedia),
						showmore: !!w(e.showmore) && Boolean(e.showmore),
						showtitle: !!w(e.showtitle) && Boolean(e.showtitle),
						sort: w(e.sort) ? String(e.sort) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail),
						theme: w(e.theme) ? String(e.theme) : "",
						threaded: !!w(e.threaded) && Boolean(e.threaded),
						truncate: w(e.truncate) ? Number(e.truncate) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.article && (t.article = e.article), void 0 !== e.comment && (t.comment = e.comment), void 0 !== e.context && (t.context = Math.round(e.context)), void 0 !== e.depth && (t.depth = Math.round(e.depth)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.showedits && (t.showedits = e.showedits), void 0 !== e.showmedia && (t.showmedia = e.showmedia), void 0 !== e.showmore && (t.showmore = e.showmore), void 0 !== e.showtitle && (t.showtitle = e.showtitle), void 0 !== e.sort && (t.sort = e.sort), void 0 !== e.srDetail && (t.srDetail = e.srDetail), void 0 !== e.theme && (t.theme = e.theme), void 0 !== e.threaded && (t.threaded = e.threaded), void 0 !== e.truncate && (t.truncate = Math.round(e.truncate)), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u, c, p, v, m;
						const f = {
							$type: "devvit.plugin.redditapi.listings.GetCommentsArticleRequest",
							article: "",
							comment: "",
							context: 0,
							depth: 0,
							limit: 0,
							showedits: !1,
							showmedia: !1,
							showmore: !1,
							showtitle: !1,
							sort: "",
							srDetail: !1,
							theme: "",
							threaded: !1,
							truncate: 0
						};
						return f.article = null !== (t = e.article) && void 0 !== t ? t : "", f.comment = null !== (o = e.comment) && void 0 !== o ? o : "", f.context = null !== (i = e.context) && void 0 !== i ? i : 0, f.depth = null !== (r = e.depth) && void 0 !== r ? r : 0, f.limit = null !== (n = e.limit) && void 0 !== n ? n : 0, f.showedits = null !== (a = e.showedits) && void 0 !== a && a, f.showmedia = null !== (s = e.showmedia) && void 0 !== s && s, f.showmore = null !== (d = e.showmore) && void 0 !== d && d, f.showtitle = null !== (l = e.showtitle) && void 0 !== l && l, f.sort = null !== (u = e.sort) && void 0 !== u ? u : "", f.srDetail = null !== (c = e.srDetail) && void 0 !== c && c, f.theme = null !== (p = e.theme) && void 0 !== p ? p : "", f.threaded = null !== (v = e.threaded) && void 0 !== v && v, f.truncate = null !== (m = e.truncate) && void 0 !== m ? m : 0, f
					}
				};
				i.a.set(p.$type, p);
				const v = {
					$type: "devvit.plugin.redditapi.listings.GetByIdRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.postIds && t.uint32(10).string(e.postIds), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetByIdRequest",
							postIds: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.postIds = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: v.$type,
						postIds: w(e.postIds) ? String(e.postIds) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.postIds && (t.postIds = e.postIds), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.listings.GetByIdRequest",
							postIds: ""
						};
						return o.postIds = null !== (t = e.postIds) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(v.$type, v);
				const m = {
					$type: "devvit.plugin.redditapi.listings.GetDuplicatesRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.article && t.uint32(10).string(e.article), "" !== e.before && t.uint32(18).string(e.before), "" !== e.after && t.uint32(26).string(e.after), 0 !== e.limit && t.uint32(32).int64(e.limit), "" !== e.sort && t.uint32(42).string(e.sort), "" !== e.sr && t.uint32(50).string(e.sr), 0 !== e.count && t.uint32(56).int64(e.count), !0 === e.crosspostsOnly && t.uint32(64).bool(e.crosspostsOnly), "" !== e.show && t.uint32(74).string(e.show), !0 === e.srDetail && t.uint32(80).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetDuplicatesRequest",
							article: "",
							before: "",
							after: "",
							limit: 0,
							sort: "",
							sr: "",
							count: 0,
							crosspostsOnly: !1,
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.article = o.string();
									break;
								case 2:
									r.before = o.string();
									break;
								case 3:
									r.after = o.string();
									break;
								case 4:
									r.limit = S(o.int64());
									break;
								case 5:
									r.sort = o.string();
									break;
								case 6:
									r.sr = o.string();
									break;
								case 7:
									r.count = S(o.int64());
									break;
								case 8:
									r.crosspostsOnly = o.bool();
									break;
								case 9:
									r.show = o.string();
									break;
								case 10:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: m.$type,
						article: w(e.article) ? String(e.article) : "",
						before: w(e.before) ? String(e.before) : "",
						after: w(e.after) ? String(e.after) : "",
						limit: w(e.limit) ? Number(e.limit) : 0,
						sort: w(e.sort) ? String(e.sort) : "",
						sr: w(e.sr) ? String(e.sr) : "",
						count: w(e.count) ? Number(e.count) : 0,
						crosspostsOnly: !!w(e.crosspostsOnly) && Boolean(e.crosspostsOnly),
						show: w(e.show) ? String(e.show) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.article && (t.article = e.article), void 0 !== e.before && (t.before = e.before), void 0 !== e.after && (t.after = e.after), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.sort && (t.sort = e.sort), void 0 !== e.sr && (t.sr = e.sr), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.crosspostsOnly && (t.crosspostsOnly = e.crosspostsOnly), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u;
						const c = {
							$type: "devvit.plugin.redditapi.listings.GetDuplicatesRequest",
							article: "",
							before: "",
							after: "",
							limit: 0,
							sort: "",
							sr: "",
							count: 0,
							crosspostsOnly: !1,
							show: "",
							srDetail: !1
						};
						return c.article = null !== (t = e.article) && void 0 !== t ? t : "", c.before = null !== (o = e.before) && void 0 !== o ? o : "", c.after = null !== (i = e.after) && void 0 !== i ? i : "", c.limit = null !== (r = e.limit) && void 0 !== r ? r : 0, c.sort = null !== (n = e.sort) && void 0 !== n ? n : "", c.sr = null !== (a = e.sr) && void 0 !== a ? a : "", c.count = null !== (s = e.count) && void 0 !== s ? s : 0, c.crosspostsOnly = null !== (d = e.crosspostsOnly) && void 0 !== d && d, c.show = null !== (l = e.show) && void 0 !== l ? l : "", c.srDetail = null !== (u = e.srDetail) && void 0 !== u && u, c
					}
				};
				i.a.set(m.$type, m);
				const f = {
					$type: "devvit.plugin.redditapi.listings.GetHotRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.before && t.uint32(18).string(e.before), "" !== e.after && t.uint32(26).string(e.after), 0 !== e.limit && t.uint32(32).int64(e.limit), 0 !== e.count && t.uint32(40).int64(e.count), "" !== e.show && t.uint32(50).string(e.show), !0 === e.srDetail && t.uint32(56).bool(e.srDetail), "" !== e.g && t.uint32(66).string(e.g), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetHotRequest",
							subreddit: "",
							before: "",
							after: "",
							limit: 0,
							count: 0,
							show: "",
							srDetail: !1,
							g: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.before = o.string();
									break;
								case 3:
									r.after = o.string();
									break;
								case 4:
									r.limit = S(o.int64());
									break;
								case 5:
									r.count = S(o.int64());
									break;
								case 6:
									r.show = o.string();
									break;
								case 7:
									r.srDetail = o.bool();
									break;
								case 8:
									r.g = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: f.$type,
						subreddit: w(e.subreddit) ? String(e.subreddit) : "",
						before: w(e.before) ? String(e.before) : "",
						after: w(e.after) ? String(e.after) : "",
						limit: w(e.limit) ? Number(e.limit) : 0,
						count: w(e.count) ? Number(e.count) : 0,
						show: w(e.show) ? String(e.show) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail),
						g: w(e.g) ? String(e.g) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.before && (t.before = e.before), void 0 !== e.after && (t.after = e.after), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), void 0 !== e.g && (t.g = e.g), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d;
						const l = {
							$type: "devvit.plugin.redditapi.listings.GetHotRequest",
							subreddit: "",
							before: "",
							after: "",
							limit: 0,
							count: 0,
							show: "",
							srDetail: !1,
							g: ""
						};
						return l.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", l.before = null !== (o = e.before) && void 0 !== o ? o : "", l.after = null !== (i = e.after) && void 0 !== i ? i : "", l.limit = null !== (r = e.limit) && void 0 !== r ? r : 0, l.count = null !== (n = e.count) && void 0 !== n ? n : 0, l.show = null !== (a = e.show) && void 0 !== a ? a : "", l.srDetail = null !== (s = e.srDetail) && void 0 !== s && s, l.g = null !== (d = e.g) && void 0 !== d ? d : "", l
					}
				};
				i.a.set(f.$type, f);
				const g = {
					$type: "devvit.plugin.redditapi.listings.GetNewRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.before && t.uint32(18).string(e.before), "" !== e.after && t.uint32(26).string(e.after), 0 !== e.limit && t.uint32(32).int64(e.limit), 0 !== e.count && t.uint32(40).int64(e.count), "" !== e.show && t.uint32(50).string(e.show), !0 === e.srDetail && t.uint32(56).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetNewRequest",
							subreddit: "",
							before: "",
							after: "",
							limit: 0,
							count: 0,
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.before = o.string();
									break;
								case 3:
									r.after = o.string();
									break;
								case 4:
									r.limit = S(o.int64());
									break;
								case 5:
									r.count = S(o.int64());
									break;
								case 6:
									r.show = o.string();
									break;
								case 7:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: g.$type,
						subreddit: w(e.subreddit) ? String(e.subreddit) : "",
						before: w(e.before) ? String(e.before) : "",
						after: w(e.after) ? String(e.after) : "",
						limit: w(e.limit) ? Number(e.limit) : 0,
						count: w(e.count) ? Number(e.count) : 0,
						show: w(e.show) ? String(e.show) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.before && (t.before = e.before), void 0 !== e.after && (t.after = e.after), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s;
						const d = {
							$type: "devvit.plugin.redditapi.listings.GetNewRequest",
							subreddit: "",
							before: "",
							after: "",
							limit: 0,
							count: 0,
							show: "",
							srDetail: !1
						};
						return d.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", d.before = null !== (o = e.before) && void 0 !== o ? o : "", d.after = null !== (i = e.after) && void 0 !== i ? i : "", d.limit = null !== (r = e.limit) && void 0 !== r ? r : 0, d.count = null !== (n = e.count) && void 0 !== n ? n : 0, d.show = null !== (a = e.show) && void 0 !== a ? a : "", d.srDetail = null !== (s = e.srDetail) && void 0 !== s && s, d
					}
				};
				i.a.set(g.$type, g);
				const h = {
					$type: "devvit.plugin.redditapi.listings.GetRisingRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), "" !== e.after && t.uint32(18).string(e.after), "" !== e.before && t.uint32(26).string(e.before), 0 !== e.count && t.uint32(32).int64(e.count), 0 !== e.limit && t.uint32(40).int64(e.limit), "" !== e.show && t.uint32(50).string(e.show), !0 === e.srDetail && t.uint32(56).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetRisingRequest",
							subreddit: "",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								case 2:
									r.after = o.string();
									break;
								case 3:
									r.before = o.string();
									break;
								case 4:
									r.count = S(o.int64());
									break;
								case 5:
									r.limit = S(o.int64());
									break;
								case 6:
									r.show = o.string();
									break;
								case 7:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: h.$type,
						subreddit: w(e.subreddit) ? String(e.subreddit) : "",
						after: w(e.after) ? String(e.after) : "",
						before: w(e.before) ? String(e.before) : "",
						count: w(e.count) ? Number(e.count) : 0,
						limit: w(e.limit) ? Number(e.limit) : 0,
						show: w(e.show) ? String(e.show) : "",
						srDetail: !!w(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s;
						const d = {
							$type: "devvit.plugin.redditapi.listings.GetRisingRequest",
							subreddit: "",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							srDetail: !1
						};
						return d.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", d.after = null !== (o = e.after) && void 0 !== o ? o : "", d.before = null !== (i = e.before) && void 0 !== i ? i : "", d.count = null !== (r = e.count) && void 0 !== r ? r : 0, d.limit = null !== (n = e.limit) && void 0 !== n ? n : 0, d.show = null !== (a = e.show) && void 0 !== a ? a : "", d.srDetail = null !== (s = e.srDetail) && void 0 !== s && s, d
					}
				};
				i.a.set(h.$type, h);
				const y = {
					$type: "devvit.plugin.redditapi.listings.GetRandomRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.GetRandomRequest",
							subreddit: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: y.$type,
						subreddit: w(e.subreddit) ? String(e.subreddit) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.listings.GetRandomRequest",
							subreddit: ""
						};
						return o.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(y.$type, y);
				const b = {
					$type: "devvit.plugin.redditapi.listings.ListingResponse",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						for (const o of e.listings) d.c.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.listings.ListingResponse",
							listings: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.listings.push(d.c.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: b.$type,
						listings: Array.isArray(null == e ? void 0 : e.listings) ? e.listings.map(e => d.c.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.listings ? t.listings = e.listings.map(e => e ? d.c.toJSON(e) : void 0) : t.listings = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.listings.ListingResponse",
							listings: []
						};
						return o.listings = (null === (t = e.listings) || void 0 === t ? void 0 : t.map(e => d.c.fromPartial(e))) || [], o
					}
				};
				i.a.set(b.$type, b);
				var k = (() => {
					if (void 0 !== k) return k;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function S(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new k.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function w(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/redditapi/moderation/moderation_msg.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "b", (function() {
					return l
				})), o.d(t, "a", (function() {
					return u
				})), o.d(t, "d", (function() {
					return c
				})), o.d(t, "e", (function() {
					return p
				})), o.d(t, "f", (function() {
					return v
				})), o.d(t, "g", (function() {
					return m
				})), o.d(t, "h", (function() {
					return f
				})), o.d(t, "j", (function() {
					return g
				})), o.d(t, "i", (function() {
					return h
				})), o.d(t, "c", (function() {
					return y
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/google/protobuf/wrappers.js");
				const l = {
					$type: "devvit.plugin.redditapi.moderation.AboutLogRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.after && t.uint32(10).string(e.after), "" !== e.before && t.uint32(18).string(e.before), 0 !== e.count && t.uint32(24).int64(e.count), 0 !== e.limit && t.uint32(32).int64(e.limit), "" !== e.show && t.uint32(42).string(e.show), "" !== e.mod && t.uint32(50).string(e.mod), !0 === e.srDetail && t.uint32(56).bool(e.srDetail), "" !== e.type && t.uint32(66).string(e.type), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogRequest",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							mod: "",
							srDetail: !1,
							type: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.after = o.string();
									break;
								case 2:
									r.before = o.string();
									break;
								case 3:
									r.count = O(o.int64());
									break;
								case 4:
									r.limit = O(o.int64());
									break;
								case 5:
									r.show = o.string();
									break;
								case 6:
									r.mod = o.string();
									break;
								case 7:
									r.srDetail = o.bool();
									break;
								case 8:
									r.type = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						after: T(e.after) ? String(e.after) : "",
						before: T(e.before) ? String(e.before) : "",
						count: T(e.count) ? Number(e.count) : 0,
						limit: T(e.limit) ? Number(e.limit) : 0,
						show: T(e.show) ? String(e.show) : "",
						mod: T(e.mod) ? String(e.mod) : "",
						srDetail: !!T(e.srDetail) && Boolean(e.srDetail),
						type: T(e.type) ? String(e.type) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.show && (t.show = e.show), void 0 !== e.mod && (t.mod = e.mod), void 0 !== e.srDetail && (t.srDetail = e.srDetail), void 0 !== e.type && (t.type = e.type), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d;
						const l = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogRequest",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							mod: "",
							srDetail: !1,
							type: ""
						};
						return l.after = null !== (t = e.after) && void 0 !== t ? t : "", l.before = null !== (o = e.before) && void 0 !== o ? o : "", l.count = null !== (i = e.count) && void 0 !== i ? i : 0, l.limit = null !== (r = e.limit) && void 0 !== r ? r : 0, l.show = null !== (n = e.show) && void 0 !== n ? n : "", l.mod = null !== (a = e.mod) && void 0 !== a ? a : "", l.srDetail = null !== (s = e.srDetail) && void 0 !== s && s, l.type = null !== (d = e.type) && void 0 !== d ? d : "", l
					}
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "devvit.plugin.redditapi.moderation.AboutLocationRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.after && t.uint32(10).string(e.after), "" !== e.before && t.uint32(18).string(e.before), 0 !== e.count && t.uint32(24).int64(e.count), 0 !== e.limit && t.uint32(32).int64(e.limit), "" !== e.location && t.uint32(42).string(e.location), "" !== e.only && t.uint32(50).string(e.only), "" !== e.show && t.uint32(58).string(e.show), !0 === e.srDetail && t.uint32(64).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AboutLocationRequest",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							location: "",
							only: "",
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.after = o.string();
									break;
								case 2:
									r.before = o.string();
									break;
								case 3:
									r.count = O(o.int64());
									break;
								case 4:
									r.limit = O(o.int64());
									break;
								case 5:
									r.location = o.string();
									break;
								case 6:
									r.only = o.string();
									break;
								case 7:
									r.show = o.string();
									break;
								case 8:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						after: T(e.after) ? String(e.after) : "",
						before: T(e.before) ? String(e.before) : "",
						count: T(e.count) ? Number(e.count) : 0,
						limit: T(e.limit) ? Number(e.limit) : 0,
						location: T(e.location) ? String(e.location) : "",
						only: T(e.only) ? String(e.only) : "",
						show: T(e.show) ? String(e.show) : "",
						srDetail: !!T(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.location && (t.location = e.location), void 0 !== e.only && (t.only = e.only), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d;
						const l = {
							$type: "devvit.plugin.redditapi.moderation.AboutLocationRequest",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							location: "",
							only: "",
							show: "",
							srDetail: !1
						};
						return l.after = null !== (t = e.after) && void 0 !== t ? t : "", l.before = null !== (o = e.before) && void 0 !== o ? o : "", l.count = null !== (i = e.count) && void 0 !== i ? i : 0, l.limit = null !== (r = e.limit) && void 0 !== r ? r : 0, l.location = null !== (n = e.location) && void 0 !== n ? n : "", l.only = null !== (a = e.only) && void 0 !== a ? a : "", l.show = null !== (s = e.show) && void 0 !== s ? s : "", l.srDetail = null !== (d = e.srDetail) && void 0 !== d && d, l
					}
				};
				i.a.set(u.$type, u);
				const c = {
					$type: "devvit.plugin.redditapi.moderation.AcceptModeratorInviteRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AcceptModeratorInviteRequest",
							subreddit: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						subreddit: T(e.subreddit) ? String(e.subreddit) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.moderation.AcceptModeratorInviteRequest",
							subreddit: ""
						};
						return o.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(c.$type, c);
				const p = {
					$type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.id && t.uint32(10).string(e.id), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest",
							id: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.id = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: p.$type,
						id: T(e.id) ? String(e.id) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.id && (t.id = e.id), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.moderation.BasicModerationIdRequest",
							id: ""
						};
						return o.id = null !== (t = e.id) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(p.$type, p);
				const v = {
					$type: "devvit.plugin.redditapi.moderation.DistinguishRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.how && t.uint32(10).string(e.how), "" !== e.id && t.uint32(18).string(e.id), !0 === e.sticky && t.uint32(24).bool(e.sticky), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.DistinguishRequest",
							how: "",
							id: "",
							sticky: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.how = o.string();
									break;
								case 2:
									r.id = o.string();
									break;
								case 3:
									r.sticky = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: v.$type,
						how: T(e.how) ? String(e.how) : "",
						id: T(e.id) ? String(e.id) : "",
						sticky: !!T(e.sticky) && Boolean(e.sticky)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.how && (t.how = e.how), void 0 !== e.id && (t.id = e.id), void 0 !== e.sticky && (t.sticky = e.sticky), t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.DistinguishRequest",
							how: "",
							id: "",
							sticky: !1
						};
						return r.how = null !== (t = e.how) && void 0 !== t ? t : "", r.id = null !== (o = e.id) && void 0 !== o ? o : "", r.sticky = null !== (i = e.sticky) && void 0 !== i && i, r
					}
				};
				i.a.set(v.$type, v);
				const m = {
					$type: "devvit.plugin.redditapi.moderation.RemoveRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.id && t.uint32(10).string(e.id), !0 === e.spam && t.uint32(16).bool(e.spam), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.RemoveRequest",
							id: "",
							spam: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.id = o.string();
									break;
								case 2:
									r.spam = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: m.$type,
						id: T(e.id) ? String(e.id) : "",
						spam: !!T(e.spam) && Boolean(e.spam)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.id && (t.id = e.id), void 0 !== e.spam && (t.spam = e.spam), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.moderation.RemoveRequest",
							id: "",
							spam: !1
						};
						return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.spam = null !== (o = e.spam) && void 0 !== o && o, i
					}
				};
				i.a.set(m.$type, m);
				const f = {
					$type: "devvit.plugin.redditapi.moderation.SnoozeReportsRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.id && t.uint32(10).string(e.id), "" !== e.reason && t.uint32(18).string(e.reason), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.SnoozeReportsRequest",
							id: "",
							reason: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.id = o.string();
									break;
								case 2:
									r.reason = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: f.$type,
						id: T(e.id) ? String(e.id) : "",
						reason: T(e.reason) ? String(e.reason) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.id && (t.id = e.id), void 0 !== e.reason && (t.reason = e.reason), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.moderation.SnoozeReportsRequest",
							id: "",
							reason: ""
						};
						return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.reason = null !== (o = e.reason) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(f.$type, f);
				const g = {
					$type: "devvit.plugin.redditapi.moderation.UpdateCrowdControlLevelRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.id && t.uint32(10).string(e.id), 0 !== e.level && t.uint32(16).int32(e.level), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.UpdateCrowdControlLevelRequest",
							id: "",
							level: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.id = o.string();
									break;
								case 2:
									r.level = o.int32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: g.$type,
						id: T(e.id) ? String(e.id) : "",
						level: T(e.level) ? Number(e.level) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.id && (t.id = e.id), void 0 !== e.level && (t.level = Math.round(e.level)), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.redditapi.moderation.UpdateCrowdControlLevelRequest",
							id: "",
							level: 0
						};
						return i.id = null !== (t = e.id) && void 0 !== t ? t : "", i.level = null !== (o = e.level) && void 0 !== o ? o : 0, i
					}
				};
				i.a.set(g.$type, g);
				const h = {
					$type: "devvit.plugin.redditapi.moderation.StylesheetRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.subreddit && t.uint32(10).string(e.subreddit), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.StylesheetRequest",
							subreddit: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.subreddit = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: h.$type,
						subreddit: T(e.subreddit) ? String(e.subreddit) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.subreddit && (t.subreddit = e.subreddit), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.moderation.StylesheetRequest",
							subreddit: ""
						};
						return o.subreddit = null !== (t = e.subreddit) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(h.$type, h);
				const y = {
					$type: "devvit.plugin.redditapi.moderation.AboutLogResponse",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.kind && t.uint32(10).string(e.kind), void 0 !== e.data && k.encode(e.data, t.uint32(18).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse",
							kind: "",
							data: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.kind = o.string();
									break;
								case 2:
									r.data = k.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: y.$type,
						kind: T(e.kind) ? String(e.kind) : "",
						data: T(e.data) ? k.fromJSON(e.data) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.kind && (t.kind = e.kind), void 0 !== e.data && (t.data = e.data ? k.toJSON(e.data) : void 0), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse",
							kind: "",
							data: void 0
						};
						return o.kind = null !== (t = e.kind) && void 0 !== t ? t : "", o.data = void 0 !== e.data && null !== e.data ? k.fromPartial(e.data) : void 0, o
					}
				};
				i.a.set(y.$type, y);
				const b = {
					$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.LogObject",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return void 0 !== e.description && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.description
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.targetBody && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.targetBody
						}, t.uint32(18).fork()).ldelim(), void 0 !== e.modId36 && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.modId36
						}, t.uint32(26).fork()).ldelim(), void 0 !== e.createdUtc && d.c.encode({
							$type: "google.protobuf.Int64Value",
							value: e.createdUtc
						}, t.uint32(34).fork()).ldelim(), void 0 !== e.subreddit && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.subreddit
						}, t.uint32(42).fork()).ldelim(), void 0 !== e.targetTitle && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.targetTitle
						}, t.uint32(50).fork()).ldelim(), void 0 !== e.targetPermalink && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.targetPermalink
						}, t.uint32(58).fork()).ldelim(), void 0 !== e.subredditNamePrefixed && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.subredditNamePrefixed
						}, t.uint32(66).fork()).ldelim(), void 0 !== e.details && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.details
						}, t.uint32(74).fork()).ldelim(), void 0 !== e.action && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.action
						}, t.uint32(82).fork()).ldelim(), void 0 !== e.targetAuthor && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.targetAuthor
						}, t.uint32(90).fork()).ldelim(), void 0 !== e.targetFullname && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.targetFullname
						}, t.uint32(98).fork()).ldelim(), void 0 !== e.srId36 && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.srId36
						}, t.uint32(106).fork()).ldelim(), void 0 !== e.id && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.id
						}, t.uint32(114).fork()).ldelim(), void 0 !== e.mod && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.mod
						}, t.uint32(122).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.LogObject",
							description: void 0,
							targetBody: void 0,
							modId36: void 0,
							createdUtc: void 0,
							subreddit: void 0,
							targetTitle: void 0,
							targetPermalink: void 0,
							subredditNamePrefixed: void 0,
							details: void 0,
							action: void 0,
							targetAuthor: void 0,
							targetFullname: void 0,
							srId36: void 0,
							id: void 0,
							mod: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.description = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.targetBody = d.d.decode(o, o.uint32()).value;
									break;
								case 3:
									r.modId36 = d.d.decode(o, o.uint32()).value;
									break;
								case 4:
									r.createdUtc = d.c.decode(o, o.uint32()).value;
									break;
								case 5:
									r.subreddit = d.d.decode(o, o.uint32()).value;
									break;
								case 6:
									r.targetTitle = d.d.decode(o, o.uint32()).value;
									break;
								case 7:
									r.targetPermalink = d.d.decode(o, o.uint32()).value;
									break;
								case 8:
									r.subredditNamePrefixed = d.d.decode(o, o.uint32()).value;
									break;
								case 9:
									r.details = d.d.decode(o, o.uint32()).value;
									break;
								case 10:
									r.action = d.d.decode(o, o.uint32()).value;
									break;
								case 11:
									r.targetAuthor = d.d.decode(o, o.uint32()).value;
									break;
								case 12:
									r.targetFullname = d.d.decode(o, o.uint32()).value;
									break;
								case 13:
									r.srId36 = d.d.decode(o, o.uint32()).value;
									break;
								case 14:
									r.id = d.d.decode(o, o.uint32()).value;
									break;
								case 15:
									r.mod = d.d.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: b.$type,
						description: T(e.description) ? String(e.description) : void 0,
						targetBody: T(e.targetBody) ? String(e.targetBody) : void 0,
						modId36: T(e.modId36) ? String(e.modId36) : void 0,
						createdUtc: T(e.createdUtc) ? Number(e.createdUtc) : void 0,
						subreddit: T(e.subreddit) ? String(e.subreddit) : void 0,
						targetTitle: T(e.targetTitle) ? String(e.targetTitle) : void 0,
						targetPermalink: T(e.targetPermalink) ? String(e.targetPermalink) : void 0,
						subredditNamePrefixed: T(e.subredditNamePrefixed) ? String(e.subredditNamePrefixed) : void 0,
						details: T(e.details) ? String(e.details) : void 0,
						action: T(e.action) ? String(e.action) : void 0,
						targetAuthor: T(e.targetAuthor) ? String(e.targetAuthor) : void 0,
						targetFullname: T(e.targetFullname) ? String(e.targetFullname) : void 0,
						srId36: T(e.srId36) ? String(e.srId36) : void 0,
						id: T(e.id) ? String(e.id) : void 0,
						mod: T(e.mod) ? String(e.mod) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.description && (t.description = e.description), void 0 !== e.targetBody && (t.targetBody = e.targetBody), void 0 !== e.modId36 && (t.modId36 = e.modId36), void 0 !== e.createdUtc && (t.createdUtc = e.createdUtc), void 0 !== e.subreddit && (t.subreddit = e.subreddit), void 0 !== e.targetTitle && (t.targetTitle = e.targetTitle), void 0 !== e.targetPermalink && (t.targetPermalink = e.targetPermalink), void 0 !== e.subredditNamePrefixed && (t.subredditNamePrefixed = e.subredditNamePrefixed), void 0 !== e.details && (t.details = e.details), void 0 !== e.action && (t.action = e.action), void 0 !== e.targetAuthor && (t.targetAuthor = e.targetAuthor), void 0 !== e.targetFullname && (t.targetFullname = e.targetFullname), void 0 !== e.srId36 && (t.srId36 = e.srId36), void 0 !== e.id && (t.id = e.id), void 0 !== e.mod && (t.mod = e.mod), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u, c, p, v, m, f;
						const g = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.LogObject",
							description: void 0,
							targetBody: void 0,
							modId36: void 0,
							createdUtc: void 0,
							subreddit: void 0,
							targetTitle: void 0,
							targetPermalink: void 0,
							subredditNamePrefixed: void 0,
							details: void 0,
							action: void 0,
							targetAuthor: void 0,
							targetFullname: void 0,
							srId36: void 0,
							id: void 0,
							mod: void 0
						};
						return g.description = null !== (t = e.description) && void 0 !== t ? t : void 0, g.targetBody = null !== (o = e.targetBody) && void 0 !== o ? o : void 0, g.modId36 = null !== (i = e.modId36) && void 0 !== i ? i : void 0, g.createdUtc = null !== (r = e.createdUtc) && void 0 !== r ? r : void 0, g.subreddit = null !== (n = e.subreddit) && void 0 !== n ? n : void 0, g.targetTitle = null !== (a = e.targetTitle) && void 0 !== a ? a : void 0, g.targetPermalink = null !== (s = e.targetPermalink) && void 0 !== s ? s : void 0, g.subredditNamePrefixed = null !== (d = e.subredditNamePrefixed) && void 0 !== d ? d : void 0, g.details = null !== (l = e.details) && void 0 !== l ? l : void 0, g.action = null !== (u = e.action) && void 0 !== u ? u : void 0, g.targetAuthor = null !== (c = e.targetAuthor) && void 0 !== c ? c : void 0, g.targetFullname = null !== (p = e.targetFullname) && void 0 !== p ? p : void 0, g.srId36 = null !== (v = e.srId36) && void 0 !== v ? v : void 0, g.id = null !== (m = e.id) && void 0 !== m ? m : void 0, g.mod = null !== (f = e.mod) && void 0 !== f ? f : void 0, g
					}
				};
				i.a.set(b.$type, b);
				const k = {
					$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.AboutLogListing",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						void 0 !== e.after && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.after
						}, t.uint32(10).fork()).ldelim(), void 0 !== e.before && d.d.encode({
							$type: "google.protobuf.StringValue",
							value: e.before
						}, t.uint32(18).fork()).ldelim();
						for (const o of e.children) S.encode(o, t.uint32(26).fork()).ldelim();
						return void 0 !== e.dist && d.b.encode({
							$type: "google.protobuf.Int32Value",
							value: e.dist
						}, t.uint32(34).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.AboutLogListing",
							after: void 0,
							before: void 0,
							children: [],
							dist: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.after = d.d.decode(o, o.uint32()).value;
									break;
								case 2:
									r.before = d.d.decode(o, o.uint32()).value;
									break;
								case 3:
									r.children.push(S.decode(o, o.uint32()));
									break;
								case 4:
									r.dist = d.b.decode(o, o.uint32()).value;
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: k.$type,
						after: T(e.after) ? String(e.after) : void 0,
						before: T(e.before) ? String(e.before) : void 0,
						children: Array.isArray(null == e ? void 0 : e.children) ? e.children.map(e => S.fromJSON(e)) : [],
						dist: T(e.dist) ? Number(e.dist) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), e.children ? t.children = e.children.map(e => e ? S.toJSON(e) : void 0) : t.children = [], void 0 !== e.dist && (t.dist = e.dist), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.AboutLogListing",
							after: void 0,
							before: void 0,
							children: [],
							dist: void 0
						};
						return n.after = null !== (t = e.after) && void 0 !== t ? t : void 0, n.before = null !== (o = e.before) && void 0 !== o ? o : void 0, n.children = (null === (i = e.children) || void 0 === i ? void 0 : i.map(e => S.fromPartial(e))) || [], n.dist = null !== (r = e.dist) && void 0 !== r ? r : void 0, n
					}
				};
				i.a.set(k.$type, k);
				const S = {
					$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.AboutLogListing.WrappedLogObject",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.kind && t.uint32(10).string(e.kind), void 0 !== e.data && b.encode(e.data, t.uint32(18).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.AboutLogListing.WrappedLogObject",
							kind: "",
							data: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.kind = o.string();
									break;
								case 2:
									r.data = b.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: S.$type,
						kind: T(e.kind) ? String(e.kind) : "",
						data: T(e.data) ? b.fromJSON(e.data) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.kind && (t.kind = e.kind), void 0 !== e.data && (t.data = e.data ? b.toJSON(e.data) : void 0), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.moderation.AboutLogResponse.AboutLogListing.WrappedLogObject",
							kind: "",
							data: void 0
						};
						return o.kind = null !== (t = e.kind) && void 0 !== t ? t : "", o.data = void 0 !== e.data && null !== e.data ? b.fromPartial(e.data) : void 0, o
					}
				};
				i.a.set(S.$type, S);
				var w = (() => {
					if (void 0 !== w) return w;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function O(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new w.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function T(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/redditapi/privatemessages/privatemessages_msg.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "b", (function() {
					return d
				})), o.d(t, "a", (function() {
					return l
				})), o.d(t, "d", (function() {
					return u
				})), o.d(t, "c", (function() {
					return c
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a);
				const d = {
					$type: "devvit.plugin.redditapi.privatemessages.GenericPrivateMessagesRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.id && t.uint32(10).string(e.id), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.privatemessages.GenericPrivateMessagesRequest",
							id: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.id = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: d.$type,
						id: m(e.id) ? String(e.id) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.id && (t.id = e.id), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.privatemessages.GenericPrivateMessagesRequest",
							id: ""
						};
						return o.id = null !== (t = e.id) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(d.$type, d);
				const l = {
					$type: "devvit.plugin.redditapi.privatemessages.ComposeRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.to && t.uint32(10).string(e.to), "" !== e.subject && t.uint32(18).string(e.subject), "" !== e.text && t.uint32(26).string(e.text), "" !== e.fromSr && t.uint32(34).string(e.fromSr), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.privatemessages.ComposeRequest",
							to: "",
							subject: "",
							text: "",
							fromSr: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.to = o.string();
									break;
								case 2:
									r.subject = o.string();
									break;
								case 3:
									r.text = o.string();
									break;
								case 4:
									r.fromSr = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						to: m(e.to) ? String(e.to) : "",
						subject: m(e.subject) ? String(e.subject) : "",
						text: m(e.text) ? String(e.text) : "",
						fromSr: m(e.fromSr) ? String(e.fromSr) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.to && (t.to = e.to), void 0 !== e.subject && (t.subject = e.subject), void 0 !== e.text && (t.text = e.text), void 0 !== e.fromSr && (t.fromSr = e.fromSr), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "devvit.plugin.redditapi.privatemessages.ComposeRequest",
							to: "",
							subject: "",
							text: "",
							fromSr: ""
						};
						return n.to = null !== (t = e.to) && void 0 !== t ? t : "", n.subject = null !== (o = e.subject) && void 0 !== o ? o : "", n.text = null !== (i = e.text) && void 0 !== i ? i : "", n.fromSr = null !== (r = e.fromSr) && void 0 !== r ? r : "", n
					}
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "devvit.plugin.redditapi.privatemessages.ReadAllMessagesRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.filterTypes && t.uint32(10).string(e.filterTypes), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.privatemessages.ReadAllMessagesRequest",
							filterTypes: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.filterTypes = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						filterTypes: m(e.filterTypes) ? String(e.filterTypes) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.filterTypes && (t.filterTypes = e.filterTypes), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "devvit.plugin.redditapi.privatemessages.ReadAllMessagesRequest",
							filterTypes: ""
						};
						return o.filterTypes = null !== (t = e.filterTypes) && void 0 !== t ? t : "", o
					}
				};
				i.a.set(u.$type, u);
				const c = {
					$type: "devvit.plugin.redditapi.privatemessages.MessageWhereRequest",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.where && t.uint32(10).string(e.where), !0 === e.mark && t.uint32(16).bool(e.mark), "" !== e.mid && t.uint32(26).string(e.mid), "" !== e.after && t.uint32(34).string(e.after), "" !== e.before && t.uint32(42).string(e.before), 0 !== e.count && t.uint32(48).int64(e.count), 0 !== e.limit && t.uint32(56).int64(e.limit), "" !== e.show && t.uint32(66).string(e.show), !0 === e.srDetail && t.uint32(72).bool(e.srDetail), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.redditapi.privatemessages.MessageWhereRequest",
							where: "",
							mark: !1,
							mid: "",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							srDetail: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.where = o.string();
									break;
								case 2:
									r.mark = o.bool();
									break;
								case 3:
									r.mid = o.string();
									break;
								case 4:
									r.after = o.string();
									break;
								case 5:
									r.before = o.string();
									break;
								case 6:
									r.count = v(o.int64());
									break;
								case 7:
									r.limit = v(o.int64());
									break;
								case 8:
									r.show = o.string();
									break;
								case 9:
									r.srDetail = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						where: m(e.where) ? String(e.where) : "",
						mark: !!m(e.mark) && Boolean(e.mark),
						mid: m(e.mid) ? String(e.mid) : "",
						after: m(e.after) ? String(e.after) : "",
						before: m(e.before) ? String(e.before) : "",
						count: m(e.count) ? Number(e.count) : 0,
						limit: m(e.limit) ? Number(e.limit) : 0,
						show: m(e.show) ? String(e.show) : "",
						srDetail: !!m(e.srDetail) && Boolean(e.srDetail)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.where && (t.where = e.where), void 0 !== e.mark && (t.mark = e.mark), void 0 !== e.mid && (t.mid = e.mid), void 0 !== e.after && (t.after = e.after), void 0 !== e.before && (t.before = e.before), void 0 !== e.count && (t.count = Math.round(e.count)), void 0 !== e.limit && (t.limit = Math.round(e.limit)), void 0 !== e.show && (t.show = e.show), void 0 !== e.srDetail && (t.srDetail = e.srDetail), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l;
						const u = {
							$type: "devvit.plugin.redditapi.privatemessages.MessageWhereRequest",
							where: "",
							mark: !1,
							mid: "",
							after: "",
							before: "",
							count: 0,
							limit: 0,
							show: "",
							srDetail: !1
						};
						return u.where = null !== (t = e.where) && void 0 !== t ? t : "", u.mark = null !== (o = e.mark) && void 0 !== o && o, u.mid = null !== (i = e.mid) && void 0 !== i ? i : "", u.after = null !== (r = e.after) && void 0 !== r ? r : "", u.before = null !== (n = e.before) && void 0 !== n ? n : "", u.count = null !== (a = e.count) && void 0 !== a ? a : 0, u.limit = null !== (s = e.limit) && void 0 !== s ? s : 0, u.show = null !== (d = e.show) && void 0 !== d ? d : "", u.srDetail = null !== (l = e.srDetail) && void 0 !== l && l, u
					}
				};
				i.a.set(c.$type, c);
				var p = (() => {
					if (void 0 !== p) return p;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function v(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new p.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function m(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/devvit/plugin/streambroker/streambroker.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return l
				})), o.d(t, "b", (function() {
					return c
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a),
					d = o("./node_modules/@devvit/protos/types/google/protobuf/empty.js");
				o("./node_modules/@devvit/protos/node_modules/rxjs/dist/esm5/internal/operators/map.js");
				const l = {
					$type: "devvit.plugin.streambroker.Message",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.topic && t.uint32(10).string(e.topic), "" !== e.value && t.uint32(18).string(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.streambroker.Message",
							topic: "",
							value: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.topic = o.string();
									break;
								case 2:
									r.value = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						topic: m(e.topic) ? String(e.topic) : "",
						value: m(e.value) ? String(e.value) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.topic && (t.topic = e.topic), void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "devvit.plugin.streambroker.Message",
							topic: "",
							value: ""
						};
						return i.topic = null !== (t = e.topic) && void 0 !== t ? t : "", i.value = null !== (o = e.value) && void 0 !== o ? o : "", i
					}
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "devvit.plugin.streambroker.Cursor",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.topic && t.uint32(10).string(e.topic), 0 !== e.offset && t.uint32(16).int64(e.offset), !0 === e.closeAtEnd && t.uint32(24).bool(e.closeAtEnd), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "devvit.plugin.streambroker.Cursor",
							topic: "",
							offset: 0,
							closeAtEnd: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.topic = o.string();
									break;
								case 2:
									r.offset = v(o.int64());
									break;
								case 3:
									r.closeAtEnd = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						topic: m(e.topic) ? String(e.topic) : "",
						offset: m(e.offset) ? Number(e.offset) : 0,
						closeAtEnd: !!m(e.closeAtEnd) && Boolean(e.closeAtEnd)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.topic && (t.topic = e.topic), void 0 !== e.offset && (t.offset = Math.round(e.offset)), void 0 !== e.closeAtEnd && (t.closeAtEnd = e.closeAtEnd), t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "devvit.plugin.streambroker.Cursor",
							topic: "",
							offset: 0,
							closeAtEnd: !1
						};
						return r.topic = null !== (t = e.topic) && void 0 !== t ? t : "", r.offset = null !== (o = e.offset) && void 0 !== o ? o : 0, r.closeAtEnd = null !== (i = e.closeAtEnd) && void 0 !== i && i, r
					}
				};
				i.a.set(u.$type, u);
				const c = {
					name: "StreamBroker",
					fullName: "devvit.plugin.streambroker.StreamBroker",
					methods: {
						put: {
							name: "Put",
							requestType: l,
							requestStream: !1,
							responseType: d.a,
							responseStream: !1,
							options: {}
						},
						get: {
							name: "Get",
							requestType: u,
							requestStream: !1,
							responseType: l,
							responseStream: !0,
							options: {}
						}
					}
				};
				var p = (() => {
					if (void 0 !== p) return p;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function v(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new p.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function m(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/google/protobuf/any.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return l
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a);

				function d() {
					return {
						$type: "google.protobuf.Any",
						typeUrl: "",
						value: new Uint8Array
					}
				}
				const l = {
					$type: "google.protobuf.Any",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.typeUrl && t.uint32(10).string(e.typeUrl), 0 !== e.value.length && t.uint32(18).bytes(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = d();
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.typeUrl = o.string();
									break;
								case 2:
									r.value = o.bytes();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						typeUrl: m(e.typeUrl) ? String(e.typeUrl) : "",
						value: m(e.value) ? p(e.value) : new Uint8Array
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.typeUrl && (t.typeUrl = e.typeUrl), void 0 !== e.value && (t.value = function(e) {
							const t = [];
							for (const o of e) t.push(String.fromCharCode(o));
							return v(t.join(""))
						}(void 0 !== e.value ? e.value : new Uint8Array)), t
					},
					fromPartial(e) {
						var t, o;
						const i = d();
						return i.typeUrl = null !== (t = e.typeUrl) && void 0 !== t ? t : "", i.value = null !== (o = e.value) && void 0 !== o ? o : new Uint8Array, i
					}
				};
				i.a.set(l.$type, l);
				var u = (() => {
					if (void 0 !== u) return u;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();
				const c = u.atob || (e => u.Buffer.from(e, "base64").toString("binary"));

				function p(e) {
					const t = c(e),
						o = new Uint8Array(t.length);
					for (let i = 0; i < t.length; ++i) o[i] = t.charCodeAt(i);
					return o
				}
				const v = u.btoa || (e => u.Buffer.from(e, "binary").toString("base64"));

				function m(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/google/protobuf/descriptor.js": function(e, t, o) {
			"use strict";
			(function(e) {
				var t, i, r, n, a, s, d = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					l = o("./node_modules/long/src/long.js"),
					u = o.n(l),
					c = o("./node_modules/protobufjs/minimal.js"),
					p = o.n(c);

				function v(e) {
					switch (e) {
						case 1:
						case "TYPE_DOUBLE":
							return t.TYPE_DOUBLE;
						case 2:
						case "TYPE_FLOAT":
							return t.TYPE_FLOAT;
						case 3:
						case "TYPE_INT64":
							return t.TYPE_INT64;
						case 4:
						case "TYPE_UINT64":
							return t.TYPE_UINT64;
						case 5:
						case "TYPE_INT32":
							return t.TYPE_INT32;
						case 6:
						case "TYPE_FIXED64":
							return t.TYPE_FIXED64;
						case 7:
						case "TYPE_FIXED32":
							return t.TYPE_FIXED32;
						case 8:
						case "TYPE_BOOL":
							return t.TYPE_BOOL;
						case 9:
						case "TYPE_STRING":
							return t.TYPE_STRING;
						case 10:
						case "TYPE_GROUP":
							return t.TYPE_GROUP;
						case 11:
						case "TYPE_MESSAGE":
							return t.TYPE_MESSAGE;
						case 12:
						case "TYPE_BYTES":
							return t.TYPE_BYTES;
						case 13:
						case "TYPE_UINT32":
							return t.TYPE_UINT32;
						case 14:
						case "TYPE_ENUM":
							return t.TYPE_ENUM;
						case 15:
						case "TYPE_SFIXED32":
							return t.TYPE_SFIXED32;
						case 16:
						case "TYPE_SFIXED64":
							return t.TYPE_SFIXED64;
						case 17:
						case "TYPE_SINT32":
							return t.TYPE_SINT32;
						case 18:
						case "TYPE_SINT64":
							return t.TYPE_SINT64;
						case -1:
						case "UNRECOGNIZED":
						default:
							return t.UNRECOGNIZED
					}
				}

				function m(e) {
					switch (e) {
						case 1:
						case "LABEL_OPTIONAL":
							return i.LABEL_OPTIONAL;
						case 2:
						case "LABEL_REQUIRED":
							return i.LABEL_REQUIRED;
						case 3:
						case "LABEL_REPEATED":
							return i.LABEL_REPEATED;
						case -1:
						case "UNRECOGNIZED":
						default:
							return i.UNRECOGNIZED
					}
				}

				function f(e) {
					switch (e) {
						case 1:
						case "SPEED":
							return r.SPEED;
						case 2:
						case "CODE_SIZE":
							return r.CODE_SIZE;
						case 3:
						case "LITE_RUNTIME":
							return r.LITE_RUNTIME;
						case -1:
						case "UNRECOGNIZED":
						default:
							return r.UNRECOGNIZED
					}
				}

				function g(e) {
					switch (e) {
						case 0:
						case "STRING":
							return n.STRING;
						case 1:
						case "CORD":
							return n.CORD;
						case 2:
						case "STRING_PIECE":
							return n.STRING_PIECE;
						case -1:
						case "UNRECOGNIZED":
						default:
							return n.UNRECOGNIZED
					}
				}

				function h(e) {
					switch (e) {
						case 0:
						case "JS_NORMAL":
							return a.JS_NORMAL;
						case 1:
						case "JS_STRING":
							return a.JS_STRING;
						case 2:
						case "JS_NUMBER":
							return a.JS_NUMBER;
						case -1:
						case "UNRECOGNIZED":
						default:
							return a.UNRECOGNIZED
					}
				}

				function y(e) {
					switch (e) {
						case 0:
						case "IDEMPOTENCY_UNKNOWN":
							return s.IDEMPOTENCY_UNKNOWN;
						case 1:
						case "NO_SIDE_EFFECTS":
							return s.NO_SIDE_EFFECTS;
						case 2:
						case "IDEMPOTENT":
							return s.IDEMPOTENT;
						case -1:
						case "UNRECOGNIZED":
						default:
							return s.UNRECOGNIZED
					}
				}! function(e) {
					e[e.TYPE_DOUBLE = 1] = "TYPE_DOUBLE", e[e.TYPE_FLOAT = 2] = "TYPE_FLOAT", e[e.TYPE_INT64 = 3] = "TYPE_INT64", e[e.TYPE_UINT64 = 4] = "TYPE_UINT64", e[e.TYPE_INT32 = 5] = "TYPE_INT32", e[e.TYPE_FIXED64 = 6] = "TYPE_FIXED64", e[e.TYPE_FIXED32 = 7] = "TYPE_FIXED32", e[e.TYPE_BOOL = 8] = "TYPE_BOOL", e[e.TYPE_STRING = 9] = "TYPE_STRING", e[e.TYPE_GROUP = 10] = "TYPE_GROUP", e[e.TYPE_MESSAGE = 11] = "TYPE_MESSAGE", e[e.TYPE_BYTES = 12] = "TYPE_BYTES", e[e.TYPE_UINT32 = 13] = "TYPE_UINT32", e[e.TYPE_ENUM = 14] = "TYPE_ENUM", e[e.TYPE_SFIXED32 = 15] = "TYPE_SFIXED32", e[e.TYPE_SFIXED64 = 16] = "TYPE_SFIXED64", e[e.TYPE_SINT32 = 17] = "TYPE_SINT32", e[e.TYPE_SINT64 = 18] = "TYPE_SINT64", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(t || (t = {})),
				function(e) {
					e[e.LABEL_OPTIONAL = 1] = "LABEL_OPTIONAL", e[e.LABEL_REQUIRED = 2] = "LABEL_REQUIRED", e[e.LABEL_REPEATED = 3] = "LABEL_REPEATED", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(i || (i = {})),
				function(e) {
					e[e.SPEED = 1] = "SPEED", e[e.CODE_SIZE = 2] = "CODE_SIZE", e[e.LITE_RUNTIME = 3] = "LITE_RUNTIME", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(r || (r = {})),
				function(e) {
					e[e.STRING = 0] = "STRING", e[e.CORD = 1] = "CORD", e[e.STRING_PIECE = 2] = "STRING_PIECE", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(n || (n = {})),
				function(e) {
					e[e.JS_NORMAL = 0] = "JS_NORMAL", e[e.JS_STRING = 1] = "JS_STRING", e[e.JS_NUMBER = 2] = "JS_NUMBER", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(a || (a = {})),
				function(e) {
					e[e.IDEMPOTENCY_UNKNOWN = 0] = "IDEMPOTENCY_UNKNOWN", e[e.NO_SIDE_EFFECTS = 1] = "NO_SIDE_EFFECTS", e[e.IDEMPOTENT = 2] = "IDEMPOTENT", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
				}(s || (s = {}));
				const b = {
					$type: "google.protobuf.FileDescriptorSet",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						for (const o of e.file) k.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.FileDescriptorSet",
							file: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.file.push(k.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: b.$type,
						file: Array.isArray(null == e ? void 0 : e.file) ? e.file.map(e => k.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.file ? t.file = e.file.map(e => e ? k.toJSON(e) : void 0) : t.file = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.FileDescriptorSet",
							file: []
						};
						return o.file = (null === (t = e.file) || void 0 === t ? void 0 : t.map(e => k.fromPartial(e))) || [], o
					}
				};
				d.a.set(b.$type, b);
				const k = {
					$type: "google.protobuf.FileDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						"" !== e.name && t.uint32(10).string(e.name), "" !== e.package && t.uint32(18).string(e.package);
						for (const o of e.dependency) t.uint32(26).string(o);
						t.uint32(82).fork();
						for (const o of e.publicDependency) t.int32(o);
						t.ldelim(), t.uint32(90).fork();
						for (const o of e.weakDependency) t.int32(o);
						t.ldelim();
						for (const o of e.messageType) S.encode(o, t.uint32(34).fork()).ldelim();
						for (const o of e.enumType) $.encode(o, t.uint32(42).fork()).ldelim();
						for (const o of e.service) E.encode(o, t.uint32(50).fork()).ldelim();
						for (const o of e.extension) N.encode(o, t.uint32(58).fork()).ldelim();
						return void 0 !== e.options && P.encode(e.options, t.uint32(66).fork()).ldelim(), void 0 !== e.sourceCodeInfo && U.encode(e.sourceCodeInfo, t.uint32(74).fork()).ldelim(), "" !== e.syntax && t.uint32(98).string(e.syntax), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.FileDescriptorProto",
							name: "",
							package: "",
							dependency: [],
							publicDependency: [],
							weakDependency: [],
							messageType: [],
							enumType: [],
							service: [],
							extension: [],
							options: void 0,
							sourceCodeInfo: void 0,
							syntax: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.package = o.string();
									break;
								case 3:
									r.dependency.push(o.string());
									break;
								case 10:
									if (2 == (7 & e)) {
										const e = o.uint32() + o.pos;
										for (; o.pos < e;) r.publicDependency.push(o.int32())
									} else r.publicDependency.push(o.int32());
									break;
								case 11:
									if (2 == (7 & e)) {
										const e = o.uint32() + o.pos;
										for (; o.pos < e;) r.weakDependency.push(o.int32())
									} else r.weakDependency.push(o.int32());
									break;
								case 4:
									r.messageType.push(S.decode(o, o.uint32()));
									break;
								case 5:
									r.enumType.push($.decode(o, o.uint32()));
									break;
								case 6:
									r.service.push(E.decode(o, o.uint32()));
									break;
								case 7:
									r.extension.push(N.decode(o, o.uint32()));
									break;
								case 8:
									r.options = P.decode(o, o.uint32());
									break;
								case 9:
									r.sourceCodeInfo = U.decode(o, o.uint32());
									break;
								case 12:
									r.syntax = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: k.$type,
						name: K(e.name) ? String(e.name) : "",
						package: K(e.package) ? String(e.package) : "",
						dependency: Array.isArray(null == e ? void 0 : e.dependency) ? e.dependency.map(e => String(e)) : [],
						publicDependency: Array.isArray(null == e ? void 0 : e.publicDependency) ? e.publicDependency.map(e => Number(e)) : [],
						weakDependency: Array.isArray(null == e ? void 0 : e.weakDependency) ? e.weakDependency.map(e => Number(e)) : [],
						messageType: Array.isArray(null == e ? void 0 : e.messageType) ? e.messageType.map(e => S.fromJSON(e)) : [],
						enumType: Array.isArray(null == e ? void 0 : e.enumType) ? e.enumType.map(e => $.fromJSON(e)) : [],
						service: Array.isArray(null == e ? void 0 : e.service) ? e.service.map(e => E.fromJSON(e)) : [],
						extension: Array.isArray(null == e ? void 0 : e.extension) ? e.extension.map(e => N.fromJSON(e)) : [],
						options: K(e.options) ? P.fromJSON(e.options) : void 0,
						sourceCodeInfo: K(e.sourceCodeInfo) ? U.fromJSON(e.sourceCodeInfo) : void 0,
						syntax: K(e.syntax) ? String(e.syntax) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), void 0 !== e.package && (t.package = e.package), e.dependency ? t.dependency = e.dependency.map(e => e) : t.dependency = [], e.publicDependency ? t.publicDependency = e.publicDependency.map(e => Math.round(e)) : t.publicDependency = [], e.weakDependency ? t.weakDependency = e.weakDependency.map(e => Math.round(e)) : t.weakDependency = [], e.messageType ? t.messageType = e.messageType.map(e => e ? S.toJSON(e) : void 0) : t.messageType = [], e.enumType ? t.enumType = e.enumType.map(e => e ? $.toJSON(e) : void 0) : t.enumType = [], e.service ? t.service = e.service.map(e => e ? E.toJSON(e) : void 0) : t.service = [], e.extension ? t.extension = e.extension.map(e => e ? N.toJSON(e) : void 0) : t.extension = [], void 0 !== e.options && (t.options = e.options ? P.toJSON(e.options) : void 0), void 0 !== e.sourceCodeInfo && (t.sourceCodeInfo = e.sourceCodeInfo ? U.toJSON(e.sourceCodeInfo) : void 0), void 0 !== e.syntax && (t.syntax = e.syntax), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u;
						const c = {
							$type: "google.protobuf.FileDescriptorProto",
							name: "",
							package: "",
							dependency: [],
							publicDependency: [],
							weakDependency: [],
							messageType: [],
							enumType: [],
							service: [],
							extension: [],
							options: void 0,
							sourceCodeInfo: void 0,
							syntax: ""
						};
						return c.name = null !== (t = e.name) && void 0 !== t ? t : "", c.package = null !== (o = e.package) && void 0 !== o ? o : "", c.dependency = (null === (i = e.dependency) || void 0 === i ? void 0 : i.map(e => e)) || [], c.publicDependency = (null === (r = e.publicDependency) || void 0 === r ? void 0 : r.map(e => e)) || [], c.weakDependency = (null === (n = e.weakDependency) || void 0 === n ? void 0 : n.map(e => e)) || [], c.messageType = (null === (a = e.messageType) || void 0 === a ? void 0 : a.map(e => S.fromPartial(e))) || [], c.enumType = (null === (s = e.enumType) || void 0 === s ? void 0 : s.map(e => $.fromPartial(e))) || [], c.service = (null === (d = e.service) || void 0 === d ? void 0 : d.map(e => E.fromPartial(e))) || [], c.extension = (null === (l = e.extension) || void 0 === l ? void 0 : l.map(e => N.fromPartial(e))) || [], c.options = void 0 !== e.options && null !== e.options ? P.fromPartial(e.options) : void 0, c.sourceCodeInfo = void 0 !== e.sourceCodeInfo && null !== e.sourceCodeInfo ? U.fromPartial(e.sourceCodeInfo) : void 0, c.syntax = null !== (u = e.syntax) && void 0 !== u ? u : "", c
					}
				};
				d.a.set(k.$type, k);
				const S = {
					$type: "google.protobuf.DescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						"" !== e.name && t.uint32(10).string(e.name);
						for (const o of e.field) N.encode(o, t.uint32(18).fork()).ldelim();
						for (const o of e.extension) N.encode(o, t.uint32(50).fork()).ldelim();
						for (const o of e.nestedType) S.encode(o, t.uint32(26).fork()).ldelim();
						for (const o of e.enumType) $.encode(o, t.uint32(34).fork()).ldelim();
						for (const o of e.extensionRange) w.encode(o, t.uint32(42).fork()).ldelim();
						for (const o of e.oneofDecl) R.encode(o, t.uint32(66).fork()).ldelim();
						void 0 !== e.options && x.encode(e.options, t.uint32(58).fork()).ldelim();
						for (const o of e.reservedRange) O.encode(o, t.uint32(74).fork()).ldelim();
						for (const o of e.reservedName) t.uint32(82).string(o);
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.DescriptorProto",
							name: "",
							field: [],
							extension: [],
							nestedType: [],
							enumType: [],
							extensionRange: [],
							oneofDecl: [],
							options: void 0,
							reservedRange: [],
							reservedName: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.field.push(N.decode(o, o.uint32()));
									break;
								case 6:
									r.extension.push(N.decode(o, o.uint32()));
									break;
								case 3:
									r.nestedType.push(S.decode(o, o.uint32()));
									break;
								case 4:
									r.enumType.push($.decode(o, o.uint32()));
									break;
								case 5:
									r.extensionRange.push(w.decode(o, o.uint32()));
									break;
								case 8:
									r.oneofDecl.push(R.decode(o, o.uint32()));
									break;
								case 7:
									r.options = x.decode(o, o.uint32());
									break;
								case 9:
									r.reservedRange.push(O.decode(o, o.uint32()));
									break;
								case 10:
									r.reservedName.push(o.string());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: S.$type,
						name: K(e.name) ? String(e.name) : "",
						field: Array.isArray(null == e ? void 0 : e.field) ? e.field.map(e => N.fromJSON(e)) : [],
						extension: Array.isArray(null == e ? void 0 : e.extension) ? e.extension.map(e => N.fromJSON(e)) : [],
						nestedType: Array.isArray(null == e ? void 0 : e.nestedType) ? e.nestedType.map(e => S.fromJSON(e)) : [],
						enumType: Array.isArray(null == e ? void 0 : e.enumType) ? e.enumType.map(e => $.fromJSON(e)) : [],
						extensionRange: Array.isArray(null == e ? void 0 : e.extensionRange) ? e.extensionRange.map(e => w.fromJSON(e)) : [],
						oneofDecl: Array.isArray(null == e ? void 0 : e.oneofDecl) ? e.oneofDecl.map(e => R.fromJSON(e)) : [],
						options: K(e.options) ? x.fromJSON(e.options) : void 0,
						reservedRange: Array.isArray(null == e ? void 0 : e.reservedRange) ? e.reservedRange.map(e => O.fromJSON(e)) : [],
						reservedName: Array.isArray(null == e ? void 0 : e.reservedName) ? e.reservedName.map(e => String(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), e.field ? t.field = e.field.map(e => e ? N.toJSON(e) : void 0) : t.field = [], e.extension ? t.extension = e.extension.map(e => e ? N.toJSON(e) : void 0) : t.extension = [], e.nestedType ? t.nestedType = e.nestedType.map(e => e ? S.toJSON(e) : void 0) : t.nestedType = [], e.enumType ? t.enumType = e.enumType.map(e => e ? $.toJSON(e) : void 0) : t.enumType = [], e.extensionRange ? t.extensionRange = e.extensionRange.map(e => e ? w.toJSON(e) : void 0) : t.extensionRange = [], e.oneofDecl ? t.oneofDecl = e.oneofDecl.map(e => e ? R.toJSON(e) : void 0) : t.oneofDecl = [], void 0 !== e.options && (t.options = e.options ? x.toJSON(e.options) : void 0), e.reservedRange ? t.reservedRange = e.reservedRange.map(e => e ? O.toJSON(e) : void 0) : t.reservedRange = [], e.reservedName ? t.reservedName = e.reservedName.map(e => e) : t.reservedName = [], t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l;
						const u = {
							$type: "google.protobuf.DescriptorProto",
							name: "",
							field: [],
							extension: [],
							nestedType: [],
							enumType: [],
							extensionRange: [],
							oneofDecl: [],
							options: void 0,
							reservedRange: [],
							reservedName: []
						};
						return u.name = null !== (t = e.name) && void 0 !== t ? t : "", u.field = (null === (o = e.field) || void 0 === o ? void 0 : o.map(e => N.fromPartial(e))) || [], u.extension = (null === (i = e.extension) || void 0 === i ? void 0 : i.map(e => N.fromPartial(e))) || [], u.nestedType = (null === (r = e.nestedType) || void 0 === r ? void 0 : r.map(e => S.fromPartial(e))) || [], u.enumType = (null === (n = e.enumType) || void 0 === n ? void 0 : n.map(e => $.fromPartial(e))) || [], u.extensionRange = (null === (a = e.extensionRange) || void 0 === a ? void 0 : a.map(e => w.fromPartial(e))) || [], u.oneofDecl = (null === (s = e.oneofDecl) || void 0 === s ? void 0 : s.map(e => R.fromPartial(e))) || [], u.options = void 0 !== e.options && null !== e.options ? x.fromPartial(e.options) : void 0, u.reservedRange = (null === (d = e.reservedRange) || void 0 === d ? void 0 : d.map(e => O.fromPartial(e))) || [], u.reservedName = (null === (l = e.reservedName) || void 0 === l ? void 0 : l.map(e => e)) || [], u
					}
				};
				d.a.set(S.$type, S);
				const w = {
					$type: "google.protobuf.DescriptorProto.ExtensionRange",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return 0 !== e.start && t.uint32(8).int32(e.start), 0 !== e.end && t.uint32(16).int32(e.end), void 0 !== e.options && T.encode(e.options, t.uint32(26).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.DescriptorProto.ExtensionRange",
							start: 0,
							end: 0,
							options: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.start = o.int32();
									break;
								case 2:
									r.end = o.int32();
									break;
								case 3:
									r.options = T.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: w.$type,
						start: K(e.start) ? Number(e.start) : 0,
						end: K(e.end) ? Number(e.end) : 0,
						options: K(e.options) ? T.fromJSON(e.options) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.start && (t.start = Math.round(e.start)), void 0 !== e.end && (t.end = Math.round(e.end)), void 0 !== e.options && (t.options = e.options ? T.toJSON(e.options) : void 0), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.DescriptorProto.ExtensionRange",
							start: 0,
							end: 0,
							options: void 0
						};
						return i.start = null !== (t = e.start) && void 0 !== t ? t : 0, i.end = null !== (o = e.end) && void 0 !== o ? o : 0, i.options = void 0 !== e.options && null !== e.options ? T.fromPartial(e.options) : void 0, i
					}
				};
				d.a.set(w.$type, w);
				const O = {
					$type: "google.protobuf.DescriptorProto.ReservedRange",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return 0 !== e.start && t.uint32(8).int32(e.start), 0 !== e.end && t.uint32(16).int32(e.end), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.DescriptorProto.ReservedRange",
							start: 0,
							end: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.start = o.int32();
									break;
								case 2:
									r.end = o.int32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: O.$type,
						start: K(e.start) ? Number(e.start) : 0,
						end: K(e.end) ? Number(e.end) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.start && (t.start = Math.round(e.start)), void 0 !== e.end && (t.end = Math.round(e.end)), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.DescriptorProto.ReservedRange",
							start: 0,
							end: 0
						};
						return i.start = null !== (t = e.start) && void 0 !== t ? t : 0, i.end = null !== (o = e.end) && void 0 !== o ? o : 0, i
					}
				};
				d.a.set(O.$type, O);
				const T = {
					$type: "google.protobuf.ExtensionRangeOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.ExtensionRangeOptions",
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: T.$type,
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.ExtensionRangeOptions",
							uninterpretedOption: []
						};
						return o.uninterpretedOption = (null === (t = e.uninterpretedOption) || void 0 === t ? void 0 : t.map(e => V.fromPartial(e))) || [], o
					}
				};
				d.a.set(T.$type, T);
				const N = {
					$type: "google.protobuf.FieldDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return "" !== e.name && t.uint32(10).string(e.name), 0 !== e.number && t.uint32(24).int32(e.number), 1 !== e.label && t.uint32(32).int32(e.label), 1 !== e.type && t.uint32(40).int32(e.type), "" !== e.typeName && t.uint32(50).string(e.typeName), "" !== e.extendee && t.uint32(18).string(e.extendee), "" !== e.defaultValue && t.uint32(58).string(e.defaultValue), 0 !== e.oneofIndex && t.uint32(72).int32(e.oneofIndex), "" !== e.jsonName && t.uint32(82).string(e.jsonName), void 0 !== e.options && F.encode(e.options, t.uint32(66).fork()).ldelim(), !0 === e.proto3Optional && t.uint32(136).bool(e.proto3Optional), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.FieldDescriptorProto",
							name: "",
							number: 0,
							label: 1,
							type: 1,
							typeName: "",
							extendee: "",
							defaultValue: "",
							oneofIndex: 0,
							jsonName: "",
							options: void 0,
							proto3Optional: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 3:
									r.number = o.int32();
									break;
								case 4:
									r.label = o.int32();
									break;
								case 5:
									r.type = o.int32();
									break;
								case 6:
									r.typeName = o.string();
									break;
								case 2:
									r.extendee = o.string();
									break;
								case 7:
									r.defaultValue = o.string();
									break;
								case 9:
									r.oneofIndex = o.int32();
									break;
								case 10:
									r.jsonName = o.string();
									break;
								case 8:
									r.options = F.decode(o, o.uint32());
									break;
								case 17:
									r.proto3Optional = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: N.$type,
						name: K(e.name) ? String(e.name) : "",
						number: K(e.number) ? Number(e.number) : 0,
						label: K(e.label) ? m(e.label) : 1,
						type: K(e.type) ? v(e.type) : 1,
						typeName: K(e.typeName) ? String(e.typeName) : "",
						extendee: K(e.extendee) ? String(e.extendee) : "",
						defaultValue: K(e.defaultValue) ? String(e.defaultValue) : "",
						oneofIndex: K(e.oneofIndex) ? Number(e.oneofIndex) : 0,
						jsonName: K(e.jsonName) ? String(e.jsonName) : "",
						options: K(e.options) ? F.fromJSON(e.options) : void 0,
						proto3Optional: !!K(e.proto3Optional) && Boolean(e.proto3Optional)
					}),
					toJSON(e) {
						const o = {};
						return void 0 !== e.name && (o.name = e.name), void 0 !== e.number && (o.number = Math.round(e.number)), void 0 !== e.label && (o.label = function(e) {
							switch (e) {
								case i.LABEL_OPTIONAL:
									return "LABEL_OPTIONAL";
								case i.LABEL_REQUIRED:
									return "LABEL_REQUIRED";
								case i.LABEL_REPEATED:
									return "LABEL_REPEATED";
								default:
									return "UNKNOWN"
							}
						}(e.label)), void 0 !== e.type && (o.type = function(e) {
							switch (e) {
								case t.TYPE_DOUBLE:
									return "TYPE_DOUBLE";
								case t.TYPE_FLOAT:
									return "TYPE_FLOAT";
								case t.TYPE_INT64:
									return "TYPE_INT64";
								case t.TYPE_UINT64:
									return "TYPE_UINT64";
								case t.TYPE_INT32:
									return "TYPE_INT32";
								case t.TYPE_FIXED64:
									return "TYPE_FIXED64";
								case t.TYPE_FIXED32:
									return "TYPE_FIXED32";
								case t.TYPE_BOOL:
									return "TYPE_BOOL";
								case t.TYPE_STRING:
									return "TYPE_STRING";
								case t.TYPE_GROUP:
									return "TYPE_GROUP";
								case t.TYPE_MESSAGE:
									return "TYPE_MESSAGE";
								case t.TYPE_BYTES:
									return "TYPE_BYTES";
								case t.TYPE_UINT32:
									return "TYPE_UINT32";
								case t.TYPE_ENUM:
									return "TYPE_ENUM";
								case t.TYPE_SFIXED32:
									return "TYPE_SFIXED32";
								case t.TYPE_SFIXED64:
									return "TYPE_SFIXED64";
								case t.TYPE_SINT32:
									return "TYPE_SINT32";
								case t.TYPE_SINT64:
									return "TYPE_SINT64";
								default:
									return "UNKNOWN"
							}
						}(e.type)), void 0 !== e.typeName && (o.typeName = e.typeName), void 0 !== e.extendee && (o.extendee = e.extendee), void 0 !== e.defaultValue && (o.defaultValue = e.defaultValue), void 0 !== e.oneofIndex && (o.oneofIndex = Math.round(e.oneofIndex)), void 0 !== e.jsonName && (o.jsonName = e.jsonName), void 0 !== e.options && (o.options = e.options ? F.toJSON(e.options) : void 0), void 0 !== e.proto3Optional && (o.proto3Optional = e.proto3Optional), o
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u;
						const c = {
							$type: "google.protobuf.FieldDescriptorProto",
							name: "",
							number: 0,
							label: 1,
							type: 1,
							typeName: "",
							extendee: "",
							defaultValue: "",
							oneofIndex: 0,
							jsonName: "",
							options: void 0,
							proto3Optional: !1
						};
						return c.name = null !== (t = e.name) && void 0 !== t ? t : "", c.number = null !== (o = e.number) && void 0 !== o ? o : 0, c.label = null !== (i = e.label) && void 0 !== i ? i : 1, c.type = null !== (r = e.type) && void 0 !== r ? r : 1, c.typeName = null !== (n = e.typeName) && void 0 !== n ? n : "", c.extendee = null !== (a = e.extendee) && void 0 !== a ? a : "", c.defaultValue = null !== (s = e.defaultValue) && void 0 !== s ? s : "", c.oneofIndex = null !== (d = e.oneofIndex) && void 0 !== d ? d : 0, c.jsonName = null !== (l = e.jsonName) && void 0 !== l ? l : "", c.options = void 0 !== e.options && null !== e.options ? F.fromPartial(e.options) : void 0, c.proto3Optional = null !== (u = e.proto3Optional) && void 0 !== u && u, c
					}
				};
				d.a.set(N.$type, N);
				const R = {
					$type: "google.protobuf.OneofDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return "" !== e.name && t.uint32(10).string(e.name), void 0 !== e.options && j.encode(e.options, t.uint32(18).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.OneofDescriptorProto",
							name: "",
							options: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.options = j.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: R.$type,
						name: K(e.name) ? String(e.name) : "",
						options: K(e.options) ? j.fromJSON(e.options) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), void 0 !== e.options && (t.options = e.options ? j.toJSON(e.options) : void 0), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.OneofDescriptorProto",
							name: "",
							options: void 0
						};
						return o.name = null !== (t = e.name) && void 0 !== t ? t : "", o.options = void 0 !== e.options && null !== e.options ? j.fromPartial(e.options) : void 0, o
					}
				};
				d.a.set(R.$type, R);
				const $ = {
					$type: "google.protobuf.EnumDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						"" !== e.name && t.uint32(10).string(e.name);
						for (const o of e.value) I.encode(o, t.uint32(18).fork()).ldelim();
						void 0 !== e.options && M.encode(e.options, t.uint32(26).fork()).ldelim();
						for (const o of e.reservedRange) C.encode(o, t.uint32(34).fork()).ldelim();
						for (const o of e.reservedName) t.uint32(42).string(o);
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.EnumDescriptorProto",
							name: "",
							value: [],
							options: void 0,
							reservedRange: [],
							reservedName: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.value.push(I.decode(o, o.uint32()));
									break;
								case 3:
									r.options = M.decode(o, o.uint32());
									break;
								case 4:
									r.reservedRange.push(C.decode(o, o.uint32()));
									break;
								case 5:
									r.reservedName.push(o.string());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: $.$type,
						name: K(e.name) ? String(e.name) : "",
						value: Array.isArray(null == e ? void 0 : e.value) ? e.value.map(e => I.fromJSON(e)) : [],
						options: K(e.options) ? M.fromJSON(e.options) : void 0,
						reservedRange: Array.isArray(null == e ? void 0 : e.reservedRange) ? e.reservedRange.map(e => C.fromJSON(e)) : [],
						reservedName: Array.isArray(null == e ? void 0 : e.reservedName) ? e.reservedName.map(e => String(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), e.value ? t.value = e.value.map(e => e ? I.toJSON(e) : void 0) : t.value = [], void 0 !== e.options && (t.options = e.options ? M.toJSON(e.options) : void 0), e.reservedRange ? t.reservedRange = e.reservedRange.map(e => e ? C.toJSON(e) : void 0) : t.reservedRange = [], e.reservedName ? t.reservedName = e.reservedName.map(e => e) : t.reservedName = [], t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "google.protobuf.EnumDescriptorProto",
							name: "",
							value: [],
							options: void 0,
							reservedRange: [],
							reservedName: []
						};
						return n.name = null !== (t = e.name) && void 0 !== t ? t : "", n.value = (null === (o = e.value) || void 0 === o ? void 0 : o.map(e => I.fromPartial(e))) || [], n.options = void 0 !== e.options && null !== e.options ? M.fromPartial(e.options) : void 0, n.reservedRange = (null === (i = e.reservedRange) || void 0 === i ? void 0 : i.map(e => C.fromPartial(e))) || [], n.reservedName = (null === (r = e.reservedName) || void 0 === r ? void 0 : r.map(e => e)) || [], n
					}
				};
				d.a.set($.$type, $);
				const C = {
					$type: "google.protobuf.EnumDescriptorProto.EnumReservedRange",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return 0 !== e.start && t.uint32(8).int32(e.start), 0 !== e.end && t.uint32(16).int32(e.end), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.EnumDescriptorProto.EnumReservedRange",
							start: 0,
							end: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.start = o.int32();
									break;
								case 2:
									r.end = o.int32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: C.$type,
						start: K(e.start) ? Number(e.start) : 0,
						end: K(e.end) ? Number(e.end) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.start && (t.start = Math.round(e.start)), void 0 !== e.end && (t.end = Math.round(e.end)), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.EnumDescriptorProto.EnumReservedRange",
							start: 0,
							end: 0
						};
						return i.start = null !== (t = e.start) && void 0 !== t ? t : 0, i.end = null !== (o = e.end) && void 0 !== o ? o : 0, i
					}
				};
				d.a.set(C.$type, C);
				const I = {
					$type: "google.protobuf.EnumValueDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return "" !== e.name && t.uint32(10).string(e.name), 0 !== e.number && t.uint32(16).int32(e.number), void 0 !== e.options && D.encode(e.options, t.uint32(26).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.EnumValueDescriptorProto",
							name: "",
							number: 0,
							options: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.number = o.int32();
									break;
								case 3:
									r.options = D.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: I.$type,
						name: K(e.name) ? String(e.name) : "",
						number: K(e.number) ? Number(e.number) : 0,
						options: K(e.options) ? D.fromJSON(e.options) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), void 0 !== e.number && (t.number = Math.round(e.number)), void 0 !== e.options && (t.options = e.options ? D.toJSON(e.options) : void 0), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.EnumValueDescriptorProto",
							name: "",
							number: 0,
							options: void 0
						};
						return i.name = null !== (t = e.name) && void 0 !== t ? t : "", i.number = null !== (o = e.number) && void 0 !== o ? o : 0, i.options = void 0 !== e.options && null !== e.options ? D.fromPartial(e.options) : void 0, i
					}
				};
				d.a.set(I.$type, I);
				const E = {
					$type: "google.protobuf.ServiceDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						"" !== e.name && t.uint32(10).string(e.name);
						for (const o of e.method) A.encode(o, t.uint32(18).fork()).ldelim();
						return void 0 !== e.options && J.encode(e.options, t.uint32(26).fork()).ldelim(), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.ServiceDescriptorProto",
							name: "",
							method: [],
							options: void 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.method.push(A.decode(o, o.uint32()));
									break;
								case 3:
									r.options = J.decode(o, o.uint32());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: E.$type,
						name: K(e.name) ? String(e.name) : "",
						method: Array.isArray(null == e ? void 0 : e.method) ? e.method.map(e => A.fromJSON(e)) : [],
						options: K(e.options) ? J.fromJSON(e.options) : void 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), e.method ? t.method = e.method.map(e => e ? A.toJSON(e) : void 0) : t.method = [], void 0 !== e.options && (t.options = e.options ? J.toJSON(e.options) : void 0), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.ServiceDescriptorProto",
							name: "",
							method: [],
							options: void 0
						};
						return i.name = null !== (t = e.name) && void 0 !== t ? t : "", i.method = (null === (o = e.method) || void 0 === o ? void 0 : o.map(e => A.fromPartial(e))) || [], i.options = void 0 !== e.options && null !== e.options ? J.fromPartial(e.options) : void 0, i
					}
				};
				d.a.set(E.$type, E);
				const A = {
					$type: "google.protobuf.MethodDescriptorProto",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return "" !== e.name && t.uint32(10).string(e.name), "" !== e.inputType && t.uint32(18).string(e.inputType), "" !== e.outputType && t.uint32(26).string(e.outputType), void 0 !== e.options && _.encode(e.options, t.uint32(34).fork()).ldelim(), !0 === e.clientStreaming && t.uint32(40).bool(e.clientStreaming), !0 === e.serverStreaming && t.uint32(48).bool(e.serverStreaming), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.MethodDescriptorProto",
							name: "",
							inputType: "",
							outputType: "",
							options: void 0,
							clientStreaming: !1,
							serverStreaming: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.name = o.string();
									break;
								case 2:
									r.inputType = o.string();
									break;
								case 3:
									r.outputType = o.string();
									break;
								case 4:
									r.options = _.decode(o, o.uint32());
									break;
								case 5:
									r.clientStreaming = o.bool();
									break;
								case 6:
									r.serverStreaming = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: A.$type,
						name: K(e.name) ? String(e.name) : "",
						inputType: K(e.inputType) ? String(e.inputType) : "",
						outputType: K(e.outputType) ? String(e.outputType) : "",
						options: K(e.options) ? _.fromJSON(e.options) : void 0,
						clientStreaming: !!K(e.clientStreaming) && Boolean(e.clientStreaming),
						serverStreaming: !!K(e.serverStreaming) && Boolean(e.serverStreaming)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.name && (t.name = e.name), void 0 !== e.inputType && (t.inputType = e.inputType), void 0 !== e.outputType && (t.outputType = e.outputType), void 0 !== e.options && (t.options = e.options ? _.toJSON(e.options) : void 0), void 0 !== e.clientStreaming && (t.clientStreaming = e.clientStreaming), void 0 !== e.serverStreaming && (t.serverStreaming = e.serverStreaming), t
					},
					fromPartial(e) {
						var t, o, i, r, n;
						const a = {
							$type: "google.protobuf.MethodDescriptorProto",
							name: "",
							inputType: "",
							outputType: "",
							options: void 0,
							clientStreaming: !1,
							serverStreaming: !1
						};
						return a.name = null !== (t = e.name) && void 0 !== t ? t : "", a.inputType = null !== (o = e.inputType) && void 0 !== o ? o : "", a.outputType = null !== (i = e.outputType) && void 0 !== i ? i : "", a.options = void 0 !== e.options && null !== e.options ? _.fromPartial(e.options) : void 0, a.clientStreaming = null !== (r = e.clientStreaming) && void 0 !== r && r, a.serverStreaming = null !== (n = e.serverStreaming) && void 0 !== n && n, a
					}
				};
				d.a.set(A.$type, A);
				const P = {
					$type: "google.protobuf.FileOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						"" !== e.javaPackage && t.uint32(10).string(e.javaPackage), "" !== e.javaOuterClassname && t.uint32(66).string(e.javaOuterClassname), !0 === e.javaMultipleFiles && t.uint32(80).bool(e.javaMultipleFiles), !0 === e.javaGenerateEqualsAndHash && t.uint32(160).bool(e.javaGenerateEqualsAndHash), !0 === e.javaStringCheckUtf8 && t.uint32(216).bool(e.javaStringCheckUtf8), 1 !== e.optimizeFor && t.uint32(72).int32(e.optimizeFor), "" !== e.goPackage && t.uint32(90).string(e.goPackage), !0 === e.ccGenericServices && t.uint32(128).bool(e.ccGenericServices), !0 === e.javaGenericServices && t.uint32(136).bool(e.javaGenericServices), !0 === e.pyGenericServices && t.uint32(144).bool(e.pyGenericServices), !0 === e.phpGenericServices && t.uint32(336).bool(e.phpGenericServices), !0 === e.deprecated && t.uint32(184).bool(e.deprecated), !0 === e.ccEnableArenas && t.uint32(248).bool(e.ccEnableArenas), "" !== e.objcClassPrefix && t.uint32(290).string(e.objcClassPrefix), "" !== e.csharpNamespace && t.uint32(298).string(e.csharpNamespace), "" !== e.swiftPrefix && t.uint32(314).string(e.swiftPrefix), "" !== e.phpClassPrefix && t.uint32(322).string(e.phpClassPrefix), "" !== e.phpNamespace && t.uint32(330).string(e.phpNamespace), "" !== e.phpMetadataNamespace && t.uint32(354).string(e.phpMetadataNamespace), "" !== e.rubyPackage && t.uint32(362).string(e.rubyPackage);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.FileOptions",
							javaPackage: "",
							javaOuterClassname: "",
							javaMultipleFiles: !1,
							javaGenerateEqualsAndHash: !1,
							javaStringCheckUtf8: !1,
							optimizeFor: 1,
							goPackage: "",
							ccGenericServices: !1,
							javaGenericServices: !1,
							pyGenericServices: !1,
							phpGenericServices: !1,
							deprecated: !1,
							ccEnableArenas: !1,
							objcClassPrefix: "",
							csharpNamespace: "",
							swiftPrefix: "",
							phpClassPrefix: "",
							phpNamespace: "",
							phpMetadataNamespace: "",
							rubyPackage: "",
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.javaPackage = o.string();
									break;
								case 8:
									r.javaOuterClassname = o.string();
									break;
								case 10:
									r.javaMultipleFiles = o.bool();
									break;
								case 20:
									r.javaGenerateEqualsAndHash = o.bool();
									break;
								case 27:
									r.javaStringCheckUtf8 = o.bool();
									break;
								case 9:
									r.optimizeFor = o.int32();
									break;
								case 11:
									r.goPackage = o.string();
									break;
								case 16:
									r.ccGenericServices = o.bool();
									break;
								case 17:
									r.javaGenericServices = o.bool();
									break;
								case 18:
									r.pyGenericServices = o.bool();
									break;
								case 42:
									r.phpGenericServices = o.bool();
									break;
								case 23:
									r.deprecated = o.bool();
									break;
								case 31:
									r.ccEnableArenas = o.bool();
									break;
								case 36:
									r.objcClassPrefix = o.string();
									break;
								case 37:
									r.csharpNamespace = o.string();
									break;
								case 39:
									r.swiftPrefix = o.string();
									break;
								case 40:
									r.phpClassPrefix = o.string();
									break;
								case 41:
									r.phpNamespace = o.string();
									break;
								case 44:
									r.phpMetadataNamespace = o.string();
									break;
								case 45:
									r.rubyPackage = o.string();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: P.$type,
						javaPackage: K(e.javaPackage) ? String(e.javaPackage) : "",
						javaOuterClassname: K(e.javaOuterClassname) ? String(e.javaOuterClassname) : "",
						javaMultipleFiles: !!K(e.javaMultipleFiles) && Boolean(e.javaMultipleFiles),
						javaGenerateEqualsAndHash: !!K(e.javaGenerateEqualsAndHash) && Boolean(e.javaGenerateEqualsAndHash),
						javaStringCheckUtf8: !!K(e.javaStringCheckUtf8) && Boolean(e.javaStringCheckUtf8),
						optimizeFor: K(e.optimizeFor) ? f(e.optimizeFor) : 1,
						goPackage: K(e.goPackage) ? String(e.goPackage) : "",
						ccGenericServices: !!K(e.ccGenericServices) && Boolean(e.ccGenericServices),
						javaGenericServices: !!K(e.javaGenericServices) && Boolean(e.javaGenericServices),
						pyGenericServices: !!K(e.pyGenericServices) && Boolean(e.pyGenericServices),
						phpGenericServices: !!K(e.phpGenericServices) && Boolean(e.phpGenericServices),
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						ccEnableArenas: !!K(e.ccEnableArenas) && Boolean(e.ccEnableArenas),
						objcClassPrefix: K(e.objcClassPrefix) ? String(e.objcClassPrefix) : "",
						csharpNamespace: K(e.csharpNamespace) ? String(e.csharpNamespace) : "",
						swiftPrefix: K(e.swiftPrefix) ? String(e.swiftPrefix) : "",
						phpClassPrefix: K(e.phpClassPrefix) ? String(e.phpClassPrefix) : "",
						phpNamespace: K(e.phpNamespace) ? String(e.phpNamespace) : "",
						phpMetadataNamespace: K(e.phpMetadataNamespace) ? String(e.phpMetadataNamespace) : "",
						rubyPackage: K(e.rubyPackage) ? String(e.rubyPackage) : "",
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.javaPackage && (t.javaPackage = e.javaPackage), void 0 !== e.javaOuterClassname && (t.javaOuterClassname = e.javaOuterClassname), void 0 !== e.javaMultipleFiles && (t.javaMultipleFiles = e.javaMultipleFiles), void 0 !== e.javaGenerateEqualsAndHash && (t.javaGenerateEqualsAndHash = e.javaGenerateEqualsAndHash), void 0 !== e.javaStringCheckUtf8 && (t.javaStringCheckUtf8 = e.javaStringCheckUtf8), void 0 !== e.optimizeFor && (t.optimizeFor = function(e) {
							switch (e) {
								case r.SPEED:
									return "SPEED";
								case r.CODE_SIZE:
									return "CODE_SIZE";
								case r.LITE_RUNTIME:
									return "LITE_RUNTIME";
								default:
									return "UNKNOWN"
							}
						}(e.optimizeFor)), void 0 !== e.goPackage && (t.goPackage = e.goPackage), void 0 !== e.ccGenericServices && (t.ccGenericServices = e.ccGenericServices), void 0 !== e.javaGenericServices && (t.javaGenericServices = e.javaGenericServices), void 0 !== e.pyGenericServices && (t.pyGenericServices = e.pyGenericServices), void 0 !== e.phpGenericServices && (t.phpGenericServices = e.phpGenericServices), void 0 !== e.deprecated && (t.deprecated = e.deprecated), void 0 !== e.ccEnableArenas && (t.ccEnableArenas = e.ccEnableArenas), void 0 !== e.objcClassPrefix && (t.objcClassPrefix = e.objcClassPrefix), void 0 !== e.csharpNamespace && (t.csharpNamespace = e.csharpNamespace), void 0 !== e.swiftPrefix && (t.swiftPrefix = e.swiftPrefix), void 0 !== e.phpClassPrefix && (t.phpClassPrefix = e.phpClassPrefix), void 0 !== e.phpNamespace && (t.phpNamespace = e.phpNamespace), void 0 !== e.phpMetadataNamespace && (t.phpMetadataNamespace = e.phpMetadataNamespace), void 0 !== e.rubyPackage && (t.rubyPackage = e.rubyPackage), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s, d, l, u, c, p, v, m, f, g, h, y, b, k, S;
						const w = {
							$type: "google.protobuf.FileOptions",
							javaPackage: "",
							javaOuterClassname: "",
							javaMultipleFiles: !1,
							javaGenerateEqualsAndHash: !1,
							javaStringCheckUtf8: !1,
							optimizeFor: 1,
							goPackage: "",
							ccGenericServices: !1,
							javaGenericServices: !1,
							pyGenericServices: !1,
							phpGenericServices: !1,
							deprecated: !1,
							ccEnableArenas: !1,
							objcClassPrefix: "",
							csharpNamespace: "",
							swiftPrefix: "",
							phpClassPrefix: "",
							phpNamespace: "",
							phpMetadataNamespace: "",
							rubyPackage: "",
							uninterpretedOption: []
						};
						return w.javaPackage = null !== (t = e.javaPackage) && void 0 !== t ? t : "", w.javaOuterClassname = null !== (o = e.javaOuterClassname) && void 0 !== o ? o : "", w.javaMultipleFiles = null !== (i = e.javaMultipleFiles) && void 0 !== i && i, w.javaGenerateEqualsAndHash = null !== (r = e.javaGenerateEqualsAndHash) && void 0 !== r && r, w.javaStringCheckUtf8 = null !== (n = e.javaStringCheckUtf8) && void 0 !== n && n, w.optimizeFor = null !== (a = e.optimizeFor) && void 0 !== a ? a : 1, w.goPackage = null !== (s = e.goPackage) && void 0 !== s ? s : "", w.ccGenericServices = null !== (d = e.ccGenericServices) && void 0 !== d && d, w.javaGenericServices = null !== (l = e.javaGenericServices) && void 0 !== l && l, w.pyGenericServices = null !== (u = e.pyGenericServices) && void 0 !== u && u, w.phpGenericServices = null !== (c = e.phpGenericServices) && void 0 !== c && c, w.deprecated = null !== (p = e.deprecated) && void 0 !== p && p, w.ccEnableArenas = null !== (v = e.ccEnableArenas) && void 0 !== v && v, w.objcClassPrefix = null !== (m = e.objcClassPrefix) && void 0 !== m ? m : "", w.csharpNamespace = null !== (f = e.csharpNamespace) && void 0 !== f ? f : "", w.swiftPrefix = null !== (g = e.swiftPrefix) && void 0 !== g ? g : "", w.phpClassPrefix = null !== (h = e.phpClassPrefix) && void 0 !== h ? h : "", w.phpNamespace = null !== (y = e.phpNamespace) && void 0 !== y ? y : "", w.phpMetadataNamespace = null !== (b = e.phpMetadataNamespace) && void 0 !== b ? b : "", w.rubyPackage = null !== (k = e.rubyPackage) && void 0 !== k ? k : "", w.uninterpretedOption = (null === (S = e.uninterpretedOption) || void 0 === S ? void 0 : S.map(e => V.fromPartial(e))) || [], w
					}
				};
				d.a.set(P.$type, P);
				const x = {
					$type: "google.protobuf.MessageOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						!0 === e.messageSetWireFormat && t.uint32(8).bool(e.messageSetWireFormat), !0 === e.noStandardDescriptorAccessor && t.uint32(16).bool(e.noStandardDescriptorAccessor), !0 === e.deprecated && t.uint32(24).bool(e.deprecated), !0 === e.mapEntry && t.uint32(56).bool(e.mapEntry);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.MessageOptions",
							messageSetWireFormat: !1,
							noStandardDescriptorAccessor: !1,
							deprecated: !1,
							mapEntry: !1,
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.messageSetWireFormat = o.bool();
									break;
								case 2:
									r.noStandardDescriptorAccessor = o.bool();
									break;
								case 3:
									r.deprecated = o.bool();
									break;
								case 7:
									r.mapEntry = o.bool();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: x.$type,
						messageSetWireFormat: !!K(e.messageSetWireFormat) && Boolean(e.messageSetWireFormat),
						noStandardDescriptorAccessor: !!K(e.noStandardDescriptorAccessor) && Boolean(e.noStandardDescriptorAccessor),
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						mapEntry: !!K(e.mapEntry) && Boolean(e.mapEntry),
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.messageSetWireFormat && (t.messageSetWireFormat = e.messageSetWireFormat), void 0 !== e.noStandardDescriptorAccessor && (t.noStandardDescriptorAccessor = e.noStandardDescriptorAccessor), void 0 !== e.deprecated && (t.deprecated = e.deprecated), void 0 !== e.mapEntry && (t.mapEntry = e.mapEntry), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o, i, r, n;
						const a = {
							$type: "google.protobuf.MessageOptions",
							messageSetWireFormat: !1,
							noStandardDescriptorAccessor: !1,
							deprecated: !1,
							mapEntry: !1,
							uninterpretedOption: []
						};
						return a.messageSetWireFormat = null !== (t = e.messageSetWireFormat) && void 0 !== t && t, a.noStandardDescriptorAccessor = null !== (o = e.noStandardDescriptorAccessor) && void 0 !== o && o, a.deprecated = null !== (i = e.deprecated) && void 0 !== i && i, a.mapEntry = null !== (r = e.mapEntry) && void 0 !== r && r, a.uninterpretedOption = (null === (n = e.uninterpretedOption) || void 0 === n ? void 0 : n.map(e => V.fromPartial(e))) || [], a
					}
				};
				d.a.set(x.$type, x);
				const F = {
					$type: "google.protobuf.FieldOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						0 !== e.ctype && t.uint32(8).int32(e.ctype), !0 === e.packed && t.uint32(16).bool(e.packed), 0 !== e.jstype && t.uint32(48).int32(e.jstype), !0 === e.lazy && t.uint32(40).bool(e.lazy), !0 === e.deprecated && t.uint32(24).bool(e.deprecated), !0 === e.weak && t.uint32(80).bool(e.weak);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.FieldOptions",
							ctype: 0,
							packed: !1,
							jstype: 0,
							lazy: !1,
							deprecated: !1,
							weak: !1,
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.ctype = o.int32();
									break;
								case 2:
									r.packed = o.bool();
									break;
								case 6:
									r.jstype = o.int32();
									break;
								case 5:
									r.lazy = o.bool();
									break;
								case 3:
									r.deprecated = o.bool();
									break;
								case 10:
									r.weak = o.bool();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: F.$type,
						ctype: K(e.ctype) ? g(e.ctype) : 0,
						packed: !!K(e.packed) && Boolean(e.packed),
						jstype: K(e.jstype) ? h(e.jstype) : 0,
						lazy: !!K(e.lazy) && Boolean(e.lazy),
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						weak: !!K(e.weak) && Boolean(e.weak),
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.ctype && (t.ctype = function(e) {
							switch (e) {
								case n.STRING:
									return "STRING";
								case n.CORD:
									return "CORD";
								case n.STRING_PIECE:
									return "STRING_PIECE";
								default:
									return "UNKNOWN"
							}
						}(e.ctype)), void 0 !== e.packed && (t.packed = e.packed), void 0 !== e.jstype && (t.jstype = function(e) {
							switch (e) {
								case a.JS_NORMAL:
									return "JS_NORMAL";
								case a.JS_STRING:
									return "JS_STRING";
								case a.JS_NUMBER:
									return "JS_NUMBER";
								default:
									return "UNKNOWN"
							}
						}(e.jstype)), void 0 !== e.lazy && (t.lazy = e.lazy), void 0 !== e.deprecated && (t.deprecated = e.deprecated), void 0 !== e.weak && (t.weak = e.weak), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s;
						const d = {
							$type: "google.protobuf.FieldOptions",
							ctype: 0,
							packed: !1,
							jstype: 0,
							lazy: !1,
							deprecated: !1,
							weak: !1,
							uninterpretedOption: []
						};
						return d.ctype = null !== (t = e.ctype) && void 0 !== t ? t : 0, d.packed = null !== (o = e.packed) && void 0 !== o && o, d.jstype = null !== (i = e.jstype) && void 0 !== i ? i : 0, d.lazy = null !== (r = e.lazy) && void 0 !== r && r, d.deprecated = null !== (n = e.deprecated) && void 0 !== n && n, d.weak = null !== (a = e.weak) && void 0 !== a && a, d.uninterpretedOption = (null === (s = e.uninterpretedOption) || void 0 === s ? void 0 : s.map(e => V.fromPartial(e))) || [], d
					}
				};
				d.a.set(F.$type, F);
				const j = {
					$type: "google.protobuf.OneofOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.OneofOptions",
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: j.$type,
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.OneofOptions",
							uninterpretedOption: []
						};
						return o.uninterpretedOption = (null === (t = e.uninterpretedOption) || void 0 === t ? void 0 : t.map(e => V.fromPartial(e))) || [], o
					}
				};
				d.a.set(j.$type, j);
				const M = {
					$type: "google.protobuf.EnumOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						!0 === e.allowAlias && t.uint32(16).bool(e.allowAlias), !0 === e.deprecated && t.uint32(24).bool(e.deprecated);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.EnumOptions",
							allowAlias: !1,
							deprecated: !1,
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 2:
									r.allowAlias = o.bool();
									break;
								case 3:
									r.deprecated = o.bool();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: M.$type,
						allowAlias: !!K(e.allowAlias) && Boolean(e.allowAlias),
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.allowAlias && (t.allowAlias = e.allowAlias), void 0 !== e.deprecated && (t.deprecated = e.deprecated), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "google.protobuf.EnumOptions",
							allowAlias: !1,
							deprecated: !1,
							uninterpretedOption: []
						};
						return r.allowAlias = null !== (t = e.allowAlias) && void 0 !== t && t, r.deprecated = null !== (o = e.deprecated) && void 0 !== o && o, r.uninterpretedOption = (null === (i = e.uninterpretedOption) || void 0 === i ? void 0 : i.map(e => V.fromPartial(e))) || [], r
					}
				};
				d.a.set(M.$type, M);
				const D = {
					$type: "google.protobuf.EnumValueOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						!0 === e.deprecated && t.uint32(8).bool(e.deprecated);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.EnumValueOptions",
							deprecated: !1,
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.deprecated = o.bool();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: D.$type,
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.deprecated && (t.deprecated = e.deprecated), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.EnumValueOptions",
							deprecated: !1,
							uninterpretedOption: []
						};
						return i.deprecated = null !== (t = e.deprecated) && void 0 !== t && t, i.uninterpretedOption = (null === (o = e.uninterpretedOption) || void 0 === o ? void 0 : o.map(e => V.fromPartial(e))) || [], i
					}
				};
				d.a.set(D.$type, D);
				const J = {
					$type: "google.protobuf.ServiceOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						!0 === e.deprecated && t.uint32(264).bool(e.deprecated);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.ServiceOptions",
							deprecated: !1,
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 33:
									r.deprecated = o.bool();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: J.$type,
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.deprecated && (t.deprecated = e.deprecated), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.ServiceOptions",
							deprecated: !1,
							uninterpretedOption: []
						};
						return i.deprecated = null !== (t = e.deprecated) && void 0 !== t && t, i.uninterpretedOption = (null === (o = e.uninterpretedOption) || void 0 === o ? void 0 : o.map(e => V.fromPartial(e))) || [], i
					}
				};
				d.a.set(J.$type, J);
				const _ = {
					$type: "google.protobuf.MethodOptions",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						!0 === e.deprecated && t.uint32(264).bool(e.deprecated), 0 !== e.idempotencyLevel && t.uint32(272).int32(e.idempotencyLevel);
						for (const o of e.uninterpretedOption) V.encode(o, t.uint32(7994).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.MethodOptions",
							deprecated: !1,
							idempotencyLevel: 0,
							uninterpretedOption: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 33:
									r.deprecated = o.bool();
									break;
								case 34:
									r.idempotencyLevel = o.int32();
									break;
								case 999:
									r.uninterpretedOption.push(V.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: _.$type,
						deprecated: !!K(e.deprecated) && Boolean(e.deprecated),
						idempotencyLevel: K(e.idempotencyLevel) ? y(e.idempotencyLevel) : 0,
						uninterpretedOption: Array.isArray(null == e ? void 0 : e.uninterpretedOption) ? e.uninterpretedOption.map(e => V.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.deprecated && (t.deprecated = e.deprecated), void 0 !== e.idempotencyLevel && (t.idempotencyLevel = function(e) {
							switch (e) {
								case s.IDEMPOTENCY_UNKNOWN:
									return "IDEMPOTENCY_UNKNOWN";
								case s.NO_SIDE_EFFECTS:
									return "NO_SIDE_EFFECTS";
								case s.IDEMPOTENT:
									return "IDEMPOTENT";
								default:
									return "UNKNOWN"
							}
						}(e.idempotencyLevel)), e.uninterpretedOption ? t.uninterpretedOption = e.uninterpretedOption.map(e => e ? V.toJSON(e) : void 0) : t.uninterpretedOption = [], t
					},
					fromPartial(e) {
						var t, o, i;
						const r = {
							$type: "google.protobuf.MethodOptions",
							deprecated: !1,
							idempotencyLevel: 0,
							uninterpretedOption: []
						};
						return r.deprecated = null !== (t = e.deprecated) && void 0 !== t && t, r.idempotencyLevel = null !== (o = e.idempotencyLevel) && void 0 !== o ? o : 0, r.uninterpretedOption = (null === (i = e.uninterpretedOption) || void 0 === i ? void 0 : i.map(e => V.fromPartial(e))) || [], r
					}
				};

				function B() {
					return {
						$type: "google.protobuf.UninterpretedOption",
						name: [],
						identifierValue: "",
						positiveIntValue: 0,
						negativeIntValue: 0,
						doubleValue: 0,
						stringValue: new Uint8Array,
						aggregateValue: ""
					}
				}
				d.a.set(_.$type, _);
				const V = {
					$type: "google.protobuf.UninterpretedOption",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						for (const o of e.name) L.encode(o, t.uint32(18).fork()).ldelim();
						return "" !== e.identifierValue && t.uint32(26).string(e.identifierValue), 0 !== e.positiveIntValue && t.uint32(32).uint64(e.positiveIntValue), 0 !== e.negativeIntValue && t.uint32(40).int64(e.negativeIntValue), 0 !== e.doubleValue && t.uint32(49).double(e.doubleValue), 0 !== e.stringValue.length && t.uint32(58).bytes(e.stringValue), "" !== e.aggregateValue && t.uint32(66).string(e.aggregateValue), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = B();
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 2:
									r.name.push(L.decode(o, o.uint32()));
									break;
								case 3:
									r.identifierValue = o.string();
									break;
								case 4:
									r.positiveIntValue = X(o.uint64());
									break;
								case 5:
									r.negativeIntValue = X(o.int64());
									break;
								case 6:
									r.doubleValue = o.double();
									break;
								case 7:
									r.stringValue = o.bytes();
									break;
								case 8:
									r.aggregateValue = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: V.$type,
						name: Array.isArray(null == e ? void 0 : e.name) ? e.name.map(e => L.fromJSON(e)) : [],
						identifierValue: K(e.identifierValue) ? String(e.identifierValue) : "",
						positiveIntValue: K(e.positiveIntValue) ? Number(e.positiveIntValue) : 0,
						negativeIntValue: K(e.negativeIntValue) ? Number(e.negativeIntValue) : 0,
						doubleValue: K(e.doubleValue) ? Number(e.doubleValue) : 0,
						stringValue: K(e.stringValue) ? Y(e.stringValue) : new Uint8Array,
						aggregateValue: K(e.aggregateValue) ? String(e.aggregateValue) : ""
					}),
					toJSON(e) {
						const t = {};
						return e.name ? t.name = e.name.map(e => e ? L.toJSON(e) : void 0) : t.name = [], void 0 !== e.identifierValue && (t.identifierValue = e.identifierValue), void 0 !== e.positiveIntValue && (t.positiveIntValue = Math.round(e.positiveIntValue)), void 0 !== e.negativeIntValue && (t.negativeIntValue = Math.round(e.negativeIntValue)), void 0 !== e.doubleValue && (t.doubleValue = e.doubleValue), void 0 !== e.stringValue && (t.stringValue = function(e) {
							const t = [];
							for (const o of e) t.push(String.fromCharCode(o));
							return Z(t.join(""))
						}(void 0 !== e.stringValue ? e.stringValue : new Uint8Array)), void 0 !== e.aggregateValue && (t.aggregateValue = e.aggregateValue), t
					},
					fromPartial(e) {
						var t, o, i, r, n, a, s;
						const d = B();
						return d.name = (null === (t = e.name) || void 0 === t ? void 0 : t.map(e => L.fromPartial(e))) || [], d.identifierValue = null !== (o = e.identifierValue) && void 0 !== o ? o : "", d.positiveIntValue = null !== (i = e.positiveIntValue) && void 0 !== i ? i : 0, d.negativeIntValue = null !== (r = e.negativeIntValue) && void 0 !== r ? r : 0, d.doubleValue = null !== (n = e.doubleValue) && void 0 !== n ? n : 0, d.stringValue = null !== (a = e.stringValue) && void 0 !== a ? a : new Uint8Array, d.aggregateValue = null !== (s = e.aggregateValue) && void 0 !== s ? s : "", d
					}
				};
				d.a.set(V.$type, V);
				const L = {
					$type: "google.protobuf.UninterpretedOption.NamePart",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						return "" !== e.namePart && t.uint32(10).string(e.namePart), !0 === e.isExtension && t.uint32(16).bool(e.isExtension), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.UninterpretedOption.NamePart",
							namePart: "",
							isExtension: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.namePart = o.string();
									break;
								case 2:
									r.isExtension = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: L.$type,
						namePart: K(e.namePart) ? String(e.namePart) : "",
						isExtension: !!K(e.isExtension) && Boolean(e.isExtension)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.namePart && (t.namePart = e.namePart), void 0 !== e.isExtension && (t.isExtension = e.isExtension), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.UninterpretedOption.NamePart",
							namePart: "",
							isExtension: !1
						};
						return i.namePart = null !== (t = e.namePart) && void 0 !== t ? t : "", i.isExtension = null !== (o = e.isExtension) && void 0 !== o && o, i
					}
				};
				d.a.set(L.$type, L);
				const U = {
					$type: "google.protobuf.SourceCodeInfo",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						for (const o of e.location) q.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.SourceCodeInfo",
							location: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.location.push(q.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: U.$type,
						location: Array.isArray(null == e ? void 0 : e.location) ? e.location.map(e => q.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.location ? t.location = e.location.map(e => e ? q.toJSON(e) : void 0) : t.location = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.SourceCodeInfo",
							location: []
						};
						return o.location = (null === (t = e.location) || void 0 === t ? void 0 : t.map(e => q.fromPartial(e))) || [], o
					}
				};
				d.a.set(U.$type, U);
				const q = {
					$type: "google.protobuf.SourceCodeInfo.Location",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						t.uint32(10).fork();
						for (const o of e.path) t.int32(o);
						t.ldelim(), t.uint32(18).fork();
						for (const o of e.span) t.int32(o);
						t.ldelim(), "" !== e.leadingComments && t.uint32(26).string(e.leadingComments), "" !== e.trailingComments && t.uint32(34).string(e.trailingComments);
						for (const o of e.leadingDetachedComments) t.uint32(50).string(o);
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.SourceCodeInfo.Location",
							path: [],
							span: [],
							leadingComments: "",
							trailingComments: "",
							leadingDetachedComments: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									if (2 == (7 & e)) {
										const e = o.uint32() + o.pos;
										for (; o.pos < e;) r.path.push(o.int32())
									} else r.path.push(o.int32());
									break;
								case 2:
									if (2 == (7 & e)) {
										const e = o.uint32() + o.pos;
										for (; o.pos < e;) r.span.push(o.int32())
									} else r.span.push(o.int32());
									break;
								case 3:
									r.leadingComments = o.string();
									break;
								case 4:
									r.trailingComments = o.string();
									break;
								case 6:
									r.leadingDetachedComments.push(o.string());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: q.$type,
						path: Array.isArray(null == e ? void 0 : e.path) ? e.path.map(e => Number(e)) : [],
						span: Array.isArray(null == e ? void 0 : e.span) ? e.span.map(e => Number(e)) : [],
						leadingComments: K(e.leadingComments) ? String(e.leadingComments) : "",
						trailingComments: K(e.trailingComments) ? String(e.trailingComments) : "",
						leadingDetachedComments: Array.isArray(null == e ? void 0 : e.leadingDetachedComments) ? e.leadingDetachedComments.map(e => String(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.path ? t.path = e.path.map(e => Math.round(e)) : t.path = [], e.span ? t.span = e.span.map(e => Math.round(e)) : t.span = [], void 0 !== e.leadingComments && (t.leadingComments = e.leadingComments), void 0 !== e.trailingComments && (t.trailingComments = e.trailingComments), e.leadingDetachedComments ? t.leadingDetachedComments = e.leadingDetachedComments.map(e => e) : t.leadingDetachedComments = [], t
					},
					fromPartial(e) {
						var t, o, i, r, n;
						const a = {
							$type: "google.protobuf.SourceCodeInfo.Location",
							path: [],
							span: [],
							leadingComments: "",
							trailingComments: "",
							leadingDetachedComments: []
						};
						return a.path = (null === (t = e.path) || void 0 === t ? void 0 : t.map(e => e)) || [], a.span = (null === (o = e.span) || void 0 === o ? void 0 : o.map(e => e)) || [], a.leadingComments = null !== (i = e.leadingComments) && void 0 !== i ? i : "", a.trailingComments = null !== (r = e.trailingComments) && void 0 !== r ? r : "", a.leadingDetachedComments = (null === (n = e.leadingDetachedComments) || void 0 === n ? void 0 : n.map(e => e)) || [], a
					}
				};
				d.a.set(q.$type, q);
				const W = {
					$type: "google.protobuf.GeneratedCodeInfo",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						for (const o of e.annotation) G.encode(o, t.uint32(10).fork()).ldelim();
						return t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.GeneratedCodeInfo",
							annotation: []
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.annotation.push(G.decode(o, o.uint32()));
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: W.$type,
						annotation: Array.isArray(null == e ? void 0 : e.annotation) ? e.annotation.map(e => G.fromJSON(e)) : []
					}),
					toJSON(e) {
						const t = {};
						return e.annotation ? t.annotation = e.annotation.map(e => e ? G.toJSON(e) : void 0) : t.annotation = [], t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.GeneratedCodeInfo",
							annotation: []
						};
						return o.annotation = (null === (t = e.annotation) || void 0 === t ? void 0 : t.map(e => G.fromPartial(e))) || [], o
					}
				};
				d.a.set(W.$type, W);
				const G = {
					$type: "google.protobuf.GeneratedCodeInfo.Annotation",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.a.Writer.create();
						t.uint32(10).fork();
						for (const o of e.path) t.int32(o);
						return t.ldelim(), "" !== e.sourceFile && t.uint32(18).string(e.sourceFile), 0 !== e.begin && t.uint32(24).int32(e.begin), 0 !== e.end && t.uint32(32).int32(e.end), t
					},
					decode(e, t) {
						const o = e instanceof p.a.Reader ? e : new p.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.GeneratedCodeInfo.Annotation",
							path: [],
							sourceFile: "",
							begin: 0,
							end: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									if (2 == (7 & e)) {
										const e = o.uint32() + o.pos;
										for (; o.pos < e;) r.path.push(o.int32())
									} else r.path.push(o.int32());
									break;
								case 2:
									r.sourceFile = o.string();
									break;
								case 3:
									r.begin = o.int32();
									break;
								case 4:
									r.end = o.int32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: G.$type,
						path: Array.isArray(null == e ? void 0 : e.path) ? e.path.map(e => Number(e)) : [],
						sourceFile: K(e.sourceFile) ? String(e.sourceFile) : "",
						begin: K(e.begin) ? Number(e.begin) : 0,
						end: K(e.end) ? Number(e.end) : 0
					}),
					toJSON(e) {
						const t = {};
						return e.path ? t.path = e.path.map(e => Math.round(e)) : t.path = [], void 0 !== e.sourceFile && (t.sourceFile = e.sourceFile), void 0 !== e.begin && (t.begin = Math.round(e.begin)), void 0 !== e.end && (t.end = Math.round(e.end)), t
					},
					fromPartial(e) {
						var t, o, i, r;
						const n = {
							$type: "google.protobuf.GeneratedCodeInfo.Annotation",
							path: [],
							sourceFile: "",
							begin: 0,
							end: 0
						};
						return n.path = (null === (t = e.path) || void 0 === t ? void 0 : t.map(e => e)) || [], n.sourceFile = null !== (o = e.sourceFile) && void 0 !== o ? o : "", n.begin = null !== (i = e.begin) && void 0 !== i ? i : 0, n.end = null !== (r = e.end) && void 0 !== r ? r : 0, n
					}
				};
				d.a.set(G.$type, G);
				var H = (() => {
					if (void 0 !== H) return H;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();
				const z = H.atob || (e => H.Buffer.from(e, "base64").toString("binary"));

				function Y(e) {
					const t = z(e),
						o = new Uint8Array(t.length);
					for (let i = 0; i < t.length; ++i) o[i] = t.charCodeAt(i);
					return o
				}
				const Z = H.btoa || (e => H.Buffer.from(e, "binary").toString("base64"));

				function X(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new H.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function K(e) {
					return null != e
				}
				p.a.util.Long !== u.a && (p.a.util.Long = u.a, p.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/google/protobuf/empty.js": function(e, t, o) {
			"use strict";
			o.d(t, "a", (function() {
				return d
			}));
			var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
				r = o("./node_modules/long/src/long.js"),
				n = o.n(r),
				a = o("./node_modules/protobufjs/minimal.js"),
				s = o.n(a);
			const d = {
				$type: "google.protobuf.Empty",
				encode(e) {
					return arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create()
				},
				decode(e, t) {
					const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.protobuf.Empty"
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						o.skipType(7 & e)
					}
					return r
				},
				fromJSON: e => ({
					$type: d.$type
				}),
				toJSON: e => ({}),
				fromPartial: e => ({
					$type: "google.protobuf.Empty"
				})
			};
			i.a.set(d.$type, d), s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
		},
		"./node_modules/@devvit/protos/types/google/protobuf/struct.js": function(e, t, o) {
			"use strict";
			o.d(t, "b", (function() {
				return u
			})), o.d(t, "c", (function() {
				return p
			})), o.d(t, "a", (function() {
				return v
			}));
			o("./node_modules/core-js/modules/web.dom.iterable.js");
			var i, r = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
				n = o("./node_modules/long/src/long.js"),
				a = o.n(n),
				s = o("./node_modules/protobufjs/minimal.js"),
				d = o.n(s);

			function l(e) {
				switch (e) {
					case 0:
					case "NULL_VALUE":
						return i.NULL_VALUE;
					case -1:
					case "UNRECOGNIZED":
					default:
						return i.UNRECOGNIZED
				}
			}! function(e) {
				e[e.NULL_VALUE = 0] = "NULL_VALUE", e[e.UNRECOGNIZED = -1] = "UNRECOGNIZED"
			}(i || (i = {}));
			const u = {
				$type: "google.protobuf.Struct",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : d.a.Writer.create();
					return Object.entries(e.fields).forEach(e => {
						let [o, i] = e;
						void 0 !== i && c.encode({
							$type: "google.protobuf.Struct.FieldsEntry",
							key: o,
							value: i
						}, t.uint32(10).fork()).ldelim()
					}), t
				},
				decode(e, t) {
					const o = e instanceof d.a.Reader ? e : new d.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.protobuf.Struct",
						fields: {}
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								const t = c.decode(o, o.uint32());
								void 0 !== t.value && (r.fields[t.key] = t.value);
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: u.$type,
					fields: m(e.fields) ? Object.entries(e.fields).reduce((e, t) => {
						let [o, i] = t;
						return e[o] = i, e
					}, {}) : {}
				}),
				toJSON(e) {
					const t = {
						fields: {}
					};
					return e.fields && Object.entries(e.fields).forEach(e => {
						let [o, i] = e;
						t.fields[o] = i
					}), t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "google.protobuf.Struct",
						fields: {}
					};
					return o.fields = Object.entries(null !== (t = e.fields) && void 0 !== t ? t : {}).reduce((e, t) => {
						let [o, i] = t;
						return void 0 !== i && (e[o] = i), e
					}, {}), o
				},
				wrap(e) {
					const t = {
						$type: "google.protobuf.Struct",
						fields: {}
					};
					return void 0 !== e && Object.keys(e).forEach(o => {
						t.fields[o] = e[o]
					}), t
				},
				unwrap(e) {
					const t = {};
					return Object.keys(e.fields).forEach(o => {
						t[o] = e.fields[o]
					}), t
				}
			};
			r.a.set(u.$type, u);
			const c = {
				$type: "google.protobuf.Struct.FieldsEntry",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : d.a.Writer.create();
					return "" !== e.key && t.uint32(10).string(e.key), void 0 !== e.value && p.encode(p.wrap(e.value), t.uint32(18).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof d.a.Reader ? e : new d.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.protobuf.Struct.FieldsEntry",
						key: "",
						value: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.key = o.string();
								break;
							case 2:
								r.value = p.unwrap(p.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: c.$type,
					key: f(e.key) ? String(e.key) : "",
					value: f(null == e ? void 0 : e.value) ? e.value : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.key && (t.key = e.key), void 0 !== e.value && (t.value = e.value), t
				},
				fromPartial(e) {
					var t, o;
					const i = {
						$type: "google.protobuf.Struct.FieldsEntry",
						key: "",
						value: void 0
					};
					return i.key = null !== (t = e.key) && void 0 !== t ? t : "", i.value = null !== (o = e.value) && void 0 !== o ? o : void 0, i
				}
			};
			r.a.set(c.$type, c);
			const p = {
				$type: "google.protobuf.Value",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : d.a.Writer.create();
					return void 0 !== e.nullValue && t.uint32(8).int32(e.nullValue), void 0 !== e.numberValue && t.uint32(17).double(e.numberValue), void 0 !== e.stringValue && t.uint32(26).string(e.stringValue), void 0 !== e.boolValue && t.uint32(32).bool(e.boolValue), void 0 !== e.structValue && u.encode(u.wrap(e.structValue), t.uint32(42).fork()).ldelim(), void 0 !== e.listValue && v.encode(v.wrap(e.listValue), t.uint32(50).fork()).ldelim(), t
				},
				decode(e, t) {
					const o = e instanceof d.a.Reader ? e : new d.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.protobuf.Value",
						nullValue: void 0,
						numberValue: void 0,
						stringValue: void 0,
						boolValue: void 0,
						structValue: void 0,
						listValue: void 0
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.nullValue = o.int32();
								break;
							case 2:
								r.numberValue = o.double();
								break;
							case 3:
								r.stringValue = o.string();
								break;
							case 4:
								r.boolValue = o.bool();
								break;
							case 5:
								r.structValue = u.unwrap(u.decode(o, o.uint32()));
								break;
							case 6:
								r.listValue = v.unwrap(v.decode(o, o.uint32()));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: p.$type,
					nullValue: f(e.nullValue) ? l(e.nullValue) : void 0,
					numberValue: f(e.numberValue) ? Number(e.numberValue) : void 0,
					stringValue: f(e.stringValue) ? String(e.stringValue) : void 0,
					boolValue: f(e.boolValue) ? Boolean(e.boolValue) : void 0,
					structValue: m(e.structValue) ? e.structValue : void 0,
					listValue: Array.isArray(e.listValue) ? [...e.listValue] : void 0
				}),
				toJSON(e) {
					const t = {};
					return void 0 !== e.nullValue && (t.nullValue = void 0 !== e.nullValue ? function(e) {
						switch (e) {
							case i.NULL_VALUE:
								return "NULL_VALUE";
							default:
								return "UNKNOWN"
						}
					}(e.nullValue) : void 0), void 0 !== e.numberValue && (t.numberValue = e.numberValue), void 0 !== e.stringValue && (t.stringValue = e.stringValue), void 0 !== e.boolValue && (t.boolValue = e.boolValue), void 0 !== e.structValue && (t.structValue = e.structValue), void 0 !== e.listValue && (t.listValue = e.listValue), t
				},
				fromPartial(e) {
					var t, o, i, r, n, a;
					const s = {
						$type: "google.protobuf.Value",
						nullValue: void 0,
						numberValue: void 0,
						stringValue: void 0,
						boolValue: void 0,
						structValue: void 0,
						listValue: void 0
					};
					return s.nullValue = null !== (t = e.nullValue) && void 0 !== t ? t : void 0, s.numberValue = null !== (o = e.numberValue) && void 0 !== o ? o : void 0, s.stringValue = null !== (i = e.stringValue) && void 0 !== i ? i : void 0, s.boolValue = null !== (r = e.boolValue) && void 0 !== r ? r : void 0, s.structValue = null !== (n = e.structValue) && void 0 !== n ? n : void 0, s.listValue = null !== (a = e.listValue) && void 0 !== a ? a : void 0, s
				},
				wrap(e) {
					const t = {
						$type: "google.protobuf.Value",
						nullValue: void 0,
						numberValue: void 0,
						stringValue: void 0,
						boolValue: void 0,
						structValue: void 0,
						listValue: void 0
					};
					if (null === e) t.nullValue = i.NULL_VALUE;
					else if ("boolean" == typeof e) t.boolValue = e;
					else if ("number" == typeof e) t.numberValue = e;
					else if ("string" == typeof e) t.stringValue = e;
					else if (Array.isArray(e)) t.listValue = e;
					else if ("object" == typeof e) t.structValue = e;
					else if (void 0 !== e) throw new Error("Unsupported any value type: " + typeof e);
					return t
				},
				unwrap: e => void 0 !== (null == e ? void 0 : e.stringValue) ? e.stringValue : void 0 !== (null == e ? void 0 : e.numberValue) ? e.numberValue : void 0 !== (null == e ? void 0 : e.boolValue) ? e.boolValue : void 0 !== (null == e ? void 0 : e.structValue) ? e.structValue : void 0 !== (null == e ? void 0 : e.listValue) ? e.listValue : void 0 !== (null == e ? void 0 : e.nullValue) ? null : void 0
			};
			r.a.set(p.$type, p);
			const v = {
				$type: "google.protobuf.ListValue",
				encode(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : d.a.Writer.create();
					for (const o of e.values) p.encode(p.wrap(o), t.uint32(10).fork()).ldelim();
					return t
				},
				decode(e, t) {
					const o = e instanceof d.a.Reader ? e : new d.a.Reader(e);
					let i = void 0 === t ? o.len : o.pos + t;
					const r = {
						$type: "google.protobuf.ListValue",
						values: []
					};
					for (; o.pos < i;) {
						const e = o.uint32();
						switch (e >>> 3) {
							case 1:
								r.values.push(p.unwrap(p.decode(o, o.uint32())));
								break;
							default:
								o.skipType(7 & e)
						}
					}
					return r
				},
				fromJSON: e => ({
					$type: v.$type,
					values: Array.isArray(null == e ? void 0 : e.values) ? [...e.values] : []
				}),
				toJSON(e) {
					const t = {};
					return e.values ? t.values = e.values.map(e => e) : t.values = [], t
				},
				fromPartial(e) {
					var t;
					const o = {
						$type: "google.protobuf.ListValue",
						values: []
					};
					return o.values = (null === (t = e.values) || void 0 === t ? void 0 : t.map(e => e)) || [], o
				},
				wrap(e) {
					const t = {
						$type: "google.protobuf.ListValue",
						values: []
					};
					return t.values = null != e ? e : [], t
				},
				unwrap: e => e.values
			};

			function m(e) {
				return "object" == typeof e && null !== e
			}

			function f(e) {
				return null != e
			}
			r.a.set(v.$type, v), d.a.util.Long !== a.a && (d.a.util.Long = a.a, d.a.configure())
		},
		"./node_modules/@devvit/protos/types/google/protobuf/timestamp.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "a", (function() {
					return d
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a);
				const d = {
					$type: "google.protobuf.Timestamp",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.seconds && t.uint32(8).int64(e.seconds), 0 !== e.nanos && t.uint32(16).int32(e.nanos), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.Timestamp",
							seconds: 0,
							nanos: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.seconds = u(o.int64());
									break;
								case 2:
									r.nanos = o.int32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: d.$type,
						seconds: c(e.seconds) ? Number(e.seconds) : 0,
						nanos: c(e.nanos) ? Number(e.nanos) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.seconds && (t.seconds = Math.round(e.seconds)), void 0 !== e.nanos && (t.nanos = Math.round(e.nanos)), t
					},
					fromPartial(e) {
						var t, o;
						const i = {
							$type: "google.protobuf.Timestamp",
							seconds: 0,
							nanos: 0
						};
						return i.seconds = null !== (t = e.seconds) && void 0 !== t ? t : 0, i.nanos = null !== (o = e.nanos) && void 0 !== o ? o : 0, i
					}
				};
				i.a.set(d.$type, d);
				var l = (() => {
					if (void 0 !== l) return l;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();

				function u(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new l.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function c(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/google/protobuf/wrappers.js": function(e, t, o) {
			"use strict";
			(function(e) {
				o.d(t, "c", (function() {
					return u
				})), o.d(t, "b", (function() {
					return p
				})), o.d(t, "a", (function() {
					return m
				})), o.d(t, "d", (function() {
					return f
				}));
				var i = o("./node_modules/@devvit/protos/types/typeRegistry.js"),
					r = o("./node_modules/long/src/long.js"),
					n = o.n(r),
					a = o("./node_modules/protobufjs/minimal.js"),
					s = o.n(a);
				const d = {
					$type: "google.protobuf.DoubleValue",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value && t.uint32(9).double(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.DoubleValue",
							value: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.double();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: d.$type,
						value: O(e.value) ? Number(e.value) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.DoubleValue",
							value: 0
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
					}
				};
				i.a.set(d.$type, d);
				const l = {
					$type: "google.protobuf.FloatValue",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value && t.uint32(13).float(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.FloatValue",
							value: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.float();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: l.$type,
						value: O(e.value) ? Number(e.value) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.FloatValue",
							value: 0
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
					}
				};
				i.a.set(l.$type, l);
				const u = {
					$type: "google.protobuf.Int64Value",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value && t.uint32(8).int64(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.Int64Value",
							value: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = w(o.int64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: u.$type,
						value: O(e.value) ? Number(e.value) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = Math.round(e.value)), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.Int64Value",
							value: 0
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
					}
				};
				i.a.set(u.$type, u);
				const c = {
					$type: "google.protobuf.UInt64Value",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value && t.uint32(8).uint64(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.UInt64Value",
							value: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = w(o.uint64());
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: c.$type,
						value: O(e.value) ? Number(e.value) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = Math.round(e.value)), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.UInt64Value",
							value: 0
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
					}
				};
				i.a.set(c.$type, c);
				const p = {
					$type: "google.protobuf.Int32Value",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value && t.uint32(8).int32(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.Int32Value",
							value: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.int32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: p.$type,
						value: O(e.value) ? Number(e.value) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = Math.round(e.value)), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.Int32Value",
							value: 0
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
					}
				};
				i.a.set(p.$type, p);
				const v = {
					$type: "google.protobuf.UInt32Value",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value && t.uint32(8).uint32(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.UInt32Value",
							value: 0
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.uint32();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: v.$type,
						value: O(e.value) ? Number(e.value) : 0
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = Math.round(e.value)), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.UInt32Value",
							value: 0
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : 0, o
					}
				};
				i.a.set(v.$type, v);
				const m = {
					$type: "google.protobuf.BoolValue",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return !0 === e.value && t.uint32(8).bool(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.BoolValue",
							value: !1
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.bool();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: m.$type,
						value: !!O(e.value) && Boolean(e.value)
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.BoolValue",
							value: !1
						};
						return o.value = null !== (t = e.value) && void 0 !== t && t, o
					}
				};
				i.a.set(m.$type, m);
				const f = {
					$type: "google.protobuf.StringValue",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return "" !== e.value && t.uint32(10).string(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = {
							$type: "google.protobuf.StringValue",
							value: ""
						};
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.string();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: f.$type,
						value: O(e.value) ? String(e.value) : ""
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = e.value), t
					},
					fromPartial(e) {
						var t;
						const o = {
							$type: "google.protobuf.StringValue",
							value: ""
						};
						return o.value = null !== (t = e.value) && void 0 !== t ? t : "", o
					}
				};

				function g() {
					return {
						$type: "google.protobuf.BytesValue",
						value: new Uint8Array
					}
				}
				i.a.set(f.$type, f);
				const h = {
					$type: "google.protobuf.BytesValue",
					encode(e) {
						let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.a.Writer.create();
						return 0 !== e.value.length && t.uint32(10).bytes(e.value), t
					},
					decode(e, t) {
						const o = e instanceof s.a.Reader ? e : new s.a.Reader(e);
						let i = void 0 === t ? o.len : o.pos + t;
						const r = g();
						for (; o.pos < i;) {
							const e = o.uint32();
							switch (e >>> 3) {
								case 1:
									r.value = o.bytes();
									break;
								default:
									o.skipType(7 & e)
							}
						}
						return r
					},
					fromJSON: e => ({
						$type: h.$type,
						value: O(e.value) ? k(e.value) : new Uint8Array
					}),
					toJSON(e) {
						const t = {};
						return void 0 !== e.value && (t.value = function(e) {
							const t = [];
							for (const o of e) t.push(String.fromCharCode(o));
							return S(t.join(""))
						}(void 0 !== e.value ? e.value : new Uint8Array)), t
					},
					fromPartial(e) {
						var t;
						const o = g();
						return o.value = null !== (t = e.value) && void 0 !== t ? t : new Uint8Array, o
					}
				};
				i.a.set(h.$type, h);
				var y = (() => {
					if (void 0 !== y) return y;
					if ("undefined" != typeof self) return self;
					if ("undefined" != typeof window) return window;
					if (void 0 !== e) return e;
					throw "Unable to locate global object"
				})();
				const b = y.atob || (e => y.Buffer.from(e, "base64").toString("binary"));

				function k(e) {
					const t = b(e),
						o = new Uint8Array(t.length);
					for (let i = 0; i < t.length; ++i) o[i] = t.charCodeAt(i);
					return o
				}
				const S = y.btoa || (e => y.Buffer.from(e, "binary").toString("base64"));

				function w(e) {
					if (e.gt(Number.MAX_SAFE_INTEGER)) throw new y.Error("Value is larger than Number.MAX_SAFE_INTEGER");
					return e.toNumber()
				}

				function O(e) {
					return null != e
				}
				s.a.util.Long !== n.a && (s.a.util.Long = n.a, s.a.configure())
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/@devvit/protos/types/typeRegistry.js": function(e, t, o) {
			"use strict";
			o.d(t, "a", (function() {
				return i
			}));
			o("./node_modules/core-js/modules/web.dom.iterable.js");
			const i = new Map
		},
		"./node_modules/@devvit/runtimes/node_modules/lru-cache/index.js": function(e, t, o) {
			(function(t) {
				const o = "object" == typeof performance && performance && "function" == typeof performance.now ? performance : Date,
					i = "function" == typeof AbortController ? AbortController : class {
						constructor() {
							this.signal = new a
						}
						abort() {
							this.signal.dispatchEvent("abort")
						}
					},
					r = "function" == typeof AbortSignal,
					n = "function" == typeof i.AbortSignal,
					a = r ? AbortSignal : n ? i.AbortController : class {
						constructor() {
							this.aborted = !1, this._listeners = []
						}
						dispatchEvent(e) {
							if ("abort" === e) {
								this.aborted = !0;
								const t = {
									type: e,
									target: this
								};
								this.onabort(t), this._listeners.forEach(e => e(t), this)
							}
						}
						onabort() {}
						addEventListener(e, t) {
							"abort" === e && this._listeners.push(t)
						}
						removeEventListener(e, t) {
							"abort" === e && (this._listeners = this._listeners.filter(e => e !== t))
						}
					},
					s = new Set,
					d = (e, t) => {
						const o = `LRU_CACHE_OPTION_${e}`;
						p(o) && v(o, `${e} option`, `options.${t}`, y)
					},
					l = (e, t) => {
						const o = `LRU_CACHE_METHOD_${e}`;
						if (p(o)) {
							const {
								prototype: i
							} = y, {
								get: r
							} = Object.getOwnPropertyDescriptor(i, e);
							v(o, `${e} method`, `cache.${t}()`, r)
						}
					},
					u = (e, t) => {
						const o = `LRU_CACHE_PROPERTY_${e}`;
						if (p(o)) {
							const {
								prototype: i
							} = y, {
								get: r
							} = Object.getOwnPropertyDescriptor(i, e);
							v(o, `${e} property`, `cache.${t}`, r)
						}
					},
					c = (...e) => {
						"object" == typeof t && t && "function" == typeof t.emitWarning ? t.emitWarning(...e) : console.error(...e)
					},
					p = e => !s.has(e),
					v = (e, t, o, i) => {
						s.add(e), c(`The ${t} is deprecated. Please use ${o} instead.`, "DeprecationWarning", e, i)
					},
					m = e => e && e === Math.floor(e) && e > 0 && isFinite(e),
					f = e => m(e) ? e <= Math.pow(2, 8) ? Uint8Array : e <= Math.pow(2, 16) ? Uint16Array : e <= Math.pow(2, 32) ? Uint32Array : e <= Number.MAX_SAFE_INTEGER ? g : null : null;
				class g extends Array {
					constructor(e) {
						super(e), this.fill(0)
					}
				}
				class h {
					constructor(e) {
						if (0 === e) return [];
						const t = f(e);
						this.heap = new t(e), this.length = 0
					}
					push(e) {
						this.heap[this.length++] = e
					}
					pop() {
						return this.heap[--this.length]
					}
				}
				class y {
					constructor(e = {}) {
						const {
							max: t = 0,
							ttl: o,
							ttlResolution: i = 1,
							ttlAutopurge: r,
							updateAgeOnGet: n,
							updateAgeOnHas: a,
							allowStale: l,
							dispose: u,
							disposeAfter: v,
							noDisposeOnSet: g,
							noUpdateTTL: b,
							maxSize: k = 0,
							sizeCalculation: S,
							fetchMethod: w,
							fetchContext: O,
							noDeleteOnFetchRejection: T,
							noDeleteOnStaleGet: N
						} = e, {
							length: R,
							maxAge: $,
							stale: C
						} = e instanceof y ? {} : e;
						if (0 !== t && !m(t)) throw new TypeError("max option must be a nonnegative integer");
						const I = t ? f(t) : Array;
						if (!I) throw new Error("invalid max value: " + t);
						if (this.max = t, this.maxSize = k, this.sizeCalculation = S || R, this.sizeCalculation) {
							if (!this.maxSize) throw new TypeError("cannot set sizeCalculation without setting maxSize");
							if ("function" != typeof this.sizeCalculation) throw new TypeError("sizeCalculation set to non-function")
						}
						if (this.fetchMethod = w || null, this.fetchMethod && "function" != typeof this.fetchMethod) throw new TypeError("fetchMethod must be a function if specified");
						if (this.fetchContext = O, !this.fetchMethod && void 0 !== O) throw new TypeError("cannot set fetchContext without fetchMethod");
						if (this.keyMap = new Map, this.keyList = new Array(t).fill(null), this.valList = new Array(t).fill(null), this.next = new I(t), this.prev = new I(t), this.head = 0, this.tail = 0, this.free = new h(t), this.initialFill = 1, this.size = 0, "function" == typeof u && (this.dispose = u), "function" == typeof v ? (this.disposeAfter = v, this.disposed = []) : (this.disposeAfter = null, this.disposed = null), this.noDisposeOnSet = !!g, this.noUpdateTTL = !!b, this.noDeleteOnFetchRejection = !!T, 0 !== this.maxSize) {
							if (!m(this.maxSize)) throw new TypeError("maxSize must be a positive integer if specified");
							this.initializeSizeTracking()
						}
						if (this.allowStale = !!l || !!C, this.noDeleteOnStaleGet = !!N, this.updateAgeOnGet = !!n, this.updateAgeOnHas = !!a, this.ttlResolution = m(i) || 0 === i ? i : 1, this.ttlAutopurge = !!r, this.ttl = o || $ || 0, this.ttl) {
							if (!m(this.ttl)) throw new TypeError("ttl must be a positive integer if specified");
							this.initializeTTLTracking()
						}
						if (0 === this.max && 0 === this.ttl && 0 === this.maxSize) throw new TypeError("At least one of max, maxSize, or ttl is required");
						if (!this.ttlAutopurge && !this.max && !this.maxSize) {
							const e = "LRU_CACHE_UNBOUNDED";
							if (p(e)) {
								s.add(e), c("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", e, y)
							}
						}
						C && d("stale", "allowStale"), $ && d("maxAge", "ttl"), R && d("length", "sizeCalculation")
					}
					getRemainingTTL(e) {
						return this.has(e, {
							updateAgeOnHas: !1
						}) ? 1 / 0 : 0
					}
					initializeTTLTracking() {
						this.ttls = new g(this.max), this.starts = new g(this.max), this.setItemTTL = (e, t, i = o.now()) => {
							if (this.starts[e] = 0 !== t ? i : 0, this.ttls[e] = t, 0 !== t && this.ttlAutopurge) {
								const o = setTimeout(() => {
									this.isStale(e) && this.delete(this.keyList[e])
								}, t + 1);
								o.unref && o.unref()
							}
						}, this.updateItemAge = e => {
							this.starts[e] = 0 !== this.ttls[e] ? o.now() : 0
						};
						let e = 0;
						const t = () => {
							const t = o.now();
							if (this.ttlResolution > 0) {
								e = t;
								const o = setTimeout(() => e = 0, this.ttlResolution);
								o.unref && o.unref()
							}
							return t
						};
						this.getRemainingTTL = o => {
							const i = this.keyMap.get(o);
							return void 0 === i ? 0 : 0 === this.ttls[i] || 0 === this.starts[i] ? 1 / 0 : this.starts[i] + this.ttls[i] - (e || t())
						}, this.isStale = o => 0 !== this.ttls[o] && 0 !== this.starts[o] && (e || t()) - this.starts[o] > this.ttls[o]
					}
					updateItemAge(e) {}
					setItemTTL(e, t, o) {}
					isStale(e) {
						return !1
					}
					initializeSizeTracking() {
						this.calculatedSize = 0, this.sizes = new g(this.max), this.removeItemSize = e => {
							this.calculatedSize -= this.sizes[e], this.sizes[e] = 0
						}, this.requireSize = (e, t, o, i) => {
							if (!m(o)) {
								if (!i) throw new TypeError("invalid size value (must be positive integer)");
								if ("function" != typeof i) throw new TypeError("sizeCalculation must be a function");
								if (o = i(t, e), !m(o)) throw new TypeError("sizeCalculation return invalid (expect positive integer)")
							}
							return o
						}, this.addItemSize = (e, t) => {
							this.sizes[e] = t;
							const o = this.maxSize - this.sizes[e];
							for (; this.calculatedSize > o;) this.evict(!0);
							this.calculatedSize += this.sizes[e]
						}
					}
					removeItemSize(e) {}
					addItemSize(e, t) {}
					requireSize(e, t, o, i) {
						if (o || i) throw new TypeError("cannot set size without setting maxSize on cache")
					}* indexes({
						allowStale: e = this.allowStale
					} = {}) {
						if (this.size)
							for (let t = this.tail; this.isValidIndex(t) && (!e && this.isStale(t) || (yield t), t !== this.head);) t = this.prev[t]
					}* rindexes({
						allowStale: e = this.allowStale
					} = {}) {
						if (this.size)
							for (let t = this.head; this.isValidIndex(t) && (!e && this.isStale(t) || (yield t), t !== this.tail);) t = this.next[t]
					}
					isValidIndex(e) {
						return this.keyMap.get(this.keyList[e]) === e
					}* entries() {
						for (const e of this.indexes()) yield [this.keyList[e], this.valList[e]]
					}* rentries() {
						for (const e of this.rindexes()) yield [this.keyList[e], this.valList[e]]
					}* keys() {
						for (const e of this.indexes()) yield this.keyList[e]
					}* rkeys() {
						for (const e of this.rindexes()) yield this.keyList[e]
					}* values() {
						for (const e of this.indexes()) yield this.valList[e]
					}* rvalues() {
						for (const e of this.rindexes()) yield this.valList[e]
					} [Symbol.iterator]() {
						return this.entries()
					}
					find(e, t = {}) {
						for (const o of this.indexes())
							if (e(this.valList[o], this.keyList[o], this)) return this.get(this.keyList[o], t)
					}
					forEach(e, t = this) {
						for (const o of this.indexes()) e.call(t, this.valList[o], this.keyList[o], this)
					}
					rforEach(e, t = this) {
						for (const o of this.rindexes()) e.call(t, this.valList[o], this.keyList[o], this)
					}
					get prune() {
						return l("prune", "purgeStale"), this.purgeStale
					}
					purgeStale() {
						let e = !1;
						for (const t of this.rindexes({
								allowStale: !0
							})) this.isStale(t) && (this.delete(this.keyList[t]), e = !0);
						return e
					}
					dump() {
						const e = [];
						for (const t of this.indexes({
								allowStale: !0
							})) {
							const i = this.keyList[t],
								r = this.valList[t],
								n = {
									value: this.isBackgroundFetch(r) ? r.__staleWhileFetching : r
								};
							if (this.ttls) {
								n.ttl = this.ttls[t];
								const e = o.now() - this.starts[t];
								n.start = Math.floor(Date.now() - e)
							}
							this.sizes && (n.size = this.sizes[t]), e.unshift([i, n])
						}
						return e
					}
					load(e) {
						this.clear();
						for (const [t, i] of e) {
							if (i.start) {
								const e = Date.now() - i.start;
								i.start = o.now() - e
							}
							this.set(t, i.value, i)
						}
					}
					dispose(e, t, o) {}
					set(e, t, {
						ttl: o = this.ttl,
						start: i,
						noDisposeOnSet: r = this.noDisposeOnSet,
						size: n = 0,
						sizeCalculation: a = this.sizeCalculation,
						noUpdateTTL: s = this.noUpdateTTL
					} = {}) {
						if (n = this.requireSize(e, t, n, a), this.maxSize && n > this.maxSize) return this;
						let d = 0 === this.size ? void 0 : this.keyMap.get(e);
						if (void 0 === d) d = this.newIndex(), this.keyList[d] = e, this.valList[d] = t, this.keyMap.set(e, d), this.next[this.tail] = d, this.prev[d] = this.tail, this.tail = d, this.size++, this.addItemSize(d, n), s = !1;
						else {
							const o = this.valList[d];
							t !== o && (this.isBackgroundFetch(o) ? o.__abortController.abort() : r || (this.dispose(o, e, "set"), this.disposeAfter && this.disposed.push([o, e, "set"])), this.removeItemSize(d), this.valList[d] = t, this.addItemSize(d, n)), this.moveToTail(d)
						}
						if (0 === o || 0 !== this.ttl || this.ttls || this.initializeTTLTracking(), s || this.setItemTTL(d, o, i), this.disposeAfter)
							for (; this.disposed.length;) this.disposeAfter(...this.disposed.shift());
						return this
					}
					newIndex() {
						return 0 === this.size ? this.tail : this.size === this.max && 0 !== this.max ? this.evict(!1) : 0 !== this.free.length ? this.free.pop() : this.initialFill++
					}
					pop() {
						if (this.size) {
							const e = this.valList[this.head];
							return this.evict(!0), e
						}
					}
					evict(e) {
						const t = this.head,
							o = this.keyList[t],
							i = this.valList[t];
						return this.isBackgroundFetch(i) ? i.__abortController.abort() : (this.dispose(i, o, "evict"), this.disposeAfter && this.disposed.push([i, o, "evict"])), this.removeItemSize(t), e && (this.keyList[t] = null, this.valList[t] = null, this.free.push(t)), this.head = this.next[t], this.keyMap.delete(o), this.size--, t
					}
					has(e, {
						updateAgeOnHas: t = this.updateAgeOnHas
					} = {}) {
						const o = this.keyMap.get(e);
						return void 0 !== o && !this.isStale(o) && (t && this.updateItemAge(o), !0)
					}
					peek(e, {
						allowStale: t = this.allowStale
					} = {}) {
						const o = this.keyMap.get(e);
						if (void 0 !== o && (t || !this.isStale(o))) return this.valList[o]
					}
					backgroundFetch(e, t, o, r) {
						const n = void 0 === t ? void 0 : this.valList[t];
						if (this.isBackgroundFetch(n)) return n;
						const a = new i,
							s = {
								signal: a.signal,
								options: o,
								context: r
							},
							d = new Promise(t => t(this.fetchMethod(e, n, s))).then(t => (a.signal.aborted || this.set(e, t, s.options), t), i => {
								if (this.valList[t] === d) {
									!o.noDeleteOnFetchRejection || void 0 === d.__staleWhileFetching ? this.delete(e) : this.valList[t] = d.__staleWhileFetching
								}
								if (d.__returned === d) throw i
							});
						return d.__abortController = a, d.__staleWhileFetching = n, d.__returned = null, void 0 === t ? (this.set(e, d, s.options), t = this.keyMap.get(e)) : this.valList[t] = d, d
					}
					isBackgroundFetch(e) {
						return e && "object" == typeof e && "function" == typeof e.then && Object.prototype.hasOwnProperty.call(e, "__staleWhileFetching") && Object.prototype.hasOwnProperty.call(e, "__returned") && (e.__returned === e || null === e.__returned)
					}
					async fetch(e, {
						allowStale: t = this.allowStale,
						updateAgeOnGet: o = this.updateAgeOnGet,
						noDeleteOnStaleGet: i = this.noDeleteOnStaleGet,
						ttl: r = this.ttl,
						noDisposeOnSet: n = this.noDisposeOnSet,
						size: a = 0,
						sizeCalculation: s = this.sizeCalculation,
						noUpdateTTL: d = this.noUpdateTTL,
						noDeleteOnFetchRejection: l = this.noDeleteOnFetchRejection,
						fetchContext: u = this.fetchContext,
						forceRefresh: c = !1
					} = {}) {
						if (!this.fetchMethod) return this.get(e, {
							allowStale: t,
							updateAgeOnGet: o,
							noDeleteOnStaleGet: i
						});
						const p = {
							allowStale: t,
							updateAgeOnGet: o,
							noDeleteOnStaleGet: i,
							ttl: r,
							noDisposeOnSet: n,
							size: a,
							sizeCalculation: s,
							noUpdateTTL: d,
							noDeleteOnFetchRejection: l
						};
						let v = this.keyMap.get(e);
						if (void 0 === v) {
							const t = this.backgroundFetch(e, v, p, u);
							return t.__returned = t
						} {
							const i = this.valList[v];
							if (this.isBackgroundFetch(i)) return t && void 0 !== i.__staleWhileFetching ? i.__staleWhileFetching : i.__returned = i;
							if (!c && !this.isStale(v)) return this.moveToTail(v), o && this.updateItemAge(v), i;
							const r = this.backgroundFetch(e, v, p, u);
							return t && void 0 !== r.__staleWhileFetching ? r.__staleWhileFetching : r.__returned = r
						}
					}
					get(e, {
						allowStale: t = this.allowStale,
						updateAgeOnGet: o = this.updateAgeOnGet,
						noDeleteOnStaleGet: i = this.noDeleteOnStaleGet
					} = {}) {
						const r = this.keyMap.get(e);
						if (void 0 !== r) {
							const n = this.valList[r],
								a = this.isBackgroundFetch(n);
							if (this.isStale(r)) return a ? t ? n.__staleWhileFetching : void 0 : (i || this.delete(e), t ? n : void 0);
							if (a) return;
							return this.moveToTail(r), o && this.updateItemAge(r), n
						}
					}
					connect(e, t) {
						this.prev[t] = e, this.next[e] = t
					}
					moveToTail(e) {
						e !== this.tail && (e === this.head ? this.head = this.next[e] : this.connect(this.prev[e], this.next[e]), this.connect(this.tail, e), this.tail = e)
					}
					get del() {
						return l("del", "delete"), this.delete
					}
					delete(e) {
						let t = !1;
						if (0 !== this.size) {
							const o = this.keyMap.get(e);
							if (void 0 !== o)
								if (t = !0, 1 === this.size) this.clear();
								else {
									this.removeItemSize(o);
									const t = this.valList[o];
									this.isBackgroundFetch(t) ? t.__abortController.abort() : (this.dispose(t, e, "delete"), this.disposeAfter && this.disposed.push([t, e, "delete"])), this.keyMap.delete(e), this.keyList[o] = null, this.valList[o] = null, o === this.tail ? this.tail = this.prev[o] : o === this.head ? this.head = this.next[o] : (this.next[this.prev[o]] = this.next[o], this.prev[this.next[o]] = this.prev[o]), this.size--, this.free.push(o)
								}
						}
						if (this.disposed)
							for (; this.disposed.length;) this.disposeAfter(...this.disposed.shift());
						return t
					}
					clear() {
						for (const e of this.rindexes({
								allowStale: !0
							})) {
							const t = this.valList[e];
							if (this.isBackgroundFetch(t)) t.__abortController.abort();
							else {
								const o = this.keyList[e];
								this.dispose(t, o, "delete"), this.disposeAfter && this.disposed.push([t, o, "delete"])
							}
						}
						if (this.keyMap.clear(), this.valList.fill(null), this.keyList.fill(null), this.ttls && (this.ttls.fill(0), this.starts.fill(0)), this.sizes && this.sizes.fill(0), this.head = 0, this.tail = 0, this.initialFill = 1, this.free.length = 0, this.calculatedSize = 0, this.size = 0, this.disposed)
							for (; this.disposed.length;) this.disposeAfter(...this.disposed.shift())
					}
					get reset() {
						return l("reset", "clear"), this.clear
					}
					get length() {
						return u("length", "size"), this.size
					}
					static get AbortController() {
						return i
					}
					static get AbortSignal() {
						return a
					}
				}
				e.exports = y
			}).call(this, o("./node_modules/process/browser.js"))
		},
		"./node_modules/@devvit/runtimes/platform/browser/BrowserRuntime.js": function(e, t, o) {
			"use strict";
			o.d(t, "a", (function() {
				return pi
			}));
			o("./node_modules/core-js/modules/web.dom.iterable.js");
			var i = o("./node_modules/tslib/tslib.es6.js"),
				r = o("./node_modules/@devvit/protos/index.js");
			class n {
				async Now(e, t) {
					const o = Date.now();
					return r.M.fromPartial({
						seconds: Math.floor(o / 1e3),
						nanos: o % 1e3 * 1e3
					})
				}
			}

			function a(e) {
				return "function" == typeof e
			}

			function s(e) {
				var t = e((function(e) {
					Error.call(e), e.stack = (new Error).stack
				}));
				return t.prototype = Object.create(Error.prototype), t.prototype.constructor = t, t
			}
			var d = s((function(e) {
				return function(t) {
					e(this), this.message = t ? t.length + " errors occurred during unsubscription:\n" + t.map((function(e, t) {
						return t + 1 + ") " + e.toString()
					})).join("\n  ") : "", this.name = "UnsubscriptionError", this.errors = t
				}
			}));

			function l(e, t) {
				if (e) {
					var o = e.indexOf(t);
					0 <= o && e.splice(o, 1)
				}
			}
			var u = function() {
					function e(e) {
						this.initialTeardown = e, this.closed = !1, this._parentage = null, this._finalizers = null
					}
					var t;
					return e.prototype.unsubscribe = function() {
						var e, t, o, r, n;
						if (!this.closed) {
							this.closed = !0;
							var s = this._parentage;
							if (s)
								if (this._parentage = null, Array.isArray(s)) try {
									for (var l = Object(i.l)(s), u = l.next(); !u.done; u = l.next()) {
										u.value.remove(this)
									}
								} catch (h) {
									e = {
										error: h
									}
								} finally {
									try {
										u && !u.done && (t = l.return) && t.call(l)
									} finally {
										if (e) throw e.error
									}
								} else s.remove(this);
							var c = this.initialTeardown;
							if (a(c)) try {
								c()
							} catch (y) {
								n = y instanceof d ? y.errors : [y]
							}
							var p = this._finalizers;
							if (p) {
								this._finalizers = null;
								try {
									for (var m = Object(i.l)(p), f = m.next(); !f.done; f = m.next()) {
										var g = f.value;
										try {
											v(g)
										} catch (b) {
											n = null != n ? n : [], b instanceof d ? n = Object(i.k)(Object(i.k)([], Object(i.j)(n)), Object(i.j)(b.errors)) : n.push(b)
										}
									}
								} catch (k) {
									o = {
										error: k
									}
								} finally {
									try {
										f && !f.done && (r = m.return) && r.call(m)
									} finally {
										if (o) throw o.error
									}
								}
							}
							if (n) throw new d(n)
						}
					}, e.prototype.add = function(t) {
						var o;
						if (t && t !== this)
							if (this.closed) v(t);
							else {
								if (t instanceof e) {
									if (t.closed || t._hasParent(this)) return;
									t._addParent(this)
								}(this._finalizers = null !== (o = this._finalizers) && void 0 !== o ? o : []).push(t)
							}
					}, e.prototype._hasParent = function(e) {
						var t = this._parentage;
						return t === e || Array.isArray(t) && t.includes(e)
					}, e.prototype._addParent = function(e) {
						var t = this._parentage;
						this._parentage = Array.isArray(t) ? (t.push(e), t) : t ? [t, e] : e
					}, e.prototype._removeParent = function(e) {
						var t = this._parentage;
						t === e ? this._parentage = null : Array.isArray(t) && l(t, e)
					}, e.prototype.remove = function(t) {
						var o = this._finalizers;
						o && l(o, t), t instanceof e && t._removeParent(this)
					}, e.EMPTY = ((t = new e).closed = !0, t), e
				}(),
				c = u.EMPTY;

			function p(e) {
				return e instanceof u || e && "closed" in e && a(e.remove) && a(e.add) && a(e.unsubscribe)
			}

			function v(e) {
				a(e) ? e() : e.unsubscribe()
			}
			var m = {
					onUnhandledError: null,
					onStoppedNotification: null,
					Promise: void 0,
					useDeprecatedSynchronousErrorHandling: !1,
					useDeprecatedNextContext: !1
				},
				f = {
					setTimeout: function(e, t) {
						for (var o = [], r = 2; r < arguments.length; r++) o[r - 2] = arguments[r];
						var n = f.delegate;
						return (null == n ? void 0 : n.setTimeout) ? n.setTimeout.apply(n, Object(i.k)([e, t], Object(i.j)(o))) : setTimeout.apply(void 0, Object(i.k)([e, t], Object(i.j)(o)))
					},
					clearTimeout: function(e) {
						var t = f.delegate;
						return ((null == t ? void 0 : t.clearTimeout) || clearTimeout)(e)
					},
					delegate: void 0
				};

			function g(e) {
				f.setTimeout((function() {
					var t = m.onUnhandledError;
					if (!t) throw e;
					t(e)
				}))
			}

			function h() {}
			var y = b("C", void 0, void 0);

			function b(e, t, o) {
				return {
					kind: e,
					value: t,
					error: o
				}
			}
			var k = null;

			function S(e) {
				if (m.useDeprecatedSynchronousErrorHandling) {
					var t = !k;
					if (t && (k = {
							errorThrown: !1,
							error: null
						}), e(), t) {
						var o = k,
							i = o.errorThrown,
							r = o.error;
						if (k = null, i) throw r
					}
				} else e()
			}
			var w = function(e) {
					function t(t) {
						var o = e.call(this) || this;
						return o.isStopped = !1, t ? (o.destination = t, p(t) && t.add(o)) : o.destination = I, o
					}
					return Object(i.h)(t, e), t.create = function(e, t, o) {
						return new R(e, t, o)
					}, t.prototype.next = function(e) {
						this.isStopped ? C(function(e) {
							return b("N", e, void 0)
						}(e), this) : this._next(e)
					}, t.prototype.error = function(e) {
						this.isStopped ? C(b("E", void 0, e), this) : (this.isStopped = !0, this._error(e))
					}, t.prototype.complete = function() {
						this.isStopped ? C(y, this) : (this.isStopped = !0, this._complete())
					}, t.prototype.unsubscribe = function() {
						this.closed || (this.isStopped = !0, e.prototype.unsubscribe.call(this), this.destination = null)
					}, t.prototype._next = function(e) {
						this.destination.next(e)
					}, t.prototype._error = function(e) {
						try {
							this.destination.error(e)
						} finally {
							this.unsubscribe()
						}
					}, t.prototype._complete = function() {
						try {
							this.destination.complete()
						} finally {
							this.unsubscribe()
						}
					}, t
				}(u),
				O = Function.prototype.bind;

			function T(e, t) {
				return O.call(e, t)
			}
			var N = function() {
					function e(e) {
						this.partialObserver = e
					}
					return e.prototype.next = function(e) {
						var t = this.partialObserver;
						if (t.next) try {
							t.next(e)
						} catch (o) {
							$(o)
						}
					}, e.prototype.error = function(e) {
						var t = this.partialObserver;
						if (t.error) try {
							t.error(e)
						} catch (o) {
							$(o)
						} else $(e)
					}, e.prototype.complete = function() {
						var e = this.partialObserver;
						if (e.complete) try {
							e.complete()
						} catch (t) {
							$(t)
						}
					}, e
				}(),
				R = function(e) {
					function t(t, o, i) {
						var r, n, s = e.call(this) || this;
						a(t) || !t ? r = {
							next: null != t ? t : void 0,
							error: null != o ? o : void 0,
							complete: null != i ? i : void 0
						} : s && m.useDeprecatedNextContext ? ((n = Object.create(t)).unsubscribe = function() {
							return s.unsubscribe()
						}, r = {
							next: t.next && T(t.next, n),
							error: t.error && T(t.error, n),
							complete: t.complete && T(t.complete, n)
						}) : r = t;
						return s.destination = new N(r), s
					}
					return Object(i.h)(t, e), t
				}(w);

			function $(e) {
				var t;
				m.useDeprecatedSynchronousErrorHandling ? (t = e, m.useDeprecatedSynchronousErrorHandling && k && (k.errorThrown = !0, k.error = t)) : g(e)
			}

			function C(e, t) {
				var o = m.onStoppedNotification;
				o && f.setTimeout((function() {
					return o(e, t)
				}))
			}
			var I = {
					closed: !0,
					next: h,
					error: function(e) {
						throw e
					},
					complete: h
				},
				E = "function" == typeof Symbol && Symbol.observable || "@@observable";

			function A(e) {
				return e
			}

			function P(e) {
				return 0 === e.length ? A : 1 === e.length ? e[0] : function(t) {
					return e.reduce((function(e, t) {
						return t(e)
					}), t)
				}
			}
			var x = function() {
				function e(e) {
					e && (this._subscribe = e)
				}
				return e.prototype.lift = function(t) {
					var o = new e;
					return o.source = this, o.operator = t, o
				}, e.prototype.subscribe = function(e, t, o) {
					var i, r = this,
						n = (i = e) && i instanceof w || function(e) {
							return e && a(e.next) && a(e.error) && a(e.complete)
						}(i) && p(i) ? e : new R(e, t, o);
					return S((function() {
						var e = r,
							t = e.operator,
							o = e.source;
						n.add(t ? t.call(n, o) : o ? r._subscribe(n) : r._trySubscribe(n))
					})), n
				}, e.prototype._trySubscribe = function(e) {
					try {
						return this._subscribe(e)
					} catch (t) {
						e.error(t)
					}
				}, e.prototype.forEach = function(e, t) {
					var o = this;
					return new(t = F(t))((function(t, i) {
						var r = new R({
							next: function(t) {
								try {
									e(t)
								} catch (o) {
									i(o), r.unsubscribe()
								}
							},
							error: i,
							complete: t
						});
						o.subscribe(r)
					}))
				}, e.prototype._subscribe = function(e) {
					var t;
					return null === (t = this.source) || void 0 === t ? void 0 : t.subscribe(e)
				}, e.prototype[E] = function() {
					return this
				}, e.prototype.pipe = function() {
					for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
					return P(e)(this)
				}, e.prototype.toPromise = function(e) {
					var t = this;
					return new(e = F(e))((function(e, o) {
						var i;
						t.subscribe((function(e) {
							return i = e
						}), (function(e) {
							return o(e)
						}), (function() {
							return e(i)
						}))
					}))
				}, e.create = function(t) {
					return new e(t)
				}, e
			}();

			function F(e) {
				var t;
				return null !== (t = null != e ? e : m.Promise) && void 0 !== t ? t : Promise
			}
			const j = Object.freeze({
				Caller: "devvit-caller",
				R2Auth: "devvit-sec-authorization",
				R2Host: "devvit-r2-host",
				Installation: "devvit-installation",
				Version: "devvit-version",
				App: "devvit-app",
				Actor: "devvit-actor"
			});

			function M(e, t) {
				var o;
				const i = null == e ? void 0 : null === (o = e[j.Caller]) || void 0 === o ? void 0 : o.values[0];
				return null == i ? t : `${i}:${t}`
			}
			var D, J, _, B, V;
			class L {
				constructor(e) {
					D.set(this, void 0), J.set(this, 0), _.set(this, {}), Object(i.g)(this, D, e, "f");
					try {
						Object(i.f)(this, D, "f").clear()
					} catch (t) {}
				}
				Get(e, t) {
					var o, n;
					const a = "broker-" + M(t, e.topic),
						s = (Object(i.g)(this, J, (n = Object(i.f)(this, J, "f"), o = n++, n), "f"), o + "");
					return new x(t => {
						Object(i.f)(this, _, "f")[a] = Object(i.f)(this, _, "f")[a] || {}, Object(i.f)(this, _, "f")[a][s] = t;
						const o = parseInt(Object(i.f)(this, D, "f").getItem(a) || "0");
						for (let n = e.offset; n < o; n++) {
							const o = Object(i.f)(this, D, "f").getItem(a + "-" + n);
							o ? t.next(r.x.fromPartial({
								topic: e.topic,
								value: o
							})) : t.error(new Error("Item not found"))
						}
						return e.closeAtEnd && t.complete(), () => {
							delete Object(i.f)(this, _, "f")[a][s]
						}
					})
				}
				async Put(e, t) {
					const o = "broker-" + M(t, e.topic),
						n = parseInt(Object(i.f)(this, D, "f").getItem(o) || "0");
					Object(i.f)(this, D, "f").setItem(o + "-" + n, e.value), Object(i.f)(this, D, "f").setItem(o, n + 1 + "");
					const a = Object.values(Object(i.f)(this, _, "f")[e.topic] || {});
					for (const i of a) i.next(e);
					return r.j.fromPartial({})
				}
			}
			D = new WeakMap, J = new WeakMap, _ = new WeakMap;
			class U {
				constructor(e) {
					B.set(this, void 0), Object(i.g)(this, B, e, "f")
				}
				async Get(e, t) {
					const o = r.y.fromPartial({
						messages: {}
					});
					for (const r of e.keys) {
						const e = Object(i.f)(this, B, "f").getItem(M(t, r));
						null != e && (o.messages[r] = e)
					}
					return o
				}
				async Del(e, t) {
					for (const o of e.keys) Object(i.f)(this, B, "f").removeItem(M(t, o));
					return r.j.fromPartial({})
				}
				async Put(e, t) {
					for (const o in e.messages) Object(i.f)(this, B, "f").setItem(M(t, o), e.messages[o]);
					return r.j.fromPartial({})
				}
				async List(e, t) {
					const o = r.u.fromPartial({}),
						n = M(t, "");
					for (let r = 0; r < Object(i.f)(this, B, "f").length; ++r) {
						const e = Object(i.f)(this, B, "f").key(r);
						e && e.startsWith(n) && o.keys.push(e)
					}
					return o
				}
			}
			B = new WeakMap;
			class UnknownActorError extends Error {
				constructor(e) {
					super(`No Actor for address ${e}`), Object.setPrototypeOf(this, new.target.prototype)
				}
			}
			var q = new Uint8Array(16);

			function W() {
				if (!V && !(V = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto))) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
				return V(q)
			}
			var G = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
			for (var H = function(e) {
					return "string" == typeof e && G.test(e)
				}, z = [], Y = 0; Y < 256; ++Y) z.push((Y + 256).toString(16).substr(1));
			var Z = function(e) {
				var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
					o = (z[e[t + 0]] + z[e[t + 1]] + z[e[t + 2]] + z[e[t + 3]] + "-" + z[e[t + 4]] + z[e[t + 5]] + "-" + z[e[t + 6]] + z[e[t + 7]] + "-" + z[e[t + 8]] + z[e[t + 9]] + "-" + z[e[t + 10]] + z[e[t + 11]] + z[e[t + 12]] + z[e[t + 13]] + z[e[t + 14]] + z[e[t + 15]]).toLowerCase();
				if (!H(o)) throw TypeError("Stringified UUID is invalid");
				return o
			};
			var X = function(e, t, o) {
				var i = (e = e || {}).random || (e.rng || W)();
				if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, t) {
					o = o || 0;
					for (var r = 0; r < 16; ++r) t[o + r] = i[r];
					return t
				}
				return Z(i)
			};
			const K = "local",
				Q = "runtime",
				ee = "supervisor";

			function te(e, t) {
				return re(e, t)
			}

			function oe(e, t) {
				return re(e, {
					hostname: re("system", t)
				})
			}

			function ie(e, t) {
				return function(e, t) {
					return re(e, {
						hostname: re("plugins", t)
					})
				}(e.name, t)
			}

			function re(e, t) {
				if (null == t.hostname) throw Error("Unbound namespace.");
				return `${e}.${t.hostname}`.toLocaleLowerCase()
			}

			function ne(e) {
				const t = "string" == typeof e ? e : e.hostname;
				if (null == t) throw Error("Unbound namespace.");
				return t.split(".").slice(1).join(".").toLocaleLowerCase()
			}
			var ae, se, de;

			function le(e) {
				if (null == e) throw Error("Expected nonnullish value.")
			}

			function ue(e) {
				return le(e), e
			}
			if (function(e) {
					e.getChild = function(e) {
						return e.split(".")[0]
					}
				}(ae || (ae = {})), null == (null === (se = globalThis.crypto) || void 0 === se ? void 0 : se.getRandomValues)) {
				let e; {
					const t = o("./node_modules/crypto-browserify/index.js");
					e = e => {
						if (! function(e) {
								return ArrayBuffer.isView(e) && !(e instanceof DataView)
							}(e) || e instanceof BigInt64Array || e instanceof BigUint64Array) throw Error("Expected number TypedArray.");
						return e.set(t.pseudoRandomBytes(e.length)), e
					}
				}
				null == globalThis.crypto && (globalThis.crypto = {}), globalThis.crypto.getRandomValues = e
			}
			const ce = "undefined" != typeof self && self.name || (null === (de = globalThis.location) || void 0 === de ? void 0 : de.hostname) || X();
			let pe = 0;
			const ve = {},
				me = Object.freeze({
					VERBOSE: 0,
					INFO: 1,
					DEBUG: 2,
					WARN: 3,
					ERROR: 4,
					SILENT: 10
				}),
				fe = me.INFO,
				ge = Object.freeze({
					[me.VERBOSE]: "V",
					[me.INFO]: "I",
					[me.DEBUG]: "D",
					[me.WARN]: "W",
					[me.ERROR]: "E",
					[me.SILENT]: ""
				});

			function he(e) {
				return `${ge[e]}[${ce}]`
			}
			const ye = Object.freeze({
				verbose: fe > me.VERBOSE ? () => {} : console.debug.bind(console, he(me.VERBOSE)),
				info: fe > me.INFO ? () => {} : console.info.bind(console, he(me.INFO)),
				debug: fe > me.DEBUG ? () => {} : console.log.bind(console, he(me.DEBUG)),
				warn: fe > me.WARN ? () => {} : console.warn.bind(console, he(me.WARN)),
				error: fe > me.ERROR ? () => {} : console.error.bind(console, he(me.ERROR)),
				envelope(e, t) {
					try {
						let o = ve[t.streamId];
						o || (pe += 1, ve[t.streamId] = pe, o = pe);
						const i = t.success ? "" : "🛑",
							r = t.success ? "" : ` (${t.message||JSON.stringify(t)})`;
						t.request ? ye.debug(`${i}[${t.streamId} ${t.method}] ${e}`.padEnd(80), `${t.src}`, "=>", `${t.dst} ${r} ${JSON.stringify(t.metadata)}`) : ye.debug(`${i}[${t.streamId} ${t.method}] ${e}`.padEnd(80), `${t.dst}`, "<=", `${t.src} ${r} ${JSON.stringify(t.metadata)}`)
					} catch (o) {
						ye.error("wtf", o)
					}
				}
			});

			function be(e) {
				return e[e.length - 1]
			}

			function ke(e) {
				return (t = be(e)) && a(t.schedule) ? e.pop() : void 0;
				var t
			}
			var Se = function(e) {
				return e && "number" == typeof e.length && "function" != typeof e
			};

			function we(e) {
				return a(null == e ? void 0 : e.then)
			}

			function Oe(e) {
				return a(e[E])
			}

			function Te(e) {
				return Symbol.asyncIterator && a(null == e ? void 0 : e[Symbol.asyncIterator])
			}

			function Ne(e) {
				return new TypeError("You provided " + (null !== e && "object" == typeof e ? "an invalid object" : "'" + e + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")
			}
			var Re = "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator";

			function $e(e) {
				return a(null == e ? void 0 : e[Re])
			}

			function Ce(e) {
				return Object(i.b)(this, arguments, (function() {
					var t, o, r;
					return Object(i.i)(this, (function(n) {
						switch (n.label) {
							case 0:
								t = e.getReader(), n.label = 1;
							case 1:
								n.trys.push([1, , 9, 10]), n.label = 2;
							case 2:
								return [4, Object(i.d)(t.read())];
							case 3:
								return o = n.sent(), r = o.value, o.done ? [4, Object(i.d)(void 0)] : [3, 5];
							case 4:
								return [2, n.sent()];
							case 5:
								return [4, Object(i.d)(r)];
							case 6:
								return [4, n.sent()];
							case 7:
								return n.sent(), [3, 2];
							case 8:
								return [3, 10];
							case 9:
								return t.releaseLock(), [7];
							case 10:
								return [2]
						}
					}))
				}))
			}

			function Ie(e) {
				return a(null == e ? void 0 : e.getReader)
			}

			function Ee(e) {
				if (e instanceof x) return e;
				if (null != e) {
					if (Oe(e)) return n = e, new x((function(e) {
						var t = n[E]();
						if (a(t.subscribe)) return t.subscribe(e);
						throw new TypeError("Provided object does not correctly implement Symbol.observable")
					}));
					if (Se(e)) return r = e, new x((function(e) {
						for (var t = 0; t < r.length && !e.closed; t++) e.next(r[t]);
						e.complete()
					}));
					if (we(e)) return o = e, new x((function(e) {
						o.then((function(t) {
							e.closed || (e.next(t), e.complete())
						}), (function(t) {
							return e.error(t)
						})).then(null, g)
					}));
					if (Te(e)) return Ae(e);
					if ($e(e)) return t = e, new x((function(e) {
						var o, r;
						try {
							for (var n = Object(i.l)(t), a = n.next(); !a.done; a = n.next()) {
								var s = a.value;
								if (e.next(s), e.closed) return
							}
						} catch (d) {
							o = {
								error: d
							}
						} finally {
							try {
								a && !a.done && (r = n.return) && r.call(n)
							} finally {
								if (o) throw o.error
							}
						}
						e.complete()
					}));
					if (Ie(e)) return Ae(Ce(e))
				}
				var t, o, r, n;
				throw Ne(e)
			}

			function Ae(e) {
				return new x((function(t) {
					(function(e, t) {
						var o, r, n, a;
						return Object(i.e)(this, void 0, void 0, (function() {
							var s, d;
							return Object(i.i)(this, (function(l) {
								switch (l.label) {
									case 0:
										l.trys.push([0, 5, 6, 11]), o = Object(i.c)(e), l.label = 1;
									case 1:
										return [4, o.next()];
									case 2:
										if ((r = l.sent()).done) return [3, 4];
										if (s = r.value, t.next(s), t.closed) return [2];
										l.label = 3;
									case 3:
										return [3, 1];
									case 4:
										return [3, 11];
									case 5:
										return d = l.sent(), n = {
											error: d
										}, [3, 11];
									case 6:
										return l.trys.push([6, , 9, 10]), r && !r.done && (a = o.return) ? [4, a.call(o)] : [3, 8];
									case 7:
										l.sent(), l.label = 8;
									case 8:
										return [3, 10];
									case 9:
										if (n) throw n.error;
										return [7];
									case 10:
										return [7];
									case 11:
										return t.complete(), [2]
								}
							}))
						}))
					})(e, t).catch((function(e) {
						return t.error(e)
					}))
				}))
			}

			function Pe(e, t, o, i, r) {
				void 0 === i && (i = 0), void 0 === r && (r = !1);
				var n = t.schedule((function() {
					o(), r ? e.add(this.schedule(null, i)) : this.unsubscribe()
				}), i);
				if (e.add(n), !r) return n
			}

			function xe(e) {
				return function(t) {
					if (function(e) {
							return a(null == e ? void 0 : e.lift)
						}(t)) return t.lift((function(t) {
						try {
							return e(t, this)
						} catch (o) {
							this.error(o)
						}
					}));
					throw new TypeError("Unable to lift unknown Observable type")
				}
			}

			function Fe(e, t, o, i, r) {
				return new Me(e, t, o, i, r)
			}
			var je, Me = function(e) {
				function t(t, o, i, r, n, a) {
					var s = e.call(this, t) || this;
					return s.onFinalize = n, s.shouldUnsubscribe = a, s._next = o ? function(e) {
						try {
							o(e)
						} catch (i) {
							t.error(i)
						}
					} : e.prototype._next, s._error = r ? function(e) {
						try {
							r(e)
						} catch (e) {
							t.error(e)
						} finally {
							this.unsubscribe()
						}
					} : e.prototype._error, s._complete = i ? function() {
						try {
							i()
						} catch (e) {
							t.error(e)
						} finally {
							this.unsubscribe()
						}
					} : e.prototype._complete, s
				}
				return Object(i.h)(t, e), t.prototype.unsubscribe = function() {
					var t;
					if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
						var o = this.closed;
						e.prototype.unsubscribe.call(this), !o && (null === (t = this.onFinalize) || void 0 === t || t.call(this))
					}
				}, t
			}(w);

			function De(e, t) {
				return void 0 === t && (t = 0), xe((function(o, i) {
					o.subscribe(Fe(i, (function(o) {
						return Pe(i, e, (function() {
							return i.next(o)
						}), t)
					}), (function() {
						return Pe(i, e, (function() {
							return i.complete()
						}), t)
					}), (function(o) {
						return Pe(i, e, (function() {
							return i.error(o)
						}), t)
					})))
				}))
			}

			function Je(e, t) {
				return void 0 === t && (t = 0), xe((function(o, i) {
					i.add(e.schedule((function() {
						return o.subscribe(i)
					}), t))
				}))
			}

			function _e(e, t) {
				if (!e) throw new Error("Iterable cannot be null");
				return new x((function(o) {
					Pe(o, t, (function() {
						var i = e[Symbol.asyncIterator]();
						Pe(o, t, (function() {
							i.next().then((function(e) {
								e.done ? o.complete() : o.next(e.value)
							}))
						}), 0, !0)
					}))
				}))
			}

			function Be(e, t) {
				if (null != e) {
					if (Oe(e)) return function(e, t) {
						return Ee(e).pipe(Je(t), De(t))
					}(e, t);
					if (Se(e)) return function(e, t) {
						return new x((function(o) {
							var i = 0;
							return t.schedule((function() {
								i === e.length ? o.complete() : (o.next(e[i++]), o.closed || this.schedule())
							}))
						}))
					}(e, t);
					if (we(e)) return function(e, t) {
						return Ee(e).pipe(Je(t), De(t))
					}(e, t);
					if (Te(e)) return _e(e, t);
					if ($e(e)) return function(e, t) {
						return new x((function(o) {
							var i;
							return Pe(o, t, (function() {
									i = e[Re](), Pe(o, t, (function() {
										var e, t, r;
										try {
											t = (e = i.next()).value, r = e.done
										} catch (n) {
											return void o.error(n)
										}
										r ? o.complete() : o.next(t)
									}), 0, !0)
								})),
								function() {
									return a(null == i ? void 0 : i.return) && i.return()
								}
						}))
					}(e, t);
					if (Ie(e)) return function(e, t) {
						return _e(Ce(e), t)
					}(e, t)
				}
				throw Ne(e)
			}

			function Ve(e, t) {
				return t ? Be(e, t) : Ee(e)
			}

			function Le() {
				for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
				return Ve(e, ke(e))
			}
			class Ue {
				Filter(e) {
					var t;
					return null !== (t = e.metadata) && void 0 !== t || (e.metadata = {}), e.metadata[j.Caller] = r.J.fromPartial({
						values: [e.src]
					}), Le(e)
				}
			}

			function qe(e, t, o) {
				return void 0 === o && (o = 1 / 0), a(t) ? qe((function(o, i) {
					return function(e, t) {
						return xe((function(o, i) {
							var r = 0;
							o.subscribe(Fe(i, (function(o) {
								i.next(e.call(t, o, r++))
							})))
						}))
					}((function(e, r) {
						return t(o, e, i, r)
					}))(Ee(e(o, i)))
				}), o) : ("number" == typeof t && (o = t), xe((function(t, i) {
					return function(e, t, o, i, r, n, a, s) {
						var d = [],
							l = 0,
							u = 0,
							c = !1,
							p = function() {
								!c || d.length || l || t.complete()
							},
							v = function(e) {
								return l < i ? m(e) : d.push(e)
							},
							m = function(e) {
								n && t.next(e), l++;
								var s = !1;
								Ee(o(e, u++)).subscribe(Fe(t, (function(e) {
									null == r || r(e), n ? v(e) : t.next(e)
								}), (function() {
									s = !0
								}), void 0, (function() {
									if (s) try {
										l--;
										for (var e = function() {
												var e = d.shift();
												a ? Pe(t, a, (function() {
													return m(e)
												})) : m(e)
											}; d.length && l < i;) e();
										p()
									} catch (o) {
										t.error(o)
									}
								})))
							};
						return e.subscribe(Fe(t, v, (function() {
								c = !0, p()
							}))),
							function() {
								null == s || s()
							}
					}(t, i, e, o)
				})))
			}
			class We {
				constructor(e) {
					je.set(this, void 0), Object(i.g)(this, je, e, "f")
				}
				Filter(e) {
					return Object(i.f)(this, je, "f").reduce((e, t) => e.pipe(qe(e => t.Filter(e))), Le(e))
				}
			}
			je = new WeakMap;
			var Ge, He, ze, Ye, Ze, Xe, Ke, Qe, et = o("./node_modules/@devvit/runtimes/node_modules/lru-cache/index.js"),
				tt = o.n(et);
			class ot {
				constructor() {
					this.count = 0
				}
				incrAndGet() {
					return ++this.count
				}
			}
			class it {
				constructor(e) {
					Ge.set(this, void 0), He.set(this, new tt.a({
						max: 100,
						fetchMethod: async (e, t) => Object(i.f)(this, He, "f").get(e) || new ot
					})), Object(i.g)(this, Ge, e, "f")
				}
				Filter(e) {
					const t = e.id;
					return new x(o => {
						t ? Object(i.f)(this, He, "f").fetch(t).then(t => {
							if (!t) return o.error(new Error("wtf")), void o.complete();
							const r = t.incrAndGet();
							if (r >= Object(i.f)(this, Ge, "f")) return o.error(Error(`Envelope repeated ${r} times from ${e.src} to ${e.dst}.`)), void o.complete();
							o.next(e), o.complete()
						}).catch(e => {
							o.error(e), o.complete()
						}) : o.error(new Error("Unable to check for repeats on id-less Envelopes"))
					})
				}
			}
			Ge = new WeakMap, He = new WeakMap;
			const rt = () => new We([new Ue, new it(2)]);
			class nt {
				constructor(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : rt();
					ze.add(this), Ye.set(this, {}), Ze.set(this, void 0), this.hostname = e, Object(i.g)(this, Ze, t, "f")
				}
				onBind(e) {
					if (null == e.hostname) throw Error("Cannot bind to unbound dispatcher.");
					Object(i.f)(this, Ye, "f")[e.hostname] = e
				}
				onUnbind(e) {
					if (null == e.hostname) throw Error("Cannot unbind from unbound dispatcher.");
					delete Object(i.f)(this, Ye, "f")[e.hostname]
				}
				bind(e) {
					if (this.isBound(e)) throw Error(`${e.hostname} already bound.`);
					e.onBind(this), le(e.hostname), Object(i.f)(this, Ye, "f")[e.hostname] = e
				}
				isBound(e) {
					const t = "string" == typeof e ? e : e.hostname;
					return null != t && t in Object(i.f)(this, Ye, "f")
				}
				unbind(e) {
					const t = Object(i.f)(this, Ye, "f")[e];
					delete Object(i.f)(this, Ye, "f")[e], null == t || t.onUnbind(this)
				}
				async release(e) {
					const t = Object(i.f)(this, Ye, "f")[e];
					this.unbind(e), await (null == t ? void 0 : t.dispose())
				}
				post(e) {
					e.id || (e.id = X()), Object(i.f)(this, Ze, "f").Filter(e).subscribe({
						next: e => {
							Object(i.f)(this, ze, "m", Xe).call(this, e)
						},
						error: t => {
							if (! function(e) {
									return "string" == typeof e.message && e.message.startsWith("Error 500:")
								}(e)) return Object(i.f)(this, ze, "m", Ke).call(this, e, t);
							ye.info("500 error envelope is looping, giving up.")
						}
					})
				}
				async dispose() {
					for (const e of Object.keys(Object(i.f)(this, Ye, "f"))) await this.release(e)
				}
			}
			Ye = new WeakMap, Ze = new WeakMap, ze = new WeakSet, Xe = function(e) {
				let t = e.dst,
					o = !0;
				for (; o;) {
					const r = Object(i.f)(this, Ye, "f")[t];
					if (r) return r.post(e);
					o = t.length > 0, t = ne(t)
				}
				if (! function(e) {
						return "string" == typeof e.message && e.message.startsWith("Error 404:")
					}(e)) return Object(i.f)(this, ze, "m", Qe).call(this, e);
				ye.info("404 error envelope is looping, giving up.")
			}, Ke = function(e, t) {
				ye.error(`Posting 500: internal envelope filter error sending from ${e.src} to ${e.dst}: ${String(t)}`), this.post(r.k.fromPartial({
					complete: !0,
					dst: e.src,
					message: `Error 500: ${String(t)}`,
					metadata: e.metadata,
					method: e.method,
					request: !1,
					src: e.dst,
					streamId: e.streamId,
					success: !1,
					traceId: e.traceId
				}))
			}, Qe = function(e) {
				ye.warn(`Posting 404: ${this.hostname} cannot find envelope from ${e.src} for ${e.dst}; options are ` + Object.keys(Object(i.f)(this, Ye, "f")).join(", ")), this.post(r.k.fromPartial({
					complete: !0,
					dst: e.src,
					message: `Error 404: ${e.dst} not found.`,
					metadata: e.metadata,
					method: e.method,
					request: !1,
					src: e.dst,
					streamId: e.streamId,
					success: !1,
					traceId: e.traceId
				}))
			}, nt.UNRESOLVED_HOSTNAMES = "";
			const at = {
				create: e => ({
					onDispose: () => Promise.resolve()
				})
			};
			var st, dt, lt, ut, ct, pt, vt, mt, ft, gt, ht, yt, bt, kt, St, wt, Ot, Tt, Nt, Rt, $t, Ct, It, Et, At = s((function(e) {
					return function() {
						e(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed"
					}
				})),
				Pt = function(e) {
					function t() {
						var t = e.call(this) || this;
						return t.closed = !1, t.currentObservers = null, t.observers = [], t.isStopped = !1, t.hasError = !1, t.thrownError = null, t
					}
					return Object(i.h)(t, e), t.prototype.lift = function(e) {
						var t = new xt(this, this);
						return t.operator = e, t
					}, t.prototype._throwIfClosed = function() {
						if (this.closed) throw new At
					}, t.prototype.next = function(e) {
						var t = this;
						S((function() {
							var o, r;
							if (t._throwIfClosed(), !t.isStopped) {
								t.currentObservers || (t.currentObservers = Array.from(t.observers));
								try {
									for (var n = Object(i.l)(t.currentObservers), a = n.next(); !a.done; a = n.next()) {
										a.value.next(e)
									}
								} catch (s) {
									o = {
										error: s
									}
								} finally {
									try {
										a && !a.done && (r = n.return) && r.call(n)
									} finally {
										if (o) throw o.error
									}
								}
							}
						}))
					}, t.prototype.error = function(e) {
						var t = this;
						S((function() {
							if (t._throwIfClosed(), !t.isStopped) {
								t.hasError = t.isStopped = !0, t.thrownError = e;
								for (var o = t.observers; o.length;) o.shift().error(e)
							}
						}))
					}, t.prototype.complete = function() {
						var e = this;
						S((function() {
							if (e._throwIfClosed(), !e.isStopped) {
								e.isStopped = !0;
								for (var t = e.observers; t.length;) t.shift().complete()
							}
						}))
					}, t.prototype.unsubscribe = function() {
						this.isStopped = this.closed = !0, this.observers = this.currentObservers = null
					}, Object.defineProperty(t.prototype, "observed", {
						get: function() {
							var e;
							return (null === (e = this.observers) || void 0 === e ? void 0 : e.length) > 0
						},
						enumerable: !1,
						configurable: !0
					}), t.prototype._trySubscribe = function(t) {
						return this._throwIfClosed(), e.prototype._trySubscribe.call(this, t)
					}, t.prototype._subscribe = function(e) {
						return this._throwIfClosed(), this._checkFinalizedStatuses(e), this._innerSubscribe(e)
					}, t.prototype._innerSubscribe = function(e) {
						var t = this,
							o = this.hasError,
							i = this.isStopped,
							r = this.observers;
						return o || i ? c : (this.currentObservers = null, r.push(e), new u((function() {
							t.currentObservers = null, l(r, e)
						})))
					}, t.prototype._checkFinalizedStatuses = function(e) {
						var t = this.hasError,
							o = this.thrownError,
							i = this.isStopped;
						t ? e.error(o) : i && e.complete()
					}, t.prototype.asObservable = function() {
						var e = new x;
						return e.source = this, e
					}, t.create = function(e, t) {
						return new xt(e, t)
					}, t
				}(x),
				xt = function(e) {
					function t(t, o) {
						var i = e.call(this) || this;
						return i.destination = t, i.source = o, i
					}
					return Object(i.h)(t, e), t.prototype.next = function(e) {
						var t, o;
						null === (o = null === (t = this.destination) || void 0 === t ? void 0 : t.next) || void 0 === o || o.call(t, e)
					}, t.prototype.error = function(e) {
						var t, o;
						null === (o = null === (t = this.destination) || void 0 === t ? void 0 : t.error) || void 0 === o || o.call(t, e)
					}, t.prototype.complete = function() {
						var e, t;
						null === (t = null === (e = this.destination) || void 0 === e ? void 0 : e.complete) || void 0 === t || t.call(e)
					}, t.prototype._subscribe = function(e) {
						var t, o;
						return null !== (o = null === (t = this.source) || void 0 === t ? void 0 : t.subscribe(e)) && void 0 !== o ? o : c
					}, t
				}(Pt),
				Ft = {
					now: function() {
						return (Ft.delegate || Date).now()
					},
					delegate: void 0
				},
				jt = function(e) {
					function t(t, o, i) {
						void 0 === t && (t = 1 / 0), void 0 === o && (o = 1 / 0), void 0 === i && (i = Ft);
						var r = e.call(this) || this;
						return r._bufferSize = t, r._windowTime = o, r._timestampProvider = i, r._buffer = [], r._infiniteTimeWindow = !0, r._infiniteTimeWindow = o === 1 / 0, r._bufferSize = Math.max(1, t), r._windowTime = Math.max(1, o), r
					}
					return Object(i.h)(t, e), t.prototype.next = function(t) {
						var o = this,
							i = o.isStopped,
							r = o._buffer,
							n = o._infiniteTimeWindow,
							a = o._timestampProvider,
							s = o._windowTime;
						i || (r.push(t), !n && r.push(a.now() + s)), this._trimBuffer(), e.prototype.next.call(this, t)
					}, t.prototype._subscribe = function(e) {
						this._throwIfClosed(), this._trimBuffer();
						for (var t = this._innerSubscribe(e), o = this._infiniteTimeWindow, i = this._buffer.slice(), r = 0; r < i.length && !e.closed; r += o ? 1 : 2) e.next(i[r]);
						return this._checkFinalizedStatuses(e), t
					}, t.prototype._trimBuffer = function() {
						var e = this._bufferSize,
							t = this._timestampProvider,
							o = this._buffer,
							i = this._infiniteTimeWindow,
							r = (i ? 1 : 2) * e;
						if (e < 1 / 0 && r < o.length && o.splice(0, o.length - r), !i) {
							for (var n = t.now(), a = 0, s = 1; s < o.length && o[s] <= n; s += 2) a = s;
							a && o.splice(0, a + 1)
						}
					}, t
				}(Pt);

			function Mt(e) {
				var t;
				return e.message instanceof Error ? e.message : new Error((null !== (t = e.message) && void 0 !== t ? t : "<unknown>").toString())
			}

			function Dt(e, t) {
				var o, i;
				return null == t ? void 0 : null === (o = t[e]) || void 0 === o ? void 0 : null === (i = o.values) || void 0 === i ? void 0 : i[0]
			}

			function Jt(e) {
				return Dt("traceID", e)
			}

			function _t(e, t) {
				var o;
				const i = e.methods[t];
				return `/${e.fullName}/${null!==(o=null==i?void 0:i.name)&&void 0!==o?o:t}`
			}

			function Bt(e, t) {
				var o;
				return null == (null === (o = t.requestType) || void 0 === o ? void 0 : o.toJSON) ? e : null == e ? e : t.requestType.toJSON(e)
			}

			function Vt(e, t) {
				var o;
				return null == (null === (o = t.responseType) || void 0 === o ? void 0 : o.toJSON) ? e : null == e ? e : t.responseType.toJSON(e)
			}

			function Lt(e, t) {
				var o;
				return e.success ? null == (null === (o = t.requestType) || void 0 === o ? void 0 : o.fromJSON) ? e.message : null == e.message ? e.message : qt(e.message) ? e.message : t.requestType.fromJSON(e.message) : e.message
			}

			function Ut(e, t) {
				var o;
				return e.success ? null == (null === (o = t.responseType) || void 0 === o ? void 0 : o.fromJSON) ? e.message : null == e.message ? e.message : qt(e.message) ? e.message : t.responseType.fromJSON(e.message) : e.message
			}

			function qt(e) {
				return null != (t = e) && !Array.isArray(t) && "object" == typeof t && "$type" in e;
				var t
			}

			function Wt(e, t) {
				e.success ? e.complete ? (e.message && t.next(e.message), t.complete()) : t.next(e.message) : (t.error(e.message), t.complete())
			}
			class Gt {
				static build(e, t, o) {
					return new Ht(e, t, o)
				}
			}
			class Ht {
				constructor(e, t, o) {
					if (st.add(this), dt.set(this, void 0), lt.set(this, {}), ut.set(this, {}), ct.set(this, void 0), pt.set(this, X()), vt.set(this, Object.create(null)), null == o) throw Error("EnvelopeServer requires a nonnullish actor to forward requests to and await responses from.");
					this.hostname = e, Object(i.g)(this, ct, o, "f");
					for (const r of t)
						for (const e of Object.values(r.methods)) Object(i.f)(this, vt, "f")[_t(r, e.name)] = e
				}
				onBind(e) {
					if (!e.hostname || ! function(e, t) {
							const o = `.${t}`;
							return e === t || e.length > o.length && e.endsWith(o)
						}(this.hostname, e.hostname)) throw new Error(`Server's hostname (${this.hostname}) must match or be under *.[dispatcher-hostname] (${e.hostname}).`);
					Object(i.g)(this, dt, e, "f")
				}
				onUnbind(e) {
					Object(i.g)(this, dt, void 0, "f")
				}
				post(e) {
					var t;
					const o = Object(i.f)(this, vt, "f")[e.method];
					if (!o) throw new Error(`Service definition does not provide method "${e.method}".`);
					const r = null === (t = Object(i.f)(this, ct, "f")[o.name]) || void 0 === t ? void 0 : t.bind(Object(i.f)(this, ct, "f"));
					if (null == r) throw Error(`Service does not implement "${o.name}" method.`);
					if (o.requestStream && o.responseStream) Object(i.f)(this, st, "m", ht).call(this, r, e, o);
					else if (o.requestStream && !o.responseStream) Object(i.f)(this, st, "m", gt).call(this, r, e, o);
					else if (!o.requestStream && o.responseStream) Object(i.f)(this, st, "m", ft).call(this, r, e, o);
					else {
						if (o.requestStream || o.responseStream) throw new Error(`Unsupported "${o.name}" service method request / response definition.`);
						Object(i.f)(this, st, "m", mt).call(this, r, e, o)
					}
				}
				async dispose() {
					for (const e of Object.keys(Object(i.f)(this, ut, "f"))) Object(i.f)(this, ut, "f")[e].unsubscribe();
					for (const e of Object.keys(Object(i.f)(this, lt, "f"))) Object(i.f)(this, lt, "f")[e].error(new Error("EnvelopeServer is going away"))
				}
			}

			function zt(e) {
				if (null == e || "object" != typeof e || ["catch", "then"].some(t => !(t in e))) throw Error("Expected Promise.")
			}

			function Yt(e) {
				if (!(t = e) || !(t instanceof x || a(t.lift) && a(t.subscribe))) throw Error("Expected Observable.");
				var t
			}
			dt = new WeakMap, lt = new WeakMap, ut = new WeakMap, ct = new WeakMap, pt = new WeakMap, vt = new WeakMap, st = new WeakSet, mt = async function(e, t, o) {
				const r = {
						complete: !0,
						dst: t.src,
						metadata: t.metadata,
						method: t.method,
						request: !1,
						src: t.dst,
						streamId: t.streamId,
						traceId: t.traceId
					},
					n = e(Lt(t, o), t.metadata);
				zt(n);
				try {
					const e = await n;
					Object(i.f)(this, st, "m", bt).call(this, {
						...r,
						message: Vt(e, o),
						success: !0
					})
				} catch (a) {
					Object(i.f)(this, st, "m", bt).call(this, {
						...r,
						message: a,
						success: !1
					})
				}
			}, ft = function(e, t, o) {
				var r;
				if (!t.request || !t.success) return ye.warn(`Received response (${!t.request}) or erroneous envelope (${!t.success}). Closing stream ${t.streamId}.`), null === (r = Object(i.f)(this, ut, "f")[t.streamId]) || void 0 === r || r.unsubscribe(), void delete Object(i.f)(this, ut, "f")[t.streamId];
				const n = e(Lt(t, o), t.metadata);
				Yt(n), Object(i.f)(this, st, "m", yt).call(this, n, t, o)
			}, gt = async function(e, t, o) {
				let r = Object(i.f)(this, lt, "f")[t.streamId];
				if (r) t.message = Lt(t, o), Wt(t, r);
				else {
					Object(i.f)(this, lt, "f")[t.streamId] = r = new jt(1), t.message = Lt(t, o), Wt(t, r);
					const a = {
							complete: !0,
							dst: t.src,
							metadata: t.metadata,
							method: t.method,
							request: !1,
							src: t.dst,
							streamId: t.streamId,
							traceId: t.traceId
						},
						s = e(r, t.metadata);
					zt(s);
					try {
						const e = await s;
						Object(i.f)(this, st, "m", bt).call(this, {
							...a,
							message: Vt(e, o),
							success: !0
						})
					} catch (n) {
						Object(i.f)(this, st, "m", bt).call(this, {
							...a,
							message: n,
							success: !1
						})
					}
				}
			}, ht = function(e, t, o) {
				let r = Object(i.f)(this, lt, "f")[t.streamId];
				if (r) t.message = Lt(t, o), Wt(t, r);
				else {
					Object(i.f)(this, lt, "f")[t.streamId] = r = new jt(1), t.message = Lt(t, o), Wt(t, r);
					const n = e(r, t.metadata);
					Yt(n), Object(i.f)(this, st, "m", yt).call(this, n, t, o)
				}
			}, yt = function(e, t, o) {
				const r = {
					dst: t.src,
					metadata: t.metadata,
					method: t.method,
					request: !1,
					src: t.dst,
					streamId: t.streamId,
					traceId: t.traceId
				};
				Object(i.f)(this, ut, "f")[t.streamId] && console.warn("Already had a stream id for", t.streamId), Object(i.f)(this, ut, "f")[t.streamId] = e.subscribe({
					next: e => Object(i.f)(this, st, "m", bt).call(this, {
						...r,
						complete: !1,
						message: Vt(e, o),
						success: !0
					}),
					error: e => Object(i.f)(this, st, "m", bt).call(this, {
						...r,
						complete: !0,
						message: e,
						success: !1
					}),
					complete: () => Object(i.f)(this, st, "m", bt).call(this, {
						...r,
						complete: !0,
						message: void 0,
						success: !0
					})
				})
			}, bt = function(e) {
				if (!Object(i.f)(this, dt, "f")) throw Error("No dispatcher bound to server: " + this.hostname + " - " + Object(i.f)(this, pt, "f"));
				Object(i.f)(this, dt, "f").post(r.k.fromPartial(e))
			};
			class Zt {
				static build(e, t) {
					let o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : X;
					return new Xt(e, t, o)
				}
			}
			class Xt {
				constructor(e, t, o) {
					kt.add(this), St.set(this, void 0), wt.set(this, void 0), Ot.set(this, void 0), Tt.set(this, {}), Object(i.g)(this, wt, e, "f"), this.id = o(), Object(i.g)(this, St, o, "f");
					for (const r of t)
						for (const e of Object.values(r.methods))
							if (e.requestStream && e.responseStream) this[e.name] = Object(i.f)(this, kt, "m", Ct).call(this, r, e).bind(this);
							else if (e.requestStream && !e.responseStream) this[e.name] = Object(i.f)(this, kt, "m", $t).call(this, r, e).bind(this);
					else if (!e.requestStream && e.responseStream) this[e.name] = Object(i.f)(this, kt, "m", Rt).call(this, r, e).bind(this);
					else {
						if (e.requestStream || e.responseStream) throw new Error(`Unsupported "${r.name}" client method request / response definition.`);
						this[e.name] = Object(i.f)(this, kt, "m", Nt).call(this, r, e).bind(this)
					}
				}
				get hostname() {
					if (null != Object(i.f)(this, Ot, "f")) return re(`${ae.getChild(Object(i.f)(this,wt,"f"))}-${this.id}`, Object(i.f)(this, Ot, "f"))
				}
				async onBind(e) {
					if (null != Object(i.f)(this, Ot, "f")) throw Error(`Dispatcher: "${Object(i.f)(this,Ot,"f").hostname}" already bound.`);
					Object(i.g)(this, Ot, e, "f")
				}
				async onUnbind(e) {
					Object(i.g)(this, Ot, void 0, "f")
				}
				post(e) {
					if (null == Object(i.f)(this, Tt, "f")[e.streamId]) throw Error(`Missing callbacks for stream ID "${e.streamId}" for envelope to ${e.dst} from ${e.src}.`);
					Object(i.f)(this, Tt, "f")[e.streamId](e), e.complete && delete Object(i.f)(this, Tt, "f")[e.streamId]
				}
				async dispose() {
					var e;
					null != this.hostname && await (null === (e = Object(i.f)(this, Ot, "f")) || void 0 === e ? void 0 : e.release(this.hostname))
				}
			}
			St = new WeakMap, wt = new WeakMap, Ot = new WeakMap, Tt = new WeakMap, kt = new WeakSet, Nt = function(e, t) {
				return (o, r) => {
					const n = Object(i.f)(this, St, "f").call(this),
						a = Jt(r) || Object(i.f)(this, St, "f").call(this);
					return new Promise((s, d) => {
						Object(i.f)(this, Tt, "f")[n] = e => {
							e.success ? s(Ut(e, t)) : d(Mt(e))
						}, Object(i.f)(this, kt, "m", Et).call(this, {
							complete: !0,
							message: Bt(o, t),
							metadata: r,
							method: _t(e, t.name),
							request: !0,
							streamId: n,
							success: !0,
							traceId: a
						})
					})
				}
			}, Rt = function(e, t) {
				return (o, r) => {
					const n = Object(i.f)(this, St, "f").call(this),
						a = Jt(r) || Object(i.f)(this, St, "f").call(this);
					return new x(s => {
						if (Object(i.f)(this, Tt, "f")[n]) throw new Error("Multiple subscribers to a source is not supported");
						Object(i.f)(this, Tt, "f")[n] = e => {
							e.message = Ut(e, t), Wt(e, s)
						}, Object(i.f)(this, kt, "m", Et).call(this, {
							complete: !0,
							message: Bt(o, t),
							metadata: r,
							method: _t(e, t.name),
							request: !0,
							streamId: n,
							success: !0,
							traceId: a
						})
					})
				}
			}, $t = function(e, t) {
				return (o, r) => {
					const n = Object(i.f)(this, St, "f").call(this),
						a = Jt(r) || Object(i.f)(this, St, "f").call(this),
						s = new Promise((e, o) => {
							Object(i.f)(this, Tt, "f")[n] = i => {
								i.success ? e(Ut(i, t)) : o(Mt(i))
							}
						});
					return Object(i.f)(this, kt, "m", It).call(this, e, t, n, a, o, r), s
				}
			}, Ct = function(e, t) {
				return (o, r) => {
					const n = Object(i.f)(this, St, "f").call(this),
						a = Jt(r) || Object(i.f)(this, St, "f").call(this);
					return new x(s => {
						Object(i.f)(this, Tt, "f")[n] = e => {
							e.message = Ut(e, t), Wt(e, s)
						}, Object(i.f)(this, kt, "m", It).call(this, e, t, n, a, o, r)
					})
				}
			}, It = function(e, t, o, r, n, a) {
				const s = {
					metadata: a,
					method: _t(e, t.name),
					request: !0,
					streamId: o,
					traceId: r
				};
				n.subscribe({
					next: e => Object(i.f)(this, kt, "m", Et).call(this, {
						...s,
						complete: !1,
						message: Bt(e, t),
						success: !0
					}),
					error: e => Object(i.f)(this, kt, "m", Et).call(this, {
						...s,
						complete: !0,
						message: e,
						success: !1
					}),
					complete: () => Object(i.f)(this, kt, "m", Et).call(this, {
						...s,
						complete: !0,
						message: void 0,
						success: !0
					})
				})
			}, Et = function(e) {
				if (null == Object(i.f)(this, Ot, "f")) throw Error("No dispatcher bound to client:" + this.hostname);
				Object(i.f)(this, Ot, "f").post(r.k.fromPartial({
					...e,
					dst: Object(i.f)(this, wt, "f"),
					src: this.hostname
				}))
			};
			var Kt, Qt, eo, to, oo, io, ro, no = o("./node_modules/web-worker/cjs/browser.js"),
				ao = o.n(no);
			class so {
				constructor(e, t) {
					Kt.set(this, void 0), Qt.set(this, void 0), this.hostname = e, Object(i.g)(this, Kt, t, "f"), this.onMessage = this.onMessage.bind(this)
				}
				post(e) {
					Object(i.f)(this, Kt, "f").postMessage(e)
				}
				dispose() {
					var e, t;
					return null === (e = (t = Object(i.f)(this, Kt, "f")).terminate) || void 0 === e || e.call(t), Promise.resolve()
				}
				onBind(e) {
					Object(i.g)(this, Qt, e, "f"), Object(i.f)(this, Kt, "f").addEventListener("message", this.onMessage)
				}
				onUnbind(e) {
					Object(i.g)(this, Qt, void 0, "f"), Object(i.f)(this, Kt, "f").removeEventListener("message", this.onMessage)
				}
				onMessage(e) {
					if (null == Object(i.f)(this, Qt, "f")) throw Error("No dispatcher bound.");
					const t = e.data;
					if (!t.src.endsWith(this.hostname)) throw new Error(`invalid src: ${t.src}, expected ${this.hostname}`);
					Object(i.f)(this, Qt, "f").post(t)
				}
			}
			Kt = new WeakMap, Qt = new WeakMap;
			class lo {
				constructor(e, t, o) {
					eo.add(this), to.set(this, void 0), oo.set(this, void 0), io.set(this, void 0), Object(i.g)(this, to, o, "f"), Object(i.g)(this, io, new ao.a(t, {
						name: e
					}), "f"), Object(i.f)(this, eo, "m", ro).call(this, "add", Object(i.f)(this, io, "f"), Object(i.f)(this, to, "f")), Object(i.g)(this, oo, new so(e, Object(i.f)(this, io, "f")), "f")
				}
				get hostname() {
					return Object(i.f)(this, oo, "f").hostname
				}
				post(e) {
					Object(i.f)(this, oo, "f").post(e)
				}
				async dispose() {
					await Object(i.f)(this, oo, "f").dispose(), Object(i.f)(this, eo, "m", ro).call(this, "remove", Object(i.f)(this, io, "f"), Object(i.f)(this, to, "f")), ye.verbose(`${Object(i.f)(this,oo,"f").hostname} worker terminated.`)
				}
				onBind(e) {
					Object(i.f)(this, oo, "f").onBind(e)
				}
				onUnbind(e) {
					Object(i.f)(this, oo, "f").onUnbind(e)
				}
			}

			function uo() {
				return void 0 === (e = 1) && (e = 1 / 0), qe(A, e);
				var e
			}

			function co() {
				for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
				return uo()(Ve(e, ke(e)))
			}
			to = new WeakMap, oo = new WeakMap, io = new WeakMap, eo = new WeakSet, ro = function(e, t, o) {
				for (const i of ["error", "messageerror", "unhandledrejection"]) t[`${e}EventListener`](i, o)
			};
			const po = [{
				cname: ee,
				workerFileBaseName: ee,
				provides: [r.L]
			}, {
				cname: "echo",
				workerFileBaseName: "echo",
				provides: [r.i]
			}, {
				cname: "redditapi",
				workerFileBaseName: "redditapi",
				provides: [r.w, r.A, r.m, r.v, r.z, r.C]
			}];
			var vo, mo, fo, go, ho, yo, bo, ko, So, wo = o("./node_modules/grpc-web/index.js");
			class Oo {
				constructor(e, t, o, r) {
					vo.add(this), mo.set(this, []), fo.set(this, void 0), go.set(this, void 0), ho.set(this, void 0), yo.set(this, void 0), Object(i.g)(this, fo, e, "f"), Object(i.g)(this, go, null != r ? r : new wo.GrpcWebClientBase({
						format: "binary",
						withCredentials: !0
					}), "f"), Object(i.g)(this, ho, t, "f"), Object(i.g)(this, yo, o, "f")
				}
				addEventListener(e, t) {
					"message" === e && Object(i.f)(this, mo, "f").push(t)
				}
				postMessage(e) {
					Object(i.f)(this, vo, "m", bo).call(this, e).catch(ye.error)
				}
				removeEventListener(e, t) {
					if ("message" !== e) return;
					const o = Object(i.f)(this, mo, "f").indexOf(t); - 1 !== o && Object(i.f)(this, mo, "f").splice(o, 1)
				}
				terminate() {
					Object(i.f)(this, mo, "f").length = 0
				}
			}

			function To(e) {
				const t = [j.Installation, j.Version, j.App, j.Actor];
				return Object.entries(e).filter(e => {
					let [o] = e;
					return t.includes(o)
				}).reduce((e, t) => {
					let [o, {
						values: i
					}] = t;
					return {
						...e,
						[o]: i.join(",")
					}
				}, {})
			}
			mo = new WeakMap, fo = new WeakMap, go = new WeakMap, ho = new WeakMap, yo = new WeakMap, vo = new WeakSet, bo = async function(e) {
				const t = To(e.metadata);
				if (Object(i.f)(this, yo, "f")) {
					const e = To(Object(i.f)(this, yo, "f"));
					Object.assign(t, e)
				}
				const o = Object(i.f)(this, vo, "m", So).call(this, e),
					r = await Object(i.f)(this, go, "f").thenableCall(`${Object(i.f)(this,fo,"f")}${e.method}`, e.message, t, o);
				Object(i.f)(this, vo, "m", ko).call(this, e, r)
			}, ko = function(e, t) {
				const o = r.k.fromPartial({
					method: e.method,
					request: !1,
					message: t,
					metadata: e.metadata,
					src: e.dst,
					dst: e.src,
					streamId: e.streamId,
					traceId: e.traceId,
					complete: !0,
					success: !0
				});
				Object(i.f)(this, mo, "f").forEach(e => e({
					data: o
				}))
			}, So = function(e) {
				const t = function(e) {
						const t = ue(e.method.split("/").at(-1));
						return t[0].toLocaleLowerCase() + t.slice(1)
					}(e),
					o = Object(i.f)(this, ho, "f").methods[t];
				if (null == o) throw Error(`Unknown method: ${t}.`);
				if (null == o.requestType || null == o.responseType) throw new Error("Envelope must contain a valid `requestType` and `responseType`.");
				return new wo.MethodDescriptor(e.method, o.requestStream ? wo.MethodType.SERVER_STREAMING : wo.MethodType.UNARY, class {
					constructor(e) {
						Object.assign(this, o.requestType.fromPartial(e))
					}
				}, class {
					constructor(e) {
						Object.assign(this, o.responseType.fromPartial(e))
					}
				}, e => o.requestType.encode(e).finish(), o.responseType.decode.bind(o.responseType))
			};
			const No = Object.freeze({
				CONNECTING: 0,
				OPEN: 1,
				CLOSING: 2,
				CLOSED: 3
			});
			var Ro, $o, Co, Io, Eo, Ao, Po, xo, Fo, jo, Mo, Do, Jo, _o, Bo, Vo, Lo, Uo, qo, Wo, Go;
			class Ho {
				constructor() {
					this.id = X(), Ro.set(this, void 0), $o.set(this, []), Co.set(this, e => {
						this.unbindSocket()
					}), Io.set(this, void 0), Eo.set(this, e => {
						if (0 == Object(i.f)(this, $o, "f").length) throw Error("Socket message missed. No listeners on port.");
						const t = {
							data: r.k.fromJSON(JSON.parse(e.data))
						};
						for (const o of Object(i.f)(this, $o, "f")) o(t)
					}), Ao.set(this, void 0), Object(i.g)(this, Co, Object(i.f)(this, Co, "f").bind(this), "f"), Object(i.g)(this, Eo, Object(i.f)(this, Eo, "f").bind(this), "f"), Object(i.f)(this, Io, "f"), Object(i.g)(this, Ao, void 0, "f")
				}
				async bindSocket(e) {
					if (null != Object(i.f)(this, Ro, "f")) throw Error(`Port already bound to socket for ${Object(i.f)(this,Ro,"f").url}.`);
					if (Object(i.g)(this, Ro, e, "f"), Object(i.f)(this, Ro, "f").addEventListener("close", Object(i.f)(this, Co, "f")), Object(i.f)(this, Ro, "f").addEventListener("message", Object(i.f)(this, Eo, "f")), Object(i.f)(this, Ro, "f").readyState !== No.OPEN) {
						if (Object(i.f)(this, Ro, "f").readyState !== No.CONNECTING) throw Error(`Port socket not connecting to ${Object(i.f)(this,Ro,"f").url}.`);
						await new Promise((e, t) => {
							Object(i.g)(this, Io, t, "f"), Object(i.f)(this, Ro, "f").addEventListener("error", Object(i.f)(this, Io, "f")), Object(i.g)(this, Ao, () => e(), "f"), Object(i.f)(this, Ro, "f").addEventListener("open", Object(i.f)(this, Ao, "f"))
						})
					}
				}
				unbindSocket() {
					null != Object(i.f)(this, Ro, "f") && (null != Object(i.f)(this, Ao, "f") && Object(i.f)(this, Ro, "f").removeEventListener("open", Object(i.f)(this, Ao, "f")), Object(i.g)(this, Ao, void 0, "f"), null != Object(i.f)(this, Io, "f") && Object(i.f)(this, Ro, "f").removeEventListener("error", Object(i.f)(this, Io, "f")), Object(i.g)(this, Io, void 0, "f"), Object(i.f)(this, Ro, "f").removeEventListener("message", Object(i.f)(this, Eo, "f")), Object(i.f)(this, Ro, "f").removeEventListener("close", Object(i.f)(this, Co, "f")), Object(i.g)(this, Ro, void 0, "f"))
				}
				addEventListener(e, t) {
					"message" === e && Object(i.f)(this, $o, "f").push(t)
				}
				postMessage(e) {
					if (null == Object(i.f)(this, Ro, "f")) throw Error("Port not bound to socket.");
					Object(i.f)(this, Ro, "f").send(JSON.stringify(r.k.toJSON(e)))
				}
				removeEventListener(e, t) {
					if ("message" !== e) return;
					const o = Object(i.f)(this, $o, "f").indexOf(t); - 1 !== o && Object(i.f)(this, $o, "f").splice(o, 1)
				}
				terminate() {
					var e;
					null === (e = Object(i.f)(this, Ro, "f")) || void 0 === e || e.close(), Object(i.f)(this, $o, "f").length = 0
				}
			}
			Ro = new WeakMap, $o = new WeakMap, Co = new WeakMap, Io = new WeakMap, Eo = new WeakMap, Ao = new WeakMap;
			class zo extends so {
				constructor(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Ho;
					super(e, t), Po.set(this, void 0), Object(i.g)(this, Po, t, "f")
				}
				async bindSocket(e) {
					await Object(i.f)(this, Po, "f").bindSocket(e)
				}
				unbindSocket() {
					Object(i.f)(this, Po, "f").unbindSocket()
				}
				async dispose() {
					await super.dispose(), this.unbindSocket()
				}
			}
			Po = new WeakMap;
			class Yo {
				constructor(e, t) {
					var o, r;
					xo.set(this, void 0), Fo.set(this, void 0), Object(i.g)(this, xo, e, "f"), Object(i.g)(this, Fo, t, "f"), null !== (o = (r = Object(i.f)(this, xo, "f").refCounts)[t]) && void 0 !== o || (r[t] = 0), Object(i.f)(this, xo, "f").refCounts[t] += 1
				}
				As(e) {
					const t = Object(i.f)(this, xo, "f").getClient(Object(i.f)(this, Fo, "f"), e);
					if (!t) throw new UnknownActorError(Object(i.f)(this, Fo, "f"));
					return t
				}
				async dispose() {
					return Object(i.f)(this, xo, "f").refCounts[Object(i.f)(this, Fo, "f")] -= 1, Object(i.f)(this, xo, "f").policy.onDispose(Object(i.f)(this, Fo, "f"))
				}
			}
			xo = new WeakMap, Fo = new WeakMap;
			class Zo {
				constructor(e) {
					let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : at,
						o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : () => {},
						r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : po;
					if (jo.add(this), Mo.set(this, void 0), Do.set(this, void 0), Jo.set(this, !1), _o.set(this, void 0), this.refCounts = Object.create(null), Bo.set(this, Object.create(null)), Vo.set(this, new Pt), Lo.set(this, void 0), Object(i.g)(this, Do, o, "f"), this.namespace = e, Object(i.g)(this, _o, new nt(e), "f"), this.policy = t.create(this), Object(i.g)(this, Lo, r.reduce((e, t) => ({
							...e,
							[oe(t.cname, this)]: t
						}), Object.create(null)), "f"), !Object(i.f)(this, Lo, "f")[oe(ee, this)]) throw new Error("must provide a Supervisor implementation in system workers.")
				}
				get hostname() {
					return Object(i.f)(this, _o, "f").hostname
				}
				bind(e) {
					Object(i.f)(this, _o, "f").bind(e)
				}
				async release(e) {
					await Object(i.f)(this, _o, "f").release(e)
				}
				unbind(e) {
					Object(i.f)(this, _o, "f").unbind(e)
				}
				post(e) {
					Object(i.f)(this, _o, "f").post(e)
				}
				onBind(e) {
					Object(i.f)(this, _o, "f").onBind(e)
				}
				onUnbind(e) {
					Object(i.f)(this, _o, "f").onUnbind(e)
				}
				getBootstrapPath() {
					return this.pathForName("bootstrap")
				}
				start() {
					if (Object(i.f)(this, Jo, "f")) return;
					Object(i.g)(this, Mo, this.getClient(oe(ee, this), r.L), "f"), this.provide(r.o, this);
					const e = Gt.build(oe(Q, this), [r.D], this);
					Object(i.f)(this, jo, "m", Uo).call(this, e, r.D);
					for (const t of Object.values(Object(i.f)(this, Lo, "f"))) {
						const e = oe(t.cname, this),
							o = new lo(e, this.pathForName(t.workerFileBaseName), Object(i.f)(this, Do, "f"));
						Object(i.f)(this, jo, "m", Uo).call(this, o, ...t.provides)
					}
					this.loadPlugins(Object(i.f)(this, _o, "f")), Object(i.g)(this, Jo, !0, "f")
				}
				async dispose() {
					Object(i.g)(this, Mo, void 0, "f"), await Object(i.f)(this, _o, "f").dispose()
				}
				async load(e) {
					this.start(), await Object(i.f)(this, Mo, "f").Load(e)
				}
				async loadAndGetActorRef(e) {
					return this.start(), await this.load(e), this.getActorRef(e.hostname)
				}
				async forceUnload(e) {
					var t;
					this.start(), await (null === (t = Object(i.f)(this, Mo, "f")) || void 0 === t ? void 0 : t.Unload(r.N.fromPartial({
						hostname: e,
						force: !0
					})))
				}
				getActorRef(e) {
					return new Yo(this, e)
				}
				getPlugin(e) {
					if (!Object(i.f)(this, Bo, "f")[ie(e, this)]) throw new UnknownActorError(ie(e, this));
					return this.getClient(ie(e, this), e)
				}
				getInspector() {
					return this.getClient(ie(r.o, this), r.o)
				}
				provide(e, t) {
					const o = Gt.build(ie(e, this), [e], t);
					Object(i.f)(this, jo, "m", Uo).call(this, o, e)
				}
				async bindRemote(e, t) {
					const o = new zo(e),
						i = this.makeWebSocket(t);
					await o.bindSocket(i), this.bind(o)
				}
				bindRemoteActor(e, t, o, r) {
					const n = new Oo(o, e, r),
						a = new so(t, n);
					Object(i.f)(this, jo, "m", Uo).call(this, a, e)
				}
				isBound(e) {
					return Object(i.f)(this, _o, "f").isBound(e)
				}
				getClient(e, t) {
					const o = Zt.build(e, [t], X);
					return this.bind(o), o
				}
				async NewWorker(e) {
					if (this.isBound(e.hostname)) throw Error(`Worker exists at hostname ${e.hostname}.`);
					const t = new lo(e.hostname, this.getBootstrapPath(), Object(i.f)(this, Do, "f"));
					Object(i.f)(this, jo, "m", Uo).call(this, t, ...e.provides.map(e => r.g.fromSerializable(e)));
					const o = this.getClient(te("bootstrap", e), r.a);
					return await o.LoadActor(e), this.unbind(ue(o.hostname)), r.j.fromPartial({})
				}
				async TerminateWorker(e) {
					return await Object(i.f)(this, _o, "f").release(e.hostname), Object(i.f)(this, jo, "m", qo).call(this, e.hostname), r.j.fromPartial({})
				}
				async ListActors(e) {
					const t = [];
					for (const o of Object.keys(Object(i.f)(this, Bo, "f"))) o.includes(e.hostname.toLocaleLowerCase()) && Object(i.f)(this, Bo, "f")[o].some(t => t.fullName.includes(e.type)) && t.push(r.p.fromPartial({
						hostname: o,
						provides: [...Object(i.f)(this, Bo, "f")[o]]
					}));
					return r.q.fromPartial({
						descriptions: t
					})
				}
				ActorChanges(e) {
					return Object(i.f)(this, Vo, "f").pipe(function() {
						for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
						var o = ke(e);
						return xe((function(t, i) {
							(o ? co(e, t, o) : co(e, t)).subscribe(i)
						}))
					}(r.r.fromPartial({
						type: r.s.SUBSCRIBED
					})))
				}
			}
			Mo = new WeakMap, Do = new WeakMap, Jo = new WeakMap, _o = new WeakMap, Bo = new WeakMap, Vo = new WeakMap, Lo = new WeakMap, jo = new WeakSet, Uo = function(e) {
				this.bind(e);
				const t = ue(e.hostname);
				for (var o = arguments.length, n = new Array(o > 1 ? o - 1 : 0), a = 1; a < o; a++) n[a - 1] = arguments[a];
				const s = n.map(e => r.g.toSerializable(e));
				Object(i.f)(this, Bo, "f")[t] = s, Object(i.f)(this, jo, "m", Wo).call(this, s, "ADDED", t)
			}, qo = function(e) {
				const t = Object(i.f)(this, Bo, "f")[e];
				null != t && (Object(i.f)(this, jo, "m", Wo).call(this, t, "REMOVED", e), delete Object(i.f)(this, Bo, "f")[e])
			}, Wo = function(e, t, o) {
				Object(i.f)(this, Vo, "f").next(r.r.fromPartial({
					type: r.s[t],
					description: {
						hostname: o,
						provides: [...e]
					}
				}))
			};
			class Xo {
				constructor(e) {
					Go.set(this, void 0), this.assertEnvironment(), Object(i.g)(this, Go, e, "f")
				}
				async Fetch(e) {
					var t;
					const o = {
						...e.data
					};
					["get", "head"].includes(null === (t = o.method) || void 0 === t ? void 0 : t.toLowerCase()) && delete o.body;
					const n = await Object(i.f)(this, Go, "f").call(globalThis, e.url, o);
					return r.l.fromPartial({
						url: n.url,
						body: new Uint8Array(await n.arrayBuffer()),
						status: n.status,
						headers: n.headers
					})
				}
			}
			Go = new WeakMap;
			class Ko extends Xo {
				constructor() {
					super(window.fetch)
				}
				assertEnvironment() {
					if ("undefined" == typeof window || void 0 === window.fetch) throw new Error("BrowserHTTP can only be provided by the browser runtime")
				}
			}
			var Qo, ei, ti, oi, ii, ri, ni, ai, si, di = o("./node_modules/cron-parser/lib/parser.js"),
				li = o.n(di);
			class ui {
				constructor(e) {
					Qo.add(this), ei.set(this, void 0), ti.set(this, void 0), Object(i.g)(this, ei, {}, "f"), Object(i.g)(this, ti, e, "f")
				}
				async Schedule(e, t) {
					if (!e.cron && null == e.when) throw new Error("Must include timestamp or crontab with schedule request");
					const o = Dt(j.R2Auth, t),
						n = Dt(j.R2Host, t),
						a = ci(t);
					if (!a) throw new Error("Cannot determine actor to schedule action for");
					const s = function(e, t) {
							const o = {};
							e && (o[j.R2Auth] = r.J.fromPartial({
								values: [e]
							}));
							t && (o[j.R2Host] = r.J.fromPartial({
								values: [t]
							}));
							return o
						}(o, n),
						d = Object(i.f)(this, Qo, "m", ii).call(this, e, a, s);
					return r.F.fromJSON({
						id: d
					})
				}
				async Cancel(e, t) {
					if (!e.id) throw new Error("Must include id to cancel scheduled action");
					const o = Object(i.f)(this, ei, "f")[e.id];
					if (null == o) return r.j.fromPartial({});
					if (o.actorHostname !== ci(t)) throw new Error("Unable to cancel action.");
					return Object(i.f)(this, Qo, "m", ai).call(this, e.id, o), r.j.fromPartial({})
				}
			}

			function ci(e) {
				const t = Dt(j.Caller, e);
				if (null != t) return ne(t)
			}
			ei = new WeakMap, ti = new WeakMap, Qo = new WeakSet, oi = function(e) {
				let t;
				if ("object" == typeof e) t = e;
				else try {
					t = li.a.parseExpression(e).next()
				} catch (i) {
					throw new Error("Invalid crontab")
				}
				const o = t.getTime() - Date.now();
				if (o < 0) throw new Error("Scheduled action can't be set in the past.");
				return o
			}, ii = function(e, t, o) {
				const n = X(),
					a = Object(i.f)(this, Qo, "m", oi).call(this, e.when || e.cron),
					s = {
						actorHostname: t,
						timeoutRef: globalThis.setTimeout(() => Object(i.f)(this, Qo, "m", ri).call(this, n), a),
						data: e.action || r.E.fromPartial({}),
						crontab: e.cron,
						metadata: o
					};
				return Object(i.f)(this, ei, "f")[n] = s, n
			}, ri = function e(t) {
				const o = Object(i.f)(this, ei, "f")[t];
				if (delete Object(i.f)(this, ei, "f")[t], o.crontab) {
					const r = Object(i.f)(this, Qo, "m", oi).call(this, o.crontab);
					Object(i.f)(this, ei, "f")[t] = {
						...o,
						timeoutRef: globalThis.setTimeout(() => Object(i.f)(this, Qo, "m", e).call(this, t), r)
					}
				}
				Object(i.f)(this, Qo, "m", ni).call(this, o.actorHostname, o.data, o.metadata)
			}, ni = async function(e, t, o) {
				const n = Zt.build(e, [r.H]);
				Object(i.f)(this, ti, "f").bind(n);
				try {
					await n.HandleScheduledAction(t, o)
				} catch (a) {
					ye.error("Error invoking scheduled action:", a)
				}
				null != n.hostname && Object(i.f)(this, ti, "f").unbind(n.hostname)
			}, ai = function(e, t) {
				globalThis.clearTimeout(t.timeoutRef), delete Object(i.f)(this, ei, "f")[e]
			};
			class pi extends Zo {
				constructor(e) {
					super(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : K), si.set(this, void 0), Object(i.g)(this, si, e, "f")
				}
				pathForName(e) {
					if (!Object(i.f)(this, si, "f").has(e)) throw new Error(`No path for worker named "${e}".`);
					return Object(i.f)(this, si, "f").get(e)
				}
				makeWebSocket(e) {
					return new WebSocket(e)
				}
				loadPlugins(e) {
					this.provide(r.t, new U(localStorage)), this.provide(r.I, new L(sessionStorage)), this.provide(r.b, new n), this.provide(r.n, new Ko), this.provide(r.G, new ui(e))
				}
			}
			si = new WeakMap
		},
		"./node_modules/@protobufjs/aspromise/index.js": function(e, t, o) {
			"use strict";
			e.exports = function(e, t) {
				var o = new Array(arguments.length - 1),
					i = 0,
					r = 2,
					n = !0;
				for (; r < arguments.length;) o[i++] = arguments[r++];
				return new Promise((function(r, a) {
					o[i] = function(e) {
						if (n)
							if (n = !1, e) a(e);
							else {
								for (var t = new Array(arguments.length - 1), o = 0; o < t.length;) t[o++] = arguments[o];
								r.apply(null, t)
							}
					};
					try {
						e.apply(t || null, o)
					} catch (s) {
						n && (n = !1, a(s))
					}
				}))
			}
		},
		"./node_modules/@protobufjs/base64/index.js": function(e, t, o) {
			"use strict";
			var i = t;
			i.length = function(e) {
				var t = e.length;
				if (!t) return 0;
				for (var o = 0; --t % 4 > 1 && "=" === e.charAt(t);) ++o;
				return Math.ceil(3 * e.length) / 4 - o
			};
			for (var r = new Array(64), n = new Array(123), a = 0; a < 64;) n[r[a] = a < 26 ? a + 65 : a < 52 ? a + 71 : a < 62 ? a - 4 : a - 59 | 43] = a++;
			i.encode = function(e, t, o) {
				for (var i, n = null, a = [], s = 0, d = 0; t < o;) {
					var l = e[t++];
					switch (d) {
						case 0:
							a[s++] = r[l >> 2], i = (3 & l) << 4, d = 1;
							break;
						case 1:
							a[s++] = r[i | l >> 4], i = (15 & l) << 2, d = 2;
							break;
						case 2:
							a[s++] = r[i | l >> 6], a[s++] = r[63 & l], d = 0
					}
					s > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, a)), s = 0)
				}
				return d && (a[s++] = r[i], a[s++] = 61, 1 === d && (a[s++] = 61)), n ? (s && n.push(String.fromCharCode.apply(String, a.slice(0, s))), n.join("")) : String.fromCharCode.apply(String, a.slice(0, s))
			};
			i.decode = function(e, t, o) {
				for (var i, r = o, a = 0, s = 0; s < e.length;) {
					var d = e.charCodeAt(s++);
					if (61 === d && a > 1) break;
					if (void 0 === (d = n[d])) throw Error("invalid encoding");
					switch (a) {
						case 0:
							i = d, a = 1;
							break;
						case 1:
							t[o++] = i << 2 | (48 & d) >> 4, i = d, a = 2;
							break;
						case 2:
							t[o++] = (15 & i) << 4 | (60 & d) >> 2, i = d, a = 3;
							break;
						case 3:
							t[o++] = (3 & i) << 6 | d, a = 0
					}
				}
				if (1 === a) throw Error("invalid encoding");
				return o - r
			}, i.test = function(e) {
				return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)
			}
		},
		"./node_modules/@protobufjs/eventemitter/index.js": function(e, t, o) {
			"use strict";

			function i() {
				this._listeners = {}
			}
			e.exports = i, i.prototype.on = function(e, t, o) {
				return (this._listeners[e] || (this._listeners[e] = [])).push({
					fn: t,
					ctx: o || this
				}), this
			}, i.prototype.off = function(e, t) {
				if (void 0 === e) this._listeners = {};
				else if (void 0 === t) this._listeners[e] = [];
				else
					for (var o = this._listeners[e], i = 0; i < o.length;) o[i].fn === t ? o.splice(i, 1) : ++i;
				return this
			}, i.prototype.emit = function(e) {
				var t = this._listeners[e];
				if (t) {
					for (var o = [], i = 1; i < arguments.length;) o.push(arguments[i++]);
					for (i = 0; i < t.length;) t[i].fn.apply(t[i++].ctx, o)
				}
				return this
			}
		},
		"./node_modules/@protobufjs/float/index.js": function(e, t, o) {
			"use strict";

			function i(e) {
				return "undefined" != typeof Float32Array ? function() {
					var t = new Float32Array([-0]),
						o = new Uint8Array(t.buffer),
						i = 128 === o[3];

					function r(e, i, r) {
						t[0] = e, i[r] = o[0], i[r + 1] = o[1], i[r + 2] = o[2], i[r + 3] = o[3]
					}

					function n(e, i, r) {
						t[0] = e, i[r] = o[3], i[r + 1] = o[2], i[r + 2] = o[1], i[r + 3] = o[0]
					}

					function a(e, i) {
						return o[0] = e[i], o[1] = e[i + 1], o[2] = e[i + 2], o[3] = e[i + 3], t[0]
					}

					function s(e, i) {
						return o[3] = e[i], o[2] = e[i + 1], o[1] = e[i + 2], o[0] = e[i + 3], t[0]
					}
					e.writeFloatLE = i ? r : n, e.writeFloatBE = i ? n : r, e.readFloatLE = i ? a : s, e.readFloatBE = i ? s : a
				}() : function() {
					function t(e, t, o, i) {
						var r = t < 0 ? 1 : 0;
						if (r && (t = -t), 0 === t) e(1 / t > 0 ? 0 : 2147483648, o, i);
						else if (isNaN(t)) e(2143289344, o, i);
						else if (t > 34028234663852886e22) e((r << 31 | 2139095040) >>> 0, o, i);
						else if (t < 11754943508222875e-54) e((r << 31 | Math.round(t / 1401298464324817e-60)) >>> 0, o, i);
						else {
							var n = Math.floor(Math.log(t) / Math.LN2);
							e((r << 31 | n + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -n) * 8388608)) >>> 0, o, i)
						}
					}

					function o(e, t, o) {
						var i = e(t, o),
							r = 2 * (i >> 31) + 1,
							n = i >>> 23 & 255,
							a = 8388607 & i;
						return 255 === n ? a ? NaN : r * (1 / 0) : 0 === n ? 1401298464324817e-60 * r * a : r * Math.pow(2, n - 150) * (a + 8388608)
					}
					e.writeFloatLE = t.bind(null, r), e.writeFloatBE = t.bind(null, n), e.readFloatLE = o.bind(null, a), e.readFloatBE = o.bind(null, s)
				}(), "undefined" != typeof Float64Array ? function() {
					var t = new Float64Array([-0]),
						o = new Uint8Array(t.buffer),
						i = 128 === o[7];

					function r(e, i, r) {
						t[0] = e, i[r] = o[0], i[r + 1] = o[1], i[r + 2] = o[2], i[r + 3] = o[3], i[r + 4] = o[4], i[r + 5] = o[5], i[r + 6] = o[6], i[r + 7] = o[7]
					}

					function n(e, i, r) {
						t[0] = e, i[r] = o[7], i[r + 1] = o[6], i[r + 2] = o[5], i[r + 3] = o[4], i[r + 4] = o[3], i[r + 5] = o[2], i[r + 6] = o[1], i[r + 7] = o[0]
					}

					function a(e, i) {
						return o[0] = e[i], o[1] = e[i + 1], o[2] = e[i + 2], o[3] = e[i + 3], o[4] = e[i + 4], o[5] = e[i + 5], o[6] = e[i + 6], o[7] = e[i + 7], t[0]
					}

					function s(e, i) {
						return o[7] = e[i], o[6] = e[i + 1], o[5] = e[i + 2], o[4] = e[i + 3], o[3] = e[i + 4], o[2] = e[i + 5], o[1] = e[i + 6], o[0] = e[i + 7], t[0]
					}
					e.writeDoubleLE = i ? r : n, e.writeDoubleBE = i ? n : r, e.readDoubleLE = i ? a : s, e.readDoubleBE = i ? s : a
				}() : function() {
					function t(e, t, o, i, r, n) {
						var a = i < 0 ? 1 : 0;
						if (a && (i = -i), 0 === i) e(0, r, n + t), e(1 / i > 0 ? 0 : 2147483648, r, n + o);
						else if (isNaN(i)) e(0, r, n + t), e(2146959360, r, n + o);
						else if (i > 17976931348623157e292) e(0, r, n + t), e((a << 31 | 2146435072) >>> 0, r, n + o);
						else {
							var s;
							if (i < 22250738585072014e-324) e((s = i / 5e-324) >>> 0, r, n + t), e((a << 31 | s / 4294967296) >>> 0, r, n + o);
							else {
								var d = Math.floor(Math.log(i) / Math.LN2);
								1024 === d && (d = 1023), e(4503599627370496 * (s = i * Math.pow(2, -d)) >>> 0, r, n + t), e((a << 31 | d + 1023 << 20 | 1048576 * s & 1048575) >>> 0, r, n + o)
							}
						}
					}

					function o(e, t, o, i, r) {
						var n = e(i, r + t),
							a = e(i, r + o),
							s = 2 * (a >> 31) + 1,
							d = a >>> 20 & 2047,
							l = 4294967296 * (1048575 & a) + n;
						return 2047 === d ? l ? NaN : s * (1 / 0) : 0 === d ? 5e-324 * s * l : s * Math.pow(2, d - 1075) * (l + 4503599627370496)
					}
					e.writeDoubleLE = t.bind(null, r, 0, 4), e.writeDoubleBE = t.bind(null, n, 4, 0), e.readDoubleLE = o.bind(null, a, 0, 4), e.readDoubleBE = o.bind(null, s, 4, 0)
				}(), e
			}

			function r(e, t, o) {
				t[o] = 255 & e, t[o + 1] = e >>> 8 & 255, t[o + 2] = e >>> 16 & 255, t[o + 3] = e >>> 24
			}

			function n(e, t, o) {
				t[o] = e >>> 24, t[o + 1] = e >>> 16 & 255, t[o + 2] = e >>> 8 & 255, t[o + 3] = 255 & e
			}

			function a(e, t) {
				return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0
			}

			function s(e, t) {
				return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0
			}
			e.exports = i(i)
		},
		"./node_modules/@protobufjs/inquire/index.js": function(module, exports, __webpack_require__) {
			"use strict";

			function inquire(moduleName) {
				try {
					var mod = eval("quire".replace(/^/, "re"))(moduleName);
					if (mod && (mod.length || Object.keys(mod).length)) return mod
				} catch (e) {}
				return null
			}
			module.exports = inquire
		},
		"./node_modules/@protobufjs/pool/index.js": function(e, t, o) {
			"use strict";
			e.exports = function(e, t, o) {
				var i = o || 8192,
					r = i >>> 1,
					n = null,
					a = i;
				return function(o) {
					if (o < 1 || o > r) return e(o);
					a + o > i && (n = e(i), a = 0);
					var s = t.call(n, a, a += o);
					return 7 & a && (a = 1 + (7 | a)), s
				}
			}
		},
		"./node_modules/@protobufjs/utf8/index.js": function(e, t, o) {
			"use strict";
			var i = t;
			i.length = function(e) {
				for (var t = 0, o = 0, i = 0; i < e.length; ++i)(o = e.charCodeAt(i)) < 128 ? t += 1 : o < 2048 ? t += 2 : 55296 == (64512 & o) && 56320 == (64512 & e.charCodeAt(i + 1)) ? (++i, t += 4) : t += 3;
				return t
			}, i.read = function(e, t, o) {
				if (o - t < 1) return "";
				for (var i, r = null, n = [], a = 0; t < o;)(i = e[t++]) < 128 ? n[a++] = i : i > 191 && i < 224 ? n[a++] = (31 & i) << 6 | 63 & e[t++] : i > 239 && i < 365 ? (i = ((7 & i) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, n[a++] = 55296 + (i >> 10), n[a++] = 56320 + (1023 & i)) : n[a++] = (15 & i) << 12 | (63 & e[t++]) << 6 | 63 & e[t++], a > 8191 && ((r || (r = [])).push(String.fromCharCode.apply(String, n)), a = 0);
				return r ? (a && r.push(String.fromCharCode.apply(String, n.slice(0, a))), r.join("")) : String.fromCharCode.apply(String, n.slice(0, a))
			}, i.write = function(e, t, o) {
				for (var i, r, n = o, a = 0; a < e.length; ++a)(i = e.charCodeAt(a)) < 128 ? t[o++] = i : i < 2048 ? (t[o++] = i >> 6 | 192, t[o++] = 63 & i | 128) : 55296 == (64512 & i) && 56320 == (64512 & (r = e.charCodeAt(a + 1))) ? (i = 65536 + ((1023 & i) << 10) + (1023 & r), ++a, t[o++] = i >> 18 | 240, t[o++] = i >> 12 & 63 | 128, t[o++] = i >> 6 & 63 | 128, t[o++] = 63 & i | 128) : (t[o++] = i >> 12 | 224, t[o++] = i >> 6 & 63 | 128, t[o++] = 63 & i | 128);
				return o - n
			}
		},
		"./node_modules/cron-parser/lib/date.js": function(e, t, o) {
			"use strict";
			var i = o("./node_modules/luxon/build/cjs-browser/luxon.js");

			function r(e, t) {
				var o = {
					zone: t
				};
				if (e ? e instanceof r ? this._date = e._date : e instanceof Date ? this._date = i.DateTime.fromJSDate(e, o) : "number" == typeof e ? this._date = i.DateTime.fromMillis(e, o) : "string" == typeof e && (this._date = i.DateTime.fromISO(e, o), this._date.isValid || (this._date = i.DateTime.fromRFC2822(e, o)), this._date.isValid || (this._date = i.DateTime.fromSQL(e, o)), this._date.isValid || (this._date = i.DateTime.fromFormat(e, "EEE, d MMM yyyy HH:mm:ss", o))) : this._date = i.DateTime.local(), !this._date || !this._date.isValid) throw new Error("CronDate: unhandled timestamp: " + JSON.stringify(e));
				t && t !== this._date.zoneName && (this._date = this._date.setZone(t))
			}
			r.prototype.addYear = function() {
				this._date = this._date.plus({
					years: 1
				})
			}, r.prototype.addMonth = function() {
				this._date = this._date.plus({
					months: 1
				}).startOf("month")
			}, r.prototype.addDay = function() {
				this._date = this._date.plus({
					days: 1
				}).startOf("day")
			}, r.prototype.addHour = function() {
				var e = this._date;
				this._date = this._date.plus({
					hours: 1
				}).startOf("hour"), this._date <= e && (this._date = this._date.plus({
					hours: 1
				}))
			}, r.prototype.addMinute = function() {
				var e = this._date;
				this._date = this._date.plus({
					minutes: 1
				}).startOf("minute"), this._date < e && (this._date = this._date.plus({
					hours: 1
				}))
			}, r.prototype.addSecond = function() {
				var e = this._date;
				this._date = this._date.plus({
					seconds: 1
				}).startOf("second"), this._date < e && (this._date = this._date.plus({
					hours: 1
				}))
			}, r.prototype.subtractYear = function() {
				this._date = this._date.minus({
					years: 1
				})
			}, r.prototype.subtractMonth = function() {
				this._date = this._date.minus({
					months: 1
				}).endOf("month").startOf("second")
			}, r.prototype.subtractDay = function() {
				this._date = this._date.minus({
					days: 1
				}).endOf("day").startOf("second")
			}, r.prototype.subtractHour = function() {
				var e = this._date;
				this._date = this._date.minus({
					hours: 1
				}).endOf("hour").startOf("second"), this._date >= e && (this._date = this._date.minus({
					hours: 1
				}))
			}, r.prototype.subtractMinute = function() {
				var e = this._date;
				this._date = this._date.minus({
					minutes: 1
				}).endOf("minute").startOf("second"), this._date > e && (this._date = this._date.minus({
					hours: 1
				}))
			}, r.prototype.subtractSecond = function() {
				var e = this._date;
				this._date = this._date.minus({
					seconds: 1
				}).startOf("second"), this._date > e && (this._date = this._date.minus({
					hours: 1
				}))
			}, r.prototype.getDate = function() {
				return this._date.day
			}, r.prototype.getFullYear = function() {
				return this._date.year
			}, r.prototype.getDay = function() {
				var e = this._date.weekday;
				return 7 == e ? 0 : e
			}, r.prototype.getMonth = function() {
				return this._date.month - 1
			}, r.prototype.getHours = function() {
				return this._date.hour
			}, r.prototype.getMinutes = function() {
				return this._date.minute
			}, r.prototype.getSeconds = function() {
				return this._date.second
			}, r.prototype.getMilliseconds = function() {
				return this._date.millisecond
			}, r.prototype.getTime = function() {
				return this._date.valueOf()
			}, r.prototype.getUTCDate = function() {
				return this._getUTC().day
			}, r.prototype.getUTCFullYear = function() {
				return this._getUTC().year
			}, r.prototype.getUTCDay = function() {
				var e = this._getUTC().weekday;
				return 7 == e ? 0 : e
			}, r.prototype.getUTCMonth = function() {
				return this._getUTC().month - 1
			}, r.prototype.getUTCHours = function() {
				return this._getUTC().hour
			}, r.prototype.getUTCMinutes = function() {
				return this._getUTC().minute
			}, r.prototype.getUTCSeconds = function() {
				return this._getUTC().second
			}, r.prototype.toISOString = function() {
				return this._date.toUTC().toISO()
			}, r.prototype.toJSON = function() {
				return this._date.toJSON()
			}, r.prototype.setDate = function(e) {
				this._date = this._date.set({
					day: e
				})
			}, r.prototype.setFullYear = function(e) {
				this._date = this._date.set({
					year: e
				})
			}, r.prototype.setDay = function(e) {
				this._date = this._date.set({
					weekday: e
				})
			}, r.prototype.setMonth = function(e) {
				this._date = this._date.set({
					month: e + 1
				})
			}, r.prototype.setHours = function(e) {
				this._date = this._date.set({
					hour: e
				})
			}, r.prototype.setMinutes = function(e) {
				this._date = this._date.set({
					minute: e
				})
			}, r.prototype.setSeconds = function(e) {
				this._date = this._date.set({
					second: e
				})
			}, r.prototype.setMilliseconds = function(e) {
				this._date = this._date.set({
					millisecond: e
				})
			}, r.prototype._getUTC = function() {
				return this._date.toUTC()
			}, r.prototype.toString = function() {
				return this.toDate().toString()
			}, r.prototype.toDate = function() {
				return this._date.toJSDate()
			}, r.prototype.isLastDayOfMonth = function() {
				var e = this._date.plus({
					days: 1
				}).startOf("day");
				return this._date.month !== e.month
			}, r.prototype.isLastWeekdayOfMonth = function() {
				var e = this._date.plus({
					days: 7
				}).startOf("day");
				return this._date.month !== e.month
			}, e.exports = r
		},
		"./node_modules/cron-parser/lib/expression.js": function(e, t, o) {
			"use strict";
			var i = o("./node_modules/cron-parser/lib/date.js"),
				r = o("./node_modules/cron-parser/lib/field_stringify.js");

			function n(e, t) {
				this._options = t, this._utc = t.utc || !1, this._tz = this._utc ? "UTC" : t.tz, this._currentDate = new i(t.currentDate, this._tz), this._startDate = t.startDate ? new i(t.startDate, this._tz) : null, this._endDate = t.endDate ? new i(t.endDate, this._tz) : null, this._isIterator = t.iterator || !1, this._hasIterated = !1, this._nthDayOfWeek = t.nthDayOfWeek || 0, this.fields = n._freezeFields(e)
			}
			n.map = ["second", "minute", "hour", "dayOfMonth", "month", "dayOfWeek"], n.predefined = {
				"@yearly": "0 0 1 1 *",
				"@monthly": "0 0 1 * *",
				"@weekly": "0 0 * * 0",
				"@daily": "0 0 * * *",
				"@hourly": "0 * * * *"
			}, n.constraints = [{
				min: 0,
				max: 59,
				chars: []
			}, {
				min: 0,
				max: 59,
				chars: []
			}, {
				min: 0,
				max: 23,
				chars: []
			}, {
				min: 1,
				max: 31,
				chars: ["L"]
			}, {
				min: 1,
				max: 12,
				chars: []
			}, {
				min: 0,
				max: 7,
				chars: ["L"]
			}], n.daysInMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], n.aliases = {
				month: {
					jan: 1,
					feb: 2,
					mar: 3,
					apr: 4,
					may: 5,
					jun: 6,
					jul: 7,
					aug: 8,
					sep: 9,
					oct: 10,
					nov: 11,
					dec: 12
				},
				dayOfWeek: {
					sun: 0,
					mon: 1,
					tue: 2,
					wed: 3,
					thu: 4,
					fri: 5,
					sat: 6
				}
			}, n.parseDefaults = ["0", "*", "*", "*", "*", "*"], n.standardValidCharacters = /^[,*\d/-]+$/, n.dayOfWeekValidCharacters = /^[?,*\dL#/-]+$/, n.dayOfMonthValidCharacters = /^[?,*\dL/-]+$/, n.validCharacters = {
				second: n.standardValidCharacters,
				minute: n.standardValidCharacters,
				hour: n.standardValidCharacters,
				dayOfMonth: n.dayOfMonthValidCharacters,
				month: n.standardValidCharacters,
				dayOfWeek: n.dayOfWeekValidCharacters
			}, n._isValidConstraintChar = function(e, t) {
				return "string" == typeof t && e.chars.some((function(e) {
					return t.indexOf(e) > -1
				}))
			}, n._parseField = function(e, t, o) {
				switch (e) {
					case "month":
					case "dayOfWeek":
						var i = n.aliases[e];
						t = t.replace(/[a-z]{3}/gi, (function(e) {
							if (e = e.toLowerCase(), void 0 !== i[e]) return i[e];
							throw new Error('Validation error, cannot resolve alias "' + e + '"')
						}))
				}
				if (!n.validCharacters[e].test(t)) throw new Error("Invalid characters, got value: " + t);

				function r(e) {
					var t = e.split("/");
					return t.length > 1 ? (t[0] == +t[0] && (t = [t[0] + "-" + o.max, t[1]]), a(t[0], t[t.length - 1])) : a(e, 1)
				}

				function a(e, t) {
					var i = [],
						r = e.split("-");
					if (r.length > 1) {
						if (r.length < 2) return +e;
						if (!r[0].length) {
							if (!r[1].length) throw new Error("Invalid range: " + e);
							return +e
						}
						var n = +r[0],
							a = +r[1];
						if (Number.isNaN(n) || Number.isNaN(a) || n < o.min || a > o.max) throw new Error("Constraint error, got range " + n + "-" + a + " expected range " + o.min + "-" + o.max);
						if (n >= a) throw new Error("Invalid range: " + e);
						var s = +t;
						if (Number.isNaN(s) || s <= 0) throw new Error("Constraint error, cannot repeat at every " + s + " time.");
						for (var d = n, l = a; d <= l; d++) s > 0 && s % t == 0 ? (s = 1, i.push(d)) : s++;
						return i
					}
					return Number.isNaN(+e) ? e : +e
				}
				return -1 !== t.indexOf("*") ? t = t.replace(/\*/g, o.min + "-" + o.max) : -1 !== t.indexOf("?") && (t = t.replace(/\?/g, o.min + "-" + o.max)),
					function(t) {
						var i = [];

						function a(t) {
							if (t instanceof Array)
								for (var r = 0, a = t.length; r < a; r++) {
									var s = t[r];
									if (n._isValidConstraintChar(o, s)) i.push(s);
									else {
										if ("number" != typeof s || Number.isNaN(s) || s < o.min || s > o.max) throw new Error("Constraint error, got value " + s + " expected range " + o.min + "-" + o.max);
										i.push(s)
									}
								} else {
									if (n._isValidConstraintChar(o, t)) return void i.push(t);
									var d = +t;
									if (Number.isNaN(d) || d < o.min || d > o.max) throw new Error("Constraint error, got value " + t + " expected range " + o.min + "-" + o.max);
									"dayOfWeek" === e && (d %= 7), i.push(d)
								}
						}
						var s = t.split(",");
						if (!s.every((function(e) {
								return e.length > 0
							}))) throw new Error("Invalid list value format");
						if (s.length > 1)
							for (var d = 0, l = s.length; d < l; d++) a(r(s[d]));
						else a(r(t));
						return i.sort(n._sortCompareFn), i
					}(t)
			}, n._sortCompareFn = function(e, t) {
				var o = "number" == typeof e,
					i = "number" == typeof t;
				return o && i ? e - t : !o && i ? 1 : o && !i ? -1 : e.localeCompare(t)
			}, n._handleMaxDaysInMonth = function(e) {
				if (1 === e.month.length) {
					var t = n.daysInMonth[e.month[0] - 1];
					if (e.dayOfMonth[0] > t) throw new Error("Invalid explicit day of month definition");
					return e.dayOfMonth.filter((function(e) {
						return "L" === e || e <= t
					})).sort(n._sortCompareFn)
				}
			}, n._freezeFields = function(e) {
				for (var t = 0, o = n.map.length; t < o; ++t) {
					var i = n.map[t],
						r = e[i];
					e[i] = Object.freeze(r)
				}
				return Object.freeze(e)
			}, n.prototype._applyTimezoneShift = function(e, t, o) {
				if ("Month" === o || "Day" === o) {
					var i = e.getTime();
					e[t + o](), i === e.getTime() && (0 === e.getMinutes() && 0 === e.getSeconds() ? e.addHour() : 59 === e.getMinutes() && 59 === e.getSeconds() && e.subtractHour())
				} else {
					var r = e.getHours();
					e[t + o]();
					var n = e.getHours(),
						a = n - r;
					2 === a ? 24 !== this.fields.hour.length && (this._dstStart = n) : 0 === a && 0 === e.getMinutes() && 0 === e.getSeconds() && 24 !== this.fields.hour.length && (this._dstEnd = n)
				}
			}, n.prototype._findSchedule = function(e) {
				function t(e, t) {
					for (var o = 0, i = t.length; o < i; o++)
						if (t[o] >= e) return t[o] === e;
					return t[0] === e
				}

				function o(e, t) {
					if (t < 6) {
						if (e.getDate() < 8 && 1 === t) return !0;
						var o = e.getDate() % 7 ? 1 : 0,
							i = e.getDate() - e.getDate() % 7;
						return Math.floor(i / 7) + o === t
					}
					return !1
				}

				function r(e) {
					return e.length > 0 && e.some((function(e) {
						return "string" == typeof e && e.indexOf("L") >= 0
					}))
				}
				var a = (e = e || !1) ? "subtract" : "add",
					s = new i(this._currentDate, this._tz),
					d = this._startDate,
					l = this._endDate,
					u = s.getTime(),
					c = 0;
				for (; c < 1e4;) {
					if (c++, e) {
						if (d && s.getTime() - d.getTime() < 0) throw new Error("Out of the timespan range")
					} else if (l && l.getTime() - s.getTime() < 0) throw new Error("Out of the timespan range");
					var p = t(s.getDate(), this.fields.dayOfMonth);
					r(this.fields.dayOfMonth) && (p = p || s.isLastDayOfMonth());
					var v = t(s.getDay(), this.fields.dayOfWeek);
					r(this.fields.dayOfWeek) && (v = v || this.fields.dayOfWeek.some((function(e) {
						if (!r([e])) return !1;
						var t = Number.parseInt(e[0]) % 7;
						if (Number.isNaN(t)) throw new Error("Invalid last weekday of the month expression: " + e);
						return s.getDay() === t && s.isLastWeekdayOfMonth()
					})));
					var m = this.fields.dayOfMonth.length >= n.daysInMonth[s.getMonth()],
						f = this.fields.dayOfWeek.length === n.constraints[5].max - n.constraints[5].min + 1,
						g = s.getHours();
					if (p || v && !f)
						if (m || !f || p)
							if (!m || f || v)
								if (this._nthDayOfWeek > 0 && !o(s, this._nthDayOfWeek)) this._applyTimezoneShift(s, a, "Day");
								else if (t(s.getMonth() + 1, this.fields.month)) {
						if (t(g, this.fields.hour)) {
							if (this._dstEnd === g && !e) {
								this._dstEnd = null, this._applyTimezoneShift(s, "add", "Hour");
								continue
							}
						} else {
							if (this._dstStart !== g) {
								this._dstStart = null, this._applyTimezoneShift(s, a, "Hour");
								continue
							}
							if (!t(g - 1, this.fields.hour)) {
								s[a + "Hour"]();
								continue
							}
						}
						if (t(s.getMinutes(), this.fields.minute))
							if (t(s.getSeconds(), this.fields.second)) {
								if (u !== s.getTime()) break;
								"add" === a || 0 === s.getMilliseconds() ? this._applyTimezoneShift(s, a, "Second") : s.setMilliseconds(0)
							} else this._applyTimezoneShift(s, a, "Second");
						else this._applyTimezoneShift(s, a, "Minute")
					} else this._applyTimezoneShift(s, a, "Month");
					else this._applyTimezoneShift(s, a, "Day");
					else this._applyTimezoneShift(s, a, "Day");
					else this._applyTimezoneShift(s, a, "Day")
				}
				if (c >= 1e4) throw new Error("Invalid expression, loop limit exceeded");
				return this._currentDate = new i(s, this._tz), this._hasIterated = !0, s
			}, n.prototype.next = function() {
				var e = this._findSchedule();
				return this._isIterator ? {
					value: e,
					done: !this.hasNext()
				} : e
			}, n.prototype.prev = function() {
				var e = this._findSchedule(!0);
				return this._isIterator ? {
					value: e,
					done: !this.hasPrev()
				} : e
			}, n.prototype.hasNext = function() {
				var e = this._currentDate,
					t = this._hasIterated;
				try {
					return this._findSchedule(), !0
				} catch (o) {
					return !1
				} finally {
					this._currentDate = e, this._hasIterated = t
				}
			}, n.prototype.hasPrev = function() {
				var e = this._currentDate,
					t = this._hasIterated;
				try {
					return this._findSchedule(!0), !0
				} catch (o) {
					return !1
				} finally {
					this._currentDate = e, this._hasIterated = t
				}
			}, n.prototype.iterate = function(e, t) {
				var o = [];
				if (e >= 0)
					for (var i = 0, r = e; i < r; i++) try {
						var n = this.next();
						o.push(n), t && t(n, i)
					} catch (a) {
						break
					} else
						for (i = 0, r = e; i > r; i--) try {
							n = this.prev();
							o.push(n), t && t(n, i)
						} catch (a) {
							break
						}
				return o
			}, n.prototype.reset = function(e) {
				this._currentDate = new i(e || this._options.currentDate)
			}, n.prototype.stringify = function(e) {
				for (var t = [], o = e ? 0 : 1, i = n.map.length; o < i; ++o) {
					var a = n.map[o],
						s = this.fields[a],
						d = n.constraints[o];
					t.push(r(s, d.min, d.max))
				}
				return t.join(" ")
			}, n.parse = function(e, t) {
				var o = this;

				function r(e, t) {
					t || (t = {}), void 0 === t.currentDate && (t.currentDate = new i(void 0, o._tz)), n.predefined[e] && (e = n.predefined[e]);
					var r = [],
						a = (e + "").trim().split(/\s+/);
					if (a.length > 6) throw new Error("Invalid cron expression");
					for (var s = n.map.length - a.length, d = 0, l = n.map.length; d < l; ++d) {
						var u = n.map[d],
							c = a[a.length > l ? d : d - s];
						if (d < s || !c) r.push(n._parseField(u, n.parseDefaults[d], n.constraints[d]));
						else {
							var p = "dayOfWeek" === u ? f(c) : c;
							r.push(n._parseField(u, p, n.constraints[d]))
						}
					}
					var v = {};
					for (d = 0, l = n.map.length; d < l; d++) {
						v[n.map[d]] = r[d]
					}
					var m = n._handleMaxDaysInMonth(v);
					return v.dayOfMonth = m || v.dayOfMonth, new n(v, t);

					function f(e) {
						var o = e.split("#");
						if (o.length > 1) {
							var i = +o[o.length - 1];
							if (/,/.test(e)) throw new Error("Constraint error, invalid dayOfWeek `#` and `,` special characters are incompatible");
							if (/\//.test(e)) throw new Error("Constraint error, invalid dayOfWeek `#` and `/` special characters are incompatible");
							if (/-/.test(e)) throw new Error("Constraint error, invalid dayOfWeek `#` and `-` special characters are incompatible");
							if (o.length > 2 || Number.isNaN(i) || i < 1 || i > 5) throw new Error("Constraint error, invalid dayOfWeek occurrence number (#)");
							return t.nthDayOfWeek = i, o[0]
						}
						return e
					}
				}
				return "function" == typeof t && (t = {}), r(e, t)
			}, n.fieldsToExpression = function(e, t) {
				function o(e, t, o) {
					if (!t) throw new Error("Validation error, Field " + e + " is missing");
					if (0 === t.length) throw new Error("Validation error, Field " + e + " contains no values");
					for (var i = 0, r = t.length; i < r; i++) {
						var a = t[i];
						if (!n._isValidConstraintChar(o, a) && ("number" != typeof a || Number.isNaN(a) || a < o.min || a > o.max)) throw new Error("Constraint error, got value " + a + " expected range " + o.min + "-" + o.max)
					}
				}
				for (var i = {}, r = 0, a = n.map.length; r < a; ++r) {
					var s = n.map[r],
						d = e[s];
					o(s, d, n.constraints[r]);
					for (var l = [], u = -1; ++u < d.length;) l[u] = d[u];
					if ((d = l.sort(n._sortCompareFn).filter((function(e, t, o) {
							return !t || e !== o[t - 1]
						}))).length !== l.length) throw new Error("Validation error, Field " + s + " contains duplicate values");
					i[s] = d
				}
				var c = n._handleMaxDaysInMonth(i);
				return i.dayOfMonth = c || i.dayOfMonth, new n(i, t || {})
			}, e.exports = n
		},
		"./node_modules/cron-parser/lib/field_compactor.js": function(e, t, o) {
			"use strict";

			function i(e) {
				return {
					start: e,
					count: 1
				}
			}

			function r(e, t) {
				e.end = t, e.step = t - e.start, e.count = 2
			}

			function n(e, t, o) {
				t && (2 === t.count ? (e.push(i(t.start)), e.push(i(t.end))) : e.push(t)), o && e.push(o)
			}
			e.exports = function(e) {
				for (var t = [], o = void 0, a = 0; a < e.length; a++) {
					var s = e[a];
					"number" != typeof s ? (n(t, o, i(s)), o = void 0) : o ? 1 === o.count ? r(o, s) : o.step === s - o.end ? (o.count++, o.end = s) : 2 === o.count ? (t.push(i(o.start)), r(o = i(o.end), s)) : (n(t, o), o = i(s)) : o = i(s)
				}
				return n(t, o), t
			}
		},
		"./node_modules/cron-parser/lib/field_stringify.js": function(e, t, o) {
			"use strict";
			var i = o("./node_modules/cron-parser/lib/field_compactor.js");
			e.exports = function(e, t, o) {
				var r = i(e);
				if (1 === r.length) {
					var n = r[0];
					if (1 === (l = n.step) && n.start === t && n.end === o) return "*";
					if (1 !== l && n.start === t && n.end === o - l + 1) return "*/" + l
				}
				for (var a = [], s = 0, d = r.length; s < d; ++s) {
					var l, u = r[s];
					if (1 === u.count) a.push(u.start);
					else 1 === (l = u.step) ? a.push(u.start + "-" + u.end) : u.end === o - l + 1 ? a.push(u.start + "/" + l) : a.push(u.start + "-" + u.end + "/" + l)
				}
				return a.join(",")
			}
		},
		"./node_modules/cron-parser/lib/parser.js": function(e, t, o) {
			"use strict";
			var i = o("./node_modules/cron-parser/lib/expression.js");

			function r() {}
			r._parseEntry = function(e) {
				var t = e.split(" ");
				if (6 === t.length) return {
					interval: i.parse(e)
				};
				if (t.length > 6) return {
					interval: i.parse(t.slice(0, 6).join(" ")),
					command: t.slice(6, t.length)
				};
				throw new Error("Invalid entry: " + e)
			}, r.parseExpression = function(e, t) {
				return i.parse(e, t)
			}, r.fieldsToExpression = function(e, t) {
				return i.fieldsToExpression(e, t)
			}, r.parseString = function(e) {
				for (var t = e.split("\n"), o = {
						variables: {},
						expressions: [],
						errors: {}
					}, i = 0, n = t.length; i < n; i++) {
					var a = null,
						s = t[i].trim();
					if (s.length > 0) {
						if (s.match(/^#/)) continue;
						if (a = s.match(/^(.*)=(.*)$/)) o.variables[a[1]] = a[2];
						else {
							var d = null;
							try {
								d = r._parseEntry("0 " + s), o.expressions.push(d.interval)
							} catch (l) {
								o.errors[s] = l
							}
						}
					}
				}
				return o
			}, r.parseFile = function(e, t) {
				o("ignored /drone/src/node_modules/cron-parser/lib fs").readFile(e, (function(e, o) {
					if (!e) return t(null, r.parseString(o.toString()));
					t(e)
				}))
			}, e.exports = r
		},
		"./node_modules/grpc-web/index.js": function(e, t, o) {
			(function(t) {
				var o;

				function i(e) {
					var t = 0;
					return function() {
						return t < e.length ? {
							done: !1,
							value: e[t++]
						} : {
							done: !0
						}
					}
				}
				var r = "function" == typeof Object.defineProperties ? Object.defineProperty : function(e, t, o) {
					e != Array.prototype && e != Object.prototype && (e[t] = o.value)
				};
				var n = function(e) {
					e = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof t && t, e];
					for (var o = 0; o < e.length; ++o) {
						var i = e[o];
						if (i && i.Math == Math) return i
					}
					throw Error("Cannot find global object")
				}(this);

				function a() {
					a = function() {}, n.Symbol || (n.Symbol = l)
				}

				function s(e, t) {
					this.a = e, r(this, "description", {
						configurable: !0,
						writable: !0,
						value: t
					})
				}
				s.prototype.toString = function() {
					return this.a
				};
				var d, l = (d = 0, function e(t) {
					if (this instanceof e) throw new TypeError("Symbol is not a constructor");
					return new s("jscomp_symbol_" + (t || "") + "_" + d++, t)
				});

				function u() {
					a();
					var e = n.Symbol.iterator;
					e || (e = n.Symbol.iterator = n.Symbol("Symbol.iterator")), "function" != typeof Array.prototype[e] && r(Array.prototype, e, {
						configurable: !0,
						writable: !0,
						value: function() {
							return function(e) {
								return u(), (e = {
									next: e
								})[n.Symbol.iterator] = function() {
									return this
								}, e
							}(i(this))
						}
					}), u = function() {}
				}

				function c(e) {
					var t = "undefined" != typeof Symbol && Symbol.iterator && e[Symbol.iterator];
					return t ? t.call(e) : {
						next: i(e)
					}
				}
				var p, v = "function" == typeof Object.create ? Object.create : function(e) {
					function t() {}
					return t.prototype = e, new t
				};
				if ("function" == typeof Object.setPrototypeOf) p = Object.setPrototypeOf;
				else {
					var m;
					e: {
						var f = {};
						try {
							f.__proto__ = {
								V: !0
							}, m = f.V;
							break e
						} catch (re) {}
						m = !1
					}
					p = m ? function(e, t) {
						if (e.__proto__ = t, e.__proto__ !== t) throw new TypeError(e + " is not extensible");
						return e
					} : null
				}
				var g = p;

				function h(e, t) {
					if (e.prototype = v(t.prototype), e.prototype.constructor = e, g) g(e, t);
					else
						for (var o in t)
							if ("prototype" != o)
								if (Object.defineProperties) {
									var i = Object.getOwnPropertyDescriptor(t, o);
									i && Object.defineProperty(e, o, i)
								} else e[o] = t[o];
					e.O = t.prototype
				}

				function y(e, t) {
					if (t) {
						var o = n;
						e = e.split(".");
						for (var i = 0; i < e.length - 1; i++) {
							var a = e[i];
							a in o || (o[a] = {}), o = o[a]
						}(t = t(i = o[e = e[e.length - 1]])) != i && null != t && r(o, e, {
							configurable: !0,
							writable: !0,
							value: t
						})
					}
				}
				y("Array.prototype.keys", (function(e) {
					return e || function() {
						return function(e, t) {
							u(), e instanceof String && (e += "");
							var o = 0,
								i = {
									next: function() {
										if (o < e.length) {
											var r = o++;
											return {
												value: t(r, e[r]),
												done: !1
											}
										}
										return i.next = function() {
											return {
												done: !0,
												value: void 0
											}
										}, i.next()
									}
								};
							return i[Symbol.iterator] = function() {
								return i
							}, i
						}(this, (function(e) {
							return e
						}))
					}
				})), y("Array.prototype.find", (function(e) {
					return e || function(e, t) {
						e: {
							var o = this;o instanceof String && (o = String(o));
							for (var i = o.length, r = 0; r < i; r++) {
								var n = o[r];
								if (e.call(t, n, r, o)) {
									e = n;
									break e
								}
							}
							e = void 0
						}
						return e
					}
				})), y("Object.is", (function(e) {
					return e || function(e, t) {
						return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t
					}
				})), y("Array.prototype.includes", (function(e) {
					return e || function(e, t) {
						var o = this;
						o instanceof String && (o = String(o));
						var i = o.length;
						for (0 > (t = t || 0) && (t = Math.max(t + i, 0)); t < i; t++) {
							var r = o[t];
							if (r === e || Object.is(r, e)) return !0
						}
						return !1
					}
				})), y("Promise", (function(e) {
					function t(e) {
						this.b = 0, this.c = void 0, this.a = [];
						var t = this.f();
						try {
							e(t.resolve, t.reject)
						} catch (o) {
							t.reject(o)
						}
					}

					function o() {
						this.a = null
					}

					function i(e) {
						return e instanceof t ? e : new t((function(t) {
							t(e)
						}))
					}
					if (e) return e;
					o.prototype.b = function(e) {
						if (null == this.a) {
							this.a = [];
							var t = this;
							this.c((function() {
								t.g()
							}))
						}
						this.a.push(e)
					};
					var r = n.setTimeout;
					o.prototype.c = function(e) {
						r(e, 0)
					}, o.prototype.g = function() {
						for (; this.a && this.a.length;) {
							var e = this.a;
							this.a = [];
							for (var t = 0; t < e.length; ++t) {
								var o = e[t];
								e[t] = null;
								try {
									o()
								} catch (i) {
									this.f(i)
								}
							}
						}
						this.a = null
					}, o.prototype.f = function(e) {
						this.c((function() {
							throw e
						}))
					}, t.prototype.f = function() {
						function e(e) {
							return function(i) {
								o || (o = !0, e.call(t, i))
							}
						}
						var t = this,
							o = !1;
						return {
							resolve: e(this.s),
							reject: e(this.g)
						}
					}, t.prototype.s = function(e) {
						if (e === this) this.g(new TypeError("A Promise cannot resolve to itself"));
						else if (e instanceof t) this.v(e);
						else {
							e: switch (typeof e) {
								case "object":
									var o = null != e;
									break e;
								case "function":
									o = !0;
									break e;
								default:
									o = !1
							}
							o ? this.m(e) : this.h(e)
						}
					}, t.prototype.m = function(e) {
						var t = void 0;
						try {
							t = e.then
						} catch (o) {
							return void this.g(o)
						}
						"function" == typeof t ? this.w(t, e) : this.h(e)
					}, t.prototype.g = function(e) {
						this.i(2, e)
					}, t.prototype.h = function(e) {
						this.i(1, e)
					}, t.prototype.i = function(e, t) {
						if (0 != this.b) throw Error("Cannot settle(" + e + ", " + t + "): Promise already settled in state" + this.b);
						this.b = e, this.c = t, this.l()
					}, t.prototype.l = function() {
						if (null != this.a) {
							for (var e = 0; e < this.a.length; ++e) a.b(this.a[e]);
							this.a = null
						}
					};
					var a = new o;
					return t.prototype.v = function(e) {
						var t = this.f();
						e.F(t.resolve, t.reject)
					}, t.prototype.w = function(e, t) {
						var o = this.f();
						try {
							e.call(t, o.resolve, o.reject)
						} catch (i) {
							o.reject(i)
						}
					}, t.prototype.then = function(e, o) {
						function i(e, t) {
							return "function" == typeof e ? function(t) {
								try {
									r(e(t))
								} catch (o) {
									n(o)
								}
							} : t
						}
						var r, n, a = new t((function(e, t) {
							r = e, n = t
						}));
						return this.F(i(e, r), i(o, n)), a
					}, t.prototype.catch = function(e) {
						return this.then(void 0, e)
					}, t.prototype.F = function(e, t) {
						function o() {
							switch (i.b) {
								case 1:
									e(i.c);
									break;
								case 2:
									t(i.c);
									break;
								default:
									throw Error("Unexpected state: " + i.b)
							}
						}
						var i = this;
						null == this.a ? a.b(o) : this.a.push(o)
					}, t.resolve = i, t.reject = function(e) {
						return new t((function(t, o) {
							o(e)
						}))
					}, t.race = function(e) {
						return new t((function(t, o) {
							for (var r = c(e), n = r.next(); !n.done; n = r.next()) i(n.value).F(t, o)
						}))
					}, t.all = function(e) {
						var o = c(e),
							r = o.next();
						return r.done ? i([]) : new t((function(e, t) {
							function n(t) {
								return function(o) {
									a[t] = o, 0 == --s && e(a)
								}
							}
							var a = [],
								s = 0;
							do {
								a.push(void 0), s++, i(r.value).F(n(a.length - 1), t), r = o.next()
							} while (!r.done)
						}))
					}, t
				}));
				var b = b || {},
					k = this || self;

				function S(e, t) {
					e = e.split("."), t = t || k;
					for (var o = 0; o < e.length; o++)
						if (null == (t = t[e[o]])) return null;
					return t
				}

				function w() {}

				function O(e) {
					var t = typeof e;
					return "object" == t && null != e || "function" == t
				}
				var T = "closure_uid_" + (1e9 * Math.random() >>> 0),
					N = 0;

				function R(e, t, o) {
					return e.call.apply(e.bind, arguments)
				}

				function $(e, t, o) {
					if (!e) throw Error();
					if (2 < arguments.length) {
						var i = Array.prototype.slice.call(arguments, 2);
						return function() {
							var o = Array.prototype.slice.call(arguments);
							return Array.prototype.unshift.apply(o, i), e.apply(t, o)
						}
					}
					return function() {
						return e.apply(t, arguments)
					}
				}

				function C(e, t, o) {
					return (C = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? R : $).apply(null, arguments)
				}

				function I(e, t) {
					function o() {}
					o.prototype = t.prototype, e.O = t.prototype, e.prototype = new o, e.prototype.constructor = e
				}

				function E(e) {
					this.a = e || {}
				}

				function A(e, t, o, i) {
					this.f = e, this.c = t, this.b = o, this.a = i
				}

				function P(e, t, o, i) {
					o = void 0 === o ? {} : o, this.c = e, this.a = o, this.b = t, this.f = void 0 === i ? null : i
				}

				function x(e, t, o, i, r, n) {
					this.name = e, this.a = t, this.f = o, this.b = i, this.c = r, this.g = n
				}

				function F(e, t, o) {
					o = void 0 === o ? {} : o;
					var i = void 0 === i ? new E : i;
					return new A(t, e, o, i)
				}

				function j(e, t, o) {
					o = void 0 === o ? {} : o, t = Error.call(this, t), this.message = t.message, "stack" in t && (this.stack = t.stack), this.code = e, this.metadata = o
				}

				function M(e) {
					this.a = e
				}

				function D(e) {
					if (Error.captureStackTrace) Error.captureStackTrace(this, D);
					else {
						var t = Error().stack;
						t && (this.stack = t)
					}
					e && (this.message = String(e))
				}

				function J(e, t) {
					for (var o = "", i = (e = e.split("%s")).length - 1, r = 0; r < i; r++) o += e[r] + (r < t.length ? t[r] : "%s");
					D.call(this, o + e[i])
				}

				function _() {
					this.l = null, this.i = [], this.m = 0, this.b = B, this.f = this.a = this.h = 0, this.c = null, this.g = 0
				}
				E.prototype.get = function(e) {
					return this.a[e]
				}, E.prototype.G = function() {
					return Object.keys(this.a)
				}, A.prototype.getRequestMessage = function() {
					return this.f
				}, A.prototype.getMethodDescriptor = function() {
					return this.c
				}, A.prototype.getMetadata = function() {
					return this.b
				}, A.prototype.getCallOptions = function() {
					return this.a
				}, P.prototype.getResponseMessage = function() {
					return this.c
				}, P.prototype.getMetadata = function() {
					return this.a
				}, P.prototype.getMethodDescriptor = function() {
					return this.b
				}, P.prototype.getStatus = function() {
					return this.f
				}, (o = x.prototype).getName = function() {
					return this.name
				}, o.getMethodType = function() {
					return this.a
				}, o.getResponseMessageCtor = function() {
					return this.b
				}, o.getRequestMessageCtor = function() {
					return this.f
				}, o.getResponseDeserializeFn = function() {
					return this.g
				}, o.getRequestSerializeFn = function() {
					return this.c
				}, x.prototype.getRequestSerializeFn = x.prototype.getRequestSerializeFn, x.prototype.getResponseDeserializeFn = x.prototype.getResponseDeserializeFn, x.prototype.getRequestMessageCtor = x.prototype.getRequestMessageCtor, x.prototype.getResponseMessageCtor = x.prototype.getResponseMessageCtor, x.prototype.getMethodType = x.prototype.getMethodType, x.prototype.getName = x.prototype.getName, h(j, Error), j.prototype.name = "RpcError", M.prototype.on = function(e, t) {
					return "data" == e || "error" == e ? this : this.a.on(e, t)
				}, M.prototype.removeListener = function(e, t) {
					return this.a.removeListener(e, t)
				}, M.prototype.cancel = function() {
					this.a.cancel()
				}, I(D, Error), D.prototype.name = "CustomError", I(J, D), J.prototype.name = "AssertionError";
				var B = 0,
					V = 1,
					L = 2,
					U = 3,
					q = 0,
					W = 128;

				function G(e, t, o, i) {
					throw e.b = U, e.l = "The stream is broken @" + e.m + "/" + o + ". Error: " + i + ". With input:\n" + t, Error(e.l)
				}
				var H, z = Array.prototype.indexOf ? function(e, t) {
						return Array.prototype.indexOf.call(e, t, void 0)
					} : function(e, t) {
						if ("string" == typeof e) return "string" != typeof t || 1 != t.length ? -1 : e.indexOf(t, 0);
						for (var o = 0; o < e.length; o++)
							if (o in e && e[o] === t) return o;
						return -1
					},
					Y = String.prototype.trim ? function(e) {
						return e.trim()
					} : function(e) {
						return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(e)[1]
					};

				function Z(e, t) {
					return -1 != e.indexOf(t)
				}

				function X(e, t) {
					return e < t ? -1 : e > t ? 1 : 0
				}
				e: {
					var K = k.navigator;
					if (K) {
						var Q = K.userAgent;
						if (Q) {
							H = Q;
							break e
						}
					}
					H = ""
				}
				var ee = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

				function te(e) {
					var t = 1;
					e = e.split(":");
					for (var o = []; 0 < t && e.length;) o.push(e.shift()), t--;
					return e.length && o.push(e.join(":")), o
				}

				function oe(e) {
					return oe[" "](e), e
				}
				oe[" "] = w;
				var ie, re, ne = Z(H, "Opera"),
					ae = Z(H, "Trident") || Z(H, "MSIE"),
					se = Z(H, "Edge"),
					de = Z(H, "Gecko") && !(Z(H.toLowerCase(), "webkit") && !Z(H, "Edge")) && !(Z(H, "Trident") || Z(H, "MSIE")) && !Z(H, "Edge"),
					le = Z(H.toLowerCase(), "webkit") && !Z(H, "Edge");
				e: {
					var ue = "",
						ce = (re = H, de ? /rv:([^\);]+)(\)|;)/.exec(re) : se ? /Edge\/([\d\.]+)/.exec(re) : ae ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(re) : le ? /WebKit\/(\S+)/.exec(re) : ne ? /(?:Version)[ \/]?(\S+)/.exec(re) : void 0);
					if (ce && (ue = ce ? ce[1] : ""), ae) {
						var pe, ve = k.document;
						if (null != (pe = ve ? ve.documentMode : void 0) && pe > parseFloat(ue)) {
							ie = String(pe);
							break e
						}
					}
					ie = ue
				}
				var me = {};

				function fe() {
					return function(e) {
						var t = me;
						return Object.prototype.hasOwnProperty.call(t, 9) ? t[9] : t[9] = e(9)
					}((function() {
						for (var e = 0, t = Y(String(ie)).split("."), o = Y("9").split("."), i = Math.max(t.length, o.length), r = 0; 0 == e && r < i; r++) {
							var n = t[r] || "",
								a = o[r] || "";
							do {
								if (n = /(\d*)(\D*)(.*)/.exec(n) || ["", "", "", ""], a = /(\d*)(\D*)(.*)/.exec(a) || ["", "", "", ""], 0 == n[0].length && 0 == a[0].length) break;
								e = X(0 == n[1].length ? 0 : parseInt(n[1], 10), 0 == a[1].length ? 0 : parseInt(a[1], 10)) || X(0 == n[2].length, 0 == a[2].length) || X(n[2], a[2]), n = n[3], a = a[3]
							} while (0 == e)
						}
						return 0 <= e
					}))
				}

				function ge() {
					0 != he && (Object.prototype.hasOwnProperty.call(this, T) && this[T] || (this[T] = ++N)), this.K = this.K
				}
				var he = 0;
				ge.prototype.K = !1;
				var ye = Object.freeze || function(e) {
					return e
				};

				function be(e, t) {
					this.type = e, this.a = this.target = t, this.defaultPrevented = !1
				}
				be.prototype.b = function() {
					this.defaultPrevented = !0
				};
				var ke = function() {
					if (!k.addEventListener || !Object.defineProperty) return !1;
					var e = !1,
						t = Object.defineProperty({}, "passive", {
							get: function() {
								e = !0
							}
						});
					try {
						k.addEventListener("test", w, t), k.removeEventListener("test", w, t)
					} catch (o) {}
					return e
				}();

				function Se(e, t) {
					if (be.call(this, e ? e.type : ""), this.relatedTarget = this.a = this.target = null, this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0, this.key = "", this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1, this.pointerId = 0, this.pointerType = "", this.c = null, e) {
						var o = this.type = e.type,
							i = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;
						if (this.target = e.target || e.srcElement, this.a = t, t = e.relatedTarget) {
							if (de) {
								e: {
									try {
										oe(t.nodeName);
										var r = !0;
										break e
									} catch (n) {}
									r = !1
								}
								r || (t = null)
							}
						} else "mouseover" == o ? t = e.fromElement : "mouseout" == o && (t = e.toElement);
						this.relatedTarget = t, i ? (this.clientX = void 0 !== i.clientX ? i.clientX : i.pageX, this.clientY = void 0 !== i.clientY ? i.clientY : i.pageY, this.screenX = i.screenX || 0, this.screenY = i.screenY || 0) : (this.clientX = void 0 !== e.clientX ? e.clientX : e.pageX, this.clientY = void 0 !== e.clientY ? e.clientY : e.pageY, this.screenX = e.screenX || 0, this.screenY = e.screenY || 0), this.button = e.button, this.key = e.key || "", this.ctrlKey = e.ctrlKey, this.altKey = e.altKey, this.shiftKey = e.shiftKey, this.metaKey = e.metaKey, this.pointerId = e.pointerId || 0, this.pointerType = "string" == typeof e.pointerType ? e.pointerType : we[e.pointerType] || "", this.c = e, e.defaultPrevented && Se.O.b.call(this)
					}
				}
				I(Se, be);
				var we = ye({
					2: "touch",
					3: "pen",
					4: "mouse"
				});
				Se.prototype.b = function() {
					Se.O.b.call(this);
					var e = this.c;
					e.preventDefault ? e.preventDefault() : e.returnValue = !1
				};
				var Oe = "closure_listenable_" + (1e6 * Math.random() | 0),
					Te = 0;

				function Ne(e, t, o, i, r) {
					this.listener = e, this.proxy = null, this.src = t, this.type = o, this.capture = !!i, this.H = r, this.key = ++Te, this.A = this.D = !1
				}

				function Re(e) {
					e.A = !0, e.listener = null, e.proxy = null, e.src = null, e.H = null
				}

				function $e(e) {
					this.src = e, this.a = {}, this.b = 0
				}

				function Ce(e, t) {
					var o = t.type;
					if (o in e.a) {
						var i, r = e.a[o],
							n = z(r, t);
						(i = 0 <= n) && Array.prototype.splice.call(r, n, 1), i && (Re(t), 0 == e.a[o].length && (delete e.a[o], e.b--))
					}
				}

				function Ie(e, t, o, i) {
					for (var r = 0; r < e.length; ++r) {
						var n = e[r];
						if (!n.A && n.listener == t && n.capture == !!o && n.H == i) return r
					}
					return -1
				}
				$e.prototype.add = function(e, t, o, i, r) {
					var n = e.toString();
					(e = this.a[n]) || (e = this.a[n] = [], this.b++);
					var a = Ie(e, t, i, r);
					return -1 < a ? (t = e[a], o || (t.D = !1)) : ((t = new Ne(t, this.src, n, !!i, r)).D = o, e.push(t)), t
				}, $e.prototype.remove = function(e, t, o, i) {
					if (!((e = e.toString()) in this.a)) return !1;
					var r = this.a[e];
					return -1 < (t = Ie(r, t, o, i)) && (Re(r[t]), Array.prototype.splice.call(r, t, 1), 0 == r.length && (delete this.a[e], this.b--), !0)
				};
				var Ee = "closure_lm_" + (1e6 * Math.random() | 0),
					Ae = {};

				function Pe(e, t, o, i, r) {
					if (i && i.once) ! function e(t, o, i, r, n) {
						if (Array.isArray(o))
							for (var a = 0; a < o.length; a++) e(t, o[a], i, r, n);
						else i = _e(i), t && t[Oe] ? t.f.add(String(o), i, !0, O(r) ? !!r.capture : !!r, n) : xe(t, o, i, !0, r, n)
					}(e, t, o, i, r);
					else if (Array.isArray(t))
						for (var n = 0; n < t.length; n++) Pe(e, t[n], o, i, r);
					else o = _e(o), e && e[Oe] ? e.f.add(String(t), o, !1, O(i) ? !!i.capture : !!i, r) : xe(e, t, o, !1, i, r)
				}

				function xe(e, t, o, i, r, n) {
					if (!t) throw Error("Invalid event type");
					var a = O(r) ? !!r.capture : !!r,
						s = De(e);
					if (s || (e[Ee] = s = new $e(e)), !(o = s.add(t, o, i, a, n)).proxy) {
						if (i = function() {
								var e = Me;
								return function t(o) {
									return e.call(t.src, t.listener, o)
								}
							}(), o.proxy = i, i.src = e, i.listener = o, e.addEventListener) ke || (r = a), void 0 === r && (r = !1), e.addEventListener(t.toString(), i, r);
						else if (e.attachEvent) e.attachEvent(je(t.toString()), i);
						else {
							if (!e.addListener || !e.removeListener) throw Error("addEventListener and attachEvent are unavailable.");
							e.addListener(i)
						}
						0
					}
				}

				function Fe(e) {
					if ("number" != typeof e && e && !e.A) {
						var t = e.src;
						if (t && t[Oe]) Ce(t.f, e);
						else {
							var o = e.type,
								i = e.proxy;
							t.removeEventListener ? t.removeEventListener(o, i, e.capture) : t.detachEvent ? t.detachEvent(je(o), i) : t.addListener && t.removeListener && t.removeListener(i), 0, (o = De(t)) ? (Ce(o, e), 0 == o.b && (o.src = null, t[Ee] = null)) : Re(e)
						}
					}
				}

				function je(e) {
					return e in Ae ? Ae[e] : Ae[e] = "on" + e
				}

				function Me(e, t) {
					if (e.A) e = !0;
					else {
						t = new Se(t, this);
						var o = e.listener,
							i = e.H || e.src;
						e.D && Fe(e), e = o.call(i, t)
					}
					return e
				}

				function De(e) {
					return (e = e[Ee]) instanceof $e ? e : null
				}
				var Je = "__closure_events_fn_" + (1e9 * Math.random() >>> 0);

				function _e(e) {
					return "function" == typeof e ? e : (e[Je] || (e[Je] = function(t) {
						return e.handleEvent(t)
					}), e[Je])
				}

				function Be() {
					ge.call(this), this.f = new $e(this), this.U = this
				}

				function Ve(e, t) {
					e = e.U;
					var o = t.type || t;
					if ("string" == typeof t) t = new be(t, e);
					else if (t instanceof be) t.target = t.target || e;
					else {
						var i = t;
						(function(e, t) {
							for (var o, i, r = 1; r < arguments.length; r++) {
								for (o in i = arguments[r]) e[o] = i[o];
								for (var n = 0; n < ee.length; n++) o = ee[n], Object.prototype.hasOwnProperty.call(i, o) && (e[o] = i[o])
							}
						})(t = new be(o, e), i)
					}
					Le(e = t.a = e, o, !0, t), Le(e, o, !1, t)
				}

				function Le(e, t, o, i) {
					if (t = e.f.a[String(t)]) {
						t = t.concat();
						for (var r = !0, n = 0; n < t.length; ++n) {
							var a = t[n];
							if (a && !a.A && a.capture == o) {
								var s = a.listener,
									d = a.H || a.src;
								a.D && Ce(e.f, a), r = !1 !== s.call(d, i) && r
							}
						}
					}
				}
				I(Be, ge), Be.prototype[Oe] = !0, Be.prototype.addEventListener = function(e, t, o, i) {
					Pe(this, e, t, o, i)
				}, Be.prototype.removeEventListener = function(e, t, o, i) {
					! function e(t, o, i, r, n) {
						if (Array.isArray(o))
							for (var a = 0; a < o.length; a++) e(t, o[a], i, r, n);
						else r = O(r) ? !!r.capture : !!r, i = _e(i), t && t[Oe] ? t.f.remove(String(o), i, r, n) : t && (t = De(t)) && (o = t.a[o.toString()], t = -1, o && (t = Ie(o, i, r, n)), (i = -1 < t ? o[t] : null) && Fe(i))
					}(this, e, t, o, i)
				};
				var Ue = k;

				function qe(e, t, o) {
					if ("function" == typeof e) o && (e = C(e, o));
					else {
						if (!e || "function" != typeof e.handleEvent) throw Error("Invalid listener argument");
						e = C(e.handleEvent, e)
					}
					return 2147483647 < Number(t) ? -1 : Ue.setTimeout(e, t || 0)
				}

				function We(e, t) {
					this.name = e, this.value = t
				}
				We.prototype.toString = function() {
					return this.name
				};
				var Ge, He, ze, Ye = new We("OFF", 1 / 0),
					Ze = new We("SEVERE", 1e3),
					Xe = new We("CONFIG", 700),
					Ke = new We("FINE", 500);

				function Qe() {
					this.clear()
				}

				function et(e, t, o) {
					this.reset(e || Ye, t, o, void 0, void 0)
				}

				function tt(e, t) {
					this.a = null, this.f = [], this.b = (void 0 === t ? null : t) || null, this.c = [], this.g = {
						getName: function() {
							return e
						}
					}
				}

				function ot(e) {
					return e.a ? e.a : e.b ? ot(e.b) : (function(e, t) {
						throw new J("Failure" + (e ? ": " + e : ""), Array.prototype.slice.call(arguments, 1))
					}("Root logger has no level set."), Ye)
				}

				function it() {
					this.entries = {};
					var e = new tt("");
					e.a = Xe, this.entries[""] = e
				}

				function rt(e, t, o) {
					var i = e.entries[t];
					if (i) return void 0 !== o && (i.a = o), i;
					i = rt(e, t.substr(0, t.lastIndexOf(".")));
					var r = new tt(t, i);
					return e.entries[t] = r, i.c.push(r), void 0 !== o && (r.a = o), r
				}

				function nt() {
					return He || (He = new it), He
				}

				function at(e, t, o) {
					var i;
					(i = e) && (i = e && t) && (i = (i = t.value) >= (e ? ot(rt(nt(), e.getName())) : Ye).value);
					i && (t = t || Ye, i = rt(nt(), e.getName()), "function" == typeof o && (o = o()), Ge || (Ge = new Qe), function(e, t) {
						for (; e;) e.f.forEach((function(e) {
							e(t)
						})), e = e.b
					}(i, e = new et(t, o, e = e.getName())))
				}

				function st(e, t) {
					e && at(e, Ke, t)
				}

				function dt() {}

				function lt(e) {
					var t;
					return (t = e.a) || (t = {}, pt(e) && (t[0] = !0, t[1] = !0), t = e.a = t), t
				}

				function ut() {}

				function ct(e) {
					return (e = pt(e)) ? new ActiveXObject(e) : new XMLHttpRequest
				}

				function pt(e) {
					if (!e.b && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
						for (var t = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], o = 0; o < t.length; o++) {
							var i = t[o];
							try {
								return new ActiveXObject(i), e.b = i
							} catch (r) {}
						}
						throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed")
					}
					return e.b
				}

				function vt(e, t) {
					this.b = e[k.Symbol.iterator](), this.c = t, this.f = 0
				}
				Qe.prototype.clear = function() {}, et.prototype.reset = function() {}, dt.prototype.a = null, I(ut, dt), ze = new ut, a(), u(), vt.prototype[Symbol.iterator] = function() {
					return this
				}, vt.prototype.next = function() {
					var e = this.b.next();
					return {
						value: e.done ? void 0 : this.c.call(void 0, e.value, this.f++),
						done: e.done
					}
				}, a(), u(), a(), u();
				var mt = "StopIteration" in k ? k.StopIteration : {
					message: "StopIteration",
					stack: ""
				};

				function ft() {}

				function gt(e) {
					if (e instanceof yt || e instanceof bt || e instanceof kt) return e;
					if ("function" == typeof e.next) return new yt((function() {
						return ht(e)
					}));
					if (a(), u(), "function" == typeof e[Symbol.iterator]) return a(), u(), new yt((function() {
						return e[Symbol.iterator]()
					}));
					if ("function" == typeof e.u) return new yt((function() {
						return ht(e.u())
					}));
					throw Error("Not an iterator or iterable.")
				}

				function ht(e) {
					if (!(e instanceof ft)) return e;
					var t = !1;
					return {
						next: function() {
							for (var o; !t;) try {
								o = e.a();
								break
							} catch (i) {
								if (i !== mt) throw i;
								t = !0
							}
							return {
								value: o,
								done: t
							}
						}
					}
				}

				function yt(e) {
					this.b = e
				}

				function bt(e) {
					this.b = e
				}

				function kt(e) {
					yt.call(this, (function() {
						return e
					})), this.f = e
				}

				function St(e, t) {
					this.o = {}, this.j = [], this.B = this.size = 0;
					var o = arguments.length;
					if (1 < o) {
						if (o % 2) throw Error("Uneven number of arguments");
						for (var i = 0; i < o; i += 2) this.set(arguments[i], arguments[i + 1])
					} else e && this.addAll(e)
				}

				function wt(e) {
					if (e.size != e.j.length) {
						for (var t = 0, o = 0; t < e.j.length;) {
							var i = e.j[t];
							Ot(e.o, i) && (e.j[o++] = i), t++
						}
						e.j.length = o
					}
					if (e.size != e.j.length) {
						var r = {};
						for (o = t = 0; t < e.j.length;) Ot(r, i = e.j[t]) || (e.j[o++] = i, r[i] = 1), t++;
						e.j.length = o
					}
				}

				function Ot(e, t) {
					return Object.prototype.hasOwnProperty.call(e, t)
				}
				ft.prototype.next = function() {
					return ft.prototype.a.call(this)
				}, ft.prototype.a = function() {
					throw mt
				}, ft.prototype.u = function() {
					return this
				}, a(), u(), yt.prototype.u = function() {
					return new bt(this.b())
				}, yt.prototype[Symbol.iterator] = function() {
					return new kt(this.b())
				}, yt.prototype.c = function() {
					return new kt(this.b())
				}, a(), u(), h(bt, ft), bt.prototype.a = function() {
					var e = this.b.next();
					if (e.done) throw mt;
					return e.value
				}, bt.prototype.next = function() {
					return bt.prototype.a.call(this)
				}, bt.prototype[Symbol.iterator] = function() {
					return new kt(this.b)
				}, bt.prototype.c = function() {
					return new kt(this.b)
				}, h(kt, yt), kt.prototype.next = function() {
					return this.f.next()
				}, (o = St.prototype).G = function() {
					return wt(this), this.j.concat()
				}, o.has = function(e) {
					return Ot(this.o, e)
				}, o.clear = function() {
					this.o = {}, this.B = this.size = this.j.length = 0
				}, o.remove = function(e) {
					return this.delete(e)
				}, o.delete = function(e) {
					return !!Ot(this.o, e) && (delete this.o[e], --this.size, this.B++, this.j.length > 2 * this.size && wt(this), !0)
				}, o.get = function(e, t) {
					return Ot(this.o, e) ? this.o[e] : t
				}, o.set = function(e, t) {
					Ot(this.o, e) || (this.size += 1, this.j.push(e), this.B++), this.o[e] = t
				}, o.addAll = function(e) {
					if (e instanceof St)
						for (var t = e.G(), o = 0; o < t.length; o++) this.set(t[o], e.get(t[o]));
					else
						for (t in e) this.set(t, e[t])
				}, o.forEach = function(e, t) {
					for (var o = this.G(), i = 0; i < o.length; i++) {
						var r = o[i],
							n = this.get(r);
						e.call(t, n, r, this)
					}
				}, o.clone = function() {
					return new St(this)
				}, o.keys = function() {
					return gt(this.u(!0)).c()
				}, o.values = function() {
					return gt(this.u(!1)).c()
				}, o.entries = function() {
					var e = this;
					return function(e, t) {
						return new vt(e, t)
					}(this.keys(), (function(t) {
						return [t, e.get(t)]
					}))
				}, o.u = function(e) {
					wt(this);
					var t = 0,
						o = this.B,
						i = this,
						r = new ft;
					return r.a = function() {
						if (o != i.B) throw Error("The map has changed since the iterator was created");
						if (t >= i.j.length) throw mt;
						var r = i.j[t++];
						return e ? r : i.o[r]
					}, r.next = r.a.bind(r), r
				};
				var Tt = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

				function Nt(e) {
					Be.call(this), this.headers = new St, this.C = e || null, this.c = !1, this.J = this.a = null, this.P = this.v = "", this.g = 0, this.l = "", this.i = this.N = this.s = this.L = !1, this.h = 0, this.w = null, this.m = Rt, this.I = this.M = !1
				}
				I(Nt, Be);
				var Rt = "";
				Nt.prototype.b = rt(nt(), "goog.net.XhrIo", void 0).g;
				var $t = /^https?$/i,
					Ct = ["POST", "PUT"];

				function It(e, t, o) {
					if (e.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + e.v + "; newUri=" + t);
					e.v = t, e.l = "", e.g = 0, e.P = "POST", e.L = !1, e.c = !0, e.a = e.C ? ct(e.C) : ct(ze), e.J = e.C ? lt(e.C) : lt(ze), e.a.onreadystatechange = C(e.R, e);
					try {
						st(e.b, Dt(e, "Opening Xhr")), e.N = !0, e.a.open("POST", String(t), !0), e.N = !1
					} catch (n) {
						return st(e.b, Dt(e, "Error opening Xhr: " + n.message)), void Et(e, n)
					}
					t = o || "";
					var i = (o = e.headers.clone()).G().find((function(e) {
							return "content-type" == e.toLowerCase()
						})),
						r = k.FormData && t instanceof k.FormData;
					!(0 <= z(Ct, "POST")) || i || r || o.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8"), o.forEach((function(e, t) {
						this.a.setRequestHeader(t, e)
					}), e), e.m && (e.a.responseType = e.m), "withCredentials" in e.a && e.a.withCredentials !== e.M && (e.a.withCredentials = e.M);
					try {
						Ft(e), 0 < e.h && (e.I = function(e) {
							return ae && fe() && "number" == typeof e.timeout && void 0 !== e.ontimeout
						}(e.a), st(e.b, Dt(e, "Will abort after " + e.h + "ms if incomplete, xhr2 " + e.I)), e.I ? (e.a.timeout = e.h, e.a.ontimeout = C(e.T, e)) : e.w = qe(e.T, e.h, e)), st(e.b, Dt(e, "Sending request")), e.s = !0, e.a.send(t), e.s = !1
					} catch (n) {
						st(e.b, Dt(e, "Send error: " + n.message)), Et(e, n)
					}
				}

				function Et(e, t) {
					e.c = !1, e.a && (e.i = !0, e.a.abort(), e.i = !1), e.l = t, e.g = 5, At(e), xt(e)
				}

				function At(e) {
					e.L || (e.L = !0, Ve(e, "complete"), Ve(e, "error"))
				}

				function Pt(e) {
					if (e.c && void 0 !== b)
						if (e.J[1] && 4 == jt(e) && 2 == e.getStatus()) st(e.b, Dt(e, "Local request error detected and ignored"));
						else if (e.s && 4 == jt(e)) qe(e.R, 0, e);
					else if (Ve(e, "readystatechange"), 4 == jt(e)) {
						st(e.b, Dt(e, "Request complete")), e.c = !1;
						try {
							var t, o = e.getStatus();
							e: switch (o) {
								case 200:
								case 201:
								case 202:
								case 204:
								case 206:
								case 304:
								case 1223:
									var i = !0;
									break e;
								default:
									i = !1
							}
							if (!(t = i)) {
								var r;
								if (r = 0 === o) {
									var n = String(e.v).match(Tt)[1] || null;
									if (!n && k.self && k.self.location) {
										var a = k.self.location.protocol;
										n = a.substr(0, a.length - 1)
									}
									r = !$t.test(n ? n.toLowerCase() : "")
								}
								t = r
							}
							if (t) Ve(e, "complete"), Ve(e, "success");
							else {
								e.g = 6;
								try {
									var s = 2 < jt(e) ? e.a.statusText : ""
								} catch (d) {
									st(e.b, "Can not get status: " + d.message), s = ""
								}
								e.l = s + " [" + e.getStatus() + "]", At(e)
							}
						} finally {
							xt(e)
						}
					}
				}

				function xt(e) {
					if (e.a) {
						Ft(e);
						var t = e.a,
							o = e.J[0] ? w : null;
						e.a = null, e.J = null, Ve(e, "ready");
						try {
							t.onreadystatechange = o
						} catch (i) {
							(e = e.b) && at(e, Ze, "Problem encountered resetting onreadystatechange: " + i.message)
						}
					}
				}

				function Ft(e) {
					e.a && e.I && (e.a.ontimeout = null), e.w && (Ue.clearTimeout(e.w), e.w = null)
				}

				function jt(e) {
					return e.a ? e.a.readyState : 0
				}

				function Mt(e, t) {
					if (e.a && 4 == jt(e)) return null === (e = e.a.getResponseHeader(t)) ? void 0 : e
				}

				function Dt(e, t) {
					return t + " [" + e.P + " " + e.v + " " + e.getStatus() + "]"
				}(o = Nt.prototype).T = function() {
					void 0 !== b && this.a && (this.l = "Timed out after " + this.h + "ms, aborting", this.g = 8, st(this.b, Dt(this, this.l)), Ve(this, "timeout"), this.abort(8))
				}, o.abort = function(e) {
					this.a && this.c && (st(this.b, Dt(this, "Aborting")), this.c = !1, this.i = !0, this.a.abort(), this.i = !1, this.g = e || 7, Ve(this, "complete"), Ve(this, "abort"), xt(this))
				}, o.R = function() {
					this.K || (this.N || this.s || this.i ? Pt(this) : this.W())
				}, o.W = function() {
					Pt(this)
				}, o.getStatus = function() {
					try {
						return 2 < jt(this) ? this.a.status : -1
					} catch (re) {
						return -1
					}
				};
				var Jt = {},
					_t = null;

				function Bt(e) {
					var t = e.length,
						o = 3 * t / 4;
					o % 3 ? o = Math.floor(o) : Z("=.", e[t - 1]) && (o = Z("=.", e[t - 2]) ? o - 2 : o - 1);
					var i = new Uint8Array(o),
						r = 0;
					return function(e, t) {
						function o(t) {
							for (; i < e.length;) {
								var o = e.charAt(i++),
									r = _t[o];
								if (null != r) return r;
								if (!/^[\s\xa0]*$/.test(o)) throw Error("Unknown base64 encoding at char: " + o)
							}
							return t
						}
						Vt();
						for (var i = 0;;) {
							var r = o(-1),
								n = o(0),
								a = o(64),
								s = o(64);
							if (64 === s && -1 === r) break;
							t(r << 2 | n >> 4), 64 != a && (t(n << 4 & 240 | a >> 2), 64 != s && t(a << 6 & 192 | s))
						}
					}(e, (function(e) {
						i[r++] = e
					})), i.subarray(0, r)
				}

				function Vt() {
					if (!_t) {
						_t = {};
						for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), t = ["+/=", "+/", "-_=", "-_.", "-_"], o = 0; 5 > o; o++) {
							var i = e.concat(t[o].split(""));
							Jt[o] = i;
							for (var r = 0; r < i.length; r++) {
								var n = i[r];
								void 0 === _t[n] && (_t[n] = r)
							}
						}
					}
				}
				var Lt = ["content-type", "grpc-status", "grpc-message"];

				function Ut(e) {
					this.a = e.Z, this.m = null, this.b = [], this.h = [], this.g = [], this.f = [], this.c = [], this.l = !1, this.i = 0, this.s = new _;
					var t = this;
					Pe(this.a, "readystatechange", (function() {
						var e = t.a;
						if (e = e.a ? e.a.getResponseHeader("Content-Type") : null) {
							if (0 == (e = e.toLowerCase()).lastIndexOf("application/grpc-web-text", 0)) {
								e = t.a;
								try {
									var o = e.a ? e.a.responseText : ""
								} catch (s) {
									st(e.b, "Can not get responseText: " + s.message), o = ""
								}
								if (o = (e = o || "").length - e.length % 4, 0 == (e = e.substr(t.i, o - t.i)).length) return;
								t.i = o, e = Bt(e)
							} else {
								if (0 != e.lastIndexOf("application/grpc", 0)) return void Wt(t, new j(2, "Unknown Content-type received."));
								e = new Uint8Array(function(t) {
									try {
										if (!t.a) return null;
										if ("response" in t.a) return t.a.response;
										switch (t.m) {
											case Rt:
											case "text":
												return t.a.responseText;
											case "arraybuffer":
												if ("mozResponseArrayBuffer" in t.a) return t.a.mozResponseArrayBuffer
										}
										var o = t.b;
										return o && at(o, Ze, "Response type " + t.m + " is not supported on this browser"), null
									} catch (e) {
										return st(t.b, "Can not get response: " + e.message), null
									}
								}(t.a))
							}
							o = null;
							try {
								o = function(e, t) {
									function o(e) {
										s.f++, s.a = (s.a << 8) + e, 4 == s.f && (s.b = L, s.g = 0, "undefined" != typeof Uint8Array ? s.c = new Uint8Array(s.a) : s.c = Array(s.a), 0 == s.a && r())
									}

									function i(e) {
										s.c[s.g++] = e, s.g == s.a && r()
									}

									function r() {
										var e = {};
										e[s.h] = s.c, s.i.push(e), s.b = B
									}
									var n, a, s = e,
										d = 0;
									for (n = t instanceof Uint8Array || t instanceof Array ? t : new Uint8Array(t); d < n.length;) {
										switch (s.b) {
											case U:
												G(s, n, d, "stream already broken");
												break;
											case B:
												(a = n[d]) == q ? s.h = a : a == W ? s.h = a : G(s, n, d, "invalid frame byte"), s.b = V, s.a = 0, s.f = 0;
												break;
											case V:
												o(n[d]);
												break;
											case L:
												i(n[d]);
												break;
											default:
												throw Error("unexpected parser state: " + s.b)
										}
										s.m++, d++
									}
									return e = s.i, s.i = [], 0 < e.length ? e : null
								}(t.s, e)
							} catch (s) {
								Wt(t, new j(2, "Error in parsing response body"))
							}
							if (o)
								for (e = 0; e < o.length; e++) {
									if (q in o[e]) {
										var i = o[e][q];
										if (i) {
											var r = void 0;
											try {
												r = t.m(i)
											} catch (s) {
												Wt(t, new j(13, "Error when deserializing response data; error: " + s + ", response: " + r))
											}
											if (r) {
												i = t;
												for (var n = 0; n < i.b.length; n++) i.b[n](r)
											}
										}
									}
									if (W in o[e] && 0 < o[e][W].length) {
										for (i = "", r = 0; r < o[e][W].length; r++) i += String.fromCharCode(o[e][W][r]);
										for (i = i.trim().split("\r\n"), r = {}, n = 0; n < i.length; n++) {
											var a = i[n].indexOf(":");
											r[i[n].substring(0, a).trim()] = i[n].substring(a + 1).trim()
										}
										i = r, r = 0, n = "", "grpc-status" in i && (r = Number(i["grpc-status"]), delete i["grpc-status"]), "grpc-message" in i && (n = i["grpc-message"], delete i["grpc-message"]), Wt(t, new j(r, n, i))
									}
								}
						}
					})), Pe(this.a, "complete", (function() {
						var e = t.a.g,
							o = 2,
							i = "",
							r = {},
							n = function(e) {
								var t = {};
								e = (e.a && 4 == jt(e) && e.a.getAllResponseHeaders() || "").split("\r\n");
								for (var o = 0; o < e.length; o++)
									if (!/^[\s\xa0]*$/.test(e[o])) {
										var i = te(e[o]),
											r = i[0];
										if ("string" == typeof(i = i[1])) {
											i = i.trim();
											var n = t[r] || [];
											t[r] = n, n.push(i)
										}
									} return function(e, t) {
									var o, i = {};
									for (o in e) i[o] = t.call(void 0, e[o], o, e);
									return i
								}(t, (function(e) {
									return e.join(", ")
								}))
							}(t.a);
						if (Object.keys(n).forEach((function(e) {
								Lt.includes(e) || (r[e] = n[e])
							})), function(e, t) {
								for (var o = 0; o < e.g.length; o++) e.g[o](t)
							}(t, r), 0 != e) {
							switch (e) {
								case 7:
									o = 10;
									break;
								case 8:
									o = 4;
									break;
								case 6:
									o = function(e) {
										switch (e) {
											case 200:
												return 0;
											case 400:
												return 3;
											case 401:
												return 16;
											case 403:
												return 7;
											case 404:
												return 5;
											case 409:
												return 10;
											case 412:
												return 9;
											case 429:
												return 8;
											case 499:
												return 1;
											case 500:
												return 2;
											case 501:
												return 12;
											case 503:
												return 14;
											case 504:
												return 4;
											default:
												return 2
										}
									}(t.a.getStatus());
									break;
								default:
									o = 14
							}
							10 == o && t.l || Wt(t, new j(o, function(e) {
								switch (e) {
									case 0:
										return "No Error";
									case 1:
										return "Access denied to content document";
									case 2:
										return "File not found";
									case 3:
										return "Firefox silently errored";
									case 4:
										return "Application custom error";
									case 5:
										return "An exception occurred";
									case 6:
										return "Http response at 400 or 500 level";
									case 7:
										return "Request was aborted";
									case 8:
										return "Request timed out";
									case 9:
										return "The resource is not available offline";
									default:
										return "Unrecognized error code"
								}
							}(e)))
						} else e = !1, "grpc-status" in n && (o = Number(Mt(t.a, "grpc-status")), "grpc-message" in n && (i = Mt(t.a, "grpc-message")), 0 != o && (Wt(t, new j(o, i || "", n)), e = !0)), e || function(e) {
							for (var t = 0; t < e.c.length; t++) e.c[t]()
						}(t)
					}))
				}

				function qt(e, t) {
					-1 < (t = e.indexOf(t)) && e.splice(t, 1)
				}

				function Wt(e, t) {
					if (0 != t.code)
						for (var o = new j(t.code, decodeURIComponent(t.message || ""), t.metadata), i = 0; i < e.f.length; i++) e.f[i](o);
					for (t = {
							code: t.code,
							details: decodeURIComponent(t.message || ""),
							metadata: t.metadata
						}, o = 0; o < e.h.length; o++) e.h[o](t)
				}

				function Gt(e, t) {
					e = void 0 === e ? {} : e, this.a = e.format || S("format", e) || "text", this.g = e.aa || S("suppressCorsPreflight", e) || !1, this.f = e.withCredentials || S("withCredentials", e) || !1, this.b = e.$ || S("streamInterceptors", e) || [], this.h = e.ba || S("unaryInterceptors", e) || [], this.c = t || null
				}

				function Ht(e, t, o) {
					var i = t.getMethodDescriptor(),
						r = o + i.getName();
					(o = e.c ? e.c : new Nt).M = e.f;
					var n = new Ut({
							Z: o
						}),
						a = i.getResponseDeserializeFn();
					for (var s in n.m = a, a = t.getMetadata()) o.headers.set(s, a[s]);
					if ("text" == e.a ? (o.headers.set("Content-Type", "application/grpc-web-text"), o.headers.set("Accept", "application/grpc-web-text")) : o.headers.set("Content-Type", "application/grpc-web+proto"), o.headers.set("X-User-Agent", "grpc-web-javascript/0.1"), o.headers.set("X-Grpc-Web", "1"), o.headers.has("deadline") && (s = Number(o.headers.get("deadline")), s = Math.ceil(s - (new Date).getTime()), o.headers.delete("deadline"), 1 / 0 === s && (s = 0), 0 < s && (o.headers.set("grpc-timeout", s + "m"), o.h = Math.max(0, Math.max(1e3, Math.ceil(1.1 * s))))), e.g) {
						s = {};
						for (var d = c((a = o.headers).keys()), l = d.next(); !l.done; l = d.next()) s[l = l.value] = a.get(l);
						o.headers.clear();
						e: {
							for (u in s) {
								var u = !1;
								break e
							}
							u = !0
						}
						u || (s = function(e) {
							var t = "";
							return function(e, t) {
								for (var o in e) t.call(void 0, e[o], o, e)
							}(e, (function(e, o) {
								t += o, t += ":", t += e, t += "\r\n"
							})), t
						}(s), "string" == typeof r ? (u = encodeURIComponent("$httpHeaders"), (u += s = null != s ? "=" + encodeURIComponent(String(s)) : "") && (0 > (s = r.indexOf("#")) && (s = r.length), 0 > (a = r.indexOf("?")) || a > s ? (a = s, d = "") : d = r.substring(a + 1, s), s = (r = [r.substr(0, a), d, r.substr(s)])[1], r[1] = u ? s ? s + "&" + u : u : s, r = r[0] + (r[1] ? "?" + r[1] : "") + r[2])) : r.a("$httpHeaders", s))
					}
					for (t = i.getRequestSerializeFn()(t.getRequestMessage()), i = t.length, u = [0, 0, 0, 0], s = new Uint8Array(5 + i), a = 3; 0 <= a; a--) u[a] = i % 256, i >>>= 8;
					if (s.set(new Uint8Array(u), 1), s.set(t, 5), t = s, "text" == e.a) {
						var p;
						for (e = t, void 0 === p && (p = 0), Vt(), p = Jt[p], t = Array(Math.floor(e.length / 3)), i = p[64] || "", u = s = 0; s < e.length - 2; s += 3) {
							l = e[s];
							var v = e[s + 1];
							d = e[s + 2], a = p[l >> 2], l = p[(3 & l) << 4 | v >> 4], v = p[(15 & v) << 2 | d >> 6], d = p[63 & d], t[u++] = a + l + v + d
						}
						switch (a = 0, d = i, e.length - s) {
							case 2:
								d = p[(15 & (a = e[s + 1])) << 2] || i;
							case 1:
								e = e[s], t[u] = p[e >> 2] + p[(3 & e) << 4 | a >> 4] + d + i
						}
						t = t.join("")
					} else "binary" == e.a && (o.m = "arraybuffer");
					return It(o, r, t), n
				}

				function zt(e, t, o) {
					var i = !1,
						r = null,
						n = !1;
					e.on("data", (function(e) {
						i = !0, r = e
					})), e.on("error", (function(e) {
						0 == e.code || n || (n = !0, t(e, null))
					})), e.on("status", (function(e) {
						0 == e.code || n ? o && t(null, null, e) : (n = !0, t({
							code: e.code,
							message: e.details,
							metadata: e.metadata
						}, null))
					})), o && e.on("metadata", (function(e) {
						t(null, null, null, e)
					})), e.on("end", (function() {
						n || (i ? t(null, r) : t({
							code: 2,
							message: "Incomplete response"
						})), o && t(null, null)
					}))
				}

				function Yt(e, t) {
					var o = e;
					return t.forEach((function(e) {
						var t = o;
						o = function(o) {
							return e.intercept(o, t)
						}
					})), o
				}
				Ut.prototype.on = function(e, t) {
					return "data" == e ? this.b.push(t) : "status" == e ? this.h.push(t) : "metadata" == e ? this.g.push(t) : "end" == e ? this.c.push(t) : "error" == e && this.f.push(t), this
				}, Ut.prototype.removeListener = function(e, t) {
					return "data" == e ? qt(this.b, t) : "status" == e ? qt(this.h, t) : "metadata" == e ? qt(this.g, t) : "end" == e ? qt(this.c, t) : "error" == e && qt(this.f, t), this
				}, Ut.prototype.cancel = function() {
					this.l = !0, this.a.abort()
				}, Ut.prototype.cancel = Ut.prototype.cancel, Ut.prototype.removeListener = Ut.prototype.removeListener, Ut.prototype.on = Ut.prototype.on, Gt.prototype.X = function(e, t, o, i, r) {
					var n = this,
						a = e.substr(0, e.length - i.name.length);
					return zt(e = Yt((function(e) {
						return Ht(n, e, a)
					}), this.b).call(this, F(i, t, o)), r, !1), new M(e)
				}, Gt.prototype.S = function(e, t, o, i) {
					var r = this,
						n = e.substr(0, e.length - i.name.length);
					return Yt((function(e) {
						return new Promise((function(t, o) {
							var i, a, s;
							zt(Ht(r, e, n), (function(r, n, d, l) {
								r ? o(r) : n ? s = n : d ? a = d : l ? i = l : (r = e.getMethodDescriptor(), t(new P(s, r, n = void 0 === (n = i) ? {} : n, void 0 === a ? null : a)))
							}), !0)
						}))
					}), this.h).call(this, F(i, t, o)).then((function(e) {
						return e.getResponseMessage()
					}))
				}, Gt.prototype.unaryCall = function(e, t, o, i) {
					return this.S(e, t, o, i)
				}, Gt.prototype.Y = function(e, t, o, i) {
					var r = this,
						n = e.substr(0, e.length - i.name.length);
					return Yt((function(e) {
						return Ht(r, e, n)
					}), this.b).call(this, F(i, t, o))
				}, Gt.prototype.serverStreaming = Gt.prototype.Y, Gt.prototype.unaryCall = Gt.prototype.unaryCall, Gt.prototype.thenableCall = Gt.prototype.S, Gt.prototype.rpcCall = Gt.prototype.X, e.exports.CallOptions = E, e.exports.MethodDescriptor = x, e.exports.GrpcWebClientBase = Gt, e.exports.RpcError = j, e.exports.StatusCode = {
					OK: 0,
					CANCELLED: 1,
					UNKNOWN: 2,
					INVALID_ARGUMENT: 3,
					DEADLINE_EXCEEDED: 4,
					NOT_FOUND: 5,
					ALREADY_EXISTS: 6,
					PERMISSION_DENIED: 7,
					UNAUTHENTICATED: 16,
					RESOURCE_EXHAUSTED: 8,
					FAILED_PRECONDITION: 9,
					ABORTED: 10,
					OUT_OF_RANGE: 11,
					UNIMPLEMENTED: 12,
					INTERNAL: 13,
					UNAVAILABLE: 14,
					DATA_LOSS: 15
				}, e.exports.MethodType = {
					UNARY: "unary",
					SERVER_STREAMING: "server_streaming",
					BIDI_STREAMING: "bidi_streaming"
				}, Ue = "undefined" != typeof globalThis && globalThis || self
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/long/src/long.js": function(e, t) {
			e.exports = i;
			var o = null;
			try {
				o = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports
			} catch (R) {}

			function i(e, t, o) {
				this.low = 0 | e, this.high = 0 | t, this.unsigned = !!o
			}

			function r(e) {
				return !0 === (e && e.__isLong__)
			}
			i.prototype.__isLong__, Object.defineProperty(i.prototype, "__isLong__", {
				value: !0
			}), i.isLong = r;
			var n = {},
				a = {};

			function s(e, t) {
				var o, i, r;
				return t ? (r = 0 <= (e >>>= 0) && e < 256) && (i = a[e]) ? i : (o = l(e, (0 | e) < 0 ? -1 : 0, !0), r && (a[e] = o), o) : (r = -128 <= (e |= 0) && e < 128) && (i = n[e]) ? i : (o = l(e, e < 0 ? -1 : 0, !1), r && (n[e] = o), o)
			}

			function d(e, t) {
				if (isNaN(e)) return t ? y : h;
				if (t) {
					if (e < 0) return y;
					if (e >= m) return O
				} else {
					if (e <= -f) return T;
					if (e + 1 >= f) return w
				}
				return e < 0 ? d(-e, t).neg() : l(e % v | 0, e / v | 0, t)
			}

			function l(e, t, o) {
				return new i(e, t, o)
			}
			i.fromInt = s, i.fromNumber = d, i.fromBits = l;
			var u = Math.pow;

			function c(e, t, o) {
				if (0 === e.length) throw Error("empty string");
				if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e) return h;
				if ("number" == typeof t ? (o = t, t = !1) : t = !!t, (o = o || 10) < 2 || 36 < o) throw RangeError("radix");
				var i;
				if ((i = e.indexOf("-")) > 0) throw Error("interior hyphen");
				if (0 === i) return c(e.substring(1), t, o).neg();
				for (var r = d(u(o, 8)), n = h, a = 0; a < e.length; a += 8) {
					var s = Math.min(8, e.length - a),
						l = parseInt(e.substring(a, a + s), o);
					if (s < 8) {
						var p = d(u(o, s));
						n = n.mul(p).add(d(l))
					} else n = (n = n.mul(r)).add(d(l))
				}
				return n.unsigned = t, n
			}

			function p(e, t) {
				return "number" == typeof e ? d(e, t) : "string" == typeof e ? c(e, t) : l(e.low, e.high, "boolean" == typeof t ? t : e.unsigned)
			}
			i.fromString = c, i.fromValue = p;
			var v = 4294967296,
				m = v * v,
				f = m / 2,
				g = s(1 << 24),
				h = s(0);
			i.ZERO = h;
			var y = s(0, !0);
			i.UZERO = y;
			var b = s(1);
			i.ONE = b;
			var k = s(1, !0);
			i.UONE = k;
			var S = s(-1);
			i.NEG_ONE = S;
			var w = l(-1, 2147483647, !1);
			i.MAX_VALUE = w;
			var O = l(-1, -1, !0);
			i.MAX_UNSIGNED_VALUE = O;
			var T = l(0, -2147483648, !1);
			i.MIN_VALUE = T;
			var N = i.prototype;
			N.toInt = function() {
				return this.unsigned ? this.low >>> 0 : this.low
			}, N.toNumber = function() {
				return this.unsigned ? (this.high >>> 0) * v + (this.low >>> 0) : this.high * v + (this.low >>> 0)
			}, N.toString = function(e) {
				if ((e = e || 10) < 2 || 36 < e) throw RangeError("radix");
				if (this.isZero()) return "0";
				if (this.isNegative()) {
					if (this.eq(T)) {
						var t = d(e),
							o = this.div(t),
							i = o.mul(t).sub(this);
						return o.toString(e) + i.toInt().toString(e)
					}
					return "-" + this.neg().toString(e)
				}
				for (var r = d(u(e, 6), this.unsigned), n = this, a = "";;) {
					var s = n.div(r),
						l = (n.sub(s.mul(r)).toInt() >>> 0).toString(e);
					if ((n = s).isZero()) return l + a;
					for (; l.length < 6;) l = "0" + l;
					a = "" + l + a
				}
			}, N.getHighBits = function() {
				return this.high
			}, N.getHighBitsUnsigned = function() {
				return this.high >>> 0
			}, N.getLowBits = function() {
				return this.low
			}, N.getLowBitsUnsigned = function() {
				return this.low >>> 0
			}, N.getNumBitsAbs = function() {
				if (this.isNegative()) return this.eq(T) ? 64 : this.neg().getNumBitsAbs();
				for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--);
				return 0 != this.high ? t + 33 : t + 1
			}, N.isZero = function() {
				return 0 === this.high && 0 === this.low
			}, N.eqz = N.isZero, N.isNegative = function() {
				return !this.unsigned && this.high < 0
			}, N.isPositive = function() {
				return this.unsigned || this.high >= 0
			}, N.isOdd = function() {
				return 1 == (1 & this.low)
			}, N.isEven = function() {
				return 0 == (1 & this.low)
			}, N.equals = function(e) {
				return r(e) || (e = p(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && (this.high === e.high && this.low === e.low)
			}, N.eq = N.equals, N.notEquals = function(e) {
				return !this.eq(e)
			}, N.neq = N.notEquals, N.ne = N.notEquals, N.lessThan = function(e) {
				return this.comp(e) < 0
			}, N.lt = N.lessThan, N.lessThanOrEqual = function(e) {
				return this.comp(e) <= 0
			}, N.lte = N.lessThanOrEqual, N.le = N.lessThanOrEqual, N.greaterThan = function(e) {
				return this.comp(e) > 0
			}, N.gt = N.greaterThan, N.greaterThanOrEqual = function(e) {
				return this.comp(e) >= 0
			}, N.gte = N.greaterThanOrEqual, N.ge = N.greaterThanOrEqual, N.compare = function(e) {
				if (r(e) || (e = p(e)), this.eq(e)) return 0;
				var t = this.isNegative(),
					o = e.isNegative();
				return t && !o ? -1 : !t && o ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1
			}, N.comp = N.compare, N.negate = function() {
				return !this.unsigned && this.eq(T) ? T : this.not().add(b)
			}, N.neg = N.negate, N.add = function(e) {
				r(e) || (e = p(e));
				var t = this.high >>> 16,
					o = 65535 & this.high,
					i = this.low >>> 16,
					n = 65535 & this.low,
					a = e.high >>> 16,
					s = 65535 & e.high,
					d = e.low >>> 16,
					u = 0,
					c = 0,
					v = 0,
					m = 0;
				return v += (m += n + (65535 & e.low)) >>> 16, c += (v += i + d) >>> 16, u += (c += o + s) >>> 16, u += t + a, l((v &= 65535) << 16 | (m &= 65535), (u &= 65535) << 16 | (c &= 65535), this.unsigned)
			}, N.subtract = function(e) {
				return r(e) || (e = p(e)), this.add(e.neg())
			}, N.sub = N.subtract, N.multiply = function(e) {
				if (this.isZero()) return h;
				if (r(e) || (e = p(e)), o) return l(o.mul(this.low, this.high, e.low, e.high), o.get_high(), this.unsigned);
				if (e.isZero()) return h;
				if (this.eq(T)) return e.isOdd() ? T : h;
				if (e.eq(T)) return this.isOdd() ? T : h;
				if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
				if (e.isNegative()) return this.mul(e.neg()).neg();
				if (this.lt(g) && e.lt(g)) return d(this.toNumber() * e.toNumber(), this.unsigned);
				var t = this.high >>> 16,
					i = 65535 & this.high,
					n = this.low >>> 16,
					a = 65535 & this.low,
					s = e.high >>> 16,
					u = 65535 & e.high,
					c = e.low >>> 16,
					v = 65535 & e.low,
					m = 0,
					f = 0,
					y = 0,
					b = 0;
				return y += (b += a * v) >>> 16, f += (y += n * v) >>> 16, y &= 65535, f += (y += a * c) >>> 16, m += (f += i * v) >>> 16, f &= 65535, m += (f += n * c) >>> 16, f &= 65535, m += (f += a * u) >>> 16, m += t * v + i * c + n * u + a * s, l((y &= 65535) << 16 | (b &= 65535), (m &= 65535) << 16 | (f &= 65535), this.unsigned)
			}, N.mul = N.multiply, N.divide = function(e) {
				if (r(e) || (e = p(e)), e.isZero()) throw Error("division by zero");
				var t, i, n;
				if (o) return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? l((this.unsigned ? o.div_u : o.div_s)(this.low, this.high, e.low, e.high), o.get_high(), this.unsigned) : this;
				if (this.isZero()) return this.unsigned ? y : h;
				if (this.unsigned) {
					if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return y;
					if (e.gt(this.shru(1))) return k;
					n = y
				} else {
					if (this.eq(T)) return e.eq(b) || e.eq(S) ? T : e.eq(T) ? b : (t = this.shr(1).div(e).shl(1)).eq(h) ? e.isNegative() ? b : S : (i = this.sub(e.mul(t)), n = t.add(i.div(e)));
					if (e.eq(T)) return this.unsigned ? y : h;
					if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
					if (e.isNegative()) return this.div(e.neg()).neg();
					n = h
				}
				for (i = this; i.gte(e);) {
					t = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));
					for (var a = Math.ceil(Math.log(t) / Math.LN2), s = a <= 48 ? 1 : u(2, a - 48), c = d(t), v = c.mul(e); v.isNegative() || v.gt(i);) v = (c = d(t -= s, this.unsigned)).mul(e);
					c.isZero() && (c = b), n = n.add(c), i = i.sub(v)
				}
				return n
			}, N.div = N.divide, N.modulo = function(e) {
				return r(e) || (e = p(e)), o ? l((this.unsigned ? o.rem_u : o.rem_s)(this.low, this.high, e.low, e.high), o.get_high(), this.unsigned) : this.sub(this.div(e).mul(e))
			}, N.mod = N.modulo, N.rem = N.modulo, N.not = function() {
				return l(~this.low, ~this.high, this.unsigned)
			}, N.and = function(e) {
				return r(e) || (e = p(e)), l(this.low & e.low, this.high & e.high, this.unsigned)
			}, N.or = function(e) {
				return r(e) || (e = p(e)), l(this.low | e.low, this.high | e.high, this.unsigned)
			}, N.xor = function(e) {
				return r(e) || (e = p(e)), l(this.low ^ e.low, this.high ^ e.high, this.unsigned)
			}, N.shiftLeft = function(e) {
				return r(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? l(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : l(0, this.low << e - 32, this.unsigned)
			}, N.shl = N.shiftLeft, N.shiftRight = function(e) {
				return r(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? l(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : l(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned)
			}, N.shr = N.shiftRight, N.shiftRightUnsigned = function(e) {
				if (r(e) && (e = e.toInt()), 0 === (e &= 63)) return this;
				var t = this.high;
				return e < 32 ? l(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : l(32 === e ? t : t >>> e - 32, 0, this.unsigned)
			}, N.shru = N.shiftRightUnsigned, N.shr_u = N.shiftRightUnsigned, N.toSigned = function() {
				return this.unsigned ? l(this.low, this.high, !1) : this
			}, N.toUnsigned = function() {
				return this.unsigned ? this : l(this.low, this.high, !0)
			}, N.toBytes = function(e) {
				return e ? this.toBytesLE() : this.toBytesBE()
			}, N.toBytesLE = function() {
				var e = this.high,
					t = this.low;
				return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24]
			}, N.toBytesBE = function() {
				var e = this.high,
					t = this.low;
				return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t]
			}, i.fromBytes = function(e, t, o) {
				return o ? i.fromBytesLE(e, t) : i.fromBytesBE(e, t)
			}, i.fromBytesLE = function(e, t) {
				return new i(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t)
			}, i.fromBytesBE = function(e, t) {
				return new i(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t)
			}
		},
		"./node_modules/luxon/build/cjs-browser/luxon.js": function(e, t, o) {
			"use strict";

			function i(e, t) {
				for (var o = 0; o < t.length; o++) {
					var i = t[o];
					i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
				}
			}

			function r(e, t, o) {
				return t && i(e.prototype, t), o && i(e, o), Object.defineProperty(e, "prototype", {
					writable: !1
				}), e
			}

			function n() {
				return (n = Object.assign ? Object.assign.bind() : function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var o = arguments[t];
						for (var i in o) Object.prototype.hasOwnProperty.call(o, i) && (e[i] = o[i])
					}
					return e
				}).apply(this, arguments)
			}

			function a(e, t) {
				e.prototype = Object.create(t.prototype), e.prototype.constructor = e, d(e, t)
			}

			function s(e) {
				return (s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
					return e.__proto__ || Object.getPrototypeOf(e)
				})(e)
			}

			function d(e, t) {
				return (d = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
					return e.__proto__ = t, e
				})(e, t)
			}

			function l(e, t, o) {
				return (l = function() {
					if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
					if (Reflect.construct.sham) return !1;
					if ("function" == typeof Proxy) return !0;
					try {
						return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
					} catch (e) {
						return !1
					}
				}() ? Reflect.construct.bind() : function(e, t, o) {
					var i = [null];
					i.push.apply(i, t);
					var r = new(Function.bind.apply(e, i));
					return o && d(r, o.prototype), r
				}).apply(null, arguments)
			}

			function u(e) {
				var t = "function" == typeof Map ? new Map : void 0;
				return (u = function(e) {
					if (null === e || (o = e, -1 === Function.toString.call(o).indexOf("[native code]"))) return e;
					var o;
					if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
					if (void 0 !== t) {
						if (t.has(e)) return t.get(e);
						t.set(e, i)
					}

					function i() {
						return l(e, arguments, s(this).constructor)
					}
					return i.prototype = Object.create(e.prototype, {
						constructor: {
							value: i,
							enumerable: !1,
							writable: !0,
							configurable: !0
						}
					}), d(i, e)
				})(e)
			}

			function c(e, t) {
				if (null == e) return {};
				var o, i, r = {},
					n = Object.keys(e);
				for (i = 0; i < n.length; i++) o = n[i], t.indexOf(o) >= 0 || (r[o] = e[o]);
				return r
			}

			function p(e, t) {
				(null == t || t > e.length) && (t = e.length);
				for (var o = 0, i = new Array(t); o < t; o++) i[o] = e[o];
				return i
			}

			function v(e, t) {
				var o = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
				if (o) return (o = o.call(e)).next.bind(o);
				if (Array.isArray(e) || (o = function(e, t) {
						if (e) {
							if ("string" == typeof e) return p(e, t);
							var o = Object.prototype.toString.call(e).slice(8, -1);
							return "Object" === o && e.constructor && (o = e.constructor.name), "Map" === o || "Set" === o ? Array.from(e) : "Arguments" === o || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o) ? p(e, t) : void 0
						}
					}(e)) || t && e && "number" == typeof e.length) {
					o && (e = o);
					var i = 0;
					return function() {
						return i >= e.length ? {
							done: !0
						} : {
							done: !1,
							value: e[i++]
						}
					}
				}
				throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
			}
			Object.defineProperty(t, "__esModule", {
				value: !0
			});
			var m = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					return a(t, e), t
				}(u(Error)),
				f = function(e) {
					function t(t) {
						return e.call(this, "Invalid DateTime: " + t.toMessage()) || this
					}
					return a(t, e), t
				}(m),
				g = function(e) {
					function t(t) {
						return e.call(this, "Invalid Interval: " + t.toMessage()) || this
					}
					return a(t, e), t
				}(m),
				h = function(e) {
					function t(t) {
						return e.call(this, "Invalid Duration: " + t.toMessage()) || this
					}
					return a(t, e), t
				}(m),
				y = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					return a(t, e), t
				}(m),
				b = function(e) {
					function t(t) {
						return e.call(this, "Invalid unit " + t) || this
					}
					return a(t, e), t
				}(m),
				k = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					return a(t, e), t
				}(m),
				S = function(e) {
					function t() {
						return e.call(this, "Zone is an abstract class") || this
					}
					return a(t, e), t
				}(m),
				w = "numeric",
				O = "short",
				T = "long",
				N = {
					year: w,
					month: w,
					day: w
				},
				R = {
					year: w,
					month: O,
					day: w
				},
				$ = {
					year: w,
					month: O,
					day: w,
					weekday: O
				},
				C = {
					year: w,
					month: T,
					day: w
				},
				I = {
					year: w,
					month: T,
					day: w,
					weekday: T
				},
				E = {
					hour: w,
					minute: w
				},
				A = {
					hour: w,
					minute: w,
					second: w
				},
				P = {
					hour: w,
					minute: w,
					second: w,
					timeZoneName: O
				},
				x = {
					hour: w,
					minute: w,
					second: w,
					timeZoneName: T
				},
				F = {
					hour: w,
					minute: w,
					hourCycle: "h23"
				},
				j = {
					hour: w,
					minute: w,
					second: w,
					hourCycle: "h23"
				},
				M = {
					hour: w,
					minute: w,
					second: w,
					hourCycle: "h23",
					timeZoneName: O
				},
				D = {
					hour: w,
					minute: w,
					second: w,
					hourCycle: "h23",
					timeZoneName: T
				},
				J = {
					year: w,
					month: w,
					day: w,
					hour: w,
					minute: w
				},
				_ = {
					year: w,
					month: w,
					day: w,
					hour: w,
					minute: w,
					second: w
				},
				B = {
					year: w,
					month: O,
					day: w,
					hour: w,
					minute: w
				},
				V = {
					year: w,
					month: O,
					day: w,
					hour: w,
					minute: w,
					second: w
				},
				L = {
					year: w,
					month: O,
					day: w,
					weekday: O,
					hour: w,
					minute: w
				},
				U = {
					year: w,
					month: T,
					day: w,
					hour: w,
					minute: w,
					timeZoneName: O
				},
				q = {
					year: w,
					month: T,
					day: w,
					hour: w,
					minute: w,
					second: w,
					timeZoneName: O
				},
				W = {
					year: w,
					month: T,
					day: w,
					weekday: T,
					hour: w,
					minute: w,
					timeZoneName: T
				},
				G = {
					year: w,
					month: T,
					day: w,
					weekday: T,
					hour: w,
					minute: w,
					second: w,
					timeZoneName: T
				};

			function H(e) {
				return void 0 === e
			}

			function z(e) {
				return "number" == typeof e
			}

			function Y(e) {
				return "number" == typeof e && e % 1 == 0
			}

			function Z() {
				try {
					return "undefined" != typeof Intl && !!Intl.RelativeTimeFormat
				} catch (e) {
					return !1
				}
			}

			function X(e, t, o) {
				if (0 !== e.length) return e.reduce((function(e, i) {
					var r = [t(i), i];
					return e && o(e[0], r[0]) === e[0] ? e : r
				}), null)[1]
			}

			function K(e, t) {
				return Object.prototype.hasOwnProperty.call(e, t)
			}

			function Q(e, t, o) {
				return Y(e) && e >= t && e <= o
			}

			function ee(e, t) {
				return void 0 === t && (t = 2), e < 0 ? "-" + ("" + -e).padStart(t, "0") : ("" + e).padStart(t, "0")
			}

			function te(e) {
				return H(e) || null === e || "" === e ? void 0 : parseInt(e, 10)
			}

			function oe(e) {
				return H(e) || null === e || "" === e ? void 0 : parseFloat(e)
			}

			function ie(e) {
				if (!H(e) && null !== e && "" !== e) {
					var t = 1e3 * parseFloat("0." + e);
					return Math.floor(t)
				}
			}

			function re(e, t, o) {
				void 0 === o && (o = !1);
				var i = Math.pow(10, t);
				return (o ? Math.trunc : Math.round)(e * i) / i
			}

			function ne(e) {
				return e % 4 == 0 && (e % 100 != 0 || e % 400 == 0)
			}

			function ae(e) {
				return ne(e) ? 366 : 365
			}

			function se(e, t) {
				var o = function(e, t) {
					return e - t * Math.floor(e / t)
				}(t - 1, 12) + 1;
				return 2 === o ? ne(e + (t - o) / 12) ? 29 : 28 : [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][o - 1]
			}

			function de(e) {
				var t = Date.UTC(e.year, e.month - 1, e.day, e.hour, e.minute, e.second, e.millisecond);
				return e.year < 100 && e.year >= 0 && (t = new Date(t)).setUTCFullYear(t.getUTCFullYear() - 1900), +t
			}

			function le(e) {
				var t = (e + Math.floor(e / 4) - Math.floor(e / 100) + Math.floor(e / 400)) % 7,
					o = e - 1,
					i = (o + Math.floor(o / 4) - Math.floor(o / 100) + Math.floor(o / 400)) % 7;
				return 4 === t || 3 === i ? 53 : 52
			}

			function ue(e) {
				return e > 99 ? e : e > 60 ? 1900 + e : 2e3 + e
			}

			function ce(e, t, o, i) {
				void 0 === i && (i = null);
				var r = new Date(e),
					a = {
						hourCycle: "h23",
						year: "numeric",
						month: "2-digit",
						day: "2-digit",
						hour: "2-digit",
						minute: "2-digit"
					};
				i && (a.timeZone = i);
				var s = n({
						timeZoneName: t
					}, a),
					d = new Intl.DateTimeFormat(o, s).formatToParts(r).find((function(e) {
						return "timezonename" === e.type.toLowerCase()
					}));
				return d ? d.value : null
			}

			function pe(e, t) {
				var o = parseInt(e, 10);
				Number.isNaN(o) && (o = 0);
				var i = parseInt(t, 10) || 0;
				return 60 * o + (o < 0 || Object.is(o, -0) ? -i : i)
			}

			function ve(e) {
				var t = Number(e);
				if ("boolean" == typeof e || "" === e || Number.isNaN(t)) throw new k("Invalid unit value " + e);
				return t
			}

			function me(e, t) {
				var o = {};
				for (var i in e)
					if (K(e, i)) {
						var r = e[i];
						if (null == r) continue;
						o[t(i)] = ve(r)
					} return o
			}

			function fe(e, t) {
				var o = Math.trunc(Math.abs(e / 60)),
					i = Math.trunc(Math.abs(e % 60)),
					r = e >= 0 ? "+" : "-";
				switch (t) {
					case "short":
						return "" + r + ee(o, 2) + ":" + ee(i, 2);
					case "narrow":
						return "" + r + o + (i > 0 ? ":" + i : "");
					case "techie":
						return "" + r + ee(o, 2) + ee(i, 2);
					default:
						throw new RangeError("Value format " + t + " is out of range for property format")
				}
			}

			function ge(e) {
				return function(e, t) {
					return t.reduce((function(t, o) {
						return t[o] = e[o], t
					}), {})
				}(e, ["hour", "minute", "second", "millisecond"])
			}
			var he = /[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/,
				ye = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
				be = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
				ke = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];

			function Se(e) {
				switch (e) {
					case "narrow":
						return [].concat(ke);
					case "short":
						return [].concat(be);
					case "long":
						return [].concat(ye);
					case "numeric":
						return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];
					case "2-digit":
						return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
					default:
						return null
				}
			}
			var we = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
				Oe = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
				Te = ["M", "T", "W", "T", "F", "S", "S"];

			function Ne(e) {
				switch (e) {
					case "narrow":
						return [].concat(Te);
					case "short":
						return [].concat(Oe);
					case "long":
						return [].concat(we);
					case "numeric":
						return ["1", "2", "3", "4", "5", "6", "7"];
					default:
						return null
				}
			}
			var Re = ["AM", "PM"],
				$e = ["Before Christ", "Anno Domini"],
				Ce = ["BC", "AD"],
				Ie = ["B", "A"];

			function Ee(e) {
				switch (e) {
					case "narrow":
						return [].concat(Ie);
					case "short":
						return [].concat(Ce);
					case "long":
						return [].concat($e);
					default:
						return null
				}
			}

			function Ae(e, t) {
				for (var o, i = "", r = v(e); !(o = r()).done;) {
					var n = o.value;
					n.literal ? i += n.val : i += t(n.val)
				}
				return i
			}
			var Pe = {
					D: N,
					DD: R,
					DDD: C,
					DDDD: I,
					t: E,
					tt: A,
					ttt: P,
					tttt: x,
					T: F,
					TT: j,
					TTT: M,
					TTTT: D,
					f: J,
					ff: B,
					fff: U,
					ffff: W,
					F: _,
					FF: V,
					FFF: q,
					FFFF: G
				},
				xe = function() {
					function e(e, t) {
						this.opts = t, this.loc = e, this.systemLoc = null
					}
					e.create = function(t, o) {
						return void 0 === o && (o = {}), new e(t, o)
					}, e.parseFormat = function(e) {
						for (var t = null, o = "", i = !1, r = [], n = 0; n < e.length; n++) {
							var a = e.charAt(n);
							"'" === a ? (o.length > 0 && r.push({
								literal: i,
								val: o
							}), t = null, o = "", i = !i) : i ? o += a : a === t ? o += a : (o.length > 0 && r.push({
								literal: !1,
								val: o
							}), o = a, t = a)
						}
						return o.length > 0 && r.push({
							literal: i,
							val: o
						}), r
					}, e.macroTokenToFormatOpts = function(e) {
						return Pe[e]
					};
					var t = e.prototype;
					return t.formatWithSystemDefault = function(e, t) {
						return null === this.systemLoc && (this.systemLoc = this.loc.redefaultToSystem()), this.systemLoc.dtFormatter(e, n({}, this.opts, t)).format()
					}, t.formatDateTime = function(e, t) {
						return void 0 === t && (t = {}), this.loc.dtFormatter(e, n({}, this.opts, t)).format()
					}, t.formatDateTimeParts = function(e, t) {
						return void 0 === t && (t = {}), this.loc.dtFormatter(e, n({}, this.opts, t)).formatToParts()
					}, t.resolvedOptions = function(e, t) {
						return void 0 === t && (t = {}), this.loc.dtFormatter(e, n({}, this.opts, t)).resolvedOptions()
					}, t.num = function(e, t) {
						if (void 0 === t && (t = 0), this.opts.forceSimple) return ee(e, t);
						var o = n({}, this.opts);
						return t > 0 && (o.padTo = t), this.loc.numberFormatter(o).format(e)
					}, t.formatDateTimeFromString = function(t, o) {
						var i = this,
							r = "en" === this.loc.listingMode(),
							n = this.loc.outputCalendar && "gregory" !== this.loc.outputCalendar,
							a = function(e, o) {
								return i.loc.extract(t, e, o)
							},
							s = function(e) {
								return t.isOffsetFixed && 0 === t.offset && e.allowZ ? "Z" : t.isValid ? t.zone.formatOffset(t.ts, e.format) : ""
							},
							d = function() {
								return r ? function(e) {
									return Re[e.hour < 12 ? 0 : 1]
								}(t) : a({
									hour: "numeric",
									hourCycle: "h12"
								}, "dayperiod")
							},
							l = function(e, o) {
								return r ? function(e, t) {
									return Se(t)[e.month - 1]
								}(t, e) : a(o ? {
									month: e
								} : {
									month: e,
									day: "numeric"
								}, "month")
							},
							u = function(e, o) {
								return r ? function(e, t) {
									return Ne(t)[e.weekday - 1]
								}(t, e) : a(o ? {
									weekday: e
								} : {
									weekday: e,
									month: "long",
									day: "numeric"
								}, "weekday")
							},
							c = function(e) {
								return r ? function(e, t) {
									return Ee(t)[e.year < 0 ? 0 : 1]
								}(t, e) : a({
									era: e
								}, "era")
							};
						return Ae(e.parseFormat(o), (function(o) {
							switch (o) {
								case "S":
									return i.num(t.millisecond);
								case "u":
								case "SSS":
									return i.num(t.millisecond, 3);
								case "s":
									return i.num(t.second);
								case "ss":
									return i.num(t.second, 2);
								case "uu":
									return i.num(Math.floor(t.millisecond / 10), 2);
								case "uuu":
									return i.num(Math.floor(t.millisecond / 100));
								case "m":
									return i.num(t.minute);
								case "mm":
									return i.num(t.minute, 2);
								case "h":
									return i.num(t.hour % 12 == 0 ? 12 : t.hour % 12);
								case "hh":
									return i.num(t.hour % 12 == 0 ? 12 : t.hour % 12, 2);
								case "H":
									return i.num(t.hour);
								case "HH":
									return i.num(t.hour, 2);
								case "Z":
									return s({
										format: "narrow",
										allowZ: i.opts.allowZ
									});
								case "ZZ":
									return s({
										format: "short",
										allowZ: i.opts.allowZ
									});
								case "ZZZ":
									return s({
										format: "techie",
										allowZ: i.opts.allowZ
									});
								case "ZZZZ":
									return t.zone.offsetName(t.ts, {
										format: "short",
										locale: i.loc.locale
									});
								case "ZZZZZ":
									return t.zone.offsetName(t.ts, {
										format: "long",
										locale: i.loc.locale
									});
								case "z":
									return t.zoneName;
								case "a":
									return d();
								case "d":
									return n ? a({
										day: "numeric"
									}, "day") : i.num(t.day);
								case "dd":
									return n ? a({
										day: "2-digit"
									}, "day") : i.num(t.day, 2);
								case "c":
									return i.num(t.weekday);
								case "ccc":
									return u("short", !0);
								case "cccc":
									return u("long", !0);
								case "ccccc":
									return u("narrow", !0);
								case "E":
									return i.num(t.weekday);
								case "EEE":
									return u("short", !1);
								case "EEEE":
									return u("long", !1);
								case "EEEEE":
									return u("narrow", !1);
								case "L":
									return n ? a({
										month: "numeric",
										day: "numeric"
									}, "month") : i.num(t.month);
								case "LL":
									return n ? a({
										month: "2-digit",
										day: "numeric"
									}, "month") : i.num(t.month, 2);
								case "LLL":
									return l("short", !0);
								case "LLLL":
									return l("long", !0);
								case "LLLLL":
									return l("narrow", !0);
								case "M":
									return n ? a({
										month: "numeric"
									}, "month") : i.num(t.month);
								case "MM":
									return n ? a({
										month: "2-digit"
									}, "month") : i.num(t.month, 2);
								case "MMM":
									return l("short", !1);
								case "MMMM":
									return l("long", !1);
								case "MMMMM":
									return l("narrow", !1);
								case "y":
									return n ? a({
										year: "numeric"
									}, "year") : i.num(t.year);
								case "yy":
									return n ? a({
										year: "2-digit"
									}, "year") : i.num(t.year.toString().slice(-2), 2);
								case "yyyy":
									return n ? a({
										year: "numeric"
									}, "year") : i.num(t.year, 4);
								case "yyyyyy":
									return n ? a({
										year: "numeric"
									}, "year") : i.num(t.year, 6);
								case "G":
									return c("short");
								case "GG":
									return c("long");
								case "GGGGG":
									return c("narrow");
								case "kk":
									return i.num(t.weekYear.toString().slice(-2), 2);
								case "kkkk":
									return i.num(t.weekYear, 4);
								case "W":
									return i.num(t.weekNumber);
								case "WW":
									return i.num(t.weekNumber, 2);
								case "o":
									return i.num(t.ordinal);
								case "ooo":
									return i.num(t.ordinal, 3);
								case "q":
									return i.num(t.quarter);
								case "qq":
									return i.num(t.quarter, 2);
								case "X":
									return i.num(Math.floor(t.ts / 1e3));
								case "x":
									return i.num(t.ts);
								default:
									return function(o) {
										var r = e.macroTokenToFormatOpts(o);
										return r ? i.formatWithSystemDefault(t, r) : o
									}(o)
							}
						}))
					}, t.formatDurationFromString = function(t, o) {
						var i, r = this,
							n = function(e) {
								switch (e[0]) {
									case "S":
										return "millisecond";
									case "s":
										return "second";
									case "m":
										return "minute";
									case "h":
										return "hour";
									case "d":
										return "day";
									case "w":
										return "week";
									case "M":
										return "month";
									case "y":
										return "year";
									default:
										return null
								}
							},
							a = e.parseFormat(o),
							s = a.reduce((function(e, t) {
								var o = t.literal,
									i = t.val;
								return o ? e : e.concat(i)
							}), []),
							d = t.shiftTo.apply(t, s.map(n).filter((function(e) {
								return e
							})));
						return Ae(a, (i = d, function(e) {
							var t = n(e);
							return t ? r.num(i.get(t), e.length) : e
						}))
					}, e
				}(),
				Fe = function() {
					function e(e, t) {
						this.reason = e, this.explanation = t
					}
					return e.prototype.toMessage = function() {
						return this.explanation ? this.reason + ": " + this.explanation : this.reason
					}, e
				}(),
				je = function() {
					function e() {}
					var t = e.prototype;
					return t.offsetName = function(e, t) {
						throw new S
					}, t.formatOffset = function(e, t) {
						throw new S
					}, t.offset = function(e) {
						throw new S
					}, t.equals = function(e) {
						throw new S
					}, r(e, [{
						key: "type",
						get: function() {
							throw new S
						}
					}, {
						key: "name",
						get: function() {
							throw new S
						}
					}, {
						key: "ianaName",
						get: function() {
							return this.name
						}
					}, {
						key: "isUniversal",
						get: function() {
							throw new S
						}
					}, {
						key: "isValid",
						get: function() {
							throw new S
						}
					}]), e
				}(),
				Me = null,
				De = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					a(t, e);
					var o = t.prototype;
					return o.offsetName = function(e, t) {
						return ce(e, t.format, t.locale)
					}, o.formatOffset = function(e, t) {
						return fe(this.offset(e), t)
					}, o.offset = function(e) {
						return -new Date(e).getTimezoneOffset()
					}, o.equals = function(e) {
						return "system" === e.type
					}, r(t, [{
						key: "type",
						get: function() {
							return "system"
						}
					}, {
						key: "name",
						get: function() {
							return (new Intl.DateTimeFormat).resolvedOptions().timeZone
						}
					}, {
						key: "isUniversal",
						get: function() {
							return !1
						}
					}, {
						key: "isValid",
						get: function() {
							return !0
						}
					}], [{
						key: "instance",
						get: function() {
							return null === Me && (Me = new t), Me
						}
					}]), t
				}(je),
				Je = {};
			var _e = {
				year: 0,
				month: 1,
				day: 2,
				era: 3,
				hour: 4,
				minute: 5,
				second: 6
			};
			var Be = {},
				Ve = function(e) {
					function t(o) {
						var i;
						return (i = e.call(this) || this).zoneName = o, i.valid = t.isValidZone(o), i
					}
					a(t, e), t.create = function(e) {
						return Be[e] || (Be[e] = new t(e)), Be[e]
					}, t.resetCache = function() {
						Be = {}, Je = {}
					}, t.isValidSpecifier = function(e) {
						return this.isValidZone(e)
					}, t.isValidZone = function(e) {
						if (!e) return !1;
						try {
							return new Intl.DateTimeFormat("en-US", {
								timeZone: e
							}).format(), !0
						} catch (t) {
							return !1
						}
					};
					var o = t.prototype;
					return o.offsetName = function(e, t) {
						return ce(e, t.format, t.locale, this.name)
					}, o.formatOffset = function(e, t) {
						return fe(this.offset(e), t)
					}, o.offset = function(e) {
						var t = new Date(e);
						if (isNaN(t)) return NaN;
						var o, i = (o = this.name, Je[o] || (Je[o] = new Intl.DateTimeFormat("en-US", {
								hour12: !1,
								timeZone: o,
								year: "numeric",
								month: "2-digit",
								day: "2-digit",
								hour: "2-digit",
								minute: "2-digit",
								second: "2-digit",
								era: "short"
							})), Je[o]),
							r = i.formatToParts ? function(e, t) {
								for (var o = e.formatToParts(t), i = [], r = 0; r < o.length; r++) {
									var n = o[r],
										a = n.type,
										s = n.value,
										d = _e[a];
									"era" === a ? i[d] = s : H(d) || (i[d] = parseInt(s, 10))
								}
								return i
							}(i, t) : function(e, t) {
								var o = e.format(t).replace(/\u200E/g, ""),
									i = /(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(o),
									r = i[1],
									n = i[2];
								return [i[3], r, n, i[4], i[5], i[6], i[7]]
							}(i, t),
							n = r[0],
							a = r[1],
							s = r[2],
							d = r[3],
							l = r[4],
							u = r[5],
							c = r[6];
						"BC" === d && (n = 1 - Math.abs(n));
						var p = +t,
							v = p % 1e3;
						return (de({
							year: n,
							month: a,
							day: s,
							hour: 24 === l ? 0 : l,
							minute: u,
							second: c,
							millisecond: 0
						}) - (p -= v >= 0 ? v : 1e3 + v)) / 6e4
					}, o.equals = function(e) {
						return "iana" === e.type && e.name === this.name
					}, r(t, [{
						key: "type",
						get: function() {
							return "iana"
						}
					}, {
						key: "name",
						get: function() {
							return this.zoneName
						}
					}, {
						key: "isUniversal",
						get: function() {
							return !1
						}
					}, {
						key: "isValid",
						get: function() {
							return this.valid
						}
					}]), t
				}(je),
				Le = null,
				Ue = function(e) {
					function t(t) {
						var o;
						return (o = e.call(this) || this).fixed = t, o
					}
					a(t, e), t.instance = function(e) {
						return 0 === e ? t.utcInstance : new t(e)
					}, t.parseSpecifier = function(e) {
						if (e) {
							var o = e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);
							if (o) return new t(pe(o[1], o[2]))
						}
						return null
					};
					var o = t.prototype;
					return o.offsetName = function() {
						return this.name
					}, o.formatOffset = function(e, t) {
						return fe(this.fixed, t)
					}, o.offset = function() {
						return this.fixed
					}, o.equals = function(e) {
						return "fixed" === e.type && e.fixed === this.fixed
					}, r(t, [{
						key: "type",
						get: function() {
							return "fixed"
						}
					}, {
						key: "name",
						get: function() {
							return 0 === this.fixed ? "UTC" : "UTC" + fe(this.fixed, "narrow")
						}
					}, {
						key: "ianaName",
						get: function() {
							return 0 === this.fixed ? "Etc/UTC" : "Etc/GMT" + fe(-this.fixed, "narrow")
						}
					}, {
						key: "isUniversal",
						get: function() {
							return !0
						}
					}, {
						key: "isValid",
						get: function() {
							return !0
						}
					}], [{
						key: "utcInstance",
						get: function() {
							return null === Le && (Le = new t(0)), Le
						}
					}]), t
				}(je),
				qe = function(e) {
					function t(t) {
						var o;
						return (o = e.call(this) || this).zoneName = t, o
					}
					a(t, e);
					var o = t.prototype;
					return o.offsetName = function() {
						return null
					}, o.formatOffset = function() {
						return ""
					}, o.offset = function() {
						return NaN
					}, o.equals = function() {
						return !1
					}, r(t, [{
						key: "type",
						get: function() {
							return "invalid"
						}
					}, {
						key: "name",
						get: function() {
							return this.zoneName
						}
					}, {
						key: "isUniversal",
						get: function() {
							return !1
						}
					}, {
						key: "isValid",
						get: function() {
							return !1
						}
					}]), t
				}(je);

			function We(e, t) {
				if (H(e) || null === e) return t;
				if (e instanceof je) return e;
				if ("string" == typeof e) {
					var o = e.toLowerCase();
					return "local" === o || "system" === o ? t : "utc" === o || "gmt" === o ? Ue.utcInstance : Ue.parseSpecifier(o) || Ve.create(e)
				}
				return z(e) ? Ue.instance(e) : "object" == typeof e && e.offset && "number" == typeof e.offset ? e : new qe(e)
			}
			var Ge, He = function() {
					return Date.now()
				},
				ze = "system",
				Ye = null,
				Ze = null,
				Xe = null,
				Ke = function() {
					function e() {}
					return e.resetCaches = function() {
						ct.resetCache(), Ve.resetCache()
					}, r(e, null, [{
						key: "now",
						get: function() {
							return He
						},
						set: function(e) {
							He = e
						}
					}, {
						key: "defaultZone",
						get: function() {
							return We(ze, De.instance)
						},
						set: function(e) {
							ze = e
						}
					}, {
						key: "defaultLocale",
						get: function() {
							return Ye
						},
						set: function(e) {
							Ye = e
						}
					}, {
						key: "defaultNumberingSystem",
						get: function() {
							return Ze
						},
						set: function(e) {
							Ze = e
						}
					}, {
						key: "defaultOutputCalendar",
						get: function() {
							return Xe
						},
						set: function(e) {
							Xe = e
						}
					}, {
						key: "throwOnInvalid",
						get: function() {
							return Ge
						},
						set: function(e) {
							Ge = e
						}
					}]), e
				}(),
				Qe = ["base"],
				et = ["padTo", "floor"],
				tt = {};
			var ot = {};

			function it(e, t) {
				void 0 === t && (t = {});
				var o = JSON.stringify([e, t]),
					i = ot[o];
				return i || (i = new Intl.DateTimeFormat(e, t), ot[o] = i), i
			}
			var rt = {};
			var nt = {};
			var at = null;

			function st(e, t, o, i, r) {
				var n = e.listingMode(o);
				return "error" === n ? null : "en" === n ? i(t) : r(t)
			}
			var dt = function() {
					function e(e, t, o) {
						this.padTo = o.padTo || 0, this.floor = o.floor || !1, o.padTo, o.floor;
						var i = c(o, et);
						if (!t || Object.keys(i).length > 0) {
							var r = n({
								useGrouping: !1
							}, o);
							o.padTo > 0 && (r.minimumIntegerDigits = o.padTo), this.inf = function(e, t) {
								void 0 === t && (t = {});
								var o = JSON.stringify([e, t]),
									i = rt[o];
								return i || (i = new Intl.NumberFormat(e, t), rt[o] = i), i
							}(e, r)
						}
					}
					return e.prototype.format = function(e) {
						if (this.inf) {
							var t = this.floor ? Math.floor(e) : e;
							return this.inf.format(t)
						}
						return ee(this.floor ? Math.floor(e) : re(e, 3), this.padTo)
					}, e
				}(),
				lt = function() {
					function e(e, t, o) {
						var i;
						if (this.opts = o, e.zone.isUniversal) {
							var r = e.offset / 60 * -1,
								a = r >= 0 ? "Etc/GMT+" + r : "Etc/GMT" + r;
							0 !== e.offset && Ve.create(a).valid ? (i = a, this.dt = e) : (i = "UTC", o.timeZoneName ? this.dt = e : this.dt = 0 === e.offset ? e : ui.fromMillis(e.ts + 60 * e.offset * 1e3))
						} else "system" === e.zone.type ? this.dt = e : (this.dt = e, i = e.zone.name);
						var s = n({}, this.opts);
						i && (s.timeZone = i), this.dtf = it(t, s)
					}
					var t = e.prototype;
					return t.format = function() {
						return this.dtf.format(this.dt.toJSDate())
					}, t.formatToParts = function() {
						return this.dtf.formatToParts(this.dt.toJSDate())
					}, t.resolvedOptions = function() {
						return this.dtf.resolvedOptions()
					}, e
				}(),
				ut = function() {
					function e(e, t, o) {
						this.opts = n({
							style: "long"
						}, o), !t && Z() && (this.rtf = function(e, t) {
							void 0 === t && (t = {});
							var o = t;
							o.base;
							var i = c(o, Qe),
								r = JSON.stringify([e, i]),
								n = nt[r];
							return n || (n = new Intl.RelativeTimeFormat(e, t), nt[r] = n), n
						}(e, o))
					}
					var t = e.prototype;
					return t.format = function(e, t) {
						return this.rtf ? this.rtf.format(e, t) : function(e, t, o, i) {
							void 0 === o && (o = "always"), void 0 === i && (i = !1);
							var r = {
									years: ["year", "yr."],
									quarters: ["quarter", "qtr."],
									months: ["month", "mo."],
									weeks: ["week", "wk."],
									days: ["day", "day", "days"],
									hours: ["hour", "hr."],
									minutes: ["minute", "min."],
									seconds: ["second", "sec."]
								},
								n = -1 === ["hours", "minutes", "seconds"].indexOf(e);
							if ("auto" === o && n) {
								var a = "days" === e;
								switch (t) {
									case 1:
										return a ? "tomorrow" : "next " + r[e][0];
									case -1:
										return a ? "yesterday" : "last " + r[e][0];
									case 0:
										return a ? "today" : "this " + r[e][0]
								}
							}
							var s = Object.is(t, -0) || t < 0,
								d = Math.abs(t),
								l = 1 === d,
								u = r[e],
								c = i ? l ? u[1] : u[2] || u[1] : l ? r[e][0] : e;
							return s ? d + " " + c + " ago" : "in " + d + " " + c
						}(t, e, this.opts.numeric, "long" !== this.opts.style)
					}, t.formatToParts = function(e, t) {
						return this.rtf ? this.rtf.formatToParts(e, t) : []
					}, e
				}(),
				ct = function() {
					function e(e, t, o, i) {
						var r = function(e) {
								var t = e.indexOf("-u-");
								if (-1 === t) return [e];
								var o, i = e.substring(0, t);
								try {
									o = it(e).resolvedOptions()
								} catch (n) {
									o = it(i).resolvedOptions()
								}
								var r = o;
								return [i, r.numberingSystem, r.calendar]
							}(e),
							n = r[0],
							a = r[1],
							s = r[2];
						this.locale = n, this.numberingSystem = t || a || null, this.outputCalendar = o || s || null, this.intl = function(e, t, o) {
							return o || t ? (e += "-u", o && (e += "-ca-" + o), t && (e += "-nu-" + t), e) : e
						}(this.locale, this.numberingSystem, this.outputCalendar), this.weekdaysCache = {
							format: {},
							standalone: {}
						}, this.monthsCache = {
							format: {},
							standalone: {}
						}, this.meridiemCache = null, this.eraCache = {}, this.specifiedLocale = i, this.fastNumbersCached = null
					}
					e.fromOpts = function(t) {
						return e.create(t.locale, t.numberingSystem, t.outputCalendar, t.defaultToEN)
					}, e.create = function(t, o, i, r) {
						void 0 === r && (r = !1);
						var n = t || Ke.defaultLocale;
						return new e(n || (r ? "en-US" : at || (at = (new Intl.DateTimeFormat).resolvedOptions().locale)), o || Ke.defaultNumberingSystem, i || Ke.defaultOutputCalendar, n)
					}, e.resetCache = function() {
						at = null, ot = {}, rt = {}, nt = {}
					}, e.fromObject = function(t) {
						var o = void 0 === t ? {} : t,
							i = o.locale,
							r = o.numberingSystem,
							n = o.outputCalendar;
						return e.create(i, r, n)
					};
					var t = e.prototype;
					return t.listingMode = function() {
						var e = this.isEnglish(),
							t = !(null !== this.numberingSystem && "latn" !== this.numberingSystem || null !== this.outputCalendar && "gregory" !== this.outputCalendar);
						return e && t ? "en" : "intl"
					}, t.clone = function(t) {
						return t && 0 !== Object.getOwnPropertyNames(t).length ? e.create(t.locale || this.specifiedLocale, t.numberingSystem || this.numberingSystem, t.outputCalendar || this.outputCalendar, t.defaultToEN || !1) : this
					}, t.redefaultToEN = function(e) {
						return void 0 === e && (e = {}), this.clone(n({}, e, {
							defaultToEN: !0
						}))
					}, t.redefaultToSystem = function(e) {
						return void 0 === e && (e = {}), this.clone(n({}, e, {
							defaultToEN: !1
						}))
					}, t.months = function(e, t, o) {
						var i = this;
						return void 0 === t && (t = !1), void 0 === o && (o = !0), st(this, e, o, Se, (function() {
							var o = t ? {
									month: e,
									day: "numeric"
								} : {
									month: e
								},
								r = t ? "format" : "standalone";
							return i.monthsCache[r][e] || (i.monthsCache[r][e] = function(e) {
								for (var t = [], o = 1; o <= 12; o++) {
									var i = ui.utc(2016, o, 1);
									t.push(e(i))
								}
								return t
							}((function(e) {
								return i.extract(e, o, "month")
							}))), i.monthsCache[r][e]
						}))
					}, t.weekdays = function(e, t, o) {
						var i = this;
						return void 0 === t && (t = !1), void 0 === o && (o = !0), st(this, e, o, Ne, (function() {
							var o = t ? {
									weekday: e,
									year: "numeric",
									month: "long",
									day: "numeric"
								} : {
									weekday: e
								},
								r = t ? "format" : "standalone";
							return i.weekdaysCache[r][e] || (i.weekdaysCache[r][e] = function(e) {
								for (var t = [], o = 1; o <= 7; o++) {
									var i = ui.utc(2016, 11, 13 + o);
									t.push(e(i))
								}
								return t
							}((function(e) {
								return i.extract(e, o, "weekday")
							}))), i.weekdaysCache[r][e]
						}))
					}, t.meridiems = function(e) {
						var t = this;
						return void 0 === e && (e = !0), st(this, void 0, e, (function() {
							return Re
						}), (function() {
							if (!t.meridiemCache) {
								var e = {
									hour: "numeric",
									hourCycle: "h12"
								};
								t.meridiemCache = [ui.utc(2016, 11, 13, 9), ui.utc(2016, 11, 13, 19)].map((function(o) {
									return t.extract(o, e, "dayperiod")
								}))
							}
							return t.meridiemCache
						}))
					}, t.eras = function(e, t) {
						var o = this;
						return void 0 === t && (t = !0), st(this, e, t, Ee, (function() {
							var t = {
								era: e
							};
							return o.eraCache[e] || (o.eraCache[e] = [ui.utc(-40, 1, 1), ui.utc(2017, 1, 1)].map((function(e) {
								return o.extract(e, t, "era")
							}))), o.eraCache[e]
						}))
					}, t.extract = function(e, t, o) {
						var i = this.dtFormatter(e, t).formatToParts().find((function(e) {
							return e.type.toLowerCase() === o
						}));
						return i ? i.value : null
					}, t.numberFormatter = function(e) {
						return void 0 === e && (e = {}), new dt(this.intl, e.forceSimple || this.fastNumbers, e)
					}, t.dtFormatter = function(e, t) {
						return void 0 === t && (t = {}), new lt(e, this.intl, t)
					}, t.relFormatter = function(e) {
						return void 0 === e && (e = {}), new ut(this.intl, this.isEnglish(), e)
					}, t.listFormatter = function(e) {
						return void 0 === e && (e = {}),
							function(e, t) {
								void 0 === t && (t = {});
								var o = JSON.stringify([e, t]),
									i = tt[o];
								return i || (i = new Intl.ListFormat(e, t), tt[o] = i), i
							}(this.intl, e)
					}, t.isEnglish = function() {
						return "en" === this.locale || "en-us" === this.locale.toLowerCase() || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")
					}, t.equals = function(e) {
						return this.locale === e.locale && this.numberingSystem === e.numberingSystem && this.outputCalendar === e.outputCalendar
					}, r(e, [{
						key: "fastNumbers",
						get: function() {
							var e;
							return null == this.fastNumbersCached && (this.fastNumbersCached = (!(e = this).numberingSystem || "latn" === e.numberingSystem) && ("latn" === e.numberingSystem || !e.locale || e.locale.startsWith("en") || "latn" === new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem)), this.fastNumbersCached
						}
					}]), e
				}();

			function pt() {
				for (var e = arguments.length, t = new Array(e), o = 0; o < e; o++) t[o] = arguments[o];
				var i = t.reduce((function(e, t) {
					return e + t.source
				}), "");
				return RegExp("^" + i + "$")
			}

			function vt() {
				for (var e = arguments.length, t = new Array(e), o = 0; o < e; o++) t[o] = arguments[o];
				return function(e) {
					return t.reduce((function(t, o) {
						var i = t[0],
							r = t[1],
							a = t[2],
							s = o(e, a),
							d = s[0],
							l = s[1],
							u = s[2];
						return [n({}, i, d), l || r, u]
					}), [{}, null, 1]).slice(0, 2)
				}
			}

			function mt(e) {
				if (null == e) return [null, null];
				for (var t = arguments.length, o = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) o[i - 1] = arguments[i];
				for (var r = 0, n = o; r < n.length; r++) {
					var a = n[r],
						s = a[0],
						d = a[1],
						l = s.exec(e);
					if (l) return d(l)
				}
				return [null, null]
			}

			function ft() {
				for (var e = arguments.length, t = new Array(e), o = 0; o < e; o++) t[o] = arguments[o];
				return function(e, o) {
					var i, r = {};
					for (i = 0; i < t.length; i++) r[t[i]] = te(e[o + i]);
					return [r, null, o + i]
				}
			}
			var gt = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,
				ht = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,
				yt = RegExp("" + ht.source + ("(?:" + gt.source + "?(?:\\[(" + he.source + ")\\])?)?")),
				bt = RegExp("(?:T" + yt.source + ")?"),
				kt = ft("weekYear", "weekNumber", "weekDay"),
				St = ft("year", "ordinal"),
				wt = RegExp(ht.source + " ?(?:" + gt.source + "|(" + he.source + "))?"),
				Ot = RegExp("(?: " + wt.source + ")?");

			function Tt(e, t, o) {
				var i = e[t];
				return H(i) ? o : te(i)
			}

			function Nt(e, t) {
				return [{
					hours: Tt(e, t, 0),
					minutes: Tt(e, t + 1, 0),
					seconds: Tt(e, t + 2, 0),
					milliseconds: ie(e[t + 3])
				}, null, t + 4]
			}

			function Rt(e, t) {
				var o = !e[t] && !e[t + 1],
					i = pe(e[t + 1], e[t + 2]);
				return [{}, o ? null : Ue.instance(i), t + 3]
			}

			function $t(e, t) {
				return [{}, e[t] ? Ve.create(e[t]) : null, t + 1]
			}
			var Ct = RegExp("^T?" + ht.source + "$"),
				It = /^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;

			function Et(e) {
				var t = e[0],
					o = e[1],
					i = e[2],
					r = e[3],
					n = e[4],
					a = e[5],
					s = e[6],
					d = e[7],
					l = e[8],
					u = "-" === t[0],
					c = d && "-" === d[0],
					p = function(e, t) {
						return void 0 === t && (t = !1), void 0 !== e && (t || e && u) ? -e : e
					};
				return [{
					years: p(oe(o)),
					months: p(oe(i)),
					weeks: p(oe(r)),
					days: p(oe(n)),
					hours: p(oe(a)),
					minutes: p(oe(s)),
					seconds: p(oe(d), "-0" === d),
					milliseconds: p(ie(l), c)
				}]
			}
			var At = {
				GMT: 0,
				EDT: -240,
				EST: -300,
				CDT: -300,
				CST: -360,
				MDT: -360,
				MST: -420,
				PDT: -420,
				PST: -480
			};

			function Pt(e, t, o, i, r, n, a) {
				var s = {
					year: 2 === t.length ? ue(te(t)) : te(t),
					month: be.indexOf(o) + 1,
					day: te(i),
					hour: te(r),
					minute: te(n)
				};
				return a && (s.second = te(a)), e && (s.weekday = e.length > 3 ? we.indexOf(e) + 1 : Oe.indexOf(e) + 1), s
			}
			var xt = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;

			function Ft(e) {
				var t, o = e[1],
					i = e[2],
					r = e[3],
					n = e[4],
					a = e[5],
					s = e[6],
					d = e[7],
					l = e[8],
					u = e[9],
					c = e[10],
					p = e[11],
					v = Pt(o, n, r, i, a, s, d);
				return t = l ? At[l] : u ? 0 : pe(c, p), [v, new Ue(t)]
			}
			var jt = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,
				Mt = /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,
				Dt = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;

			function Jt(e) {
				var t = e[1],
					o = e[2],
					i = e[3];
				return [Pt(t, e[4], i, o, e[5], e[6], e[7]), Ue.utcInstance]
			}

			function _t(e) {
				var t = e[1],
					o = e[2],
					i = e[3],
					r = e[4],
					n = e[5],
					a = e[6];
				return [Pt(t, e[7], o, i, r, n, a), Ue.utcInstance]
			}
			var Bt = pt(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/, bt),
				Vt = pt(/(\d{4})-?W(\d\d)(?:-?(\d))?/, bt),
				Lt = pt(/(\d{4})-?(\d{3})/, bt),
				Ut = pt(yt),
				qt = vt((function(e, t) {
					return [{
						year: Tt(e, t),
						month: Tt(e, t + 1, 1),
						day: Tt(e, t + 2, 1)
					}, null, t + 3]
				}), Nt, Rt, $t),
				Wt = vt(kt, Nt, Rt, $t),
				Gt = vt(St, Nt, Rt, $t),
				Ht = vt(Nt, Rt, $t);
			var zt = vt(Nt);
			var Yt = pt(/(\d{4})-(\d\d)-(\d\d)/, Ot),
				Zt = pt(wt),
				Xt = vt(Nt, Rt, $t);
			var Kt = {
					weeks: {
						days: 7,
						hours: 168,
						minutes: 10080,
						seconds: 604800,
						milliseconds: 6048e5
					},
					days: {
						hours: 24,
						minutes: 1440,
						seconds: 86400,
						milliseconds: 864e5
					},
					hours: {
						minutes: 60,
						seconds: 3600,
						milliseconds: 36e5
					},
					minutes: {
						seconds: 60,
						milliseconds: 6e4
					},
					seconds: {
						milliseconds: 1e3
					}
				},
				Qt = n({
					years: {
						quarters: 4,
						months: 12,
						weeks: 52,
						days: 365,
						hours: 8760,
						minutes: 525600,
						seconds: 31536e3,
						milliseconds: 31536e6
					},
					quarters: {
						months: 3,
						weeks: 13,
						days: 91,
						hours: 2184,
						minutes: 131040,
						seconds: 7862400,
						milliseconds: 78624e5
					},
					months: {
						weeks: 4,
						days: 30,
						hours: 720,
						minutes: 43200,
						seconds: 2592e3,
						milliseconds: 2592e6
					}
				}, Kt),
				eo = n({
					years: {
						quarters: 4,
						months: 12,
						weeks: 52.1775,
						days: 365.2425,
						hours: 8765.82,
						minutes: 525949.2,
						seconds: 525949.2 * 60,
						milliseconds: 525949.2 * 60 * 1e3
					},
					quarters: {
						months: 3,
						weeks: 13.044375,
						days: 91.310625,
						hours: 2191.455,
						minutes: 131487.3,
						seconds: 525949.2 * 60 / 4,
						milliseconds: 7889237999.999999
					},
					months: {
						weeks: 30.436875 / 7,
						days: 30.436875,
						hours: 730.485,
						minutes: 43829.1,
						seconds: 2629746,
						milliseconds: 2629746e3
					}
				}, Kt),
				to = ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"],
				oo = to.slice(0).reverse();

			function io(e, t, o) {
				void 0 === o && (o = !1);
				var i = {
					values: o ? t.values : n({}, e.values, t.values || {}),
					loc: e.loc.clone(t.loc),
					conversionAccuracy: t.conversionAccuracy || e.conversionAccuracy
				};
				return new no(i)
			}

			function ro(e, t, o, i, r) {
				var n = e[r][o],
					a = t[o] / n,
					s = !(Math.sign(a) === Math.sign(i[r])) && 0 !== i[r] && Math.abs(a) <= 1 ? function(e) {
						return e < 0 ? Math.floor(e) : Math.ceil(e)
					}(a) : Math.trunc(a);
				i[r] += s, t[o] -= s * n
			}
			var no = function() {
					function e(e) {
						var t = "longterm" === e.conversionAccuracy || !1;
						this.values = e.values, this.loc = e.loc || ct.create(), this.conversionAccuracy = t ? "longterm" : "casual", this.invalid = e.invalid || null, this.matrix = t ? eo : Qt, this.isLuxonDuration = !0
					}
					e.fromMillis = function(t, o) {
						return e.fromObject({
							milliseconds: t
						}, o)
					}, e.fromObject = function(t, o) {
						if (void 0 === o && (o = {}), null == t || "object" != typeof t) throw new k("Duration.fromObject: argument expected to be an object, got " + (null === t ? "null" : typeof t));
						return new e({
							values: me(t, e.normalizeUnit),
							loc: ct.fromObject(o),
							conversionAccuracy: o.conversionAccuracy
						})
					}, e.fromDurationLike = function(t) {
						if (z(t)) return e.fromMillis(t);
						if (e.isDuration(t)) return t;
						if ("object" == typeof t) return e.fromObject(t);
						throw new k("Unknown duration argument " + t + " of type " + typeof t)
					}, e.fromISO = function(t, o) {
						var i = function(e) {
							return mt(e, [It, Et])
						}(t)[0];
						return i ? e.fromObject(i, o) : e.invalid("unparsable", 'the input "' + t + "\" can't be parsed as ISO 8601")
					}, e.fromISOTime = function(t, o) {
						var i = function(e) {
							return mt(e, [Ct, zt])
						}(t)[0];
						return i ? e.fromObject(i, o) : e.invalid("unparsable", 'the input "' + t + "\" can't be parsed as ISO 8601")
					}, e.invalid = function(t, o) {
						if (void 0 === o && (o = null), !t) throw new k("need to specify a reason the Duration is invalid");
						var i = t instanceof Fe ? t : new Fe(t, o);
						if (Ke.throwOnInvalid) throw new h(i);
						return new e({
							invalid: i
						})
					}, e.normalizeUnit = function(e) {
						var t = {
							year: "years",
							years: "years",
							quarter: "quarters",
							quarters: "quarters",
							month: "months",
							months: "months",
							week: "weeks",
							weeks: "weeks",
							day: "days",
							days: "days",
							hour: "hours",
							hours: "hours",
							minute: "minutes",
							minutes: "minutes",
							second: "seconds",
							seconds: "seconds",
							millisecond: "milliseconds",
							milliseconds: "milliseconds"
						} [e ? e.toLowerCase() : e];
						if (!t) throw new b(e);
						return t
					}, e.isDuration = function(e) {
						return e && e.isLuxonDuration || !1
					};
					var t = e.prototype;
					return t.toFormat = function(e, t) {
						void 0 === t && (t = {});
						var o = n({}, t, {
							floor: !1 !== t.round && !1 !== t.floor
						});
						return this.isValid ? xe.create(this.loc, o).formatDurationFromString(this, e) : "Invalid Duration"
					}, t.toHuman = function(e) {
						var t = this;
						void 0 === e && (e = {});
						var o = to.map((function(o) {
							var i = t.values[o];
							return H(i) ? null : t.loc.numberFormatter(n({
								style: "unit",
								unitDisplay: "long"
							}, e, {
								unit: o.slice(0, -1)
							})).format(i)
						})).filter((function(e) {
							return e
						}));
						return this.loc.listFormatter(n({
							type: "conjunction",
							style: e.listStyle || "narrow"
						}, e)).format(o)
					}, t.toObject = function() {
						return this.isValid ? n({}, this.values) : {}
					}, t.toISO = function() {
						if (!this.isValid) return null;
						var e = "P";
						return 0 !== this.years && (e += this.years + "Y"), 0 === this.months && 0 === this.quarters || (e += this.months + 3 * this.quarters + "M"), 0 !== this.weeks && (e += this.weeks + "W"), 0 !== this.days && (e += this.days + "D"), 0 === this.hours && 0 === this.minutes && 0 === this.seconds && 0 === this.milliseconds || (e += "T"), 0 !== this.hours && (e += this.hours + "H"), 0 !== this.minutes && (e += this.minutes + "M"), 0 === this.seconds && 0 === this.milliseconds || (e += re(this.seconds + this.milliseconds / 1e3, 3) + "S"), "P" === e && (e += "T0S"), e
					}, t.toISOTime = function(e) {
						if (void 0 === e && (e = {}), !this.isValid) return null;
						var t = this.toMillis();
						if (t < 0 || t >= 864e5) return null;
						e = n({
							suppressMilliseconds: !1,
							suppressSeconds: !1,
							includePrefix: !1,
							format: "extended"
						}, e);
						var o = this.shiftTo("hours", "minutes", "seconds", "milliseconds"),
							i = "basic" === e.format ? "hhmm" : "hh:mm";
						e.suppressSeconds && 0 === o.seconds && 0 === o.milliseconds || (i += "basic" === e.format ? "ss" : ":ss", e.suppressMilliseconds && 0 === o.milliseconds || (i += ".SSS"));
						var r = o.toFormat(i);
						return e.includePrefix && (r = "T" + r), r
					}, t.toJSON = function() {
						return this.toISO()
					}, t.toString = function() {
						return this.toISO()
					}, t.toMillis = function() {
						return this.as("milliseconds")
					}, t.valueOf = function() {
						return this.toMillis()
					}, t.plus = function(t) {
						if (!this.isValid) return this;
						for (var o, i = e.fromDurationLike(t), r = {}, n = v(to); !(o = n()).done;) {
							var a = o.value;
							(K(i.values, a) || K(this.values, a)) && (r[a] = i.get(a) + this.get(a))
						}
						return io(this, {
							values: r
						}, !0)
					}, t.minus = function(t) {
						if (!this.isValid) return this;
						var o = e.fromDurationLike(t);
						return this.plus(o.negate())
					}, t.mapUnits = function(e) {
						if (!this.isValid) return this;
						for (var t = {}, o = 0, i = Object.keys(this.values); o < i.length; o++) {
							var r = i[o];
							t[r] = ve(e(this.values[r], r))
						}
						return io(this, {
							values: t
						}, !0)
					}, t.get = function(t) {
						return this[e.normalizeUnit(t)]
					}, t.set = function(t) {
						return this.isValid ? io(this, {
							values: n({}, this.values, me(t, e.normalizeUnit))
						}) : this
					}, t.reconfigure = function(e) {
						var t = void 0 === e ? {} : e,
							o = t.locale,
							i = t.numberingSystem,
							r = t.conversionAccuracy,
							n = {
								loc: this.loc.clone({
									locale: o,
									numberingSystem: i
								})
							};
						return r && (n.conversionAccuracy = r), io(this, n)
					}, t.as = function(e) {
						return this.isValid ? this.shiftTo(e).get(e) : NaN
					}, t.normalize = function() {
						if (!this.isValid) return this;
						var e = this.toObject();
						return function(e, t) {
							oo.reduce((function(o, i) {
								return H(t[i]) ? o : (o && ro(e, t, o, t, i), i)
							}), null)
						}(this.matrix, e), io(this, {
							values: e
						}, !0)
					}, t.shiftTo = function() {
						for (var t = arguments.length, o = new Array(t), i = 0; i < t; i++) o[i] = arguments[i];
						if (!this.isValid) return this;
						if (0 === o.length) return this;
						o = o.map((function(t) {
							return e.normalizeUnit(t)
						}));
						for (var r, n, a = {}, s = {}, d = this.toObject(), l = v(to); !(n = l()).done;) {
							var u = n.value;
							if (o.indexOf(u) >= 0) {
								r = u;
								var c = 0;
								for (var p in s) c += this.matrix[p][u] * s[p], s[p] = 0;
								z(d[u]) && (c += d[u]);
								var m = Math.trunc(c);
								for (var f in a[u] = m, s[u] = (1e3 * c - 1e3 * m) / 1e3, d) to.indexOf(f) > to.indexOf(u) && ro(this.matrix, d, f, a, u)
							} else z(d[u]) && (s[u] = d[u])
						}
						for (var g in s) 0 !== s[g] && (a[r] += g === r ? s[g] : s[g] / this.matrix[r][g]);
						return io(this, {
							values: a
						}, !0).normalize()
					}, t.negate = function() {
						if (!this.isValid) return this;
						for (var e = {}, t = 0, o = Object.keys(this.values); t < o.length; t++) {
							var i = o[t];
							e[i] = 0 === this.values[i] ? 0 : -this.values[i]
						}
						return io(this, {
							values: e
						}, !0)
					}, t.equals = function(e) {
						if (!this.isValid || !e.isValid) return !1;
						if (!this.loc.equals(e.loc)) return !1;
						for (var t, o = v(to); !(t = o()).done;) {
							var i = t.value;
							if (r = this.values[i], n = e.values[i], !(void 0 === r || 0 === r ? void 0 === n || 0 === n : r === n)) return !1
						}
						var r, n;
						return !0
					}, r(e, [{
						key: "locale",
						get: function() {
							return this.isValid ? this.loc.locale : null
						}
					}, {
						key: "numberingSystem",
						get: function() {
							return this.isValid ? this.loc.numberingSystem : null
						}
					}, {
						key: "years",
						get: function() {
							return this.isValid ? this.values.years || 0 : NaN
						}
					}, {
						key: "quarters",
						get: function() {
							return this.isValid ? this.values.quarters || 0 : NaN
						}
					}, {
						key: "months",
						get: function() {
							return this.isValid ? this.values.months || 0 : NaN
						}
					}, {
						key: "weeks",
						get: function() {
							return this.isValid ? this.values.weeks || 0 : NaN
						}
					}, {
						key: "days",
						get: function() {
							return this.isValid ? this.values.days || 0 : NaN
						}
					}, {
						key: "hours",
						get: function() {
							return this.isValid ? this.values.hours || 0 : NaN
						}
					}, {
						key: "minutes",
						get: function() {
							return this.isValid ? this.values.minutes || 0 : NaN
						}
					}, {
						key: "seconds",
						get: function() {
							return this.isValid ? this.values.seconds || 0 : NaN
						}
					}, {
						key: "milliseconds",
						get: function() {
							return this.isValid ? this.values.milliseconds || 0 : NaN
						}
					}, {
						key: "isValid",
						get: function() {
							return null === this.invalid
						}
					}, {
						key: "invalidReason",
						get: function() {
							return this.invalid ? this.invalid.reason : null
						}
					}, {
						key: "invalidExplanation",
						get: function() {
							return this.invalid ? this.invalid.explanation : null
						}
					}]), e
				}(),
				ao = "Invalid Interval";

			function so(e, t) {
				return e && e.isValid ? t && t.isValid ? t < e ? lo.invalid("end before start", "The end of an interval must be after its start, but you had start=" + e.toISO() + " and end=" + t.toISO()) : null : lo.invalid("missing or invalid end") : lo.invalid("missing or invalid start")
			}
			var lo = function() {
					function e(e) {
						this.s = e.start, this.e = e.end, this.invalid = e.invalid || null, this.isLuxonInterval = !0
					}
					e.invalid = function(t, o) {
						if (void 0 === o && (o = null), !t) throw new k("need to specify a reason the Interval is invalid");
						var i = t instanceof Fe ? t : new Fe(t, o);
						if (Ke.throwOnInvalid) throw new g(i);
						return new e({
							invalid: i
						})
					}, e.fromDateTimes = function(t, o) {
						var i = ci(t),
							r = ci(o),
							n = so(i, r);
						return null == n ? new e({
							start: i,
							end: r
						}) : n
					}, e.after = function(t, o) {
						var i = no.fromDurationLike(o),
							r = ci(t);
						return e.fromDateTimes(r, r.plus(i))
					}, e.before = function(t, o) {
						var i = no.fromDurationLike(o),
							r = ci(t);
						return e.fromDateTimes(r.minus(i), r)
					}, e.fromISO = function(t, o) {
						var i = (t || "").split("/", 2),
							r = i[0],
							n = i[1];
						if (r && n) {
							var a, s, d, l;
							try {
								s = (a = ui.fromISO(r, o)).isValid
							} catch (n) {
								s = !1
							}
							try {
								l = (d = ui.fromISO(n, o)).isValid
							} catch (n) {
								l = !1
							}
							if (s && l) return e.fromDateTimes(a, d);
							if (s) {
								var u = no.fromISO(n, o);
								if (u.isValid) return e.after(a, u)
							} else if (l) {
								var c = no.fromISO(r, o);
								if (c.isValid) return e.before(d, c)
							}
						}
						return e.invalid("unparsable", 'the input "' + t + "\" can't be parsed as ISO 8601")
					}, e.isInterval = function(e) {
						return e && e.isLuxonInterval || !1
					};
					var t = e.prototype;
					return t.length = function(e) {
						return void 0 === e && (e = "milliseconds"), this.isValid ? this.toDuration.apply(this, [e]).get(e) : NaN
					}, t.count = function(e) {
						if (void 0 === e && (e = "milliseconds"), !this.isValid) return NaN;
						var t = this.start.startOf(e),
							o = this.end.startOf(e);
						return Math.floor(o.diff(t, e).get(e)) + 1
					}, t.hasSame = function(e) {
						return !!this.isValid && (this.isEmpty() || this.e.minus(1).hasSame(this.s, e))
					}, t.isEmpty = function() {
						return this.s.valueOf() === this.e.valueOf()
					}, t.isAfter = function(e) {
						return !!this.isValid && this.s > e
					}, t.isBefore = function(e) {
						return !!this.isValid && this.e <= e
					}, t.contains = function(e) {
						return !!this.isValid && (this.s <= e && this.e > e)
					}, t.set = function(t) {
						var o = void 0 === t ? {} : t,
							i = o.start,
							r = o.end;
						return this.isValid ? e.fromDateTimes(i || this.s, r || this.e) : this
					}, t.splitAt = function() {
						var t = this;
						if (!this.isValid) return [];
						for (var o = arguments.length, i = new Array(o), r = 0; r < o; r++) i[r] = arguments[r];
						for (var n = i.map(ci).filter((function(e) {
								return t.contains(e)
							})).sort(), a = [], s = this.s, d = 0; s < this.e;) {
							var l = n[d] || this.e,
								u = +l > +this.e ? this.e : l;
							a.push(e.fromDateTimes(s, u)), s = u, d += 1
						}
						return a
					}, t.splitBy = function(t) {
						var o = no.fromDurationLike(t);
						if (!this.isValid || !o.isValid || 0 === o.as("milliseconds")) return [];
						for (var i, r = this.s, n = 1, a = []; r < this.e;) {
							var s = this.start.plus(o.mapUnits((function(e) {
								return e * n
							})));
							i = +s > +this.e ? this.e : s, a.push(e.fromDateTimes(r, i)), r = i, n += 1
						}
						return a
					}, t.divideEqually = function(e) {
						return this.isValid ? this.splitBy(this.length() / e).slice(0, e) : []
					}, t.overlaps = function(e) {
						return this.e > e.s && this.s < e.e
					}, t.abutsStart = function(e) {
						return !!this.isValid && +this.e == +e.s
					}, t.abutsEnd = function(e) {
						return !!this.isValid && +e.e == +this.s
					}, t.engulfs = function(e) {
						return !!this.isValid && (this.s <= e.s && this.e >= e.e)
					}, t.equals = function(e) {
						return !(!this.isValid || !e.isValid) && (this.s.equals(e.s) && this.e.equals(e.e))
					}, t.intersection = function(t) {
						if (!this.isValid) return this;
						var o = this.s > t.s ? this.s : t.s,
							i = this.e < t.e ? this.e : t.e;
						return o >= i ? null : e.fromDateTimes(o, i)
					}, t.union = function(t) {
						if (!this.isValid) return this;
						var o = this.s < t.s ? this.s : t.s,
							i = this.e > t.e ? this.e : t.e;
						return e.fromDateTimes(o, i)
					}, e.merge = function(e) {
						var t = e.sort((function(e, t) {
								return e.s - t.s
							})).reduce((function(e, t) {
								var o = e[0],
									i = e[1];
								return i ? i.overlaps(t) || i.abutsStart(t) ? [o, i.union(t)] : [o.concat([i]), t] : [o, t]
							}), [
								[], null
							]),
							o = t[0],
							i = t[1];
						return i && o.push(i), o
					}, e.xor = function(t) {
						for (var o, i, r = null, n = 0, a = [], s = t.map((function(e) {
								return [{
									time: e.s,
									type: "s"
								}, {
									time: e.e,
									type: "e"
								}]
							})), d = v((o = Array.prototype).concat.apply(o, s).sort((function(e, t) {
								return e.time - t.time
							}))); !(i = d()).done;) {
							var l = i.value;
							1 === (n += "s" === l.type ? 1 : -1) ? r = l.time : (r && +r != +l.time && a.push(e.fromDateTimes(r, l.time)), r = null)
						}
						return e.merge(a)
					}, t.difference = function() {
						for (var t = this, o = arguments.length, i = new Array(o), r = 0; r < o; r++) i[r] = arguments[r];
						return e.xor([this].concat(i)).map((function(e) {
							return t.intersection(e)
						})).filter((function(e) {
							return e && !e.isEmpty()
						}))
					}, t.toString = function() {
						return this.isValid ? "[" + this.s.toISO() + " – " + this.e.toISO() + ")" : ao
					}, t.toISO = function(e) {
						return this.isValid ? this.s.toISO(e) + "/" + this.e.toISO(e) : ao
					}, t.toISODate = function() {
						return this.isValid ? this.s.toISODate() + "/" + this.e.toISODate() : ao
					}, t.toISOTime = function(e) {
						return this.isValid ? this.s.toISOTime(e) + "/" + this.e.toISOTime(e) : ao
					}, t.toFormat = function(e, t) {
						var o = (void 0 === t ? {} : t).separator,
							i = void 0 === o ? " – " : o;
						return this.isValid ? "" + this.s.toFormat(e) + i + this.e.toFormat(e) : ao
					}, t.toDuration = function(e, t) {
						return this.isValid ? this.e.diff(this.s, e, t) : no.invalid(this.invalidReason)
					}, t.mapEndpoints = function(t) {
						return e.fromDateTimes(t(this.s), t(this.e))
					}, r(e, [{
						key: "start",
						get: function() {
							return this.isValid ? this.s : null
						}
					}, {
						key: "end",
						get: function() {
							return this.isValid ? this.e : null
						}
					}, {
						key: "isValid",
						get: function() {
							return null === this.invalidReason
						}
					}, {
						key: "invalidReason",
						get: function() {
							return this.invalid ? this.invalid.reason : null
						}
					}, {
						key: "invalidExplanation",
						get: function() {
							return this.invalid ? this.invalid.explanation : null
						}
					}]), e
				}(),
				uo = function() {
					function e() {}
					return e.hasDST = function(e) {
						void 0 === e && (e = Ke.defaultZone);
						var t = ui.now().setZone(e).set({
							month: 12
						});
						return !e.isUniversal && t.offset !== t.set({
							month: 6
						}).offset
					}, e.isValidIANAZone = function(e) {
						return Ve.isValidZone(e)
					}, e.normalizeZone = function(e) {
						return We(e, Ke.defaultZone)
					}, e.months = function(e, t) {
						void 0 === e && (e = "long");
						var o = void 0 === t ? {} : t,
							i = o.locale,
							r = void 0 === i ? null : i,
							n = o.numberingSystem,
							a = void 0 === n ? null : n,
							s = o.locObj,
							d = void 0 === s ? null : s,
							l = o.outputCalendar,
							u = void 0 === l ? "gregory" : l;
						return (d || ct.create(r, a, u)).months(e)
					}, e.monthsFormat = function(e, t) {
						void 0 === e && (e = "long");
						var o = void 0 === t ? {} : t,
							i = o.locale,
							r = void 0 === i ? null : i,
							n = o.numberingSystem,
							a = void 0 === n ? null : n,
							s = o.locObj,
							d = void 0 === s ? null : s,
							l = o.outputCalendar,
							u = void 0 === l ? "gregory" : l;
						return (d || ct.create(r, a, u)).months(e, !0)
					}, e.weekdays = function(e, t) {
						void 0 === e && (e = "long");
						var o = void 0 === t ? {} : t,
							i = o.locale,
							r = void 0 === i ? null : i,
							n = o.numberingSystem,
							a = void 0 === n ? null : n,
							s = o.locObj;
						return ((void 0 === s ? null : s) || ct.create(r, a, null)).weekdays(e)
					}, e.weekdaysFormat = function(e, t) {
						void 0 === e && (e = "long");
						var o = void 0 === t ? {} : t,
							i = o.locale,
							r = void 0 === i ? null : i,
							n = o.numberingSystem,
							a = void 0 === n ? null : n,
							s = o.locObj;
						return ((void 0 === s ? null : s) || ct.create(r, a, null)).weekdays(e, !0)
					}, e.meridiems = function(e) {
						var t = (void 0 === e ? {} : e).locale,
							o = void 0 === t ? null : t;
						return ct.create(o).meridiems()
					}, e.eras = function(e, t) {
						void 0 === e && (e = "short");
						var o = (void 0 === t ? {} : t).locale,
							i = void 0 === o ? null : o;
						return ct.create(i, null, "gregory").eras(e)
					}, e.features = function() {
						return {
							relative: Z()
						}
					}, e
				}();

			function co(e, t) {
				var o = function(e) {
						return e.toUTC(0, {
							keepLocalTime: !0
						}).startOf("day").valueOf()
					},
					i = o(t) - o(e);
				return Math.floor(no.fromMillis(i).as("days"))
			}

			function po(e, t, o, i) {
				var r = function(e, t, o) {
						for (var i, r, n = {}, a = 0, s = [
								["years", function(e, t) {
									return t.year - e.year
								}],
								["quarters", function(e, t) {
									return t.quarter - e.quarter
								}],
								["months", function(e, t) {
									return t.month - e.month + 12 * (t.year - e.year)
								}],
								["weeks", function(e, t) {
									var o = co(e, t);
									return (o - o % 7) / 7
								}],
								["days", co]
							]; a < s.length; a++) {
							var d = s[a],
								l = d[0],
								u = d[1];
							if (o.indexOf(l) >= 0) {
								var c;
								i = l;
								var p, v = u(e, t);
								if ((r = e.plus(((c = {})[l] = v, c))) > t) e = e.plus(((p = {})[l] = v - 1, p)), v -= 1;
								else e = r;
								n[l] = v
							}
						}
						return [e, n, r, i]
					}(e, t, o),
					n = r[0],
					a = r[1],
					s = r[2],
					d = r[3],
					l = t - n,
					u = o.filter((function(e) {
						return ["hours", "minutes", "seconds", "milliseconds"].indexOf(e) >= 0
					}));
				if (0 === u.length) {
					var c;
					if (s < t) s = n.plus(((c = {})[d] = 1, c));
					s !== n && (a[d] = (a[d] || 0) + l / (s - n))
				}
				var p, v = no.fromObject(a, i);
				return u.length > 0 ? (p = no.fromMillis(l, i)).shiftTo.apply(p, u).plus(v) : v
			}
			var vo = {
					arab: "[٠-٩]",
					arabext: "[۰-۹]",
					bali: "[᭐-᭙]",
					beng: "[০-৯]",
					deva: "[०-९]",
					fullwide: "[０-９]",
					gujr: "[૦-૯]",
					hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
					khmr: "[០-៩]",
					knda: "[೦-೯]",
					laoo: "[໐-໙]",
					limb: "[᥆-᥏]",
					mlym: "[൦-൯]",
					mong: "[᠐-᠙]",
					mymr: "[၀-၉]",
					orya: "[୦-୯]",
					tamldec: "[௦-௯]",
					telu: "[౦-౯]",
					thai: "[๐-๙]",
					tibt: "[༠-༩]",
					latn: "\\d"
				},
				mo = {
					arab: [1632, 1641],
					arabext: [1776, 1785],
					bali: [6992, 7001],
					beng: [2534, 2543],
					deva: [2406, 2415],
					fullwide: [65296, 65303],
					gujr: [2790, 2799],
					khmr: [6112, 6121],
					knda: [3302, 3311],
					laoo: [3792, 3801],
					limb: [6470, 6479],
					mlym: [3430, 3439],
					mong: [6160, 6169],
					mymr: [4160, 4169],
					orya: [2918, 2927],
					tamldec: [3046, 3055],
					telu: [3174, 3183],
					thai: [3664, 3673],
					tibt: [3872, 3881]
				},
				fo = vo.hanidec.replace(/[\[|\]]/g, "").split("");

			function go(e, t) {
				var o = e.numberingSystem;
				return void 0 === t && (t = ""), new RegExp("" + vo[o || "latn"] + t)
			}
			var ho = "missing Intl.DateTimeFormat.formatToParts support";

			function yo(e, t) {
				return void 0 === t && (t = function(e) {
					return e
				}), {
					regex: e,
					deser: function(e) {
						var o = e[0];
						return t(function(e) {
							var t = parseInt(e, 10);
							if (isNaN(t)) {
								t = "";
								for (var o = 0; o < e.length; o++) {
									var i = e.charCodeAt(o);
									if (-1 !== e[o].search(vo.hanidec)) t += fo.indexOf(e[o]);
									else
										for (var r in mo) {
											var n = mo[r],
												a = n[0],
												s = n[1];
											i >= a && i <= s && (t += i - a)
										}
								}
								return parseInt(t, 10)
							}
							return t
						}(o))
					}
				}
			}
			var bo = "[ " + String.fromCharCode(160) + "]",
				ko = new RegExp(bo, "g");

			function So(e) {
				return e.replace(/\./g, "\\.?").replace(ko, bo)
			}

			function wo(e) {
				return e.replace(/\./g, "").replace(ko, " ").toLowerCase()
			}

			function Oo(e, t) {
				return null === e ? null : {
					regex: RegExp(e.map(So).join("|")),
					deser: function(o) {
						var i = o[0];
						return e.findIndex((function(e) {
							return wo(i) === wo(e)
						})) + t
					}
				}
			}

			function To(e, t) {
				return {
					regex: e,
					deser: function(e) {
						return pe(e[1], e[2])
					},
					groups: t
				}
			}

			function No(e) {
				return {
					regex: e,
					deser: function(e) {
						return e[0]
					}
				}
			}
			var Ro = {
				year: {
					"2-digit": "yy",
					numeric: "yyyyy"
				},
				month: {
					numeric: "M",
					"2-digit": "MM",
					short: "MMM",
					long: "MMMM"
				},
				day: {
					numeric: "d",
					"2-digit": "dd"
				},
				weekday: {
					short: "EEE",
					long: "EEEE"
				},
				dayperiod: "a",
				dayPeriod: "a",
				hour: {
					numeric: "h",
					"2-digit": "hh"
				},
				minute: {
					numeric: "m",
					"2-digit": "mm"
				},
				second: {
					numeric: "s",
					"2-digit": "ss"
				}
			};
			var $o = null;

			function Co(e, t) {
				if (e.literal) return e;
				var o = xe.macroTokenToFormatOpts(e.val);
				if (!o) return e;
				var i = xe.create(t, o).formatDateTimeParts(($o || ($o = ui.fromMillis(1555555555555)), $o)).map((function(e) {
					return function(e, t, o) {
						var i = e.type,
							r = e.value;
						if ("literal" === i) return {
							literal: !0,
							val: r
						};
						var n = o[i],
							a = Ro[i];
						return "object" == typeof a && (a = a[n]), a ? {
							literal: !1,
							val: a
						} : void 0
					}(e, 0, o)
				}));
				return i.includes(void 0) ? e : i
			}

			function Io(e, t, o) {
				var i = function(e, t) {
						var o;
						return (o = Array.prototype).concat.apply(o, e.map((function(e) {
							return Co(e, t)
						})))
					}(xe.parseFormat(o), e),
					r = i.map((function(t) {
						return o = t, r = go(i = e), n = go(i, "{2}"), a = go(i, "{3}"), s = go(i, "{4}"), d = go(i, "{6}"), l = go(i, "{1,2}"), u = go(i, "{1,3}"), c = go(i, "{1,6}"), p = go(i, "{1,9}"), v = go(i, "{2,4}"), m = go(i, "{4,6}"), f = function(e) {
							return {
								regex: RegExp((t = e.val, t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"))),
								deser: function(e) {
									return e[0]
								},
								literal: !0
							};
							var t
						}, (g = function(e) {
							if (o.literal) return f(e);
							switch (e.val) {
								case "G":
									return Oo(i.eras("short", !1), 0);
								case "GG":
									return Oo(i.eras("long", !1), 0);
								case "y":
									return yo(c);
								case "yy":
									return yo(v, ue);
								case "yyyy":
									return yo(s);
								case "yyyyy":
									return yo(m);
								case "yyyyyy":
									return yo(d);
								case "M":
									return yo(l);
								case "MM":
									return yo(n);
								case "MMM":
									return Oo(i.months("short", !0, !1), 1);
								case "MMMM":
									return Oo(i.months("long", !0, !1), 1);
								case "L":
									return yo(l);
								case "LL":
									return yo(n);
								case "LLL":
									return Oo(i.months("short", !1, !1), 1);
								case "LLLL":
									return Oo(i.months("long", !1, !1), 1);
								case "d":
									return yo(l);
								case "dd":
									return yo(n);
								case "o":
									return yo(u);
								case "ooo":
									return yo(a);
								case "HH":
									return yo(n);
								case "H":
									return yo(l);
								case "hh":
									return yo(n);
								case "h":
									return yo(l);
								case "mm":
									return yo(n);
								case "m":
								case "q":
									return yo(l);
								case "qq":
									return yo(n);
								case "s":
									return yo(l);
								case "ss":
									return yo(n);
								case "S":
									return yo(u);
								case "SSS":
									return yo(a);
								case "u":
									return No(p);
								case "uu":
									return No(l);
								case "uuu":
									return yo(r);
								case "a":
									return Oo(i.meridiems(), 0);
								case "kkkk":
									return yo(s);
								case "kk":
									return yo(v, ue);
								case "W":
									return yo(l);
								case "WW":
									return yo(n);
								case "E":
								case "c":
									return yo(r);
								case "EEE":
									return Oo(i.weekdays("short", !1, !1), 1);
								case "EEEE":
									return Oo(i.weekdays("long", !1, !1), 1);
								case "ccc":
									return Oo(i.weekdays("short", !0, !1), 1);
								case "cccc":
									return Oo(i.weekdays("long", !0, !1), 1);
								case "Z":
								case "ZZ":
									return To(new RegExp("([+-]" + l.source + ")(?::(" + n.source + "))?"), 2);
								case "ZZZ":
									return To(new RegExp("([+-]" + l.source + ")(" + n.source + ")?"), 2);
								case "z":
									return No(/[a-z_+-/]{1,256}?/i);
								default:
									return f(e)
							}
						}(o) || {
							invalidReason: ho
						}).token = o, g;
						var o, i, r, n, a, s, d, l, u, c, p, v, m, f, g
					})),
					n = r.find((function(e) {
						return e.invalidReason
					}));
				if (n) return {
					input: t,
					tokens: i,
					invalidReason: n.invalidReason
				};
				var a = function(e) {
						return ["^" + e.map((function(e) {
							return e.regex
						})).reduce((function(e, t) {
							return e + "(" + t.source + ")"
						}), "") + "$", e]
					}(r),
					s = a[0],
					d = a[1],
					l = RegExp(s, "i"),
					u = function(e, t, o) {
						var i = e.match(t);
						if (i) {
							var r = {},
								n = 1;
							for (var a in o)
								if (K(o, a)) {
									var s = o[a],
										d = s.groups ? s.groups + 1 : 1;
									!s.literal && s.token && (r[s.token.val[0]] = s.deser(i.slice(n, n + d))), n += d
								} return [i, r]
						}
						return [i, {}]
					}(t, l, d),
					c = u[0],
					p = u[1],
					v = p ? function(e) {
						var t, o = null;
						return H(e.z) || (o = Ve.create(e.z)), H(e.Z) || (o || (o = new Ue(e.Z)), t = e.Z), H(e.q) || (e.M = 3 * (e.q - 1) + 1), H(e.h) || (e.h < 12 && 1 === e.a ? e.h += 12 : 12 === e.h && 0 === e.a && (e.h = 0)), 0 === e.G && e.y && (e.y = -e.y), H(e.u) || (e.S = ie(e.u)), [Object.keys(e).reduce((function(t, o) {
							var i = function(e) {
								switch (e) {
									case "S":
										return "millisecond";
									case "s":
										return "second";
									case "m":
										return "minute";
									case "h":
									case "H":
										return "hour";
									case "d":
										return "day";
									case "o":
										return "ordinal";
									case "L":
									case "M":
										return "month";
									case "y":
										return "year";
									case "E":
									case "c":
										return "weekday";
									case "W":
										return "weekNumber";
									case "k":
										return "weekYear";
									case "q":
										return "quarter";
									default:
										return null
								}
							}(o);
							return i && (t[i] = e[o]), t
						}), {}), o, t]
					}(p) : [null, null, void 0],
					m = v[0],
					f = v[1],
					g = v[2];
				if (K(p, "a") && K(p, "H")) throw new y("Can't include meridiem when specifying 24-hour format");
				return {
					input: t,
					tokens: i,
					regex: l,
					rawMatches: c,
					matches: p,
					result: m,
					zone: f,
					specificOffset: g
				}
			}
			var Eo = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
				Ao = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];

			function Po(e, t) {
				return new Fe("unit out of range", "you specified " + t + " (of type " + typeof t + ") as a " + e + ", which is invalid")
			}

			function xo(e, t, o) {
				var i = new Date(Date.UTC(e, t - 1, o));
				e < 100 && e >= 0 && i.setUTCFullYear(i.getUTCFullYear() - 1900);
				var r = i.getUTCDay();
				return 0 === r ? 7 : r
			}

			function Fo(e, t, o) {
				return o + (ne(e) ? Ao : Eo)[t - 1]
			}

			function jo(e, t) {
				var o = ne(e) ? Ao : Eo,
					i = o.findIndex((function(e) {
						return e < t
					}));
				return {
					month: i + 1,
					day: t - o[i]
				}
			}

			function Mo(e) {
				var t, o = e.year,
					i = e.month,
					r = e.day,
					a = Fo(o, i, r),
					s = xo(o, i, r),
					d = Math.floor((a - s + 10) / 7);
				return d < 1 ? d = le(t = o - 1) : d > le(o) ? (t = o + 1, d = 1) : t = o, n({
					weekYear: t,
					weekNumber: d,
					weekday: s
				}, ge(e))
			}

			function Do(e) {
				var t, o = e.weekYear,
					i = e.weekNumber,
					r = e.weekday,
					a = xo(o, 1, 4),
					s = ae(o),
					d = 7 * i + r - a - 3;
				d < 1 ? d += ae(t = o - 1) : d > s ? (t = o + 1, d -= ae(o)) : t = o;
				var l = jo(t, d);
				return n({
					year: t,
					month: l.month,
					day: l.day
				}, ge(e))
			}

			function Jo(e) {
				var t = e.year;
				return n({
					year: t,
					ordinal: Fo(t, e.month, e.day)
				}, ge(e))
			}

			function _o(e) {
				var t = e.year,
					o = jo(t, e.ordinal);
				return n({
					year: t,
					month: o.month,
					day: o.day
				}, ge(e))
			}

			function Bo(e) {
				var t = Y(e.year),
					o = Q(e.month, 1, 12),
					i = Q(e.day, 1, se(e.year, e.month));
				return t ? o ? !i && Po("day", e.day) : Po("month", e.month) : Po("year", e.year)
			}

			function Vo(e) {
				var t = e.hour,
					o = e.minute,
					i = e.second,
					r = e.millisecond,
					n = Q(t, 0, 23) || 24 === t && 0 === o && 0 === i && 0 === r,
					a = Q(o, 0, 59),
					s = Q(i, 0, 59),
					d = Q(r, 0, 999);
				return n ? a ? s ? !d && Po("millisecond", r) : Po("second", i) : Po("minute", o) : Po("hour", t)
			}
			var Lo = "Invalid DateTime";

			function Uo(e) {
				return new Fe("unsupported zone", 'the zone "' + e.name + '" is not supported')
			}

			function qo(e) {
				return null === e.weekData && (e.weekData = Mo(e.c)), e.weekData
			}

			function Wo(e, t) {
				var o = {
					ts: e.ts,
					zone: e.zone,
					c: e.c,
					o: e.o,
					loc: e.loc,
					invalid: e.invalid
				};
				return new ui(n({}, o, t, {
					old: o
				}))
			}

			function Go(e, t, o) {
				var i = e - 60 * t * 1e3,
					r = o.offset(i);
				if (t === r) return [i, t];
				i -= 60 * (r - t) * 1e3;
				var n = o.offset(i);
				return r === n ? [i, r] : [e - 60 * Math.min(r, n) * 1e3, Math.max(r, n)]
			}

			function Ho(e, t) {
				var o = new Date(e += 60 * t * 1e3);
				return {
					year: o.getUTCFullYear(),
					month: o.getUTCMonth() + 1,
					day: o.getUTCDate(),
					hour: o.getUTCHours(),
					minute: o.getUTCMinutes(),
					second: o.getUTCSeconds(),
					millisecond: o.getUTCMilliseconds()
				}
			}

			function zo(e, t, o) {
				return Go(de(e), t, o)
			}

			function Yo(e, t) {
				var o = e.o,
					i = e.c.year + Math.trunc(t.years),
					r = e.c.month + Math.trunc(t.months) + 3 * Math.trunc(t.quarters),
					a = n({}, e.c, {
						year: i,
						month: r,
						day: Math.min(e.c.day, se(i, r)) + Math.trunc(t.days) + 7 * Math.trunc(t.weeks)
					}),
					s = no.fromObject({
						years: t.years - Math.trunc(t.years),
						quarters: t.quarters - Math.trunc(t.quarters),
						months: t.months - Math.trunc(t.months),
						weeks: t.weeks - Math.trunc(t.weeks),
						days: t.days - Math.trunc(t.days),
						hours: t.hours,
						minutes: t.minutes,
						seconds: t.seconds,
						milliseconds: t.milliseconds
					}).as("milliseconds"),
					d = Go(de(a), o, e.zone),
					l = d[0],
					u = d[1];
				return 0 !== s && (l += s, u = e.zone.offset(l)), {
					ts: l,
					o: u
				}
			}

			function Zo(e, t, o, i, r, a) {
				var s = o.setZone,
					d = o.zone;
				if (e && 0 !== Object.keys(e).length) {
					var l = t || d,
						u = ui.fromObject(e, n({}, o, {
							zone: l,
							specificOffset: a
						}));
					return s ? u : u.setZone(d)
				}
				return ui.invalid(new Fe("unparsable", 'the input "' + r + "\" can't be parsed as " + i))
			}

			function Xo(e, t, o) {
				return void 0 === o && (o = !0), e.isValid ? xe.create(ct.create("en-US"), {
					allowZ: o,
					forceSimple: !0
				}).formatDateTimeFromString(e, t) : null
			}

			function Ko(e, t) {
				var o = e.c.year > 9999 || e.c.year < 0,
					i = "";
				return o && e.c.year >= 0 && (i += "+"), i += ee(e.c.year, o ? 6 : 4), t ? (i += "-", i += ee(e.c.month), i += "-", i += ee(e.c.day)) : (i += ee(e.c.month), i += ee(e.c.day)), i
			}

			function Qo(e, t, o, i, r, n) {
				var a = ee(e.c.hour);
				return t ? (a += ":", a += ee(e.c.minute), 0 === e.c.second && o || (a += ":")) : a += ee(e.c.minute), 0 === e.c.second && o || (a += ee(e.c.second), 0 === e.c.millisecond && i || (a += ".", a += ee(e.c.millisecond, 3))), r && (e.isOffsetFixed && 0 === e.offset && !n ? a += "Z" : e.o < 0 ? (a += "-", a += ee(Math.trunc(-e.o / 60)), a += ":", a += ee(Math.trunc(-e.o % 60))) : (a += "+", a += ee(Math.trunc(e.o / 60)), a += ":", a += ee(Math.trunc(e.o % 60)))), n && (a += "[" + e.zone.ianaName + "]"), a
			}
			var ei = {
					month: 1,
					day: 1,
					hour: 0,
					minute: 0,
					second: 0,
					millisecond: 0
				},
				ti = {
					weekNumber: 1,
					weekday: 1,
					hour: 0,
					minute: 0,
					second: 0,
					millisecond: 0
				},
				oi = {
					ordinal: 1,
					hour: 0,
					minute: 0,
					second: 0,
					millisecond: 0
				},
				ii = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
				ri = ["weekYear", "weekNumber", "weekday", "hour", "minute", "second", "millisecond"],
				ni = ["year", "ordinal", "hour", "minute", "second", "millisecond"];

			function ai(e) {
				var t = {
					year: "year",
					years: "year",
					month: "month",
					months: "month",
					day: "day",
					days: "day",
					hour: "hour",
					hours: "hour",
					minute: "minute",
					minutes: "minute",
					quarter: "quarter",
					quarters: "quarter",
					second: "second",
					seconds: "second",
					millisecond: "millisecond",
					milliseconds: "millisecond",
					weekday: "weekday",
					weekdays: "weekday",
					weeknumber: "weekNumber",
					weeksnumber: "weekNumber",
					weeknumbers: "weekNumber",
					weekyear: "weekYear",
					weekyears: "weekYear",
					ordinal: "ordinal"
				} [e.toLowerCase()];
				if (!t) throw new b(e);
				return t
			}

			function si(e, t) {
				var o, i, r = We(t.zone, Ke.defaultZone),
					n = ct.fromObject(t),
					a = Ke.now();
				if (H(e.year)) o = a;
				else {
					for (var s, d = v(ii); !(s = d()).done;) {
						var l = s.value;
						H(e[l]) && (e[l] = ei[l])
					}
					var u = Bo(e) || Vo(e);
					if (u) return ui.invalid(u);
					var c = zo(e, r.offset(a), r);
					o = c[0], i = c[1]
				}
				return new ui({
					ts: o,
					zone: r,
					loc: n,
					o: i
				})
			}

			function di(e, t, o) {
				var i = !!H(o.round) || o.round,
					r = function(e, r) {
						return e = re(e, i || o.calendary ? 0 : 2, !0), t.loc.clone(o).relFormatter(o).format(e, r)
					},
					n = function(i) {
						return o.calendary ? t.hasSame(e, i) ? 0 : t.startOf(i).diff(e.startOf(i), i).get(i) : t.diff(e, i).get(i)
					};
				if (o.unit) return r(n(o.unit), o.unit);
				for (var a, s = v(o.units); !(a = s()).done;) {
					var d = a.value,
						l = n(d);
					if (Math.abs(l) >= 1) return r(l, d)
				}
				return r(e > t ? -0 : 0, o.units[o.units.length - 1])
			}

			function li(e) {
				var t, o = {};
				return e.length > 0 && "object" == typeof e[e.length - 1] ? (o = e[e.length - 1], t = Array.from(e).slice(0, e.length - 1)) : t = Array.from(e), [o, t]
			}
			var ui = function() {
				function e(e) {
					var t = e.zone || Ke.defaultZone,
						o = e.invalid || (Number.isNaN(e.ts) ? new Fe("invalid input") : null) || (t.isValid ? null : Uo(t));
					this.ts = H(e.ts) ? Ke.now() : e.ts;
					var i = null,
						r = null;
					if (!o)
						if (e.old && e.old.ts === this.ts && e.old.zone.equals(t)) {
							var n = [e.old.c, e.old.o];
							i = n[0], r = n[1]
						} else {
							var a = t.offset(this.ts);
							i = Ho(this.ts, a), i = (o = Number.isNaN(i.year) ? new Fe("invalid input") : null) ? null : i, r = o ? null : a
						} this._zone = t, this.loc = e.loc || ct.create(), this.invalid = o, this.weekData = null, this.c = i, this.o = r, this.isLuxonDateTime = !0
				}
				e.now = function() {
					return new e({})
				}, e.local = function() {
					var e = li(arguments),
						t = e[0],
						o = e[1],
						i = o[0],
						r = o[1],
						n = o[2],
						a = o[3],
						s = o[4],
						d = o[5],
						l = o[6];
					return si({
						year: i,
						month: r,
						day: n,
						hour: a,
						minute: s,
						second: d,
						millisecond: l
					}, t)
				}, e.utc = function() {
					var e = li(arguments),
						t = e[0],
						o = e[1],
						i = o[0],
						r = o[1],
						n = o[2],
						a = o[3],
						s = o[4],
						d = o[5],
						l = o[6];
					return t.zone = Ue.utcInstance, si({
						year: i,
						month: r,
						day: n,
						hour: a,
						minute: s,
						second: d,
						millisecond: l
					}, t)
				}, e.fromJSDate = function(t, o) {
					void 0 === o && (o = {});
					var i, r = (i = t, "[object Date]" === Object.prototype.toString.call(i) ? t.valueOf() : NaN);
					if (Number.isNaN(r)) return e.invalid("invalid input");
					var n = We(o.zone, Ke.defaultZone);
					return n.isValid ? new e({
						ts: r,
						zone: n,
						loc: ct.fromObject(o)
					}) : e.invalid(Uo(n))
				}, e.fromMillis = function(t, o) {
					if (void 0 === o && (o = {}), z(t)) return t < -864e13 || t > 864e13 ? e.invalid("Timestamp out of range") : new e({
						ts: t,
						zone: We(o.zone, Ke.defaultZone),
						loc: ct.fromObject(o)
					});
					throw new k("fromMillis requires a numerical input, but received a " + typeof t + " with value " + t)
				}, e.fromSeconds = function(t, o) {
					if (void 0 === o && (o = {}), z(t)) return new e({
						ts: 1e3 * t,
						zone: We(o.zone, Ke.defaultZone),
						loc: ct.fromObject(o)
					});
					throw new k("fromSeconds requires a numerical input")
				}, e.fromObject = function(t, o) {
					void 0 === o && (o = {}), t = t || {};
					var i = We(o.zone, Ke.defaultZone);
					if (!i.isValid) return e.invalid(Uo(i));
					var r = Ke.now(),
						n = H(o.specificOffset) ? i.offset(r) : o.specificOffset,
						a = me(t, ai),
						s = !H(a.ordinal),
						d = !H(a.year),
						l = !H(a.month) || !H(a.day),
						u = d || l,
						c = a.weekYear || a.weekNumber,
						p = ct.fromObject(o);
					if ((u || s) && c) throw new y("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
					if (l && s) throw new y("Can't mix ordinal dates with month/day");
					var m, f, g = c || a.weekday && !u,
						h = Ho(r, n);
					g ? (m = ri, f = ti, h = Mo(h)) : s ? (m = ni, f = oi, h = Jo(h)) : (m = ii, f = ei);
					for (var b, k = !1, S = v(m); !(b = S()).done;) {
						var w = b.value;
						H(a[w]) ? a[w] = k ? f[w] : h[w] : k = !0
					}
					var O = (g ? function(e) {
						var t = Y(e.weekYear),
							o = Q(e.weekNumber, 1, le(e.weekYear)),
							i = Q(e.weekday, 1, 7);
						return t ? o ? !i && Po("weekday", e.weekday) : Po("week", e.week) : Po("weekYear", e.weekYear)
					}(a) : s ? function(e) {
						var t = Y(e.year),
							o = Q(e.ordinal, 1, ae(e.year));
						return t ? !o && Po("ordinal", e.ordinal) : Po("year", e.year)
					}(a) : Bo(a)) || Vo(a);
					if (O) return e.invalid(O);
					var T = zo(g ? Do(a) : s ? _o(a) : a, n, i),
						N = new e({
							ts: T[0],
							zone: i,
							o: T[1],
							loc: p
						});
					return a.weekday && u && t.weekday !== N.weekday ? e.invalid("mismatched weekday", "you can't specify both a weekday of " + a.weekday + " and a date of " + N.toISO()) : N
				}, e.fromISO = function(e, t) {
					void 0 === t && (t = {});
					var o = function(e) {
						return mt(e, [Bt, qt], [Vt, Wt], [Lt, Gt], [Ut, Ht])
					}(e);
					return Zo(o[0], o[1], t, "ISO 8601", e)
				}, e.fromRFC2822 = function(e, t) {
					void 0 === t && (t = {});
					var o = function(e) {
						return mt(function(e) {
							return e.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim()
						}(e), [xt, Ft])
					}(e);
					return Zo(o[0], o[1], t, "RFC 2822", e)
				}, e.fromHTTP = function(e, t) {
					void 0 === t && (t = {});
					var o = function(e) {
						return mt(e, [jt, Jt], [Mt, Jt], [Dt, _t])
					}(e);
					return Zo(o[0], o[1], t, "HTTP", t)
				}, e.fromFormat = function(t, o, i) {
					if (void 0 === i && (i = {}), H(t) || H(o)) throw new k("fromFormat requires an input string and a format");
					var r = i,
						n = r.locale,
						a = void 0 === n ? null : n,
						s = r.numberingSystem,
						d = void 0 === s ? null : s,
						l = function(e, t, o) {
							var i = Io(e, t, o);
							return [i.result, i.zone, i.specificOffset, i.invalidReason]
						}(ct.fromOpts({
							locale: a,
							numberingSystem: d,
							defaultToEN: !0
						}), t, o),
						u = l[0],
						c = l[1],
						p = l[2],
						v = l[3];
					return v ? e.invalid(v) : Zo(u, c, i, "format " + o, t, p)
				}, e.fromString = function(t, o, i) {
					return void 0 === i && (i = {}), e.fromFormat(t, o, i)
				}, e.fromSQL = function(e, t) {
					void 0 === t && (t = {});
					var o = function(e) {
						return mt(e, [Yt, qt], [Zt, Xt])
					}(e);
					return Zo(o[0], o[1], t, "SQL", e)
				}, e.invalid = function(t, o) {
					if (void 0 === o && (o = null), !t) throw new k("need to specify a reason the DateTime is invalid");
					var i = t instanceof Fe ? t : new Fe(t, o);
					if (Ke.throwOnInvalid) throw new f(i);
					return new e({
						invalid: i
					})
				}, e.isDateTime = function(e) {
					return e && e.isLuxonDateTime || !1
				};
				var t = e.prototype;
				return t.get = function(e) {
					return this[e]
				}, t.resolvedLocaleOptions = function(e) {
					void 0 === e && (e = {});
					var t = xe.create(this.loc.clone(e), e).resolvedOptions(this);
					return {
						locale: t.locale,
						numberingSystem: t.numberingSystem,
						outputCalendar: t.calendar
					}
				}, t.toUTC = function(e, t) {
					return void 0 === e && (e = 0), void 0 === t && (t = {}), this.setZone(Ue.instance(e), t)
				}, t.toLocal = function() {
					return this.setZone(Ke.defaultZone)
				}, t.setZone = function(t, o) {
					var i = void 0 === o ? {} : o,
						r = i.keepLocalTime,
						n = void 0 !== r && r,
						a = i.keepCalendarTime,
						s = void 0 !== a && a;
					if ((t = We(t, Ke.defaultZone)).equals(this.zone)) return this;
					if (t.isValid) {
						var d = this.ts;
						if (n || s) {
							var l = t.offset(this.ts);
							d = zo(this.toObject(), l, t)[0]
						}
						return Wo(this, {
							ts: d,
							zone: t
						})
					}
					return e.invalid(Uo(t))
				}, t.reconfigure = function(e) {
					var t = void 0 === e ? {} : e,
						o = t.locale,
						i = t.numberingSystem,
						r = t.outputCalendar;
					return Wo(this, {
						loc: this.loc.clone({
							locale: o,
							numberingSystem: i,
							outputCalendar: r
						})
					})
				}, t.setLocale = function(e) {
					return this.reconfigure({
						locale: e
					})
				}, t.set = function(e) {
					if (!this.isValid) return this;
					var t, o = me(e, ai),
						i = !H(o.weekYear) || !H(o.weekNumber) || !H(o.weekday),
						r = !H(o.ordinal),
						a = !H(o.year),
						s = !H(o.month) || !H(o.day),
						d = a || s,
						l = o.weekYear || o.weekNumber;
					if ((d || r) && l) throw new y("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
					if (s && r) throw new y("Can't mix ordinal dates with month/day");
					i ? t = Do(n({}, Mo(this.c), o)) : H(o.ordinal) ? (t = n({}, this.toObject(), o), H(o.day) && (t.day = Math.min(se(t.year, t.month), t.day))) : t = _o(n({}, Jo(this.c), o));
					var u = zo(t, this.o, this.zone);
					return Wo(this, {
						ts: u[0],
						o: u[1]
					})
				}, t.plus = function(e) {
					return this.isValid ? Wo(this, Yo(this, no.fromDurationLike(e))) : this
				}, t.minus = function(e) {
					return this.isValid ? Wo(this, Yo(this, no.fromDurationLike(e).negate())) : this
				}, t.startOf = function(e) {
					if (!this.isValid) return this;
					var t = {},
						o = no.normalizeUnit(e);
					switch (o) {
						case "years":
							t.month = 1;
						case "quarters":
						case "months":
							t.day = 1;
						case "weeks":
						case "days":
							t.hour = 0;
						case "hours":
							t.minute = 0;
						case "minutes":
							t.second = 0;
						case "seconds":
							t.millisecond = 0
					}
					if ("weeks" === o && (t.weekday = 1), "quarters" === o) {
						var i = Math.ceil(this.month / 3);
						t.month = 3 * (i - 1) + 1
					}
					return this.set(t)
				}, t.endOf = function(e) {
					var t;
					return this.isValid ? this.plus((t = {}, t[e] = 1, t)).startOf(e).minus(1) : this
				}, t.toFormat = function(e, t) {
					return void 0 === t && (t = {}), this.isValid ? xe.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this, e) : Lo
				}, t.toLocaleString = function(e, t) {
					return void 0 === e && (e = N), void 0 === t && (t = {}), this.isValid ? xe.create(this.loc.clone(t), e).formatDateTime(this) : Lo
				}, t.toLocaleParts = function(e) {
					return void 0 === e && (e = {}), this.isValid ? xe.create(this.loc.clone(e), e).formatDateTimeParts(this) : []
				}, t.toISO = function(e) {
					var t = void 0 === e ? {} : e,
						o = t.format,
						i = void 0 === o ? "extended" : o,
						r = t.suppressSeconds,
						n = void 0 !== r && r,
						a = t.suppressMilliseconds,
						s = void 0 !== a && a,
						d = t.includeOffset,
						l = void 0 === d || d,
						u = t.extendedZone,
						c = void 0 !== u && u;
					if (!this.isValid) return null;
					var p = "extended" === i,
						v = Ko(this, p);
					return v += "T", v += Qo(this, p, n, s, l, c)
				}, t.toISODate = function(e) {
					var t = (void 0 === e ? {} : e).format,
						o = void 0 === t ? "extended" : t;
					return this.isValid ? Ko(this, "extended" === o) : null
				}, t.toISOWeekDate = function() {
					return Xo(this, "kkkk-'W'WW-c")
				}, t.toISOTime = function(e) {
					var t = void 0 === e ? {} : e,
						o = t.suppressMilliseconds,
						i = void 0 !== o && o,
						r = t.suppressSeconds,
						n = void 0 !== r && r,
						a = t.includeOffset,
						s = void 0 === a || a,
						d = t.includePrefix,
						l = void 0 !== d && d,
						u = t.extendedZone,
						c = void 0 !== u && u,
						p = t.format,
						v = void 0 === p ? "extended" : p;
					return this.isValid ? (l ? "T" : "") + Qo(this, "extended" === v, n, i, s, c) : null
				}, t.toRFC2822 = function() {
					return Xo(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", !1)
				}, t.toHTTP = function() {
					return Xo(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'")
				}, t.toSQLDate = function() {
					return this.isValid ? Ko(this, !0) : null
				}, t.toSQLTime = function(e) {
					var t = void 0 === e ? {} : e,
						o = t.includeOffset,
						i = void 0 === o || o,
						r = t.includeZone,
						n = void 0 !== r && r,
						a = t.includeOffsetSpace,
						s = "HH:mm:ss.SSS";
					return (n || i) && ((void 0 === a || a) && (s += " "), n ? s += "z" : i && (s += "ZZ")), Xo(this, s, !0)
				}, t.toSQL = function(e) {
					return void 0 === e && (e = {}), this.isValid ? this.toSQLDate() + " " + this.toSQLTime(e) : null
				}, t.toString = function() {
					return this.isValid ? this.toISO() : Lo
				}, t.valueOf = function() {
					return this.toMillis()
				}, t.toMillis = function() {
					return this.isValid ? this.ts : NaN
				}, t.toSeconds = function() {
					return this.isValid ? this.ts / 1e3 : NaN
				}, t.toUnixInteger = function() {
					return this.isValid ? Math.floor(this.ts / 1e3) : NaN
				}, t.toJSON = function() {
					return this.toISO()
				}, t.toBSON = function() {
					return this.toJSDate()
				}, t.toObject = function(e) {
					if (void 0 === e && (e = {}), !this.isValid) return {};
					var t = n({}, this.c);
					return e.includeConfig && (t.outputCalendar = this.outputCalendar, t.numberingSystem = this.loc.numberingSystem, t.locale = this.loc.locale), t
				}, t.toJSDate = function() {
					return new Date(this.isValid ? this.ts : NaN)
				}, t.diff = function(e, t, o) {
					if (void 0 === t && (t = "milliseconds"), void 0 === o && (o = {}), !this.isValid || !e.isValid) return no.invalid("created by diffing an invalid DateTime");
					var i, r = n({
							locale: this.locale,
							numberingSystem: this.numberingSystem
						}, o),
						a = (i = t, Array.isArray(i) ? i : [i]).map(no.normalizeUnit),
						s = e.valueOf() > this.valueOf(),
						d = po(s ? this : e, s ? e : this, a, r);
					return s ? d.negate() : d
				}, t.diffNow = function(t, o) {
					return void 0 === t && (t = "milliseconds"), void 0 === o && (o = {}), this.diff(e.now(), t, o)
				}, t.until = function(e) {
					return this.isValid ? lo.fromDateTimes(this, e) : this
				}, t.hasSame = function(e, t) {
					if (!this.isValid) return !1;
					var o = e.valueOf(),
						i = this.setZone(e.zone, {
							keepLocalTime: !0
						});
					return i.startOf(t) <= o && o <= i.endOf(t)
				}, t.equals = function(e) {
					return this.isValid && e.isValid && this.valueOf() === e.valueOf() && this.zone.equals(e.zone) && this.loc.equals(e.loc)
				}, t.toRelative = function(t) {
					if (void 0 === t && (t = {}), !this.isValid) return null;
					var o = t.base || e.fromObject({}, {
							zone: this.zone
						}),
						i = t.padding ? this < o ? -t.padding : t.padding : 0,
						r = ["years", "months", "days", "hours", "minutes", "seconds"],
						a = t.unit;
					return Array.isArray(t.unit) && (r = t.unit, a = void 0), di(o, this.plus(i), n({}, t, {
						numeric: "always",
						units: r,
						unit: a
					}))
				}, t.toRelativeCalendar = function(t) {
					return void 0 === t && (t = {}), this.isValid ? di(t.base || e.fromObject({}, {
						zone: this.zone
					}), this, n({}, t, {
						numeric: "auto",
						units: ["years", "months", "days"],
						calendary: !0
					})) : null
				}, e.min = function() {
					for (var t = arguments.length, o = new Array(t), i = 0; i < t; i++) o[i] = arguments[i];
					if (!o.every(e.isDateTime)) throw new k("min requires all arguments be DateTimes");
					return X(o, (function(e) {
						return e.valueOf()
					}), Math.min)
				}, e.max = function() {
					for (var t = arguments.length, o = new Array(t), i = 0; i < t; i++) o[i] = arguments[i];
					if (!o.every(e.isDateTime)) throw new k("max requires all arguments be DateTimes");
					return X(o, (function(e) {
						return e.valueOf()
					}), Math.max)
				}, e.fromFormatExplain = function(e, t, o) {
					void 0 === o && (o = {});
					var i = o,
						r = i.locale,
						n = void 0 === r ? null : r,
						a = i.numberingSystem,
						s = void 0 === a ? null : a;
					return Io(ct.fromOpts({
						locale: n,
						numberingSystem: s,
						defaultToEN: !0
					}), e, t)
				}, e.fromStringExplain = function(t, o, i) {
					return void 0 === i && (i = {}), e.fromFormatExplain(t, o, i)
				}, r(e, [{
					key: "isValid",
					get: function() {
						return null === this.invalid
					}
				}, {
					key: "invalidReason",
					get: function() {
						return this.invalid ? this.invalid.reason : null
					}
				}, {
					key: "invalidExplanation",
					get: function() {
						return this.invalid ? this.invalid.explanation : null
					}
				}, {
					key: "locale",
					get: function() {
						return this.isValid ? this.loc.locale : null
					}
				}, {
					key: "numberingSystem",
					get: function() {
						return this.isValid ? this.loc.numberingSystem : null
					}
				}, {
					key: "outputCalendar",
					get: function() {
						return this.isValid ? this.loc.outputCalendar : null
					}
				}, {
					key: "zone",
					get: function() {
						return this._zone
					}
				}, {
					key: "zoneName",
					get: function() {
						return this.isValid ? this.zone.name : null
					}
				}, {
					key: "year",
					get: function() {
						return this.isValid ? this.c.year : NaN
					}
				}, {
					key: "quarter",
					get: function() {
						return this.isValid ? Math.ceil(this.c.month / 3) : NaN
					}
				}, {
					key: "month",
					get: function() {
						return this.isValid ? this.c.month : NaN
					}
				}, {
					key: "day",
					get: function() {
						return this.isValid ? this.c.day : NaN
					}
				}, {
					key: "hour",
					get: function() {
						return this.isValid ? this.c.hour : NaN
					}
				}, {
					key: "minute",
					get: function() {
						return this.isValid ? this.c.minute : NaN
					}
				}, {
					key: "second",
					get: function() {
						return this.isValid ? this.c.second : NaN
					}
				}, {
					key: "millisecond",
					get: function() {
						return this.isValid ? this.c.millisecond : NaN
					}
				}, {
					key: "weekYear",
					get: function() {
						return this.isValid ? qo(this).weekYear : NaN
					}
				}, {
					key: "weekNumber",
					get: function() {
						return this.isValid ? qo(this).weekNumber : NaN
					}
				}, {
					key: "weekday",
					get: function() {
						return this.isValid ? qo(this).weekday : NaN
					}
				}, {
					key: "ordinal",
					get: function() {
						return this.isValid ? Jo(this.c).ordinal : NaN
					}
				}, {
					key: "monthShort",
					get: function() {
						return this.isValid ? uo.months("short", {
							locObj: this.loc
						})[this.month - 1] : null
					}
				}, {
					key: "monthLong",
					get: function() {
						return this.isValid ? uo.months("long", {
							locObj: this.loc
						})[this.month - 1] : null
					}
				}, {
					key: "weekdayShort",
					get: function() {
						return this.isValid ? uo.weekdays("short", {
							locObj: this.loc
						})[this.weekday - 1] : null
					}
				}, {
					key: "weekdayLong",
					get: function() {
						return this.isValid ? uo.weekdays("long", {
							locObj: this.loc
						})[this.weekday - 1] : null
					}
				}, {
					key: "offset",
					get: function() {
						return this.isValid ? +this.o : NaN
					}
				}, {
					key: "offsetNameShort",
					get: function() {
						return this.isValid ? this.zone.offsetName(this.ts, {
							format: "short",
							locale: this.locale
						}) : null
					}
				}, {
					key: "offsetNameLong",
					get: function() {
						return this.isValid ? this.zone.offsetName(this.ts, {
							format: "long",
							locale: this.locale
						}) : null
					}
				}, {
					key: "isOffsetFixed",
					get: function() {
						return this.isValid ? this.zone.isUniversal : null
					}
				}, {
					key: "isInDST",
					get: function() {
						return !this.isOffsetFixed && (this.offset > this.set({
							month: 1,
							day: 1
						}).offset || this.offset > this.set({
							month: 5
						}).offset)
					}
				}, {
					key: "isInLeapYear",
					get: function() {
						return ne(this.year)
					}
				}, {
					key: "daysInMonth",
					get: function() {
						return se(this.year, this.month)
					}
				}, {
					key: "daysInYear",
					get: function() {
						return this.isValid ? ae(this.year) : NaN
					}
				}, {
					key: "weeksInWeekYear",
					get: function() {
						return this.isValid ? le(this.weekYear) : NaN
					}
				}], [{
					key: "DATE_SHORT",
					get: function() {
						return N
					}
				}, {
					key: "DATE_MED",
					get: function() {
						return R
					}
				}, {
					key: "DATE_MED_WITH_WEEKDAY",
					get: function() {
						return $
					}
				}, {
					key: "DATE_FULL",
					get: function() {
						return C
					}
				}, {
					key: "DATE_HUGE",
					get: function() {
						return I
					}
				}, {
					key: "TIME_SIMPLE",
					get: function() {
						return E
					}
				}, {
					key: "TIME_WITH_SECONDS",
					get: function() {
						return A
					}
				}, {
					key: "TIME_WITH_SHORT_OFFSET",
					get: function() {
						return P
					}
				}, {
					key: "TIME_WITH_LONG_OFFSET",
					get: function() {
						return x
					}
				}, {
					key: "TIME_24_SIMPLE",
					get: function() {
						return F
					}
				}, {
					key: "TIME_24_WITH_SECONDS",
					get: function() {
						return j
					}
				}, {
					key: "TIME_24_WITH_SHORT_OFFSET",
					get: function() {
						return M
					}
				}, {
					key: "TIME_24_WITH_LONG_OFFSET",
					get: function() {
						return D
					}
				}, {
					key: "DATETIME_SHORT",
					get: function() {
						return J
					}
				}, {
					key: "DATETIME_SHORT_WITH_SECONDS",
					get: function() {
						return _
					}
				}, {
					key: "DATETIME_MED",
					get: function() {
						return B
					}
				}, {
					key: "DATETIME_MED_WITH_SECONDS",
					get: function() {
						return V
					}
				}, {
					key: "DATETIME_MED_WITH_WEEKDAY",
					get: function() {
						return L
					}
				}, {
					key: "DATETIME_FULL",
					get: function() {
						return U
					}
				}, {
					key: "DATETIME_FULL_WITH_SECONDS",
					get: function() {
						return q
					}
				}, {
					key: "DATETIME_HUGE",
					get: function() {
						return W
					}
				}, {
					key: "DATETIME_HUGE_WITH_SECONDS",
					get: function() {
						return G
					}
				}]), e
			}();

			function ci(e) {
				if (ui.isDateTime(e)) return e;
				if (e && e.valueOf && z(e.valueOf())) return ui.fromJSDate(e);
				if (e && "object" == typeof e) return ui.fromObject(e);
				throw new k("Unknown datetime argument: " + e + ", of type " + typeof e)
			}
			t.DateTime = ui, t.Duration = no, t.FixedOffsetZone = Ue, t.IANAZone = Ve, t.Info = uo, t.Interval = lo, t.InvalidZone = qe, t.Settings = Ke, t.SystemZone = De, t.VERSION = "2.5.0", t.Zone = je
		},
		"./node_modules/protobufjs/minimal.js": function(e, t, o) {
			"use strict";
			e.exports = o("./node_modules/protobufjs/src/index-minimal.js")
		},
		"./node_modules/protobufjs/src/index-minimal.js": function(e, t, o) {
			"use strict";
			var i = t;

			function r() {
				i.util._configure(), i.Writer._configure(i.BufferWriter), i.Reader._configure(i.BufferReader)
			}
			i.build = "minimal", i.Writer = o("./node_modules/protobufjs/src/writer.js"), i.BufferWriter = o("./node_modules/protobufjs/src/writer_buffer.js"), i.Reader = o("./node_modules/protobufjs/src/reader.js"), i.BufferReader = o("./node_modules/protobufjs/src/reader_buffer.js"), i.util = o("./node_modules/protobufjs/src/util/minimal.js"), i.rpc = o("./node_modules/protobufjs/src/rpc.js"), i.roots = o("./node_modules/protobufjs/src/roots.js"), i.configure = r, r()
		},
		"./node_modules/protobufjs/src/reader.js": function(e, t, o) {
			"use strict";
			e.exports = d;
			var i, r = o("./node_modules/protobufjs/src/util/minimal.js"),
				n = r.LongBits,
				a = r.utf8;

			function s(e, t) {
				return RangeError("index out of range: " + e.pos + " + " + (t || 1) + " > " + e.len)
			}

			function d(e) {
				this.buf = e, this.pos = 0, this.len = e.length
			}
			var l, u = "undefined" != typeof Uint8Array ? function(e) {
					if (e instanceof Uint8Array || Array.isArray(e)) return new d(e);
					throw Error("illegal buffer")
				} : function(e) {
					if (Array.isArray(e)) return new d(e);
					throw Error("illegal buffer")
				},
				c = function() {
					return r.Buffer ? function(e) {
						return (d.create = function(e) {
							return r.Buffer.isBuffer(e) ? new i(e) : u(e)
						})(e)
					} : u
				};

			function p() {
				var e = new n(0, 0),
					t = 0;
				if (!(this.len - this.pos > 4)) {
					for (; t < 3; ++t) {
						if (this.pos >= this.len) throw s(this);
						if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e
					}
					return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0, e
				}
				for (; t < 4; ++t)
					if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;
				if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e;
				if (t = 0, this.len - this.pos > 4) {
					for (; t < 5; ++t)
						if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e
				} else
					for (; t < 5; ++t) {
						if (this.pos >= this.len) throw s(this);
						if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e
					}
				throw Error("invalid varint encoding")
			}

			function v(e, t) {
				return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0
			}

			function m() {
				if (this.pos + 8 > this.len) throw s(this, 8);
				return new n(v(this.buf, this.pos += 4), v(this.buf, this.pos += 4))
			}
			d.create = c(), d.prototype._slice = r.Array.prototype.subarray || r.Array.prototype.slice, d.prototype.uint32 = (l = 4294967295, function() {
				if (l = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return l;
				if (l = (l | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return l;
				if (l = (l | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return l;
				if (l = (l | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return l;
				if (l = (l | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return l;
				if ((this.pos += 5) > this.len) throw this.pos = this.len, s(this, 10);
				return l
			}), d.prototype.int32 = function() {
				return 0 | this.uint32()
			}, d.prototype.sint32 = function() {
				var e = this.uint32();
				return e >>> 1 ^ -(1 & e) | 0
			}, d.prototype.bool = function() {
				return 0 !== this.uint32()
			}, d.prototype.fixed32 = function() {
				if (this.pos + 4 > this.len) throw s(this, 4);
				return v(this.buf, this.pos += 4)
			}, d.prototype.sfixed32 = function() {
				if (this.pos + 4 > this.len) throw s(this, 4);
				return 0 | v(this.buf, this.pos += 4)
			}, d.prototype.float = function() {
				if (this.pos + 4 > this.len) throw s(this, 4);
				var e = r.float.readFloatLE(this.buf, this.pos);
				return this.pos += 4, e
			}, d.prototype.double = function() {
				if (this.pos + 8 > this.len) throw s(this, 4);
				var e = r.float.readDoubleLE(this.buf, this.pos);
				return this.pos += 8, e
			}, d.prototype.bytes = function() {
				var e = this.uint32(),
					t = this.pos,
					o = this.pos + e;
				if (o > this.len) throw s(this, e);
				return this.pos += e, Array.isArray(this.buf) ? this.buf.slice(t, o) : t === o ? new this.buf.constructor(0) : this._slice.call(this.buf, t, o)
			}, d.prototype.string = function() {
				var e = this.bytes();
				return a.read(e, 0, e.length)
			}, d.prototype.skip = function(e) {
				if ("number" == typeof e) {
					if (this.pos + e > this.len) throw s(this, e);
					this.pos += e
				} else
					do {
						if (this.pos >= this.len) throw s(this)
					} while (128 & this.buf[this.pos++]);
				return this
			}, d.prototype.skipType = function(e) {
				switch (e) {
					case 0:
						this.skip();
						break;
					case 1:
						this.skip(8);
						break;
					case 2:
						this.skip(this.uint32());
						break;
					case 3:
						for (; 4 != (e = 7 & this.uint32());) this.skipType(e);
						break;
					case 5:
						this.skip(4);
						break;
					default:
						throw Error("invalid wire type " + e + " at offset " + this.pos)
				}
				return this
			}, d._configure = function(e) {
				i = e, d.create = c(), i._configure();
				var t = r.Long ? "toLong" : "toNumber";
				r.merge(d.prototype, {
					int64: function() {
						return p.call(this)[t](!1)
					},
					uint64: function() {
						return p.call(this)[t](!0)
					},
					sint64: function() {
						return p.call(this).zzDecode()[t](!1)
					},
					fixed64: function() {
						return m.call(this)[t](!0)
					},
					sfixed64: function() {
						return m.call(this)[t](!1)
					}
				})
			}
		},
		"./node_modules/protobufjs/src/reader_buffer.js": function(e, t, o) {
			"use strict";
			e.exports = n;
			var i = o("./node_modules/protobufjs/src/reader.js");
			(n.prototype = Object.create(i.prototype)).constructor = n;
			var r = o("./node_modules/protobufjs/src/util/minimal.js");

			function n(e) {
				i.call(this, e)
			}
			n._configure = function() {
				r.Buffer && (n.prototype._slice = r.Buffer.prototype.slice)
			}, n.prototype.string = function() {
				var e = this.uint32();
				return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e, this.len))
			}, n._configure()
		},
		"./node_modules/protobufjs/src/roots.js": function(e, t, o) {
			"use strict";
			e.exports = {}
		},
		"./node_modules/protobufjs/src/rpc.js": function(e, t, o) {
			"use strict";
			t.Service = o("./node_modules/protobufjs/src/rpc/service.js")
		},
		"./node_modules/protobufjs/src/rpc/service.js": function(e, t, o) {
			"use strict";
			e.exports = r;
			var i = o("./node_modules/protobufjs/src/util/minimal.js");

			function r(e, t, o) {
				if ("function" != typeof e) throw TypeError("rpcImpl must be a function");
				i.EventEmitter.call(this), this.rpcImpl = e, this.requestDelimited = Boolean(t), this.responseDelimited = Boolean(o)
			}(r.prototype = Object.create(i.EventEmitter.prototype)).constructor = r, r.prototype.rpcCall = function e(t, o, r, n, a) {
				if (!n) throw TypeError("request must be specified");
				var s = this;
				if (!a) return i.asPromise(e, s, t, o, r, n);
				if (s.rpcImpl) try {
					return s.rpcImpl(t, o[s.requestDelimited ? "encodeDelimited" : "encode"](n).finish(), (function(e, o) {
						if (e) return s.emit("error", e, t), a(e);
						if (null !== o) {
							if (!(o instanceof r)) try {
								o = r[s.responseDelimited ? "decodeDelimited" : "decode"](o)
							} catch (e) {
								return s.emit("error", e, t), a(e)
							}
							return s.emit("data", o, t), a(null, o)
						}
						s.end(!0)
					}))
				} catch (d) {
					return s.emit("error", d, t), void setTimeout((function() {
						a(d)
					}), 0)
				} else setTimeout((function() {
					a(Error("already ended"))
				}), 0)
			}, r.prototype.end = function(e) {
				return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()), this
			}
		},
		"./node_modules/protobufjs/src/util/longbits.js": function(e, t, o) {
			"use strict";
			e.exports = r;
			var i = o("./node_modules/protobufjs/src/util/minimal.js");

			function r(e, t) {
				this.lo = e >>> 0, this.hi = t >>> 0
			}
			var n = r.zero = new r(0, 0);
			n.toNumber = function() {
				return 0
			}, n.zzEncode = n.zzDecode = function() {
				return this
			}, n.length = function() {
				return 1
			};
			var a = r.zeroHash = "\0\0\0\0\0\0\0\0";
			r.fromNumber = function(e) {
				if (0 === e) return n;
				var t = e < 0;
				t && (e = -e);
				var o = e >>> 0,
					i = (e - o) / 4294967296 >>> 0;
				return t && (i = ~i >>> 0, o = ~o >>> 0, ++o > 4294967295 && (o = 0, ++i > 4294967295 && (i = 0))), new r(o, i)
			}, r.from = function(e) {
				if ("number" == typeof e) return r.fromNumber(e);
				if (i.isString(e)) {
					if (!i.Long) return r.fromNumber(parseInt(e, 10));
					e = i.Long.fromString(e)
				}
				return e.low || e.high ? new r(e.low >>> 0, e.high >>> 0) : n
			}, r.prototype.toNumber = function(e) {
				if (!e && this.hi >>> 31) {
					var t = 1 + ~this.lo >>> 0,
						o = ~this.hi >>> 0;
					return t || (o = o + 1 >>> 0), -(t + 4294967296 * o)
				}
				return this.lo + 4294967296 * this.hi
			}, r.prototype.toLong = function(e) {
				return i.Long ? new i.Long(0 | this.lo, 0 | this.hi, Boolean(e)) : {
					low: 0 | this.lo,
					high: 0 | this.hi,
					unsigned: Boolean(e)
				}
			};
			var s = String.prototype.charCodeAt;
			r.fromHash = function(e) {
				return e === a ? n : new r((s.call(e, 0) | s.call(e, 1) << 8 | s.call(e, 2) << 16 | s.call(e, 3) << 24) >>> 0, (s.call(e, 4) | s.call(e, 5) << 8 | s.call(e, 6) << 16 | s.call(e, 7) << 24) >>> 0)
			}, r.prototype.toHash = function() {
				return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24)
			}, r.prototype.zzEncode = function() {
				var e = this.hi >> 31;
				return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this
			}, r.prototype.zzDecode = function() {
				var e = -(1 & this.lo);
				return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this
			}, r.prototype.length = function() {
				var e = this.lo,
					t = (this.lo >>> 28 | this.hi << 4) >>> 0,
					o = this.hi >>> 24;
				return 0 === o ? 0 === t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : o < 128 ? 9 : 10
			}
		},
		"./node_modules/protobufjs/src/util/minimal.js": function(e, t, o) {
			"use strict";
			(function(e) {
				var i = t;

				function r(e, t, o) {
					for (var i = Object.keys(t), r = 0; r < i.length; ++r) void 0 !== e[i[r]] && o || (e[i[r]] = t[i[r]]);
					return e
				}

				function n(e) {
					function t(e, o) {
						if (!(this instanceof t)) return new t(e, o);
						Object.defineProperty(this, "message", {
							get: function() {
								return e
							}
						}), Error.captureStackTrace ? Error.captureStackTrace(this, t) : Object.defineProperty(this, "stack", {
							value: (new Error).stack || ""
						}), o && r(this, o)
					}
					return (t.prototype = Object.create(Error.prototype)).constructor = t, Object.defineProperty(t.prototype, "name", {
						get: function() {
							return e
						}
					}), t.prototype.toString = function() {
						return this.name + ": " + this.message
					}, t
				}
				i.asPromise = o("./node_modules/@protobufjs/aspromise/index.js"), i.base64 = o("./node_modules/@protobufjs/base64/index.js"), i.EventEmitter = o("./node_modules/@protobufjs/eventemitter/index.js"), i.float = o("./node_modules/@protobufjs/float/index.js"), i.inquire = o("./node_modules/@protobufjs/inquire/index.js"), i.utf8 = o("./node_modules/@protobufjs/utf8/index.js"), i.pool = o("./node_modules/@protobufjs/pool/index.js"), i.LongBits = o("./node_modules/protobufjs/src/util/longbits.js"), i.isNode = Boolean(void 0 !== e && e && e.process && e.process.versions && e.process.versions.node), i.global = i.isNode && e || "undefined" != typeof window && window || "undefined" != typeof self && self || this, i.emptyArray = Object.freeze ? Object.freeze([]) : [], i.emptyObject = Object.freeze ? Object.freeze({}) : {}, i.isInteger = Number.isInteger || function(e) {
					return "number" == typeof e && isFinite(e) && Math.floor(e) === e
				}, i.isString = function(e) {
					return "string" == typeof e || e instanceof String
				}, i.isObject = function(e) {
					return e && "object" == typeof e
				}, i.isset = i.isSet = function(e, t) {
					var o = e[t];
					return !(null == o || !e.hasOwnProperty(t)) && ("object" != typeof o || (Array.isArray(o) ? o.length : Object.keys(o).length) > 0)
				}, i.Buffer = function() {
					try {
						var e = i.inquire("buffer").Buffer;
						return e.prototype.utf8Write ? e : null
					} catch (t) {
						return null
					}
				}(), i._Buffer_from = null, i._Buffer_allocUnsafe = null, i.newBuffer = function(e) {
					return "number" == typeof e ? i.Buffer ? i._Buffer_allocUnsafe(e) : new i.Array(e) : i.Buffer ? i._Buffer_from(e) : "undefined" == typeof Uint8Array ? e : new Uint8Array(e)
				}, i.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array, i.Long = i.global.dcodeIO && i.global.dcodeIO.Long || i.global.Long || i.inquire("long"), i.key2Re = /^true|false|0|1$/, i.key32Re = /^-?(?:0|[1-9][0-9]*)$/, i.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, i.longToHash = function(e) {
					return e ? i.LongBits.from(e).toHash() : i.LongBits.zeroHash
				}, i.longFromHash = function(e, t) {
					var o = i.LongBits.fromHash(e);
					return i.Long ? i.Long.fromBits(o.lo, o.hi, t) : o.toNumber(Boolean(t))
				}, i.merge = r, i.lcFirst = function(e) {
					return e.charAt(0).toLowerCase() + e.substring(1)
				}, i.newError = n, i.ProtocolError = n("ProtocolError"), i.oneOfGetter = function(e) {
					for (var t = {}, o = 0; o < e.length; ++o) t[e[o]] = 1;
					return function() {
						for (var e = Object.keys(this), o = e.length - 1; o > -1; --o)
							if (1 === t[e[o]] && void 0 !== this[e[o]] && null !== this[e[o]]) return e[o]
					}
				}, i.oneOfSetter = function(e) {
					return function(t) {
						for (var o = 0; o < e.length; ++o) e[o] !== t && delete this[e[o]]
					}
				}, i.toJSONOptions = {
					longs: String,
					enums: String,
					bytes: String,
					json: !0
				}, i._configure = function() {
					var e = i.Buffer;
					e ? (i._Buffer_from = e.from !== Uint8Array.from && e.from || function(t, o) {
						return new e(t, o)
					}, i._Buffer_allocUnsafe = e.allocUnsafe || function(t) {
						return new e(t)
					}) : i._Buffer_from = i._Buffer_allocUnsafe = null
				}
			}).call(this, o("./node_modules/webpack/buildin/global.js"))
		},
		"./node_modules/protobufjs/src/writer.js": function(e, t, o) {
			"use strict";
			e.exports = c;
			var i, r = o("./node_modules/protobufjs/src/util/minimal.js"),
				n = r.LongBits,
				a = r.base64,
				s = r.utf8;

			function d(e, t, o) {
				this.fn = e, this.len = t, this.next = void 0, this.val = o
			}

			function l() {}

			function u(e) {
				this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states
			}

			function c() {
				this.len = 0, this.head = new d(l, 0, 0), this.tail = this.head, this.states = null
			}
			var p = function() {
				return r.Buffer ? function() {
					return (c.create = function() {
						return new i
					})()
				} : function() {
					return new c
				}
			};

			function v(e, t, o) {
				t[o] = 255 & e
			}

			function m(e, t) {
				this.len = e, this.next = void 0, this.val = t
			}

			function f(e, t, o) {
				for (; e.hi;) t[o++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, e.hi >>>= 7;
				for (; e.lo > 127;) t[o++] = 127 & e.lo | 128, e.lo = e.lo >>> 7;
				t[o++] = e.lo
			}

			function g(e, t, o) {
				t[o] = 255 & e, t[o + 1] = e >>> 8 & 255, t[o + 2] = e >>> 16 & 255, t[o + 3] = e >>> 24
			}
			c.create = p(), c.alloc = function(e) {
				return new r.Array(e)
			}, r.Array !== Array && (c.alloc = r.pool(c.alloc, r.Array.prototype.subarray)), c.prototype._push = function(e, t, o) {
				return this.tail = this.tail.next = new d(e, t, o), this.len += t, this
			}, m.prototype = Object.create(d.prototype), m.prototype.fn = function(e, t, o) {
				for (; e > 127;) t[o++] = 127 & e | 128, e >>>= 7;
				t[o] = e
			}, c.prototype.uint32 = function(e) {
				return this.len += (this.tail = this.tail.next = new m((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this
			}, c.prototype.int32 = function(e) {
				return e < 0 ? this._push(f, 10, n.fromNumber(e)) : this.uint32(e)
			}, c.prototype.sint32 = function(e) {
				return this.uint32((e << 1 ^ e >> 31) >>> 0)
			}, c.prototype.uint64 = function(e) {
				var t = n.from(e);
				return this._push(f, t.length(), t)
			}, c.prototype.int64 = c.prototype.uint64, c.prototype.sint64 = function(e) {
				var t = n.from(e).zzEncode();
				return this._push(f, t.length(), t)
			}, c.prototype.bool = function(e) {
				return this._push(v, 1, e ? 1 : 0)
			}, c.prototype.fixed32 = function(e) {
				return this._push(g, 4, e >>> 0)
			}, c.prototype.sfixed32 = c.prototype.fixed32, c.prototype.fixed64 = function(e) {
				var t = n.from(e);
				return this._push(g, 4, t.lo)._push(g, 4, t.hi)
			}, c.prototype.sfixed64 = c.prototype.fixed64, c.prototype.float = function(e) {
				return this._push(r.float.writeFloatLE, 4, e)
			}, c.prototype.double = function(e) {
				return this._push(r.float.writeDoubleLE, 8, e)
			};
			var h = r.Array.prototype.set ? function(e, t, o) {
				t.set(e, o)
			} : function(e, t, o) {
				for (var i = 0; i < e.length; ++i) t[o + i] = e[i]
			};
			c.prototype.bytes = function(e) {
				var t = e.length >>> 0;
				if (!t) return this._push(v, 1, 0);
				if (r.isString(e)) {
					var o = c.alloc(t = a.length(e));
					a.decode(e, o, 0), e = o
				}
				return this.uint32(t)._push(h, t, e)
			}, c.prototype.string = function(e) {
				var t = s.length(e);
				return t ? this.uint32(t)._push(s.write, t, e) : this._push(v, 1, 0)
			}, c.prototype.fork = function() {
				return this.states = new u(this), this.head = this.tail = new d(l, 0, 0), this.len = 0, this
			}, c.prototype.reset = function() {
				return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new d(l, 0, 0), this.len = 0), this
			}, c.prototype.ldelim = function() {
				var e = this.head,
					t = this.tail,
					o = this.len;
				return this.reset().uint32(o), o && (this.tail.next = e.next, this.tail = t, this.len += o), this
			}, c.prototype.finish = function() {
				for (var e = this.head.next, t = this.constructor.alloc(this.len), o = 0; e;) e.fn(e.val, t, o), o += e.len, e = e.next;
				return t
			}, c._configure = function(e) {
				i = e, c.create = p(), i._configure()
			}
		},
		"./node_modules/protobufjs/src/writer_buffer.js": function(e, t, o) {
			"use strict";
			e.exports = n;
			var i = o("./node_modules/protobufjs/src/writer.js");
			(n.prototype = Object.create(i.prototype)).constructor = n;
			var r = o("./node_modules/protobufjs/src/util/minimal.js");

			function n() {
				i.call(this)
			}

			function a(e, t, o) {
				e.length < 40 ? r.utf8.write(e, t, o) : t.utf8Write ? t.utf8Write(e, o) : t.write(e, o)
			}
			n._configure = function() {
				n.alloc = r._Buffer_allocUnsafe, n.writeBytesBuffer = r.Buffer && r.Buffer.prototype instanceof Uint8Array && "set" === r.Buffer.prototype.set.name ? function(e, t, o) {
					t.set(e, o)
				} : function(e, t, o) {
					if (e.copy) e.copy(t, o, 0, e.length);
					else
						for (var i = 0; i < e.length;) t[o++] = e[i++]
				}
			}, n.prototype.bytes = function(e) {
				r.isString(e) && (e = r._Buffer_from(e, "base64"));
				var t = e.length >>> 0;
				return this.uint32(t), t && this._push(n.writeBytesBuffer, t, e), this
			}, n.prototype.string = function(e) {
				var t = r.Buffer.byteLength(e);
				return this.uint32(t), t && this._push(a, t, e), this
			}, n._configure()
		},
		"./node_modules/tslib/tslib.es6.js": function(e, t, o) {
			"use strict";
			o.d(t, "h", (function() {
				return r
			})), o.d(t, "a", (function() {
				return n
			})), o.d(t, "e", (function() {
				return a
			})), o.d(t, "i", (function() {
				return s
			})), o.d(t, "l", (function() {
				return d
			})), o.d(t, "j", (function() {
				return l
			})), o.d(t, "k", (function() {
				return u
			})), o.d(t, "d", (function() {
				return c
			})), o.d(t, "b", (function() {
				return p
			})), o.d(t, "c", (function() {
				return v
			})), o.d(t, "f", (function() {
				return m
			})), o.d(t, "g", (function() {
				return f
			}));
			var i = function(e, t) {
				return (i = Object.setPrototypeOf || {
						__proto__: []
					}
					instanceof Array && function(e, t) {
						e.__proto__ = t
					} || function(e, t) {
						for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o])
					})(e, t)
			};

			function r(e, t) {
				if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");

				function o() {
					this.constructor = e
				}
				i(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o)
			}
			var n = function() {
				return (n = Object.assign || function(e) {
					for (var t, o = 1, i = arguments.length; o < i; o++)
						for (var r in t = arguments[o]) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
					return e
				}).apply(this, arguments)
			};

			function a(e, t, o, i) {
				return new(o || (o = Promise))((function(r, n) {
					function a(e) {
						try {
							d(i.next(e))
						} catch (t) {
							n(t)
						}
					}

					function s(e) {
						try {
							d(i.throw(e))
						} catch (t) {
							n(t)
						}
					}

					function d(e) {
						var t;
						e.done ? r(e.value) : (t = e.value, t instanceof o ? t : new o((function(e) {
							e(t)
						}))).then(a, s)
					}
					d((i = i.apply(e, t || [])).next())
				}))
			}

			function s(e, t) {
				var o, i, r, n, a = {
					label: 0,
					sent: function() {
						if (1 & r[0]) throw r[1];
						return r[1]
					},
					trys: [],
					ops: []
				};
				return n = {
					next: s(0),
					throw: s(1),
					return: s(2)
				}, "function" == typeof Symbol && (n[Symbol.iterator] = function() {
					return this
				}), n;

				function s(n) {
					return function(s) {
						return function(n) {
							if (o) throw new TypeError("Generator is already executing.");
							for (; a;) try {
								if (o = 1, i && (r = 2 & n[0] ? i.return : n[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, n[1])).done) return r;
								switch (i = 0, r && (n = [2 & n[0], r.value]), n[0]) {
									case 0:
									case 1:
										r = n;
										break;
									case 4:
										return a.label++, {
											value: n[1],
											done: !1
										};
									case 5:
										a.label++, i = n[1], n = [0];
										continue;
									case 7:
										n = a.ops.pop(), a.trys.pop();
										continue;
									default:
										if (!(r = (r = a.trys).length > 0 && r[r.length - 1]) && (6 === n[0] || 2 === n[0])) {
											a = 0;
											continue
										}
										if (3 === n[0] && (!r || n[1] > r[0] && n[1] < r[3])) {
											a.label = n[1];
											break
										}
										if (6 === n[0] && a.label < r[1]) {
											a.label = r[1], r = n;
											break
										}
										if (r && a.label < r[2]) {
											a.label = r[2], a.ops.push(n);
											break
										}
										r[2] && a.ops.pop(), a.trys.pop();
										continue
								}
								n = t.call(e, a)
							} catch (s) {
								n = [6, s], i = 0
							} finally {
								o = r = 0
							}
							if (5 & n[0]) throw n[1];
							return {
								value: n[0] ? n[1] : void 0,
								done: !0
							}
						}([n, s])
					}
				}
			}
			Object.create;

			function d(e) {
				var t = "function" == typeof Symbol && Symbol.iterator,
					o = t && e[t],
					i = 0;
				if (o) return o.call(e);
				if (e && "number" == typeof e.length) return {
					next: function() {
						return e && i >= e.length && (e = void 0), {
							value: e && e[i++],
							done: !e
						}
					}
				};
				throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
			}

			function l(e, t) {
				var o = "function" == typeof Symbol && e[Symbol.iterator];
				if (!o) return e;
				var i, r, n = o.call(e),
					a = [];
				try {
					for (;
						(void 0 === t || t-- > 0) && !(i = n.next()).done;) a.push(i.value)
				} catch (s) {
					r = {
						error: s
					}
				} finally {
					try {
						i && !i.done && (o = n.return) && o.call(n)
					} finally {
						if (r) throw r.error
					}
				}
				return a
			}

			function u(e, t, o) {
				if (o || 2 === arguments.length)
					for (var i, r = 0, n = t.length; r < n; r++) !i && r in t || (i || (i = Array.prototype.slice.call(t, 0, r)), i[r] = t[r]);
				return e.concat(i || t)
			}

			function c(e) {
				return this instanceof c ? (this.v = e, this) : new c(e)
			}

			function p(e, t, o) {
				if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
				var i, r = o.apply(e, t || []),
					n = [];
				return i = {}, a("next"), a("throw"), a("return"), i[Symbol.asyncIterator] = function() {
					return this
				}, i;

				function a(e) {
					r[e] && (i[e] = function(t) {
						return new Promise((function(o, i) {
							n.push([e, t, o, i]) > 1 || s(e, t)
						}))
					})
				}

				function s(e, t) {
					try {
						(o = r[e](t)).value instanceof c ? Promise.resolve(o.value.v).then(d, l) : u(n[0][2], o)
					} catch (i) {
						u(n[0][3], i)
					}
					var o
				}

				function d(e) {
					s("next", e)
				}

				function l(e) {
					s("throw", e)
				}

				function u(e, t) {
					e(t), n.shift(), n.length && s(n[0][0], n[0][1])
				}
			}

			function v(e) {
				if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
				var t, o = e[Symbol.asyncIterator];
				return o ? o.call(e) : (e = d(e), t = {}, i("next"), i("throw"), i("return"), t[Symbol.asyncIterator] = function() {
					return this
				}, t);

				function i(o) {
					t[o] = e[o] && function(t) {
						return new Promise((function(i, r) {
							(function(e, t, o, i) {
								Promise.resolve(i).then((function(t) {
									e({
										value: t,
										done: o
									})
								}), t)
							})(i, r, (t = e[o](t)).done, t.value)
						}))
					}
				}
			}
			Object.create;

			function m(e, t, o, i) {
				if ("a" === o && !i) throw new TypeError("Private accessor was defined without a getter");
				if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
				return "m" === o ? i : "a" === o ? i.call(e) : i ? i.value : t.get(e)
			}

			function f(e, t, o, i, r) {
				if ("m" === i) throw new TypeError("Private method is not writable");
				if ("a" === i && !r) throw new TypeError("Private accessor was defined without a setter");
				if ("function" == typeof t ? e !== t || !r : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
				return "a" === i ? r.call(e, o) : r ? r.value = o : t.set(e, o), o
			}
		},
		"./node_modules/web-worker/cjs/browser.js": function(e, t) {
			e.exports = Worker
		}
	}
]);
//# sourceMappingURL=https://www.redditstatic.com/desktop2x/vendors~AdminPanel~DevPlatform.ee8083200593ff747afb.js.map