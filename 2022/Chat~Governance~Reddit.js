// https://www.redditstatic.com/desktop2x/Chat~Governance~Reddit.0d119dd8ff11690ae46e.js
// Retrieved at 3/7/2022, 3:00:06 PM by Reddit Dataminer v1.0.0
(window.__LOADABLE_LOADED_CHUNKS__ = window.__LOADABLE_LOADED_CHUNKS__ || []).push([
	["Chat~Governance~Reddit"], {
		"./assets/fonts/IBMPlexSans/font.less": function(e, t, i) {},
		"./assets/fonts/NotoSans/font.less": function(e, t, i) {},
		"./src/chat/actions/channel/draftMessage.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/chat/selectors/channels.ts");
			const s = "CHANNEL__MESSAGE_DRAFT_ADD_SINGLE",
				o = "CHANNEL__MESSAGE_DRAFT_ADD_MULTIPLE",
				d = "CHANNEL__MESSAGE_DRAFT_DELETE_SINGLE",
				a = Object(n.a)(s),
				l = Object(n.a)(o),
				u = Object(n.a)(d),
				c = e => async (t, i) => {
					const n = Object(r.t)(i(), e);
					(null == n ? void 0 : n.length) && t(u(e))
				}, _ = e => async (t, i) => {
					const n = i().channels.draftMessages[e.channelId];
					(null == n ? void 0 : n.messageValue) !== e.messageValue && t(a(e))
				}
		},
		"./src/chat/actions/channelsFilter/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "CHANNELS__SET_FILTER",
				s = "CHANNELS__RESTORE_FILTER",
				o = Object(n.a)(r),
				d = Object(n.a)(s)
		},
		"./src/chat/actions/container.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "SIZE_CHANGED", (function() {
				return o
			})), i.d(t, "FOCUS_CHANGED", (function() {
				return d
			})), i.d(t, "WINDOW_SIZE_CHANGED", (function() {
				return a
			})), i.d(t, "sizeChanged", (function() {
				return l
			})), i.d(t, "windowSizeChangedAction", (function() {
				return u
			})), i.d(t, "popoutOpened", (function() {
				return c
			})), i.d(t, "toggleFocusAction", (function() {
				return _
			})), i.d(t, "changeFocus", (function() {
				return m
			}));
			var n = i("./src/chat/constants/container.ts"),
				r = i("./src/chat/selectors/app.ts"),
				s = i("./src/lib/makeActionCreator/index.ts");
			const o = "CONTAINER__SIZE_CHANGED",
				d = "CONTAINER__FOCUS_CHANGED",
				a = "CONTAINER__WINDOW_SIZE_CHANGED",
				l = Object(s.a)(o),
				u = Object(s.a)(a),
				c = () => async (e, t) => {
					const {
						currentPage: i
					} = t().platform;
					if (!i) throw new Error("Could not open pop-out: current page not defined");
					window.open(i.url, "_blank", "width=1024, height=768"), e(l(n.a.MINIMIZED))
				}, _ = Object(s.a)(d), m = e => async (t, i) => {
					const n = i(),
						s = Object(r.c)(n);
					e !== s && t(_())
				}
		},
		"./src/chat/actions/inviteLink/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "k", (function() {
				return d
			})), i.d(t, "l", (function() {
				return a
			})), i.d(t, "m", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "h", (function() {
				return c
			})), i.d(t, "i", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			})), i.d(t, "j", (function() {
				return p
			})), i.d(t, "c", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/lib/constants/index.ts");
			const s = "INVITE_LINK__CHANGE_INVITE_LINK_EXPIRES_AT_SETTING",
				o = "INVITE_LINK__CHANGE_INVITE_LINK_MAX_USERS_COUNT_SETTING",
				d = "INVITE_LINK__SET_INVITE_LINK_BEGIN",
				a = "INVITE_LINK__SET_INVITE_LINK_END",
				l = "INVITE_LINK__SET_INVITE_LINK_ERROR",
				u = "INVITE_LINK__REVOKE_INVITE_LINKS_BEGIN",
				c = "INVITE_LINK__REVOKE_INVITE_LINKS_END",
				_ = "INVITE_LINK__REVOKE_INVITE_LINKS_ERROR",
				m = "INVITE_LINK__RESTORE_INVITE_LINKS_SETTINGS",
				p = 3,
				h = 5,
				f = {
					AFTER_5_MIN: {
						value: 5 * r.kb,
						originalLabel: "after 30 minutes",
						label: () => n.fbt._("In 5 minutes", null, {
							hk: "10IjW1"
						})
					},
					AFTER_30_MIN: {
						value: 30 * r.kb,
						originalLabel: "after 30 minutes",
						label: () => n.fbt._("In 30 minutes", null, {
							hk: "4DnMFj"
						})
					},
					AFTER_1_HOUR: {
						value: r.Q,
						originalLabel: "after 1 hour",
						label: () => n.fbt._("In 1 hour", null, {
							hk: "1k9vC7"
						})
					},
					AFTER_1_DAY: {
						value: r.B,
						originalLabel: "after 1 day",
						label: () => n.fbt._("In 1 day", null, {
							hk: "bIFHK"
						})
					},
					AFTER_30_DAYS: {
						value: r.pb,
						originalLabel: "after 30 days",
						label: () => n.fbt._("In 30 days", null, {
							hk: "3RESiq"
						})
					},
					NEVER: {
						value: null,
						originalLabel: "never",
						label: () => n.fbt._("Never", null, {
							hk: "2GTbl9"
						})
					}
				},
				b = [1, 5, 10, 50, 100, 250]
		},
		"./src/chat/actions/inviteLink/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "c", (function() {
				return T
			})), i.d(t, "d", (function() {
				return O
			})), i.d(t, "f", (function() {
				return I
			})), i.d(t, "e", (function() {
				return R
			})), i.d(t, "g", (function() {
				return F
			})), i.d(t, "h", (function() {
				return N
			}));
			var n = i("./src/lib/copyToClipboard/index.ts"),
				r = i("./src/lib/makeActionCreator/index.ts"),
				s = i("./src/redditGQL/types.ts"),
				o = i("./src/chat/actions/inviteLink/constants.ts"),
				d = i("./src/chat/actions/toast.ts"),
				a = i("./src/chat/constants/sendbird.ts"),
				l = i("./src/chat/constants/toast.ts"),
				u = i("./src/lib/makeGqlRequest/index.ts"),
				c = i("./src/redditGQL/operations/CreateChatChannelInviteLink.json"),
				_ = i("./src/redditGQL/operations/DestroyInviteLink.json");
			const m = e => Boolean(e && e.data && (null == e ? void 0 : e.errors));
			var p, h, f, b = i("./src/chat/selectors/inviteLink.ts");
			! function(e) {
				e.CHAT_SETTINGS = "chat_settings", e.EASY_ACCESS = "easy_access"
			}(p || (p = {})),
			function(e) {
				e.TIME = "time", e.MEMBER = "member"
			}(h || (h = {})),
			function(e) {
				e.NOT_FOUND = "not_found", e.GONE = "gone", e.INVALID_REQUEST = "invalid_request", e.RATE_LIMITED = "rate_limited"
			}(f || (f = {}));
			const g = Object(r.a)(o.k),
				w = Object(r.a)(o.l),
				v = Object(r.a)(o.m),
				y = Object(r.a)(o.g),
				E = Object(r.a)(o.h),
				S = Object(r.a)(o.i),
				T = Object(r.a)(o.a),
				O = Object(r.a)(o.b),
				I = Object(r.a)(o.f),
				R = (e, t) => async (i, r, {
					gqlContext: _
				}) => {
					var p, h, f;
					const y = r();
					if (Object(b.c)(y, e)) return;
					i(g({
						inviteLinkDataModelId: e
					}));
					const E = Object(b.a)(y, e),
						S = Object(b.b)(y, e),
						T = E && (null === (p = o.d[E]) || void 0 === p ? void 0 : p.value) ? new Date(Date.now() + (null !== (f = null === (h = o.d[E]) || void 0 === h ? void 0 : h.value) && void 0 !== f ? f : 0)) : null,
						O = await ((e, t) => Object(u.a)(e, {
							...c,
							variables: {
								input: t
							}
						}))(_(), {
							channelSendbirdId: t ? null : a.a + e,
							customType: t ? s.b.Direct : s.b.Group,
							expiresAt: T,
							maxJoiners: S
						});
					if (O.ok && (e => {
							var t, i;
							return Boolean(e && e.data && (null === (i = null === (t = null == e ? void 0 : e.data) || void 0 === t ? void 0 : t.createChatChannelInviteLink) || void 0 === i ? void 0 : i.inviteUrl))
						})(O.body)) {
						const t = O.body.data.createChatChannelInviteLink.inviteUrl;
						i(w({
							inviteLinkDataModelId: e,
							inviteLink: t
						})), Object(n.a)(t), i(Object(d.g)({
							toast: l.a.LinkCopied
						})), i(Object(d.c)(o.j))
					} else if (m(O.body)) {
						i(Object(d.g)({
							toast: l.a.SomethingWentWrong
						})), i(Object(d.c)(o.j));
						const t = O.body.errors;
						i(v({
							inviteLinkDataModelId: e,
							errors: t
						}))
					}
				}, F = (e, t) => async (i, n, {
					gqlContext: r
				}) => {
					if (Object(b.d)(n(), e)) return;
					i(y({
						inviteLinkDataModelId: e
					}));
					const a = await ((e, t) => Object(u.a)(e, {
						..._,
						variables: {
							input: t
						}
					}))(r(), {
						channelId: t ? null : e,
						customType: t ? s.b.Direct : s.b.Group
					});
					if (a.ok) i(E({
						inviteLinkDataModelId: e
					})), i(Object(d.g)({
						toast: l.a.LinkDisabled
					})), i(Object(d.c)(o.j));
					else if (m(a.body)) {
						i(Object(d.g)({
							toast: l.a.SomethingWentWrong
						})), i(Object(d.c)(o.j));
						const t = a.body.errors;
						i(S({
							inviteLinkDataModelId: e,
							errors: t
						}))
					}
				}, N = e => async t => {
					switch (e) {
						case f.NOT_FOUND:
							t(Object(d.g)({
								toast: l.a.ShareLinkNotFound
							}));
							break;
						case f.GONE:
							t(Object(d.g)({
								toast: l.a.ShareLinkGone
							}));
							break;
						case f.INVALID_REQUEST:
							t(Object(d.g)({
								toast: l.a.ShareLinkInvalidRequest
							}));
							break;
						case f.RATE_LIMITED:
							t(Object(d.g)({
								toast: l.a.ShareLinkRateLimit
							}))
					}
				}
		},
		"./src/chat/actions/inviteLink/localStorage.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./src/lib/cache/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/chat/actions/inviteLink/index.ts"),
				a = i("./src/chat/constants/channels.ts"),
				l = i("./src/chat/selectors/platform.ts"),
				u = i("./src/chat/selectors/user.ts");
			const c = e => {
					const t = e.user.account && e.user.account.id,
						i = Object(s.c)(o.q.CHAT, o.y.CHAT_INVITE_USER_ID, t || "unknown"),
						n = Object(s.b)(i);
					if (n) return localStorage.removeItem(i), n
				},
				_ = () => async (e, t) => {
					const i = t(),
						n = Object(u.a)(i),
						r = Object(l.b)(i),
						d = Object(s.c)(o.q.CHAT, o.y.CHAT_INVITE_USER_ID, n || "unknown");
					Object(s.d)(d, r, o.Q)
				}, m = r()(e => {
					const t = e.getState(),
						i = t.user.account && t.user.account.id,
						n = Object(s.c)(o.q.CHAT, o.y.CHAT_INVITE_LINK_ERROR, i || "unknown"),
						r = Object(s.b)(n);
					r && (e.dispatch(Object(d.h)(r)), localStorage.removeItem(n))
				}), p = () => async (e, t) => {
					const i = t(),
						n = Object(u.a)(i),
						r = Object(l.c)(i),
						d = r && r[a.e];
					if (d) {
						const e = Object(s.c)(o.q.CHAT, o.y.CHAT_INVITE_LINK_ERROR, n || "unknown");
						Object(s.d)(e, d, o.Q)
					}
				}
		},
		"./src/chat/actions/message/unreadCount.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return _
			})), i.d(t, "b", (function() {
				return p
			})), i.d(t, "c", (function() {
				return h
			}));
			var n = i("./node_modules/lodash/debounce.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/isEqual.js"),
				o = i.n(s),
				d = i("./src/lib/constants/index.ts"),
				a = i("./src/lib/makeActionCreator/index.ts"),
				l = i("./src/chat/endpoints/sendbird/index.ts"),
				u = i("./src/chat/helpers/errors.ts"),
				c = i("./src/chat/selectors/user.ts");
			const _ = "MESSAGE__SET_UNREAD_COUNT",
				m = Object(a.a)(_),
				p = e => {
					const {
						badgeIndicators: {
							chatUnreadMessages: t,
							chatHasNewMessages: i,
							chatUnacceptedInvites: n,
							chatUnreadMentions: r,
							chatDirectUnacceptedInvites: s,
							chatGroupUnacceptedInvites: o
						}
					} = e;
					return {
						unreadMessages: Number(t.count) || 0,
						unacceptedInvites: Number(n.count) || 0,
						unreadMentions: Number(r.count) || 0,
						hasNewMessages: Boolean(i.isShowing),
						chatDirectUnacceptedInvites: Number(s.count) || 0,
						chatGroupUnacceptedInvites: Number(o.count) || 0
					}
				},
				h = r()((e, t, i, n, r, s) => async (d, a, {
					gqlContext: _
				}) => {
					const h = a();
					let f;
					(f = "number" == typeof i || "boolean" == typeof n ? {
						unreadMentions: t || 0,
						unreadMessages: e || 0,
						hasNewMessages: n || !1,
						unacceptedInvites: i || 0,
						chatDirectUnacceptedInvites: s || 0,
						chatGroupUnacceptedInvites: r || 0
					} : await (async (e, t) => {
						if (Object(c.c)(e)) try {
							const e = await Object(l.h)(t());
							if (Object(l.k)(e.body)) return p(e.body.data)
						} catch (i) {
							Object(u.b)(`Error getting proxy unread count: ${i}`)
						}
					})(h, _)) && !o()(h.messages.unread, f) && await d(m(f))
				}, d.Sb, {
					leading: !0
				})
		},
		"./src/chat/actions/settings/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return m
			})), i.d(t, "a", (function() {
				return p
			})), i.d(t, "b", (function() {
				return h
			})), i.d(t, "f", (function() {
				return f
			})), i.d(t, "e", (function() {
				return g
			})), i.d(t, "d", (function() {
				return w
			})), i.d(t, "i", (function() {
				return v
			})), i.d(t, "h", (function() {
				return y
			})), i.d(t, "g", (function() {
				return E
			}));
			var n = i("./node_modules/react-router-redux/es/index.js"),
				r = i("./src/lib/makeActionCreator/index.ts"),
				s = i("./src/chat/actions/sidebar.ts"),
				o = i("./src/chat/actions/theme.ts"),
				d = i("./src/chat/customMiddleware/lastSelectedChannel.ts"),
				a = i("./src/chat/helpers/urls/index.ts"),
				l = i("./src/chat/models/Sidebar/index.ts"),
				u = i("./src/chat/selectors/channels.ts"),
				c = i("./src/chat/selectors/settings.ts"),
				_ = i("./src/chat/selectors/sidebar.ts");
			const m = "SETTINGS__SHOW_CHAT_LINK_PROMPT_COUNT_SET",
				p = "SETTINGS__CHAT_LINK_PROMPT_HIDE";
			var h;
			! function(e) {
				e[e.SESSION_1 = 1] = "SESSION_1", e[e.SESSION_3 = 3] = "SESSION_3", e[e.SESSION_25 = 25] = "SESSION_25", e[e.SESSION_100 = 100] = "SESSION_100", e[e.SESSION_LAST = 101] = "SESSION_LAST"
			}(h || (h = {}));
			const f = Object(r.a)(m),
				b = Object(r.a)(p),
				g = e => async (t, i) => {
					Object(c.c)(i()) || t(f(e))
				}, w = () => async (e, t) => {
					Object(c.b)(t()) || e(b())
				}, v = () => async (e, t) => {
					const i = t();
					if (Object(_.a)(i) === l.a.SETTINGS) {
						e(Object(s.e)(l.a.CHANNELS));
						const i = Object(d.b)(t());
						if (i) {
							const r = Object(u.h)(t(), i);
							if (r) {
								const t = Object(a.getChannelUrl)(r),
									i = Object(a.getRedirectURL)(t);
								return void e(Object(n.b)(i))
							}
						}
					} else e(Object(s.e)(l.a.SETTINGS))
				}, y = () => async (e, t) => {
					const i = Object(u.n)(t());
					if (!i) return;
					const r = Object(a.themesUrl)(i);
					e(Object(o.chatThemeSettingsClickedAction)()), e(Object(n.b)(r))
				}, E = () => async (e, t) => {
					const i = Object(u.n)(t());
					if (!i) return;
					const r = Object(a.privacyAndSupportUrl)(i);
					e(Object(n.b)(r))
				}
		},
		"./src/chat/actions/sidebar.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "f", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "SIDEBAR__SET_LAST_CHANNEL_ID",
				s = Object(n.a)(r),
				o = "SIDEBAR__TOGGLE_SIDEBAR",
				d = Object(n.a)(o),
				a = "SIDEBAR__SET_SIDEBAR_COMPONENT_TYPE",
				l = Object(n.a)(a)
		},
		"./src/chat/actions/theme.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "GLOBAL_THEME_CHANGED", (function() {
				return d
			})), i.d(t, "CHAT_THEME_CHANGED", (function() {
				return a
			})), i.d(t, "CHAT_THEME_APPLIED", (function() {
				return l
			})), i.d(t, "CHAT_THEME_CANCELED", (function() {
				return u
			})), i.d(t, "CHAT_THEME_RESTORED", (function() {
				return c
			})), i.d(t, "CHAT_THEME_PROMPT_CLICKED", (function() {
				return _
			})), i.d(t, "CHAT_THEME_SETTINGS_CLICKED", (function() {
				return m
			})), i.d(t, "CHAT_THEME_SHOW_PROMPT_COUNT_SET", (function() {
				return p
			})), i.d(t, "MAX_SHOW_PROMPT_COUNT", (function() {
				return b
			})), i.d(t, "MAX_SHOW_COLORED_SETTINGS", (function() {
				return g
			})), i.d(t, "changeChatThemeAction", (function() {
				return w
			})), i.d(t, "chatThemeShowPromptCountSetAction", (function() {
				return v
			})), i.d(t, "chatThemeSettingsClickedAction", (function() {
				return O
			})), i.d(t, "clickThemePrompt", (function() {
				return I
			})), i.d(t, "chatThemeRestoredAction", (function() {
				return R
			})), i.d(t, "themeToggle", (function() {
				return F
			})), i.d(t, "switchTheme", (function() {
				return N
			})), i.d(t, "applyChatTheme", (function() {
				return C
			})), i.d(t, "cancelChatTheme", (function() {
				return j
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/chat/actions/settings/index.ts"),
				s = i("./src/chat/constants/theme.ts"),
				o = i("./src/chat/selectors/theme.ts");
			const d = "THEMES__GLOBAL_THEME_CHANGED",
				a = "THEMES__CHAT_THEME_CHANGED",
				l = "THEMES__CHAT_THEME_APPLIED",
				u = "THEMES__CHAT_THEME_CANCELED",
				c = "THEMES__CHAT_THEME_RESTORED",
				_ = "THEMES__CHAT_THEME_PROMPT_CLICKED",
				m = "THEMES__CHAT_THEME_SETTINGS_CLICKED",
				p = "THEMES__CHAT_THEME_SHOW_PROMPT_COUNT_SET",
				{
					REDDIT: h,
					NIGHT: f
				} = s.b,
				b = 3,
				g = 6,
				w = Object(n.a)(a),
				v = Object(n.a)(p),
				y = Object(n.a)(d),
				E = Object(n.a)(l),
				S = Object(n.a)(u),
				T = Object(n.a)(_),
				O = Object(n.a)(m),
				I = () => async (e, t) => {
					e(Object(r.h)()), e(T())
				}, R = Object(n.a)(c), F = () => async (e, t) => {
					const {
						globalTheme: i
					} = t().user.prefs;
					e(y({
						themeKey: i === h ? f : h
					}))
				}, N = e => async (t, i) => {
					t(y({
						themeKey: e ? f : h
					}))
				}, C = () => async (e, t) => {
					const i = Object(o.a)(t());
					e(E({
						themeKey: i
					}))
				}, j = () => async (e, t) => {
					e(S())
				}
		},
		"./src/chat/actions/toast.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "g", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeActionCreator/index.ts"),
				s = i("./src/chat/constants/toast.ts");
			const o = "TOAST__RESET_TOAST",
				d = Object(r.a)(o),
				a = "TOAST__UPDATE_TOAST",
				l = Object(r.a)(a),
				u = (e = 3) => async t => {
					setTimeout(() => t(d()), e * n.Sb)
				}, c = (e = 3) => async t => {
					t(l({
						toast: s.a.SomethingWentWrong
					})), t(u(e))
				}, _ = (e, t = 3) => async i => {
					for (const r of e) await new Promise(e => {
						i(l({
							toast: r
						})), i(u(t)), setTimeout(e, t * n.Sb + 300)
					})
				}
		},
		"./src/chat/actions/uploads/prompt.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/chat/selectors/uploads.ts");
			const s = "UPLOAD__SHOW_PROMPT_COUNT_SET";
			var o;
			! function(e) {
				e[e.FIRST = 1] = "FIRST", e[e.SECOND = 3] = "SECOND", e[e.LAST = 4] = "LAST"
			}(o || (o = {}));
			const d = Object(n.a)(s),
				a = e => async (t, i) => {
					Object(r.f)(i()) || t(d(e))
				}
		},
		"./src/chat/constants/channels.ts": function(e, t, i) {
			"use strict";
			var n, r;
			i.d(t, "b", (function() {
					return n
				})), i.d(t, "a", (function() {
					return r
				})), i.d(t, "f", (function() {
					return s
				})), i.d(t, "e", (function() {
					return o
				})), i.d(t, "j", (function() {
					return d
				})), i.d(t, "i", (function() {
					return a
				})), i.d(t, "d", (function() {
					return l
				})), i.d(t, "g", (function() {
					return u
				})), i.d(t, "h", (function() {
					return c
				})), i.d(t, "c", (function() {
					return _
				})),
				function(e) {
					e.JOINED = "JOINED", e.INVITED = "INVITED", e.PARTIAL = "PARTIAL", e.UNSORTED = "NONE"
				}(n || (n = {})),
				function(e) {
					e.BLOCK = "block", e.CREATE = "create", e.DENY = "deny", e.HIDE_CHANNEL = "hide", e.INVITE_LINK_SETTINGS = "invite_link_settings", e.INVITE_MEMBERS = "invite", e.LEAVE = "leave", e.PRIVACY_SUPPORT = "privacy_support", e.SHARE = "share", e.SHARE_NEW_CHANNEL = "share_new", e.START_GROUP = "start_group", e.THEMES = "themes", e.VIEW_JOIN = "join", e.VIEW_ABOUT = "about", e.VIEW_NSFW_CONFIRMATION = "nsfw", e.VIEW_PRIVATE = "private", e.VIEW_INVITE = "invited"
				}(r || (r = {}));
			const s = "link_sharing",
				o = "error",
				d = [r.DENY, r.VIEW_JOIN, r.VIEW_PRIVATE];
			var a, l;
			! function(e) {
				e.ALL = "all", e.JOINED = "joined_only", e.INVITED = "invited_only", e.INVITED_BY_FRIEND = "invited_by_friend", e.INVITED_BY_NON_FRIEND = "invited_by_non_friend"
			}(a || (a = {})),
			function(e) {
				e.LATEST_MESSAGE = "latest_last_message", e.CHRONOLOGICAL = "chronological", e.ALPHABETICAL = "channel_name_alphabetical", e.METADATA_ALPHABETICAL = "metadata_value_alphabetical"
			}(l || (l = {}));
			const u = 30,
				c = 99;
			var _;
			! function(e) {
				e.All = "all", e.UnreadMessages = "unread_message_count_only", e.Off = "off"
			}(_ || (_ = {}))
		},
		"./src/chat/constants/container.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = {
					EMBED: "embed",
					FULL: "full",
					HIDDEN: "hidden",
					MINIMIZED: "minimized"
				},
				r = {
					embed: {
						width: 632,
						height: 506
					},
					full: {
						width: void 0,
						height: void 0
					},
					hidden: {
						width: 0,
						height: 0
					},
					minimized: {
						width: 126,
						height: 40
					}
				}
		},
		"./src/chat/constants/messages.ts": function(e, t, i) {
			"use strict";
			var n, r, s, o, d, a;
			i.d(t, "d", (function() {
					return n
				})), i.d(t, "e", (function() {
					return r
				})), i.d(t, "f", (function() {
					return s
				})), i.d(t, "c", (function() {
					return o
				})), i.d(t, "a", (function() {
					return d
				})), i.d(t, "b", (function() {
					return a
				})),
				function(e) {
					e.SYSTEM = "system", e.USER = "user", e.PENDING = "pending"
				}(n || (n = {})),
				function(e) {
					e.ADMIN = "admin", e.USER = "user", e.FILE = "file"
				}(r || (r = {})),
				function(e) {
					e.ADMIN = "system", e.USER = "user", e.PENDING = "pending", e.FILE = "file"
				}(s || (s = {})),
				function(e) {
					e.TEXT = "text", e.POST = "post", e.USER_POST = "userPost", e.EMBED = "embedCollection", e.SNOOMOJI = "snoomoji", e.SUBREDDIT = "subreddit", e.COMMENT = "comment", e.GIF = "gif", e.IMAGE = "image"
				}(o || (o = {})),
				function(e) {
					e.DELETE = "delete", e.REPORT = "report"
				}(d || (d = {})),
				function(e) {
					e.USERS = "users", e.CHANNEL = "channel"
				}(a || (a = {}))
		},
		"./src/chat/constants/sendbird.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = "sendbird_group_channel_";
			var r;
			! function(e) {
				e.Open = "OPEN", e.Closed = "CLOSED", e.Pending = "PENDING"
			}(r || (r = {}))
		},
		"./src/chat/constants/theme.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			}));
			const n = {
					REDDIT: "REDDIT",
					NIGHT: "NIGHT"
				},
				r = n.REDDIT
		},
		"./src/chat/constants/toast.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.ConnectionClosed = "connectionClosed", e.ConnectionPending = "connectionPending", e.ConnectionOpen = "connectionOpen", e.ChangesSaved = "ChangesSaved", e.SomethingWentWrong = "somethingWentWrong", e.LinkCopied = "linkCopied", e.LinkDisabled = "linkDisabled", e.MuteNotifications = "muteNotifications", e.ShareLinkNotFound = "shareLinkNotFound", e.ShareLinkGone = "shareLinkGone", e.ShareLinkInvalidRequest = "shareLinkInvalidRequest", e.ShareLinkRateLimit = "shareLinkRateLimit", e.UnmuteNotifications = "unmuteNotifications"
				}(n || (n = {}))
		},
		"./src/chat/customMiddleware/channelsFilter.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return u
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./src/lib/cache/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/chat/actions/channelsFilter/index.ts"),
				a = i("./src/chat/customMiddleware/noop.ts");
			let l;
			const u = r()(e => {
				const t = e.getState(),
					i = t.user.account && t.user.account.id;
				l = Object(s.c)(o.q.CHAT, o.y.CHAT_CHANNELS_FILTER_KEY, i || "unknown");
				const n = Object(s.b)(l);
				(null == n ? void 0 : n.filter.length) && e.dispatch(Object(d.c)(n))
			});
			t.a = e => {
				if ("undefined" == typeof window) return a.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return l = Object(s.c)(o.q.CHAT, o.y.CHAT_CHANNELS_FILTER_KEY, n), e => t => {
					const i = e(t);
					switch (t.type) {
						case d.b:
							Object(s.d)(l, t.payload, o.pb)
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/chatThemeKey.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./src/lib/cache/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/chat/actions/theme.ts"),
				a = i("./src/chat/customMiddleware/noop.ts"),
				l = i("./src/chat/selectors/experiments.ts"),
				u = i("./src/chat/selectors/inviteLink.ts");
			let c, _;
			const m = r()(e => {
					const t = e.getState(),
						i = t.user.account && t.user.account.id;
					c = Object(s.c)(o.q.CHAT, o.y.CHAT_THEME_KEY, i || "unknown");
					const n = Object(s.b)(c);
					n && e.dispatch(Object(d.chatThemeRestoredAction)({
						themeKey: n
					}))
				}),
				p = r()(e => {
					const t = e.getState(),
						i = t.user.account && t.user.account.id;
					_ = Object(s.c)(o.q.CHAT, o.y.CHAT_SHOW_THEMES_PROMPT_COUNT_KEY, i || "unknown");
					const n = Object(s.b)(_);
					let r = null == n ? 0 : n;
					Object(l.q)(t) && !Object(u.e)(t) && e.dispatch(Object(d.chatThemeShowPromptCountSetAction)(++r))
				});
			t.a = e => {
				if ("undefined" == typeof window) return a.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return c = Object(s.c)(o.q.CHAT, o.y.CHAT_THEME_KEY, n), _ = Object(s.c)(o.q.CHAT, o.y.CHAT_SHOW_THEMES_PROMPT_COUNT_KEY, n || "unknown"), e => t => {
					const i = e(t);
					switch (t.type) {
						case d.CHAT_THEME_APPLIED:
							Object(s.d)(c, t.payload.themeKey, o.rc);
							break;
						case d.CHAT_THEME_SHOW_PROMPT_COUNT_SET:
							t.payload <= d.MAX_SHOW_COLORED_SETTINGS && Object(s.d)(_, t.payload, o.rc);
							break;
						case d.CHAT_THEME_PROMPT_CLICKED:
							Object(s.d)(_, d.MAX_SHOW_PROMPT_COUNT, o.rc);
							break;
						case d.CHAT_THEME_SETTINGS_CLICKED:
							Object(s.d)(_, d.MAX_SHOW_COLORED_SETTINGS, o.rc)
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/containerSize.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return g
			})), i.d(t, "c", (function() {
				return v
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./src/lib/cache/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/postParentMessage/index.ts"),
				a = i("./src/chat/actions/container.ts"),
				l = i("./src/chat/constants/container.ts"),
				u = i("./src/chat/customMiddleware/noop.ts"),
				c = i("./src/chat/selectors/app.ts"),
				_ = i("./src/chat/selectors/inviteLink.ts");
			const m = l.a.HIDDEN,
				p = l.a.HIDDEN,
				h = e => e && l.b[e] && e !== l.a.FULL && e || m || p;
			let f;
			const b = e => Object(d.a)({
					type: "resize.chat",
					data: {
						size: e,
						dimensions: l.b[e]
					}
				}),
				g = r()(e => {
					const t = e.getState(),
						i = Object(c.g)(t),
						n = t.user.account && t.user.account.id,
						r = v(n),
						s = w(n),
						o = Object(_.e)(t);
					let d;
					d = i ? s && r ? s : t.meta.isRedesign ? p : i ? m : l.a.FULL : l.a.FULL, o && (d = l.a.EMBED), e.dispatch(Object(a.sizeChanged)(d)), b(d)
				}),
				w = e => (f = Object(s.c)(o.q.CHAT, o.y.CHAT_CONTAINER_SIZE_KEY, e || "unknown"), Object(s.b)(f)),
				v = e => {
					const t = w(e);
					return !(!t || t === l.a.HIDDEN)
				};
			t.a = e => {
				if ("undefined" == typeof window) return u.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return f = Object(s.c)(o.q.CHAT, o.y.CHAT_CONTAINER_SIZE_KEY, n), window.addEventListener("storage", e => {
					switch (e.key) {
						case f:
							0
					}
				}), e => t => {
					const i = e(t);
					switch (t.type) {
						case a.SIZE_CHANGED: {
							const e = h(t.payload);
							(e => {
								Object(s.d)(f, e, o.qc)
							})(e), b(e);
							break
						}
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/draftMessageText.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return m
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/uniqBy.js"),
				o = i.n(s),
				d = i("./src/lib/cache/index.ts"),
				a = i("./src/lib/constants/index.ts"),
				l = i("./src/chat/actions/channel/draftMessage.ts"),
				u = i("./src/chat/customMiddleware/noop.ts"),
				c = i("./src/chat/selectors/inviteLink.ts");
			let _;
			const m = r()(e => {
				const t = e.getState(),
					i = t.user.account && t.user.account.id;
				_ = Object(d.c)(a.q.CHAT, a.y.CHAT_DRAFT_MESSAGES_KEY, i || "unknown");
				const n = Object(d.b)(_);
				(null == n ? void 0 : n.length) && !Object(c.e)(t) && e.dispatch(Object(l.d)(n))
			});
			t.a = e => {
				if ("undefined" == typeof window) return u.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return _ = Object(d.c)(a.q.CHAT, a.y.CHAT_DRAFT_MESSAGES_KEY, n), e => t => {
					const i = e(t);
					switch (t.type) {
						case l.b: {
							const {
								channelId: e,
								messageValue: i
							} = t.payload, n = Object(d.b)(_) || [], r = o()([...n, t.payload], "channelId").map(t => t.channelId === e ? {
								...t,
								messageValue: i
							} : t);
							Object(d.d)(_, r, a.pb);
							break
						}
						case l.c: {
							const e = Object(d.b)(_) || [];
							if (e.length) {
								const i = e.filter(e => e.channelId !== t.payload);
								Object(d.d)(_, i, a.pb)
							}
							break
						}
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/inviteLinkSettings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return m
			}));
			var n = i("./node_modules/lodash/isEmpty.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/once.js"),
				o = i.n(s),
				d = i("./src/lib/cache/index.ts"),
				a = i("./src/lib/constants/index.ts"),
				l = i("./src/chat/actions/inviteLink/index.ts"),
				u = i("./src/chat/actions/inviteLink/constants.ts"),
				c = i("./src/chat/customMiddleware/noop.ts");
			let _;
			const m = o()(e => {
				const t = e.getState(),
					i = t.user.account && t.user.account.id;
				_ = Object(d.c)(a.q.CHAT, a.y.CHAT_CHAT_INVITE_LINK_SETTINGS, i || "unknown");
				const n = Object(d.b)(_);
				n && !r()(n) && e.dispatch(Object(l.f)(n))
			});
			t.a = e => {
				if ("undefined" == typeof window) return c.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return _ = Object(d.c)(a.q.CHAT, a.y.CHAT_CHAT_INVITE_LINK_SETTINGS, n), e => t => {
					const i = e(t);
					switch (t.type) {
						case u.a: {
							const e = Object(d.b)(_) || [],
								i = {
									...e,
									[t.payload.inviteLinkDataModelId]: {
										...e[t.payload.inviteLinkDataModelId],
										durationLabel: t.payload.durationLabel
									}
								};
							Object(d.d)(_, i, a.rc);
							break
						}
						case u.b: {
							const e = Object(d.b)(_) || [],
								i = {
									...e,
									[t.payload.inviteLinkDataModelId]: {
										...e[t.payload.inviteLinkDataModelId] || {},
										maxUsersCount: t.payload.maxUsersCount
									}
								};
							Object(d.d)(_, i, a.rc);
							break
						}
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/lastSelectedChannel.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return a
			}));
			var n = i("./src/lib/cache/index.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/chat/actions/sidebar.ts"),
				o = i("./src/chat/customMiddleware/noop.ts");
			let d;
			const a = e => {
				const t = e.user.account && e.user.account.id;
				return d = Object(n.c)(r.q.CHAT, r.y.CHAT_LAST_SELECTED_CHANNEL_ID_KEY, t || "unknown"), Object(n.b)(d)
			};
			t.a = e => {
				if ("undefined" == typeof window) return o.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					a = i && i.id || "unknown";
				return d = Object(n.c)(r.q.CHAT, r.y.CHAT_LAST_SELECTED_CHANNEL_ID_KEY, a), e => t => {
					const i = e(t);
					switch (t.type) {
						case s.a:
							Object(n.d)(d, t.payload, r.pb)
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/noop.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => t => e(t)
		},
		"./src/chat/customMiddleware/settings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return _
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./src/lib/cache/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/chat/actions/settings/index.ts"),
				a = i("./src/chat/customMiddleware/noop.ts"),
				l = i("./src/chat/selectors/experiments.ts"),
				u = i("./src/chat/selectors/inviteLink.ts");
			let c;
			const _ = r()(e => {
				const t = e.getState(),
					i = Object(l.c)(t),
					n = Object(l.b)(t);
				if (!i && !n) return;
				const r = t.user.account && t.user.account.id;
				c = Object(s.c)(o.q.CHAT, o.y.CHAT_CHAT_LINK_PROMPT_COUNT_KEY, r || "unknown");
				const a = Object(s.b)(c);
				let _ = null == a ? 0 : a;
				Object(u.e)(t) || e.dispatch(Object(d.f)(++_))
			});
			t.a = e => {
				if ("undefined" == typeof window) return a.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return c = Object(s.c)(o.q.CHAT, o.y.CHAT_CHAT_LINK_PROMPT_COUNT_KEY, n || "unknown"), e => t => {
					const i = e(t);
					switch (t.type) {
						case d.c:
							t.payload <= d.b.SESSION_LAST && Object(s.d)(c, t.payload, o.rc)
					}
					return i
				}
			}
		},
		"./src/chat/customMiddleware/uploadPrompt.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return _
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./src/lib/cache/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/chat/actions/uploads/prompt.ts"),
				a = i("./src/chat/customMiddleware/noop.ts"),
				l = i("./src/chat/selectors/experiments.ts"),
				u = i("./src/chat/selectors/inviteLink.ts");
			let c;
			const _ = r()(e => {
				const t = e.getState(),
					i = t.user.account && t.user.account.id;
				c = Object(s.c)(o.q.CHAT, o.y.CHAT_UPLOAD_PROMPT_COUNT_KEY, i || "unknown");
				const n = Object(s.b)(c),
					r = Object(l.o)(t),
					a = Object(l.n)(t);
				let _ = null == n ? 0 : n;
				(r || a) && !Object(u.e)(t) && e.dispatch(Object(d.d)(++_))
			});
			t.a = e => {
				if ("undefined" == typeof window) return a.a;
				const t = e.getState(),
					{
						user: {
							account: i
						}
					} = t,
					n = i && i.id || "unknown";
				return c = Object(s.c)(o.q.CHAT, o.y.CHAT_UPLOAD_PROMPT_COUNT_KEY, n || "unknown"), e => t => {
					const i = e(t);
					switch (t.type) {
						case d.a:
							t.payload <= d.b.LAST && Object(s.d)(c, t.payload, o.rc)
					}
					return i
				}
			}
		},
		"./src/chat/endpoints/sendbird/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "k", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "g", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "b", (function() {
				return f
			})), i.d(t, "j", (function() {
				return b
			})), i.d(t, "a", (function() {
				return g
			})), i.d(t, "h", (function() {
				return w
			})), i.d(t, "i", (function() {
				return v
			})), i.d(t, "c", (function() {
				return y
			})), i.d(t, "l", (function() {
				return E
			})), i.d(t, "m", (function() {
				return S
			})), i.d(t, "o", (function() {
				return T
			})), i.d(t, "d", (function() {
				return O
			})), i.d(t, "n", (function() {
				return I
			}));
			var n = i("./src/config.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/makeApiRequest/index.ts"),
				o = i("./src/lib/makeGqlRequest/index.ts"),
				d = i("./src/lib/omitHeaders/index.ts"),
				a = i("./src/reddit/constants/headers.ts"),
				l = i("./src/redditGQL/operations/ChatBadgeIndicators.json"),
				u = i("./src/chat/models/Channel/utils.ts");
			const c = {
					Accept: "application/json",
					"Content-Type": "application/json"
				},
				_ = e => Boolean(e && e.data && e.data.badgeIndicators && e.data.badgeIndicators.chatUnreadMessages && e.data.badgeIndicators.chatUnreadMentions && e.data.badgeIndicators.chatUnacceptedInvites && e.data.badgeIndicators.chatHasNewMessages),
				m = async e => Object(s.a)(Object(d.a)(e, [a.a]), {
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/config`,
					method: r.jb.GET
				}), p = async (e, t) => Object(s.a)(e, {
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/me`,
					method: r.jb.GET
				}), h = async (e, t, i) => Object(s.a)(e, {
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/contacts?limit=${i}`,
					method: r.jb.GET
				}), f = async (e, t, i, o) => Object(s.a)(e, {
					data: {
						users: i,
						name: o
					},
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/group_channels`,
					method: r.jb.POST,
					headers: c
				}), b = async (e, t, i, o) => Object(s.a)(e, {
					data: {
						users: i
					},
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/group_channels/${o}/invite`,
					method: r.jb.POST,
					withCredentials: !0,
					headers: c
				}), g = async (e, t, i) => Object(s.a)(e, {
					data: {},
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/group_channels/${i}/accept`,
					method: r.jb.PUT,
					withCredentials: !0,
					headers: c
				}), w = async e => Object(o.a)(e, {
					...l
				}), v = (e, t, i) => Object(s.a)(e, {
					data: {
						channel_url: Object(u.a)(t),
						modqueue_message_id: i
					},
					method: r.jb.PUT,
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/chat/message/report`,
					headers: c
				}), y = (e, t, i) => Object(s.a)(e, {
					data: {
						channel_url: Object(u.a)(t),
						modqueue_message_id: i
					},
					method: r.jb.DELETE,
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/chat/message/report`,
					headers: c
				}), E = (e, t, i, o) => Object(s.a)(e, {
					data: {
						channel_url: Object(u.a)(t),
						user_id: i,
						duration: o
					},
					method: r.jb.POST,
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/channel/kick/user`,
					headers: c
				}), S = (e, t, i) => Object(s.a)(e, {
					data: {
						should_mute_badging: i
					},
					method: r.jb.PUT,
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/group_channels/${Object(u.a)(t)}/mute`,
					headers: c
				}), T = (e, t, i) => Object(s.a)(e, {
					data: {
						should_unmute_badging: i
					},
					method: r.jb.DELETE,
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/sendbird/group_channels/${Object(u.a)(t)}/mute`,
					headers: c
				}), O = e => Object(s.a)(Object(d.a)(e, [a.a]), {
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/chat/me/settings`,
					method: r.jb.GET
				}), I = async (e, t) => Object(s.a)(Object(d.a)(t, [a.a]), {
					endpoint: `${n.a.sendbirdServiceUrl}/api/v1/chat/me/settings`,
					method: r.jb.PUT,
					data: JSON.stringify({
						invite_policy: e
					})
				})
		},
		"./src/chat/helpers/errors.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return InvalidValueError
			}));
			var n = i("./src/lib/throwDevError.ts");
			i.d(t, "b", (function() {
				return n.a
			}));
			class InvalidValueError extends Error {
				constructor(e, t) {
					super(`Invalid Value: '${e} is ${t}'`)
				}
			}
		},
		"./src/chat/helpers/json.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/chat/helpers/errors.ts");

			function r(e, t) {
				try {
					return JSON.parse(e)
				} catch (i) {
					return Object(n.b)(i), t
				}
			}
		},
		"./src/chat/helpers/urls/index.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "LOCAL_HOST_DEVELOPMENT_URL", (function() {
				return a
			})), i.d(t, "minimizeUrl", (function() {
				return l
			})), i.d(t, "rootUrl", (function() {
				return u
			})), i.d(t, "basicChannelRootUrl", (function() {
				return c
			})), i.d(t, "channelUrl", (function() {
				return m
			})), i.d(t, "channelAction", (function() {
				return p
			})), i.d(t, "channelUserIdUrl", (function() {
				return h
			})), i.d(t, "getShortChannelUrl", (function() {
				return f
			})), i.d(t, "getShareToChatUrl", (function() {
				return b
			})), i.d(t, "getShareToNewChatUrl", (function() {
				return g
			})), i.d(t, "inviteLinkSettingsUrl", (function() {
				return y
			})), i.d(t, "themesUrl", (function() {
				return E
			})), i.d(t, "privacyAndSupportUrl", (function() {
				return S
			})), i.d(t, "inviteMessageActionUrl", (function() {
				return T
			})), i.d(t, "messageActionUrl", (function() {
				return O
			})), i.d(t, "userActionUrl", (function() {
				return I
			})), i.d(t, "getSubredditFromUrl", (function() {
				return R
			})), i.d(t, "isRedditLink", (function() {
				return F
			})), i.d(t, "viewProfileUrl", (function() {
				return N
			})), i.d(t, "viewSubredditUrl", (function() {
				return C
			})), i.d(t, "getChannelUrl", (function() {
				return j
			})), i.d(t, "getChatUnitType", (function() {
				return A
			})), i.d(t, "getRedirectURL", (function() {
				return x
			}));
			var n = i("./src/config.ts"),
				r = i("./node_modules/query-string/index.js"),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/chat/constants/channels.ts"),
				d = i("./src/chat/constants/messages.ts");
			const a = "https://localhost.reddit.com",
				l = "/chat/minimize/",
				u = "/chat/",
				c = "channel",
				_ = () => c,
				m = e => `/chat/${_()}/${e}`,
				p = (e, t) => `/chat/${_()}/${e}/${t}`,
				h = e => `/chat/user_id/${e}`,
				f = e => `${n.a.shortUrl}/${c}/${e}`,
				b = e => `/chat/${o.a.SHARE}?message=${e}`,
				g = e => `/chat/${o.a.SHARE_NEW_CHANNEL}?message=${e}`;
			var w, v;
			! function(e) {
				e[e.SUBREDDIT_ID = 2] = "SUBREDDIT_ID", e[e.POST_ID = 4] = "POST_ID", e[e.POST_TITLE = 5] = "POST_TITLE", e[e.COMMENT_ID = 6] = "COMMENT_ID"
			}(w || (w = {})),
			function(e) {
				e[e.SUBREDDIT = 0] = "SUBREDDIT", e[e.USER_PROFILE = 1] = "USER_PROFILE"
			}(v || (v = {}));
			const y = (e, t) => `${p(e,o.a.INVITE_LINK_SETTINGS)}/${t?"user":""}`,
				E = e => `${p(e,o.a.THEMES)}/`,
				S = e => `${p(e,o.a.PRIVACY_SUPPORT)}/`,
				T = (e, t, i) => ({
					pathname: `${p(e,i)}/invite/${t}`,
					state: {
						isOverlay: !0
					}
				}),
				O = (e, t, i) => ({
					pathname: `${p(e,i)}/message/${t}`,
					state: {
						isOverlay: !0
					}
				}),
				I = (e, t, i, n) => `${p(e,i)}/user/${t}${n?"?"+Object(r.stringify)(n):""}`,
				R = e => new RegExp("reddit.com").test(e) ? e.replace(/^.+reddit.com(\/r\/.+?\/).*$/g, "$1") : "",
				F = e => {
					const t = new RegExp(`^${n.a.redditUrl}/(r|user|u)/.+($|/)`, "i"),
						i = new RegExp(`^${n.a.oldRedditUrl}/(r|user|u)/.+($|/)`, "i"),
						r = new RegExp("^http://localhost:8888/(r|user|u)/.+($|/)", "i"),
						s = new RegExp("^http://localhost:8080/(r|user|u)/.+($|/)", "i");
					return t.test(e) || i.test(e) || r.test(e) || s.test(e)
				},
				N = e => e.length ? `${n.a.redditUrl}/user/${e}` : n.a.redditUrl,
				C = e => e.length ? `${n.a.redditUrl}/r/${e}` : n.a.redditUrl,
				j = e => {
					const {
						channelId: t,
						channelState: i
					} = e, {
						INVITED: n,
						PARTIAL: r,
						JOINED: s
					} = o.b, {
						VIEW_JOIN: d,
						VIEW_INVITE: a
					} = o.a;
					switch (i) {
						case n:
							return p(t, a);
						case r:
							return p(t, d);
						case s:
							return m(t);
						default:
							return u
					}
				},
				A = e => {
					const t = e.replace(new RegExp("^http://localhost:8888/?", "gi"), "").replace(new RegExp("^http://localhost:8080/?", "gi"), "").replace(new RegExp(`^${n.a.oldRedditUrl}/?`, "gi"), "").replace(new RegExp(`^${n.a.redditUrl}/?`, "gi"), "").replace(/\/?\?.+/gi, "").replace(/\/$/gi, "").split("/"),
						i = ("user" === t[0] || "u" === t[0] ? v.USER_PROFILE : v.SUBREDDIT) === v.SUBREDDIT ? d.c.POST : d.c.USER_POST;
					switch (t.length) {
						case w.SUBREDDIT_ID:
							return {
								type: d.c.SUBREDDIT, value: t[t.length - 1]
							};
						case w.POST_ID:
							return {
								type: i, value: `${s.Ib.Post}_${t[t.length-1]}`
							};
						case w.POST_TITLE:
							return {
								type: i, value: `${s.Ib.Post}_${t[t.length-2]}`
							};
						case w.COMMENT_ID:
							return {
								type: d.c.COMMENT, value: `${s.Ib.Comment}_${t[t.length-1]}`
							};
						default:
							return {
								type: d.c.TEXT, value: t[t.length - 1]
							}
					}
				},
				x = e => ({
					pathname: e,
					search: location.search
				})
		},
		"./src/chat/models/Channel/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			})), i.d(t, "h", (function() {
				return p
			})), i.d(t, "g", (function() {
				return h
			})), i.d(t, "f", (function() {
				return b
			})), i.d(t, "i", (function() {
				return w
			}));
			var n, r, s = i("./node_modules/fbt/lib/FbtPublic.js"),
				o = i("./src/chat/constants/channels.ts"),
				d = i("./src/chat/models/Channel/utils.ts"),
				a = i("./src/chat/models/Message/index.ts"),
				l = i("./src/chat/models/User/inviter.ts"),
				u = i("./src/chat/models/User/member.ts");
			! function(e) {
				e.Invited = "invited", e.Joined = "joined"
			}(n || (n = {})),
			function(e) {
				e.ALL = "All", e.DirectsOnly = "DMs", e.GroupsOnly = "Group"
			}(r || (r = {}));
			const c = {
				[r.ALL]: () => s.fbt._("All", null, {
					hk: "1l1mY5"
				}),
				[r.DirectsOnly]: () => s.fbt._("DMs", null, {
					hk: "3YXgZ2"
				}),
				[r.GroupsOnly]: () => s.fbt._("Group", null, {
					hk: "2MEwAN"
				})
			};
			var _, m;
			! function(e) {
				e[e.Direct = 0] = "Direct", e[e.Group = 1] = "Group"
			}(_ || (_ = {})),
			function(e) {
				e.AWARDING = "awarding"
			}(m || (m = {}));
			o.b.UNSORTED, _.Direct;

			function p(e, t) {
				const {
					createdAt: i,
					customType: n,
					data: r,
					memberCount: s,
					name: o,
					isDistinct: c,
					isHidden: m,
					unreadMessageCount: p,
					unreadMentionCount: h,
					myCountPreference: w,
					inviter: v,
					lastMessage: y,
					members: E,
					url: S,
					myMemberState: T,
					isFrozen: O,
					isPushEnabled: I,
					myMutedState: R,
					myRole: F,
					coverUrl: N
				} = e;
				return {
					channelId: Object(d.f)(S),
					channelSendbirdUrl: S,
					channelState: Object(d.b)(t, T),
					createdAt: Number(i),
					channelData: Object(d.e)(r),
					customType: n,
					data: r,
					maxLengthMessage: -1,
					memberCount: s,
					name: o,
					isFrozen: O,
					isHidden: m,
					isNotifsMuted: !I,
					isModerator: b(F),
					isUserMuted: g(R),
					isMuted: f(w),
					inviter: Object(l.a)(v),
					type: c ? _.Direct : _.Group,
					lastMessage: y ? Object(a.c)(y) : void 0,
					unreadMessageCount: p,
					unreadMentionCount: h,
					members: Object(u.b)(E),
					fetchingFirstMessage: !1,
					fetchingMessages: !1,
					fetchingMessagesError: !1,
					hasMoreMessages: !1,
					isMessageListLoaded: !1,
					coverUrl: N,
					draftMessage: ""
				}
			}

			function h(e) {
				const t = {};
				for (let i = 0, n = e.length; i < n; i++) {
					const n = p(e[i]);
					n && (t[n.channelId] = n)
				}
				return t
			}
			const f = e => e === o.c.Off,
				b = e => "operator" === e,
				g = e => "muted" === e,
				w = e => e === r.ALL ? "all" : e === r.DirectsOnly ? "direct" : "group"
		},
		"./src/chat/models/Channel/utils.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "c", (function() {
				return f
			})), i.d(t, "b", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			}));
			var n = i("./node_modules/lodash/first.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/isObject.js"),
				o = i.n(s),
				d = i("./node_modules/lodash/pickBy.js"),
				a = i.n(d),
				l = i("./src/chat/constants/channels.ts"),
				u = i("./src/chat/constants/sendbird.ts"),
				c = i("./src/chat/helpers/errors.ts"),
				_ = i("./src/chat/helpers/json.ts"),
				m = i("./src/chat/models/Channel/index.ts");
			const p = e => u.a + e,
				h = e => e.replace(u.a, "");

			function f(e, t) {
				return a()(e, e => t.includes(e.type))
			}

			function b(e, t) {
				return (e || t || l.b.UNSORTED).toUpperCase()
			}

			function g(e) {
				const t = e.custom_type || e.customType;
				if (t) {
					switch (r()(t.split("_"))) {
						case "direct":
							return m.b.Direct;
						case "group":
							return m.b.Group
					}
				} else {
					const t = e.channel_url || e.channelUrl;
					Object(c.b)(`Channel doesn't have a custom type. (channelUrl: ${t})`)
				}
				return m.b.Group
			}
			const w = e => {
				let t = {};
				if (e && "string" == typeof e) {
					const i = Object(_.a)(e, {});
					i && (t.creationReason = i.creation_reason)
				}
				return o()(t) || (t = {}), t
			}
		},
		"./src/chat/models/Message/adapter.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return v
			})), i.d(t, "c", (function() {
				return E
			})), i.d(t, "d", (function() {
				return R
			})), i.d(t, "b", (function() {
				return F
			}));
			var n = i("./node_modules/lodash/isObject.js"),
				r = i.n(n),
				s = i("./src/chat/constants/messages.ts"),
				o = i("./src/chat/helpers/json.ts"),
				d = i("./src/chat/helpers/urls/index.ts"),
				a = i("./src/chat/models/Channel/utils.ts");
			const l = (e, t) => {
					const {
						url: i
					} = Object(o.a)(e, {
						url: ""
					}), {
						value: n
					} = Object(d.getChatUnitType)(i);
					return {
						type: t,
						value: i,
						chatUnitId: n,
						subreddit: Object(d.getSubredditFromUrl)(i)
					}
				},
				u = {
					text: e => ({
						type: s.c.TEXT,
						value: e
					}),
					post: e => l(e, s.c.POST),
					userPost: e => l(e, s.c.USER_POST),
					comment: e => l(e, s.c.COMMENT),
					subreddit: e => l(e, s.c.SUBREDDIT),
					embedCollection: e => {
						const {
							url: t,
							embed: i
						} = Object(o.a)(e, {
							embed: void 0,
							url: ""
						});
						if (t) return {
							type: s.c.EMBED,
							value: t,
							embed: i
						}
					},
					snoomoji: e => ({
						type: s.c.SNOOMOJI,
						value: e
					}),
					gif: e => {
						const t = Object(o.a)(e, {});
						return {
							type: s.c.GIF,
							value: t.url || "",
							gif: t
						}
					},
					image: (e, t) => {
						const {
							blurred_url: i,
							...n
						} = Object(o.a)(e, {});
						return {
							type: s.c.IMAGE,
							value: n.url || "",
							image: {
								...n,
								blurredUrl: i
							},
							isHidden: t
						}
					}
				},
				{
					TEXT: c,
					POST: _,
					EMBED: m,
					SNOOMOJI: p,
					COMMENT: h,
					SUBREDDIT: f,
					USER_POST: b,
					GIF: g,
					IMAGE: w
				} = s.c;
			var v;
			! function(e) {
				e.PreUpload = "preupload", e.Done = "done"
			}(v || (v = {}));
			const y = e => {
					let t = {};
					if (e && "string" == typeof e) {
						const i = Object(o.a)(e, {
							v1: {}
						});
						i && i.v1 && (t = i.v1)
					}
					return r()(t) || (t = {}), t
				},
				E = e => y(e).clientMessageId || "",
				S = (e, t) => {
					if (e.snoomoji) return u[p](e.snoomoji);
					if (e.embed_data && e.embed_data.url && Object(d.isRedditLink)(e.embed_data.url)) {
						const {
							type: t
						} = Object(d.getChatUnitType)(e.embed_data.url);
						switch (t) {
							case h:
								return u[h](JSON.stringify(e.embed_data));
							case f:
								return u[f](JSON.stringify(e.embed_data));
							case b:
								return u[b](JSON.stringify(e.embed_data));
							default:
								return u[_](JSON.stringify(e.embed_data))
						}
					} else if (e.embed_collection) {
						const t = u[m](e.embed_collection);
						if (t) return t
					} else {
						if (e.gif) return u[g](JSON.stringify(e.gif));
						if (e.image) return u[w](JSON.stringify(e.image), Boolean(e.is_hidden))
					}
					return u[c](t || "")
				},
				T = e => ({
					channelIsPublic: e.channel_is_public,
					channelName: e.channel_name,
					channelId: e.channel_url && Object(a.f)(e.channel_url),
					messageId: e.message_id,
					messageValue: e.message_value,
					messageCreatedAt: e.message_created_at,
					reason: e.reason,
					reportedUserId: e.reported_user_id,
					reportedUserName: e.reported_user_name,
					reporterUserId: e.reporter_user_id,
					reporterUserName: e.reporter_user_name,
					subredditId: e.subreddit_id,
					subredditName: e.subreddit_name,
					actions: {
						...e.actions && e.actions.deleted && {
							deleted: {
								status: e.actions.deleted.status,
								userId: e.actions.deleted.user_id,
								userName: e.actions.deleted.user_name,
								updatedTs: e.actions.deleted.updated_ts
							}
						},
						...e.actions && e.actions.ignored && {
							ignored: {
								status: e.actions.ignored.status,
								userId: e.actions.ignored.user_id,
								userName: e.actions.ignored.user_name,
								updatedTs: e.actions.ignored.updated_ts
							}
						}
					}
				}),
				O = e => (null == e ? void 0 : e.preview_collapsed) ? {
					shouldCollapse: !0,
					shouldShowReportPrompt: !0
				} : void 0,
				I = e => {
					var t, i;
					return {
						awarder_id: null === (t = null == e ? void 0 : e.awarding) || void 0 === t ? void 0 : t.awarder_id,
						award_id: null === (i = null == e ? void 0 : e.awarding) || void 0 === i ? void 0 : i.award_id
					}
				},
				R = (e, t) => {
					const i = y(e);
					return {
						...S(i, t),
						clientMessageId: E(e),
						highlights: i.highlights || [],
						collapsedInvitePreview: O(i),
						...i.report && {
							report: T(i.report)
						},
						awarding: I(i),
						action_info_reason: i.action_info_reason
					}
				},
				F = (e, t, i, n = []) => ({
					v1: {
						clientMessageId: i,
						highlights: n,
						...t === p ? {
							snoomoji: e
						} : {},
						...t === _ || t === h || t === f || t === b ? {
							embed_data: {
								url: e
							}
						} : {},
						...t === m ? {
							embed_collection: e
						} : {},
						...t === g ? {
							gif: Object(o.a)(e, {})
						} : {},
						...t === w ? {
							...Object(o.a)(e, {})
						} : {}
					}
				})
		},
		"./src/chat/models/Message/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "c", (function() {
				return b
			})), i.d(t, "b", (function() {
				return g
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n, r = i("./node_modules/uuid/v4.js"),
				s = i.n(r),
				o = i("./src/chat/constants/messages.ts"),
				d = i("./src/chat/models/Channel/utils.ts"),
				a = i("./src/chat/models/Message/adapter.ts"),
				l = i("./src/chat/selectors/messages.ts"),
				u = i("./src/chat/selectors/user.ts");
			! function(e) {
				e.DEFAULT = "", e.AWARDING = "awarding", e.IMAGE = "image"
			}(n || (n = {}));
			const c = new Set([o.e.USER, o.e.ADMIN]);

			function _(e) {
				if (e && e.messageType === o.d.USER) return e.sender
			}

			function m(e) {
				return e && o.f[e.messageType.toUpperCase()]
			}

			function p(e) {
				return e && e.mentionType === o.b.USERS ? o.b.USERS : e && e.mentionType === o.b.CHANNEL ? o.b.CHANNEL : void 0
			}

			function h(e) {
				return e && e.customType === n.AWARDING ? n.AWARDING : e && e.customType === n.IMAGE ? n.IMAGE : e && e.customType === n.DEFAULT ? n.DEFAULT : void 0
			}
			const f = e => e.map(e => ({
				key: e.key,
				userIds: e.userIds
			}));

			function b(e) {
				if (t = e, Boolean(t && c.has(t.messageType))) {
					const {
						channelType: t,
						channelUrl: i,
						createdAt: n,
						data: r,
						message: s,
						messageId: o,
						mentionedUsers: l,
						reactions: u,
						updatedAt: c
					} = e;
					return {
						channelId: Object(d.f)(i),
						channelSendbirdUrl: i,
						channelType: t,
						createdAt: n,
						customType: h(e),
						data: r,
						mentionType: p(e),
						mentionedUsers: l,
						messageData: Object(a.d)(r, s),
						messageId: o,
						messageType: m(e),
						reactions: f(u),
						sender: _(e),
						updatedAt: c
					}
				}
				var t
			}

			function g(e, t, i, n, r = s()()) {
				const d = Object(l.a)(e, i),
					c = JSON.stringify(Object(a.b)(i, n, r, d)),
					_ = Object(a.d)(c, i);
				return {
					channelId: t,
					clientMessageId: r,
					createdAt: (new Date).getTime(),
					data: c,
					messageData: _,
					messageType: o.d.PENDING,
					error: !1,
					sender: {
						nickname: Object(u.b)(e),
						userId: Object(u.a)(e)
					}
				}
			}
		},
		"./src/chat/models/Sidebar/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e[e.CHANNELS = 0] = "CHANNELS", e[e.INVITED_CHANNELS = 1] = "INVITED_CHANNELS", e[e.SETTINGS = 2] = "SETTINGS"
				}(n || (n = {}))
		},
		"./src/chat/models/Uploads/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "e", (function() {
				return l
			}));
			var n, r, s, o, d = i("./node_modules/uuid/v4.js"),
				a = i.n(d);
			! function(e) {
				e.Pending = "PENDING", e.Submit = "SUBMIT", e.Uploading = "UPLOADING", e.Processing = "PROCESSING", e.Success = "SUCCESS", e.Failed = "FAILED", e.Canceled = "CANCELED"
			}(n || (n = {})),
			function(e) {
				e.Drop = "drop", e.Gallery = "gallery"
			}(r || (r = {})),
			function(e) {
				e.PNG = "PNG", e.GIF = "GIF", e.JPEG = "JPEG"
			}(s || (s = {})),
			function(e) {
				e[e.UnsupportedBrowser = 0] = "UnsupportedBrowser", e[e.InvalidMediaType = 1] = "InvalidMediaType", e[e.FileSizeLimitExceeded = 2] = "FileSizeLimitExceeded", e[e.ActiveFilesLimitExceeded = 3] = "ActiveFilesLimitExceeded"
			}(o || (o = {}));
			const l = (e, t, i) => ({
				id: a()(),
				file: e,
				source: i,
				status: n.Pending,
				metadata: t
			})
		},
		"./src/chat/models/User/inviter.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			}));
			const n = "t2_1qwk",
				r = "reddit";

			function s(e) {
				if (e) return {
					id: e.user_id,
					name: e.nickname
				}
			}

			function o(e) {
				return {
					id: e ? e.userId : n,
					name: e ? e.nickname : r
				}
			}
		},
		"./src/chat/models/User/member.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			}));
			var n = i("./src/chat/models/Channel/index.ts"),
				r = i("./node_modules/lodash/isArray.js"),
				s = i.n(r);
			const o = e => ({
					id: e.user_id || e.userId,
					name: e.nickname,
					profileUrl: e.profile_url || e.profileUrl,
					state: e.state,
					isBlockedByMe: e.is_blocked_by_me || e.isBlockedByMe,
					isModerator: Object(n.f)(e.role)
				}),
				d = e => s()(e) && e.map(o).filter(Boolean) || []
		},
		"./src/chat/reducers/subscribe.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = (e, t) => t,
				r = (e, t) => () => t(e.getState().lastAction)
		},
		"./src/chat/selectors/app.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return l
			})), i.d(t, "e", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "j", (function() {
				return _
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "h", (function() {
				return h
			})), i.d(t, "f", (function() {
				return f
			})), i.d(t, "c", (function() {
				return b
			})), i.d(t, "a", (function() {
				return g
			})), i.d(t, "b", (function() {
				return w
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/lodash/isEmpty.js"),
				s = i.n(r),
				o = i("./node_modules/reselect/es/index.js"),
				d = i("./src/chat/constants/container.ts");
			const a = e => e.container,
				l = Object(o.a)(e => a(e), e => e.size === d.a.HIDDEN),
				u = Object(o.a)(e => a(e), e => e.size === d.a.EMBED || e.size === d.a.FULL),
				c = Object(o.a)(e => a(e), e => e.size === d.a.EMBED || e.size === d.a.MINIMIZED),
				_ = e => !(!(e.user.account && e.sendbird.session.active && e.sendbird.sdk.initialized && e.channels.firstLoaded) || p(e)),
				m = e => window.parent !== window || !!(e && e.meta && e.meta.isRedesign),
				p = e => {
					if (!e.user.account) return n.fbt._("Sign in, please.", null, {
						hk: "3cGIp8"
					})
				},
				h = Object(o.a)(e => a(e), e => !(e.size !== d.a.FULL)),
				f = Object(o.a)(e => !s()(e.user.experiments), _, (e, t) => e && t),
				b = Object(o.a)(e => a(e), e => h(e), (e, t) => !!t || e.isFocused),
				g = Object(o.a)(e => a(e), e => e.size),
				w = Object(o.a)(e => a(e), e => e.windowWidth)
		},
		"./src/chat/selectors/channels.ts": function(e, t, i) {
			"use strict";
			i.d(t, "v", (function() {
				return m
			})), i.d(t, "w", (function() {
				return p
			})), i.d(t, "i", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "m", (function() {
				return b
			})), i.d(t, "n", (function() {
				return g
			})), i.d(t, "o", (function() {
				return w
			})), i.d(t, "y", (function() {
				return v
			})), i.d(t, "z", (function() {
				return y
			})), i.d(t, "p", (function() {
				return E
			})), i.d(t, "x", (function() {
				return S
			})), i.d(t, "r", (function() {
				return T
			})), i.d(t, "s", (function() {
				return O
			})), i.d(t, "O", (function() {
				return I
			})), i.d(t, "f", (function() {
				return R
			})), i.d(t, "A", (function() {
				return N
			})), i.d(t, "D", (function() {
				return C
			})), i.d(t, "B", (function() {
				return j
			})), i.d(t, "g", (function() {
				return A
			})), i.d(t, "P", (function() {
				return x
			})), i.d(t, "C", (function() {
				return D
			})), i.d(t, "H", (function() {
				return P
			})), i.d(t, "c", (function() {
				return L
			})), i.d(t, "G", (function() {
				return B
			})), i.d(t, "b", (function() {
				return M
			})), i.d(t, "d", (function() {
				return G
			})), i.d(t, "e", (function() {
				return q
			})), i.d(t, "I", (function() {
				return V
			})), i.d(t, "N", (function() {
				return H
			})), i.d(t, "M", (function() {
				return W
			})), i.d(t, "j", (function() {
				return z
			})), i.d(t, "a", (function() {
				return K
			})), i.d(t, "J", (function() {
				return Y
			})), i.d(t, "L", (function() {
				return $
			})), i.d(t, "t", (function() {
				return Q
			})), i.d(t, "F", (function() {
				return J
			})), i.d(t, "u", (function() {
				return X
			})), i.d(t, "k", (function() {
				return Z
			})), i.d(t, "K", (function() {
				return ee
			})), i.d(t, "l", (function() {
				return te
			})), i.d(t, "E", (function() {
				return ie
			})), i.d(t, "q", (function() {
				return ne
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/values.js"),
				r = i.n(n),
				s = i("./node_modules/reselect/es/index.js"),
				o = i("./src/chat/constants/channels.ts"),
				d = i("./src/chat/constants/messages.ts"),
				a = i("./src/chat/models/Channel/index.ts"),
				l = i("./src/chat/models/Message/index.ts"),
				u = i("./src/chat/selectors/channelsFilter.ts"),
				c = i("./src/chat/selectors/experiments.ts"),
				_ = i("./src/chat/selectors/user.ts");
			const m = e => e.channels.invited.sortedKeys.length,
				p = e => e.channels.joined.sortedKeys.length,
				h = Object(s.a)((e, t) => t, e => e.channels.models, (e, t) => t[e]),
				f = Object(s.a)((e, t) => {
					const i = e.channels.models,
						n = "string" == typeof t ? t : t.channelId;
					if (n) return i[n]
				}, e => e),
				b = e => {
					const {
						currentPage: t
					} = e.platform, i = t && t.urlParams.channelId;
					if (i) return f(e, i)
				},
				g = Object(s.a)(b, e => null == e ? void 0 : e.channelId),
				w = e => {
					const t = b(e);
					if (t && t.channelState === o.b.JOINED) return t
				},
				v = e => {
					const {
						channelId: t
					} = e.channels.selected;
					if (t) return f(e, t)
				},
				y = e => e.channels.selected && e.channels.selected.channelId,
				E = e => b(e) || v(e),
				S = e => {
					const {
						user: t
					} = e, i = E(e);
					if (i && i.members) return i.members.filter(e => e.id !== t.account.id)
				},
				T = e => {
					const {
						user: t
					} = e, i = b(e);
					if (i && i.type === a.b.Direct && i.members) return i.members.find(e => e.id !== t.account.id)
				},
				O = e => {
					const t = T(e);
					return null == t ? void 0 : t.id
				},
				I = e => {
					return !!w(e)
				},
				R = e => {
					const t = [],
						i = e.user.account.id;
					return r()(e.channels.models).forEach(e => {
						if (e && e.members) {
							const n = e.members.filter(e => e.id !== i).map(e => e.id);
							n.length && t.push(n)
						}
					}), t.length && t
				},
				F = (e, t) => {
					const i = ((e, t) => {
						const i = f(e, t);
						return i && i.lastMessage
					})(e, t);
					return Boolean((null == i ? void 0 : i.messageType) === d.d.SYSTEM && (null == i ? void 0 : i.customType) === l.a.AWARDING)
				},
				N = Object(s.a)((e, t) => t, e => e.messages.models, (e, t) => r()(t).filter(t => t.channelId === e)),
				C = e => r()(e.messages.models).filter(t => t.messageType === d.d.USER && t.channelId === e.channels.selected.channelId),
				j = e => r()(e.messages.pending).filter(t => t.channelId === e.channels.selected.channelId),
				A = (e, t) => {
					var i, n;
					if (Boolean(F(e, t))) {
						const r = f(e, t);
						return null === (n = null === (i = null == r ? void 0 : r.lastMessage) || void 0 === i ? void 0 : i.messageData.awarding) || void 0 === n ? void 0 : n.award_id
					}
				},
				x = (e, t) => {
					var i, n;
					const r = Object(_.a)(e),
						s = b(e),
						o = (null == s ? void 0 : s.type) === a.b.Direct,
						u = Boolean(j(e).length);
					if (!o) return !1;
					const c = O(e);
					return c && e.channels.messageQuickReplyUsers[c] === c || (null === (n = null === (i = null == t ? void 0 : t.messageData) || void 0 === i ? void 0 : i.awarding) || void 0 === n ? void 0 : n.awarder_id) !== r && !u && Boolean((null == t ? void 0 : t.messageType) === d.d.SYSTEM && (null == t ? void 0 : t.customType) === l.a.AWARDING)
				},
				D = (e, t) => {
					const i = v(e);
					return i && i[t]
				},
				P = e => e.channels.joined.hasMoreChannels,
				L = e => e.channels.joined.fetchingChannels,
				k = Object(s.a)(e => e.channels.invited, e => e.channels.models, (e, t) => e.sortedKeys.map(e => t[e])),
				B = e => e.channels.invited.hasMoreChannels,
				M = e => e.channels.invited.fetchingChannels,
				U = (e, t) => {
					if (!Object(c.f)(e)) return t;
					const i = Object(u.a)(e);
					return i === a.c.DirectsOnly ? t.filter(e => e.type === a.b.Direct) : i === a.c.GroupsOnly ? t.filter(e => e.type === a.b.Group) : t
				},
				G = e => {
					const t = k(e);
					return U(e, t)
				},
				q = e => {
					const t = (e => e.channels.joined.sortedKeys.map(t => e.channels.models[t]))(e);
					return U(e, t)
				},
				V = e => {
					const t = v(e);
					return t && t.inviter && t.inviter.name
				},
				H = e => {
					const t = b(e);
					return Boolean(t && t.isMessageListLoaded)
				},
				W = e => e.channels.isCreatingChannel,
				z = e => {
					const t = b(e);
					return t && t.channelState
				},
				K = Object(s.a)(b, e => Boolean(null == e ? void 0 : e.isModerator)),
				Y = e => {
					const t = b(e);
					return !(!t || !t.isMuted)
				},
				$ = (e, t) => {
					const i = f(e, t);
					return Boolean(i && i.isNotifsMuted)
				},
				Q = (e, t) => {
					var i;
					return (null === (i = e.channels.draftMessages[t]) || void 0 === i ? void 0 : i.messageValue) || ""
				},
				J = e => {
					var t;
					return Boolean(null === (t = k(e)) || void 0 === t ? void 0 : t.length)
				},
				X = Object(s.a)((e, t) => t ? e.channels.models[t] : void 0, e => Object(_.e)(e), (e, t) => {
					var i;
					if (e && (null == t ? void 0 : t.id)) {
						const n = e.channelState === o.b.JOINED,
							r = e.channelState === o.b.INVITED;
						let s;
						const d = (null == t ? void 0 : t.id) !== (null === (i = e.inviter) || void 0 === i ? void 0 : i.id) ? e.inviter : void 0;
						for (const i of e.members)(null == t ? void 0 : t.id) !== i.id && (null == d ? void 0 : d.id) !== i.id && (!s || s.name.toLocaleLowerCase() > i.name.toLocaleLowerCase()) && (s = i);
						return e.type === a.b.Direct ? {
							firstUser: s || e.inviter
						} : n && t && !s && !d ? {
							firstUser: t
						} : n && t && d ? {
							firstUser: t,
							secondUser: d
						} : n && t && s ? {
							firstUser: t,
							secondUser: s
						} : r && t && d ? {
							firstUser: t,
							secondUser: d
						} : r && t && e.inviter ? {
							firstUser: t,
							secondUser: e.inviter
						} : {
							firstUser: e.inviter
						}
					}
				}),
				Z = (e, t) => {
					var i;
					if (t) {
						const n = f(e, t),
							r = X(e, t);
						if (n) return n.type === a.b.Group ? n.name && "Group Channel" !== n.name ? n.name : n.members.map(e => e.name).join(", ") : null === (i = null == r ? void 0 : r.firstUser) || void 0 === i ? void 0 : i.name
					}
				},
				ee = Object(s.a)(b, e => (null == e ? void 0 : e.type) === a.b.Direct && (null == e ? void 0 : e.members.some(e => e.state === a.e.Invited))),
				te = Object(s.a)((e, t) => f(e, t), e => null == e ? void 0 : e.type),
				ie = Object(s.a)((e, t) => f(e, t), e => Boolean(null == e ? void 0 : e.members.some(e => e.isBlockedByMe))),
				ne = (e, t) => {
					return Object.values(e.channels.models).find(e => e.type === a.b.Direct && e.members.some(e => e.name === t))
				}
		},
		"./src/chat/selectors/channelsFilter.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => (e => e.channels.channelsFilter)(e).filter
		},
		"./src/chat/selectors/contacts.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "c", (function() {
				return m
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "h", (function() {
				return b
			})), i.d(t, "j", (function() {
				return g
			})), i.d(t, "k", (function() {
				return w
			})), i.d(t, "e", (function() {
				return v
			})), i.d(t, "f", (function() {
				return y
			})), i.d(t, "g", (function() {
				return E
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/sortBy.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/values.js"),
				o = i.n(s),
				d = i("./node_modules/reselect/es/index.js"),
				a = i("./src/chat/selectors/channels.ts"),
				l = i("./src/chat/selectors/members.ts"),
				u = i("./src/chat/selectors/user.ts");
			const c = e => {
					const {
						knownContacts: t,
						models: i
					} = e.contacts, n = Object(u.a)(e);
					return Object.keys(t).map(e => t[e]).filter(e => e && e.loaded && e.valid && n !== e.userId).map(e => e.userId && i[e.userId]).filter(e => !!e)
				},
				_ = (e, t) => {
					return o()(e.contacts.models).find(e => e.id === t)
				},
				m = (e, t) => {
					return o()(e.contacts.models).find(e => e.name.toLowerCase() === t.toLowerCase())
				},
				p = (e, t) => e.contacts.knownContacts[t.toLowerCase()],
				h = (e, t) => {
					const i = p(e, t);
					return i && i.method
				},
				f = Object(d.a)((e, t) => Object(a.i)(e, t), e => e.contacts.models, (e, t) => {
					if (null == e ? void 0 : e.inviter) return t[e.inviter.id]
				}),
				b = e => e.contacts.knownContacts,
				g = e => e.contacts.selectedUserIds,
				w = e => g(e).length,
				v = e => {
					const {
						selectedUserIds: t
					} = e.contacts;
					return t.length && t.map(t => {
						const i = _(e, t);
						return i && i.id
					})
				},
				y = (e, t) => {
					const i = m(e, t);
					if (i) return {
						name: t,
						id: i.id
					};
					const n = p(e, t);
					if (n && n.userId) return {
						name: t,
						id: n.userId
					};
					const r = Object(l.d)(e, t);
					return r ? {
						name: t,
						id: r.id
					} : void 0
				},
				E = Object(d.a)(e => e.contacts.whiteListKeys, e => e.contacts.models, e => Object(u.e)(e), (e, t, i) => r()(o()(t).reduce((t, n) => n.id !== (null == i ? void 0 : i.id) ? [...t, {
					...n,
					isWhitelisted: e.includes(n.id)
				}] : t, []), [e => !e.isWhitelisted, e => e.name.toLowerCase()]))
		},
		"./src/chat/selectors/experiments.ts": function(e, t, i) {
			"use strict";
			i.d(t, "u", (function() {
				return y
			})), i.d(t, "w", (function() {
				return E
			})), i.d(t, "q", (function() {
				return S
			})), i.d(t, "f", (function() {
				return T
			})), i.d(t, "r", (function() {
				return O
			})), i.d(t, "t", (function() {
				return I
			})), i.d(t, "s", (function() {
				return R
			})), i.d(t, "l", (function() {
				return F
			})), i.d(t, "n", (function() {
				return N
			})), i.d(t, "o", (function() {
				return C
			})), i.d(t, "m", (function() {
				return j
			})), i.d(t, "p", (function() {
				return A
			})), i.d(t, "v", (function() {
				return x
			})), i.d(t, "c", (function() {
				return D
			})), i.d(t, "a", (function() {
				return P
			})), i.d(t, "b", (function() {
				return L
			})), i.d(t, "g", (function() {
				return k
			})), i.d(t, "i", (function() {
				return B
			})), i.d(t, "h", (function() {
				return M
			})), i.d(t, "d", (function() {
				return U
			})), i.d(t, "j", (function() {
				return q
			})), i.d(t, "e", (function() {
				return V
			})), i.d(t, "k", (function() {
				return H
			}));
			i("./node_modules/lodash/isEmpty.js");
			var n, r, s = i("./node_modules/lodash/memoize.js"),
				o = i.n(s),
				d = i("./node_modules/reselect/es/index.js");
			! function(e) {
				e.EconRpanAvatar = "web_econ_avatar_in_rpan", e.UiRefreshBubblePreset = "ui_refresh_bubble_preset", e.D2xChatNicknamePainted = "d2x_chat_nickname_painted", e.D2XChatQuickActionsChannels = "d2x_chat_quickactions_channels", e.D2xChatFilterGroupDirect = "d2x_chat_filter_group_direct", e.ChatMediaShareImages = "chat_mediashare_images", e.ChatMediaShareImagesGroups = "group_chat_mediashare_images", e.ChatImagesRenderKillSwitch = "web_chat_mediashare_images_killswitch", e.ChatInviteMessagePreview = "chat_preview_comment", e.D2XChatShortCutsSlashCommand = "d2x_chat_shortcuts_slash_command", e.ChatLinkSharingGroup = "chat_link_sharing_group", e.ChatLinkSharingDirect = "chat_link_sharing_direct", e.AEBlockedUserChatWeb = "ae_blocked_user_chat_web", e.ChatReactions = "chat_reactions", e.D2XChatReactionsKillSwitch = "d2x_chat_reactions_killswitch", e.BlockedUserChatWebKillSwitch = "d2x_blocked_user_chat_web_killswitch", e.ChatSettingsRevampKillSwitch = "d2x_chat_settings_revamp_killswitch"
			}(n || (n = {})),
			function(e) {
				e.Control1 = "control_1", e.Control2 = "control_2"
			}(r || (r = {}));
			const a = "enabled";
			var l, u, c, _, m;
			! function(e) {
				e.JustEnabled = "just_enabled", e.Prompt = "prompt"
			}(l || (l = {})),
			function(e) {
				e.NicknamePaintedEditButton = "nickname_painted_edit_button", e.NicknamePaintedEditPopup = "nickname_painted_edit_popup"
			}(u || (u = {})),
			function(e) {
				e.QuickActionBlock = "quick_action_block", e.QuickActionSpam = "quick_action_spam"
			}(c || (c = {})),
			function(e) {
				e.Enabled = "enabled"
			}(_ || (_ = {})),
			function(e) {
				e.Tooltip = "tooltip", e.EasyAccess = "easy_access", e.TooltipEasyAccess = "tooltip_easy_access"
			}(m || (m = {}));
			var p = i("./src/chat/models/Channel/index.ts"),
				h = i("./src/chat/tracking/events/experiment.ts"),
				f = i("./src/chat/selectors/channels.ts");
			const b = e => {
					if (!(e => e === r.Control1 || e === r.Control2)(e)) return e
				},
				g = e => e.experiments.models,
				w = o()((e, t, i) => {
					Object(h.a)(t, i)
				}),
				v = Object(d.a)(e => e, g, (e, t) => t, (e, t, i) => {
					var n;
					const r = t[i],
						s = null === (n = t[i]) || void 0 === n ? void 0 : n.variant;
					return s && w(i, e, r), s
				}),
				y = e => Boolean(e.user.experiments[n.EconRpanAvatar]),
				E = Object(d.a)(e => v(e, n.UiRefreshBubblePreset), e => Boolean(b(e))),
				S = Object(d.a)(e => v(e, n.UiRefreshBubblePreset), e => e === l.Prompt),
				T = Object(d.a)(e => v(e, n.D2xChatFilterGroupDirect), e => e === a),
				O = Object(d.a)(e => v(e, n.D2XChatQuickActionsChannels), e => e === c.QuickActionBlock),
				I = Object(d.a)(e => v(e, n.D2XChatQuickActionsChannels), e => e === c.QuickActionSpam),
				R = Object(d.a)(e => v(e, n.D2XChatQuickActionsChannels), e => Boolean(b(e))),
				F = Object(d.a)(e => v(e, n.ChatImagesRenderKillSwitch), e => e === a),
				N = Object(d.a)(e => v(e, n.ChatMediaShareImagesGroups), e => F(e), (e, t) => e === a && !t),
				C = Object(d.a)(e => v(e, n.ChatMediaShareImages), e => F(e), (e, t) => e === a && !t),
				j = Object(d.a)((e, t) => t ? Object(f.l)(e, t) : void 0, e => C(e), e => N(e), (e, t, i) => e === p.b.Direct && t || e === p.b.Group && i),
				A = Object(d.a)(e => v(e, n.ChatInviteMessagePreview), e => e === a),
				x = Object(d.a)(e => v(e, n.D2XChatShortCutsSlashCommand), e => e === a),
				D = Object(d.a)(e => v(e, n.ChatLinkSharingGroup), e => e === m.Tooltip),
				P = Object(d.a)(e => v(e, n.ChatLinkSharingGroup), e => e === m.EasyAccess),
				L = Object(d.a)(e => v(e, n.ChatLinkSharingGroup), e => e === m.TooltipEasyAccess),
				k = Object(d.a)(e => v(e, n.ChatLinkSharingDirect), e => e === a),
				B = Object(d.a)(e => v(e, n.ChatLinkSharingGroup), e => Boolean(b(e))),
				M = Object(d.a)(e => v(e, n.ChatLinkSharingGroup) || v(e, n.ChatLinkSharingDirect), e => Boolean(b(e))),
				U = Object(d.a)(e => v(e, n.AEBlockedUserChatWeb), e => e === a),
				G = Object(d.a)(e => v(e, n.D2XChatReactionsKillSwitch), e => e === a),
				q = Object(d.a)(e => v(e, n.ChatReactions), e => G(e), (e, t) => e === a && !t),
				V = Object(d.a)(e => v(e, n.BlockedUserChatWebKillSwitch), e => e === a),
				H = Object(d.a)(e => v(e, n.ChatSettingsRevampKillSwitch), e => e === a)
		},
		"./src/chat/selectors/inviteLink.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			}));
			var n = i("./src/chat/actions/inviteLink/constants.ts"),
				r = i("./src/chat/selectors/experiments.ts"),
				s = i("./src/chat/selectors/platform.ts");
			const o = (e, t) => {
					return (e => e.inviteLinkSettings)(e)[t]
				},
				d = (e, t) => {
					const i = o(e, t);
					return (null == i ? void 0 : i.durationLabel) || "NEVER"
				},
				a = (e, t) => {
					const i = o(e, t);
					return (null == i ? void 0 : i.maxUsersCount) || n.c
				},
				l = (e, t) => {
					const i = o(e, t);
					return Boolean(null == i ? void 0 : i.isCreateInviteLinkRequestPending)
				},
				u = (e, t) => {
					const i = o(e, t);
					return Boolean(null == i ? void 0 : i.isRevokeInviteLinksRequestPending)
				},
				c = e => {
					const t = Object(s.g)(e),
						i = Object(s.i)(e),
						n = Object(s.h)(e),
						o = Object(r.h)(e);
					return (t || i || n) && o
				}
		},
		"./src/chat/selectors/members.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "g", (function() {
				return p
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "c", (function() {
				return f
			}));
			var n = i("./node_modules/lodash/sortBy.js"),
				r = i.n(n),
				s = i("./src/chat/models/Channel/index.ts"),
				o = i("./src/chat/selectors/channels.ts");
			const d = e => {
					const t = Object(o.n)(e);
					if (t) return e.members[t]
				},
				a = e => {
					const t = d(e);
					if (t) return t.fetchingMembers
				},
				l = e => {
					const t = d(e);
					if (t) return t.hasMoreMembers
				},
				u = (e, t) => {
					if (t && e.members[t]) {
						const i = e.members[t];
						if (i.model) {
							const t = i.model.map(t => _(t, e.contacts.models));
							return m(t)
						}
					}
				},
				c = (e, t, i) => ({
					id: e.id,
					name: e.name,
					isBlockedByMe: (null == i ? void 0 : i.isBlocked) || e.isBlocked || t.isBlockedByMe,
					isModerator: Object(s.f)(t.role),
					isNSFW: Boolean(null == i ? void 0 : i.isNSFW),
					profileUrl: e.profileImg || (null == i ? void 0 : i.profileImg) || t.profileUrl,
					state: t.state
				}),
				_ = (e, t) => {
					const i = t[e.id];
					return i ? {
						id: e.id,
						name: e.name,
						isBlockedByMe: (null == i ? void 0 : i.isBlocked) || e.isBlockedByMe,
						isModerator: e.isModerator,
						isNSFW: Boolean(null == i ? void 0 : i.isNSFW),
						profileUrl: e.profileUrl,
						state: e.state
					} : e
				},
				m = e => {
					if (!e) return [];
					const t = [],
						i = [],
						n = [],
						s = [],
						o = [];
					e.forEach(e => {
						e.isModerator ? t.push(e) : e.isNSFW && e.isBlockedByMe ? n.push(e) : e.isNSFW ? s.push(e) : e.isBlockedByMe ? i.push(e) : o.push(e)
					});
					const d = e => e.name && e.name.toLowerCase();
					return [...r()(t, d), ...r()(i, d), ...r()(n, d), ...r()(s, d), ...r()(o, d)]
				},
				p = e => {
					const t = d(e);
					return (null == t ? void 0 : t.model) || []
				},
				h = (e, t) => {
					const i = d(e);
					return i && i.model && i.model.find(e => e.name === t)
				},
				f = (e, t) => {
					const i = d(e);
					return i && i.model && i.model.find(e => e.id === t)
				}
		},
		"./src/chat/selectors/messages.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "f", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "g", (function() {
				return _
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/linkMatchers/customLinks.ts"),
				r = i("./src/chat/selectors/channels.ts"),
				s = i("./src/chat/selectors/user.ts");
			const o = (e, t) => {
					if (t) return e.messages.models[t]
				},
				d = (e, t) => {
					if (t) {
						let i;
						return "string" == typeof t && (i = u(e, t)), "number" != typeof t || isNaN(t) || (i = o(e, t)), i && i.messageData
					}
				},
				a = (e, t) => {
					const i = o(e, t);
					return i && i.sender
				},
				l = (e, t) => {
					const i = o(e, t);
					return i && i.messageData.type
				},
				u = (e, t) => e.messages.pending[t],
				c = (e, t) => {
					const i = Object(r.a)(e);
					return Object.keys(n.b).map(e => i && t.includes("@" + n.b[e]) && n.b[e]).filter(e => e)
				},
				_ = (e, t) => {
					const i = a(e, t),
						n = Object(s.a)(e);
					return (null == i ? void 0 : i.userId) === n
				}
		},
		"./src/chat/selectors/platform.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "i", (function() {
				return u
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "h", (function() {
				return _
			}));
			var n = i("./src/chat/constants/channels.ts");
			const r = e => {
					var t, i;
					return null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.urlParams.channelId
				},
				s = e => {
					var t, i;
					return null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.urlParams.action
				},
				o = e => {
					var t, i, n;
					return null === (n = null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.meta) || void 0 === n ? void 0 : n.name
				},
				d = e => {
					var t, i;
					return null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.queryParams
				},
				a = e => !(!r(e) || s(e)),
				l = e => {
					var t, i;
					return null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.urlParams.userIds
				},
				u = e => {
					const t = d(e),
						i = r(e);
					return Boolean(t && i && t[n.f])
				},
				c = e => {
					const t = d(e),
						i = l(e);
					return Boolean(t && i && t[n.f])
				},
				_ = e => {
					var t, i;
					const r = d(e);
					return Boolean(r && (null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.urlParams[0]) === n.f && r[n.e])
				}
		},
		"./src/chat/selectors/settings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/chat/actions/settings/index.ts");
			const s = e => e.settingsDropdown,
				o = Object(n.a)(e => s(e), e => e.showChatLinkPromptCount !== r.b.SESSION_LAST && Object.values(r.b).includes(e.showChatLinkPromptCount)),
				d = Object(n.a)(e => s(e), e => e.showChatLinkPromptCount === r.b.SESSION_LAST),
				a = Object(n.a)(e => s(e), e => e.isChatLinkPromptHidden)
		},
		"./src/chat/selectors/sidebar.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			}));
			const n = e => e.sidebar.sideBarAppearance.isSidebarVisible,
				r = e => e.sidebar.sideBarAppearance.sideBarComponentType
		},
		"./src/chat/selectors/telemetry.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			})), i.d(t, "h", (function() {
				return c
			})), i.d(t, "i", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			})), i.d(t, "g", (function() {
				return p
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "c", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			}));
			var n = i("./node_modules/js-cookie/src/js.cookie.js"),
				r = i.n(n),
				s = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				o = i.n(s),
				d = i("./src/lib/constants/cookie.ts"),
				a = i("./src/chat/selectors/app.ts");
			const l = e => ({
					pageType: Object(a.g)(e) ? "chat" : "chat_fullscreen"
				}),
				u = e => e.meta.platform || void 0,
				c = e => {
					const t = r.a.get(d.g);
					return {
						id: (e.user.sessionTracker || t).split(".")[0]
					}
				},
				_ = e => ({
					id: e.user.account ? e.user.account.id : "accessed_chat_without_login",
					isLoggedIn: !!e.user.account
				}),
				m = e => {
					const t = e.platform.currentPage ? e.platform.referrers[e.platform.currentPage.key] : void 0;
					if (t) {
						const {
							hostname: e
						} = o.a.parse(t);
						return {
							domain: e,
							url: t
						}
					}
				},
				p = e => ({}),
				h = e => e.meta.externalData.post,
				f = e => e.meta.externalData.comment,
				b = e => e.meta.externalData.profile
		},
		"./src/chat/selectors/theme.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "e", (function() {
				return u
			}));
			var n = i("./src/chat/constants/theme.ts"),
				r = i("./node_modules/reselect/es/index.js");
			const {
				NIGHT: s
			} = n.b, o = e => !(e.user.prefs.globalTheme !== s), d = Object(r.a)(e => e.themes, e => e.chatPreviewThemeKey), a = Object(r.a)(e => e.themes, e => e.chatPreviewThemeKey !== e.chatThemeKey), l = Object(r.a)(e => e.themes, e => e.isShowPrompt), u = Object(r.a)(e => e.themes, e => e.isShowSparkles)
		},
		"./src/chat/selectors/unreadCounter.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			}));
			var n = i("./node_modules/reselect/es/index.js");
			const r = e => e.messages.unread,
				s = Object(n.a)(r, e => e.unreadMessages + e.unreadMentions + e.unacceptedInvites),
				o = Object(n.a)(r, e => e.hasNewMessages),
				d = Object(n.a)(r, e => e.unacceptedInvites),
				a = Object(n.a)(r, e => !(!e.unreadMessages && !e.chatDirectUnacceptedInvites)),
				l = Object(n.a)(r, e => !(!e.unreadMentions && !e.chatGroupUnacceptedInvites))
		},
		"./src/chat/selectors/uploads.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/chat/actions/uploads/prompt.ts"),
				s = i("./src/chat/models/Uploads/index.ts"),
				o = i("./src/chat/selectors/channels.ts");
			const d = ({
					uploads: {
						isOver: e,
						isDrop: t
					}
				}) => ({
					isOver: e,
					isDrop: t
				}),
				a = e => {
					const t = Object(o.n)(e);
					if (!t) return [];
					const i = e.uploads.activeUploads[t];
					return i && i.map(t => e.uploads.models[t]) || []
				},
				l = (e, t) => {
					const i = e.uploads.activeUploads[t];
					return Boolean(i && i.length)
				},
				u = (Object(n.a)(e => Object.values(e.uploads.models).filter(e => e.status !== s.c.Canceled), e => e.map(e => e.id)), (e, t) => t ? e.uploads.models[t] : void 0),
				c = e => e.uploads.prompt,
				_ = Object(n.a)(e => c(e), e => e.count !== r.b.LAST && Object.values(r.b).includes(e.count)),
				m = Object(n.a)(e => c(e), e => e.count === r.b.LAST)
		},
		"./src/chat/selectors/user.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			}));
			const n = e => e.user.account.id,
				r = e => e.user.account.name,
				s = e => e.user.session,
				o = e => e.user.account,
				d = e => e.user.prefs.invitePolicy
		},
		"./src/chat/tracking/events/experiment.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			}));
			var n = i("./src/telemetry/models/Event.ts"),
				r = i("./src/chat/tracking/fields/chat.ts"),
				s = i("./src/chat/tracking/fields/common.ts"),
				o = i("./src/chat/tracking/sendEvent.ts");
			const d = (e, t) => {
				Object(o.a)({
					noun: n.e.UserId,
					source: n.f.Experiment,
					action: n.d.Expose,
					experiment: t,
					chat: {
						...Object(r.z)(e),
						...Object(r.f)(e)
					},
					...Object(s.a)(e)
				})
			}
		},
		"./src/chat/tracking/fields/chat.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return h
			})), i.d(t, "z", (function() {
				return f
			})), i.d(t, "d", (function() {
				return b
			})), i.d(t, "b", (function() {
				return g
			})), i.d(t, "D", (function() {
				return w
			})), i.d(t, "C", (function() {
				return v
			})), i.d(t, "p", (function() {
				return y
			})), i.d(t, "w", (function() {
				return E
			})), i.d(t, "j", (function() {
				return S
			})), i.d(t, "B", (function() {
				return T
			})), i.d(t, "y", (function() {
				return O
			})), i.d(t, "r", (function() {
				return I
			})), i.d(t, "o", (function() {
				return R
			})), i.d(t, "q", (function() {
				return F
			})), i.d(t, "n", (function() {
				return N
			})), i.d(t, "s", (function() {
				return C
			})), i.d(t, "A", (function() {
				return j
			})), i.d(t, "e", (function() {
				return A
			})), i.d(t, "g", (function() {
				return x
			})), i.d(t, "i", (function() {
				return D
			})), i.d(t, "h", (function() {
				return P
			})), i.d(t, "v", (function() {
				return L
			})), i.d(t, "t", (function() {
				return k
			})), i.d(t, "a", (function() {
				return B
			})), i.d(t, "c", (function() {
				return M
			})), i.d(t, "k", (function() {
				return U
			})), i.d(t, "x", (function() {
				return G
			})), i.d(t, "m", (function() {
				return q
			})), i.d(t, "u", (function() {
				return V
			})), i.d(t, "l", (function() {
				return H
			}));
			var n, r = i("./node_modules/lodash/difference.js"),
				s = i.n(r),
				o = i("./node_modules/lodash/isEmpty.js"),
				d = i.n(o),
				a = i("./src/chat/constants/messages.ts"),
				l = i("./src/chat/models/Channel/index.ts"),
				u = i("./src/chat/selectors/channels.ts"),
				c = i("./src/chat/selectors/contacts.ts"),
				_ = i("./src/chat/selectors/messages.ts"),
				m = i("./src/chat/selectors/unreadCounter.ts");
			! function(e) {
				e.Direct = "direct", e.Group = "group"
			}(n || (n = {}));
			const p = e => {
					switch (e) {
						case l.b.Direct:
							return n.Direct;
						case l.b.Group:
							return n.Group
					}
				},
				h = (e, t) => {
					const i = t ? Object(u.h)(e, t) : Object(u.m)(e);
					return i && {
						id: i.channelSendbirdUrl
					}
				},
				f = (e, t) => {
					const i = t ? Object(u.h)(e, t) : Object(u.p)(e);
					if (i) {
						const {
							type: e
						} = i, t = p(e);
						return t && {
							type: t
						}
					}
				},
				b = e => {
					return {
						type: Object(c.k)(e) > 1 ? n.Group : n.Direct
					}
				},
				g = e => {
					const t = Object(c.k)(e);
					return {
						number_members: t ? t + 1 : 0
					}
				},
				w = (e, t) => {
					return {
						type: (t && t.length) > 2 ? n.Group : n.Direct
					}
				},
				v = (e, t) => {
					const {
						members: i
					} = T(e, t);
					return {
						number_members: i.length
					}
				},
				y = e => {
					const t = Object(u.p)(e);
					return {
						number_members: t && t.memberCount
					}
				},
				E = (e, t, i) => {
					const n = i || Object(_.d)(e, t);
					return {
						sender_user_id: n && n.userId || e.user.account.id
					}
				},
				S = e => {
					const t = Object(u.m)(e);
					return {
						sender_user_id: t && t.inviter && t.inviter.id
					}
				},
				T = (e, t) => (t.push(e.user.account.id), {
					members: t
				}),
				O = e => ({
					number_unreads: Object(m.e)(e)
				}),
				I = (e, t) => {
					const i = Object(u.p)(e),
						n = i && i.unreadMessageCount;
					return {
						number_unreads: "number" == typeof t ? t : n || 0
					}
				},
				R = e => ({
					number_channels: Object(u.w)(e)
				}),
				F = e => ({
					number_pending_invites: Object(u.v)(e)
				}),
				N = (e, t, i, n) => ({
					message_type: n || (null == i ? void 0 : i.type) || Object(_.e)(e, t) || a.c.TEXT
				}),
				C = (e, t) => {
					const i = Object(_.f)(e, t);
					return i && {
						message_type: i.messageData.type
					}
				},
				j = (e, t, i) => {
					const n = Object(c.a)(e, t);
					return {
						user_added_method: i || (n || null)
					}
				},
				A = e => {
					let t = !1;
					const i = Object(c.e)(e),
						n = Object(u.f)(e);
					return i && i.length && n && n.length && (t = !!n.find(e => d()(s()(i.sort(), e.sort())))), {
						existing_channel: t
					}
				},
				x = e => {
					const t = Object(u.p)(e);
					return {
						invitation_id: t ? t.channelSendbirdUrl : null
					}
				},
				D = (e, t) => {
					if (t) return {
						invitation_type: t
					};
					const i = Object(u.p)(e),
						n = i && p(i.type);
					return n && {
						invitation_type: n
					}
				},
				P = e => {
					const t = Object(u.p)(e);
					return {
						invitation_timestamp: t ? t.createdAt : null
					}
				},
				L = e => ({
					reported_user_id: e || null
				}),
				k = e => {
					const t = Object(u.p)(e),
						i = !(!t || t.type !== l.b.Direct),
						n = Object(u.x)(e),
						r = n && n.length && n[0].id;
					return {
						recipient_user_id: i ? r : null
					}
				},
				B = (e, t) => {
					const i = Object(c.b)(e, t);
					return {
						recipient_user_id: i ? i.id : null
					}
				},
				M = e => {
					const t = Object(c.j)(e);
					return {
						recipient_user_id: 1 === t.length ? t[0] : null
					}
				},
				U = e => ({
					is_member: Object(u.O)(e)
				}),
				G = e => {
					const t = Object(u.o)(e);
					return t && {
						shown_history: !!t.lastMessage
					}
				},
				q = e => ({
					message_id: e
				}),
				V = e => ({
					report_reason: e
				}),
				H = (e, t) => {
					const i = Object(_.c)(e, t);
					if (i) return {
						message_body: i.value
					}
				}
		},
		"./src/chat/tracking/fields/common.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			}));
			var n = i("./src/config.ts"),
				r = i("./src/chat/constants/container.ts"),
				s = i("./src/chat/selectors/telemetry.ts");
			const o = e => ({
					app: {
						name: e.meta.isRedesign || e.container.size === r.a.FULL ? n.a.telemetry.appName.chat2x : n.a.telemetry.appName.chatR2
					},
					platform: Object(s.b)(e),
					user: Object(s.i)(e),
					screen: Object(s.g)(e),
					session: Object(s.h)(e),
					referrer: Object(s.f)(e),
					actionInfo: Object(s.a)(e)
				}),
				d = e => ({
					comment: Object(s.c)(e),
					post: Object(s.d)(e),
					profile: Object(s.e)(e)
				})
		},
		"./src/chat/tracking/sendEvent.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/telemetry/index.ts"),
				r = i("./src/chat/helpers/errors.ts");
			const s = e => {
				if (e.session && e.session.id) try {
					Object(n.a)(e)
				} catch (t) {
					Object(r.b)(`Error sending telemetry event: ${t}`)
				}
			}
		},
		"./src/config.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/env/index.ts"),
				r = i("./src/lib/envConfigParsing/index.ts"),
				s = i("./src/telemetry/models/App.ts");
			const o = {
				https: "true" === {}.HTTPS,
				accountManagerOrigin: (Object(n.b)(), "https://www.reddit.com"),
				adsPath: {}.ADS_URL || "/api/request_promo.json",
				apiHeaders: Object(r.d)({}.API_HEADERS || ""),
				apiPassThroughHeaders: Object(r.e)({}.API_PASS_THROUGH_HEADERS || ""),
				appName: {}.APP_NAME || "desktop2x",
				assetPath: "https://www.redditstatic.com/desktop2x",
				buildNumber: Object(r.c)("159323"),
				chatHelpUrl: {}.CHAT_HELP_URL || "https://reddit.zendesk.com/hc/en-us/sections/360008805652-Chat",
				hlsVersion: "hls 0.12.4",
				dashVersion: "dash 3.2.0",
				buildTimestamp: Object(r.b)("1646681463"),
				cookieDomain: ".reddit.com",
				giphyApiKey: "k2kwyMA6VeyHM6ZRT96OXDGaersnx73Z",
				mediaUrl: "https://www.redditmedia.com",
				port: {}.PORT ? parseInt({}.PORT) : 8888,
				postErrorsUrl: "/errors",
				redditUrl: "https://www.reddit.com",
				apiUrl: "https://www.reddit.com",
				gqlRealtimeAddress: {}.GQL_REALTIME_ADDRESS || "gql-realtime.reddit.com/query",
				rebedMediaUrl: "https://rebed.redditmedia.com",
				redirectUri: {}.REDIRECT_URI || "https://m.reddit.com/oauth2/token",
				redditHelpUrl: {}.REDDIT_HELP_URL || "https://www.reddithelp.com",
				redditModHelpUrl: {}.REDDIT_MOD_HELP_URL || "https://mods.reddithelp.com",
				gatewayUrl: "https://gateway.reddit.com",
				metaUrl: {}.META_URL || "https://meta-api.reddit.com",
				muxApiKey: "mcpf0hehcbo78k9u67arfer8a",
				oauthUrl: "https://oauth.reddit.com",
				gqlUrl: "https://gql.reddit.com",
				sendbirdServiceUrl: "https://s.reddit.com",
				sendbirdAppId: "2515BDA8-9D3A-47CF-9325-330BC37ADA13",
				snoovatarUrl: "https://snoovatar.reddit.com",
				layersUrl: "https://layers-svc.reddit.com",
				shortUrl: {}.SHORT_URL || "https://s.reddit.com",
				streamingApiUrl: "https://strapi.reddit.com",
				embedlyApiKey: {}.EMBEDLY_KEY || "522baf40bd3911e08d854040d3dc5c07",
				pushNotificationApplicationServerKey: {}.PUSH_NOTIFICATION_APPLICATION_SERVER_KEY || "BJ2nJR9HeBwCWe4s7bKfKgWZkx2Q8Q59yBdSVLxWIhPaWuzHDUxQ2YJnhLvbAVujWBZYuQv60V6a6oipSw09FT0",
				ogImage: "https://www.redditstatic.com/icon.png",
				oldRedditUrl: "https://old.reddit.com",
				processingImageUrl: "https://www.redditstatic.com/image-processing.png",
				processingAvatarImageUrl: "https://www.redditstatic.com/avatars",
				sentryClientPublicURL: "https://6b5ce051b2ed4032bd906af3de0630cd@o418887.ingest.sentry.io/5667464",
				statsdHost: {}.STATSD_HOST,
				statsdPort: {}.STATSD_PORT,
				statsdDebug: Object(r.a)({}.STATSD_DEBUG || ""),
				statsdPrefix: {}.STATSD_PREFIX || "",
				statsdSocketTimeout: parseInt({}.STATSD_TIMEOUT || "100"),
				recaptchaSitekey: {}.RECAPTCHA_SITEKEY || "6LeTnxkTAAAAAN9QEuDZRpn90WwKk_R1TRW_g-JC",
				gtmContainerId: {}.GTM_CONTAINER_ID || "GTM-5XVNS82",
				adblockId: "a2ba06a4-a2ec-4182-b295-c15ffe5f1181",
				logSample: {
					request404: .1,
					request500URIError: 5,
					serverSetCookieAfterRes: 10,
					failToSetLOID: 10,
					tooManyRequests: .05
				},
				telemetry: {
					appName: {
						profilesR2: Object(n.b)() ? s.TelemetryAppName.web : s.TelemetryAppName.webDev,
						redesign: Object(n.b)() ? s.TelemetryAppName.web2x : s.TelemetryAppName.web2xDev,
						redesignR2: Object(n.b)() ? s.TelemetryAppName.desktop2x : s.TelemetryAppName.desktop2xDev,
						chat2x: Object(n.b)() ? s.TelemetryAppName.web2x : s.TelemetryAppName.web2xDev,
						chatR2: Object(n.b)() ? s.TelemetryAppName.web : s.TelemetryAppName.webDev,
						mweb: Object(n.b)() ? s.TelemetryAppName.mweb : s.TelemetryAppName.mwebDev
					},
					postConsumedThreshold: 2e3,
					commentConsumedThreshold: 2e3,
					commentSampleRate: .01,
					programmaticAdSampleRate: .1
				},
				stripe: {
					apiKey: e => {
						return e || !Object(n.b)() && !Object(n.c)() ? "pk_test_Me5fd06PSuMkMF5YnwuMfFf4" : "pk_live_sD8LeDtVnlJwAGf51jLygWpH"
					}
				},
				paypal: {
					apiKey: {}.PAYPAL_API_KEY || (Object(n.b)() || Object(n.c)() ? "AXHUGZNCrshqynIpOLkQjqlsrA26Knvf4EB5w1RKfsdxKdsA5WSNo9H_Gng6plKyc48qGhXtmwcYahRy" : "AXH6yPVeFV8sxT1zMvzr8NyPMXx_YkYui1XCy3btQ_s1Zz2R68JC57PqQ2mrj6la-G8y-7UmZyKVsDaR"),
					braintreeApiKey: {}.BRAINTREE_PAYPAL_KEY || (Object(n.b)() ? "Aflf49iitQXbetXO8Ufm6q7zjADO-15_X1tzZqv-hveq4htWjHYNxEmrtB0s0yyyLOCG_ceCB-32EtdY" : "AXH6yPVeFV8sxT1zMvzr8NyPMXx_YkYui1XCy3btQ_s1Zz2R68JC57PqQ2mrj6la-G8y-7UmZyKVsDaR"),
					env: {}.PAYPAL_API_KEY || Object(n.b)() || Object(n.c)() ? "production" : "sandbox",
					buttons: {
						premium: "LAYT3KA5EVVTJ",
						coins500: "SNCZX9LADYMT4",
						coins1100: "6P6X4LTAKNDGG",
						coins1800: "2P5FZYZL42NME",
						coins7200: "W8BKWZXBSWZGC",
						coins40000: "Y9LZ5M2W6VT3A",
						coinsGild500: "BPVKB5BY8HXRA",
						coinsGild1100: "TPGZ3HZ3KE5TS",
						coinsGild1800: "YXZDTMAGNMMEA",
						coinsGild7200: "MQDLLC4FBNSZG",
						coinsGild40000: "T3RL7U6STH7WL"
					}
				},
				reCaptchaEnterprise: {
					siteKey: {}.RECAPTCHA_ENTERPRISE_SITE_KEY || "6LfRNvoUAAAAAKgEWIXbpPkMWcboc1n1gAeXq7lP"
				},
				releaseNotesSubredditMap: {}.RELEASE_NOTES_SUB_MAP ? JSON.parse({}.RELEASE_NOTES_SUB_MAP) : void 0
			};
			t.a = o
		},
		"./src/higherOrderComponents/addOverlayEvents.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return c
			}));
			var n, r = i("./node_modules/lodash/debounce.js"),
				s = i.n(r),
				o = i("./node_modules/react/index.js"),
				d = i.n(o),
				a = i("./node_modules/react-redux/es/index.js"),
				l = i("./src/lib/constants/index.ts"),
				u = i("./src/reddit/actions/overlayEvents.ts");

			function c(e, t) {
				class i extends o.Component {
					constructor(e) {
						super(e), this.handleKeyDown = e => {
							e.keyCode === l.J && this.props.onKeyDown(e)
						}, this.handleMouseClick = e => {
							this.props.onMouseClick(e)
						}, this.handleResize = s()(e => {
							this.props.onResize(e)
						}, 250, {
							leading: !0
						})
					}
					componentDidMount() {
						t && -1 !== t.indexOf(n.Keydown) || document.addEventListener("keydown", this.handleKeyDown), t && -1 !== t.indexOf(n.Click) || document.addEventListener("click", this.handleMouseClick), t && -1 !== t.indexOf(n.Resize) || window.addEventListener("resize", this.handleResize)
					}
					componentWillUnmount() {
						document.removeEventListener("keydown", this.handleKeyDown), document.removeEventListener("click", this.handleMouseClick), window.removeEventListener("resize", this.handleResize)
					}
					render() {
						return d.a.createElement(e, this.props)
					}
				}
				return Object(a.b)(null, e => ({
					onKeyDown: t => e(u.d({
						event: t
					})),
					onMouseClick: t => e(u.e({
						event: t
					})),
					onResize: t => e(u.f({
						event: t
					}))
				}))(i)
			}! function(e) {
				e.Click = "click", e.Keydown = "keydown", e.Resize = "resize"
			}(n || (n = {}))
		},
		"./src/higherOrderComponents/asTooltip.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return f
			}));
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n),
				s = i("./node_modules/react/index.js"),
				o = i.n(s),
				d = i("./src/lib/fastdom/index.ts"),
				a = i("./src/lib/portal/index.tsx"),
				l = i("./src/higherOrderComponents/addOverlayEvents.tsx"),
				u = i("./src/higherOrderComponents/sizeMe.tsx"),
				c = i("./src/reddit/components/HiddenDiv.tsx");

			function _() {
				return (_ = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var i = arguments[t];
						for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
					}
					return e
				}).apply(this, arguments)
			}
			const m = ["left", "bottom"],
				p = ["left", "top"],
				h = ({
					container: e,
					containerHeight: t,
					excludeContainerPosition: i,
					isFixed: n,
					targetBox: r,
					isOverlayOff: s,
					targetPosition: o,
					tooltipSize: d,
					tooltipPosition: a
				}) => {
					const l = document.body,
						u = l.clientTop || 0,
						c = l.clientLeft || 0,
						[_, m, p, h] = e ? [e.scrollLeft, e.scrollTop, e.scrollWidth, t || e.scrollHeight] : [window.pageXOffset, window.pageYOffset, window.innerWidth, document.body.scrollHeight],
						f = {
							bottom: r.bottom,
							center: r.top + r.height / 2,
							top: r.top
						} [o[1]] + {
							bottom: -d.height,
							center: -d.height / 2,
							top: 0
						} [a[1]],
						b = {
							left: r.left,
							center: r.left + r.width / 2,
							right: r.right
						} [o[0]] + {
							left: 0,
							center: -d.width / 2,
							right: -d.width
						} [a[0]];
					let g, w;
					n ? (g = f - u, w = b - c) : (w = _ + c + b, g = m + u + f);
					const v = {
							left: w,
							top: g
						},
						y = {
							bottom: Math.max(0, g + d.height - h),
							left: Math.max(0, 0 - w),
							right: Math.max(0, w + d.width - p),
							top: Math.max(0, 0 - g)
						};
					if (p > 320 && h > 667 && !s && (Boolean(y.left) !== Boolean(y.right) && (y.left ? v.left = 0 : v.left -= y.right), Boolean(y.top) !== Boolean(y.bottom) && (y.top ? v.top = 0 : v.top -= y.bottom)), i && e) {
						const t = e.getBoundingClientRect();
						v.top = v.top - t.top, v.left = v.left - t.left
					}
					return {
						overflow: y,
						style: v
					}
				};

			function f(e, t) {
				const i = Object(l.b)(e, t),
					n = Object(u.a)(e => {
						const {
							container: t,
							containerHeight: n,
							domEl: s,
							excludeContainerPosition: d,
							isFixed: a,
							target: l,
							isOverlayOff: u,
							targetPosition: c,
							tooltipPosition: f
						} = e;
						if (!l || !s) return null;
						const b = s.getBoundingClientRect(),
							g = l.getBoundingClientRect(),
							w = h({
								container: t,
								containerHeight: n,
								excludeContainerPosition: d,
								isOverlayOff: u,
								isFixed: !!a,
								targetBox: g,
								targetPosition: c || m,
								tooltipSize: {
									height: b.height,
									width: b.width
								},
								tooltipPosition: f || p
							}),
							v = r()(e, "target", "targetPosition", "tooltipPosition"),
							y = e.style ? {
								...w.style,
								...e.style
							} : w.style;
						return o.a.createElement(i, _({}, v, {
							className: e.className,
							overflow: w.overflow,
							style: y,
							targetBox: g
						}))
					});
				class f extends s.Component {
					constructor() {
						super(...arguments), this.state = {
							containerHeight: null,
							isOpen: !1,
							mounted: !1
						}, this.target = null
					}
					componentDidMount() {
						this.target = this.props.tooltipTarget || document.getElementById(this.props.tooltipId), this.props.isOpen && d.a.write(() => {
							this.setState({
								mounted: !0
							})
						})
					}
					componentDidUpdate() {
						this.target = this.props.tooltipTarget || document.getElementById(this.props.tooltipId)
					}
					static getDerivedStateFromProps(e, t) {
						if (t.isOpen === e.isOpen) return null;
						return {
							containerHeight: e.isOpen && !t.isOpen && e.container ? e.container.scrollHeight : null,
							isOpen: e.isOpen
						}
					}
					render() {
						if (!this.props.isOpen) return this.props.renderContentsHidden ? o.a.createElement(c.a, null, this.props.children) : null;
						const {
							isOpen: e,
							tooltipId: t,
							tooltipTarget: i
						} = this.props, {
							containerHeight: s,
							mounted: d
						} = this.state, l = r()(this.props, "isOpen"), u = t ? this.target : i, m = `${e}-${d}-${t||""}`;
						return o.a.createElement(a.a, {
							key: m,
							container: this.props.container
						}, this.props.componentWrapper ? this.props.componentWrapper(o.a.createElement(n, _({}, l, {
							containerHeight: s,
							target: u
						}))) : o.a.createElement(n, _({}, l, {
							containerHeight: s,
							target: u
						})))
					}
				}
				return f
			}
		},
		"./src/higherOrderComponents/makeAsync.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./node_modules/react/index.js"),
				r = i.n(n);

			function s(e) {
				var t;
				return (t = class t extends r.a.Component {
					constructor(e) {
						super(e), this.mounted = !1, this.state = {
							Component: t.Component
						}
					}
					componentDidMount() {
						this.mounted = !0, this.state.Component !== e.ErrorComponent && e.getComponent().then(e => {
							t.Component = e, this.mounted && this.setState({
								Component: e
							})
						}, t => (this.mounted && this.setState({
							Component: e.ErrorComponent
						}), Promise.reject(t)))
					}
					componentWillUnmount() {
						this.mounted = !1
					}
					render() {
						const t = this.state.Component || e.LoadingComponent;
						return r.a.createElement(t, this.props)
					}
				}).Component = null, t
			}
		},
		"./src/higherOrderComponents/sizeMe.tsx": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n),
				s = i("./node_modules/react/index.js"),
				o = i.n(s),
				d = i("./node_modules/react-dom/index.js"),
				a = i.n(d);

			function l() {
				return (l = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var i = arguments[t];
						for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
					}
					return e
				}).apply(this, arguments)
			}

			function u(e) {
				return e.displayName || e.name || "Component"
			}
			class c extends s.Component {
				render() {
					return s.Children.only(this.props.children)
				}
			}
			c.displayName = "SizeMeReferenceWrapper";
			const _ = ({
				style: e
			}) => {
				const t = {
					style: e || {
						width: "100%",
						height: "100%"
					}
				};
				return o.a.createElement("div", t)
			};
			_.displayName = "SizeMePlaceholder", t.a = function(e) {
				const t = function(e) {
					const t = t => {
						const {
							domEl: i,
							explicitRef: n,
							placeholder: s,
							size: d,
							style: a
						} = t, u = r()(t, "explicitRef", "size", "style"), m = "object" != typeof d || "number" != typeof d.width && "number" != typeof d.height, p = {
							domEl: i,
							style: a
						};
						"object" == typeof d && (p.size = d);
						const h = m && !1 !== s ? o.a.createElement(_, {
							style: a
						}) : o.a.createElement(e, l({}, p, u));
						return o.a.createElement(c, {
							ref: n
						}, h)
					};
					return t.displayName = `SizeMeRenderer(${u(e)})`, t
				}(e);
				class i extends o.a.Component {
					constructor() {
						super(...arguments), this.state = {
							width: void 0,
							height: void 0
						}, this.refCallback = e => {
							this.reactInst = e
						}, this.hasSizeChanged = (e, t) => {
							const i = e,
								n = t;
							return Number(i.height).toFixed(0) !== Number(n.height).toFixed(0) || Number(i.width).toFixed(0) !== Number(n.width).toFixed(0)
						}, this.checkIfSizeChanged = e => {
							const {
								width: t,
								height: i
							} = e.getBoundingClientRect(), n = {
								width: t,
								height: i
							};
							this.hasSizeChanged(this.state, n) && this.setState(n)
						}
					}
					componentDidMount() {
						this.handleDOMNode()
					}
					componentDidUpdate() {
						this.handleDOMNode()
					}
					componentWillUnmount() {
						this.hasSizeChanged = () => !1, this.checkIfSizeChanged = e => void 0, this.domEl && (this.domEl = null)
					}
					handleDOMNode() {
						const e = this.reactInst && a.a.findDOMNode(this.reactInst);
						e ? (this.domEl = e, this.checkIfSizeChanged(this.domEl)) : this.domEl && (this.domEl = null)
					}
					render() {
						const e = {
							...this.state
						};
						return o.a.createElement(t, l({
							domEl: this.domEl,
							explicitRef: this.refCallback,
							size: e
						}, this.props))
					}
				}
				return i.displayName = `SizeMe(${u(e)})`, i
			}
		},
		"./src/i18n/translatedFbts lazy recursive ^\\.\\/.*\\.json$": function(e, t, i) {
			var n = {
				"./de_DE.json": ["./src/i18n/translatedFbts/de_DE.json", "translations/de_DE-json"],
				"./es_ES.json": ["./src/i18n/translatedFbts/es_ES.json", "translations/es_ES-json"],
				"./es_MX.json": ["./src/i18n/translatedFbts/es_MX.json", "translations/es_MX-json"],
				"./fr_FR.json": ["./src/i18n/translatedFbts/fr_FR.json", "translations/fr_FR-json"],
				"./it_IT.json": ["./src/i18n/translatedFbts/it_IT.json", "translations/it_IT-json"],
				"./pseudo.json": ["./src/i18n/translatedFbts/pseudo.json", "translations/pseudo-json"],
				"./pt_BR.json": ["./src/i18n/translatedFbts/pt_BR.json", "translations/pt_BR-json"],
				"./pt_PT.json": ["./src/i18n/translatedFbts/pt_PT.json", "translations/pt_PT-json"]
			};

			function r(e) {
				if (!i.o(n, e)) return Promise.resolve().then((function() {
					var t = new Error("Cannot find module '" + e + "'");
					throw t.code = "MODULE_NOT_FOUND", t
				}));
				var t = n[e],
					r = t[0];
				return i.e(t[1]).then((function() {
					return i.t(r, 3)
				}))
			}
			r.keys = function() {
				return Object.keys(n)
			}, r.id = "./src/i18n/translatedFbts lazy recursive ^\\.\\/.*\\.json$", e.exports = r
		},
		"./src/lib/CSSVariableProvider/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return h
			})), i.d(t, "a", (function() {
				return I
			})), i.d(t, "b", (function() {
				return F
			})), i.d(t, "e", (function() {
				return N
			})), i.d(t, "d", (function() {
				return C
			}));
			var n = i("./node_modules/lodash/once.js"),
				r = i.n(n),
				s = i("./node_modules/react/index.js"),
				o = i.n(s),
				d = i("./node_modules/react-dom/index.js"),
				a = i("./src/lib/classNames/index.ts"),
				l = i("./src/lib/domUtils/index.ts"),
				u = i("./src/lib/fastdom/index.ts"),
				c = i("./src/lib/LRUCache/index.ts"),
				_ = i("./node_modules/lodash/isPlainObject.js"),
				m = i.n(_),
				p = i("./src/lib/isUrl/index.ts");
			const h = !0,
				f = e => {
					const t = [],
						i = (e, n = "") => {
							for (const r in e) {
								const s = e[r],
									o = `${n}-${r}`;
								!0 !== s && !1 !== s && (null == s ? t.push([o, "initial"]) : "string" == typeof s ? Object(p.a)(s) ? t.push([o, `url("${s}")`]) : t.push([o, s]) : "number" == typeof s && t.push([o, s.toString()]), Array.isArray(s) || m()(s) && i(s, o))
							}
						};
					return i(e), b(t)
				},
				b = e => e.sort((e, t) => g(e[0], t[0])),
				g = (e, t) => e === t ? 0 : e < t ? -1 : 1,
				w = (e, t) => {
					if (e === t) return !0;
					if (e.length !== t.length) return !1;
					for (let i = 0; i < e.length; i++) {
						const n = e[i],
							r = t[i];
						if (n[0] !== r[0] || n[1] !== r[1]) return !1
					}
					return !0
				},
				v = e => e.replace(/[^\-a-zA-Z0-9_]/g, "").toLocaleLowerCase(),
				y = (e, t) => {
					let i = "";
					for (let n = 0; n < e.length; n++) {
						const [t, r] = e[n];
						i += `-${t}: ${r};`
					}
					return `${t===h?":root":`.${v(t)}`} { ${i} }`
				};
			class E {
				constructor(e, t, i) {
					this.isRootOrUniqueClassName = e, this.theme = t, this.cssVarPairs = i || f(t), this.cssVarDefinitions = y(this.cssVarPairs, e)
				}
				updatedRecord(e, t) {
					if (this.isRootOrUniqueClassName !== e) return new E(e, t);
					if (this.theme === t) return this;
					const i = f(t);
					return w(this.cssVarPairs, i) ? this : new E(e, t, i)
				}
				isEqual(e) {
					return this === e || this.isRootOrUniqueClassName === e.isRootOrUniqueClassName && (this.theme === e.theme || w(this.cssVarPairs, e.cssVarPairs))
				}
			}
			const S = () => ({
					contextCache: new c.a(5),
					rootContext: void 0
				}),
				T = S(),
				O = o.a.createContext(T);
			class I extends o.a.Component {
				constructor(e) {
					super(e), this.contextValue = S()
				}
				render() {
					return o.a.createElement(O.Provider, {
						value: this.contextValue
					}, this.props.children)
				}
			}
			const R = o.a.createContext(""),
				F = o.a.createContext({});
			class N extends o.a.Component {
				constructor(e, t) {
					if (super(e, t), this.context = t, !this.context) throw new Error("CSSVariableProvider must be wrapped in a CSSVPCoordinatorContextProvider");
					const {
						isRootOrUniqueClassName: i,
						theme: n
					} = e, r = this.getRecordFromContext(i), s = void 0 === r ? new E(i, n) : r.updatedRecord(i, n);
					r && r.isEqual(s) || this.setRecordOnContext(i, s), this.cssVarRecord = s
				}
				componentDidMount() {
					N.polyfillCSSVarsIfNeeded()
				}
				updateCssVarRecord(e) {
					const t = this.getRecordFromContext(e.isRootOrUniqueClassName),
						i = t || this.cssVarRecord,
						n = i.updatedRecord(e.isRootOrUniqueClassName, e.theme);
					t && n.isEqual(i) || this.setRecordOnContext(e.isRootOrUniqueClassName, n), n.isEqual(this.cssVarRecord) || (this.cssVarRecord = n)
				}
				getRecordFromContext(e) {
					return e === h ? this.context.rootContext : this.context.contextCache.get(e)
				}
				setRecordOnContext(e, t) {
					e === h ? this.context.rootContext = t : this.context.contextCache.set(e, t)
				}
				render() {
					this.updateCssVarRecord(this.props);
					const {
						className: e,
						isRootOrUniqueClassName: t,
						theme: i
					} = this.props, n = t === h ? "" : v(t);
					return o.a.createElement(o.a.Fragment, null, o.a.createElement("style", {
						dangerouslySetInnerHTML: {
							__html: this.cssVarRecord.cssVarDefinitions
						}
					}), o.a.createElement(F.Provider, {
						value: i
					}, o.a.createElement(R.Provider, {
						value: n
					}, o.a.createElement("div", {
						className: Object(a.a)(e, n)
					}, this.props.children))))
				}
			}
			N.contextType = O, N.polyfillCSSVarsIfNeeded = r()(() => {
				u.a.read(() => {
					Object(l.e)() || i.e("css-vars-ponyfill").then(i.bind(null, "./node_modules/css-vars-ponyfill/dist/css-vars-ponyfill.esm.js")).then(({
						default: e
					}) => {
						e({
							fixNestedCalc: !1,
							onlyLegacy: !0,
							updateURLs: !1,
							watch: !0
						})
					})
				})
			});
			const C = (e, t, i) => Object(d.createPortal)(o.a.createElement(R.Consumer, null, t => o.a.createElement("div", {
				className: v(t)
			}, e)), t, i)
		},
		"./src/lib/DeprecatedBrowserProvider/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return y
			})), i.d(t, "b", (function() {
				return S
			}));
			var n = i("./node_modules/react/index.js"),
				r = i.n(n),
				s = i("./node_modules/react-redux/es/index.js"),
				o = i("./node_modules/reselect/es/index.js"),
				d = i("./node_modules/ua-parser-js/src/ua-parser.js");
			const a = "Apple",
				l = "iOS",
				u = "https://www.google.com/chrome/",
				c = "https://www.microsoft.com/windows/microsoft-edge",
				_ = "https://www.mozilla.org/firefox/",
				m = "https://www.apple.com/safari/",
				p = "https://www.opera.com",
				h = "https://www.ucweb.com",
				f = {
					isDeprecated: !1,
					updateLink: null
				};
			var b = i("./src/reddit/selectors/responsivePage.ts"),
				g = i("./src/reddit/selectors/responsiveSettings.ts");
			const w = Object(o.c)({
					isResponsiveSettingsEnabled: e => Object(g.a)(e, {
						pageLayer: e.platform.currentPage
					}),
					isPageResponsive: b.a
				}),
				v = Object(s.b)(w),
				y = r.a.createContext(f);
			class E extends r.a.Component {
				constructor(e) {
					super(e), this.contextValue = function(e, t) {
						if (!e) return f;
						const i = new d.UAParser(e),
							n = i.getDevice(),
							r = i.getOS();
						if (!t && (n && n.vendor === a || r && r.name === l)) return {
							isDeprecated: !0,
							updateLink: null
						};
						let s = f.isDeprecated,
							o = f.updateLink;
						const b = i.getBrowser();
						switch (b.name) {
							case "Chrome":
							case "Chrome Headless":
							case "Chrome WebView":
								s = parseInt(b.version || "") < 49, o = u;
								break;
							case "Edge":
								s = parseInt(b.version || "") < 15, o = c;
								break;
							case "Firefox":
								s = parseInt(b.version || "") < 45, o = _;
								break;
							case "IE":
							case "Mobile IE":
								s = !0, o = c;
								break;
							case "Safari":
							case "Mobile Safari":
								s = parseInt(b.version || "") < 11, o = m;
								break;
							case "Opera":
								s = parseInt(b.version || "") < 35, o = p;
								break;
							case "UCBrowser":
								s = parseFloat((b.version || "").slice(0, 5)) < 11.5, o = h
						}
						return {
							isDeprecated: s,
							updateLink: o
						}
					}(e.userAgent, e.isResponsiveSettingsEnabled || e.isPageResponsive)
				}
				render() {
					return r.a.createElement(y.Provider, {
						value: this.contextValue
					}, this.props.children)
				}
			}
			const S = v(E)
		},
		"./src/lib/FocusTrap/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = ['input:not([type="hidden"]):not([disabled])', "select:not([disabled])", "textarea:not([disabled])", "a[href]", "button:not([disabled])", '[tabindex]:not([tabindex="-1"]):not([disabled])', "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join();
			class r {
				constructor(e) {
					this.active = !1, this.onKeyDown = e => {
						if ("Tab" === e.key || 9 === e.keyCode) {
							const [t, i] = this.getTabbableNodes();
							if (!t || !i) return;
							e.shiftKey && e.target === t ? (e.preventDefault(), this.tryToFocusNode(i)) : e.shiftKey || e.target !== i || (e.preventDefault(), this.tryToFocusNode(t))
						}
					}, this.container = e
				}
				activate() {
					this.active || (this.active = !0, document.addEventListener("keydown", this.onKeyDown, !0))
				}
				deactivate() {
					this.active && (document.removeEventListener("keydown", this.onKeyDown, !0), this.active = !1)
				}
				getTabbableNodes() {
					const e = this.container.querySelectorAll(n);
					return [e[0], e[e.length - 1]]
				}
				tryToFocusNode(e) {
					e !== document.activeElement && e.focus && e.focus()
				}
			}
		},
		"./src/lib/LRUCache/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			class n {
				constructor(e, t) {
					this.next = null, this.prev = null, this.value = e, this.key = t
				}
			}
			class r {
				constructor(e) {
					this.head = null, this.tail = null, this.data = {}, this.maxSize = e, this.currentSize = 0
				}
				get(e) {
					const t = this.data[e];
					if (void 0 !== t) return this._removeNodeFromList(t), this._setHeadNode(t), t.value
				}
				set(e, t) {
					let i = this.data[e];
					return void 0 === i ? (this.currentSize === this.maxSize ? (i = this.tail, this._removeNodeFromList(i), this.data[i.key] = void 0, i.key = e, i.value = t) : (i = new n(t, e), this.currentSize += 1), this.data[e] = i) : this._removeNodeFromList(i), this._setHeadNode(i), this
				}
				remove(e) {
					const t = this.data[e];
					return void 0 !== t && (this._removeNodeFromList(t), this.data[e] = void 0, this.currentSize -= 1), this
				}
				_removeNodeFromList(e) {
					e.prev ? e.prev.next = e.next : (this.head = e.next, this.head && (this.head.prev = null)), e.next ? e.next.prev = e.prev : (this.tail = e.prev, this.tail && (this.tail.next = null))
				}
				_setHeadNode(e) {
					e !== this.head && (e.next = this.head, e.prev = null, null !== this.head && (this.head.prev = e), this.head = e, null === this.tail && (this.tail = e))
				}
			}
		},
		"./src/lib/addQueryParams/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/lodash/isNil.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/pickBy.js"),
				o = i.n(s),
				d = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				a = i.n(d),
				l = i("./src/lib/extractQueryParams/index.ts"),
				u = i("./src/lib/mapToObject/index.ts");
			t.a = (e, t) => {
				const i = a.a.parse(e),
					n = o()(t, e => !r()(e));
				return i.query = {
					...Object(u.a)(Object(l.a)(e)),
					...n
				}, i.search = void 0, a.a.format(i)
			}
		},
		"./src/lib/ads/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "n", (function() {
				return n
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "l", (function() {
				return d
			})), i.d(t, "j", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "m", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			})), i.d(t, "k", (function() {
				return p
			})), i.d(t, "i", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "g", (function() {
				return b
			})), i.d(t, "r", (function() {
				return g
			})), i.d(t, "p", (function() {
				return w
			})), i.d(t, "s", (function() {
				return v
			})), i.d(t, "q", (function() {
				return y
			})), i.d(t, "o", (function() {
				return E
			})), i.d(t, "t", (function() {
				return S
			})), i.d(t, "u", (function() {
				return T
			}));
			var n, r = i("./src/lib/constants/index.ts");
			! function(e) {
				e.muted = "muted", e.seeked = "seeked"
			}(n || (n = {}));
			const s = .01,
				o = .3,
				d = .5,
				a = .8,
				l = 1,
				u = .999,
				c = 0,
				_ = 1e3,
				m = 100,
				p = 2e3,
				h = 3e3,
				f = 5e3,
				b = 15e3,
				g = [.01, .3, .5, 1],
				w = [.01, .5, {
					key: "100",
					threshold: u
				}, {
					key: "TOTAL_MRC_VIEWABLE_TIME",
					playing: !0,
					threshold: d
				}, {
					key: "HALF_DURATION_80_IN_VIEW_AUDIBLE",
					playing: !0,
					withSound: !0,
					threshold: a
				}, {
					key: "FULL_IN_VIEW_AUDIBLE_TIME",
					playing: !0,
					threshold: u,
					withSound: !0
				}, {
					key: "FULL_IN_VIEW_TIME",
					playing: !0,
					threshold: u
				}, {
					key: "AUDIBLE_TIME",
					playing: !0,
					threshold: 0,
					withSound: !0
				}],
				v = e => e.map(e => e && "object" == typeof e ? e.key : Math.floor(100 * e)),
				y = v(g),
				E = v(w),
				S = (e, t) => {
					let i, n = e.source,
						r = e.callToAction;
					if (t) {
						n = {
							displayText: t.displayAddress || t.displayUrl || t.outboundUrl,
							outboundUrl: t.outboundUrl,
							url: t.outboundUrl
						}, i = t.caption, r = t.callToAction
					}
					return {
						source: n,
						caption: i,
						callToAction: r
					}
				},
				T = e => {
					var t;
					return "1" === (null == e ? void 0 : e.queryParams.p) && (null === (t = null == e ? void 0 : e.meta) || void 0 === t ? void 0 : t.name) === r.Nb.COMMENTS
				}
		},
		"./src/lib/ads/store.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return s
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			}));
			var n = i("./src/lib/ads/index.ts");
			let r = {};
			const s = e => (() => r)()[e],
				o = e => e.reduce((e, t) => (e[t] = {
					maxContinuousTime: 0,
					totalTime: 0,
					timeEntered: null
				}, e), {}),
				d = () => ({
					thresholdData: o(n.q),
					videoThresholdData: o(n.o),
					videoAds: {
						muted: {},
						seeked: {}
					}
				}),
				a = Object.freeze(d()),
				l = (e, t, i, s) => {
					const o = Date.now(),
						d = i ? "videoThresholdData" : "thresholdData";
					Object(n.s)(t).forEach(t => {
						const i = r[e][d][t];
						if (s) i.timeEntered = i.timeEntered || o;
						else if (i.timeEntered) {
							const e = o - i.timeEntered;
							i.totalTime += e, i.maxContinuousTime = Math.max(i.maxContinuousTime, e), i.timeEntered = null
						}
					})
				},
				u = e => (t, ...i) => (r[t] || (r[t] = d()), e.apply(void 0, [t, ...i])),
				c = u((e, t, i) => {
					const n = r[e].videoAds[i];
					n.value = t, n.timeUpdated = n.timeUpdated && n.value === t ? n.timeUpdated : Date.now()
				}),
				_ = u((e, t, i) => l(e, t, i, !0)),
				m = u((e, t, i) => l(e, t, i, !1))
		},
		"./src/lib/apiErrorHelpers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "c", (function() {
				return c
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/sample/index.ts"),
				s = i("./src/reddit/models/Subreddit/index.ts");
			i("./src/config.ts");
			const o = () => !0,
				d = (e, t, d) => {
					const l = t.allowErrorLogging || o;
					if (!(e => {
							const t = a(e);
							switch (t) {
								case 401:
									return Object(r.a)(5);
								case 403:
								case 404: {
									const t = e.body && e.body.reason;
									switch ("string" == typeof t ? t.toUpperCase() : "") {
										case s.e.BannedSubreddit:
										case s.e.GoldSubreddit:
										case s.e.PrivateSubreddit:
										case s.e.QuarantinedSubreddit:
										case s.e.ForbiddenSubreddit:
											return !1;
										default:
											return !0
									}
								}
								default:
									return !!t
							}
						})(d) || !l(d)) return;
					const u = a(d); {
						const {
							sendErrorToServer: r
						} = i("./src/lib/logs/errors.ts");
						r({
							context: e,
							statusCode: u,
							endpoint: t.endpoint,
							error: d.error,
							type: n.t.API
						})
					}
				},
				a = e => e.status || e.error && e.error.status || void 0,
				l = (...e) => t => {
					const i = a(t);
					return e.indexOf(i) < 0
				},
				u = {
					400: n.I.BAD_REQUEST,
					401: n.I.AUTHENTICATION_ERROR,
					403: n.I.AUTHORIZATION_ERROR,
					404: n.I.NOT_FOUND_ERROR,
					451: n.I.BLOCKED_FOR_LEGAL_REASONS
				},
				c = e => u[e] || n.I.VALIDATION_ERROR
		},
		"./src/lib/areUrlsEqual/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/history/esm/history.js"),
				r = i("./node_modules/lodash/isEqual.js"),
				s = i.n(r);
			const o = e => (e => ({
				...e,
				hash: ""
			}))(Object(n.c)(e));
			t.a = (e, t) => s()(o(e), o(t))
		},
		"./src/lib/base64/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			window.atob;
			const n = window.btoa
		},
		"./src/lib/cache/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/redditId/index.ts"),
				s = i("./src/lib/cache/localStorage/index.ts");
			n.Q;
			const o = n.rc,
				d = (e, t, i) => e + "." + t + (i ? "{" + Object(r.b)(i, n.Ib.Account) + "}" : ""),
				a = s.a,
				l = s.b
		},
		"./src/lib/cache/localStorage/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./src/lib/logs/console.ts"),
				r = i("./src/lib/safeJSONParse/index.ts");
			const s = e => {
					let t;
					try {
						if (!(t = localStorage.getItem(e))) return
					} catch (s) {
						return void Object(n.a)(s, `localStorage cache get("${e}") error`)
					}
					const i = Object(r.a)(t);
					if (i) {
						if (!(i.expires < Date.now())) return i.value
					} else Object(n.a)(void 0, `localStorage cache get("${e}") error parsing: ${i}`)
				},
				o = (e, t, i) => {
					const r = {
						expires: "number" == typeof i ? Date.now() + i : i.getTime(),
						value: t
					};
					try {
						return localStorage.setItem(e, JSON.stringify(r)), !0
					} catch (s) {
						Object(n.a)(s, `localStorage cache set("${e}") error`)
					}
					return !1
				}
		},
		"./src/lib/classNames/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/isObject.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/isString.js"),
				o = i.n(s);

			function d(...e) {
				const t = [];
				for (const i of e) i && (o()(i) ? t.push(i) : Array.isArray(i) ? t.push(d(...i)) : r()(i) && t.push(d(...Object.keys(i).filter(e => !!i[e]))));
				return t.join(" ")
			}
		},
		"./src/lib/consoleAdvert/index.ts": function(e, t, i) {
			console.log("\n                  ,d\"=≥,.,qOp,\n                 ,7'  ''²$(  )\n                ,7'      '?q$7'\n             ..,$$,.\n   ,.  .,,--***²\"\"²***--,,.  .,\n ²   ,p²''              ''²q,   ²\n:  ,7'                      '7,  :\n ' $      ,db,      ,db,      $ '\n  '$      ²$$²      ²$$²      $'    Using Reddit at work? Work for Reddit.\n  '$                          $'      https://www.redditinc.com/careers\n   '$.     .,        ,.     .$'\n    'b,     '²«»«»«»²'     ,d'\n     '²?bn,,          ,,nd?²'\n       ,7$ ''²²²²²²²²'' $7,\n     ,² ²$              $² ²,\n     $  :$              $:  $\n     $   $              $   $\n     'b  q:            :p  d'\n      '²«?$.          .$?»²'\n         'b            d'\n       ,²²'?,.      .,?'²²,\n      ²==--≥²²==--==²²≤--==²\n")
		},
		"./src/lib/constants/cookie.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "h", (function() {
				return l
			})), i.d(t, "i", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			}));
			const n = "loid",
				r = "loidcreated",
				s = "mod_mode_enabled",
				o = "d2_token",
				d = "session_tracker",
				a = "reddaid",
				l = "token_v2",
				u = "wpsn",
				c = ["token", o, "reddit_session", l]
		},
		"./src/lib/constants/euCookiePolicy.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			}));
			const n = ["AT", "BE", "BG", "BL", "CH", "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", "GG", "GI", "GP", "GR", "HR", "HU", "IE", "IM", "IS", "IT", "JE", "LI", "LT", "LU", "LV", "MF", "MQ", "MT", "NL", "NO", "PL", "PM", "PT", "RE", "RO", "SE", "SI", "SK", "UK", "YT"],
				r = ["AT", "BE", "BG", "HR", "CY", "CZ", "DK", "EE", "FI", "FR", "DE", "GR", "HU", "IE", "IT", "LV", "LT", "LU", "MT", "NL", "PL", "PT", "RO", "SK", "SI", "ES", "SE", "GB", "IS", "LI", "NO", "GI", "AX", "PM", "BL", "SX", "CW", "BM", "KY", "MS", "CH", "AD", "MC", "SM", "VA", "JE", "GF", "GP", "IM", "MF", "MQ", "YT", "RE", "GG", "VG", "SH"],
				s = ["AT", "AU", "BE", "BG", "BR", "CA", "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GR", "HR", "HU", "IE", "IT", "LT", "LU", "LV", "NL", "PH", "PL", "PT", "RO", "SE", "SI", "SK"],
				o = "eu_cookie",
				d = "eu-cookies-opted"
		},
		"./src/lib/constants/headers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			const n = "x-reddit-loid",
				r = "x-reddit-session",
				s = "set-cookie",
				o = "x-reddaid"
		},
		"./src/lib/constants/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "D", (function() {
				return d
			})), i.d(t, "s", (function() {
				return a
			})), i.d(t, "n", (function() {
				return l
			})), i.d(t, "Ib", (function() {
				return u
			})), i.d(t, "jc", (function() {
				return c
			})), i.d(t, "q", (function() {
				return m
			})), i.d(t, "y", (function() {
				return p
			})), i.d(t, "r", (function() {
				return h
			})), i.d(t, "k", (function() {
				return f
			})), i.d(t, "j", (function() {
				return b
			})), i.d(t, "Kb", (function() {
				return g
			})), i.d(t, "o", (function() {
				return w
			})), i.d(t, "I", (function() {
				return v
			})), i.d(t, "dc", (function() {
				return y
			})), i.d(t, "A", (function() {
				return E
			})), i.d(t, "ec", (function() {
				return S
			})), i.d(t, "P", (function() {
				return T
			})), i.d(t, "W", (function() {
				return O
			})), i.d(t, "Y", (function() {
				return I
			})), i.d(t, "X", (function() {
				return R
			})), i.d(t, "vb", (function() {
				return F
			})), i.d(t, "u", (function() {
				return N
			})), i.d(t, "Jb", (function() {
				return C
			})), i.d(t, "m", (function() {
				return j
			})), i.d(t, "w", (function() {
				return A
			})), i.d(t, "z", (function() {
				return x
			})), i.d(t, "lc", (function() {
				return D
			})), i.d(t, "v", (function() {
				return P
			})), i.d(t, "Yb", (function() {
				return L
			})), i.d(t, "Qb", (function() {
				return k
			})), i.d(t, "tc", (function() {
				return M
			})), i.d(t, "Zb", (function() {
				return U
			})), i.d(t, "bc", (function() {
				return G
			})), i.d(t, "ac", (function() {
				return q
			})), i.d(t, "mc", (function() {
				return V
			})), i.d(t, "sc", (function() {
				return H
			})), i.d(t, "Pb", (function() {
				return W
			})), i.d(t, "Ob", (function() {
				return z
			})), i.d(t, "ub", (function() {
				return K
			})), i.d(t, "tb", (function() {
				return Y
			})), i.d(t, "hc", (function() {
				return $
			})), i.d(t, "ic", (function() {
				return Q
			})), i.d(t, "Rb", (function() {
				return J
			})), i.d(t, "nc", (function() {
				return X
			})), i.d(t, "uc", (function() {
				return Z
			})), i.d(t, "sb", (function() {
				return ee
			})), i.d(t, "qb", (function() {
				return te
			})), i.d(t, "a", (function() {
				return ie
			})), i.d(t, "b", (function() {
				return ne
			})), i.d(t, "gb", (function() {
				return re
			})), i.d(t, "eb", (function() {
				return se
			})), i.d(t, "mb", (function() {
				return oe
			})), i.d(t, "U", (function() {
				return de
			})), i.d(t, "hb", (function() {
				return ae
			})), i.d(t, "fb", (function() {
				return le
			})), i.d(t, "lb", (function() {
				return ue
			})), i.d(t, "ob", (function() {
				return ce
			})), i.d(t, "nb", (function() {
				return _e
			})), i.d(t, "bb", (function() {
				return me
			})), i.d(t, "Z", (function() {
				return pe
			})), i.d(t, "ab", (function() {
				return he
			})), i.d(t, "db", (function() {
				return fe
			})), i.d(t, "T", (function() {
				return be
			})), i.d(t, "oc", (function() {
				return ge
			})), i.d(t, "R", (function() {
				return we
			})), i.d(t, "L", (function() {
				return ve
			})), i.d(t, "G", (function() {
				return ye
			})), i.d(t, "g", (function() {
				return Ee
			})), i.d(t, "Ub", (function() {
				return Se
			})), i.d(t, "Tb", (function() {
				return Te
			})), i.d(t, "Ab", (function() {
				return Ie
			})), i.d(t, "Db", (function() {
				return Re
			})), i.d(t, "Eb", (function() {
				return Ne
			})), i.d(t, "Fb", (function() {
				return Ce
			})), i.d(t, "cb", (function() {
				return je
			})), i.d(t, "E", (function() {
				return Ae
			})), i.d(t, "F", (function() {
				return xe
			})), i.d(t, "Lb", (function() {
				return De
			})), i.d(t, "Sb", (function() {
				return Le
			})), i.d(t, "kb", (function() {
				return ke
			})), i.d(t, "Q", (function() {
				return Be
			})), i.d(t, "B", (function() {
				return Me
			})), i.d(t, "qc", (function() {
				return Ue
			})), i.d(t, "pb", (function() {
				return Ge
			})), i.d(t, "rc", (function() {
				return qe
			})), i.d(t, "jb", (function() {
				return Ve
			})), i.d(t, "d", (function() {
				return He
			})), i.d(t, "e", (function() {
				return We
			})), i.d(t, "i", (function() {
				return ze
			})), i.d(t, "p", (function() {
				return Ke
			})), i.d(t, "c", (function() {
				return Ye
			})), i.d(t, "f", (function() {
				return $e
			})), i.d(t, "Nb", (function() {
				return Qe
			})), i.d(t, "V", (function() {
				return Je
			})), i.d(t, "Cb", (function() {
				return Xe
			})), i.d(t, "Bb", (function() {
				return Ze
			})), i.d(t, "zb", (function() {
				return et
			})), i.d(t, "Xb", (function() {
				return tt
			})), i.d(t, "Wb", (function() {
				return it
			})), i.d(t, "xb", (function() {
				return nt
			})), i.d(t, "H", (function() {
				return rt
			})), i.d(t, "h", (function() {
				return st
			})), i.d(t, "J", (function() {
				return ot
			})), i.d(t, "t", (function() {
				return dt
			})), i.d(t, "kc", (function() {
				return at
			})), i.d(t, "fc", (function() {
				return lt
			})), i.d(t, "gc", (function() {
				return ut
			})), i.d(t, "rb", (function() {
				return ct
			})), i.d(t, "cc", (function() {
				return _t
			})), i.d(t, "S", (function() {
				return mt
			})), i.d(t, "Vb", (function() {
				return pt
			})), i.d(t, "K", (function() {
				return ht
			})), i.d(t, "wb", (function() {
				return ft
			})), i.d(t, "C", (function() {
				return gt
			})), i.d(t, "l", (function() {
				return wt
			})), i.d(t, "Hb", (function() {
				return vt
			})), i.d(t, "Gb", (function() {
				return yt
			})), i.d(t, "pc", (function() {
				return Et
			})), i.d(t, "yb", (function() {
				return St
			})), i.d(t, "x", (function() {
				return Tt
			})), i.d(t, "ib", (function() {
				return Ot
			})), i.d(t, "Mb", (function() {
				return It
			})), i.d(t, "M", (function() {
				return Rt
			})), i.d(t, "N", (function() {
				return Nt
			})), i.d(t, "O", (function() {
				return Ct
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/config.ts"),
				s = i("./node_modules/lodash/values.js"),
				o = i.n(s);
			const d = "en",
				a = {
					ACKNOWLEDGEMENTS: "Acknowledgements",
					APPEAL: "Appeal",
					AVATAR: "Avatar",
					COINS: "Coins",
					COINS_MOBILE: "CoinsMobile",
					COLLECTION_COMMENTS_PAGE: "CollectionCommentsPage",
					COMMENTS_PAGE: "CommentsPage",
					EMPTY: "Empty",
					ECON_MANAGEMENT: "EconManagement",
					DASHBOARD: "UiDashboard",
					FRONTPAGE: "Frontpage",
					GEOTAGGING: "Geotagging",
					INTERNATIONAL_SITE_PAGE: "InternationalSitePage",
					META_ARBITRUM_POINTS_MIGRATION_PAGE: "MetaArbitrumPointsMigrationPage",
					META_COMMUNITY_POINTS_LEARN_MORE_PAGE: "MetaCommunityPointsLearnMorePage",
					META_MEMBERSHIP_PAYWALL_PAGE: "MetaMemberhipPaywallPage",
					MULTIREDDIT: "Multireddit",
					NOTIFICATIONS_INBOX: "NotificationsInbox",
					OVER18: "Over18",
					POST_CREATION: "PostCreation",
					POST_DRAFT: "PostDraft",
					SETTINGS: "Settings",
					PROFILE: "Profile",
					PROFILE_BETA_CONFIRMATION_PAGE: "ProfileBetaConfirmationPage",
					PROFILE_COMMENTS: "ProfileComments",
					PROFILE_COMMENTS_PAGE: "ProfileCommentsPage",
					PROFILE_FOLLOWERS: "ProfileFollowers",
					PROFILE_HOMEPAGE: "ProfileHomepage",
					PROFILE_POST_COMMENTS: "ProfilePostComments",
					PROFILE_POSTS: "ProfilePosts",
					PROFILE_PRIVACY: "ProfilePrivacy",
					PROFILE_PRIVATE: "ProfilePrivate",
					PROFILE_SNOOBUILDER: "ProfileSnoobuilder",
					R2_PROFILE_MODERATION: "R2ProfileModeration",
					PROFILE_MODERATION: "ProfileModeration",
					PROFILE_SETTINGS: "ProfileSettings",
					PROFILE_OVERVIEW: "ProfileOverview",
					PUBLIC_ACCESS_NETWORK: "PublicAccessNetwork",
					REPORT_PAGE: "ReportPage",
					R2_COMMENTS_PAGE: "R2CommentsPage",
					R2_LISTING: "R2Listing",
					SEARCH_RESULTS: "SearchResults",
					STRUCTURED_STYLES: "StructuredStyles",
					SUBREDDIT: "Subreddit",
					SUBREDDIT_CREATION: "SubredditCreation",
					SUBREDDIT_LEADERBOARD: "SubredditLeaderboard",
					SUBREDDIT_SETTINGS: "SubredditSettings",
					SUBREDDIT_WIKI: "SubredditWiki",
					TALK: "Talk",
					TOPIC: "Topic",
					MOD_LISTING: "ModListing",
					MODERATION_PAGES: "ModerationPages",
					MODQUEUE_PAGES: "ModQueuePages",
					INBOX_PAGES: "InboxPages",
					CHAT: "ChatPage",
					CHAT_INVITE: "ChatInvite",
					CHAT_EMPTY: "ChatEmpty",
					CHAT_CREATE: "ChatCreate",
					CHAT_MEMBERS: "ChatMembers",
					CHAT_MINIMIZE: "ChatMinimize",
					CHAT_TEST: "ChatTest",
					PREDICTIONS: "Predictions",
					PREMIUM: "Premium",
					POWERUPS: "Powerups",
					WRAPPED_REDDIT: "WrappedReddit",
					FRAMED_GILD: "FramedGild",
					FRAMED_MODAL: "FramedModal",
					EXPORT_THEME: "ExportTheme",
					IMPORT_THEME: "ImportTheme",
					STANDALONE_POST_PAGE: "StandAlonePostPage",
					USER_DATA_REQUEST: "UserDataRequestPage"
				};
			var l;
			! function(e) {
				e.Profiles = "r2d2", e.Redesign = "whitespace", e.Chat = "chat", e.Backend = "server", e.Governance = "governance"
			}(l || (l = {}));
			new Set(Object.keys(l).map(e => l[e]));
			var u;
			! function(e) {
				e.Comment = "t1", e.CommentLoadMore = "loadMore", e.CommentContinueThread = "continueThread", e.Account = "t2", e.Post = "t3", e.Subreddit = "t5"
			}(u || (u = {}));
			const c = "u_";
			var _;
			! function(e) {
				e.CacheNamespaceChatKey = "CHAT", e.CacheNamespaceSubredditsKey = "RECENT_SUBREDDITS"
			}(_ || (_ = {}));
			const m = {
				CHAT: "chat"
			};
			var p;
			! function(e) {
				e.CHAT_EDIT_NICKNAME_KEY = "chat_edit_nicknameKey", e.CHAT_SHOW_THEMES_PROMPT_COUNT_KEY = "chat_show_themes_prompt_count_key", e.CHAT_THEME_KEY = "chat_theme_key", e.CHAT_SENDBIRD_SESSION_KEY = "session", e.CHAT_SENDBIRD_CONTACTS_KEY = "contacts", e.CHAT_CONTAINER_SIZE_KEY = "container_size", e.CHAT_DRAFT_MESSAGES_KEY = "draft_messages", e.CHAT_LAST_SELECTED_CHANNEL_ID_KEY = "last_selected_channel_id", e.CHAT_CHANNELS_FILTER_KEY = "channels_filter", e.CHAT_UNREAD_MESSAGE_COUNT_KEY = "unread_message_count", e.CHAT_UPLOAD_PROMPT_COUNT_KEY = "upload_prompt_count", e.CHAT_CHAT_LINK_PROMPT_COUNT_KEY = "chat_link_prompt_count", e.CHAT_CHAT_INVITE_LINK_SETTINGS = "chat_invite_link_settings", e.CHAT_INVITE_USER_ID = "invite_user_id", e.CHAT_INVITE_LINK_ERROR = "invite_link_error", e.CHAT_MEDIA_SHARE_GLOBAL_PROMPT = "media_share_global_prompt"
			}(p || (p = {}));
			const h = {
					RECENT_SUBREDDITS: "recent_subreddits"
				},
				f = "AUTHORIZATION_ERROR",
				b = "AUTHENTICATION_ERROR",
				g = "RATELIMIT",
				w = "BLOCKED_FOR_LEGAL_REASONS",
				v = {
					AUTHENTICATION_ERROR: b,
					AUTHORIZATION_ERROR: f,
					BAD_CAPTCHA_ERROR: "BAD_CAPTCHA",
					BAD_REQUEST: "BAD_REQUEST",
					BANNED_FROM_SUBREDDIT: "BANNED_FROM_SUBREDDIT",
					CREDIT_CARD_FAILURE: "CREDIT_CARD_FAILURE",
					CREDIT_CARD_FAILURE_GENERIC: "CREDIT_CARD_FAILURE_GENERIC",
					INVALID_PREMIUM_AMOUNT: "INVALID_PREMIUM_AMOUNT",
					LIKELY_UBLOCK_ERROR: "LIKELY_UBLOCK_ERROR",
					NO_STRIPE_SUBSCRIPTION: "NO_STRIPE_SUBSCRIPTION",
					NO_TEXT: "NO_TEXT",
					NO_URL: "NO_URL",
					NO_USER: "NO_USER",
					NOT_FOUND_ERROR: "NOT_FOUND_ERROR",
					SERVER_ERROR: "SERVER_ERROR",
					SUBMIT_VALIDATION_ERROR: "SUBMIT_VALIDATION_ERROR",
					UNKNOWN_ERROR: "UNKNOWN_ERROR",
					USER_DOESNT_EXIST: "USER_DOESNT_EXIST",
					USER_REQUIRED_ERROR: "USER_REQUIRED",
					VALIDATION_ERROR: "VALIDATION_ERROR",
					RATELIMIT: g,
					BLOCKED_FOR_LEGAL_REASONS: w
				};
			var y, E, S;
			! function(e) {
				e.None = "NONE", e.Snoozed = "SNOOZED"
			}(y || (y = {})),
			function(e) {
				e.Everywhere = "GLOBAL", e.UnitedStates = "US", e.Argentina = "AR", e.Australia = "AU", e.Bulgaria = "BG", e.Canada = "CA", e.Chile = "CL", e.Colombia = "CO", e.Croatia = "HR", e.CzechRepublic = "CZ", e.Finland = "FI", e.France = "FR", e.Germany = "DE", e.Greece = "GR", e.Hungary = "HU", e.Iceland = "IS", e.India = "IN", e.Ireland = "IE", e.Italy = "IT", e.Japan = "JP", e.Malaysia = "MY", e.Mexico = "MX", e.NewZealand = "NZ", e.Philippines = "PH", e.Poland = "PL", e.Portugal = "PT", e.PuertoRico = "PR", e.Romania = "RO", e.Serbia = "RS", e.Singapore = "SG", e.Spain = "ES", e.Sweden = "SE", e.Taiwan = "TW", e.Thailand = "TH", e.Turkey = "TR", e.UnitedKingdom = "GB"
			}(E || (E = {})),
			function(e) {
				e.AllStates = "", e.Alaska = "AK", e.Alabama = "AL", e.Arkansas = "AR", e.Arizona = "AZ", e.California = "CA", e.Colorado = "CO", e.Connecticut = "CT", e.DistrictOfColumbia = "DC", e.Delaware = "DE", e.Florida = "FL", e.Georgia = "GA", e.Hawaii = "HI", e.Iowa = "IA", e.Idaho = "ID", e.Illinois = "IL", e.Indiana = "IN", e.Kansas = "KS", e.Kentucky = "KY", e.Louisiana = "LA", e.Massachusetts = "MA", e.Maryland = "MD", e.Maine = "ME", e.Michigan = "MI", e.Minnesota = "MN", e.Missouri = "MO", e.Mississippi = "MS", e.Montana = "MT", e.NorthCarolina = "NC", e.NorthDakota = "ND", e.Nebraska = "NE", e.NewHampshire = "NH", e.NewJersey = "NJ", e.NewMexico = "NM", e.Nevada = "NV", e.NewYork = "NY", e.Ohio = "OH", e.Oklahoma = "OK", e.Oregon = "OR", e.Pennsylvania = "PA", e.RhodeIsland = "RI", e.SouthCarolina = "SC", e.SouthDakota = "SD", e.Tennessee = "TN", e.Texas = "TX", e.Utah = "UT", e.Virginia = "VA", e.Vermont = "VT", e.Washington = "WA", e.Wisconsin = "WI", e.WestVirginia = "WV", e.Wyoming = "WY"
			}(S || (S = {}));
			const T = {
					BEST: "BEST",
					HOT: "HOT",
					NEW: "NEW",
					RISING: "RISING",
					CONTROVERSIAL: "CONTROVERSIAL",
					TOP: "TOP",
					AWARDED: "AWARDED"
				},
				O = {
					BEST: "best",
					HOT: "hot",
					NEW: "new",
					RISING: "rising",
					CONTROVERSIAL: "controversial",
					TOP: "top",
					GILDED: "gilded",
					AWARDED: "awarded"
				};
			var I;
			! function(e) {
				e.Best = "best", e.Hot = "hot", e.New = "new", e.ControversialHour = "controversial_hour", e.ControversialDay = "controversial_day", e.ControversialWeek = "controversial_week", e.ControversialMonth = "controversial_month", e.ControversialYear = "controversial_year", e.ControversialAll = "controversial_all", e.TopHour = "top_hour", e.TopDay = "top_day", e.TopWeek = "top_week", e.TopMonth = "top_month", e.TopYear = "top_year", e.TopAll = "top_all", e.Rising = "rising", e.Gilded = "gilded"
			}(I || (I = {}));
			const R = O.HOT,
				F = O.BEST,
				N = (new Set(o()(O)), {
					CONFIDENCE: "confidence",
					TOP: "top",
					NEW: "new",
					CONTROVERSIAL: "controversial",
					OLD: "old",
					RANDOM: "random",
					QA: "qa",
					LIVE: "live",
					CHAT: "chat"
				}),
				C = {
					confidence: "Confidence",
					top: "Top",
					new: "New",
					controversial: "Controversial",
					old: "Old",
					random: "Random",
					qa: "Qa",
					live: "Live",
					chat: "Chat"
				},
				j = {
					OFF: "Off",
					LOW: "Low",
					MEDIUM: "Medium",
					HIGH: "High"
				},
				A = {
					confidence: () => n.fbt._("best", null, {
						hk: "1lngJF"
					}),
					top: () => n.fbt._("top", null, {
						hk: "3dS2pz"
					}),
					new: () => n.fbt._("new", null, {
						hk: "1qXhXd"
					}),
					controversial: () => n.fbt._("controversial", null, {
						hk: "1eadsB"
					}),
					old: () => n.fbt._("old", null, {
						hk: "100gqw"
					}),
					qa: () => n.fbt._("q&a", null, {
						hk: "2pXYJX"
					}),
					live: () => n.fbt._("live (beta)", null, {
						hk: "1I81g1"
					}),
					chat: () => n.fbt._("chat view (beta)", null, {
						hk: "497J3V"
					})
				};
			var x;
			! function(e) {
				e.Chat = "chat", e.Comment = "comment"
			}(x || (x = {}));
			const D = new Set(o()(N).filter(e => e !== N.CHAT)),
				P = N.CONFIDENCE;
			var L;
			! function(e) {
				e.Comments = "comments", e.Hot = "hot", e.New = "new", e.Relevance = "relevance", e.Top = "top"
			}(L || (L = {}));
			const k = L.Relevance,
				B = new Set([L.Comments, L.Hot, L.New, L.Relevance, L.Top]);

			function M(e) {
				return B.has(e)
			}
			var U, G, q;
			! function(e) {
				e.ToGlobal = "unrestrict_scope_to_global", e.ToSubreddit = "restrict_scope_to_subreddit"
			}(U || (U = {})),
			function(e) {
				e.Posts = "link", e.Subreddits = "sr", e.Users = "user", e.Comments = "comment"
			}(G || (G = {})),
			function(e) {
				e.Posts = "posts", e.Subreddits = "communities", e.Users = "authors", e.Comments = "comments"
			}(q || (q = {}));
			const V = new Set([G.Posts, G.Subreddits, G.Users, G.Comments]),
				H = e => {
					const t = new Set(V);
					return e || t.delete(G.Comments), t
				},
				W = "SafeSearch",
				z = ["author", "flair", "nsfw", "self", "selftext", "site", "subreddit", "title", "url"],
				K = "OverviewConversations",
				Y = "OverviewChrono",
				$ = {
					DAY: "day",
					HOUR: "hour",
					WEEK: "week",
					MONTH: "month",
					YEAR: "year",
					ALL: "all"
				},
				Q = "day",
				J = $.ALL,
				X = ($.DAY, new Set(o()($)));

			function Z(e) {
				return X.has(e)
			}
			const ee = 5,
				te = {
					CROSSPOST: "crosspost",
					TEXT: "text",
					IMAGE: "image",
					VIDEO: "video",
					EMBED: "embed",
					GIFVIDEO: "gifvideo"
				},
				ie = new Set(["image/png", "image/gif", "image/jpeg", "image/webp"]),
				ne = new Set(["video/mp4", "video/quicktime"]),
				re = 60,
				se = 900,
				oe = 2,
				de = 1024,
				ae = 1024 * de,
				le = 1 * (1024 * ae),
				ue = 1 * de,
				ce = 50,
				_e = 50,
				me = 20 * ae,
				pe = 100 * ae,
				he = 20,
				fe = 5,
				be = "INVALID_MEDIA_TYPE_ERROR",
				ge = "VIDEO_SIZE_LIMIT_EXCEEDED_ERROR",
				we = "IMAGE_SIZE_LIMIT_EXCEEDED_ERROR",
				ve = "GIF_SIZE_LIMIT_EXCEEDED_ERROR",
				ye = {
					ADMIN: "admin",
					MODERATOR: "moderator",
					ALUMNI_ADMIN: "special",
					NONE: ""
				},
				Ee = {
					[ye.MODERATOR]: "yes",
					[ye.NONE]: "no",
					[ye.ADMIN]: "admin"
				},
				Se = 21,
				Te = 3,
				Oe = {
					HOT: "hot",
					NEW: "new",
					TOP: "top",
					CONTROVERSIAL: "controversial"
				},
				Ie = [Oe.NEW, Oe.HOT, Oe.TOP],
				Re = [Oe.NEW, Oe.HOT, Oe.TOP],
				Fe = {
					HOT: "hot",
					NEW: "new",
					TOP: "top",
					CONTROVERSIAL: "controversial"
				},
				Ne = (new Set(o()(Oe)), new Set(o()(Fe)), Oe.NEW),
				Ce = $.ALL,
				je = (new Set(o()({
					OVERVIEW: "overview",
					POSTS: "posts",
					COMMENTS: "comments"
				})), 4),
				Ae = "[deleted]",
				xe = "[deleted]",
				De = "[removed]";
			var Pe;
			! function(e) {
				e[e.subreddit = 0] = "subreddit", e[e.on = 1] = "on", e[e.off = 2] = "off"
			}(Pe || (Pe = {}));
			const Le = 1e3,
				ke = 60 * Le,
				Be = 60 * ke,
				Me = 24 * Be,
				Ue = 7 * Me,
				Ge = 30 * Me,
				qe = 365 * Me,
				Ve = {
					HEAD: "head",
					GET: "get",
					POST: "post",
					PUT: "put",
					PATCH: "patch",
					DELETE: "delete"
				},
				He = 900,
				We = [300, 250],
				ze = [We, [300, 600]],
				Ke = [We],
				Ye = {
					ABOVE_THE_FOLD: "atf",
					BELOW_THE_FOLD: "btf"
				},
				$e = {
					HOUSE_AD: "house_ad",
					SWITCH_HOUSE_AD: "switch_house_ad"
				},
				Qe = {
					ACKNOWLEDGEMENTS: "acknowledgements",
					APPEAL: "appeal",
					AVATAR: "avatar",
					AVATAR_PROFILE: "avatarProfile",
					INDEX: "index",
					LISTING: "listing",
					COLLECTION_COMMENTS: "collectionComments",
					COMMENTS: "comments",
					DASHBOARD: "dashboard",
					DUPLICATES: "duplicates",
					ECON_MANAGEMENT: "econManagement",
					EXPLORE: "explore",
					EMAIL_VERIFICATION: "emailVerification",
					FOLLOWERS: "followers",
					GEOTAGGING: "geotagging",
					INTERNATIONAL_SITE_PAGE: "internationalSitePage",
					META_ARBITRUM_POINTS_MIGRATION_PAGE: "metaArbitrumPointsMigrationPage",
					META_COMMUNITY_POINTS_LEARN_MORE_PAGE: "metaCommunityPointsLearnMorePage",
					META_MEMBERSHIP_PAYWALL_PAGE: "metaMembershipPaywallPage",
					META_VAULT_BURN: "metaVaultBurn",
					MULTIREDDIT: "multireddit",
					NOTIFICATIONS_INBOX: "notificationsInbox",
					SETTINGS: "settings",
					SETTINGS_REDIRECT: "settingsRedirect",
					OVER18: "over18",
					ORIGINAL_CONTENT_REDIRECT: "originalContentRedirect",
					POST_CREATION: "postCreation",
					POST_DRAFT: "postDraft",
					PROFILE: "profile",
					PROFILE_BETA_CONFIRMATION: "profileBetaConfirmation",
					PROFILE_COMMENTS: "profileComments",
					PROFILE_HOMEPAGE: "profileHomepage",
					PROFILE_ME: "profileMe",
					PROFILE_MODERATION: "profileModeration",
					PROFILE_OVERVIEW: "profileOverview",
					PROFILE_POST_COMMENTS: "profilePostComments",
					PROFILE_POSTS: "profilePosts",
					PROFILE_PRIVACY: "profilePrivacy",
					PROFILE_PRIVATE: "profilePrivate",
					PROFILE_REDIRECT: "profileRedirect",
					PROFILE_SETTINGS: "profileSettings",
					PROFILE_SNOOBUILDER: "profileSnoobuilder",
					PROFILE_SUBMITTED: "profileSumitted",
					PUBLIC_ACCESS_NETWORK: "rpan",
					SEARCH_RESULTS: "searchResults",
					SUBREDDIT: "subreddit",
					SUBREDDIT_CREATION: "subredditCreation",
					SUBREDDIT_LEADERBOARD: "subredditLeaderboard",
					SUBREDDIT_SETTINGS: "subredditSettings",
					SUBREDDIT_WIKI: "subredditWiki",
					TALK: "talk",
					TOPIC: "topic",
					MOD_LISTING: "modListing",
					MODERATION_PAGES: "moderationPages",
					MODQUEUE_PAGES: "modQueuePages",
					INBOX_PAGES: "inboxPages",
					CHAT: "chat",
					CHAT_INVITE: "ChatInvite",
					CHAT_EMPTY: "chatEmpty",
					CHAT_CREATE: "chatCreate",
					CHAT_MEMBERS: "chatMembers",
					CHAT_MINIMIZE: "chatMinimize",
					CHAT_TEST: "chatTest",
					COINS: "coins",
					COINS_MOBILE: "coinsMobile",
					PREDICTIONS: "predictions",
					PREDICTION_REDIRECT: "predictionRedirect",
					PREMIUM: "premium",
					POWERUPS: "powerups",
					WRAPPED_REDDIT: "RedditRecap2021",
					POWERUP_REDIRECT: "powerupRedirect",
					FRAMED_GILD: "framedGild",
					FRAMED_MODAL: "framedModal",
					REPORT: "report",
					STANDALONE_POST_PAGE: "standAlonePostPage",
					USER_DATA_REQUEST: "userDataRequest"
				},
				Je = new Set([Qe.INDEX, Qe.INTERNATIONAL_SITE_PAGE, Qe.LISTING, Qe.MULTIREDDIT, Qe.SEARCH_RESULTS, Qe.SUBREDDIT, Qe.PROFILE, Qe.PROFILE_COMMENTS, Qe.PROFILE_OVERVIEW, Qe.PROFILE_POSTS, Qe.PROFILE_PRIVATE, Qe.TOPIC]),
				Xe = new Set([Qe.PROFILE, Qe.PROFILE_COMMENTS, Qe.PROFILE_HOMEPAGE, Qe.PROFILE_POST_COMMENTS, Qe.PROFILE_PRIVACY, Qe.PROFILE_ME, Qe.PROFILE_MODERATION, Qe.PROFILE_OVERVIEW, Qe.PROFILE_POSTS, Qe.PROFILE_PRIVATE, Qe.PROFILE_SETTINGS, Qe.PROFILE_REDIRECT]),
				Ze = new Set([Qe.PROFILE_OVERVIEW, Qe.PROFILE_POSTS, Qe.PROFILE_PRIVATE]),
				et = new Set([Qe.PROFILE_COMMENTS, Qe.PROFILE_OVERVIEW, Qe.PROFILE_POSTS, Qe.PROFILE_PRIVATE]),
				tt = new Set([Qe.INDEX, Qe.LISTING, Qe.MULTIREDDIT, Qe.SUBREDDIT]),
				it = {
					CROSSPOST: "crosspost",
					IMAGE_ONLY: "imageOnly",
					LINK_ONLY: "linkOnly",
					MEDIA: "media",
					POLL: "poll",
					POST: "post",
					PREDICTION: "prediction",
					TALK: "talk"
				},
				nt = "prediction",
				rt = new Set([it.IMAGE_ONLY, it.LINK_ONLY, it.POST]),
				st = {
					ArrowDown: 40,
					ArrowLeft: 37,
					ArrowRight: 39,
					ArrowUp: 38
				},
				ot = 27,
				dt = {
					NOT_ALLOWED_ACCESS: "not-allowed-access",
					LOGGEDIN_HAS_REDESIGN_COOKIE: "loggedin_has_redesign_cookie",
					API: "api",
					JS: "js",
					GQL: "gql"
				},
				at = new Set(o()(dt));
			var lt, ut, ct, _t;
			! function(e) {
				e.Awards = "awards", e.Powerups = "powerups", e.Muted = "muted", e.Badges = "badges", e.Banned = "banned", e.ChatSettings = "chat", e.ContentControls = "settings", e.Contributors = "contributors", e.Emojis = "emojis", e.Emotes = "emotes", e.EventPostContent = "eventposts", e.Moderators = "moderators", e.SubredditRules = "rules", e.Removal = "removal", e.Modqueue = "modqueue", e.Reports = "reports", e.Spam = "spam", e.Unmoderated = "unmoderated", e.Edited = "edited", e.PostFlair = "postflair", e.Modlog = "log", e.Flair = "flair", e.CommunitySettings = "edit", e.UserFlair = "userflair", e.Wiki = "wiki", e.WikiContributors = "wikicontributors", e.WikiBanned = "wikibanned", e.Traffic = "traffic", e.ScheduledPostContent = "scheduledposts", e.Streaming = "broadcasting", e.SubredditContent = "content", e.Predictions = "predictions"
			}(lt || (lt = {})),
			function(e) {
				e.Community = "community", e.Notifications = "notifications", e.Safety = "safety", e.Posts = "posts", e.Wikis = "wikis", e.ContentTag = "content_tag"
			}(ut || (ut = {})),
			function(e) {
				e.Edited = "edited", e.Modqueue = "modqueue", e.Reports = "reports", e.Spam = "spam", e.Unmoderated = "unmoderated"
			}(ct || (ct = {})),
			function(e) {
				e.Account = "account", e.Messaging = "messaging", e.Profile = "profile", e.Privacy = "privacy", e.Notifications = "notifications", e.Feed = "feed", e.Gold = "gold", e.Payments = "payments", e.Premium = "premium", e.Creator = "creator", e.SpecialMembership = "special", e.Dsp = "dsp"
			}(_t || (_t = {}));
			const mt = {
					ALL: "inbox",
					UNREAD: "unread",
					MESSAGES: "messages",
					COMMENT_REPLIES: "comments",
					POST_REPLIES: "selfreply",
					USERNAME_MENTIONS: "mentions",
					COMPOSE: "compose",
					SENT: "sent",
					MODERATOR: "moderator"
				},
				pt = "snoomoji",
				ht = Math.ceil(1e3 / 60);
			var ft, bt;
			! function(e) {
				e.TITLE = "title", e.BODY = "body", e.LINK = "link", e.FLAIR = "flair"
			}(ft || (ft = {})),
			function(e) {
				e.On = "1", e.Off = "0"
			}(bt || (bt = {}));
			const gt = {
					domain: r.a.cookieDomain,
					secure: r.a.https,
					httpOnly: !1
				},
				wt = "AutoModerator",
				vt = "paypal",
				yt = "creditCard",
				Et = "View--GiveAward",
				St = 599,
				Tt = {
					CLIENT_ID_CONSUMED: "clientIdConsumed",
					CLIENT_ID_REJECTED: "clientIdRejected",
					NUMBER_OF_DIFFS: "gql_numberofdiffs",
					DETAILED_DIFFS: "gql_detaileddiffs",
					CLIENT_SCREENVIEW: "client-screenview",
					GENDER_COLLECTION: "genderCollection"
				},
				Ot = " …",
				It = ["politics", "askreddit", "amitheasshole", "movies", "soccer", "memes", "news", "funny", "relationshipadvice", "wallstreetbets", "pics", "aww", "doctorwho", "porsche", "barista", "bourbon", "barefootrunning", "dexter", "fitmeals", "tifu", "coronavirus"],
				Rt = new Set(["search_results", "search_results_trending", "typeahead", "search_dropdown", "search_authors_tab", "search_comments_tab", "search_communities_tab", "search_posts_tab"]),
				Ft = new Set(["home", "popular", "news", "community"]),
				Nt = new Set([...Rt, ...Ft]),
				Ct = new Set(["post_detail", "single_comment_thread", "community", "profile_overview"])
		},
		"./src/lib/convertToCamelCase/index.ts": function(e, t, i) {
			"use strict";
			t.a = e => {
				const t = {};
				for (const i in e) {
					t[i.replace(/_\w/g, e => e[1].toUpperCase())] = e[i]
				}
				return t
			}
		},
		"./src/lib/cookieConsent/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return p
			})), i.d(t, "c", (function() {
				return h
			}));
			var n = i("./node_modules/js-cookie/src/js.cookie.js"),
				r = i.n(n),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/constants/euCookiePolicy.ts");
			var d = i("./src/lib/permanentCookieOptions.ts"),
				a = i("./src/lib/sentry/index.ts");
			i("./src/reddit/constants/cookie.ts");
			const l = {
					setConsent: e => {},
					get consent() {
						return new Promise(e => this.setConsent = e)
					}
				},
				u = {
					...s.C,
					expires: new Date
				},
				c = e => {
					const t = e ? e.cookies.get(o.c) : r.a.get(o.c);
					let i = _(t);
					return (null == i ? void 0 : i.opted) || (i = (e => {
						if (e) {
							const t = _(e.cookies.get(o.e));
							if (t) return e.cookies.set(o.c, JSON.stringify(t), Object(d.a)(10)), e.cookies.set(o.e, "", u), t
						} else {
							const e = _(r.a.get(o.e));
							if (e) return r.a.set(o.c, JSON.stringify(e), Object(d.a)(10)), r.a.remove(o.e), e
						}
						return null
					})(e)), i || {
						opted: !1
					}
				},
				_ = e => {
					if (!e) return null;
					try {
						const t = JSON.parse(decodeURIComponent(e));
						if (void 0 !== t.opted) return t;
						throw new Error(`Invalid consent cookie: ${t}`)
					} catch (t) {
						a.c.captureMessage(t), console.error(t)
					}
					return null
				},
				m = (e, t, i, n) => e.nonessential ? (r.a.set(t, i, n), !0) : (console.log("Cookie lacking consent, not setting"), !1),
				p = e => (r.a.set(o.c, JSON.stringify(e), Object(d.a)(10)), l.setConsent(e), !0),
				h = async e => {
					const t = c();
					return void 0 !== e.cookieContext.country && o.d.includes(e.cookieContext.country) ? t.opted ? (m(t, e.name, e.value, e.cookieOptions), Promise.resolve(t)) : b().then(t => (m(t, e.name, e.value, e.cookieOptions), t)) : (r.a.set(e.name, e.value, e.cookieOptions), Promise.resolve(t))
				};
			let f;
			const b = () => f = f || l.consent;
			t.a = h
		},
		"./src/lib/copyToClipboard/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/logs/console.ts");
			t.a = e => {
				const t = document.body.scrollTop,
					i = document.body.scrollLeft,
					r = document.createElement("textarea");
				r.value = e, document.body.appendChild(r), r.select();
				try {
					document.execCommand("copy")
				} catch (s) {
					return Object(n.a)(s, `Failed to copy text: ${e}`), !1
				}
				return document.body.removeChild(r), document.body.scrollTop = t, document.body.scrollLeft = i, !0
			}
		},
		"./src/lib/countrySites/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			}));
			var n = i("./src/lib/isFakeSubreddit/index.ts"),
				r = i("./src/reddit/constants/page.ts");
			const s = (e, t = !0) => {
					const i = (e => e.map(e => "/:languageCode([a-z]{2})" + e))(e),
						n = (e => e.map(e => "/:languageCode([a-z]{2})-:countryCode([a-z]{2})" + e))(e);
					return t ? [...n, ...i, ...e] : [...n, ...i]
				},
				o = e => {
					const {
						subredditName: t,
						countryCode: i,
						languageCode: s
					} = e, o = Object(n.c)(t, {
						countryCode: i,
						languageCode: s
					}), d = Object(n.b)(t, {
						countryCode: i,
						languageCode: s
					});
					let a = t;
					return o && (a = r.d.Popular), d && (a = r.d.All), a
				},
				d = (e, t, i) => {
					let n = "";
					return i && (n += `/${i}`, n += t ? `-${t}` : ""), n + e
				}
		},
		"./src/lib/createSignature/index.ts": function(e, t, i) {
			"use strict";
			(function(e) {
				var n = i("./node_modules/crypto-browserify/index.js"),
					r = i.n(n);
				const s = 7;
				t.a = (t, i) => {
					const n = function(t, i) {
							const n = new ArrayBuffer(s),
								r = new DataView(n);
							return r.setUint8(0, t), r.setUint32(3, i, !0), e.from(n)
						}(1, Date.now() / 1e3 + 86400),
						o = function(t, i, n) {
							const s = r.a.createHmac("sha256", t),
								o = e.from(n).toString(),
								d = e.from(o),
								a = e.concat([i, d]);
							return s.update(a), s.digest()
						}(i, n, t),
						d = e.concat([n, o]);
					return e.from(d).toString("base64")
				}
			}).call(this, i("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)
		},
		"./src/lib/delay/index.ts": function(e, t, i) {
			"use strict";

			function n(e) {
				return new Promise(t => setTimeout(t, e))
			}
			i.d(t, "a", (function() {
				return n
			}))
		},
		"./src/lib/domUtils/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "f", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "a", (function() {
				return _
			}));
			var n = i("./node_modules/lodash/isNil.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/once.js"),
				o = i.n(s);
			const d = () => document && (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement),
				a = (e, t) => {
					r()(e) || (e === document ? window.scrollTo(0, t) : e.scrollTop = t)
				},
				l = o()(() => {
					{
						const e = window.CSS && window.CSS.supports.bind(window.CSS) || window.supportsCSS;
						return !!e && (e("--f:0") || e("--f", 0))
					}
				}),
				u = () => {
					let e = !1;
					try {
						const t = Object.defineProperty({}, "passive", {
							get() {
								e = !0
							}
						});
						window.addEventListener("test", null, t)
					} catch (t) {}
					return e
				},
				c = o()(() => {
					const e = {},
						t = "search tel url email datetime date month week time datetime-local number range color".split(" "); {
						const i = "1)";
						let n, r, s;
						const o = document.documentElement;
						if (!o) return !1;
						const d = document.createElement("input");
						for (let a = 0; a < t.length; a++) d.setAttribute("type", n = t[a]), (s = "text" !== d.type && "style" in d) && (d.value = i, d.style.cssText = "position:absolute;visibility:hidden;", /^range$/.test(n) && void 0 !== d.style.webkitAppearance ? (o.appendChild(d), s = (r = document.defaultView).getComputedStyle && "textfield" !== r.getComputedStyle(d, null).webkitAppearance && 0 !== d.offsetHeight, o.removeChild(d)) : /^(search|tel)$/.test(n) || (s = /^(url|email)$/.test(n) ? d.checkValidity && !1 === d.checkValidity() : d.value !== i)), e[t[a]] = !!s;
						return e
					}
				}),
				_ = e => {
					if (e) {
						const t = document.getElementById(e);
						t && t.focus()
					}
				}
		},
		"./src/lib/env/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			}));
			const n = () => !0,
				r = () => !1,
				s = () => !n(),
				o = () => !1
		},
		"./src/lib/envConfigParsing/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return n
			})), i.d(t, "e", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			}));
			const n = e => e.split(";").reduce((e, t) => {
					if (t && t.indexOf("=") > 0) {
						const [i, n] = t.split("=");
						e[i.trim()] = n.trim()
					}
					return e
				}, {}),
				r = e => e.length <= 0 ? [] : e.split(";"),
				s = e => {
					try {
						return !!JSON.parse(e)
					} catch (t) {
						return !1
					}
				},
				o = e => {
					if ("string" != typeof e || !e) return;
					const t = parseFloat(e);
					return isNaN(t) ? void 0 : t
				},
				d = e => {
					const t = o(e);
					if ("number" == typeof t) return Math.round(1e3 * t)
				}
		},
		"./src/lib/eventTools/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			}));
			var n, r = i("./src/lib/constants/index.ts");

			function s(e, t) {
				const i = e * r.Sb,
					s = t * r.Sb,
					o = Date.now();
				return o < i ? n.Future : o >= i && o <= s ? n.Live : n.Past
			}

			function o(e, t) {
				return s(e, t) === n.Future
			}

			function d(e) {
				return function(e, t) {
					const i = e / t;
					return i >= 0 ? Math.floor(i) : Math.ceil(i)
				}(e * r.Sb - Date.now(), r.B)
			}

			function a(e) {
				const t = e * r.Sb,
					i = new Date,
					n = new Date(t);
				return i.getFullYear() === n.getFullYear() && i.getMonth() === n.getMonth() && i.getDate() === n.getDate()
			}! function(e) {
				e.Future = "before", e.Live = "now", e.Past = "after"
			}(n || (n = {}))
		},
		"./src/lib/extractQueryParams/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			const n = "";

			function r(e) {
				if (!e) return new Map;
				const t = e.split("?")[1] || "",
					[i] = t.split("#");
				if (!i) return new Map;
				const r = {},
					s = i.split("&").map((e, t) => {
						const [i, s] = e.split("=");
						try {
							const e = s ? decodeURIComponent(s) : n;
							return r[i] = (r[i] || []).concat(t), [i, e]
						} catch (o) {
							return [i, n]
						}
					}).reduce((e, t, i, n) => {
						const s = t[0],
							o = r[s];
						if (!o || o[0] !== i) return e;
						const d = r[s].map(e => n[e][1]);
						if (d.length) {
							const t = d.join(",");
							e.push([s, t])
						}
						return e
					}, []);
				return new Map(s)
			}
		},
		"./src/lib/fastdom/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/react-dom/index.js");
			const r = e => setTimeout(() => {
				throw e
			});
			var s;
			! function(e) {
				e.Read = "READ", e.Write = "WRITE"
			}(s || (s = {}));
			t.a = new class {
				constructor() {
					this.reads = [], this.writes = [], this.batchScheduled = !1, this.executeBatch = () => {
						this.runTasks(this.reads, s.Read), Object(n.unstable_batchedUpdates)(() => {
							this.runTasks(this.writes, s.Write)
						}), this.batchScheduled = !1, this.hasTasks() && this.scheduleBatch()
					}
				}
				read(e) {
					return this.reads.push(e), this.scheduleBatch(), e
				}
				write(e) {
					return this.writes.push(e), this.scheduleBatch(), e
				}
				clear(e) {
					e && (this.removeInplace(e, this.reads), this.removeInplace(e, this.writes))
				}
				removeInplace(e, t) {
					let i = t.indexOf(e);
					for (; i > -1;) t.splice(i, 1), i = t.indexOf(e)
				}
				scheduleBatch() {
					this.batchScheduled || (requestAnimationFrame(this.executeBatch), this.batchScheduled = !0)
				}
				hasTasks() {
					return this.reads.length || this.writes.length
				}
				runTasks(e, t) {
					let i;
					for (; i = e.shift();) this.runTask(i, t)
				}
				runTask(e, t) {
					try {
						e()
					} catch (i) {
						0,
						r(i)
					}
				}
			}
		},
		"./src/lib/filterQueryParams/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n),
				s = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				o = i.n(s);
			t.a = (e, t) => {
				const i = o.a.parse(e, !0);
				return i.search = void 0, i.query = {
					...r()(i.query, t)
				}, o.a.format(i)
			}
		},
		"./src/lib/formatEmojiName/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			}));
			const n = ":",
				r = /^:[A-Za-z0-9_-]{1,24}:$/;

			function s(e) {
				return r.test(e) ? e : `${n}${e}${n}`
			}
		},
		"./src/lib/getParsedUserAgent/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return r
			})), i.d(t, "h", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			}));
			var n = i("./node_modules/ua-parser-js/src/ua-parser.js");
			const r = e => "mobile" === c(e).device.type,
				s = e => "tablet" === c(e).device.type,
				o = e => !r(e) && !s(e),
				d = e => "Chrome" === c(e).browser.name,
				a = e => "Firefox" === c(e).browser.name,
				l = e => "Opera" === c(e).browser.name,
				u = e => {
					const t = c(e).browser.name;
					return "Mobile Safari" === t || "Safari" === t
				};

			function c(e) {
				return new n.UAParser(e).getResult()
			}
		},
		"./src/lib/initializeClient/combineReducersDynamic.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");

			function n(e, t) {
				const i = t && t.type;
				return `Given ${i&&`action "${String(i)}"`||"an action"}, reducer "${e}" returned undefined. ` + "To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined."
			}
			console.warn;

			function r(e) {
				const t = Object.keys(e),
					i = {};
				for (let n = 0; n < t.length; n++) {
					const r = t[n];
					0, "function" == typeof e[r] && (i[r] = e[r])
				}
				const r = Object.keys(i);
				return function(e = {}, t) {
					let s = !1;
					const o = {
						...e
					};
					for (let d = 0; d < r.length; d++) {
						const a = r[d],
							l = i[a],
							u = e[a],
							c = l(u, t);
						if (void 0 === c) {
							const e = n(a, t);
							throw new Error(e)
						}
						o[a] = c, s = s || c !== u
					}
					return s ? o : e
				}
			}
		},
		"./src/lib/initializeClient/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return $
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/@loadable/component/dist/loadable.esm.js"),
				r = i("./node_modules/@reddit/i18n-tools/runtime/client/index.js"),
				s = i("./node_modules/@reddit/i18n-tools/runtime/helpers/locale/fbt.js"),
				o = i("./node_modules/@sentry/browser/esm/sdk.js"),
				d = i("./node_modules/@sentry/browser/esm/index.js"),
				a = i("./node_modules/@sentry/minimal/esm/index.js"),
				l = i("./node_modules/history/esm/history.js"),
				u = i("./node_modules/js-cookie/src/js.cookie.js"),
				c = i.n(u),
				_ = i("./node_modules/raf/index.js"),
				m = i.n(_),
				p = i("./node_modules/react/index.js"),
				h = i.n(p),
				f = i("./node_modules/react-dom/index.js"),
				b = i.n(f),
				g = i("./node_modules/react-redux/es/index.js"),
				w = i("./node_modules/react-router-redux/es/index.js"),
				v = i("./node_modules/redux/es/redux.js"),
				y = (i("./node_modules/redux-immutable-state-invariant/dist/index.js"), i("./src/config.ts")),
				E = (i("./src/lib/consoleAdvert/index.ts"), i("./src/lib/constants/index.ts"));
			const S = "mov-2-h";
			var T = i("./node_modules/react-router/esm/react-router.js");

			function O() {
				return (O = Object.assign || function(e) {
					for (var t = 1; t < arguments.length; t++) {
						var i = arguments[t];
						for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
					}
					return e
				}).apply(this, arguments)
			}

			function I({
				loadingPage: e,
				routes: t
			}) {
				return t.map(t => (function({
					component: e,
					...t
				}, i) {
					const n = {
						component: t => void 0 !== e ? h.a.createElement(e, O({}, t, {
							fallback: i
						})) : null,
						exact: t.exact,
						path: t.path
					};
					return h.a.createElement(T.d, O({
						key: Array.isArray(t.path) ? t.path[0] : t.path
					}, n))
				})(t, e))
			}
			var R = e => t => h.a.createElement(T.e, {
					history: e,
					children: t.children
				}),
				F = i("./src/lib/CSSVariableProvider/index.tsx"),
				N = i("./src/lib/DeprecatedBrowserProvider/index.tsx"),
				C = i("./src/lib/initializeClient/combineReducersDynamic.ts"),
				j = i("./src/lib/initializeClient/installReducer.ts"),
				A = i("./src/lib/logs/errors.ts"),
				x = i("./src/lib/matchRoute/index.ts"),
				D = i("./src/lib/performanceTimings/index.tsx"),
				P = i("./src/lib/sample/index.ts"),
				L = i("./src/lib/sentry/index.ts"),
				k = i("./src/reddit/helpers/localStorage/index.ts"),
				B = i("./src/reddit/selectors/user.ts"),
				M = i("./src/telemetry/helpers/sendCounter.ts"),
				U = i("./src/lib/logSafeJSONStringify/index.ts");
			const G = e => setTimeout(() => {
					throw e
				}, 0),
				q = new Set(["displayText", "email", "profileId", "url"].map(e => e.toLowerCase()));
			var V = e => t => i => n => {
				"object" == typeof n && L.c.addBreadcrumb({
					message: n.type,
					category: "redux-action"
				});
				const r = t.getState(),
					s = i(n),
					o = t.getState();
				return L.c.setExtra("pageInfo", JSON.parse(Object(U.a)(o.platform))), r.user !== o.user && L.c.setUser(JSON.parse(Object(U.a)(o.user, q))), !e && s instanceof Promise && s.catch(G), s
			};
			const H = !1;

			function W(e) {
				return "ChunkLoadError" !== e.type || Object(P.a)(1)
			}
			m.a.polyfill();
			const z = () => {
					if (!(() => {
							try {
								return window.history.state || {}
							} catch (e) {
								return {}
							}
						})().key && window.history && window.history.replaceState && window.history.replaceState) {
						const e = Math.random().toString(36).substr(2, 6),
							t = `${window.location.pathname}${window.location.search}${window.location.hash}`;
						window.history.replaceState({
							key: e
						}, "", t)
					}
				},
				K = () => {
					(document.cookie.match(/loid=/g) || []).length > 1 && (c.a.set("loid", "", {
						expires: 0,
						path: "/"
					}), c.a.set("loid_created", "", {
						expires: 0,
						path: "/"
					}))
				},
				Y = (e, t, i) => {
					console.log("%cStarting Raven %crelease %ce5f065d5eba92a760cbd8f0529476f31f713bced-production" + ` %cpublic url %c${y.a.sentryClientPublicURL}`, "color: #7E53C1", "color: #7E53C1", "color: #FFB000", "color: #7E53C1", "color: #FFB000");
					let n = [];
					n = [new RegExp(`^${y.a.assetPath}`, "i")];
					o.e({
						attachStacktrace: !0,
						dsn: y.a.sentryClientPublicURL,
						whitelistUrls: n,
						release: "e5f065d5eba92a760cbd8f0529476f31f713bced-production",
						environment: "production",
						ignoreErrors: ["$ is not defined"],
						integrations: [...Object(L.d)(), new d.Integrations.Breadcrumbs({
							console: !1
						}), new d.Integrations.GlobalHandlers({
							onerror: !0,
							onunhandledrejection: !1
						})],
						beforeSend: e => (e = Object(L.b)(e), Object(L.f)(e) ? null : e.exception && e.exception.values && (e.exception.values = e.exception.values.filter(W), 0 === e.exception.values.length) ? null : (Object(A.sendRavenError)(i(), e), Object(L.e)(e)))
					}), t.tags && a.j(t.tags), a.i("app", e)
				};
			async function $(e) {
				let t;
				Object(D.e)(D.b.InitClientStart), document.documentElement && "object" == typeof document.documentElement && "string" == typeof document.documentElement.innerHTML && (t = document.documentElement.innerHTML.length);
				const o = Object(n.b)(() => {}, {
					namespace: e.appName
				});
				K(), z();
				const d = e.history || Object(l.a)(),
					u = Object(x.a)(d.location.pathname, e.routes),
					c = u && u.route && u.route.chunk ? u.route.chunk : "unknown";
				let _ = e => e.children;
				e.raven && (Y(e.appName, e.raven, e.apiContext), _ = class extends h.a.Component {
					componentDidCatch(e, t) {
						a.l(i => {
							i.setExtra("info", t), a.c(e)
						}), this.setState({
							errorInfo: t
						})
					}
					render() {
						return this.props.children
					}
				});
				const m = null === window.onunhandledrejection;
				window.onunhandledrejection = e => {
					try {
						a.l(t => {
							t.setExtra("reason", JSON.stringify(e.reason)), a.d(`Unhandled rejection: ${e.reason}`)
						})
					} catch (t) {
						a.l(i => {
							i.setExtra("lastChance", t.message), a.d(`Unhandled rejection: ${e.reason}`)
						})
					}
				};
				const p = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__({
						shouldHotReload: !1
					}) : e => e,
					f = [!1, Object(w.d)(d), ...e.customMiddleware || []].filter(Boolean);
				e.raven && f.unshift(V(m));
				let y = window.___r || {};
				delete window.___r;
				const T = document.getElementById("data");
				T && T.parentNode && T.parentNode.removeChild(T), e.modifyInitialData && (y = e.modifyInitialData({
					initialData: y,
					browserHistory: d
				}));
				const O = Object(C.a)(e.reducerMap),
					A = Object(v.e)(O, y, Object(v.d)(Object(v.a)(...f), p, e.storeEnhancer || (e => e)));
				Object(j.b)(e.appName, A, e.reducerMap), await Object(r.loadTranslations)(Object(s.isoLocaleToFbtLocale)(document.documentElement.getAttribute("lang") || "en_US"), async e => (await i("./src/i18n/translatedFbts lazy recursive ^\\.\\/.*\\.json$")(`./${e}.json`)).default);
				const P = y.user && y.user.account ? y.user.account.id : null;
				Object(k.Z)(P);
				const {
					routes: L
				} = e;
				let U = {};
				e.preRender && (U = e.preRender({
					browserHistory: d,
					routes: L,
					store: A,
					flags: {
						DEBUG: H,
						SUPPORTS_REJECTION_EVENTS: m
					}
				})), Object(D.e)(D.b.CreateRouteCompsStart);
				const G = I({
					routes: L,
					loadingPage: e.staticPages ? e.staticPages.loading : void 0
				});
				await o, Object(D.e)(D.b.ReactHydrateStart),
					function(e) {
						const t = Array.from(e.getElementsByClassName(S));
						for (const i of t) document.head.appendChild(i), i.classList.remove(S)
					}(e.target), await new Promise(t => (e.ssr ? b.a.hydrate : b.a.render)(h.a.createElement(_, null, h.a.createElement(g.a, {
						store: A
					}, h.a.createElement(F.a, null, h.a.createElement(N.b, {
						userAgent: y.meta.userAgent
					}, e.appFactory(R(d), G))))), e.target, t)), Object(D.e)(D.b.ReactHydrateEnd), e.postRender && e.postRender({
						browserHistory: d,
						routes: L,
						serverDocumentLength: t,
						store: A,
						localStorageData: U.localStorageData
					});
				const q = Object(B.O)(A.getState());
				if (Object(D.e)(D.b.InitClientEnd), e.appName === E.n.Redesign) {
					let t = null;
					e.perfExperimentNameSelector && (t = e.perfExperimentNameSelector(A)), Object(M.b)(E.n.Redesign, {
						type: M.a.ClientScreenview,
						data: {
							pageName: c,
							loggedIn: q,
							...t ? {
								perf: t
							} : {}
						}
					})
				}
				return {
					store: A
				}
			}
		},
		"./src/lib/initializeClient/installReducer.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/icepick/icepick.js"),
				r = i("./node_modules/lodash/mapValues.js"),
				s = i.n(r),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/initializeClient/combineReducersDynamic.ts");
			const a = {};

			function l(e, t, i) {
				a[e] ? (a[e].store = t, a[e].staticReducer = i) : a[e] = {
					store: t,
					staticReducer: i,
					dynamicReducers: {}
				}, _(e)
			}

			function u(e, t = o.n.Redesign) {
				let i;
				const r = (i = a[t] ? a[t] : a[t] = {
					dynamicReducers: {}
				}).dynamicReducers;
				i.dynamicReducers = Object(n.merge)(i.dynamicReducers, e), r !== i.dynamicReducers && _(t)
			}

			function c(e, t) {
				const {
					staticReducer: i = t,
					dynamicReducers: r = {}
				} = a[e] || {};
				if (!i) throw new Error(`no staticReducer available for ${e}`);
				return function e(t) {
					return Object(d.a)(s()(t, t => "function" == typeof t ? t : e(t || {})))
				}(Object(n.merge)(i, r))
			}

			function _(e) {
				const {
					store: t,
					dynamicReducers: i
				} = a[e];
				t && 0 !== Object.keys(i).length && t.replaceReducer(c(e))
			}
		},
		"./src/lib/isAdHocMultireddit/index.ts": function(e, t, i) {
			"use strict";
			const n = /^(all|mod)(\b|$)/;
			t.a = e => {
				const t = e.toLowerCase();
				return !n.test(t) && (t.indexOf("+") > -1 && -1 === t.indexOf("-"))
			}
		},
		"./src/lib/isEqualWithoutKey/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/lodash/isEqual.js"),
				r = i.n(n);
			t.a = (e, t) => {
				const {
					key: i,
					...n
				} = e, {
					key: s,
					...o
				} = t;
				return r()(n, o)
			}
		},
		"./src/lib/isFakeSubreddit/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			}));
			var n = i("./node_modules/@reddit/reddit-country-url-redirects/dist/esm/index.js"),
				r = i("./src/reddit/constants/page.ts");
			const s = [r.b, r.d.Frontpage],
				o = [...s, r.d.Mod, r.d.Friends, r.d.Topic].concat(["random", "randnsfw", "myrandom"]),
				d = (e, t) => {
					const i = e.toLowerCase();
					return (null == t ? void 0 : t.languageCode) ? Object(n.e)(i, (null == t ? void 0 : t.languageCode) || "", (null == t ? void 0 : t.countryCode) || "") : i === r.g
				},
				a = (e, t) => {
					const i = e.toLowerCase();
					return (null == t ? void 0 : t.languageCode) ? Object(n.d)(i, (null == t ? void 0 : t.languageCode) || "", (null == t ? void 0 : t.countryCode) || "") : i === r.a
				};
			t.a = (e, t) => {
				const i = e.toLowerCase(),
					n = d(i, t),
					r = a(i, t),
					l = s.includes(i),
					u = !(null == t ? void 0 : t.languageCode) && o.includes(i);
				return r || n || l || u || i.indexOf("+") > -1 || i.indexOf("-") > -1
			}
		},
		"./src/lib/isPinnedAdminPost/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/constants/index.ts");
			t.a = (e, t) => e && t === n.G.ADMIN
		},
		"./src/lib/isUrl/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			const n = /^https?:/;

			function r(e) {
				return n.test(e)
			}
		},
		"./src/lib/lessComponent.tsx": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/react/index.js"),
				r = i.n(n),
				s = i("./src/lib/classNames/index.ts");
			const o = ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noindex", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "slot", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "webview", "svg", "animate", "animateMotion", "animateTransform", "circle", "clipPath", "defs", "desc", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "switch", "symbol", "text", "textPath", "tspan", "use", "view"],
				d = (e, t, i) => {
					const n = i[t];
					class o extends r.a.PureComponent {
						render() {
							const {
								className: t,
								innerRef: i,
								...o
							} = this.props;
							return r.a.createElement(e, {
								...o,
								ref: i,
								className: Object(s.a)(n, t)
							})
						}
					}
					return o.cssClassName = n, o.displayName = t, o
				},
				a = {};
			for (const l of o) a[l] = (e, t) => d(l, e, t);
			t.a = {
				...a,
				wrapped: (e, t, i) => {
					const n = i[t];
					class o extends r.a.PureComponent {
						render() {
							const {
								className: t,
								...i
							} = this.props;
							return r.a.createElement(e, {
								...i,
								className: Object(s.a)(n, t)
							})
						}
					}
					return o.cssClassName = n, o.displayName = t, o
				}
			}
		},
		"./src/lib/linkMatchers/customLinks.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "a", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			}));
			var n = i("./src/config.ts");
			const r = /\s/,
				s = (e, t) => (i, n, s) => {
					if (n > e.length) {
						const t = i[n - e.length - 1];
						if (!t.match(r)) {
							if ("/" !== t) return 0; {
								const t = n - e.length - 2;
								if (t >= 0 && !i[t].match(r)) return 0
							}
						}
					}
					const o = i.slice(n);
					return "" === o || (t.test(o) ? o.match(t)[0].length : 0)
				};
			var o, d;
			! function(e) {
				e.All = "all", e.Here = "here"
			}(o || (o = {})),
			function(e) {
				e.subreddit = "r/", e.subredditFull = "/r/", e.profile = "u/", e.profileFull = "/u/", e.mention = "@"
			}(d || (d = {}));
			const a = new RegExp("^[A-Za-z0-9][A-Za-z0-9_]{0,20}\\b"),
				l = new RegExp(`^@${o.All}`, "i"),
				u = new RegExp("^[A-Za-z0-9_-]{0,20}"),
				c = new RegExp("^/?(u|r)/", "i"),
				_ = new RegExp("^/?(u/|@)", "i"),
				m = d.subreddit,
				p = {
					subreddit: {
						prefix: d.subreddit,
						config: {
							validate: s(d.subreddit, a),
							normalize(e) {
								const t = e.url.replace(c, "");
								!t && e.lastIndex--, e.url = "/r/" + t
							}
						}
					},
					profile: {
						prefix: d.profile,
						config: {
							validate: s(d.profile, u),
							normalize(e) {
								const t = e.url.replace(c, "");
								!t && e.lastIndex--, e.url = "/user/" + t
							}
						}
					},
					mention: {
						prefix: d.mention,
						config: {
							validate: s(d.mention, u),
							normalize(e) {
								if (l.test(e.text)) e.url = "";
								else {
									const t = e.url.replace(_, "");
									!t && e.lastIndex--, e.url = "/user/" + t
								}
							}
						}
					},
					subredditFullUrl: {
						prefix: d.subreddit,
						config: {
							validate: s(d.subreddit, a),
							normalize(e) {
								const t = e.url.replace(c, "");
								!t && e.lastIndex--, e.url = `${n.a.redditUrl}/r/${t}`
							}
						}
					}
				},
				h = {
					subredditFull: {
						prefix: d.subredditFull,
						config: p.subreddit.config
					},
					profileFull: {
						prefix: d.profileFull,
						config: p.profile.config
					}
				},
				f = {
					...p,
					...h
				};
			t.g = f
		},
		"./src/lib/listingSort/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			}));
			var n = i("./src/lib/constants/index.ts");
			const r = e => e === n.W.TOP || e === n.W.CONTROVERSIAL,
				s = e => {
					let {
						timeSort: t
					} = e;
					return (t = r(e.sort) ? t || n.ic : void 0) === e.timeSort ? e : {
						...e,
						timeSort: t
					}
				},
				o = e => {
					if (void 0 === e) return {
						timeSort: void 0,
						sort: "best"
					};
					const [t, i] = e.split("_");
					return s({
						sort: t,
						timeSort: i
					})
				},
				d = e => {
					const {
						sort: t,
						timeSort: i
					} = s(e);
					return t + (i ? `_${i}` : "")
				}
		},
		"./src/lib/loadWithRetries/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/promise-retry/index.js"),
				r = i.n(n);
			t.a = e => r()(e, {
				minTimeout: 1500,
				maxTimeout: 3e5
			})
		},
		"./src/lib/loadableAction/index.ts": function(e, t, i) {
			"use strict";
			t.a = function(e) {
				return (...t) => async (i, n, r) => {
					return (await e())(...t)(i, n, r)
				}
			}
		},
		"./src/lib/localStorageAvailable/index.ts": function(e, t, i) {
			"use strict";
			t.a = () => {
				try {
					if ("undefined" != typeof localStorage && (localStorage.setItem("reddit_local_storage_feature_test", "yes"), "yes" === localStorage.getItem("reddit_local_storage_feature_test"))) return !0
				} catch (e) {
					return !1
				}
				return !1
			}
		},
		"./src/lib/logSafeJSONStringify/index.ts": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/constants/cookie.ts");
			const r = new Set(["password", "password2", "passwd", "passwd2", "pass", "pass2", "pw", "pw2", "accessToken", "refreshToken", "set-cookie", "cookie", "x-reddit-session", "redditSessionCookie", ...n.a, "authorization", "byName"].map(e => e.toLowerCase()));
			t.a = function(e, t) {
				try {
					return JSON.stringify(e, (e, i) => r.has(e.toLowerCase()) ? "<REDACTED />" : t && t.has(e.toLowerCase()) ? "<REDACTED />" : i)
				} catch (i) {
					return JSON.stringify({
						invalidLogJSON: "error trying to serialize logSafeJSON. circular json likely."
					})
				}
			}
		},
		"./src/lib/logs/console.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return s
				})), i.d(t, "b", (function() {
					return o
				})),
				function(e) {
					e.Warn = "WARN", e.Error = "ERROR"
				}(n || (n = {}));
			const r = (e, t = "", i = n.Error) => {
					i === n.Warn ? e ? console.warn(t, e) : console.warn(t) : e ? console.error(t, e) : console.error(t)
				},
				s = (e, t = "") => {
					r(e, t, n.Error)
				},
				o = (e, t = "") => {
					r(e, t, n.Warn)
				}
		},
		"./src/lib/logs/errors.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "sendErrorToServer", (function() {
				return c
			})), i.d(t, "sendRavenError", (function() {
				return _
			}));
			var n = i("./node_modules/lodash/get.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/throttle.js"),
				o = i.n(s),
				d = i("./src/config.ts"),
				a = i("./src/lib/constants/index.ts"),
				l = i("./src/lib/logSafeJSONStringify/index.ts"),
				u = i("./src/lib/makeRequest/index.ts");
			const c = o()(({
					context: e,
					endpoint: t,
					error: i,
					settings: n,
					statusCode: r,
					type: s
				}) => Object(u.b)({
					endpoint: d.a.postErrorsUrl,
					method: a.jb.POST,
					data: {
						endpoint: t,
						settings: n,
						statusCode: r,
						type: s,
						releaseClient: "e5f065d5eba92a760cbd8f0529476f31f713bced-production",
						appName: e.statsAppName,
						error: i ? JSON.parse(Object(l.a)(i)) : void 0
					},
					type: "json"
				}), 2e3, {
					leading: !0,
					trailing: !0
				}),
				_ = (e, t) => {
					const i = t.extra && a.kc.has(t.extra.errorType) ? t.extra.errorType : a.t.JS,
						n = (t.breadcrumbs || []).reverse();
					if (r()(n, "0.data.url") === d.a.postErrorsUrl && r()(n, "1.data.url") === d.a.postErrorsUrl) return;
					const s = r()(t, "exception.values[0]");
					let o, l = [];
					s ? (o = s.type + ": " + s.value, l = r()(s, "stacktrace.frames", [])) : (o = t.message, l = r()(t, "stacktrace.frames", []));
					const u = {
						isLoggedOut: !r()(t, "user.account"),
						url: r()(t, "extra.pageInfo.currentPage.url"),
						message: o,
						stacktrace: l.slice(0, 8),
						breadcrumbs: n.slice(0, 8),
						tags: t.tags
					};
					c({
						context: e,
						error: u,
						type: i,
						settings: t.settings
					})
				}
		},
		"./src/lib/logs/timing.js": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return c
			})), i.d(t, "c", (function() {
				return _
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeRequest/index.ts"),
				s = i("./src/lib/performance.js");
			const o = .1;

			function d(e = o) {
				return Math.random() > e
			}

			function a() {
				if (!s.a || !s.a.timing) return;
				const e = s.a.timing,
					t = {};

				function i(i, n, r) {
					if (!e[n] || !e[r]) return;
					const s = e[n],
						o = e[r] - s;
					0 !== o && (t[i] = o)
				}
				return i("redirectTiming", "redirectStart", "redirectEnd"), i("startTiming", "fetchStart", "domainLookupStart"), i("dnsTiming", "domainLookupStart", "domainLookupEnd"), i("tcpTiming", "connectStart", "connectEnd"), i("httpsTiming", "secureConnectionStart", "connectEnd"), i("requestTiming", "requestStart", "responseStart"), i("responseTiming", "responseStart", "responseEnd"), i("domLoadingTiming", "domLoading", "domInteractive"), i("domInteractiveTiming", "domInteractive", "domContentLoadedEventStart"), i("domContentLoadedTiming", "domContentLoadedEventStart", "domContentLoadedEventEnd"), t
			}

			function l(e) {
				return Object(r.b)({
					method: n.jb.POST,
					endpoint: "/timings",
					data: {
						rum: e
					},
					type: "json"
				})
			}
			let u = !0;

			function c(e) {
				if (!u) return;
				if (u = !1, d()) return;
				if (!e) return;
				const {
					meta: t,
					duration: i
				} = e;
				if (!t || !t.name) return;
				const {
					name: n
				} = t;
				l({
					actionName: `d2.client.${n}`,
					routeTiming: i
				})
			}
			const _ = (e, t, i = 0) => (n, r) => {
				const s = Date.now();
				if (i && !r) return e(t, n, s - i), i = 0;
				t = n, i = s
			}
		},
		"./src/lib/makeActionCreator/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), t.a = function(e) {
				return t => ({
					type: e,
					payload: t
				})
			};
			const n = e => (t, i) => ({
				type: e[t],
				payload: i
			})
		},
		"./src/lib/makeApiRequest/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return w
			}));
			var n = i("./node_modules/lodash/isEmpty.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/omit.js"),
				o = i.n(s),
				d = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				a = i.n(d),
				l = i("./src/lib/addQueryParams/index.ts"),
				u = i("./src/lib/apiErrorHelpers.ts"),
				c = i("./src/lib/constants/index.ts"),
				_ = i("./src/lib/constants/headers.ts"),
				m = i("./src/lib/makeRequest/index.ts"),
				p = i("./src/lib/sentry/index.ts"),
				h = i("./src/config.ts"),
				f = i("./src/reddit/helpers/parseUrl.ts"),
				b = i("./src/reddit/singleton/tracing/index.ts");
			const g = (e, t) => {
				const i = {
					...t,
					headers: {
						...t.headers || {},
						...e.headers
					}
				};
				(0 === i.endpoint.indexOf(h.a.sendbirdServiceUrl) || (0 === i.endpoint.indexOf(h.a.redditUrl) || i.endpoint.indexOf(h.a.oauthUrl), 0)) && (i.headers = o()(i.headers, [_.a, _.c])), 0 !== i.endpoint.indexOf(h.a.gatewayUrl) && (i.headers = o()(i.headers, [_.b])), t.withoutRedditHeaders && (i.headers = o()(i.headers, [_.a, _.c, _.b]));
				let n = {};
				0 !== i.endpoint.indexOf(h.a.gatewayUrl) && 0 !== i.endpoint.indexOf(h.a.redditUrl) && 0 !== i.endpoint.indexOf(h.a.apiUrl) && 0 !== i.endpoint.indexOf(h.a.oauthUrl) || (n = b.b.getTracingHeadersWithSecret()), i.headers = {
					...i.headers,
					...n
				};
				const {
					host: r,
					protocol: s
				} = a.a.parse(i.endpoint), d = `${s}//${r}`, u = t.method === c.jb.GET ? "data" : "query", m = {};
				switch (d !== e.apiUrl && d !== h.a.redditUrl || (m.raw_json = 1, m.gilding_detail = 1), typeof i[u]) {
					case "undefined":
						i[u] = m;
						break;
					case "object":
						i[u] = {
							...i[u],
							...m
						};
						break;
					case "string":
						i[u] = Object(l.a)(i[u], m)
				}
				return i
			};

			function w(e, t) {
				const i = Object(f.a)(t.endpoint),
					n = t.traceRequestName || "api_call",
					s = {
						[b.a.HttpMethod]: t.method
					};
				return i && (i.query && (s[b.a.HttpQuery] = i.query), i.pathname && (s[b.a.HttpUrl] = i.pathname)), b.b.recordRpcSpanAsync(n, async () => {
					const i = g(e, t);
					return e.onBeforeRequest(i), Object(m.b)(i).then(i => {
						if (e.onResponse(i, {
								allowSetEmptyLoid: t.allowSetEmptyLoid
							}), !i.ok) return Object(u.b)(e, t, i), !i.status || i.status >= 500 ? {
							...i,
							error: {
								fields: [],
								type: c.I.SERVER_ERROR
							}
						} : i.status >= 400 ? Array.isArray(i.body) ? {
							...i,
							error: {
								fields: i.body,
								type: Object(u.c)(i.status)
							}
						} : i.body && i.body.fields ? {
							...i,
							error: {
								fields: i.body.fields.map(e => ({
									field: e,
									msg: i.body.explanation
								})),
								type: Object(u.c)(i.status)
							}
						} : i.body && i.body.json && i.body.json.errors ? {
							...i,
							ok: !1,
							error: {
								type: Object(u.c)(i.status),
								fields: i.body.json.errors.map(e => ({
									field: e[0],
									msg: e[1]
								}))
							}
						} : i.body && i.body.error && i.body.error.extra ? {
							...i,
							ok: !1,
							error: {
								type: "gov",
								fields: [{
									field: "gov",
									msg: i.body.error
								}]
							}
						} : {
							...i,
							error: {
								type: Object(u.c)(i.status)
							}
						} : {
							...i,
							error: {
								type: Object(u.c)(i.status)
							}
						};
						if (!r()(i.body && i.body.json && i.body.json.errors)) {
							const e = i.body.json.errors[0];
							return e[2] ? {
								...i,
								ok: !1,
								error: {
									type: e[0],
									fields: [{
										field: e[2],
										msg: e[1]
									}]
								}
							} : {
								...i,
								ok: !1,
								error: {
									type: c.I.VALIDATION_ERROR,
									fields: i.body.json.errors.map(e => ({
										field: e[0],
										msg: e[1]
									}))
								}
							}
						}
						return {
							...i,
							error: null
						}
					}).catch(e => (p.c.captureMessage(e), m.a))
				}, s)
			}
		},
		"./src/lib/makeCommentPermalink/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/config.ts"),
				r = i("./src/lib/redditId/index.ts");
			t.a = (e, t, i) => `${n.a.redditUrl}/r/${e}/comments/${Object(r.c)(t)}/comment/${i?Object(r.c)(i):void 0}/`
		},
		"./src/lib/makeCommentsPageKey/index.ts": function(e, t, i) {
			"use strict";
			t.a = (e, t, i = {}) => {
				let n = `commentsPage--[post:'${e}']`;
				return t && (n += `--[rootComment:'${t}']`), i && (i.sort && i.hasSortParam && (n += `--[sort:'${i.sort}']`), i.context && (n += `--[context:${i.context}]`), i.depth && (n += `--[depth:${i.depth}]`)), n
			}
		},
		"./src/lib/makeDraftKey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/reddit/models/PostDraft/index.ts");

			function r(e, t) {
				return `${n.c[e]}_${t}`
			}
		},
		"./src/lib/makeGqlRequest/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return f
			}));
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n),
				s = i("./src/lib/apiErrorHelpers.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/constants/headers.ts"),
				a = i("./src/lib/env/index.ts"),
				l = i("./src/lib/logs/errors.ts"),
				u = i("./src/lib/makeRequest/index.ts"),
				c = i("./src/reddit/constants/headers.ts"),
				_ = i("./src/reddit/singleton/tracing/index.ts");
			const m = ({
					apiUrl: e,
					onBeforeRequest: t,
					onResponse: i,
					statsAppName: n,
					headers: r
				}) => ({
					apiUrl: e,
					onBeforeRequest: t,
					onResponse: i,
					statsAppName: n,
					headers: r()
				}),
				p = (e, t) => {
					const i = {
							...t,
							headers: {
								...t.headers || {},
								...e.headers
							}
						},
						n = Object(a.b)() ? [c.a] : [c.a, d.c];
					i.headers = r()(i.headers, n);
					const s = _.b.getTracingHeaders();
					return i.headers = {
						...i.headers,
						...s
					}, i
				},
				h = (e, t, i) => {
					const {
						errors: n
					} = i.body;
					n && n.length && Object(l.sendErrorToServer)({
						context: e,
						endpoint: t.endpoint,
						error: n.map(e => e.message).join("\n"),
						type: o.t.GQL
					})
				};

			function f(e, t, i) {
				const n = i && i.traceRequestName ? i.traceRequestName : "gql_api_call",
					r = {};
				return "id" in t && (r[_.a.OperationId] = t.id), _.b.recordRpcSpanAsync(n, async () => {
					const n = m(e),
						r = {
							...i ? {
								...i
							} : {},
							data: t,
							method: o.jb.POST,
							endpoint: n.apiUrl,
							type: "json"
						},
						d = p(n, r);
					return n.onBeforeRequest(d), Object(u.b)(d).then(e => (n.onResponse(e, {
						allowSetEmptyLoid: t.allowSetEmptyLoid
					}), !e.ok && (Object(s.b)(n, r, e), e.status >= 400) ? {
						...e,
						error: {
							type: Object(s.c)(e.status)
						}
					} : e.body.errors ? (h(n, {
						...r,
						operation: t.id || t.query
					}, e), {
						...e,
						ok: !1,
						error: {
							type: o.I.BAD_REQUEST,
							fields: e.body.errors.map(e => ({
								msg: e.message || ""
							}))
						}
					}) : (e.ok && e.body, {
						...e,
						error: null
					})))
				}, r)
			}
		},
		"./src/lib/makeListingKey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			}));
			var n = i("./src/lib/isAdHocMultireddit/index.ts"),
				r = i("./src/lib/isFakeSubreddit/index.ts");
			const s = e => e.includes("--[sort:");
			t.a = (e, t, i = {}) => {
				let s = e || "";
				return Object(r.a)(s) && Object(n.a)(s) && (s = s.split("+").sort().join("+")), i.languageCode && (i.countryCode ? s += `--[cc:'${i.languageCode}-${i.countryCode}']` : s += `--[cc:'${i.languageCode}']`), t && (s += `--[sort:'${t}']`), i.after && (s += `--[after:'${i.after}']`), i.before && (s += `--[before:'${i.before}']`), i.category && (s += `--[category:'${i.category}']`), i.categoryId && (s += `--[category:'${i.categoryId}']`), i.t && (s += `--[t:'${i.t}']`), i.geo_filter && (s += `--[geo_filter:'${i.geo_filter}']`), i.isOtherDiscussions && (s += "--[onOtherDiscussions]"), i.subredditName && (s += `--[subredditName:'${i.subredditName}']`), i.topicSlug && (s += `--[topic:'${i.topicSlug}']`), s.toLowerCase()
			}
		},
		"./src/lib/makePostCreationPageKey/index.ts": function(e, t, i) {
			"use strict";

			function n(e) {
				let t = "PostCreationPage";
				return e.subredditName && (t += `--[subreddit:${e.subredditName}]`), e.profileName && (t += `--[profile:${e.profileName}]`), e.collectionId && (t += `--[collection:${e.collectionId}]`), t
			}
			i.d(t, "a", (function() {
				return n
			}))
		},
		"./src/lib/makeProductOfferKey/index.ts": function(e, t, i) {
			"use strict";

			function n(e, t) {
				return t ? `${t}_${e}` : e
			}
			i.d(t, "a", (function() {
				return n
			}))
		},
		"./src/lib/makeRequest/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "b", (function() {
				return m
			}));
			var n = i("./node_modules/lodash/get.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/isNil.js"),
				o = i.n(s),
				d = i("./node_modules/superagent/lib/client.js"),
				a = i.n(d),
				l = i("./src/lib/constants/index.ts");
			i("./src/lib/logs/console.ts");

			function u(e) {
				return e.ok
			}
			a.a.parse["application/xml"] = e => e;
			const c = {
					error: null,
					ok: !1,
					status: -1,
					body: {},
					headers: {},
					details: ""
				},
				_ = (e, t) => {
					switch (e) {
						case l.jb.PUT:
							return a.a.put(t);
						case l.jb.POST:
							return a.a.post(t);
						case l.jb.DELETE:
							return a.a.delete(t);
						case l.jb.PATCH:
							return a.a.patch(t);
						case l.jb.GET:
							return a.a.get(t);
						default:
							return a.a[e](t)
					}
				};

			function m({
				data: e,
				endpoint: t,
				headers: i,
				method: n,
				redirects: s,
				withCredentials: d,
				query: u,
				type: m = "form",
				setup: p,
				sync: h = !1,
				timeoutMs: f
			}) {
				return new Promise(b => {
					let g = _(n, t);
					if ("number" == typeof f && g.timeout(f), d && g.withCredentials(), m && (g = g.type(m)), null !== m && g.type(m), n === l.jb.GET ? e && (g = g.query(e)) : (u && (g = g.query(u)), e && (g = g.send(e))), i && g.set(i), o()(s) || g.redirects(s), p && (g = p(g)), h) {
						const {
							_end: e
						} = g;
						g._end = () => {
							const t = a.a.getXHR;
							a.a.getXHR = () => {
								const e = t();
								a.a.getXHR = t;
								const {
									open: i
								} = e;
								return e.open = (...t) => (t.length >= 3 && (t[2] = !1), i.apply(e, Array.from(t))), e
							}, e.call(g)
						}
					}
					g.end((e, t) => {
						if (e) b({
							...c,
							body: r()(e, "response.body", {}),
							error: e,
							status: e.status,
							headers: r()(e, "response.headers", {})
						});
						else {
							const e = t.body && t.body.json && t.body.json.data ? t.body.json.data.details : "";
							b({
								...c,
								body: t.body,
								ok: !0,
								status: t.status,
								headers: t.header,
								details: e
							})
						}
					})
				})
			}
		},
		"./src/lib/makeSearchKey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "c", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n, r = i("./src/lib/constants/index.ts"),
				s = i("./src/reddit/constants/parameters.ts");
			! function(e) {
				e.Trending = "trending", e.PromotedTrend = "promoted_trend", e.Recent = "recent", e.TrendingApproval = "trending_approval_tool"
			}(n || (n = {}));
			const o = e => {
					return d(e).join(",")
				},
				d = (e, t = r.mc) => {
					let i;
					const n = e => t.has(e);
					return "string" == typeof e ? i = decodeURIComponent(e).split(",").filter(n).sort() : Array.isArray(e) && (i = e.filter(n).sort()), i && 0 !== i.length && !i.includes(r.bc.Posts) || (i = [r.bc.Posts, r.bc.Subreddits, r.bc.Users]), i
				},
				a = new Set(["f", "n", "0"]),
				l = (e = "") => {
					const t = e.toLowerCase();
					return !(0 === t.length || "off" === t || a.has(t[0]))
				},
				u = e => e ? "1" : "",
				c = (e, t = r.mc) => {
					const i = e.sort && Object(r.tc)(e.sort) ? e.sort : void 0,
						n = e.t && r.nc.has(e.t) ? e.t : r.Rb,
						o = d(e.type, t),
						a = {
							ad: e.ad,
							q: e.q,
							sort: i,
							t: n,
							type: o
						};
					return void 0 !== e.include_over_18 && (a.include_over_18 = u(l(e.include_over_18))), void 0 !== e.restrict_sr && (a.restrict_sr = u(l(e.restrict_sr))), void 0 !== e.sr_nsfw && (a.sr_nsfw = u(l(e.sr_nsfw))), e.is_multi && (a.is_multi = u(l(e.is_multi))), e.category && (a.category = e.category), e[s.c] && (a.category_name = e.category_name), e[s.y] && (a.source = e.source), a
				},
				_ = (e, t) => {
					const i = e.f;
					if (i) return {
						[s.q]: i,
						[s.t]: "1",
						[s.j]: t ? "1" : "",
						sort: r.Yb.New,
						type: r.bc.Posts
					}
				},
				m = (e, t) => {
					const i = _(e, t);
					return i && c(i)
				};
			t.b = (e, t, i = {}) => {
				let n = e || "!";
				return t && (n = `${n}--[user:${t}]`), void 0 !== i.include_over_18 && (n = `${n}--[include_over_18:${i.include_over_18}]`), i.q && (n = `${n}--[q:${i.q}]`), i.restrict_sr && (n = `${n}--[restrict_sr:${i.restrict_sr}]`), i.sort && (n = `${n}--[sort:${i.sort}]`), i.t && (n = `${n}--[t:${i.t}]`), i.category && (n = `${n}--[c:${i.category}]`), i.type && (n = `${n}--[type:${o(i.type)}]`), n.toLowerCase()
			}
		},
		"./src/lib/mapToObject/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");

			function n(e) {
				const t = {};
				for (const i of e.keys()) "string" == typeof i && (t[i] = e.get(i));
				return t
			}
		},
		"./src/lib/matchRoute/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			}));
			var n = i("./node_modules/history/esm/history.js"),
				r = i("./node_modules/lodash/fromPairs.js"),
				s = i.n(r),
				o = i("./node_modules/react-router/esm/react-router.js"),
				d = i("./src/lib/extractQueryParams/index.ts");

			function a(e, t, i) {
				const r = Object(n.g)(e);
				for (const n of t) {
					const t = Object(o.h)(r.pathname, n);
					if (t) {
						if (i && n.routePredicate && !n.routePredicate(i)) continue;
						const r = s()([...Object(d.a)(e)]);
						return {
							match: {
								...t,
								queryParams: r
							},
							route: n
						}
					}
				}
			}
		},
		"./src/lib/notifications/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "j", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "o", (function() {
				return d
			})), i.d(t, "k", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "n", (function() {
				return c
			})), i.d(t, "m", (function() {
				return _
			})), i.d(t, "l", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "f", (function() {
				return b
			})), i.d(t, "g", (function() {
				return g
			})), i.d(t, "i", (function() {
				return w
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeActionCreator/index.ts");
			const s = "NOTIFICATIONS__SHOW_NOTIFICATION_PROMPT",
				o = "NOTIFICATIONS__HIDE_NOTIFICATION_PROMPT",
				d = Object(r.a)(s),
				a = Object(r.a)(o),
				l = "NOTIFICATIONS__PERMISSION_GRANTED",
				u = "NOTIFICATIONS__PERMISSION_DENIED",
				c = Object(r.a)("NOTIFICATIONS__PERMISSION_PENDING"),
				_ = Object(r.a)(l),
				m = Object(r.a)(u);
			var p, h;
			! function(e) {
				e[e.NotificationsSupported = 0] = "NotificationsSupported", e[e.BrowserUnsupported = 1] = "BrowserUnsupported", e[e.LocalStorageUnavailable = 2] = "LocalStorageUnavailable", e[e.NotAllRequiredAPIsSupported = 3] = "NotAllRequiredAPIsSupported"
			}(p || (p = {})),
			function(e) {
				e.Granted = "granted", e.Denied = "denied", e.Closed = "closed", e.Default = "default", e.Unsupported = "unsupported"
			}(h || (h = {}));
			const f = "push-token-last-refresh-ms",
				b = "notification-permission-request-closed",
				g = "1",
				w = 4 * n.Q
		},
		"./src/lib/notifications/featureFlags.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			}));
			var n = i("./src/lib/getParsedUserAgent/index.ts"),
				r = i("./src/lib/localStorageAvailable/index.ts"),
				s = i("./src/lib/notifications/constants.ts");
			const o = () => {
					const e = navigator.userAgent,
						t = (e => {
							const t = Object(n.a)(e),
								i = null == t ? void 0 : t.browser.version;
							if (i) try {
								return parseInt(i.split(/[^\d]/)[0])
							} catch (r) {
								return
							}
						})(e);
					return !!t && (!!Object(n.c)(e) && (!!(Object(n.b)(e) && t >= 50) || (!!(Object(n.d)(e) && t > 52) || !!(Object(n.f)(e) && t >= 27))))
				},
				d = () => o() ? Object(r.a)() ? window.Notification && window.ServiceWorker && window.PushManager && window.navigator.serviceWorker ? s.c.NotificationsSupported : s.c.NotAllRequiredAPIsSupported : s.c.LocalStorageUnavailable : s.c.BrowserUnsupported
		},
		"./src/lib/objectSelector/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./node_modules/lodash/isEqual.js"),
				r = i.n(n);

			function s(e) {
				let t = null;
				return (i, n) => {
					const s = e(i, n);
					return r()(s, t) ? t : (t = s, s)
				}
			}
			const o = e => {
				const t = s(e);
				return e => t(e, null)
			}
		},
		"./src/lib/omitHeaders/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n);
			t.a = (e, t) => ({
				...e,
				headers: r()(e.headers, t)
			})
		},
		"./src/lib/opener/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return n
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			}));
			const n = {
					SELF: "_self",
					BLANK: "_blank",
					PARENT: "_parent",
					TOP: "_top"
				},
				r = "noopener",
				s = "nofollow",
				o = `${r} ${"noreferrer"}`,
				d = `${r} ${s} ${"ugc"}`,
				a = `${r} ${s} ${"sponsored"}`;
			t.e = (e, t = n.SELF, i) => {
				if (t === n.BLANK) {
					const n = window.open("", t, i);
					null != n ? (n.opener = null, n.location.href = e) : window.location.href = e
				} else window.location.href = e
			}
		},
		"./src/lib/pageTitle/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			})), i.d(t, "j", (function() {
				return _
			})), i.d(t, "h", (function() {
				return m
			})), i.d(t, "k", (function() {
				return p
			})), i.d(t, "l", (function() {
				return h
			})), i.d(t, "m", (function() {
				return f
			})), i.d(t, "n", (function() {
				return b
			})), i.d(t, "o", (function() {
				return g
			})), i.d(t, "p", (function() {
				return w
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js");
			const r = () => n.fbt._("Reddit Avatar Builder - Create Your Custom Avatar", null, {
					hk: "oFQWN"
				}),
				s = () => n.fbt._("Reddit Coins - Award and Recognize Community Contributions", null, {
					hk: "4efF8g"
				}),
				o = (e, t) => n.fbt._("{postTitle}: {subreddit}", [n.fbt._param("postTitle", e), n.fbt._param("subreddit", t)], {
					hk: "2IfXU7"
				}),
				d = () => n.fbt._("Community Points - Own a Piece of Your Community", null, {
					hk: "4gmhhh"
				}),
				a = () => n.fbt._("Reddit - Dive into anything", null, {
					hk: "3basF2"
				}),
				l = () => n.fbt._("Moderation Queue", null, {
					hk: "48r06Q"
				}),
				u = () => n.fbt._("Notifications", null, {
					hk: "OUIeh"
				}),
				c = () => n.fbt._("Predictions - Become the World's Greatest Predictor", null, {
					hk: "43GFss"
				}),
				_ = () => n.fbt._("Reddit Premium - Enjoy Exclusive Features and VIP Status", null, {
					hk: "4eqnyx"
				}),
				m = () => n.fbt._("Powerups - Reddit Community Subscriptions that Unlock Perks", null, {
					hk: "2zIDhQ"
				}),
				p = () => n.fbt._("Reddit Live", null, {
					hk: "3xjxUD"
				}),
				h = () => n.fbt._("Reddit Settings", null, {
					hk: "4f8xQM"
				}),
				f = e => n.fbt._("Submit to {subreddit}", [n.fbt._param("subreddit", e)], {
					hk: "1sykEm"
				}),
				b = () => n.fbt._("Today’s Top Communities", null, {
					hk: "2dcUEX"
				}),
				g = () => n.fbt._("Reddit Talk - Live Audio Conversations in Your Favorite Communities", null, {
					hk: "4C3LAO"
				}),
				w = () => n.fbt._("Reddit Recap", null, {
					hk: "P9uPS"
				})
		},
		"./src/lib/performance.js": function(e, t, i) {
			"use strict";
			(function(e) {
				const i = e.performance || e.webkitPerformance || e.msPerformance || e.mozPerformance;
				t.a = i
			}).call(this, i("./node_modules/webpack/buildin/global.js"))
		},
		"./src/lib/performanceTimings/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return d
			})), i.d(t, "e", (function() {
				return u
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "h", (function() {
				return b
			})), i.d(t, "i", (function() {
				return g
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/constants/index.ts"),
				r = (i("./src/telemetry/index.ts"), i("./src/telemetry/helpers/sendTiming.ts")),
				s = i("./src/lib/performance.js");
			const o = "object" == typeof s.a && !!s.a.mark && !!s.a.measure && !!s.a.getEntriesByType;
			var d, a;
			! function(e) {
				e.ResponseStart = "responseStart", e.FetchStart = "fetchStart", e.HeadTagStart = "head_tag_start", e.AppHTMLStart = "app_html_start", e.AdsDotJSFetchStart = "ads_dot_js_fetch_start", e.ReduxJSONStart = "redux_json_start", e.JSDepsFetchStart = "js_deps_fetch_start", e.EntryPointStart = "entry_point_start", e.InitClientStart = "init_client_start", e.CreateRouteCompsStart = "create_route_components_start", e.ReactHydrateStart = "react_hydrate_start", e.ReactHydrateEnd = "react_hydrate_end", e.InitClientEnd = "init_client_end", e.FirstPostTitleImageLoaded = "first_post_title_image_loaded", e.FirstCommentLoaded = "first_comment_loaded"
			}(d || (d = {})),
			function(e) {
				e.TimeToFirstByte = "Time_To_First_Byte", e.HeadTagParse = "Head_Tag_Parse", e.AppHTMLParse = "App_HTML_Parse", e.AdsDotJSFetchParse = "Ads_Dot_JS_Fetch_Parse", e.ReduxBootstrapJSONParse = "Redux_Bootstrap_JSON_Parse", e.JSDepsFetchToEntryPoint = "JS_Fetch_To_Entry_Point", e.EntryPointToInitClient = "Entry_To_Init_Client", e.InitClientPreamble = "Initailize_Client_Preamble", e.CreateRouteComponents = "Creat_Route_Components", e.ReactHydrate = "React_Hydrate", e.InitClientPostamble = "Initailize_Client_Postamble", e.NavigationToFirstPostTitleVisible = "NavigationStart_To_FirstPostTitleVisible", e.NavigationToFirstCommentVisible = "NavigationStart_To_FirstCommentVisible", e.NavigationToInitClientFinished = "NavigationStart_To_InitClientFinished"
			}(a || (a = {}));
			const l = Object.keys(a).reduce((e, t) => (e[a[t]] = !0, e), {}),
				u = e => {
					o && s.a.mark(e)
				},
				c = [{
					name: a.TimeToFirstByte,
					start: d.FetchStart,
					end: d.ResponseStart
				}, {
					name: a.HeadTagParse,
					start: d.HeadTagStart,
					end: d.AppHTMLStart
				}, {
					name: a.AppHTMLParse,
					start: d.AppHTMLStart,
					end: d.AdsDotJSFetchStart
				}, {
					name: a.AdsDotJSFetchParse,
					start: d.AdsDotJSFetchStart,
					end: d.ReduxJSONStart
				}, {
					name: a.ReduxBootstrapJSONParse,
					start: d.ReduxJSONStart,
					end: d.JSDepsFetchStart
				}, {
					name: a.JSDepsFetchToEntryPoint,
					start: d.JSDepsFetchStart,
					end: d.EntryPointStart
				}, {
					name: a.EntryPointToInitClient,
					start: d.EntryPointStart,
					end: d.InitClientStart
				}, {
					name: a.InitClientPreamble,
					start: d.InitClientStart,
					end: d.CreateRouteCompsStart
				}, {
					name: a.CreateRouteComponents,
					start: d.CreateRouteCompsStart,
					end: d.ReactHydrateStart
				}, {
					name: a.ReactHydrate,
					start: d.ReactHydrateStart,
					end: d.ReactHydrateEnd
				}, {
					name: a.InitClientPostamble,
					start: d.ReactHydrateEnd,
					end: d.InitClientEnd
				}, {
					name: a.NavigationToFirstPostTitleVisible,
					start: d.FetchStart,
					end: d.FirstPostTitleImageLoaded
				}, {
					name: a.NavigationToInitClientFinished,
					start: d.FetchStart,
					end: d.InitClientEnd
				}, {
					name: a.NavigationToFirstCommentVisible,
					start: d.FetchStart,
					end: d.FirstCommentLoaded
				}],
				_ = e => {
					if (!o) return null;
					c.forEach(e => (e => {
						if (o) try {
							const {
								name: t,
								start: i,
								end: n
							} = e;
							s.a.measure(t, i, n)
						} catch (t) {
							0
						}
					})(e));
					const t = s.a.getEntriesByType("measure").filter(e => !!l[e.name]).reduce((e, t) => {
						const {
							name: i,
							duration: n
						} = t;
						return e[i] = Math.floor(n), e
					}, {});
					return "number" == typeof e && (t.serverDocumentLength = e), Object.keys(t).length ? t : null
				},
				m = (e, t, i = !0) => {
					t && Object(r.a)(n.n.Redesign, {
						meta: e,
						data: t,
						type: "perf"
					}, i)
				};
			var p, h;

			function f(e, t, i) {
				const o = function() {
					if (!s.a || !s.a.timing) return null;
					const e = s.a.timing,
						t = {
							timeToFirstByte: e.responseStart - e.requestStart,
							timeToInteractive: e.domInteractive - e.requestStart
						};
					if (s.a.getEntriesByType) {
						const e = s.a.getEntriesByType("paint");
						if (e.length) {
							const i = e.find(e => "first-contentful-paint" === e.name);
							i && (t.timeToFirstContentfulPaint = i.startTime)
						}
					}
					return t
				}();
				if (!o) return;
				const d = {
					name: e,
					isLoggedIn: t,
					statsdPathsForExperiments: i
				};
				Object(r.a)(n.n.Redesign, {
					data: o,
					meta: d,
					type: "perf"
				})
			}

			function b({
				name: e,
				isLoggedIn: t,
				metrics: i,
				statsdPathsForExperiments: n
			}) {
				0
			}
			async function g(e, t) {
					return e()
				}! function(e) {
					e.CommentsPage = "comments-page", e.FrontPage = "frontpage", e.Subreddit = "subreddit"
				}(p || (p = {})),
				function(e) {
					e.apiTiming = "apiTiming", e.gqlFetchTiming = "gqlFetchTiming", e.gqlNormalizationTiming = "gqlNormalizationTiming", e.gqlExperimentFetch = "gqlExperimentFetchTiming", e.serverSideRender = "serverSideRender", e.setupTiming = "setupTiming"
				}(h || (h = {}))
		},
		"./src/lib/permalinkToOverlayLocation/index.ts": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/history/esm/history.js"),
				r = i("./src/lib/LRUCache/index.ts"),
				s = i("./src/reddit/constants/history.ts"),
				o = i("./src/reddit/helpers/path/index.ts");
			const d = new r.a(250);
			t.a = (e, t, i) => {
				let r, a = "";
				if (i && "object" == typeof i)
					for (const [n, s] of Object.entries(i)) a += n + s;
				if (!(r = d.get(e + t + a))) {
					const l = Object(o.b)(e);
					(r = Object(n.c)(l)).state = {
						...r.state,
						...i,
						[s.b.IsOverlay]: !0,
						[s.b.ScrollOnLoad]: t
					}, d.set(e + t + a, r)
				}
				return r
			}
		},
		"./src/lib/permanentCookieOptions.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/constants/index.ts");
			t.a = (e = 2) => {
				const t = new Date;
				return t.setFullYear(t.getFullYear() + e), {
					...n.C,
					expires: t
				}
			}
		},
		"./src/lib/portal/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./node_modules/react/index.js"),
				r = i("./src/lib/CSSVariableProvider/index.tsx");
			class s extends n.PureComponent {
				render() {
					const {
						children: e,
						container: t
					} = this.props, i = top.document.body;
					return Object(r.d)(e, t || i)
				}
			}
		},
		"./src/lib/postParentMessage/index.ts": function(e, t, i) {
			"use strict";
			t.a = ({
				type: e,
				data: t = {}
			}, i, n = "*", r = window.parent) => {
				if (r !== window) {
					const s = {
						type: i ? `${e}.${i}` : e,
						data: t
					};
					r.postMessage(JSON.stringify(s), n)
				}
			}
		},
		"./src/lib/prettyPrintNumber/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return c
			}));
			const n = e => {
					const t = e.split(".");
					return [t[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",")].concat(t.slice(1)).join(".")
				},
				r = 1e3,
				s = 100 * r,
				o = 10 * s,
				d = 100 * o,
				a = 10 * d,
				l = 100 * a,
				u = 51;

			function c(e, t) {
				return (null == t ? void 0 : t.displayFull) ? n(e.toString()) : e >= l - u ? `${Math.floor(e/a)}b` : e >= a - u && e < l - u ? `${(e/a).toFixed(1)}b` : e >= d - u && e < a - u ? `${Math.floor(e/o)}m` : e >= o - u && e < d - u ? `${(e/o).toFixed(1)}m` : e >= s - u && e < o - u ? `${Math.floor(e/r)}k` : e >= r && e < s - u ? (null == t ? void 0 : t.roundDown) ? `${_(e,r)}k` : `${(e/r).toFixed(1)}k` : String(e)
			}
			const _ = (e, t, i = 1) => {
				const n = Math.pow(10, i);
				return (Math.floor(e / (t / n)) / n).toFixed(i)
			}
		},
		"./src/lib/redditId/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			const n = /(?:t(\d+)_)?([a-z0-9]+)/;

			function r(e) {
				return parseInt(s(e), 36)
			}

			function s(e) {
				const t = n.exec(e);
				return t ? t[2] : ""
			}

			function o(e, t) {
				return "number" == typeof e ? `${t}_${e.toString(36)}` : `${t}_${s(e)}`
			}
		},
		"./src/lib/reducers/addAuthentication/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/actions/session.ts");
			t.a = (e, t) => (i = t, r) => {
				switch (r.type) {
					case n.c:
					case n.d:
						return t;
					default:
						return e(i, r)
				}
			}
		},
		"./src/lib/safeGet/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = (e, t) => {
				if (Object.prototype.hasOwnProperty.call(e, t)) return e[t]
			}
		},
		"./src/lib/safeJSONParse/index.ts": function(e, t, i) {
			"use strict";

			function n(e) {
				try {
					return JSON.parse(e)
				} catch (t) {}
			}
			i.d(t, "a", (function() {
				return n
			}))
		},
		"./src/lib/sample/index.ts": function(e, t, i) {
			"use strict";

			function n(e) {
				return !(e <= 0) && (e >= 100 || 100 * Math.random() <= e)
			}
			i.d(t, "a", (function() {
				return n
			}))
		},
		"./src/lib/scheduler/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			}));
			var n = i("./node_modules/request-idle-callback/index.js");
			class r {
				constructor({
					cb: e,
					args: t
				}) {
					this.cb = e, this.args = t, this.next = null
				}
				execute() {
					this.cb.apply(null, this.args)
				}
			}

			function s() {
				let e = null,
					t = null,
					i = null;
				const r = () => {
						null === i && (i = Object(n.requestIdleCallback)(s))
					},
					s = t => {
						let n = 0;
						for (;
							(t.timeRemaining() > n || t.didTimeout) && null !== e;) {
							const i = t.timeRemaining();
							e.execute(), e = e.next, n = i - t.timeRemaining()
						}
						i = null, null !== e && r()
					};
				return {
					enqueue(i) {
						null === e ? (e = i, t = i) : (null !== t && (t.next = i), t = i), r()
					},
					clear() {
						Object(n.cancelIdleCallback)(i), i = null, e = null
					},
					flush() {
						for (null !== i && (Object(n.cancelIdleCallback)(i), i = null); null !== e;) e.execute(), e = e.next
					}
				}
			}
		},
		"./src/lib/search/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./node_modules/decode-uri-component/index.js"),
				r = i.n(n);
			const s = (e = "") => r()(e),
				o = (e = "") => encodeURIComponent(e)
		},
		"./src/lib/sentry/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "e", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "f", (function() {
				return p
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/@sentry/integrations/esm/dedupe.js"),
				r = i("./node_modules/@sentry/integrations/esm/rewriteframes.js"),
				s = i("./node_modules/@sentry/types/esm/severity.js"),
				o = i("./src/lib/sample/index.ts");
			let d;

			function a(e, t) {
				e.addEventProcessor(e => (e.settings = t, e))
			}

			function l(e) {
				return JSON.parse(JSON.stringify(e))
			}

			function u(e) {
				const {
					settings: t,
					...i
				} = e;
				return i
			}

			function c() {
				const e = /^webpack(-internal)?\:\/\/\//;
				return [new n.a, new r.a({
					iteratee: t => (t.filename && (t.filename = t.filename.replace(e, "")), t.abs_path && (t.abs_path = t.abs_path.replace(e, "")), t)
				})]
			}
			d = i("./node_modules/@sentry/browser/esm/index.js"), t.c = d;
			const _ = new Set([s.a.Warning, s.a.Log, s.a.Info, s.a.Debug, s.a.Critical]),
				m = 1;

			function p(e) {
				return function(e) {
					var t;
					const i = e.level ? e.level : s.a.Fatal;
					return !(!_.has(i) || (null === (t = e.extra) || void 0 === t ? void 0 : t.bypassSampling)) && Object(o.a)(m)
				}(e)
			}
		},
		"./src/lib/serviceWorker/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			async function n(e) {
				if ("undefined" != typeof window && "serviceWorker" in navigator) return navigator.serviceWorker.register("/sw.0176c1ed0bf25a72c0b41c1e93fd2ac2.js", e)
			}
			const r = (e, t) => {
				navigator && navigator.serviceWorker && navigator.serviceWorker.controller && navigator.serviceWorker.controller.postMessage({
					command: e,
					payload: t
				})
			}
		},
		"./src/lib/throwDevError.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => {
				0
			}
		},
		"./src/lib/timeAgo/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "b", (function() {
				return f
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/reddit/constants/intlSupport.ts");
			const o = {
					[r.kb]: r.Sb,
					[r.Q]: r.kb,
					[r.B]: r.Q,
					[r.pb]: r.B,
					[r.rc]: r.pb
				},
				d = {
					[r.Sb]: e => n.fbt._({
						"*": "{number} seconds",
						_1: "1 second"
					}, [n.fbt._plural(e, "number")], {
						hk: "1Z9CfH"
					}),
					[r.kb]: e => n.fbt._({
						"*": "{number} minutes",
						_1: "1 minute"
					}, [n.fbt._plural(e, "number")], {
						hk: "3FAWqJ"
					}),
					[r.Q]: e => n.fbt._({
						"*": "{number} hours",
						_1: "1 hour"
					}, [n.fbt._plural(e, "number")], {
						hk: "2EMZXz"
					}),
					[r.B]: e => n.fbt._({
						"*": "{number} days",
						_1: "1 day"
					}, [n.fbt._plural(e, "number")], {
						hk: "4feu1g"
					}),
					[r.pb]: e => n.fbt._({
						"*": "{number} months",
						_1: "1 month"
					}, [n.fbt._plural(e, "number")], {
						hk: "2jqQGm"
					}),
					[r.rc]: e => n.fbt._({
						"*": "{number} years",
						_1: "1 year"
					}, [n.fbt._plural(e, "number")], {
						hk: "3rMhN9"
					})
				},
				a = {
					[r.Sb]: e => n.fbt._({
						"*": "{number} seconds ago",
						_1: "1 second ago"
					}, [n.fbt._plural(e, "number")], {
						hk: "rJZ1O"
					}),
					[r.kb]: e => n.fbt._({
						"*": "{number} minutes ago",
						_1: "1 minute ago"
					}, [n.fbt._plural(e, "number")], {
						hk: "4yGI4N"
					}),
					[r.Q]: e => n.fbt._({
						"*": "{number} hours ago",
						_1: "1 hour ago"
					}, [n.fbt._plural(e, "number")], {
						hk: "1Fr9Xx"
					}),
					[r.B]: e => n.fbt._({
						"*": "{number} days ago",
						_1: "1 day ago"
					}, [n.fbt._plural(e, "number")], {
						hk: "4lK3UT"
					}),
					[r.pb]: e => n.fbt._({
						"*": "{number} months ago",
						_1: "1 month ago"
					}, [n.fbt._plural(e, "number")], {
						hk: "32PB2y"
					}),
					[r.rc]: e => n.fbt._({
						"*": "{number} years ago",
						_1: "1 year ago"
					}, [n.fbt._plural(e, "number")], {
						hk: "S0Gnf"
					})
				},
				l = {
					[r.Sb]: e => n.fbt._("{amount}s", [n.fbt._param("amount", String(e))], {
						hk: "1wpxaX"
					}),
					[r.kb]: e => n.fbt._("{amount}m", [n.fbt._param("amount", String(e))], {
						hk: "3XgTJP"
					}),
					[r.Q]: e => n.fbt._("{amount}h", [n.fbt._param("amount", String(e))], {
						hk: "2e5Zug"
					}),
					[r.B]: e => n.fbt._("{amount}d", [n.fbt._param("amount", String(e))], {
						hk: "1M1jhY"
					}),
					[r.pb]: e => n.fbt._("{amount}m", [n.fbt._param("amount", String(e))], {
						hk: "3cNGfu"
					}),
					[r.rc]: e => n.fbt._("{amount}y", [n.fbt._param("amount", String(e))], {
						hk: "8gNOa"
					})
				},
				u = {
					[r.Sb]: e => n.fbt._("{amount}s ago", [n.fbt._param("amount", String(e))], {
						hk: "g6jbi"
					}),
					[r.kb]: e => n.fbt._("{amount}m ago", [n.fbt._param("amount", String(e))], {
						hk: "3fMUq7"
					}),
					[r.Q]: e => n.fbt._("{amount}h ago", [n.fbt._param("amount", String(e))], {
						hk: "1HZHiX"
					}),
					[r.B]: e => n.fbt._("{amount}d ago", [n.fbt._param("amount", String(e))], {
						hk: "3WIJYN"
					}),
					[r.pb]: e => n.fbt._("{amount}m ago", [n.fbt._param("amount", String(e))], {
						hk: "7g1Ut"
					}),
					[r.rc]: e => n.fbt._("{amount}y ago", [n.fbt._param("amount", String(e))], {
						hk: "4piT6o"
					})
				},
				c = {
					[r.Sb]: e => n.fbt._("{amount}s left", [n.fbt._param("amount", String(e))], {
						hk: "1ZSXLq"
					}),
					[r.kb]: e => n.fbt._("{amount}m left", [n.fbt._param("amount", String(e))], {
						hk: "1Oe8PO"
					}),
					[r.Q]: e => n.fbt._("{amount}h left", [n.fbt._param("amount", String(e))], {
						hk: "1z3Oub"
					}),
					[r.B]: e => n.fbt._("{amount}d left", [n.fbt._param("amount", String(e))], {
						hk: "3d5R8E"
					})
				};

			function _(e, t = {}) {
				return !e || isNaN(e) ? "" : s.b && Object(s.c)() && Object(s.d)(t.locale) ? function(e, {
					shortenedUnit: t,
					noPostfix: i,
					locale: s = r.D
				} = {}) {
					const o = Date.now(),
						d = e * r.Sb - o,
						a = Math.abs(d);
					if (Math.abs(d) < r.kb) return n.fbt._("just now", null, {
						hk: "WMsPx"
					}).toString();
					let l, u;
					const c = t ? i ? "narrow" : "short" : "long";
					if (Math.round(a / r.kb) < 60 ? (u = d / r.kb, l = "minute") : Math.round(a / r.Q) < 24 ? (u = d / r.Q, l = "hour") : Math.round(a / r.B) < 29 ? (u = d / r.B, l = "day") : Math.round(a / r.pb) < 12 ? (u = d / r.pb, l = "month") : (u = d / r.rc, l = "year"), u = Math.round(u), i) {
						return new Intl.NumberFormat(s, {
							style: "unit",
							unit: l,
							unitDisplay: c
						}).format(Math.abs(u))
					}
					return new Intl.RelativeTimeFormat(s, {
						localeMatcher: "best fit",
						numeric: "always",
						style: c
					}).format(u, l)
				}(e, t) : function(e, t = {}) {
					const i = Date.now(),
						s = Math.abs(i - 1e3 * e);
					if (s < r.kb) return n.fbt._("just now", null, {
						hk: "WMsPx"
					}).toString();
					let c = a;
					t.noPostfix && t.shortenedUnit ? c = l : t.noPostfix ? c = d : t.shortenedUnit && (c = u);
					for (const n of [r.Q, r.B, r.pb, r.rc])
						if (s < n) {
							const e = Math.floor(s / o[n]);
							return (0, c[o[n]])(e).toString()
						} const _ = Math.floor(s / r.rc);
					return c[r.rc](_).toString()
				}(e, t)
			}

			function m(e) {
				const t = Date.now(),
					i = "number" == typeof e ? e : new Date(e).valueOf();
				return Math.trunc(Math.abs(t - i) / r.Q)
			}

			function p(e) {
				const t = Date.now(),
					i = "number" == typeof e ? e : new Date(e).valueOf(),
					n = Math.abs(t - 1e3 * i);
				return Math.floor(n / r.B)
			}

			function h(e, t) {
				const i = Date.now(),
					s = Math.abs(i - 1e3 * e),
					d = new Date(1e3 * e),
					a = new Date(i);
				if (s < r.kb) return n.fbt._("now", null, {
					hk: "1hZvPT"
				}).toString();
				if (s < r.qc)
					for (const n of [r.Q, r.B, r.pb])
						if (s < n) {
							const e = Math.floor(s / o[n]);
							return (t ? l : u)[o[n]](e).toString()
						} return d.getFullYear() !== a.getFullYear() ? d.toLocaleDateString() : new Intl.DateTimeFormat("default", {
					month: "short",
					day: "numeric"
				}).format(d)
			}

			function f(e) {
				const t = Date.now(),
					i = Math.abs(1e3 * e - t),
					s = new Date(1e3 * e),
					d = new Date(t);
				if (i < r.pb)
					for (const n of [r.Q, r.B, r.pb])
						if (i < n) {
							const e = Math.floor(i / o[n]);
							return c[o[n]](e).toString()
						} if (s.getFullYear() !== d.getFullYear()) {
					const e = s.toLocaleDateString();
					return n.fbt._("Expires {Expiration date}", [n.fbt._param("Expiration date", e)], {
						hk: "4nE1rV"
					}).toString()
				}
				return new Intl.DateTimeFormat("default", {
					month: "short",
					day: "numeric"
				}).format(s)
			}
		},
		"./src/lib/timezone/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/models/PostCreationForm/index.ts");
			const s = "America/Los_Angeles",
				o = () => {
					let e;
					try {
						e = Intl.DateTimeFormat().resolvedOptions().timeZone
					} catch (t) {}
					return "Asia/Calcutta" === e && (e = "Asia/Kolkata"), e || void 0
				},
				d = e => {
					const t = Math.abs(e),
						i = t % 60;
					return `${e>0?"-":"+"}${("0"+Math.floor(t/60)).slice(-2)}:${("0"+i).slice(-2)}`
				},
				a = (e, t) => {
					const i = t || Date.now(),
						r = {
							year: "numeric",
							month: "numeric",
							day: "numeric",
							hour: "numeric",
							minute: "numeric",
							second: "numeric",
							timeZoneName: "short",
							hour12: !1,
							timeZone: e
						};
					let s = "";
					try {
						s = new Intl.DateTimeFormat("en-US", r).format(new Date(i))
					} catch (b) {
						return
					}
					const [o, d, a] = s.replace(", ", " ").split(" "), [l, u, c] = o.trim().split("/").map(Number), [_, m, p] = d.trim().split(":").map(Number), h = Date.UTC(c, l - 1, u, _, m, p), f = new Date(i).setMilliseconds(0) - h;
					return {
						abbreviation: a,
						offset: Math.round(f / n.kb)
					}
				},
				l = e => {
					const t = e.slice(0, 19),
						[i, n] = t.split("T"),
						[r, s, o] = i.split("-").map(Number),
						[d, a, l = 0] = n.split(":").map(Number);
					return new Date(r, s - 1, o, d, a, l)
				},
				u = e => {
					const t = new Date(e);
					return t.setMinutes(t.getMinutes() - t.getTimezoneOffset()), t.toISOString().slice(0, 16)
				},
				c = e => {
					if (e && e.eventInfo) {
						const {
							eventStart: t,
							eventEnd: i
						} = e.eventInfo;
						return {
							startDate: u(new Date(t * n.Sb)),
							endDate: u(new Date(i * n.Sb)),
							submitTime: r.j.Now,
							timezoneName: o() || s
						}
					}
				}
		},
		"./src/lib/uploadToS3/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/loadWithRetries/index.ts"),
				s = i("./src/lib/makeRequest/index.ts");
			const o = (e, t) => {
				const i = new FormData;
				return t.fields.forEach(e => {
					e.value && i.append(e.name, e.value)
				}), i.append("file", e), i
			};
			t.a = async (e, t, d) => {
				const a = (() => Object(r.a)(() => i.e("vendors~xml2js").then(i.t.bind(null, "./node_modules/xml2js/lib/xml2js.js", 7))).then(e => e.default))(),
					l = await Object(s.b)({
						data: o(e, t),
						endpoint: t.action,
						method: n.jb.POST,
						type: null,
						setup: d
					});
				if ("string" != typeof l.body) return l;
				try {
					(await a).parseString(l.body, (e, t) => {
						l.body = t
					})
				} catch (u) {
					l.body = u
				}
				return l
			}
		},
		"./src/polyfill.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/uuid/v4.js"),
				r = i.n(n);
			const s = {},
				o = 6,
				d = r()().slice(-o);
			class a {
				constructor(e) {
					const t = `$BroadcastChannel$${e=String(e)}$`;
					s[t] = s[t] || [], s[t].push(this), this.name = e, this._id = t, this._closed = !1, this._mc = new MessageChannel, this._mc.port1.start(), this._mc.port2.start(), window.addEventListener("storage", e => {
						if (e.storageArea !== window.localStorage) return;
						if (!e.key || !e.newValue) return;
						if (e.key.substring(0, t.length) !== t) return;
						if (e.key.substring(t.length, t.length + o) === d) return;
						const i = JSON.parse(e.newValue);
						this._mc.port2.postMessage(i)
					})
				}
				postMessage(e) {
					if (this._closed) {
						const e = new Error;
						throw e.name = "InvalidStateError", e
					}
					const t = JSON.stringify(e),
						i = `${this._id}${d}$${r()()}`;
					window.localStorage.setItem(i, t), setTimeout(() => {
						window.localStorage.removeItem(i)
					}, 100), s[this._id].forEach(e => {
						e !== this && e._mc.port2.postMessage(JSON.parse(t))
					})
				}
				close() {
					if (this._closed) return;
					this._closed = !0, this._mc.port1.close(), this._mc.port2.close();
					const e = s[this._id].indexOf(this);
					s[this._id].splice(e, 1)
				}
				get onmessage() {
					return this._mc.port1.onmessage
				}
				set onmessage(e) {
					this._mc.port1.onmessage = e
				}
				get onmessageerror() {
					return () => {}
				}
				set onmessageerror(e) {}
				addEventListener(e, t, i) {
					return this._mc.port1.addEventListener(e, t, i)
				}
				removeEventListener(e, t, i) {
					return this._mc.port1.removeEventListener(e, t, i)
				}
				dispatchEvent(e) {
					return this._mc.port1.dispatchEvent(e)
				}
			}
			"undefined" != typeof window && (window.BroadcastChannel = window.BroadcastChannel || a)
		},
		"./src/reddit/actions/ads/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "o", (function() {
				return r
			})), i.d(t, "p", (function() {
				return s
			})), i.d(t, "q", (function() {
				return o
			})), i.d(t, "r", (function() {
				return d
			})), i.d(t, "t", (function() {
				return a
			})), i.d(t, "u", (function() {
				return l
			})), i.d(t, "v", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "n", (function() {
				return m
			})), i.d(t, "w", (function() {
				return p
			})), i.d(t, "y", (function() {
				return h
			})), i.d(t, "x", (function() {
				return f
			})), i.d(t, "s", (function() {
				return b
			})), i.d(t, "k", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			})), i.d(t, "g", (function() {
				return v
			})), i.d(t, "f", (function() {
				return y
			})), i.d(t, "j", (function() {
				return E
			})), i.d(t, "i", (function() {
				return S
			})), i.d(t, "h", (function() {
				return T
			})), i.d(t, "l", (function() {
				return O
			})), i.d(t, "m", (function() {
				return I
			})), i.d(t, "c", (function() {
				return R
			}));
			const n = "AD_BRAND_SAFETY_STATUS_RECEIVED",
				r = "FETCH_COMMENTS_PAGE_ADS_COMPLETED",
				s = "FETCH_COMMENTS_PAGE_ADS_FAILED",
				o = "FETCH_SIDEBAR_PROMOTED_POSTS_COMPLETED",
				d = "FETCH_SIDEBAR_PROMOTED_POSTS_FAILED",
				a = "REFRESH_SIDEBAR_PROMOTED_POST_COMPLETED",
				l = "REFRESH_SIDEBAR_PROMOTED_POST_FAILED",
				u = "RESET_SIDEBAR_PROMOTED_POSTS",
				c = "AD__IMPRESSION",
				_ = "AD__CLICK",
				m = "AD__VIEWABLE_IMPRESSION",
				p = "VENDOR_FULLY_IN_VIEW",
				h = "VENDOR_FULLY_IN_VIEW_5_SECS",
				f = "VENDOR_FULLY_IN_VIEW_15_SECS",
				b = "GROUPM_VIEWABLE",
				g = "AD__VIDEO_VIEWABLE",
				w = "AD__VIDEO_FULLY_VIEWABLE",
				v = "AD__VIDEO_GROUP_M_VIEWABLE",
				y = "AD__VIDEO_FULLY_VIEWABLE_50",
				E = "AD__VIDEO_STARTED",
				S = "AD__VIDEO_PLAYED_WITH_SOUND",
				T = "AD__VIDEO_PLAYED_EXPANDED",
				O = "AD__VIDEO_WATCHED_PERCENT",
				I = "AD__VIDEO_WATCHED_SECONDS",
				R = "AD__GALLERY_ITEM_IMPRESSION"
		},
		"./src/reddit/actions/ads/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return f
			})), i.d(t, "b", (function() {
				return E
			})), i.d(t, "c", (function() {
				return S
			})), i.d(t, "a", (function() {
				return T
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/constants/posts.ts"),
				s = i("./src/config.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/makeApiRequest/index.ts");
			const a = async ({
				context: e,
				count: t,
				subreddit: i,
				forceAd: n
			}) => {
				const r = {
					count: t
				};
				return i && (r.subreddit = i), n && (r.sidebar_ad = n), Object(d.a)(e, {
					type: "json",
					endpoint: `${s.a.gatewayUrl}/desktopapi/v1/sidebar_insertion`,
					method: o.jb.POST,
					data: r
				})
			};
			var l = i("./src/reddit/helpers/adCount/index.ts"),
				u = i("./src/reddit/reducers/sidebarPromotedPosts/models/index.ts"),
				c = i("./src/reddit/selectors/brandSafety.ts"),
				_ = i("./src/reddit/selectors/platform.ts"),
				m = i("./src/reddit/selectors/posts.ts"),
				p = i("./src/reddit/actions/ads/constants.ts");
			const h = Object(n.a)(p.a),
				f = e => async (t, i) => {
					const n = i();
					Object(c.c)(n) && Object(c.d)(n) === e.isViewSafe || t(h(e))
				}, b = Object(n.a)(p.q), g = Object(n.a)(p.r), w = Object(n.a)(p.t), v = Object(n.a)(p.u), y = (Object(n.a)(p.v), Object(n.a)(p.o)), E = (Object(n.a)(p.p), e => async (t, i, {
					apiContext: n
				}) => {
					var s;
					const o = i(),
						d = Object(_.q)(o),
						c = Object(l.b)(o, e),
						p = c.length;
					if (0 === p) return;
					switch (e) {
						case u.a.COMMENTS:
						case u.a.COMMENTS_OVERLAY: {
							const e = Object(_.n)(o, {
								page: o.platform.currentPage
							});
							if (!e || e.belongsTo.type === r.a.PROFILE) return;
							break
						}
						case u.a.FRONTPAGE:
						case u.a.MULTIREDDIT:
						case u.a.SEARCH_RESULTS:
						case u.a.SUBREDDIT: {
							const e = o.listings.activeKey,
								t = Object(m.N)(o, {
									listingKey: e
								});
							if (!t || !t.length) return;
							break
						}
						default:
							return void 0
					}
					const h = Object(_.d)(o);
					let f;
					if ((f = await a({
							context: n(),
							count: p,
							subreddit: h || void 0,
							forceAd: null === (s = null == d ? void 0 : d.sidebar_ad) || void 0 === s ? void 0 : s.split(",")
						})).body && f.body.length) {
						const e = f.body,
							i = {};
						for (let t = 0; t < e.length; t++) i[c[t]] = e[t];
						t(b(i))
					} else t(g(f.error))
				}), S = e => async (t, i, {
					apiContext: n
				}) => {
					var r;
					const s = i(),
						o = Object(_.q)(s),
						d = await a({
							context: n(),
							count: 1,
							forceAd: null === (r = null == o ? void 0 : o.sidebar_ad) || void 0 === r ? void 0 : r.split(",")
						});
					d.body && d.body.length ? t(w({
						[e]: d.body[0]
					})) : t(v(d.error))
				}, T = e => async (t, i, {
					apiContext: n
				}) => {
					const r = i(),
						a = Object(_.q)(r),
						l = Object(_.d)(r),
						u = await (async ({
							context: e,
							count: t,
							postId: i,
							subredditName: n,
							forceAd: r
						}) => {
							const a = {
								count: t,
								subreddit: n,
								post_id: i,
								comments_ad: r
							};
							return Object(d.a)(e, {
								type: "json",
								endpoint: `${s.a.gatewayUrl}/desktopapi/v1/comments_page_insertion`,
								method: o.jb.POST,
								data: a
							})
						})({
							context: n(),
							count: 1,
							postId: e,
							subredditName: l,
							forceAd: a ? a.comments_ad : void 0
						});
					if (u.body && u.body.length) return t(y(u.body)), u.body[0].id;
					t(g(u.error))
				}
		},
		"./src/reddit/actions/bulkActions/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}));
			const n = "BULKACTION_PENDING",
				r = "BULKACTION_LOADED",
				s = "BULKACTION_FAILED"
		},
		"./src/reddit/actions/changeUsername.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "e", (function() {
				return h
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/actions/interceptedAction.ts"),
				s = i("./src/reddit/actions/modal.ts"),
				o = i("./src/reddit/components/Settings/modalIds.ts"),
				d = i("./src/reddit/constants/actions.ts"),
				a = i("./src/reddit/selectors/interceptedAction.ts");
			const l = "CHANGE_USERNAME_TOOLTIP_CLOSED",
				u = "CHANGE_USERNAME_TOOLTIP_OPENED",
				c = "SAVE_USERNAME_SUCCESS",
				_ = Object(n.a)(l),
				m = (Object(n.a)(u), Object(n.a)(c)),
				p = e => async (t, i) => {
					e && t(Object(r.c)(e)), t(Object(s.h)(o.e))
				}, h = (e, t) => async (i, n) => {
					const s = Object(a.a)(n());
					if (i(m({
							username: e
						})), s) {
						i(((e, t, i) => {
							switch (e.type) {
								case d.a: {
									const {
										payload: {
											args: n
										}
									} = e;
									n && n[0] && "string" == typeof n[0] && (n[0] = n[0].split(i).join(t));
									break
								}
							}
							return e
						})(s, e, t)), i(Object(r.d)())
					}
				}
		},
		"./src/reddit/actions/chat/init.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return h
			})), i.d(t, "a", (function() {
				return f
			})), i.d(t, "c", (function() {
				return g
			}));
			var n = i("./src/lib/loadWithRetries/index.ts"),
				r = i("./src/lib/makeActionCreator/index.ts"),
				s = i("./src/chat/actions/inviteLink/localStorage.ts"),
				o = i("./src/chat/customMiddleware/channelsFilter.ts"),
				d = i("./src/chat/customMiddleware/chatThemeKey.ts"),
				a = i("./src/chat/customMiddleware/containerSize.ts"),
				l = i("./src/chat/customMiddleware/draftMessageText.ts"),
				u = i("./src/chat/customMiddleware/inviteLinkSettings.ts"),
				c = i("./src/chat/customMiddleware/settings.ts"),
				_ = i("./src/chat/customMiddleware/uploadPrompt.ts"),
				m = i("./src/chat/reducers/subscribe.ts");
			let p;
			let h;
			const f = "CHAT__INITED",
				b = Object(r.a)(f),
				g = async (e, t, r) => h ? {
					chatStore: h,
					firstInit: !1
				} : (h = await (async (e, t, r) => {
					const s = Date.now(),
						o = await Object(n.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/initializer.tsx"))).then(e => e.default);
					return (await o(t(), s, r)).store
				})(0, t, r), Object(a.b)(h), Object(l.b)(h), Object(d.b)(h), Object(o.b)(h), Object(u.b)(h), Object(d.c)(h), Object(_.b)(h), Object(c.b)(h), Object(s.b)(h), await (async (e, t, r) => {
					if (!p) {
						const s = (await Object(n.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/reddit/actions/chat/proxy.ts"))).then(e => e.default))(t, r),
							o = Object(m.b)(e, s);
						p = e.subscribe(o)
					}
				})(h, e, t), e(b()), {
					chatStore: h,
					firstInit: !0
				})
		},
		"./src/reddit/actions/chat/toggle.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return _
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "a", (function() {
				return p
			})), i.d(t, "b", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "f", (function() {
				return b
			})), i.d(t, "h", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/react-router-redux/es/index.js"),
				r = i("./src/lib/loadWithRetries/index.ts"),
				s = i("./src/chat/constants/container.ts"),
				o = i("./src/chat/customMiddleware/containerSize.ts"),
				d = i("./src/reddit/actions/chat/init.ts"),
				a = i("./src/reddit/helpers/trackers/authorHovercard.ts");
			const l = () => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/actions/meta.ts"))).then(e => e.setExternalData),
				u = () => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/actions/container.ts"))).then(e => e.sizeChanged);
			async function c(e, t, i, r) {
				const [{
					chatStore: o,
					firstInit: c
				}, _] = await Promise.all([Object(d.c)(e, t, i), u()]), m = t(), p = await l(), h = Object(a.h)(m, r);
				o.dispatch(p(h)), o.getState().container.size !== s.a.EMBED && o.dispatch(_(s.a.EMBED)), !c && o.dispatch(Object(n.c)(i))
			}
			const _ = (e, t) => async (i, n) => {
				await c(i, n, e, t)
			}, m = () => async (e, t) => Promise.all([Object(d.c)(e, t), u()]).then(([{
				chatStore: e,
				firstInit: t
			}, i]) => {
				e.getState().container.size !== s.a.EMBED || t ? e.dispatch(i(s.a.EMBED)) : e.dispatch(i(s.a.HIDDEN))
			}), p = e => async (t, n) => {
				const s = await Object(d.c)(t, n),
					o = await (() => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/actions/channel/messageQuickReply.ts"))).then(e => e.messageQuickReplyAddUserIdAction))();
				s.chatStore.dispatch(o(e))
			}, h = (e, t) => async (n, s) => {
				const o = (await (() => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/helpers/urls/index.ts"))).then(e => e.channelUserIdUrl))())(e);
				await c(n, s, o, t)
			}, f = ({
				channelId: e,
				channelUrl: t
			}) => async (n, s) => {
				if (!t && e) {
					const n = await (() => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/helpers/urls/index.ts"))).then(e => e.channelUrl))();
					t = n(e)
				}
				if (!t) throw new Error("Please specify channelUrl or channelId");
				await c(n, s, t)
			}, b = e => async (t, n) => {
				const s = (await (() => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/helpers/urls/index.ts"))).then(e => e.getShareToChatUrl))())(e);
				await c(t, n, s)
			}, g = e => async (t, n) => {
				if (!d.b) return;
				const s = await (() => Object(r.a)(() => Promise.all([i.e("vendors~Chat~RedesignChat"), i.e("Chat~RedesignChat"), i.e("RedesignChat")]).then(i.bind(null, "./src/chat/actions/theme.ts"))).then(e => e.switchTheme))();
				d.b.dispatch(s(e))
			}, w = () => async (e, t) => {
				const i = t(),
					n = i.user.account && i.user.account.id || "unknown";
				Object(o.c)(n) && Object(d.c)(e, t)
			}
		},
		"./src/reddit/actions/comment/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "F", (function() {
				return n
			})), i.d(t, "o", (function() {
				return r
			})), i.d(t, "x", (function() {
				return s
			})), i.d(t, "w", (function() {
				return o
			})), i.d(t, "v", (function() {
				return d
			})), i.d(t, "j", (function() {
				return a
			})), i.d(t, "i", (function() {
				return l
			})), i.d(t, "e", (function() {
				return u
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "c", (function() {
				return m
			})), i.d(t, "k", (function() {
				return p
			})), i.d(t, "n", (function() {
				return h
			})), i.d(t, "H", (function() {
				return f
			})), i.d(t, "J", (function() {
				return b
			})), i.d(t, "I", (function() {
				return g
			})), i.d(t, "G", (function() {
				return w
			})), i.d(t, "q", (function() {
				return v
			})), i.d(t, "p", (function() {
				return y
			})), i.d(t, "l", (function() {
				return E
			})), i.d(t, "g", (function() {
				return S
			})), i.d(t, "m", (function() {
				return T
			})), i.d(t, "t", (function() {
				return O
			})), i.d(t, "r", (function() {
				return I
			})), i.d(t, "s", (function() {
				return R
			})), i.d(t, "C", (function() {
				return F
			})), i.d(t, "B", (function() {
				return N
			})), i.d(t, "D", (function() {
				return C
			})), i.d(t, "h", (function() {
				return j
			})), i.d(t, "z", (function() {
				return A
			})), i.d(t, "y", (function() {
				return x
			})), i.d(t, "A", (function() {
				return D
			})), i.d(t, "a", (function() {
				return P
			})), i.d(t, "E", (function() {
				return L
			})), i.d(t, "b", (function() {
				return k
			})), i.d(t, "u", (function() {
				return B
			}));
			const n = "COMMENT__STICKIED_COMMENT_SUCCESS",
				r = "COMMENT__MUTATED",
				s = "COMMENT__MORECOMMENTS_PENDING",
				o = "COMMENT__MORECOMMENTS_LOADED",
				d = "COMMENT__MORECOMMENTS_FAILED",
				a = "COMMENT__FOCUSED_TOGGLED",
				l = "COMMENT__FOCUSED_SET",
				u = "COMMENT__COLLAPSED_TOGGLED",
				c = "COMMENT__COLLAPSED_UNSET",
				_ = "COMMENTS__HIDDEN_TOGGLED",
				m = "COMMENTS__HIDDEN_SET",
				p = "COMMENT_FORM_FOCUS_CHANGED",
				h = "COMMENT_MARKED_UNCOLLAPSED",
				f = "COMMENT__SUBMIT_COMMENT_PENDING",
				b = "COMMENT__SUBMIT_REPLY_TO_POST_SUCCESS",
				g = "COMMENT__SUBMIT_REPLY_TO_COMMENT_SUCCESS",
				w = "COMMENT__SUBMIT_COMMENT_FAILURE",
				v = "COMMENT__COMMENT_REPLY_FORM_OPENED",
				y = "COMMENT__COMMENT_REPLY_FORM_CANCELLED",
				E = "COMMENT__COMMENT_FORM_MUTATED",
				S = "COMMENT__COMMENT_DRAFT_CLEARED",
				T = "COMMENT__COMMENT_FORM_SWITCHED_MODE",
				O = "INITIALIZE_COMMENT_EDITOR_MODE",
				I = "COMMENT__DISABLE_AUTOFOCUS",
				R = "COMMENT__EDIT_COMMENT_ENABLED",
				F = "COMMENT__REQUEST_EDIT_PENDING",
				N = "COMMENT__REQUEST_EDIT_FAILURE",
				C = "COMMENT__REQUEST_EDIT_SUCCESS",
				j = "COMMENT__COMMENT_EDIT_FORM_CANCELLED",
				A = "COMMENT__REQUEST_DELETE_PENDING",
				x = "COMMENT__REQUEST_DELETE_FAILURE",
				D = "COMMENT__REQUEST_DELETE_SUCCESS",
				P = "COMMENT__CHANGE_HIGHLIGHT_FILTER",
				L = "SET_FOLLOWED_COMMENT",
				k = "CHECK_FOLLOWED_COMMENTS_EXPIRED",
				B = "INITIALIZE_FOLLOWED_COMMENTS"
		},
		"./src/reddit/actions/comment/websocket/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			}));
			const n = "COMMENT__LIVECOMMENTS__NEWCOMMENT",
				r = "COMMENT__LIVECOMMENTS__UPDATECOMMENT",
				s = "COMMENT__LIVECOMMENTS_DELETECOMMENT",
				o = "COMMENT__LIVECOMMENTS__USERJOIN"
		},
		"./src/reddit/actions/communityFlairs/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			}));
			const n = "TOP_COMMUNITY_FLAIR__FETCH_FAILURE",
				r = "TOP_COMMUNITY_FLAIR__FETCH_PENDING",
				s = "TOP_COMMUNITY_FLAIR__FETCH_SUCCESS",
				o = "COMMUNITY_FLAIR__ADD_FLAIRS"
		},
		"./src/reddit/actions/communityFlairs/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return y
			})), i.d(t, "e", (function() {
				return E
			})), i.d(t, "c", (function() {
				return S
			})), i.d(t, "b", (function() {
				return T
			})), i.d(t, "d", (function() {
				return O
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/camelCase.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/isEmpty.js"),
				o = i.n(s),
				d = i("./node_modules/lodash/omit.js"),
				a = i.n(d),
				l = i("./src/lib/makeActionCreator/index.ts"),
				u = i("./src/reddit/endpoints/flair/index.ts"),
				c = i("./src/reddit/helpers/flair.ts"),
				_ = i("./src/reddit/models/Flair/index.ts"),
				m = i("./src/reddit/selectors/communityFlairs.ts"),
				p = i("./src/reddit/selectors/subreddit.ts"),
				h = i("./src/reddit/actions/communityFlairs/constants.ts");
			const f = Object(l.a)(h.c),
				b = Object(l.a)(h.d),
				g = Object(l.a)(h.b),
				w = Object(l.a)(h.a),
				v = e => {
					const t = {};
					for (const i in e) {
						t[r()(i)] = e[i]
					}
					return t
				},
				y = (e, t) => async (i, n) => {
					const s = n(),
						d = Object(m.b)(s, t),
						l = Object(m.c)(s, t) || [],
						u = (e => {
							const t = {};
							return e.map(e => {
								const i = Object(c.g)(e),
									n = r()(i),
									s = n && t.hasOwnProperty(n);
								e.type !== _.f.Spoiler && e.type !== _.f.Nsfw && (s || (t[n] = {
									...e,
									id: n
								}))
							}), t
						})(e),
						p = a()(u, l);
					if (o()(p)) return;
					const h = Object.keys(p),
						f = l ? l.concat(h) : h,
						b = d ? {
							...d,
							...p
						} : p;
					i(w({
						models: b,
						sortedKeys: f,
						subredditId: t
					}))
				}, E = e => async (t, i, {
					apiContext: n
				}) => {
					const r = Object(p.D)(i(), e);
					t(f());
					const s = await Object(u.c)(n(), e);
					if (s.ok) {
						const e = s.body.map(v).map(e => Object(c.c)(e));
						t(y(e, r)), t(b())
					} else t(g())
				}, S = (e, t) => {
					const i = [];
					for (const n in e) {
						const r = e[n],
							s = r.belongsTo && r.belongsTo.id === t;
						r.flair && r.flair.length && s && i.push(...r.flair)
					}
					return i
				}, T = e => {
					const t = e && e.data && e.data.content && e.data.content.widgets;
					if (t) {
						const e = t.items;
						for (const t in e) {
							const i = e[t];
							if ("post-flair" === i.kind) return i
						}
					}
				}, O = e => {
					const t = [],
						{
							templates: i
						} = e;
					for (const n in i) {
						const e = i[n];
						e && t.push(e)
					}
					return t
				}
		},
		"./src/reddit/actions/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = "VOTE__VOTE_CAST"
		},
		"./src/reddit/actions/contentGate.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "g", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			})), i.d(t, "h", (function() {
				return p
			})), i.d(t, "i", (function() {
				return h
			})), i.d(t, "j", (function() {
				return f
			})), i.d(t, "k", (function() {
				return b
			})), i.d(t, "e", (function() {
				return g
			})), i.d(t, "f", (function() {
				return w
			})), i.d(t, "d", (function() {
				return v
			})), i.d(t, "n", (function() {
				return E
			})), i.d(t, "o", (function() {
				return S
			})), i.d(t, "p", (function() {
				return T
			})), i.d(t, "s", (function() {
				return O
			})), i.d(t, "t", (function() {
				return I
			})), i.d(t, "v", (function() {
				return R
			})), i.d(t, "r", (function() {
				return F
			})), i.d(t, "q", (function() {
				return N
			})), i.d(t, "w", (function() {
				return C
			})), i.d(t, "u", (function() {
				return j
			})), i.d(t, "l", (function() {
				return A
			})), i.d(t, "m", (function() {
				return x
			}));
			var n = i("./src/config.ts"),
				r = i("./node_modules/js-cookie/src/js.cookie.js"),
				s = i.n(r),
				o = i("./src/lib/makeActionCreator/index.ts"),
				d = i("./src/reddit/constants/cookie.ts"),
				a = i("./src/reddit/endpoints/user/preferences.ts"),
				l = i("./src/reddit/selectors/user.ts");
			const u = "CONTENTGATE__VISITED_GOLD_SUBREDDIT",
				c = "CONTENTGATE__VISITED_PRIVATE_SUBREDDIT",
				_ = "CONTENTGATE__VISITED_QUARANTINED_SUBREDDIT",
				m = "CONTENTGATE__VISITED_GATED_SUBREDDIT",
				p = "CONTENTGATE__SET_OVER_18_PREF",
				h = "CONTENTGATE__VISITED_BANNED_SUBREDDIT",
				f = "CONTENTGATE__VISITED_SUBREDDIT_BLOCKED_FOR_LEGAL_REASON",
				b = "CONTENTGATE__VISITED_NONEXISTENT_SUBREDDIT",
				g = "CONTENTGATE__VISITED_DELETED_PROFILE",
				w = "CONTENTGATE__VISITED_SUSPENDED_PROFILE",
				v = "CONTENTGATE__VISITED_PROFILE_BLOCKED_FOR_LEGAL_REASON",
				y = Object(o.a)(p),
				E = Object(o.a)(h),
				S = Object(o.a)(f),
				T = Object(o.a)(b),
				O = Object(o.a)(u),
				I = Object(o.a)(c),
				R = Object(o.a)(_),
				F = Object(o.a)(m),
				N = Object(o.a)(g),
				C = Object(o.a)(w),
				j = Object(o.a)(v),
				A = () => {
					const e = new Date;
					e.setFullYear(e.getFullYear() + 2), s.a.set(d.e, "1", {
						expires: e,
						domain: n.a.cookieDomain
					})
				},
				x = () => async (e, t, {
					apiContext: i
				}) => {
					const n = t();
					Object(l.O)(n) && n.platform.currentPage && await Object(a.h)(i()), e(y({
						over18: !0
					}))
				}
		},
		"./src/reddit/actions/dashboard/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			}));
			const n = "PAGE__DASHBOARD_PENDING",
				r = "DASHBOARD__COMPONENT_SELECTED",
				s = "DASHBOARD__SUBREDDIT_SELECTED",
				o = "DASHBOARD__SUBREDDIT_LOADED"
		},
		"./src/reddit/actions/economics/predictions/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "i", (function() {
				return s
			})), i.d(t, "h", (function() {
				return o
			})), i.d(t, "j", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			})), i.d(t, "q", (function() {
				return u
			})), i.d(t, "t", (function() {
				return c
			})), i.d(t, "p", (function() {
				return _
			})), i.d(t, "k", (function() {
				return m
			})), i.d(t, "m", (function() {
				return p
			})), i.d(t, "l", (function() {
				return h
			})), i.d(t, "o", (function() {
				return f
			})), i.d(t, "n", (function() {
				return b
			})), i.d(t, "a", (function() {
				return g
			})), i.d(t, "r", (function() {
				return w
			})), i.d(t, "s", (function() {
				return v
			})), i.d(t, "g", (function() {
				return y
			})), i.d(t, "b", (function() {
				return E
			}));
			const n = "FETCH_PREDICTIONS_LEADERBOARD_START",
				r = "FETCH_PREDICTIONS_LEADERBOARD_FAIL",
				s = "FETCH_QUERIED_LEADERBOARD_START",
				o = "FETCH_QUERIED_LEADERBOARD_FAIL",
				d = "FETCH_QUERIED_LEADERBOARD_SUCCESS",
				a = "FETCH_PREDICTIONS_SUBREDDIT_LEADERBOARD_SUCCESS",
				l = "FETCH_PREDICTIONS_TOURNAMENT_LEADERBOARD_SUCCESS",
				u = "PREDICTION_VOTE_SUCCESS",
				c = "TOURNAMENT_POST_VOTE_SUCCESS",
				_ = "PREDICTION_RESOLVE_SUCCESS",
				m = "FETCH_SUBREDDIT_PREDICTION_TOURNAMENTS_FULL_INFO_START",
				p = "FETCH_SUBREDDIT_PREDICTION_TOURNAMENTS_SUCCESS",
				h = "FETCH_SUBREDDIT_PREDICTION_TOURNAMENTS_FULL_INFO_SUCCESS",
				f = "PREDICTIONS_POSTS_LOADED",
				b = "NEW_TOURNAMENT",
				g = "ADD_PREDICTION_TO_TOURNAMENT",
				w = "REMOVE_LAST_PREDICTION_FROM_TOURNAMENT",
				v = "RESET_TOURNAMENT_PREDICTIONS",
				y = "FETCH_PREDICTION_TOURNAMENT_SUCCESS",
				E = "CHANGE_PREDICTION_SUCCESS"
		},
		"./src/reddit/actions/emailVerificationTooltip.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return d
			}));
			var n = i("./src/lib/cache/index.ts"),
				r = i("./src/reddit/selectors/user.ts");
			const s = "EMAIL_VERIFICATION_TOOLTIP_TOGGLED",
				o = () => Object(n.b)("email.verification_prompt") || {},
				d = () => async (e, t) => {
					const i = t(),
						{
							user: d,
							isEmailVerificationTooltipShowing: a
						} = i;
					if (!d || !d.account) return;
					const l = Object(r.i)(i),
						u = a,
						c = (e => {
							return o()[e] || 0
						})(l || "");
					if (!u) {
						if ((e => {
								const t = o();
								t[e] = (t[e] || 0) + 1, Object(n.d)("email.verification_prompt", t, n.a)
							})(l || ""), c > 6) return;
						if (c % 3 != 0) return
					}
					e({
						type: s
					})
				}
		},
		"./src/reddit/actions/focusedVerticals/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return n
			})), i.d(t, "h", (function() {
				return r
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "f", (function() {
				return d
			})), i.d(t, "j", (function() {
				return a
			})), i.d(t, "i", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			}));
			const n = "FOCUSED_VERTICAL_LOADED",
				r = "FOCUSED_VERTICAL_PENDING",
				s = "FOCUSED_VERTICAL_FAILED",
				o = "FOCUSED_VERTICAL_DATA_RESET",
				d = "FOCUSED_VERTICAL_LAST_ENV_RESET",
				a = "SHOW_DU",
				l = "HIDE_DU",
				u = 237,
				c = "community_desc_with_posts_geo",
				_ = "community_desc_with_posts_geo"
		},
		"./src/reddit/actions/frontpage/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			}));
			const n = "PAGE__FRONTPAGE_PENDING",
				r = "PAGE__FRONTPAGE_LOADED",
				s = "PAGE__FRONTPAGE_FAILED",
				o = "PAGE__FRONTPAGE_RELOADED",
				d = "FRONTPAGE__MORE_POSTS_PENDING",
				a = "FRONTPAGE__MORE_POSTS_LOADED",
				l = "FRONTPAGE__MORE_POSTS_FAILED"
		},
		"./src/reddit/actions/gold/awardKarma.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/actions/gold/constants.ts");
			const s = Object(n.a)(r.eb)
		},
		"./src/reddit/actions/gold/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "L", (function() {
				return n
			})), i.d(t, "f", (function() {
				return r
			})), i.d(t, "K", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "J", (function() {
				return d
			})), i.d(t, "h", (function() {
				return a
			})), i.d(t, "i", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "jb", (function() {
				return c
			})), i.d(t, "kb", (function() {
				return _
			})), i.d(t, "ib", (function() {
				return m
			})), i.d(t, "H", (function() {
				return p
			})), i.d(t, "G", (function() {
				return h
			})), i.d(t, "F", (function() {
				return f
			})), i.d(t, "d", (function() {
				return b
			})), i.d(t, "M", (function() {
				return g
			})), i.d(t, "k", (function() {
				return w
			})), i.d(t, "l", (function() {
				return v
			})), i.d(t, "j", (function() {
				return y
			})), i.d(t, "n", (function() {
				return E
			})), i.d(t, "o", (function() {
				return S
			})), i.d(t, "m", (function() {
				return T
			})), i.d(t, "c", (function() {
				return O
			})), i.d(t, "b", (function() {
				return I
			})), i.d(t, "a", (function() {
				return R
			})), i.d(t, "nb", (function() {
				return F
			})), i.d(t, "x", (function() {
				return N
			})), i.d(t, "B", (function() {
				return C
			})), i.d(t, "w", (function() {
				return j
			})), i.d(t, "y", (function() {
				return A
			})), i.d(t, "A", (function() {
				return x
			})), i.d(t, "z", (function() {
				return D
			})), i.d(t, "C", (function() {
				return P
			})), i.d(t, "W", (function() {
				return L
			})), i.d(t, "Z", (function() {
				return k
			})), i.d(t, "Y", (function() {
				return B
			})), i.d(t, "X", (function() {
				return M
			})), i.d(t, "ab", (function() {
				return U
			})), i.d(t, "r", (function() {
				return G
			})), i.d(t, "v", (function() {
				return q
			})), i.d(t, "u", (function() {
				return V
			})), i.d(t, "q", (function() {
				return H
			})), i.d(t, "s", (function() {
				return W
			})), i.d(t, "p", (function() {
				return z
			})), i.d(t, "t", (function() {
				return K
			})), i.d(t, "mb", (function() {
				return Y
			})), i.d(t, "lb", (function() {
				return $
			})), i.d(t, "D", (function() {
				return Q
			})), i.d(t, "I", (function() {
				return J
			})), i.d(t, "rb", (function() {
				return X
			})), i.d(t, "qb", (function() {
				return Z
			})), i.d(t, "ob", (function() {
				return ee
			})), i.d(t, "pb", (function() {
				return te
			})), i.d(t, "Bb", (function() {
				return ie
			})), i.d(t, "Ab", (function() {
				return ne
			})), i.d(t, "zb", (function() {
				return re
			})), i.d(t, "hb", (function() {
				return se
			})), i.d(t, "gb", (function() {
				return oe
			})), i.d(t, "fb", (function() {
				return de
			})), i.d(t, "U", (function() {
				return ae
			})), i.d(t, "V", (function() {
				return le
			})), i.d(t, "T", (function() {
				return ue
			})), i.d(t, "P", (function() {
				return ce
			})), i.d(t, "Q", (function() {
				return _e
			})), i.d(t, "O", (function() {
				return me
			})), i.d(t, "S", (function() {
				return pe
			})), i.d(t, "R", (function() {
				return he
			})), i.d(t, "E", (function() {
				return fe
			})), i.d(t, "N", (function() {
				return be
			})), i.d(t, "db", (function() {
				return ge
			})), i.d(t, "cb", (function() {
				return we
			})), i.d(t, "bb", (function() {
				return ve
			})), i.d(t, "Eb", (function() {
				return ye
			})), i.d(t, "Db", (function() {
				return Ee
			})), i.d(t, "Cb", (function() {
				return Se
			})), i.d(t, "Hb", (function() {
				return Te
			})), i.d(t, "Fb", (function() {
				return Oe
			})), i.d(t, "Gb", (function() {
				return Ie
			})), i.d(t, "eb", (function() {
				return Re
			})), i.d(t, "sb", (function() {
				return Fe
			})), i.d(t, "tb", (function() {
				return Ne
			})), i.d(t, "ub", (function() {
				return Ce
			})), i.d(t, "vb", (function() {
				return je
			})), i.d(t, "wb", (function() {
				return Ae
			})), i.d(t, "xb", (function() {
				return xe
			})), i.d(t, "yb", (function() {
				return De
			}));
			const n = "GIVE_PREMIUM__OPEN_GIVE_PREMIUM_MODAL",
				r = "GIVE_PREMIUM__CLOSE_GIVE_PREMIUM_MODAL",
				s = "GILD__OPEN_GILD_MODAL",
				o = "GILD__CLOSE_GILD_MODAL",
				d = "GILD__OPEN_FRAMED_GILD",
				a = "COMMUNITY_AWARDS__CREATE_AWARD_PENDING",
				l = "COMMUNITY_AWARDS__CREATE_AWARD_SUCCESSFUL",
				u = "COMMUNITY_AWARDS__CREATE_AWARD_FAILED",
				c = "COMMUNITY_AWARDS__REMOVE_PENDING",
				_ = "COMMUNITY_AWARDS__REMOVE_SUCCESSFUL",
				m = "COMMUNITY_AWARDS__REMOVE_FAILED",
				p = "COMMUNITY_AWARDS__MANAGEABLE_AWARDS_PENDING",
				h = "COMMUNITY_AWARDS__MANAGEABLE_AWARDS_LOADED",
				f = "COMMUNITY_AWARDS__MANAGEABLE_AWARDS_FAILED",
				b = "COMUNITY_AWARDS__BLACKLIST_STATUS_LOADED",
				g = "COMMUNITY_AWARDS__OPTIONAL_AWARDS_LOADED",
				w = "COMMUNITY_AWARDS__DISABLE_PENDING",
				v = "COMMUNITY_AWARDS__DISABLE_SUCCESSFUL",
				y = "COMMUNITY_AWARDS__DISABLE_FAILED",
				E = "COMMUNITY_AWARDS__ENABLE_PENDING",
				S = "COMMUNITY_AWARDS__ENABLE_SUCCESSFUL",
				T = "COMMUNITY_AWARDS__ENABLE_FAILED",
				O = "AWARD_SHEET__INFO_PENDING",
				I = "AWARD_SHEET__INFO_LOADED",
				R = "AWARD_SHEET__INFO_FAILED",
				F = "COINS__SUBREDDIT_LOCKED_COINS_LOADED",
				N = "GIVE_PREMIUM__GIVE_PREMIUM_PENDING",
				C = "GIVE_PREMIUM__GIVE_PREMIUM_SUCCESSFUL",
				j = "GIVE_PREMIUM__GIVE_PREMIUM_FAILED",
				A = "GIVE_PREMIUM__SELECT_PACKAGE",
				x = "GIVE_PREMIUM__SET_IS_ANONYMOUS",
				D = "GIVE_PREMIUM__SET_INCLUDE_MESSAGE",
				P = "GIVE_PREMIUM__UPDATE_MESSAGE",
				L = "PREMIUM__PAYMENT_COMPLETED",
				k = "PREMIUM__PRODUCT_OFFERS_PENDING",
				B = "PREMIUM__PRODUCT_OFFERS_LOADED",
				M = "PREMIUM__PRODUCT_OFFERS_FAILED",
				U = "PREMIUM__SET_RENEW_INTERVAL",
				G = "GILD__SET_IS_ANONYMOUS",
				q = "GILD__UPDATE_MESSAGE",
				V = "GILD__TRIGGER_LOADER",
				H = "GILD__GILD_PENDING",
				W = "GILD__GILD_SUCCESSFUL",
				z = "GILD__GILD_FAILED",
				K = "GILD__GILD_THING",
				Y = "GIVE_AWARD__SELECT_AWARD",
				$ = "AWARDS__REPORT_AWARD",
				Q = "AWARDS__HIDE_AWARD",
				J = "POWERUPS__MULTIPLE_SUBREDDITS_POWERUPS_LOADED",
				X = "POWERUPS__SUBREDDIT_POWERUPS_PENDING",
				Z = "POWERUPS__SUBREDDIT_POWERUPS_LOADED",
				ee = "POWERUPS__SUBREDDIT_POWERUPS_FAILED",
				te = "POWERUPS__SUBREDDIT_POWERUPS_FULL_LOADED",
				ie = "POWERUPS__USER_POWERUPS_PENDING",
				ne = "POWERUPS__USER_POWERUPS_LOADED",
				re = "POWERUPS__USER_POWERUPS_FAILED",
				se = "POWERUPS__REDDITOR_POWERUPS_PENDING",
				oe = "POWERUPS__REDDITOR_POWERUPS_LOADED",
				de = "POWERUPS__REDDITOR_POWERUPS_FAILED",
				ae = "POWERUPS__REALLOCATE_PENDING",
				le = "POWERUPS__REALLOCATE_SUCCESSFUL",
				ue = "POWERUPS__REALLOCATE_FAILED",
				ce = "POWERUPS__CANCEL_PAYMENT_PENDING",
				_e = "POWERUPS__CANCEL_PAYMENT_SUCCESSFUL",
				me = "POWERUPS__CANCEL_PAYMENT_FAILED",
				pe = "POWERUPS__PAYMENT_COMPLETED",
				he = "POWERUPS_PURCHASE__POWERUPS_COUNT_CHANGED",
				fe = "POWERUPS_PURCHASE__IS_ANONYMOUS_CHANGED",
				be = "POWERUPS__BENEFIT_SETTINGS_UPDATED",
				ge = "PRODUCT_OFFERS__OFFERS_PENDING",
				we = "PRODUCT_OFFERS__OFFERS_LOADED",
				ve = "PRODUCT_OFFERS__OFFERS_FAILED",
				ye = "PRODUCT_OFFERS__SUBSCRIPTIONS_PENDING",
				Ee = "PRODUCT_OFFERS__SUBSCRIPTIONS_LOADED",
				Se = "PRODUCT_OFFERS__SUBSCRIPTIONS_FAILED",
				Te = "PRODUCT_OFFERS__CANCEL_SUBSCRIPTION_PENDING",
				Oe = "PRODUCT_OFFERS__CANCEL_SUBSCRIPTION_COMPLETED",
				Ie = "PRODUCT_OFFERS__CANCEL_SUBSCRIPTION_FAILED",
				Re = "GILD__PROFILE_KARMA_UPDATED",
				Fe = "TOP_AWARDED__POSTS_FAILED",
				Ne = "TOP_AWARDED__POSTS_LOADED",
				Ce = "TOP_AWARDED__POSTS_PENDING",
				je = "TOP_AWARDERS__LEADERBOARD_FAILED",
				Ae = "TOP_AWARDERS__LEADERBOARD_LOADED",
				xe = "TOP_AWARDERS__LEADERBOARD_PENDING",
				De = "TOP_AWARDERS__MODAL_OPENED"
		},
		"./src/reddit/actions/gold/tooltips.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return l
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/localStorage.ts"),
				s = i("./src/reddit/helpers/localStorage/index.ts"),
				o = i("./src/reddit/selectors/gold/purchaseCatalog.ts"),
				d = i("./src/reddit/actions/tooltip.ts"),
				a = i("./src/reddit/components/Flatlist/getFlatlistTooltipId.ts");
			const l = (e, t) => async (i, l, {
				apiContext: u
			}) => {
				!Object(s.i)(r.b.GIVE_FREE_AWARD_TOOLTIP_STORE) && Object(o.b)(l()) && (i(Object(d.h)({
					tooltipId: Object(a.a)(n.pc, e, t ? "lightbox" : void 0)
				})), Object(s.rb)(r.b.GIVE_FREE_AWARD_TOOLTIP_STORE))
			}
		},
		"./src/reddit/actions/goldPurchaseModals/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "C", (function() {
				return s
			})), i.d(t, "g", (function() {
				return o
			})), i.d(t, "A", (function() {
				return d
			})), i.d(t, "B", (function() {
				return a
			})), i.d(t, "D", (function() {
				return l
			})), i.d(t, "E", (function() {
				return u
			})), i.d(t, "F", (function() {
				return c
			})), i.d(t, "G", (function() {
				return _
			})), i.d(t, "H", (function() {
				return m
			})), i.d(t, "K", (function() {
				return p
			})), i.d(t, "J", (function() {
				return h
			})), i.d(t, "I", (function() {
				return f
			})), i.d(t, "L", (function() {
				return b
			})), i.d(t, "M", (function() {
				return g
			})), i.d(t, "N", (function() {
				return w
			})), i.d(t, "f", (function() {
				return v
			})), i.d(t, "k", (function() {
				return y
			})), i.d(t, "l", (function() {
				return E
			})), i.d(t, "m", (function() {
				return S
			})), i.d(t, "o", (function() {
				return T
			})), i.d(t, "n", (function() {
				return O
			})), i.d(t, "i", (function() {
				return I
			})), i.d(t, "j", (function() {
				return R
			})), i.d(t, "p", (function() {
				return F
			})), i.d(t, "q", (function() {
				return N
			})), i.d(t, "r", (function() {
				return C
			})), i.d(t, "s", (function() {
				return j
			})), i.d(t, "h", (function() {
				return A
			})), i.d(t, "u", (function() {
				return x
			})), i.d(t, "c", (function() {
				return D
			})), i.d(t, "y", (function() {
				return P
			})), i.d(t, "t", (function() {
				return L
			})), i.d(t, "v", (function() {
				return k
			})), i.d(t, "d", (function() {
				return B
			})), i.d(t, "w", (function() {
				return M
			})), i.d(t, "x", (function() {
				return U
			})), i.d(t, "e", (function() {
				return G
			})), i.d(t, "z", (function() {
				return q
			}));
			const n = "GOLD_PAYMENT__CARD_NAME_EMPTY",
				r = "GOLD_PAYMENT__CARD_NAME_INPUT",
				s = "GOLD_PAYMENT__POSTAL_CODE_INPUT",
				o = "GOLD_PAYMENT__DELETE_SAVED_CARD",
				d = "GOLD_PAYMENT__PAYMENT_COMPLETED",
				a = "GOLD_PAYMENT__PAYPAL_API_ERROR",
				l = "GOLD_PAYMENT__SAVED_CARDS_PENDING",
				u = "GOLD_PAYMENT__SAVED_CARDS_SUCCESS",
				c = "GOLD_PAYMENT__SELECT_PAYMENT_METHOD",
				_ = "GOLD_PAYMENT__SELECT_SAVED_CARD",
				m = "GOLD_PAYMENT__STRIPE_API_ERROR",
				p = "GOLD_PAYMENT__STRIPE_CARD_NUMBER_CHANGE",
				h = "GOLD_PAYMENT__STRIPE_CARD_EXPIRY_CHANGE",
				f = "GOLD_PAYMENT__STRIPE_CARD_CVC_CHANGE",
				b = "GOLD_PAYMENT__CARD_ERROR",
				g = "GOLD_PAYMENT__STRIPE_TOKEN_PENDING",
				w = "GOLD_PAYMENT__TOGGLE_REMEMBER_CARD",
				v = "UPDATE_CARD_MODAL__CLOSE_UPDATE_CARD_MODAL",
				y = "GOLD_PURCHASE__FETCH_PURCHASE_CATALOG_ERROR",
				E = "GOLD_PURCHASE__FETCH_PURCHASE_CATALOG_REQUESTED",
				S = "GOLD_PURCHASE__FETCH_PURCHASE_CATALOG_SUCCESS",
				T = "GOLD_PURCHASE__FETCH_PURCHASE_OFFERS_REQUESTED",
				O = "GOLD_PURCHASE__FETCH_PURCHASE_OFFERS_ERROR",
				I = "GOLD_PURCHASE__FETCH_COINPACK_OFFERS_SUCCESS",
				R = "GOLD_PURCHASE__FETCH_PREMIUM_OFFERS_SUCCESS",
				F = "GOLD_PURCHASE__FETCH_RECOMMENDED_PACKAGE_ERROR",
				N = "GOLD_PURCHASE__FETCH_RECOMMENDED_PACKAGE_REQUESTED",
				C = "GOLD_PURCHASE__FETCH_RECOMMENDED_PACKAGE_SUCCESS",
				j = "SPECIAL_EVENTS__FETCH_SPECIAL_EVENTS_SUCCESS",
				A = "SPECIAL_EVENTS__FETCH_CLAIM_FREE_AWARDS_SUCCESS",
				x = "COIN_PURCHASE_MODAL__OPEN_COIN_PURCHASE_MODAL",
				D = "COIN_PURCHASE_MODAL__CLOSE_COIN_PURCHASE_MODAL",
				P = "COIN_PURCHASE_MODAL__OPEN_TARGETED_OFFER_MODAL",
				L = "COIN_PURCHASE_MODAL__OPEN_COIN_PACKAGE_OFFER_MODAL",
				k = "PENNY_PURCHASE_MODAL__OPEN_PENNY_PURCHASE_MODAL",
				B = "PENNY_PURCHASE_MODAL__CLOSE_PENNY_PURCHASE_MODAL",
				M = "PENNY_PURCHASE_MODAL__OPEN_PENNY_PURCHASE_MODAL_TO_GILD",
				U = "PREMIUM_PURCHASE_MODAL__OPEN_PREMIUM_PURCHASE_MODAL",
				G = "PREMIUM_PURCHASE_MODAL__CLOSE_PREMIUM_PURCHASE_MODAL",
				q = "PREMIUM_PURCHASE_MODAL__PAYMENT_BLOB_CREATED"
		},
		"./src/reddit/actions/header.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return r
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "i", (function() {
				return o
			})), i.d(t, "j", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "g", (function() {
				return _
			})), i.d(t, "h", (function() {
				return m
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "HEADER__SUBSCRIPTIONS_PINNED",
				s = "HEADER__SUBSCRIPTIONS_UNPINNED",
				o = Object(n.a)(r),
				d = Object(n.a)(s),
				a = "HEADER__DROPDOWN_CLOSED",
				l = "HEADER__DROPDOWN_OPENED",
				u = "HEADER__DROPDOWN_TOGGLED",
				c = Object(n.a)(a),
				_ = Object(n.a)(l),
				m = Object(n.a)(u)
		},
		"./src/reddit/actions/imageUploads.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			})), i.d(t, "k", (function() {
				return p
			})), i.d(t, "j", (function() {
				return h
			})), i.d(t, "l", (function() {
				return f
			})), i.d(t, "i", (function() {
				return b
			})), i.d(t, "h", (function() {
				return g
			})), i.d(t, "g", (function() {
				return w
			})), i.d(t, "f", (function() {
				return y
			})), i.d(t, "m", (function() {
				return E
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/lib/sentry/index.ts"),
				s = i("./src/lib/uploadToS3/index.ts"),
				o = i("./src/reddit/helpers/getGenericUploadError.ts"),
				d = i("./src/reddit/models/Image/index.tsx"),
				a = i("./src/reddit/selectors/imageUploads.ts");
			const l = "IMAGE_UPLOADS__IMAGE_UPLOAD_PENDING",
				u = "IMAGE_UPLOADS__IMAGE_UPLOAD_LOADED",
				c = "IMAGE_UPLOADS__IMAGE_UPLOAD_SAVED",
				_ = "IMAGE_UPLOADS__IMAGE_UPLOAD_FAILED",
				m = "IMAGE_UPLOADS__IMAGE_UPLOAD_CANCELED",
				p = Object(n.a)(l),
				h = Object(n.a)(u),
				f = Object(n.a)(c),
				b = Object(n.a)(_),
				g = Object(n.a)(m),
				w = async (e, t, i, n) => {
					if (!t.ok) throw Object(d.k)(i, t.error);
					let r, o = t.body;
					"s3UploadLease" in o && (o = o.s3UploadLease, r = t.body.websocketUrl);
					const a = await Object(s.a)(i.file, o);
					if (a.ok) {
						if (!e.imageUploads[i.id]) return void Object(d.d)(i);
						const t = decodeURIComponent(a.body.PostResponse.Location);
						return Object(d.n)(i, t, r, n)
					}
					throw Object(d.k)(i, a.error)
				};

			function v(e) {
				return e.split("/").pop()
			}
			const y = (e, t) => new Promise((i, n) => {
					const s = Object(a.c)(e, t);
					if (!s.length) return i(null);
					const o = s[0].websocketUrl;
					if (!o) return n(new Error("ImageUploads: No websocket URL found"));
					const d = {};
					for (let e = 0; e < s.length; e++) {
						const t = s[e],
							i = v(t.url);
						d[i] = t
					}
					const l = s.length,
						u = new WebSocket(o);
					u.onopen = e => {
						u.onerror = null, i({
							websocket: u,
							imagesByKey: d,
							imageCount: l
						})
					}, u.onerror = e => {
						u.close();
						const t = new Error("ImageUploads: Failed to connect to websocket");
						r.c.captureException(t), n()
					}
				}),
				E = e => (t, i, {
					apiContext: n
				}) => new Promise((i, n) => {
					const {
						websocket: s
					} = e;
					let {
						imageCount: a,
						imagesByKey: l
					} = e;

					function u() {
						for (const e in l) {
							const i = l[e],
								n = Object(d.o)(i, i.url);
							t(f(n))
						}
						i(), s.close()
					}
					l = {
						...l
					};
					let c = setTimeout(u, 6e4);
					s.onmessage = e => {
						clearTimeout(c);
						const n = JSON.parse(e.data);
						if (n && "success" === n.type) {
							const e = n.payload.url,
								i = v(e),
								r = l[i];
							if (!r) return;
							a -= 1, delete r[i];
							const s = Object(d.o)(r, e);
							t(f(s))
						} else {
							const e = v(n.payload.image_key),
								i = l[e];
							if (!i) return;
							a -= 1, delete i[e];
							const r = Object(o.a)(n.payload.image_key),
								s = Object(d.k)(i, r);
							t(b(s))
						}
						a ? c = setTimeout(u, 6e4) : (s.close(), i())
					}, s.onerror = e => {
						clearTimeout(c);
						const i = Object(o.a)("websocket");
						for (const n in l) {
							const e = l[n],
								r = Object(d.k)(e, i);
							t(b(r))
						}
						s.close();
						const a = new Error("ImageUploads: WebSocket connection failed before all messages received");
						r.c.captureException(a), n()
					}
				})
		},
		"./src/reddit/actions/interceptedAction.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "INTERCEPTED_ACTION_SET",
				s = "INTERCEPTED_ACTION_UNSET",
				o = Object(n.a)(r),
				d = Object(n.a)(s)
		},
		"./src/reddit/actions/login.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return u
			})), i.d(t, "j", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "d", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "g", (function() {
				return f
			})), i.d(t, "k", (function() {
				return b
			})), i.d(t, "h", (function() {
				return g
			})), i.d(t, "l", (function() {
				return w
			})), i.d(t, "f", (function() {
				return v
			})), i.d(t, "c", (function() {
				return y
			}));
			var n = i("./src/reddit/actions/modal.ts"),
				r = i("./src/reddit/actions/preferences.ts"),
				s = i("./src/reddit/constants/modals.ts"),
				o = i("./src/reddit/constants/postLayout.ts"),
				d = i("./src/reddit/models/Onboarding/index.ts"),
				a = i("./src/reddit/selectors/experiments/magicLink.ts");
			const l = (e, t) => async (i, s) => {
				i(Object(n.i)(e, t)), !s().user.prefs.layout && i(Object(r.x)(o.d.Card))
			}, u = () => async (e, t) => {
				e(l(s.a.LOGIN_MODAL_ID)), Object(a.b)(t())
			}, c = () => async (e, t) => {
				e(l(s.a.REGISTER_MODAL_ID)), Object(a.b)(t())
			}, _ = () => async e => {
				e(l(s.a.CHANGE_PASSWORD_MODAL_ID))
			}, m = () => async e => {
				e(l(s.a.ENABLE_TWO_FACTOR))
			}, p = () => async e => {
				e(l(s.a.DISABLE_TWO_FACTOR))
			}, h = () => async e => {
				e(l(s.a.TWO_FACTOR_BACKUP_CODES))
			}, f = () => async e => {
				e(l(s.a.LINK_APPLE_SSO))
			}, b = () => async e => {
				e(l(s.a.UNLINK_APPLE_SSO))
			}, g = () => async e => {
				e(l(s.a.LINK_GOOGLE_SSO))
			}, w = () => async e => {
				e(l(s.a.UNLINK_GOOGLE_SSO))
			}, v = () => async e => {
				e(l(s.a.GOOGLE_ONE_TAP_MODAL_ID))
			}, y = (e = d.a) => async t => {
				t(l(s.a.ONBOARDING_MODAL_D2X, e))
			}
		},
		"./src/reddit/actions/media.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return m
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "b", (function() {
				return b
			})), i.d(t, "e", (function() {
				return g
			})), i.d(t, "i", (function() {
				return w
			})), i.d(t, "f", (function() {
				return v
			})), i.d(t, "g", (function() {
				return y
			})), i.d(t, "a", (function() {
				return E
			})), i.d(t, "j", (function() {
				return T
			}));
			var n = i("./src/lib/ads/index.ts"),
				r = i("./src/lib/ads/store.ts"),
				s = i("./src/lib/makeActionCreator/index.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/makeApiRequest/index.ts"),
				a = i("./src/lib/omitHeaders/index.ts"),
				l = i("./src/reddit/constants/headers.ts"),
				u = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				c = i("./src/reddit/models/Media/index.ts"),
				_ = i("./src/reddit/actions/video.ts");
			const m = "MEDIA__SET_MUTE",
				p = Object(s.a)(m),
				h = "MEDIA__SET_VOLUME",
				f = Object(s.a)(h),
				b = "MEDIA__SET_CURRENT_SLIDE_INDEX",
				g = "TOGGLE_GALLERY_LAYOUT",
				w = Object(s.a)(g),
				v = Object(s.a)(b),
				y = (e, t, i) => async (s, o) => {
					s(p(e)), !e && i && (r.e(i, e, n.n.muted), s(Object(_.B)(t, i)))
				}, E = "MEDIA__EMBED_HEIGHT_MEASURED", S = Object(s.a)(E), T = ({
					height: e,
					isDeleted: t,
					postId: i
				}) => async (n, r, {
					apiContext: s
				}) => {
					const _ = r(),
						{
							media: m
						} = _.posts.models[i],
						{
							height: p
						} = _.mediaEmbed[i] || {};
					n(S({
						height: e,
						isDeleted: t,
						postId: i
					})), null !== m && m.type === c.o.EMBED && m.provider === c.v.Twitter && p !== e && await ((e, t, i) => Object(d.a)(Object(a.a)(e, [l.a]), {
						endpoint: Object(u.a)(`${e.apiUrl}/api/set_twitter`),
						method: o.jb.POST,
						data: {
							height: i,
							link: t
						}
					}))(s(), i.substr(3), e)
				}
		},
		"./src/reddit/actions/modMode.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return u
			}));
			var n = i("./node_modules/js-cookie/src/js.cookie.js"),
				r = i.n(n),
				s = i("./src/config.ts"),
				o = i("./src/lib/makeActionCreator/index.ts"),
				d = i("./src/reddit/constants/cookie.ts");
			const a = "MOD_MODE_TOGGLED",
				l = Object(o.a)(a),
				u = e => async (t, i, {
					apiContext: n
				}) => {
					let o;
					if (void 0 !== e) o = e;
					else {
						o = "false" === r.a.get(d.b)
					}
					r.a.set(d.b, o, {
						domain: s.a.cookieDomain
					});
					(document.cookie.match(/mod_mode_enabled=/g) || []).length > 1 && r.a.set(d.b, "", {
						expires: 0,
						path: "/"
					});
					t(l({
						enabled: o
					}))
				}
		},
		"./src/reddit/actions/modQueue/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "j", (function() {
				return n
			})), i.d(t, "i", (function() {
				return r
			})), i.d(t, "h", (function() {
				return s
			})), i.d(t, "g", (function() {
				return o
			})), i.d(t, "f", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "n", (function() {
				return l
			})), i.d(t, "m", (function() {
				return u
			})), i.d(t, "l", (function() {
				return c
			})), i.d(t, "q", (function() {
				return _
			})), i.d(t, "p", (function() {
				return m
			})), i.d(t, "o", (function() {
				return p
			})), i.d(t, "w", (function() {
				return h
			})), i.d(t, "v", (function() {
				return f
			})), i.d(t, "u", (function() {
				return b
			})), i.d(t, "t", (function() {
				return g
			})), i.d(t, "s", (function() {
				return w
			})), i.d(t, "r", (function() {
				return v
			})), i.d(t, "k", (function() {
				return y
			})), i.d(t, "b", (function() {
				return E
			})), i.d(t, "a", (function() {
				return S
			})), i.d(t, "c", (function() {
				return T
			})), i.d(t, "d", (function() {
				return O
			}));
			const n = "MODQUEUE_PENDING",
				r = "MODQUEUE_LOADED",
				s = "MODQUEUE_FAILED",
				o = "EDITED_PENDING",
				d = "EDITED_LOADED",
				a = "EDITED_FAILED",
				l = "REPORTS_PENDING",
				u = "REPORTS_LOADED",
				c = "REPORTS_FAILED",
				_ = "SPAM_PENDING",
				m = "SPAM_LOADED",
				p = "SPAM_FAILED",
				h = "UNMODERATED_PENDING",
				f = "UNMODERATED_LOADED",
				b = "UNMODERATED_FAILED",
				g = "UNDOACTION_PENDING",
				w = "UNDOACTION_LOADED",
				v = "UNDOACTION_FAILED",
				y = "MORE_MODERATED_SUBREDDITS_LOADED",
				E = "ALL_MODERATED_COMMUNITIES_LOADED",
				S = "ADD_SELECTED_ITEMS",
				T = "BULK_SELECT_ITEMS",
				O = "BULK_UNSELECT_ITEMS"
		},
		"./src/reddit/actions/modal.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return _
			})), i.d(t, "i", (function() {
				return m
			})), i.d(t, "b", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "g", (function() {
				return b
			})), i.d(t, "h", (function() {
				return g
			})), i.d(t, "j", (function() {
				return w
			})), i.d(t, "e", (function() {
				return v
			})), i.d(t, "a", (function() {
				return y
			})), i.d(t, "k", (function() {
				return E
			})), i.d(t, "l", (function() {
				return S
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/actions/changeUsername.ts"),
				s = i("./src/reddit/actions/header.ts"),
				o = (i("./src/reddit/actions/media.ts"), i("./src/reddit/constants/modals.ts")),
				d = i("./src/reddit/endpoints/user/index.ts"),
				a = i("./src/reddit/helpers/localStorage/index.ts"),
				l = i("./src/reddit/selectors/activeModalId.ts"),
				u = i("./src/reddit/selectors/header.ts"),
				c = i("./src/reddit/selectors/user.ts");
			const _ = "MODAL_TOGGLED",
				m = (e, t) => ({
					type: _,
					payload: {
						id: e,
						args: t
					}
				}),
				p = "CLOSE_ALL_MODALS",
				h = Object(n.a)(p),
				f = "REDESIGN_MODAL_CLOSED",
				b = (Object(n.a)(f), e => async (t, i, n) => {
					Object(l.b)(e)(i()) && t(m(e))
				}),
				g = (e, t) => async (i, n, d) => {
					const a = n();
					if (!Object(l.b)(e)(a)) {
						if ((e === o.a.MULTIREDDIT_CREATE || e === o.a.MULTIREDDIT_ADD_SUBREDDIT) && Object(c.Q)(a)) {
							Object(u.a)(a) && i(Object(s.f)());
							const n = m(e, t);
							return void i(Object(r.f)(n))
						}
						i(m(e, t))
					}
				}, w = () => async (e, t, i) => {
					Object(a.Kb)(o.a.REDESIGN_MODAL, !0), Object(c.O)(t()) && Object(d.d)(i.apiContext())
				}, v = "SET_ACCOUNT_MANAGER_MODAL_DATA";
			var y;
			! function(e) {
				e.CommentMoreReplies = "comment_more_replies", e.CommentsScroll = "comments_scroll", e.FeedPost = "feed_post", e.FeedScroll = "feed_scroll", e.GeoSignupUpsell = "geo_signup_upsell", e.HeaderLogin = "header_login", e.HeaderSignup = "header_signup", e.Hide = "hide", e.IdCard = "id_card", e.Comments = "comments", e.NotificationsInbox = "notifications_inbox", e.Post = "post", e.PromoBanner = "promo", e.Reply = "reply", e.Report = "report", e.SubredditLeaderboard = "subreddit_leaderboard", e.Save = "save", e.Subscribe = "subscribe", e.Vote = "vote", e.UserProfile = "user_profile"
			}(y || (y = {}));
			const E = Object(n.a)(v),
				S = [y.CommentMoreReplies, y.GeoSignupUpsell]
		},
		"./src/reddit/actions/notificationBanner.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "NOTIFICATION_BANNER_SET",
				s = "NOTIFICATION_BANNER_DISMISSED",
				o = Object(n.a)(r),
				d = Object(n.a)(s)
		},
		"./src/reddit/actions/otherDiscussions/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return r
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			}));
			var n = i("./src/lib/constants/index.ts");
			const r = e => e.includes(`/${n.Nb.DUPLICATES}/`),
				s = e => e.replace("/comments/", "/duplicates/"),
				o = "OTHER_DISCUSSIONS_POSTS_FAILED",
				d = "OTHER_DISCUSSIONS_POSTS_LOADED",
				a = "OTHER_DISCUSSIONS_POSTS_PENDING"
		},
		"./src/reddit/actions/overlayEvents.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "OVERLAY_EVENTS__MOUSE_CLICK",
				s = "OVERLAY_EVENTS__ESCAPE_PRESSED",
				o = "OVERLAY_EVENTS__WINDOW_RESIZED",
				d = Object(n.a)(s),
				a = Object(n.a)(r),
				l = Object(n.a)(o)
		},
		"./src/reddit/actions/pages/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "d", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "h", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			}));
			const n = "PAGE__COLLECTIONCOMMENTSPAGE_LOADED_FULL",
				r = "PAGE__COLLECTIONCOMMENTSPAGE_PENDING",
				s = "PAGE__COLLECTIONCOMMENTSPAGE_LOADED",
				o = "PAGE__COLLECTIONCOMMENTSPAGE_FAILED",
				d = "PAGE__COMMENTSPAGE_PENDING",
				a = "PAGE__COMMENTSPAGE_LOADED",
				l = "PAGE__COMMENTSPAGE_FAILED",
				u = "PAGE__COMMENTSPAGE_LOADED_FULL",
				c = "PAGE__COMMENTSPAGE_RESET_LOADED_FULL"
		},
		"./src/reddit/actions/pages/countrySite/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "g", (function() {
				return o
			})), i.d(t, "f", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			}));
			const n = "PAGE__COUNTRYSITE_HOME_FEED_PENDING",
				r = "PAGE__COUNTRYSITE_HOME_FEED_LOADED",
				s = "PAGE__COUNTRYSITE_HOME_FEED_FAILED",
				o = "COUNTRYSITE__MORE_POSTS_PENDING",
				d = "COUNTRYSITE__MORE_POSTS_LOADED",
				a = "COUNTRYSITE__MORE_POSTS_FAILED",
				l = "(countrysite)"
		},
		"./src/reddit/actions/pages/profileComments/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return n
			})), i.d(t, "e", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			}));
			const n = "PAGE__PROFILE_COMMENTS_PENDING",
				r = "PAGE__PROFILE_COMMENTS_LOADED",
				s = "PAGE__PROFILE_COMMENTS_FAILED",
				o = "PROFILE_COMMENTS__MORE_ITEMS_PENDING",
				d = "PROFILE_COMMENTS__MORE_ITEMS_LOADED",
				a = "PROFILE_COMMENTS__MORE_ITEMS_FAILED"
		},
		"./src/reddit/actions/pages/profileOverview/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return n
			})), i.d(t, "e", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			}));
			const n = "PAGE__PROFILE_OVERVIEW_CONVERSATIONS_PENDING",
				r = "PAGE__PROFILE_OVERVIEW_CONVERSATIONS_LOADED",
				s = "PAGE__PROFILE_OVERVIEW_CONVERSATIONS_FAILED",
				o = "PAGE__PROFILE_OVERVIEW_CHRONO_PENDING",
				d = "PAGE__PROFILE_OVERVIEW_CHRONO_LOADED",
				a = "PAGE__PROFILE_OVERVIEW_CHRONO_FAILED"
		},
		"./src/reddit/actions/pages/profilePrivate/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "h", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "i", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			}));
			const n = 25,
				r = "PAGE__PROFILE_PRIVATE_PENDING",
				s = "PAGE__PROFILE_PRIVATE_MIXED_LOADED",
				o = "PAGE__PROFILE_PRIVATE_POSTS_LOADED",
				d = "PAGE__PROFILE_PRIVATE_FAILED",
				a = "MORE__PROFILE_PRIVATE_PENDING",
				l = "MORE__PROFILE_PRIVATE_MIXED_LOADED",
				u = "MORE__PROFILE_PRIVATE_POSTS_LOADED",
				c = "MORE__PROFILE_PRIVATE_FAILED"
		},
		"./src/reddit/actions/pages/profileShared.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return m
			})), i.d(t, "a", (function() {
				return p
			})), i.d(t, "c", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/defaults.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/pick.js"),
				o = i.n(s),
				d = i("./src/reddit/actions/platform.ts"),
				a = i("./src/reddit/actions/profile/index.ts"),
				l = i("./src/reddit/actions/trophyCase.ts"),
				u = i("./src/reddit/selectors/profile.ts"),
				c = i("./src/lib/constants/index.ts");
			const _ = {
				sort: c.Eb,
				t: c.Fb
			};

			function m(e) {
				return r()(o()(e, ["t", "sort"]), _)
			}

			function p(e, t) {
				return m(t)
			}
			const h = e => async (t, i, n) => {
				const r = [t(f(e)), t(b(e)), t(Object(a.g)(e))];
				await Promise.all(r)
			}, f = e => async (t, i, n) => {
				const r = Object(u.m)(i(), e);
				await t(l.b(e, r))
			}, b = e => async (t, i, n) => {
				const r = Object(u.q)(i(), {
					profileName: e
				});
				t(d.m({
					title: r
				})), await t(a.b(e))
			}
		},
		"./src/reddit/actions/pages/search/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return O
			})), i.d(t, "c", (function() {
				return I
			})), i.d(t, "a", (function() {
				return R
			})), i.d(t, "d", (function() {
				return A
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/lodash/isEmpty.js"),
				s = i.n(r),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/makeActionCreator/index.ts"),
				a = i("./src/lib/makeSearchKey/index.ts"),
				l = i("./src/reddit/actions/ads/index.ts"),
				u = i("./src/reddit/actions/communityFlairs/index.ts"),
				c = (i("./src/reddit/actions/searchQueryId/index.tsx"), i("./src/reddit/actions/toaster.ts")),
				_ = i("./src/reddit/endpoints/page/search/index.ts"),
				m = i("./src/reddit/helpers/correlationIdTracker.ts"),
				p = i("./src/reddit/helpers/search/getQueryWithNsfwSetting.ts"),
				h = i("./src/reddit/helpers/search/searchQueryId.ts"),
				f = i("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				b = i("./src/reddit/helpers/timeApiRoute/index.ts"),
				g = i("./src/reddit/models/Toast/index.ts"),
				w = i("./src/reddit/reducers/sidebarPromotedPosts/models/index.ts"),
				v = i("./src/reddit/selectors/experiments/searchQueryAligment.ts"),
				y = i("./src/reddit/selectors/experiments/serpRedesignLayout.ts"),
				E = i("./src/reddit/selectors/subreddit.ts"),
				S = i("./src/reddit/selectors/telemetry.ts"),
				T = i("./src/reddit/selectors/user.ts");
			const O = "SEARCH__SEARCH_PENDING",
				I = "SEARCH__SEARCH_RESULTS_RECEIVED",
				R = "SEARCH__SEARCH_FAILED",
				F = Object(d.a)(O),
				N = Object(d.a)(I),
				C = Object(d.a)(R),
				j = e => !s()(e),
				A = (e, t, i, r, s) => async (d, O, {
					gqlContext: I
				}) => {
					const R = O(),
						x = Object(y.a)(R),
						{
							q: D
						} = t,
						P = !!D && o.Ob.some(e => D.includes(`${e}:`)),
						L = `error-${e}`,
						{
							type: k
						} = t,
						B = Object(T.ib)(R),
						M = !!t.source && [a.a.PromotedTrend, a.a.Trending].includes(t.source),
						U = {
							key: e,
							type: k,
							meta: R.meta,
							searchQuery: D,
							subredditName: i,
							username: r
						};
					if (![{
							contentType: o.bc.Posts,
							addlReq: !(!i || !t.restrict_sr) || P,
							stateKey: "postOrder"
						}, {
							contentType: o.bc.Subreddits,
							addlReq: !1,
							stateKey: "communityOrder"
						}, {
							contentType: o.bc.Users,
							addlReq: !1,
							stateKey: "authorOrder"
						}, {
							contentType: o.bc.Comments,
							addlReq: !1,
							stateKey: "commentOrder"
						}].filter(({
							contentType: i,
							addlReq: n,
							stateKey: r
						}) => {
							let s = t.type.indexOf(i) > -1 || n;
							if (s) {
								const t = R.listings[r],
									i = "postOrder" === r ? t.ids : t.identifiers,
									n = Boolean(i[e]),
									o = Boolean(t.api.error[e]);
								s = !(Boolean(t.api.pending[e]) || n && !o)
							}
							return s
						}).length) return void(R.sidebarPromotedPosts.firstFetch || window.addEventListener("load", () => {
						d(Object(l.b)(w.a.SEARCH_RESULTS))
					}));
					d(F({
						key: e,
						type: k
					}));
					const G = await Object(b.a)("searchResults", (function() {
						const e = i ? [i] : void 0,
							n = !Object(p.a)(B, "1" === t.include_over_18, M, "1" === t.sr_nsfw),
							r = (e || s ? t.type.filter(e => [o.bc.Posts, o.bc.Comments].includes(e)) : t.type).join(","),
							d = {
								...t,
								q: t.q,
								type: r,
								b: !P,
								include_over_18: n ? "1" : ""
							},
							a = Object(S.ib)(R.platform.currentPage);
						let l;
						return l = Object(v.a)(R) ? h.a.get(d, f.a.SERP) : Object(m.c)(m.a.SearchResults) || Object(m.e)(m.a.SearchResults), Object(_.a)({
							context: I(),
							isSerpRedesignLayoutM3: x,
							multiredditLabel: s,
							nsfw: n,
							options: d,
							queryId: l,
							structureType: a,
							subredditNames: e,
							tokens: {
								authors: null,
								comments: null,
								communities: null,
								posts: null
							}
						})
					}));
					G.ok ? function(e) {
						d(N({
							...U,
							...e
						})), d(c.g(L)), d(Object(l.b)(w.a.SEARCH_RESULTS));
						const t = i && Object(E.D)(O(), i);
						if (t) {
							const i = Object(u.c)(e.posts, t),
								n = Object(u.b)(e.structuredStyles || {}),
								r = (n ? Object(u.d)(n) : []).concat(i);
							d(Object(u.a)(r, t))
						}
					}(G.body) : function(o) {
						var a, l, u;
						const _ = o.body;
						let m = n.fbt._("Sorry, we couldn't load search results.", null, {
							hk: "QgweL"
						});
						if (j(o.body)) {
							const e = null === (a = o.body.success) || void 0 === a ? void 0 : a.posts,
								t = null === (l = o.body.success) || void 0 === l ? void 0 : l.communities,
								i = null === (u = o.body.success) || void 0 === u ? void 0 : u.authors;
							(e || t || i) && (d(N({
								...U,
								..._
							})), e || t ? e || i ? t || i ? e ? t ? i || (m = n.fbt._("Sorry, we couldn't load people results.", null, {
								hk: "2edP87"
							})) : m = n.fbt._("Sorry, we couldn't load communities results.", null, {
								hk: "1wHLv9"
							}) : m = n.fbt._("Sorry, we couldn't load posts results.", null, {
								hk: "2GDoBf"
							}) : m = n.fbt._("Sorry, we couldn't load communities and people results.", null, {
								hk: "4jKd6q"
							}) : m = n.fbt._("Sorry, we couldn't load posts and people results.", null, {
								hk: "bG58f"
							}) : m = n.fbt._("Sorry, we couldn't load posts and communities results.", null, {
								hk: "4babOD"
							}))
						}
						d(C({
							key: e,
							error: o.error,
							type: k,
							...o.body
						})), d(c.f({
							id: L,
							kind: g.b.Error,
							text: m,
							buttonText: n.fbt._("Retry", null, {
								hk: "jld4g"
							}),
							buttonAction: A(e, t, i, r, s)
						}))
					}(G)
				}
		},
		"./src/reddit/actions/pages/topic.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "TOPIC_DATA_PENDING", (function() {
				return w
			})), i.d(t, "TOPIC_DATA_LOADED", (function() {
				return v
			})), i.d(t, "TOPIC_DATA_FAILED", (function() {
				return y
			})), i.d(t, "topicPending", (function() {
				return E
			})), i.d(t, "topicLoaded", (function() {
				return S
			})), i.d(t, "topicFailed", (function() {
				return T
			})), i.d(t, "MORE_POSTS_PENDING", (function() {
				return O
			})), i.d(t, "MORE_POSTS_LOADED", (function() {
				return I
			})), i.d(t, "MORE_POSTS_FAILED", (function() {
				return R
			})), i.d(t, "morePostsPending", (function() {
				return F
			})), i.d(t, "morePostsLoaded", (function() {
				return N
			})), i.d(t, "morePostsFailed", (function() {
				return C
			})), i.d(t, "fetchTopicPage", (function() {
				return x
			})), i.d(t, "topicPageRequested", (function() {
				return D
			})), i.d(t, "morePostsRequested", (function() {
				return P
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/lib/makeListingKey/index.ts"),
				s = i("./src/reddit/actions/platform.ts"),
				o = i("./src/reddit/constants/listings.ts"),
				d = i("./src/lib/makeGqlRequest/index.ts"),
				a = i("./src/redditGQL/operations/TopicBySlug.json");
			var l = i("./src/reddit/helpers/canonicalUrls.ts"),
				u = i("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts"),
				c = i("./src/reddit/helpers/graphql/normalizePreferencesFromGql/index.ts"),
				_ = i("./src/reddit/helpers/graphql/normalizeSubredditAboutFromGql/index.ts"),
				m = i("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts"),
				p = i("./src/reddit/helpers/graphql/normalizeUserFromGql/index.ts"),
				h = i("./src/reddit/models/Post/index.ts"),
				f = i("./src/reddit/selectors/listings.ts"),
				b = i("./src/reddit/selectors/topic.ts"),
				g = i("./src/reddit/selectors/user.ts");
			const w = "TOPIC_PAGE__DATA_PENDING",
				v = "TOPIC_PAGE__DATA_LOADED",
				y = "TOPIC_PAGE__DATA_FAILED",
				E = Object(n.a)(w),
				S = Object(n.a)(v),
				T = Object(n.a)(y),
				O = "TOPIC_PAGE__MORE_POSTS_PENDING",
				I = "TOPIC_PAGE__MORE_POSTS_LOADED",
				R = "TOPIC_PAGE__MORE_POSTS_FAILED",
				F = Object(n.a)(O),
				N = Object(n.a)(I),
				C = Object(n.a)(R),
				j = e => {
					const t = [];
					if (e.relatedTopics && e.relatedTopics.edges)
						for (const {
								node: i
							} of e.relatedTopics.edges) t.push(A(i));
					return {
						...e,
						relatedTopics: t
					}
				},
				A = e => {
					const {
						id: t,
						name: i,
						namePlural: n,
						slug: r,
						wikidataId: s
					} = e;
					return {
						id: t,
						name: i,
						namePlural: n,
						slug: r,
						url: `/t/${e.slug}/`,
						wikidataId: s
					}
				},
				x = async (e, t, i) => {
					const n = await ((e, t) => Object(d.a)(e, {
						...a,
						variables: t
					}))(e, {
						firstPosts: 20,
						firstRelatedTopics: 1e3,
						firstSubreddits: 30,
						includeIdentity: !1,
						includePosts: !0,
						includeRelationships: !0,
						includeSubreddits: !0,
						includeTopic: !0,
						topicSlug: t,
						...i
					});
					if (!n.ok) throw n;
					return (e => {
						const t = {},
							i = [],
							n = {},
							r = {};
						if (!e.topicBySlug) return;
						const s = e.topicBySlug.posts && e.topicBySlug.posts.edges || [];
						for (const c of s) {
							const e = c && c.node;
							if (e && (i.push(e.id), t[e.id] = Object(u.f)(e), Object(h.n)(e))) {
								const {
									subreddit: t
								} = e;
								n[t.id] = Object(m.a)(t)
							}
						}
						const o = [],
							d = e.topicBySlug.subreddits && e.topicBySlug.subreddits.edges || [];
						for (const u of d) {
							const e = u && u.node;
							if (e && e.id) {
								n[e.id] = Object(m.a)(e);
								const t = Object(_.a)(e)[e.id];
								t && (r[e.id] = t, o.push(e.id))
							}
						}
						const a = (e.topicBySlug.parentRelationships || []).map(j),
							l = (e.topicBySlug.childRelationships || []).map(j),
							f = (e.topicBySlug.siblingRelationships || []).map(j),
							b = {
								childRelationships: l,
								hasPosts: !!Object.keys(t).length,
								hasSubreddits: !!o.length,
								parentRelationships: a,
								siblingRelationships: f,
								subredditIds: o,
								...A(e.topicBySlug)
							},
							g = b.id ? {
								[b.id]: b
							} : void 0,
							w = e.topicBySlug.posts && e.topicBySlug.posts.pageInfo,
							v = w && w.hasNextPage ? w.endCursor : void 0;
						let y, E;
						return e.identity && (y = Object(p.a)(e.identity), E = Object(c.a)(e.identity.preferences, e.identity.interactions)), {
							account: y,
							preferences: E,
							postIds: i,
							posts: t,
							subredditAboutInfo: r,
							subreddits: n,
							token: v,
							topics: g
						}
					})(n.body.data)
				}, D = (e, t) => async (i, n, {
					gqlContext: d
				}) => {
					const a = n();
					if (Object(l.f)(a, i, e)) return;
					const u = e.params.topicSlug,
						c = Object(r.a)(o.b.Topic, null, {
							...e.params,
							topicSlug: u
						}),
						_ = Object(f.c)(a, {
							listingKey: c
						}),
						m = Object(f.d)(a, {
							listingKey: c
						}),
						p = !!a.listings.postOrder.ids[c];
					if (m || p && !_ && !t) {
						if (p) {
							const e = Object(b.f)(n(), {
								topicSlug: u
							});
							e && i(s.m({
								title: e
							}))
						}
						return
					}
					let h;
					i(E({
						key: c
					}));
					try {
						h = await x(d(), u, {
							includeIdentity: Object(g.X)(a) && !a.user.account
						})
					} catch (v) {
						const e = v.error;
						if (e.fields && e.fields.some(e => "Topic not found" === e.msg)) return void i(s.n(404));
						throw i(T({
							key: c,
							error: e
						})), i(s.n(v.status || 500)), new Error("Topic page fetching failed: upstream service error")
					}
					if (!h || !(e => !!(e && e.topics && Object.keys(e.topics).length > 0 && (Object.keys(e.posts).length > 0 || Object.keys(e.subreddits).length > 0)))(h)) return void i(s.n(500));
					i(S({
						...h,
						key: c,
						meta: a.meta
					}));
					const w = Object(b.f)(n(), {
						topicSlug: u
					});
					w && i(s.m({
						title: w
					}))
				}, P = e => async (t, i, {
					gqlContext: n
				}) => {
					const s = i(),
						d = e.topicSlug,
						a = Object(r.a)(o.b.Topic, null, e),
						l = Object(f.g)(s, {
							listingKey: a
						});
					if (!l) return;
					const u = Object(f.d)(s, {
							listingKey: a
						}),
						c = Object(f.e)(s, {
							listingKey: a,
							token: l.token
						});
					if (u || c) return;
					let _;
					t(F({
						key: a
					}));
					try {
						_ = await x(n(), d, {
							afterPosts: l.token,
							includeRelationships: !1,
							includeSubreddits: !1,
							includeTopic: !1
						})
					} catch (m) {
						return void t(C({
							key: a,
							error: m
						}))
					}
					_ && t(N({
						..._,
						key: a,
						fetchedToken: l.token,
						meta: s.meta
					}))
				}
		},
		"./src/reddit/actions/platform.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return w
			})), i.d(t, "c", (function() {
				return v
			})), i.d(t, "e", (function() {
				return y
			})), i.d(t, "d", (function() {
				return E
			})), i.d(t, "f", (function() {
				return S
			})), i.d(t, "g", (function() {
				return T
			})), i.d(t, "a", (function() {
				return O
			})), i.d(t, "i", (function() {
				return I
			})), i.d(t, "j", (function() {
				return R
			})), i.d(t, "n", (function() {
				return C
			})), i.d(t, "o", (function() {
				return j
			})), i.d(t, "m", (function() {
				return A
			})), i.d(t, "l", (function() {
				return x
			})), i.d(t, "k", (function() {
				return D
			})), i.d(t, "h", (function() {
				return P
			}));
			var n = i("./src/lib/areUrlsEqual/index.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/logs/errors.ts"),
				o = i("./src/lib/makeActionCreator/index.ts"),
				d = i("./src/lib/matchRoute/index.ts"),
				a = (i("./src/lib/addQueryParams/index.ts"), i("./src/lib/isEqualWithoutKey/index.ts")),
				l = i("./src/reddit/actions/tracing.ts"),
				u = i("./src/reddit/constants/experiments.ts"),
				c = i("./src/reddit/constants/history.ts"),
				_ = i("./src/reddit/constants/listings.ts"),
				m = i("./src/reddit/helpers/installGoodVisitFeedSearchTracker/index.ts"),
				p = i("./src/reddit/helpers/routeKey/index.ts"),
				h = i("./src/reddit/selectors/experiments/postSeo.ts");
			i("./node_modules/core-js/modules/web.dom.iterable.js"), i("./src/reddit/helpers/chooseVariant/index.ts");
			new Set([r.Nb.COMMENTS, r.Nb.INDEX, r.Nb.LISTING, r.Nb.PROFILE_COMMENTS, r.Nb.PROFILE_OVERVIEW, r.Nb.PROFILE_POSTS, r.Nb.SUBREDDIT]);
			var f = i("./src/reddit/selectors/platform.ts"),
				b = i("./src/reddit/selectors/telemetry.ts"),
				g = i("./src/reddit/singleton/tracing/index.ts");
			const w = "PLATFORM__HISTORY_LOCATION_SET",
				v = "PLATFORM__INITIAL_REFERRER_SET",
				y = "PLATFORM__NAVIGATION_CONFIRMATION_REQUESTED",
				E = "PLATFORM__NAVIGATION_CONFIRMATION_DISCARDED",
				S = "PLATFORM__PAGE_META_SET",
				T = "PLATFORM__PAGE_STATUS_SET",
				O = "PLATFORM__FEED_CORR_ID_SET",
				I = e => async (t, i, n) => {
					const {
						currentPage: r
					} = i().platform;
					if (!r) return;
					const s = Object(d.a)(r.url, e, i());
					s && s.route.action(s.match)(t, i, n)
				}, R = (e, t, i) => async (s, o, d) => {
					s(((e, t, i) => (s, o, d) => {
						var a, l;
						const w = o().platform.currentPage;
						(!i || i.route.chunk === r.s.SUBREDDIT && _.a.has(i.match.params.subredditName.toLowerCase())) && window.location.replace(`https://www.reddit.com${e.pathname}${e.search}`);
						const v = i ? Object(p.c)(i, o()).listingKey : null,
							{
								user: y
							} = o(),
							E = i && i.match && i.match.queryParams,
							S = E && E[`experiment_${u.ke}`];
						Object(h.g)(o()), e.pathname.split("/").some(e => "comments" === e), Object(f.i)(o());
						s(F({
							action: t,
							listingKey: v,
							location: e,
							routeMatch: i,
							user: y
						})), (null === (a = null == w ? void 0 : w.locationState) || void 0 === a ? void 0 : a.clickId) && m.d[w.locationState.clickId] && !m.d[w.locationState.clickId].completed && Object(m.b)(w.locationState.clickId);
						const T = i && Object(b.x)(i);
						(null === (l = null == e ? void 0 : e.state) || void 0 === l ? void 0 : l.clickId) && (m.d[e.state.clickId] ? Object(m.c)(e.state.clickId) : i && T && r.O.has(T) && r.N.has(e.state.clickSource) && Object(m.a)(e.state.clickId, e.state.clickSource, o, i, e.state[c.b.ClickSourceFeedCorrelationId], w)), w && Object(n.a)(w.url, e) || g.b.isEnabled
					})(e, t, i)), await s(((e, t) => async (i, r, s) => {
						var o, d;
						const u = r().platform.currentPage;
						if (u && Object(n.a)(null == u ? void 0 : u.url, e)) return;
						let c = !1;
						if (g.b.isEnabled) {
							if (Object(a.a)(null !== (d = null === (o = null == u ? void 0 : u.locationState) || void 0 === o ? void 0 : o.closeLocation) && void 0 !== d ? d : {}, e)) {
								const e = g.b.createRootSpanId();
								g.b.setParent(e), i(Object(l.b)(e.spanId))
							} else c = !0
						}
						if (t) {
							const {
								match: e
							} = t;
							if (c) {
								const n = g.b.createRootSpanId();
								g.b.setParent(n), i(Object(l.b)(n.spanId));
								const o = null == t ? void 0 : t.route.action.name,
									d = (null == t ? void 0 : t.route) ? `${o}_${t.route.meta.name}` : "",
									a = {
										[g.a.HttpUrl]: e.url
									};
								await g.b.recordRequest(d, a, async () => {
									await t.route.action(e)(i, r, s)
								})
							} else await t.route.action(e)(i, r, s)
						}
					})(e, i))
				}, F = Object(o.a)(w), N = (Object(o.a)(v), Object(o.a)(S)), C = Object(o.a)(T), j = Object(o.a)(O), A = e => async (t, i, n) => {
					const r = i(),
						{
							currentPage: s
						} = r.platform;
					if (!s) return;
					const {
						key: o
					} = s;
					await t(N({
						key: o,
						meta: e
					}))
				}, x = Object(o.a)(y), D = Object(o.a)(E), P = () => async (e, t, i) => {
					if (window !== window.parent) {
						Object(s.sendRavenError)(i.apiContext(), {
							extra: {
								errorType: r.t.NOT_ALLOWED_ACCESS,
								value: "Page was unexpectedly loaded inside iframe"
							}
						});
						try {
							window.top.location.href = window.location.href
						} catch (n) {}
					}
				}
		},
		"./src/reddit/actions/post.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return be
			})), i.d(t, "e", (function() {
				return ge
			})), i.d(t, "k", (function() {
				return we
			})), i.d(t, "j", (function() {
				return ve
			})), i.d(t, "x", (function() {
				return ye
			})), i.d(t, "o", (function() {
				return Se
			})), i.d(t, "S", (function() {
				return Oe
			})), i.d(t, "h", (function() {
				return Ie
			})), i.d(t, "H", (function() {
				return Re
			})), i.d(t, "i", (function() {
				return Fe
			})), i.d(t, "I", (function() {
				return Ne
			})), i.d(t, "eb", (function() {
				return Ce
			})), i.d(t, "U", (function() {
				return je
			})), i.d(t, "jb", (function() {
				return xe
			})), i.d(t, "w", (function() {
				return De
			})), i.d(t, "B", (function() {
				return ke
			})), i.d(t, "O", (function() {
				return Be
			})), i.d(t, "P", (function() {
				return Me
			})), i.d(t, "p", (function() {
				return Ge
			})), i.d(t, "z", (function() {
				return Ve
			})), i.d(t, "Q", (function() {
				return He
			})), i.d(t, "s", (function() {
				return We
			})), i.d(t, "T", (function() {
				return ze
			})), i.d(t, "N", (function() {
				return Ke
			})), i.d(t, "E", (function() {
				return Ye
			})), i.d(t, "db", (function() {
				return $e
			})), i.d(t, "J", (function() {
				return Qe
			})), i.d(t, "G", (function() {
				return Je
			})), i.d(t, "v", (function() {
				return Xe
			})), i.d(t, "fb", (function() {
				return Ze
			})), i.d(t, "gb", (function() {
				return et
			})), i.d(t, "hb", (function() {
				return tt
			})), i.d(t, "D", (function() {
				return nt
			})), i.d(t, "l", (function() {
				return rt
			})), i.d(t, "t", (function() {
				return ot
			})), i.d(t, "r", (function() {
				return dt
			})), i.d(t, "V", (function() {
				return at
			})), i.d(t, "M", (function() {
				return lt
			})), i.d(t, "R", (function() {
				return ut
			})), i.d(t, "A", (function() {
				return ct
			})), i.d(t, "L", (function() {
				return _t
			})), i.d(t, "m", (function() {
				return mt
			})), i.d(t, "y", (function() {
				return ht
			})), i.d(t, "W", (function() {
				return ft
			})), i.d(t, "g", (function() {
				return bt
			})), i.d(t, "F", (function() {
				return gt
			})), i.d(t, "c", (function() {
				return wt
			})), i.d(t, "u", (function() {
				return vt
			})), i.d(t, "n", (function() {
				return yt
			})), i.d(t, "b", (function() {
				return Et
			})), i.d(t, "f", (function() {
				return St
			})), i.d(t, "X", (function() {
				return Tt
			})), i.d(t, "C", (function() {
				return It
			})), i.d(t, "ib", (function() {
				return Rt
			})), i.d(t, "a", (function() {
				return Ft
			})), i.d(t, "q", (function() {
				return Nt
			})), i.d(t, "K", (function() {
				return jt
			})), i.d(t, "cb", (function() {
				return At
			})), i.d(t, "ab", (function() {
				return xt
			})), i.d(t, "Y", (function() {
				return Dt
			})), i.d(t, "bb", (function() {
				return Pt
			})), i.d(t, "Z", (function() {
				return Lt
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/config.ts"),
				r = i("./node_modules/fbt/lib/FbtPublic.js"),
				s = i("./node_modules/history/esm/history.js"),
				o = i("./node_modules/js-cookie/src/js.cookie.js"),
				d = i.n(o),
				a = i("./src/lib/addQueryParams/index.ts"),
				l = i("./src/lib/constants/index.ts"),
				u = i("./src/lib/cookieConsent/index.ts"),
				c = i("./src/lib/copyToClipboard/index.ts"),
				_ = i("./src/lib/makeActionCreator/index.ts"),
				m = i("./src/reddit/actions/ads/constants.ts"),
				p = i("./src/reddit/actions/login.ts"),
				h = i("./src/reddit/actions/platform.ts"),
				f = i("./src/reddit/actions/survey/index.ts"),
				b = i("./src/reddit/constants/adEvents.ts"),
				g = i("./src/reddit/helpers/getVendorMetadata.ts"),
				w = i("./src/reddit/helpers/pixels.ts"),
				v = i("./src/reddit/selectors/posts.ts"),
				y = i("./src/reddit/actions/unload/constants.ts");
			let E = !1;
			Object(_.a)(y.b);
			const S = (e, t, i) => {
				if (window && !E && (window.addEventListener("beforeunload", () => (e => {
						y.a.forEach(({
							post: t
						}) => {
							const i = Object(v.b)(e(), t.id),
								n = Object(g.a)(t.id, i, b.a.Unload);
							Object(w.a)(t, b.a.Unload, n)
						})
					})(i)), E = !0), y.c.has(e.id) || e.isBlank) return;
				y.c.add(e.id);
				const n = {
					post: e,
					unloadTimer: window.setTimeout(() => {
						t(Ve(e, b.a.Unload))
					}, y.d)
				};
				if (y.a.push(n), y.a.length > 5) {
					const e = y.a.shift();
					t(Ve(e.post, b.a.Unload)), clearTimeout(e.unloadTimer)
				}
			};
			var T = i("./src/reddit/actions/video.ts"),
				O = i("./src/reddit/actions/vote.ts"),
				I = i("./src/reddit/constants/cookie.ts"),
				R = i("./src/reddit/constants/experiments.ts"),
				F = i("./src/reddit/constants/history.ts"),
				N = i("./src/reddit/constants/posts.ts"),
				C = i("./src/reddit/helpers/clickSourceData/index.ts"),
				j = i("./src/reddit/helpers/featureThrottling/store/index.ts"),
				A = i("./src/reddit/helpers/getPostFromRouteMatch/index.ts"),
				x = i("./src/reddit/helpers/isPost.ts"),
				D = i("./src/reddit/helpers/overlay/index.ts"),
				P = i("./src/reddit/helpers/path/index.ts"),
				L = i("./src/reddit/helpers/publicAccessNetwork/index.ts"),
				k = i("./src/reddit/helpers/trackers/blockingInterstitial.ts"),
				B = i("./src/reddit/hooks/useSessionBlockingModal.tsx"),
				M = i("./src/reddit/models/Media/index.ts"),
				U = i("./src/reddit/models/Prediction/Tournament/index.ts"),
				G = i("./src/reddit/endpoints/moderator/snoozableReport.ts"),
				q = i("./src/reddit/endpoints/post/index.tsx"),
				V = i("./src/lib/makeGqlRequest/index.ts"),
				H = i("./src/redditGQL/operations/UpdatePostFollowState.json");
			var W = i("./src/redditGQL/operations/RichTextPostContent.json");
			var z = i("./src/lib/makeListingKey/index.ts"),
				K = i("./node_modules/react-router-redux/es/index.js"),
				Y = i("./src/reddit/actions/gold/tooltips.ts"),
				$ = i("./src/reddit/actions/modal.ts"),
				Q = i("./src/reddit/actions/toaster.ts"),
				J = i("./src/reddit/constants/localStorage.ts"),
				X = i("./src/reddit/constants/modals.ts"),
				Z = i("./src/reddit/endpoints/page/commentsPage.ts"),
				ee = i("./src/reddit/helpers/localStorage/index.ts"),
				te = i("./src/reddit/helpers/onboarding/postsConsumedWeekly.ts"),
				ie = i("./src/reddit/helpers/trackers/post.ts"),
				ne = i("./src/reddit/models/Flair/index.ts"),
				re = i("./src/reddit/models/Post/index.ts"),
				se = i("./src/reddit/models/Reportable/index.ts"),
				oe = i("./src/reddit/models/Toast/index.ts"),
				de = i("./src/reddit/models/User/index.ts"),
				ae = i("./src/reddit/models/Vote/index.ts"),
				le = i("./src/reddit/selectors/experiments/avatarsInComments.ts"),
				ue = i("./src/reddit/selectors/experiments/d2xGqlDistinguish.ts"),
				ce = i("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts"),
				_e = i("./src/reddit/selectors/experiments/survey.ts"),
				me = i("./src/reddit/selectors/platform.ts"),
				pe = i("./src/reddit/selectors/user.ts"),
				he = i("./src/reddit/selectors/media.ts"),
				fe = i("./src/telemetry/index.ts");
			const be = "POST__EXPANDED_TOGGLED",
				ge = "POST__FOCUS_CHANGED",
				we = "POSTS__MUTATED",
				ve = "POSTS_LOADED",
				ye = Object(_.a)(be),
				Ee = (Object(_.a)(ge), Object(_.a)(ve)),
				Se = "POST__STICKY_POST_SUCCESS",
				Te = Object(_.a)(Se),
				Oe = Object(_.a)(we),
				Ie = "NUM_COMMENTS_ADDED",
				Re = Object(_.a)(Ie),
				Fe = "NUM_VOTE_ADDED",
				Ne = Object(_.a)(Fe),
				Ce = (e, t, i, n) => async (s, o, {
					apiContext: d
				}) => {
					const a = o().posts.models[e];
					if (!a) return;
					if (!Object(pe.O)(o())) return s(Object($.k)({
						actionSource: $.a.Hide,
						redirectUrl: a.permalink
					})), void s(Object(p.j)());
					let l;
					if (s(Oe({
							[e]: {
								hidden: t
							}
						})), (l = t ? await Object(q.g)(d(), e) : await Object(q.s)(d(), e)).ok) {
						if (n) {
							const n = t ? r.fbt._("Post hidden successfully.", null, {
									hk: "a4K6a"
								}) : r.fbt._("Post unhidden successfully.", null, {
									hk: "xJgPP"
								}),
								o = Object(Q.e)(n, oe.b.Undo, r.fbt._("Undo", null, {
									hk: "46OwLP"
								}), Ce(e, !t, i, !1));
							s(Object(Q.f)(o))
						}
					} else if (s(Oe({
							[e]: {
								hidden: !t
							}
						})), n) {
						const e = Object(Q.e)(r.fbt._("Something went wrong", null, {
							hk: "22u7ha"
						}), oe.b.Error);
						s(Object(Q.f)(e))
					}
				}, je = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i().posts.models[e];
					if (!s) return;
					if (!Object(pe.O)(i())) return t(Object(p.j)()), void t(Object($.k)({
						actionSource: $.a.Save,
						redirectUrl: s.permalink
					}));
					const o = s.saved ? q.w : q.n;
					if (t(Oe({
							[e]: {
								saved: !s.saved
							}
						})), (await o(n(), e)).ok) {
						const i = s.saved ? r.fbt._("Post unsaved successfully", null, {
								hk: "rrnyE"
							}) : r.fbt._("Post saved successfully", null, {
								hk: "3fAuAl"
							}),
							n = Object(Q.e)(i, oe.b.Undo, r.fbt._("Undo", null, {
								hk: "46OwLP"
							}), je(e));
						t(Object(Q.f)(n))
					} else t(Oe({
						[e]: {
							saved: s.saved
						}
					}))
				}, Ae = (e, t) => t().posts.models[e], xe = Object(O.a)(Ae, ae.a.upvoted), De = Object(O.a)(Ae, ae.a.downvoted), Pe = e => `viewing-${e}`, Le = {}, ke = () => async (e, t) => {
					const i = Object.keys(Le).filter(e => {
							var i;
							return !(null === (i = Ae(e, t)) || void 0 === i ? void 0 : i.isSponsored)
						}).sort((e, t) => Le[e] - Le[t]),
						n = i.length;
					n && e(Object(Y.a)(i[Math.floor(n / 2)]))
				}, Be = (e, t, i) => async (n, r) => {
					const s = r();
					ie.p(s, e, t, i), Le[e] = t || 0, fe.c.start(Pe(e))
				}, Me = (e, t, i, r) => async (s, o) => {
					delete Le[e];
					const d = o(),
						a = Pe(e);
					if (fe.c.has(a)) {
						const s = fe.c.end(`viewing-${e}`);
						!t && s > n.a.telemetry.postConsumedThreshold && (ie.b(d, e, s, i, r), Object(te.b)(Object(pe.p)(d)))
					}
				}, Ue = {
					[b.a.Impression]: m.d,
					[b.a.Click]: m.b,
					[b.a.ViewableImpression]: m.n,
					[b.a.GroupMViewable]: m.s,
					[b.a.VideoViewableImpression]: m.k,
					[b.a.VideoFullyViewableImpression]: m.e,
					[b.a.VideoStarted]: m.j,
					[b.a.VideoPlayedWithSound]: m.i,
					[b.a.VideoGroupMViewable]: m.g,
					[b.a.VideoWatchedSeconds3]: m.m,
					[b.a.VideoWatchedSeconds5]: m.m,
					[b.a.VideoWatchedSeconds10]: m.m,
					[b.a.VideoWatched25]: m.l,
					[b.a.VideoWatched50]: m.l,
					[b.a.VideoWatched75]: m.l,
					[b.a.VideoWatched95]: m.l,
					[b.a.VideoWatched100]: m.l,
					[b.a.VideoVendorFullyViewable50]: m.f,
					[b.a.VideoPlayedExpanded]: m.h,
					[b.a.Unload]: y.b,
					[b.a.VendorFullyInView]: m.w,
					[b.a.VendorFullyInViewSeconds5]: m.y,
					[b.a.VendorFullyInViewSeconds15]: m.x,
					[b.a.GalleryItemImpression]: m.c
				}, Ge = Object(_.b)(Ue), qe = (e, t) => async i => {
					i(Ve(e, t))
				}, Ve = (e, t, i) => async (n, r) => {
					const s = Object(v.b)(r(), e.id),
						o = Object(g.a)(e.id, s, t),
						d = Object(he.b)(r(), e.id);
					Ue[t] && n(Ge(String(t), {
						postId: e.id,
						vendorMetadata: o,
						eventType: i
					})), Object(w.a)(e, t, o, d)
				}, He = (e, t) => async (i, n) => {
					const r = e && e.media && "video" === e.media.type,
						s = [b.a.VendorFullyInView, b.a.VendorFullyInViewSeconds5, b.a.VendorFullyInViewSeconds15];
					if (r && t === b.a.VideoViewableImpression) i(Object(T.x)(e.id));
					else if (r && t === b.a.VideoFullyViewableImpression) i(Object(T.u)(e.id));
					else if (r && t === b.a.VideoGroupMViewable) i(Object(T.v)(e.id));
					else if (r && t === b.a.VideoVendorFullyViewable50) i(Object(T.w)(e.id));
					else if (!r || e.isSponsored || t !== b.a.Impression) {
						if (e.isSponsored)
							if (s.includes(t)) i(qe(e, t));
							else if (t !== b.a.GroupMViewable)
							if (t !== b.a.GalleryItemImpression) {
								if (t === b.a.Impression) return i((e => async (t, i) => {
									e.isSponsored && (t(Ve(e, b.a.Impression)), S(e, t, i))
								})(e)), void(e.isBlank || ie.o(n(), e.postId));
								i((e => async t => {
									e.isSponsored && t(Ve(e, b.a.ViewableImpression))
								})(e))
							} else {
								const r = Object(he.b)(n(), e.id);
								i(Ve(e, t, `Slide${r}`))
							}
						else i(qe(e, t))
					} else Object(_e.h)(n()) && i(Object(f.l)())
				}, We = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i(),
						o = s.posts.models[e],
						d = s.user.account ? s.user.account.displayText : null;
					o && (t(Oe({
						[e]: {
							approvedBy: d,
							bannedBy: null,
							isApproved: !0,
							isRemoved: !1,
							isSpam: !1,
							modNote: null,
							numReports: 0,
							modRemovalReason: null,
							modReasonBy: null
						}
					})), (await Object(q.a)(n(), e)).ok ? t(Object(Q.f)({
						kind: oe.b.SuccessMod,
						text: r.fbt._("post has been approved", null, {
							hk: "lSMdX"
						})
					})) : t(Oe({
						[e]: {
							approvedBy: null,
							bannedBy: o.bannedBy,
							isApproved: o.isApproved,
							isRemoved: o.isRemoved,
							isSpam: o.isSpam,
							modNote: o.modNote,
							numReports: o.numReports || null,
							modRemovalReason: o.modRemovalReason,
							modReasonBy: o.modReasonBy
						}
					})))
				}, ze = (e, t) => async (i, n, {
					apiContext: s
				}) => {
					const o = n(),
						d = o.posts.models[e],
						a = o.user.account ? o.user.account.displayText : null;
					return !(!d || !a) && (i(Oe({
						[e]: {
							approvedBy: null,
							bannedBy: a,
							isApproved: !1,
							isRemoved: !t,
							isSpam: t
						}
					})), (await Object(q.m)(s(), e, t)).ok ? (i(Object(Q.f)({
						kind: oe.b.SuccessCommunity,
						text: t ? r.fbt._("post has been marked as spam", null, {
							hk: "3L0Zxk"
						}) : r.fbt._("post has been removed", null, {
							hk: "20WbsG"
						})
					})), !0) : (i(Oe({
						[e]: {
							approvedBy: d.approvedBy,
							bannedBy: d.bannedBy,
							isApproved: d.isApproved,
							isRemoved: d.isRemoved,
							isSpam: d.isSpam
						}
					})), !1))
				}, Ke = (e, t, i) => async (n, s, {
					apiContext: o
				}) => {
					const d = s();
					if (d.posts.models[e])
						if (n(Oe({
								[e]: {
									hidden: !0
								}
							})), (await Object(q.b)(o(), e)).ok) {
							const e = Object(Q.e)(r.fbt._("Post deleted successfully.", null, {
								hk: "1sQ4Xf"
							}), oe.b.SuccessMod);
							if (i) n(Object(K.b)(t.state[F.b.CloseLocation]));
							else {
								const e = Object(me.e)(d);
								e && n(Object(K.b)(e.url))
							}
							n(Object(Q.f)(e))
						} else {
							n(Oe({
								[e]: {
									hidden: !1
								}
							}));
							const t = Object(Q.e)(r.fbt._("Something went wrong", null, {
								hk: "22u7ha"
							}), oe.b.Error);
							n(Object(Q.f)(t))
						}
				}, Ye = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i().posts.models[e];
					if (!s) return;
					const o = s.isLocked ? q.u : q.i;
					t(Oe({
						[e]: {
							isLocked: !s.isLocked
						}
					})), (await o(n(), e)).ok ? t(Object(Q.f)({
						kind: oe.b.SuccessMod,
						text: s.isLocked ? r.fbt._("post has been unlocked", null, {
							hk: "2Qq0lE"
						}) : r.fbt._("post has been locked", null, {
							hk: "31eqWW"
						})
					})) : t(Oe({
						[e]: {
							isLocked: s.isLocked
						}
					}))
				}, $e = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i().posts.models[e];
					if (!s) return;
					const o = s.isSpoiler ? q.x : q.q,
						d = s.isSpoiler ? s.flair.filter(e => e.type !== ne.f.Spoiler) : [...s.flair, {
							text: "spoiler",
							type: ne.f.Spoiler
						}];
					t(Oe({
						[e]: {
							isSpoiler: !s.isSpoiler,
							flair: d
						}
					})), (await o(n(), e)).ok ? t(Object(Q.f)({
						kind: oe.b.SuccessMod,
						text: s.isSpoiler ? r.fbt._("post has been un-marked as a spoiker", null, {
							hk: "2Alvhw"
						}) : r.fbt._("post has been marked as spoiler", null, {
							hk: "3KKPx4"
						})
					})) : t(Oe({
						[e]: {
							isSpoiler: s.isSpoiler,
							flair: s.flair
						}
					}))
				}, Qe = e => async (t, i, {
					apiContext: n
				}) => {
					const r = Object(v.G)(i(), {
						postId: e
					});
					r && (t(Oe({
						[e]: {
							isOriginalContent: !r.isOriginalContent
						}
					})), (await Object(q.k)(n(), e, !r.isOriginalContent)).ok || t(Oe({
						[e]: {
							isOriginalContent: r.isOriginalContent
						}
					})))
				}, Je = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i().posts.models[e];
					if (!s) return;
					const o = s.isNSFW ? q.v : q.j,
						d = s.isNSFW ? s.flair.filter(e => e.type !== ne.f.Nsfw) : [...s.flair, {
							text: "nsfw",
							type: ne.f.Nsfw
						}];
					t(Oe({
						[e]: {
							isNSFW: !s.isNSFW,
							flair: d
						}
					})), (await o(n(), e)).ok ? (await t(lt(e)), t(Object(Q.f)({
						kind: oe.b.SuccessMod,
						text: s.isNSFW ? r.fbt._("post has been un-marked NSFW", null, {
							hk: "1CdkqD"
						}) : r.fbt._("post has been marked NSFW", null, {
							hk: "ntL3M"
						})
					}))) : t(Oe({
						[e]: {
							isNSFW: s.isNSFW,
							flair: s.flair
						}
					}))
				}, Xe = (e, t) => async (i, n, {
					apiContext: r,
					gqlContext: s
				}) => {
					const o = n().posts.models[e];
					if (!o) return;
					i(Oe({
						[e]: {
							distinguishType: t
						}
					}));
					const d = l.g[t];
					(Object(ue.a)(n()) ? await Object(q.f)(s(), e, t) : await Object(q.l)(r(), e, d)).ok || i(Oe({
						[e]: {
							distinguishType: o.distinguishType
						}
					}))
				}, Ze = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i().posts.models[e];
					if (!s) return;
					const o = s.ignoreReports ? q.t : q.h;
					t(Oe({
						[e]: {
							ignoreReports: !s.ignoreReports
						}
					})), (await o(n(), e)).ok ? t(Object(Q.f)({
						kind: oe.b.SuccessMod,
						text: s.ignoreReports ? r.fbt._("post has had their reports un-ignored", null, {
							hk: "1rLaae"
						}) : r.fbt._("post has had their reports ignored", null, {
							hk: "3GTrjn"
						})
					})) : t(Oe({
						[e]: {
							ignoreReports: s.ignoreReports
						}
					}))
				}, et = (e, t, i) => async (n, s, {
					gqlContext: o
				}) => {
					const d = Object(v.G)(s(), {
						postId: e
					});
					if (!d) return;
					const a = i === l.dc.Snoozed,
						u = {
							itemId: e,
							reportText: t,
							isSnoozed: a
						};
					if ((await Object(G.a)(o(), {
							input: u
						})).ok) n(Oe({
						[e]: {
							userReports: Object(se.a)(d.userReports, t, a)
						}
					}));
					else {
						const e = Object(Q.e)(r.fbt._("Sorry, that snooze failed. Try that again", null, {
							hk: "7ToJC"
						}), oe.b.Error);
						n(Object(Q.f)(e))
					}
				}, tt = e => async (t, i, {
					apiContext: n
				}) => {
					const r = i(),
						s = r.posts.models[e];
					if (!s) return;
					const o = !s.isStickied;
					t(Oe({
						[e]: {
							isStickied: o
						}
					}));
					const d = r.subredditStickyPosts.data[s.belongsTo.id];
					let a;
					if (o && d && d.length >= 2 && (a = d[1], t(Oe({
							[a]: {
								isStickied: !1
							}
						}))), (await Object(q.r)(n(), e, o, !1)).ok) {
						const i = s.belongsTo.id,
							n = it(e, o, r.subredditStickyPosts.data[s.belongsTo.id]),
							d = r.subreddits.models[i].name,
							a = Object(z.a)(d, l.X, {});
						t(Te({
							newStickiedPostList: n,
							subredditId: i,
							listingKey: a
						}))
					} else t(Oe({
						[e]: {
							isStickied: s.isStickied
						}
					})), a && t(Oe({
						[a]: {
							isStickied: !0
						}
					}))
				}, it = (e, t, i) => {
					const n = i ? [...i] : [];
					return t ? (n.length >= 2 && n.splice(1, 1, e), n) : n.filter((function(t) {
						return t !== e
					}))
				}, nt = e => async (t, i, {
					apiContext: n
				}) => {
					if (Object(c.a)(e)) {
						const e = Object(Q.e)(r.fbt._("Copied link!", null, {
							hk: "4a4E1x"
						}), oe.b.SuccessCommunity);
						t(Object(Q.f)(e))
					} else {
						const e = Object(Q.e)(r.fbt._("Something went wrong", null, {
							hk: "22u7ha"
						}), oe.b.Error);
						t(Object(Q.f)(e))
					}
				}, rt = "PREFERENCES__RECENT_POSTS_UPDATED", st = Object(_.a)(rt), ot = () => async (e, t) => {
					const i = t();
					if (!i.user.account) return;
					const r = Object(de.e)(i.user.account);
					d.a.remove(`${r}${I.f}`, {
						domain: n.a.cookieDomain
					}), e(st({
						postIds: []
					}))
				}, dt = e => async (t, i) => {
					const r = i();
					if (!r.user.account || !r.user.account.showRecentPosts || r.posts.recent.indexOf(e) > -1) return;
					const s = Object(de.e)(r.user.account),
						o = r.posts.recent ? r.posts.recent.slice(0) : [];
					o.push(e), o.length > N.c && o.shift();
					const d = {
						name: `${s}${I.f}`,
						value: `${o.join(",")}`,
						cookieOptions: {
							domain: n.a.cookieDomain
						},
						cookieContext: {
							country: r.meta.country
						}
					};
					Object(u.a)(d), t(st({
						postIds: o
					}))
				}, at = e => async (t, i, {
					apiContext: n
				}) => {
					const r = !i().posts.models[e].sendReplies;
					t(Oe({
						[e]: {
							sendReplies: r
						}
					})), (await Object(q.o)(n(), e, r)).ok || t(Oe({
						[e]: {
							sendReplies: !r
						}
					}))
				}, lt = e => async (t, i, n) => {
					if (Object(v.G)(i(), {
							postId: e
						})) return;
					const r = await Object(Z.a)(n.apiContext(), e, void 0, {
						limit: 1,
						truncate: 0
					}, Object(le.a)(i()));
					if (t(Object(h.n)(r.status)), r.ok) {
						const e = r.body;
						t(Ee(e.posts))
					}
				}, ut = e => async (t, i) => {
					await t(lt(e));
					const n = Object(v.G)(i(), {
						postId: e
					});
					n && n.crosspostRootId && await t(lt(n.crosspostRootId))
				}, ct = e => async (t, i, {
					apiContext: n
				}) => {
					const s = i();
					if (!Object(pe.O)(s)) return void t(Object($.i)(X.a.LOGIN_MODAL_ID));
					const o = Object(v.G)(s, {
						postId: e
					});
					if (!o) return;
					const d = o.isFollowed,
						a = s.posts.instances[e] || [],
						l = [e, ...a];
					t(Oe(l.reduce((e, t) => ({
						...e,
						[t]: {
							isFollowed: !d
						}
					}), {}))), (await Object(q.e)(n(), e, !o.isFollowed)).ok ? t(Object(Q.f)({
						kind: oe.b.SuccessMod,
						text: d ? r.fbt._("Event unfollowed", null, {
							hk: "3tkWMt"
						}) : r.fbt._("Success! You followed this event, that means we’ll remind you when it starts!", null, {
							hk: "4A9cwh"
						})
					})) : (t(Oe(l.reduce((e, t) => ({
						...e,
						[t]: {
							isFollowed: d
						}
					}), {}))), t(Object(Q.f)({
						kind: oe.b.Error,
						text: r.fbt._("Oops, something went wrong. Try again.", null, {
							hk: "2VQ3RW"
						})
					})))
				}, _t = ({
					postOrComment: e,
					queryParams: t,
					clickInfo: i
				}) => async (n, r) => {
					const o = r(),
						d = i && i.hasNewTabModifier;
					let l = e.permalink;
					const u = Object(A.a)(r()),
						c = u && u.postId === e.id;
					if (Object(ce.b)(o) && !c) return Ct(Object(ce.d)(o)), void n(jt($.a.FeedPost, l));
					if (Object(x.b)(e) && Object(U.c)(e)) {
						const t = Object(v.U)(o, {
							postId: e.id
						});
						if (t) return n(Object(K.b)(`${t.url}predictions/`)), document.body.scrollTop = 0, void(document.documentElement.scrollTop = 0)
					}
					if (Object(x.b)(e) && e.media && Object(M.H)(e.media)) {
						const {
							id: t,
							type: i
						} = e.belongsTo, n = "subreddit" === i ? o.subreddits.models[t] : null;
						l = n ? Object(L.c)(e.id, n.name) : Object(L.c)(e.id)
					}
					if (t && (l = Object(a.a)(l, t)), o.user.prefs.openPostInNewTab || d) window.open(l);
					else {
						const e = o.platform.currentPage,
							t = Object(P.b)(l),
							i = Object(s.c)(t);
						n(Object(D.a)({
							pathname: i.pathname,
							state: Object(C.a)(e),
							search: i.search
						}))
					}
				}, mt = "RICH_TEXT_POST_CONTENT_LOADED", pt = Object(_.a)(mt), ht = e => async (t, i, n) => {
					const s = i(),
						o = Object(v.G)(s, {
							postId: e
						});
					if (!(o && o.media && Object(M.K)(o.media) && o.media.isRichtextPreview)) return;
					const d = await ((e, t) => Object(V.a)(e, {
						...W,
						variables: t
					}))(n.gqlContext(), {
						postId: e
					});
					if (d.ok) {
						const {
							data: i
						} = d.body, n = i.post && i.post.content && i.post.content.richtext;
						n && t(pt({
							postId: e,
							richtextContent: JSON.parse(n)
						}))
					} else t(Object(Q.f)({
						kind: oe.b.Error,
						text: r.fbt._("Something went wrong loading this page. Try again?", null, {
							hk: "1GbrKz"
						})
					}))
				}, ft = (e, t) => async (i, n, {
					apiContext: s
				}) => {
					(await Object(q.p)(s(), e, t)).ok ? i(Oe({
						[t]: {
							contestMode: e
						}
					})) : i(Object(Q.f)({
						kind: oe.b.Error,
						text: r.fbt._("Something went wrong", null, {
							hk: "22u7ha"
						})
					}))
				}, bt = "MOD_TO_MEMBER_SHARE_OPENED", gt = Object(_.a)(bt), wt = "CROWD_CONTROL_OPENED", vt = Object(_.a)(wt), yt = "SET_FOLLOWED_POST", Et = "CHECK_FOLLOWED_POSTS_EXPIRED", St = "INITIALIZE_FOLLOWED_POSTS", Tt = Object(_.a)(yt), Ot = Object(_.a)(Et), It = Object(_.a)(St), Rt = (e, t) => async (i, n, {
					gqlContext: s
				}) => {
					var o;
					i(Ot());
					const d = e => Object(Q.f)(Object(Q.e)(e, oe.b.Error));
					if (n().posts.followed.length === J.a) i(d(r.fbt._("You've reached your post follow limit", null, {
						hk: "3ebRql"
					})));
					else {
						const a = t === re.f.FOLLOWED,
							l = {
								id: e,
								expiresAt: Date.now() + 6048e5
							};
						if ((await ((e, t) => Object(V.a)(e, {
								...H,
								variables: {
									input: t
								}
							}))(s(), {
								postId: e,
								followState: t
							})).ok) {
							i(Tt(l)), Object(ee.yb)(n().posts.followed, null === (o = n().user.account) || void 0 === o ? void 0 : o.id);
							const e = a ? r.fbt._("Followed! You’ll get updates when there’s new activity.", null, {
								hk: "2KnZss"
							}) : r.fbt._("Unfollowed. You won’t get updates on this post anymore.", null, {
								hk: "3D8imV"
							});
							i(Object(Q.f)({
								kind: oe.b.SuccessCommunityGreen,
								text: e
							}))
						} else i(Tt(l)), i(d(r.fbt._("Sorry, we had trouble doing that. Please try again.", null, {
							hk: "2N0vVk"
						})))
					}
				}, Ft = "ANIMATING_UPVOTE", Nt = Object(_.a)(Ft), Ct = (Object(_.a)("EDIT_PREDICTION_END"), e => {
					switch (e) {
						case R.ab.SoftBlockingThrottledDaily:
							j.a.throttleFeature(R.bb.Daily);
							break;
						case R.ab.SoftBlockingThrottledWeekly:
							j.a.throttleFeature(R.bb.Weekly)
					}
				}), jt = (e, t) => async (i, n) => {
					const r = n();
					i(Object($.k)({
						actionSource: e,
						redirectUrl: t
					})), i(Object(p.j)()), Object(ce.c)(r) && Object(B.b)(e, t), Object(k.b)(r)
				}, At = e => async (t, i) => {
					Ct(Object(ce.d)(i())), t(jt($.a.UserProfile, e))
				}, xt = (e, t) => async (i, n) => {
					const r = n(),
						s = Object(A.a)(r);
					s && s.postId === t || (Ct(Object(ce.d)(r)), i(jt($.a.FeedPost, e)))
				}, Dt = (e, t) => async (i, n) => {
					const r = n(),
						s = Object(A.a)(r);
					s && s.postId === t || (Ct(Object(ce.d)(r)), i(jt($.a.Comments, e)))
				}, Pt = () => async (e, t) => {
					Ct(Object(ce.d)(t())), e(jt($.a.FeedScroll))
				}, Lt = e => async (t, i) => {
					Ct(Object(ce.d)(i())), t(jt($.a.CommentsScroll, e))
				}
		},
		"./src/reddit/actions/preferences.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return U
			})), i.d(t, "i", (function() {
				return G
			})), i.d(t, "h", (function() {
				return q
			})), i.d(t, "p", (function() {
				return V
			})), i.d(t, "f", (function() {
				return H
			})), i.d(t, "e", (function() {
				return W
			})), i.d(t, "m", (function() {
				return z
			})), i.d(t, "g", (function() {
				return K
			})), i.d(t, "o", (function() {
				return Y
			})), i.d(t, "r", (function() {
				return $
			})), i.d(t, "u", (function() {
				return Z
			})), i.d(t, "d", (function() {
				return re
			})), i.d(t, "x", (function() {
				return se
			})), i.d(t, "y", (function() {
				return oe
			})), i.d(t, "w", (function() {
				return de
			})), i.d(t, "z", (function() {
				return ae
			})), i.d(t, "G", (function() {
				return le
			})), i.d(t, "E", (function() {
				return ue
			})), i.d(t, "a", (function() {
				return ce
			})), i.d(t, "q", (function() {
				return _e
			})), i.d(t, "F", (function() {
				return fe
			})), i.d(t, "I", (function() {
				return be
			})), i.d(t, "b", (function() {
				return ge
			})), i.d(t, "j", (function() {
				return we
			})), i.d(t, "l", (function() {
				return Ie
			})), i.d(t, "k", (function() {
				return Fe
			})), i.d(t, "A", (function() {
				return Ce
			})), i.d(t, "s", (function() {
				return je
			})), i.d(t, "D", (function() {
				return Ae
			})), i.d(t, "v", (function() {
				return xe
			})), i.d(t, "t", (function() {
				return De
			})), i.d(t, "C", (function() {
				return Pe
			})), i.d(t, "B", (function() {
				return ke
			})), i.d(t, "n", (function() {
				return Be
			})), i.d(t, "H", (function() {
				return Ge
			})), i.d(t, "K", (function() {
				return qe
			})), i.d(t, "J", (function() {
				return Ve
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/config.ts"),
				r = i("./node_modules/fbt/lib/FbtPublic.js"),
				s = i("./node_modules/js-cookie/src/js.cookie.js"),
				o = i.n(s),
				d = i("./node_modules/lodash/isEmpty.js"),
				a = i.n(d),
				l = i("./node_modules/lodash/omit.js"),
				u = i.n(l),
				c = i("./node_modules/lodash/pick.js"),
				_ = i.n(c),
				m = i("./src/lib/constants/index.ts"),
				p = i("./src/lib/convertToCamelCase/index.ts"),
				h = i("./src/lib/makeActionCreator/index.ts"),
				f = i("./src/reddit/actions/chat/toggle.ts"),
				b = i("./src/reddit/actions/publicAccessNetwork/constants.ts"),
				g = i("./src/reddit/actions/users.ts"),
				w = i("./src/reddit/constants/cookie.ts"),
				v = i("./src/reddit/endpoints/user/preferences.ts"),
				y = i("./src/reddit/helpers/cookies/index.ts"),
				E = i("./src/reddit/endpoints/moderator/structuredStyles.ts"),
				S = i("./src/lib/makeApiRequest/index.ts"),
				T = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				O = i("./src/reddit/actions/imageUploads.ts"),
				I = i("./src/reddit/actions/toaster.ts"),
				R = i("./src/reddit/constants/preferences.ts"),
				F = i("./src/reddit/endpoints/subreddit/settings.ts"),
				N = i("./src/reddit/helpers/media/index.ts"),
				C = i("./src/reddit/helpers/trackers/profileSettings.ts"),
				j = i("./src/reddit/models/Image/index.tsx"),
				A = i("./src/reddit/models/Toast/index.ts"),
				x = i("./src/reddit/models/User/index.ts"),
				D = i("./src/reddit/selectors/imageUploads.ts"),
				P = i("./src/reddit/selectors/structuredStyles.ts"),
				L = i("./src/reddit/selectors/subreddit.ts"),
				k = i("./src/reddit/selectors/telemetry.ts"),
				B = i("./src/reddit/selectors/user.ts"),
				M = i("./src/telemetry/index.ts");
			const U = "PREFERENCES__AUTOPLAY_TOGGLED",
				G = "PREFERENCES__NIGHTMODE_TOGGLED",
				q = "PREFERENCES__LAYOUT_CHANGED",
				V = "PREFERENCES__SUBREDDIT_LAYOUT_CHANGED",
				H = "PREFERENCES__CUSTOMIZE_FLYOUT_SHOWN",
				W = "PREFERENCES__CUSTOMIZE_FLYOUT_DISMISSED",
				z = "PREFERENCES__PROFILE_LAYOUT_CHANGED",
				K = "PREFERENCES__HAMBURGER_TRAY_TOGGLED",
				Y = "PREFERENCES__RPAN_DU_DISMISSED",
				$ = "PREFERENCES__TOP_CONTENT_DISMISSAL_PREF_SET",
				Q = Object(h.a)(q),
				J = Object(h.a)(V),
				X = Object(h.a)(H),
				Z = Object(h.a)(W),
				ee = Object(h.a)(Y),
				te = Object(h.a)($),
				ie = (Object(h.a)(z), Object(h.a)(U)),
				ne = Object(h.a)(G),
				re = (Object(h.a)(K), "PREFERENCES__COLLAPSED_TRAY_TOGGLED"),
				se = (Object(h.a)(re), e => async (t, i, {
					apiContext: n
				}) => {
					t(Q({
						layout: e
					})), t(Object(g.p)())
				}),
				oe = (e, t) => async (i, n, {
					apiContext: r
				}) => {
					const s = n(),
						o = Object(B.lb)(s),
						{
							hasSeenCustomizeFlyout: d
						} = s.user.prefs;
					d || i(X()), t && o ? (i(J({
						subredditId: t,
						layout: e
					})), i(qe(t, {
						layout: e
					}, !1)), d || i(be({
						hasSeenCustomizeFlyout: !0
					}, !1))) : (i(se(e)), i(be(d ? {
						layout: e
					} : {
						layout: e,
						hasSeenCustomizeFlyout: !0
					}, !1)))
				}, de = e => async (t, i, {
					apiContext: n
				}) => {
					i().user.account && await Object(v.f)(e, n())
				}, ae = e => async (t, i, {
					apiContext: s
				}) => {
					const d = i();
					Object(P.i)(d) ? t(Object(I.f)({
						kind: A.b.Error,
						text: r.fbt._("In order to continue styling your community, Dark Mode must be turned off.", null, {
							hk: "1BRUPp"
						})
					})) : (d.user.account ? await Object(v.g)(e, s()) : Object(y.a)({
						prefs: {
							nightmode: e
						}
					}), t(ne({
						nightmode: e
					})), t(Object(f.h)(e)), o.a.remove(w.c, {
						domain: n.a.cookieDomain
					}))
				}, le = () => async (e, t, {
					apiContext: i
				}) => {
					const n = t(),
						s = n.user.prefs.topContentTimesDismissed + 1,
						o = Date.now();
					n.user.account ? e(be({
						topContentDismissalTime: o,
						topContentTimesDismissed: s
					}, !1)) : Object(y.a)({
						prefs: {
							[R.d]: o,
							[R.e]: s
						}
					}), e(te({
						topContentDismissalTime: o,
						topContentTimesDismissed: s
					})), e(Object(I.f)({
						kind: A.b.SuccessCommunity,
						text: r.fbt._("Got it! We will show you less of this", null, {
							hk: "4op5Wa"
						})
					}))
				}, ue = (e, t, {
					showToast: i = !0
				} = {}) => async (n, s, {
					apiContext: o
				}) => {
					const d = -1 === [b.R, "r/popular"].indexOf(e),
						a = s();
					if (a.user.account)
						if (d) {
							const i = e.replace(/^r\//, ""),
								r = Object(L.D)(a, i);
							n(qe(r, {
								rpanDuDismissalTime: t
							}, !1))
						} else n(be({
							rpanDuDismissalTime: t
						}, !1));
					else Object(y.a)({
						prefs: {
							[R.b]: t
						}
					});
					if (i) {
						const e = r.fbt._("Got it! We will show you less of this", null, {
							hk: "4op5Wa"
						});
						n(Object(I.f)({
							kind: A.b.SuccessCommunity,
							text: e
						}))
					}
					n(ee(t))
				}, ce = "SETTINGS__ACCOUNT_PREFS_UPDATE_SUCCESS", _e = "SETTINGS__SUBREDDIT_PREFS_UPDATED", me = Object(h.a)("SETTINGS__UPDATE_PENDING"), pe = Object(h.a)("SETTINGS__UPDATE_FAILURE"), he = Object(h.a)(ce), fe = Object(h.a)(_e), be = (e, t = !0, i = "") => async (n, s, {
					apiContext: o
				}) => {
					n(me());
					const d = u()(e, R.a),
						l = _()(e, R.a),
						c = [];
					a()(d) || c.push(Object(v.i)(d, o())), a()(l) || c.push(Object(v.d)(l, o())), (await Promise.all(c)).every(e => e.ok) ? (n(he({
						preferences: e
					})), t && n(Object(I.f)({
						kind: A.b.SuccessCommunity,
						text: i || r.fbt._("Changes saved", null, {
							hk: "2isjrZ"
						})
					}))) : (n(pe()), t && n(Object(I.f)({
						kind: A.b.Error,
						text: r.fbt._("Changes failed to save", null, {
							hk: "XrtIq"
						})
					})))
				}, ge = "ACCT_PREFS__SUCCESS", we = "SETTINGS__SUCCESS", ve = Object(h.a)("ACCT_PREFS__FAILURE"), ye = Object(h.a)("ACCT_PREFS__PENDING"), Ee = Object(h.a)(ge), Se = Object(h.a)("SETTINGS__FAILURE"), Te = Object(h.a)("SETTINGS__PENDING"), Oe = Object(h.a)(we), Ie = "SETTINGS__PROFILE_IMAGE_UPDATE_SUCCESS", Re = Object(h.a)(Ie), Fe = "SETTINGS__PROFILE_IMAGE_DELETE_SUCCESS", Ne = Object(h.a)(Fe), Ce = e => async (t, i, {
					apiContext: r
				}) => {
					t(Te());
					const s = await ((e, t) => Object(S.a)(e, {
						endpoint: Object(T.a)(`${n.a.gatewayUrl}/desktopapi/v1/prefs`),
						method: m.jb.GET,
						data: {
							timestamp: t ? Date.now() : void 0
						}
					}))(r(), e);
					s.ok ? t(Oe(s.body)) : t(Se())
				}, je = () => async (e, t, {
					apiContext: i
				}) => {
					e(ye());
					const n = await Object(v.b)(i());
					n.ok ? e(Ee({
						preferences: Object(p.a)(n.body)
					})) : e(ve())
				}, Ae = e => async (t, i, {
					apiContext: n
				}) => {
					i().user.account ? await Object(v.c)(e, n()) : Object(y.b)({
						pref_quarantine_optin: !0
					})
				}, xe = e => async (t, i, {
					apiContext: n
				}) => {
					const r = i();
					r.user.account ? await Object(v.a)(e, n()) : (Object(y.b)({
						pref_gated_sr_optin: !0
					}), Object(M.a)({
						source: "content_gate",
						action: "click",
						noun: "continue",
						subreddit: Object(k.jb)(r),
						...Object(k.o)(r)
					}))
				}, De = e => async (t, i, {
					apiContext: n
				}) => {
					i().user.account && await Object(v.e)(e, n()), t(ie({
						autoplayVideo: e
					}))
				}, Pe = (e, t) => async (i, n, r) => {
					await Le(e, t)(i, n, r)
				}, Le = (e, t) => async (i, n, s) => {
					const {
						apiContext: o
					} = s, d = Object(B.k)(n());
					if (!d || !d.profileId) return;
					i(Object(O.k)(e));
					const a = Object(x.e)(d),
						l = m.jc + a,
						u = await Object(E.d)(o(), l, e.file.name, t, await Object(N.g)(e.file));
					if (u.ok) {
						let m;
						try {
							if (!(m = await Object(O.g)(n(), u, e, j.a.Profiles))) return void i(Object(I.f)({
								kind: A.b.Error,
								text: r.fbt._("Changes failed to save", null, {
									hk: "3QlXrl"
								})
							}));
							i(Object(O.j)(m))
						} catch (c) {
							return void i(Object(O.i)(c))
						}
						let p = null,
							h = null;
						try {
							(p = await Object(O.f)(n(), j.a.Profiles)) && (h = Object(O.m)(p)(i, n, s))
						} catch (_) {
							return void i(Object(I.f)({
								kind: A.b.Error,
								text: r.fbt._("Changes failed to save", null, {
									hk: "3QlXrl"
								})
							}))
						}
						const f = decodeURIComponent(m.url);
						if (i(Re({
								imageUrl: f,
								key: t,
								subredditId: d.profileId,
								username: a
							})), (await Object(E.e)(o(), l, {
								[t]: f
							})).ok) {
							if (h) try {
								await h
							} catch (_) {}
							i(Object(I.f)({
								kind: A.b.SuccessCommunity,
								text: r.fbt._("Changes saved", null, {
									hk: "xEVHp"
								})
							})), Object(C.i)(n(), t);
							const s = Object(D.a)(n(), e);
							i(Re({
								imageUrl: s ? s.url : m.url,
								key: t,
								subredditId: d.profileId,
								username: a
							}))
						} else i(Object(I.f)({
							kind: A.b.Error,
							text: r.fbt._("Changes failed to save", null, {
								hk: "1y1wAY"
							})
						}))
					} else {
						const e = "profileBanner" === t ? "1280x384" : "256x256";
						i(Object(I.f)({
							kind: A.b.Error,
							text: r.fbt._("There was an error uploading your image. Please verify that the size of your image is {maxImageSize} and less than 500KB.", [r.fbt._param("maxImageSize", e)], {
								hk: "I6lfz"
							})
						}))
					}
				}, ke = e => async (t, i, {
					apiContext: n
				}) => {
					const s = Object(B.k)(i());
					if (!s || !s.profileId) return;
					const o = Object(x.e)(s),
						d = m.jc + o,
						a = {
							profileIcon: "icon",
							profileBanner: "banner"
						} [e],
						l = await Object(F.b)(n(), d, a);
					if (l.ok) {
						const n = l.body[a + "_img"];
						t(Ne({
							imageUrl: n,
							key: e,
							subredditId: s.profileId,
							username: o
						})), t(Object(I.f)({
							kind: A.b.SuccessCommunity,
							text: r.fbt._("Changes saved", null, {
								hk: "xEVHp"
							})
						})), Object(C.h)(i(), e)
					} else t(Object(I.f)({
						kind: A.b.Error,
						text: r.fbt._("Changes failed to save", null, {
							hk: "1y1wAY"
						})
					}))
				}, Be = "SETTINGS__PROFILE_SETTINGS_UPDATE_SUCCESS", Me = Object(h.a)(Be), Ue = Object(h.a)("SETTINGS__PROFILE_SETTINGS_UPDATE_FAILED"), Ge = (e, t) => async (i, n, {
					apiContext: s
				}) => {
					const o = Object(B.k)(n());
					if (!o || !o.profileId) return !1;
					const d = [],
						a = {
							...n().subreddits.settings[o.profileId],
							...e
						};
					d.push(Object(F.f)(s(), o.profileId, a));
					const {
						enableFollowers: l,
						prevEnableFollowers: u,
						showActiveCommunities: c,
						prevShowActiveCommunities: _
					} = t;
					return l !== u && d.push(Object(v.i)({
						enableFollowers: l
					}, s())), c !== _ && d.push(Object(v.i)({
						showActiveCommunities: c
					}, s())), (await Promise.all(d)).every(e => e.ok) ? (i(Me({
						settings: e,
						additional: t,
						subredditId: o.profileId
					})), Object(C.k)(n()), i(Object(I.f)({
						kind: A.b.SuccessCommunity,
						text: r.fbt._("Changes saved", null, {
							hk: "xEVHp"
						})
					})), !0) : (i(Ue()), i(Object(I.f)({
						kind: A.b.Error,
						text: r.fbt._("Changes failed to save", null, {
							hk: "1y1wAY"
						})
					})), !1)
				}, qe = (e, t, i = !0) => async (n, s, {
					apiContext: o
				}) => {
					const d = s().user.prefs.subreddit[e];
					n(fe({
						subredditId: e,
						prefs: t
					})), (await Object(v.j)(e, t, o())).ok ? i && n(Object(I.f)({
						kind: A.b.SuccessCommunity,
						text: r.fbt._("Changes saved", null, {
							hk: "xEVHp"
						})
					})) : (d && n(fe({
						subredditId: e,
						prefs: d
					})), i && n(Object(I.f)({
						kind: A.b.Error,
						text: r.fbt._("Changes failed to save", null, {
							hk: "1y1wAY"
						})
					})))
				}, Ve = (e, t) => async (i, n, {
					apiContext: r
				}) => {
					const s = n();
					Object(L.S)(s, {
						subredditId: e
					}) && s.user.prefs.rememberCommunitySort && i(qe(e, {
						sort: t
					}, !1))
				}
		},
		"./src/reddit/actions/profile/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "k", (function() {
				return n
			})), i.d(t, "j", (function() {
				return r
			})), i.d(t, "l", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "m", (function() {
				return l
			})), i.d(t, "n", (function() {
				return u
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "i", (function() {
				return p
			})), i.d(t, "h", (function() {
				return h
			})), i.d(t, "g", (function() {
				return f
			}));
			const n = "PROFILE__PROFILE_INFO_LOADED",
				r = "PROFILE__PROFILE_INFO_FAILED",
				s = "PROFILE__PROFILE_MOD_HUB_PAGE_LOADED",
				o = "PROFILE__MODERATED_SUBREDDITS_PENDING",
				d = "PROFILE__MODERATED_SUBREDDITS_LOADED",
				a = "PROFILE__MODERATED_SUBREDDITS_FAILED",
				l = "PROFILE__RECEIVED_MODERATED_SUBREDDITS_MODELS",
				u = "PROFILE__RECEIVED_MODERATED_SUBREDDITS_SUBSCRIPTIONS",
				c = "MORE__PROFILE_GQL_MODERATED_PENDING",
				_ = "MORE__PROFILE_GQL_MODERATED_LOADED",
				m = "MORE__PROFILE_GQL_MODERATED_FAILED",
				p = "PROFILE__MULTIREDDITS_PENDING",
				h = "PROFILE__MULTIREDDITS_LOADED",
				f = "PROFILE__MULTIREDDITS_FAILED"
		},
		"./src/reddit/actions/profile/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return M
			})), i.d(t, "e", (function() {
				return U
			})), i.d(t, "d", (function() {
				return G
			})), i.d(t, "b", (function() {
				return q
			})), i.d(t, "c", (function() {
				return z
			})), i.d(t, "g", (function() {
				return Q
			})), i.d(t, "f", (function() {
				return J
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/reddit/actions/contentGate.ts"),
				o = i("./src/reddit/actions/gold/awardKarma.ts"),
				d = i("./src/reddit/actions/pages/profilePrivate/constants.ts"),
				a = i("./src/reddit/actions/subredditModeration/index.ts"),
				l = i("./src/reddit/actions/trophyCase.ts"),
				u = i("./src/reddit/constants/profiles.ts"),
				c = i("./src/reddit/endpoints/profile/info.ts"),
				_ = i("./src/lib/makeApiRequest/index.ts"),
				m = i("./src/lib/makeGqlRequest/index.ts"),
				p = i("./src/lib/omitHeaders/index.ts"),
				h = i("./src/reddit/constants/headers.ts"),
				f = i("./src/redditGQL/operations/ModeratedSubreddits.json");
			var b = i("./src/redditGQL/operations/RedditorMultireddits.json");
			var g = i("./src/reddit/helpers/graphql/normalizeMultiredditDataFromGql/index.ts"),
				w = i("./src/reddit/helpers/graphql/normalizeProfileFromGql/index.ts"),
				v = i("./src/reddit/helpers/graphql/normalizeSubredditModPermissions/index.ts"),
				y = i("./src/reddit/helpers/graphql/normalizeUserFromGql/index.ts");
			var E = i("./src/reddit/helpers/r2/normalizeAwardingsFromR2.ts"),
				S = e => {
					const t = e.awardee_karma || 0,
						i = e.awarder_karma || 0,
						n = e.comment_karma,
						s = e.link_karma,
						o = t + i + n + s;
					return {
						accountIcon: e.icon_img,
						awardedLastMonth: e.awarded_last_month ? Object(E.c)(e.awarded_last_month) : null,
						created: e.created,
						createdUtc: e.created_utc,
						displayName: e.name,
						displayNamePrefixed: e.subreddit && e.subreddit.display_name_prefixed,
						displayText: e.name,
						enableFollowers: e.accept_followers,
						hasUserProfile: !!e.subreddit,
						hideFromRobots: !!e.hide_from_robots,
						id: `${r.Ib.Account}_${e.id}`,
						isContractor: e.is_contractor,
						isEmployee: e.is_employee,
						isFollowing: e.has_subscribed,
						isGold: e.is_gold,
						isAdmin: e.is_admin,
						isMod: e.is_mod,
						isNSFW: !(!e.subreddit || !e.subreddit.over_18),
						karma: {
							fromAwardsReceived: t,
							fromAwardsGiven: i,
							fromComments: n,
							fromPosts: s,
							total: o
						},
						prefShowSnoovatar: e.pref_show_snoovatar,
						prefShowTwitter: e.pref_show_twitter,
						snoovatarFullBodyAsset: e.snoovatar_img || null,
						url: `/user/${e.name}/`,
						username: e.name,
						...e.subreddit ? {
							profileId: e.subreddit.name
						} : null
					}
				},
				T = e => {
					const t = e.awardee_karma || 0,
						i = e.awarder_karma || 0,
						n = e.comment_karma,
						r = e.link_karma,
						s = t + i + n + r;
					return {
						acceptChats: !1 !== e.accept_chats,
						acceptPms: !1 !== e.accept_pms,
						hasExternalAccount: e.has_external_account,
						karma: {
							fromAwardsReceived: t,
							fromAwardsGiven: i,
							fromComments: n,
							fromPosts: r,
							total: s
						},
						prefShowTwitter: e.pref_show_twitter,
						publicDescription: e.subreddit ? e.subreddit.public_description : "",
						userIsSubscriber: e.subreddit && e.subreddit.user_is_subscriber || !1
					}
				},
				O = i("./src/reddit/helpers/r2/normalizeProfileSubredditFromR2/index.ts");
			var I = i("./src/reddit/models/User/index.ts"),
				R = i("./src/reddit/selectors/profile.ts"),
				F = i("./src/reddit/selectors/subscriptions.ts"),
				N = i("./src/reddit/selectors/user.ts"),
				C = i("./src/reddit/actions/profile/constants.ts");
			const j = Object(n.a)(C.k),
				A = Object(n.a)(C.j),
				x = Object(n.a)(C.l),
				D = Object(n.a)(C.c),
				P = Object(n.a)(C.b),
				L = Object(n.a)(C.a),
				k = Object(n.a)(C.m),
				B = Object(n.a)(C.n),
				M = () => async (e, t, {
					apiContext: i
				}) => {
					const n = Object(N.k)(t());
					n && n.profileId && await e(G(Object(I.e)(n)))
				}, U = e => async (t, i, {
					gqlContext: n
				}) => {
					const r = await Object(c.b)(n(), e);
					if (r.ok) {
						const i = r.body.data;
						let n = Object(v.a)(i.profileByName.modPermissions || {});
						const s = Object(y.a)(i.identity),
							o = Object(w.a)(i.profileByName);
						s.profileId === o.id && (n = u.a), t(Object(a.i)({
							[o.id]: n
						})), t(x({
							account: s,
							profile: o,
							profileName: e
						}))
					}
				}, G = (e, t) => async (i, n, {
					apiContext: o,
					gqlContext: d
				}) => {
					var a, u, _, m;
					if (e === r.E) return;
					const p = n();
					if (!!(Object(R.j)(p, {
							profileName: e
						}) && Object(R.h)(p, {
							profileName: e
						}) && Object(N.wb)(p, {
							userName: e
						}) && (null === (u = null === (a = p.user.account) || void 0 === a ? void 0 : a.karma) || void 0 === u ? void 0 : u.total)) && !t) return;
					const [h, f] = await Promise.all([Object(c.c)(o(), e), Object(c.d)(d(), e)]);
					if (h.ok) {
						(null === (m = null === (_ = null == h ? void 0 : h.body) || void 0 === _ ? void 0 : _.data) || void 0 === m ? void 0 : m.is_suspended) && i(Object(s.w)({
							profileName: e
						}));
						const t = function(e) {
							const {
								data: t
							} = e;
							return {
								about: T(t),
								banner: t.subreddit && t.subreddit.banner_img && {
									height: t.subreddit.banner_size && t.subreddit.banner_size[1],
									url: t.subreddit.banner_img,
									width: t.subreddit.banner_size && t.subreddit.banner_size[0]
								},
								user: S(t),
								features: t.features,
								...t.subreddit ? {
									profile: Object(O.a)(t.subreddit, t.name, t.accept_followers)
								} : null
							}
						}(h.body);
						if (f.ok && f.body) {
							const {
								data: e
							} = f.body, i = {
								karma: {
									...c.a
								}
							};
							if (Object(c.e)(e.redditorInfoByName)) {
								const t = e.redditorInfoByName.karma;
								i.karma = {
									...i.karma,
									...t
								}
							}
							Object.assign(t.about, i), Object.assign(t.user, i)
						}
						i(j(t))
					} else h.error && h.error.type === r.o && i(Object(s.u)({
						profileName: e
					})), i(A(h.body));
					const b = n(),
						g = Object(R.m)(b, e);
					!!Object(R.r)(b, g) && i(Object(l.b)(e, g))
				}, q = e => async (t, i, {
					apiContext: n
				}) => {
					const s = {
						profileName: e
					};
					if (Object(R.a)(i(), s)) return;
					if (Object(R.k)(i(), s)) return;
					t(D(s));
					const o = await ((e, t) => Object(_.a)(Object(p.a)(e, [h.a]), {
						endpoint: `${e.apiUrl}/user/${t}/moderated_subreddits.json`,
						method: r.jb.GET,
						traceRequestName: "get_profile_moderated_subreddits",
						data: {
							raw_json: 1
						}
					}))(n(), e);
					if (o.ok) {
						const n = function(e) {
							return e ? e.map(e => ({
								communityIcon: e.community_icon,
								displayText: e.sr_display_name_prefixed,
								icon: {
									height: e.icon_size ? e.icon_size[1] : 0,
									url: e.icon_img ? e.icon_img : "",
									width: e.icon_size ? e.icon_size[0] : 0
								},
								id: e.name,
								isNSFW: e.over_18,
								isQuarantined: !!e.quarantine,
								name: "user" === e.subreddit_type ? e.sr.slice(r.jc.length) : e.sr,
								primaryColor: e.primary_color,
								subscribers: e.subscribers,
								title: e.title,
								type: e.subreddit_type,
								url: e.url,
								wls: e.wls
							})) : []
						}(o.body.data);
						t(P({
							profileName: e,
							data: n
						}));
						const s = {},
							d = {};
						if (n.forEach(e => {
								("user" === e.type ? d : s)[e.id] = e
							}), t(k({
								subreddits: s,
								profiles: d
							})), !Object(F.d)(i())) {
							const e = (e => {
								const t = e.filter(e => e.user_is_subscriber);
								return {
									subredditOrder: t.filter(e => "user" !== e.subreddit_type).map(e => e.name),
									profileOrder: t.filter(e => "user" === e.subreddit_type).map(e => e.name)
								}
							})(o.body.data || []);
							t(B(e))
						}
					} else t(L(o.body))
				}, V = Object(n.a)(C.f), H = Object(n.a)(C.e), W = Object(n.a)(C.d), z = e => async (t, i, n) => {
					const r = i(),
						s = e.toLowerCase(),
						{
							pageInfo: o
						} = r.profiles.moderated;
					if (!o[s] || !o[s].hasNextPage || !o[s].endCursor) return;
					t(V({
						profileName: s
					}));
					const a = await ((e, t) => Object(m.a)(e, {
							...f,
							variables: t
						}))(n.gqlContext(), {
							name: s,
							after: o[s].endCursor,
							first: d.h
						}),
						l = a.body.data;
					if (a.ok) {
						const e = Object(w.b)(l.redditor.moderatedSubreddits);
						t(H({
							profileName: s,
							...e
						}))
					} else t(W(a.error))
				}, K = Object(n.a)(C.i), Y = Object(n.a)(C.h), $ = Object(n.a)(C.g), Q = (e, t) => async (i, n, s) => {
					const o = n(),
						a = e.toLowerCase(),
						l = {
							profileName: a
						};
					if (Object(R.b)(o, l)) return;
					if (!t && Object(R.l)(o, l)) return;
					const {
						pageInfo: u
					} = o.profiles.multireddits;
					if (t && (!u[a] || !u[a].hasNextPage || !u[a].endCursor)) return;
					i(K(l));
					const c = await ((e, t) => Object(m.a)(e, {
							...b,
							variables: t
						}, {
							traceRequestName: "get_profile_multireddits"
						}))(s.gqlContext(), {
							name: a,
							first: t ? d.h : r.Tb,
							after: t ? u[a].endCursor : void 0
						}),
						_ = c.body.data;
					if (c.ok && _.redditorInfoByName) {
						const e = _.redditorInfoByName.multireddits.edges.map(e => e.node),
							t = Object(g.b)(e);
						i(Y({
							...l,
							...t,
							pageInfo: _.redditorInfoByName.multireddits.pageInfo,
							multiredditsModelsState: o.multireddits.models
						}))
					} else i($({
						...l,
						error: c.error
					}))
				}, J = e => async (t, i, n) => {
					const r = e.toLowerCase(),
						s = await Object(c.d)(n.gqlContext(), r);
					if (s.ok && s.body) {
						const {
							data: e
						} = s.body, i = {
							karma: {
								...c.a
							}
						};
						if (Object(c.e)(e.redditorInfoByName)) {
							const t = e.redditorInfoByName.karma;
							i.karma = {
								...i.karma,
								...t
							}
						}
						t(Object(o.a)({
							...i,
							userName: r
						}))
					}
				}
		},
		"./src/reddit/actions/profileConversations.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return v
			})), i.d(t, "e", (function() {
				return y
			})), i.d(t, "d", (function() {
				return E
			})), i.d(t, "c", (function() {
				return S
			})), i.d(t, "b", (function() {
				return T
			})), i.d(t, "a", (function() {
				return O
			})), i.d(t, "h", (function() {
				return A
			})), i.d(t, "g", (function() {
				return x
			}));
			var n = i("./node_modules/lodash/difference.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/pick.js"),
				o = i.n(s),
				d = i("./src/lib/constants/index.ts"),
				a = i("./src/lib/makeActionCreator/index.ts"),
				l = i("./src/reddit/actions/pages/profileShared.ts"),
				u = i("./src/reddit/constants/parameters.ts"),
				c = i("./src/reddit/constants/things.ts"),
				_ = i("./src/config.ts"),
				m = i("./src/lib/makeApiRequest/index.ts"),
				p = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				h = i("./src/reddit/models/RichTextJson/addRTJParam.ts"),
				f = i("./src/reddit/models/Comment/addProfileImgParam.ts"),
				b = i("./src/reddit/models/RichTextJson/addEmotesAsImagesParam.ts");
			var g = i("./src/reddit/helpers/makeProfileListingKey/index.ts"),
				w = i("./src/reddit/selectors/experiments/avatarsInComments.ts");
			const v = "PROFILE_OVERVIEW_CONVERSATIONS__MORE_POSTS_PENDING",
				y = "PROFILE_OVERVIEW_CONVERSATIONS__MORE_POSTS_LOADED",
				E = "PROFILE_OVERVIEW_CONVERSATIONS__MORE_POSTS_FAILED",
				S = "PROFILE__EXTRACOMMENTS_PENDING",
				T = "PROFILE__EXTRACOMMENTS_LOADED",
				O = "PROFILE__EXTRACOMMENTS_FAILED",
				I = Object(a.a)(v),
				R = Object(a.a)(y),
				F = Object(a.a)(E),
				N = Object(a.a)(T),
				C = Object(a.a)(S),
				j = Object(a.a)(O),
				A = () => async (e, t, {
					apiContext: i
				}) => {
					const n = t(),
						{
							currentPage: s
						} = n.platform;
					if (!s || !s.routeMatch) return;
					const {
						queryParams: a,
						params: c
					} = s.routeMatch.match, {
						sort: f,
						t: b
					} = Object(l.a)(n, a), {
						profileName: w
					} = c, v = w.toLowerCase(), y = Object(g.a)(v, d.ub, f, a), E = n.listings.postOrder.loadMore[y];
					if (!E) return;
					const S = n.listings.postOrder.api.pending[y],
						{
							fetchedTokens: T
						} = n.listings.postOrder,
						O = !(!T[y] || !T[y][E.token]);
					if (S || O) return;
					e(I({
						key: y,
						fetchedToken: E.token
					}));
					const N = await ((e, t, i) => Object(m.a)(e, {
						data: i,
						endpoint: Object(p.a)(Object(h.a)(`${_.a.gatewayUrl}/desktopapi/v1/user/${t}/conversations`)),
						method: d.jb.GET,
						traceRequestName: "get_profile_page"
					}))(i(), w, {
						after: E.token,
						dist: E.dist,
						sort: f,
						t: b,
						...o()(a, u.m)
					});
					if (N.ok) {
						const t = n.listings.postOrder.ids[y],
							i = {
								...N.body,
								postIds: r()(N.body.postIds, t)
							};
						e(R({
							fetchedToken: E.token,
							key: y,
							meta: n.meta,
							profileName: w,
							...i
						}))
					} else e(F({
						error: N.error,
						fetchedToken: E.token,
						key: y,
						account: N.body.data ? N.body.data.account : null
					}))
				}, x = (e, t, i) => async (n, r, {
					apiContext: s
				}) => {
					const o = r();
					if (o.pages.profileOverview.conversations.extraComments.api.pending[i]) return;
					n(C({
						extraCommentsId: i
					}));
					let a = t;
					t.startsWith(c.b) && (a = t.slice(c.b.length));
					const l = i.split("-")[1],
						u = await ((e, t, i, n, r) => {
							let s = Object(h.a)(Object(b.a)(`${_.a.gatewayUrl}/desktopapi/v1/user/${t}/morecomments/${i}`));
							return r && (s = Object(f.a)(s)), Object(m.a)(e, {
								endpoint: s,
								method: d.jb.GET,
								type: "json",
								data: {
									after: n,
									limit: 14
								}
							})
						})(s(), e, a, l, Object(w.a)(o));
					u.ok ? n(N({
						profileName: e.toLowerCase(),
						extraCommentsId: i,
						...u.body
					})) : n(j(u.body))
				}
		},
		"./src/reddit/actions/profileOverviewChrono/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}));
			const n = "PROFILE_OVERVIEW_CHRONO__MORE_ITEMS_PENDING",
				r = "PROFILE_OVERVIEW_CHRONO__MORE_ITEMS_LOADED",
				s = "PROFILE_OVERVIEW_CHRONO__MORE_ITEMS_FAILED"
		},
		"./src/reddit/actions/publicAccessNetwork/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "E", (function() {
				return r
			})), i.d(t, "X", (function() {
				return s
			})), i.d(t, "W", (function() {
				return o
			})), i.d(t, "P", (function() {
				return d
			})), i.d(t, "w", (function() {
				return a
			})), i.d(t, "x", (function() {
				return l
			})), i.d(t, "G", (function() {
				return u
			})), i.d(t, "I", (function() {
				return c
			})), i.d(t, "H", (function() {
				return _
			})), i.d(t, "t", (function() {
				return m
			})), i.d(t, "u", (function() {
				return p
			})), i.d(t, "y", (function() {
				return h
			})), i.d(t, "N", (function() {
				return f
			})), i.d(t, "M", (function() {
				return b
			})), i.d(t, "O", (function() {
				return g
			})), i.d(t, "z", (function() {
				return w
			})), i.d(t, "L", (function() {
				return v
			})), i.d(t, "r", (function() {
				return y
			})), i.d(t, "F", (function() {
				return E
			})), i.d(t, "v", (function() {
				return S
			})), i.d(t, "J", (function() {
				return T
			})), i.d(t, "K", (function() {
				return O
			})), i.d(t, "D", (function() {
				return I
			})), i.d(t, "B", (function() {
				return R
			})), i.d(t, "V", (function() {
				return F
			})), i.d(t, "C", (function() {
				return N
			})), i.d(t, "b", (function() {
				return C
			})), i.d(t, "s", (function() {
				return j
			})), i.d(t, "A", (function() {
				return A
			})), i.d(t, "T", (function() {
				return x
			})), i.d(t, "m", (function() {
				return D
			})), i.d(t, "l", (function() {
				return P
			})), i.d(t, "d", (function() {
				return L
			})), i.d(t, "e", (function() {
				return k
			})), i.d(t, "f", (function() {
				return B
			})), i.d(t, "g", (function() {
				return M
			})), i.d(t, "j", (function() {
				return U
			})), i.d(t, "c", (function() {
				return G
			})), i.d(t, "h", (function() {
				return q
			})), i.d(t, "k", (function() {
				return V
			})), i.d(t, "p", (function() {
				return H
			})), i.d(t, "q", (function() {
				return W
			})), i.d(t, "Y", (function() {
				return z
			})), i.d(t, "a", (function() {
				return K
			})), i.d(t, "R", (function() {
				return Y
			})), i.d(t, "i", (function() {
				return $
			})), i.d(t, "o", (function() {
				return Q
			})), i.d(t, "n", (function() {
				return J
			})), i.d(t, "Q", (function() {
				return X
			})), i.d(t, "S", (function() {
				return Z
			})), i.d(t, "U", (function() {
				return ee
			}));
			var n = i("./src/config.ts");
			const r = "RPAN__REMOVE_STREAM_FROM_HISTORY",
				s = "RPAN__VISIT_STREAM",
				o = -1,
				d = "RPAN__RESET_HISTORY",
				a = "RPAN__RECEIVE_GLOBAL_CONFIG",
				l = "RPAN__RECEIVE_SUBREDDIT_CONFIG",
				u = "RPAN__REQUEST_CONFIG",
				c = "RPAN__REQUEST_CONFIG_FAILED",
				_ = "RPAN__REQUEST_CONFIG_CANCELED",
				m = "RPAN__RECEIVE_HLS_STREAM_ENDED",
				p = "RPAN__RECEIVE_HLS_STREAM_REMOVED",
				h = "RPAN__RECEIVE_STREAM_MODEL",
				f = "RPAN__REQUEST_STREAM_MODEL",
				b = "RPAN__REQUEST_STREAM_FAILED",
				g = "RPAN__REQUEST_STREAM_MODEL_BATCH",
				w = "RPAN__RECEIVE_STREAM_MODEL_BATCH",
				v = "RPAN__REQUEST_STREAM_BATCH_FAILED",
				y = "RPAN__RECEIVE_AUTO_MUTE_LEVEL",
				E = "RPAN__REQUEST_AUTO_MUTE_LEVEL",
				S = "RPAN__RECEIVE_RECOMMENDED_VIEWER_SUBREDDITS",
				T = "RPAN__REQUEST_RECOMMENDED_VIEWER_SUBREDDITS",
				O = "RPAN__REQUEST_RECOMMENDED_VIEWER_SUBREDDITS_FAILED",
				I = "RPAN__RECEIVE_VOTE",
				R = "RPAN__RECEIVE_THEATER_SETTINGS",
				F = "RPAN__UPDATE_VIDEO_TIMESTAMP",
				N = "RPAN__RECEIVE_USER_SETTINGS",
				C = "RPAN__BATCH_OP",
				j = "RPAN__RECEIVE_DISCOVERY_UNIT_THUMBNAILS",
				A = "RPAN__RECEIVE_STREAM_PREVIEWS",
				x = "RPAN__SEND_HEARTBEAT",
				D = 0,
				P = 9999,
				L = 30,
				k = 6,
				B = 5,
				M = 15,
				U = 5,
				G = 57,
				q = 60,
				V = 7e3,
				H = 1e3,
				W = 400,
				z = 1e3,
				K = 3e4,
				Y = (n.a.assetPath, "home"),
				$ = 3,
				Q = 500,
				J = 2e3,
				X = `${n.a.redditUrl}/r/pan`,
				Z = "https://www.redditinc.com/policies/broadcasting-content-policy",
				ee = (n.a.assetPath, `${n.a.assetPath}/img/rpan-broadcast-over-thumbnail.png`)
		},
		"./src/reddit/actions/search.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return w
			})), i.d(t, "g", (function() {
				return v
			})), i.d(t, "d", (function() {
				return y
			})), i.d(t, "e", (function() {
				return E
			})), i.d(t, "c", (function() {
				return S
			})), i.d(t, "i", (function() {
				return T
			})), i.d(t, "p", (function() {
				return O
			})), i.d(t, "k", (function() {
				return N
			})), i.d(t, "l", (function() {
				return C
			})), i.d(t, "n", (function() {
				return A
			})), i.d(t, "h", (function() {
				return x
			})), i.d(t, "o", (function() {
				return D
			})), i.d(t, "a", (function() {
				return P
			})), i.d(t, "b", (function() {
				return L
			})), i.d(t, "j", (function() {
				return k
			})), i.d(t, "m", (function() {
				return B
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/lodash/pick.js"),
				s = i.n(r),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/makeActionCreator/index.ts"),
				a = i("./src/lib/makeSearchKey/index.ts"),
				l = i("./src/reddit/actions/toaster.ts"),
				u = i("./src/reddit/constants/parameters.ts"),
				c = i("./src/reddit/endpoints/page/search/index.ts"),
				_ = i("./src/reddit/helpers/correlationIdTracker.ts"),
				m = i("./src/reddit/helpers/search/getQueryWithNsfwSetting.ts"),
				p = i("./src/reddit/models/Multireddit/index.ts"),
				h = i("./src/reddit/models/Toast/index.ts"),
				f = i("./src/reddit/selectors/experiments/serpRedesignLayout.ts"),
				b = i("./src/reddit/selectors/telemetry.ts"),
				g = i("./src/reddit/selectors/user.ts");
			const w = "SEARCH__DROPDOWN_CLOSED",
				v = "SEARCH__DROPDOWN_TOGGLED",
				y = "SEARCH__MORE_RESULTS_PENDING",
				E = "SEARCH__MORE_RESULTS_RECEIVED",
				S = "SEARCH__MORE_RESULTS_FAILED",
				T = "SEARCH__UPDATE_SEARCH_QUERY",
				O = Object(d.a)(T),
				I = Object(d.a)(y),
				R = Object(d.a)(E),
				F = Object(d.a)(S),
				N = Object(d.a)(w),
				C = Object(d.a)(v),
				j = [{
					contentType: o.bc.Posts,
					token: o.ac.Posts,
					stateKey: "postOrder"
				}, {
					contentType: o.bc.Subreddits,
					token: o.ac.Subreddits,
					stateKey: "communityOrder"
				}, {
					contentType: o.bc.Users,
					token: o.ac.Users,
					stateKey: "authorOrder"
				}, {
					contentType: o.bc.Comments,
					token: o.ac.Comments,
					stateKey: "commentOrder"
				}],
				A = e => async (t, i, {
					gqlContext: r
				}) => {
					const d = i(),
						{
							queryParams: w
						} = d.platform.currentPage,
						v = Object(a.c)(w, Object(g.ib)(d)),
						y = Object(f.a)(d),
						{
							multiredditName: E,
							subredditName: S,
							username: T
						} = d.platform.currentPage.urlParams;
					let O;
					T && E && (O = Object(p.h)(T, E));
					const N = v || s()(w, u.u),
						C = Object(a.e)(N),
						x = {
							...C,
							t: C.category ? o.hc.DAY : C.t,
							type: e
						},
						D = Object(a.b)(S || E, T, x);
					let P;
					const L = {
						authors: null,
						comments: null,
						communities: null,
						posts: null
					};
					if (e.every(e => Object.keys(o.bc).includes(e))) throw new Error("Should not attempt to fetch more results without a search type");
					if (j.filter(t => e.indexOf(t.contentType) > -1).forEach(({
							token: e,
							stateKey: t
						}) => {
							var i, n, r;
							const s = null === (i = d.listings[t]) || void 0 === i ? void 0 : i.loadMore[D];
							if (!s) return;
							const o = null === (n = d.listings[t]) || void 0 === n ? void 0 : n.api.pending[D],
								a = null === (r = d.listings[t]) || void 0 === r ? void 0 : r.fetchedTokens,
								l = a[D] && a[D][s.token];
							o || l || (P = s.token, L[e] = P)
						}), !Object.values(L).filter(e => !!e).length) return;
					const k = `error-${D}`;
					t(I({
						fetchedToken: P,
						key: D,
						type: e
					}));
					const B = [a.a.PromotedTrend, a.a.Trending].includes(C.source),
						M = Object(g.ib)(d),
						U = {
							...x,
							q: C.q,
							after: P,
							type: (e || []).join(","),
							b: !0
						},
						G = S ? [S] : void 0,
						q = Object(b.ib)(d.platform.currentPage),
						V = await Object(c.a)({
							context: r(),
							isSerpRedesignLayoutM3: y,
							multiredditLabel: O,
							nsfw: !Object(m.a)(M, "1" === C.include_over_18, B, "1" === C.sr_nsfw),
							options: U,
							queryId: Object(_.c)(_.a.SearchResults),
							structureType: q,
							subredditNames: G,
							tokens: L
						});
					V.ok ? (t(R({
						key: D,
						fetchedToken: P,
						meta: d.meta,
						type: e,
						...V.body
					})), t(l.g(k))) : (t(F({
						key: D,
						error: V.error,
						fetchedToken: P,
						meta: d.meta,
						type: e,
						...V.body
					})), t(l.f({
						id: k,
						kind: h.b.Error,
						text: n.fbt._("Sorry, we couldn't load more search results.", null, {
							hk: "3IDePs"
						}),
						buttonText: n.fbt._("Retry", null, {
							hk: "1XMjgA"
						}),
						buttonAction: A(e)
					})))
				}, x = "SEARCH__TYPEAHEAD_SUCCESS", D = Object(d.a)(x), P = "SEARCH__DISABLE_SUBREDDIT_SEARCH", L = "SEARCH__ENABLE_SUBREDDIT_SEARCH", k = Object(d.a)(P), B = Object(d.a)(L)
		},
		"./src/reddit/actions/searchQueryId/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "SEARCH_QUERY_ID__SET_SEARCH_QUERY_ID",
				s = "SEARCH_QUERY_ID__UNSET_SEARCH_QUERY_ID",
				o = (Object(n.a)(r), Object(n.a)(s))
		},
		"./src/reddit/actions/session.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "h", (function() {
				return h
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/endpoints/session/index.ts");
			const s = "SESSION__USER_AUTHENTICATED",
				o = "SESSION__USER_LOGGED_OUT",
				d = "SESSION__USER_REAUTHENTICATED",
				a = "SESSION__USER_REFRESH_FAILED",
				l = "SESSION__LOAT_RECEIVED",
				u = "SESSION__LOAT_REFRESHED",
				c = (Object(n.a)(s), Object(n.a)(d)),
				_ = Object(n.a)(o),
				m = (Object(n.a)(a), () => async (e, t, {
					apiContext: i
				}) => {
					const n = t().user.session;
					if (n) {
						const t = await Object(r.b)(i(), n);
						if (t.ok) {
							const i = t.body;
							i.unsafeLoggedOut ? (n.unsafeLoggedOut || e(_()), e(p(i))) : e(c(i))
						}
					}
				}),
				p = (Object(n.a)(l), Object(n.a)(u)),
				h = () => async (e, t, {
					apiContext: i
				}) => {
					await Object(r.a)(i())
				}
		},
		"./src/reddit/actions/subredditModeration/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "T", (function() {
				return n
			})), i.d(t, "R", (function() {
				return r
			})), i.d(t, "Q", (function() {
				return s
			})), i.d(t, "W", (function() {
				return o
			})), i.d(t, "V", (function() {
				return d
			})), i.d(t, "U", (function() {
				return a
			})), i.d(t, "S", (function() {
				return l
			})), i.d(t, "X", (function() {
				return u
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "j", (function() {
				return p
			})), i.d(t, "i", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "d", (function() {
				return b
			})), i.d(t, "k", (function() {
				return g
			})), i.d(t, "o", (function() {
				return w
			})), i.d(t, "n", (function() {
				return v
			})), i.d(t, "m", (function() {
				return y
			})), i.d(t, "r", (function() {
				return E
			})), i.d(t, "q", (function() {
				return S
			})), i.d(t, "p", (function() {
				return T
			})), i.d(t, "l", (function() {
				return O
			})), i.d(t, "s", (function() {
				return I
			})), i.d(t, "I", (function() {
				return R
			})), i.d(t, "H", (function() {
				return F
			})), i.d(t, "G", (function() {
				return N
			})), i.d(t, "v", (function() {
				return C
			})), i.d(t, "u", (function() {
				return j
			})), i.d(t, "t", (function() {
				return A
			})), i.d(t, "B", (function() {
				return x
			})), i.d(t, "A", (function() {
				return D
			})), i.d(t, "z", (function() {
				return P
			})), i.d(t, "a", (function() {
				return L
			})), i.d(t, "c", (function() {
				return k
			})), i.d(t, "b", (function() {
				return B
			})), i.d(t, "cb", (function() {
				return M
			})), i.d(t, "eb", (function() {
				return U
			})), i.d(t, "db", (function() {
				return G
			})), i.d(t, "fb", (function() {
				return q
			})), i.d(t, "w", (function() {
				return V
			})), i.d(t, "y", (function() {
				return H
			})), i.d(t, "x", (function() {
				return W
			})), i.d(t, "L", (function() {
				return z
			})), i.d(t, "K", (function() {
				return K
			})), i.d(t, "J", (function() {
				return Y
			})), i.d(t, "E", (function() {
				return $
			})), i.d(t, "Y", (function() {
				return Q
			})), i.d(t, "F", (function() {
				return J
			})), i.d(t, "Z", (function() {
				return X
			})), i.d(t, "bb", (function() {
				return Z
			})), i.d(t, "ab", (function() {
				return ee
			})), i.d(t, "D", (function() {
				return te
			})), i.d(t, "C", (function() {
				return ie
			})), i.d(t, "P", (function() {
				return ne
			})), i.d(t, "O", (function() {
				return re
			})), i.d(t, "N", (function() {
				return se
			})), i.d(t, "gb", (function() {
				return oe
			})), i.d(t, "M", (function() {
				return de
			}));
			const n = "SUBREDDIT__MUTEDUSERS_PENDING",
				r = "SUBREDDIT__MUTEDUSERS_LOADED",
				s = "SUBREDDIT__MUTEDUSERS_FAILED",
				o = "SUBREDDIT_MUTEDUSERS_SEARCH_PENDING",
				d = "SUBREDDIT_MUTEDUSERS_SEARCH_LOADED",
				a = "SUBREDDIT_MUTEDUSERS_SEARCH_FAILED",
				l = "SUBREDDIT_MUTEDUSERS_MUTED_SUCCESS",
				u = "SUBREDDIT_MUTEDUSERS_UNMUTED_SUCCESS",
				c = "SUBREDDIT__APPROVEDSUBMITTERS_PENDING",
				_ = "SUBREDDIT__APPROVEDSUBMITTERS_LOADED",
				m = "SUBREDDIT__APPROVEDSUBMITTERS_FAILED",
				p = "SUBREDDIT_APPROVEDSUBMITTERS_SEARCH_PENDING",
				h = "SUBREDDIT_APPROVEDSUBMITTERS_SEARCH_LOADED",
				f = "SUBREDDIT_APPROVEDSUBMITTERS_SEARCH_FAILED",
				b = "SUBREDDIT_APPROVEDSUBMITTERS_APPROVED_SUCCESS",
				g = "SUBREDDIT_APPROVEDSUBMITTERS_UNAPPROVED_SUCCESS",
				w = "SUBREDDIT__BANNEDUSERS_PENDING",
				v = "SUBREDDIT__BANNEDUSERS_LOADED",
				y = "SUBREDDIT__BANNEDUSERS_FAILED",
				E = "SUBREDDIT_BANNEDUSERS_SEARCH_PENDING",
				S = "SUBREDDIT_BANNEDUSERS_SEARCH_LOADED",
				T = "SUBREDDIT_BANNEDUSERS_SEARCH_FAILED",
				O = "SUBREDDIT_BANNEDUSERS_BAN_SUCCESS",
				I = "SUBREDDIT_BANNEDUSERS_UNBAN_SUCCESS",
				R = "SUBREDDIT__MODERATORS_PENDING",
				F = "SUBREDDIT__MODERATORS_LOADED",
				N = "SUBREDDIT__MODERATORS_FAILED",
				C = "SUBREDDIT__EDITABLEMODERATORS_PENDING",
				j = "SUBREDDIT__EDITABLEMODERATORS_LOADED",
				A = "SUBREDDIT__EDITABLEMODERATORS_FAILED",
				x = "SUBREDDIT__INVITEDMODERATORS_PENDING",
				D = "SUBREDDIT__INVITEDMODERATORS_LOADED",
				P = "SUBREDDIT__INVITEDMODERATORS_FAILED",
				L = "SUBREDDIT__ADDMODERATOR_PENDING",
				k = "SUBREDDIT__ADDMODERATOR__SUCCESS",
				B = "SUBREDDIT__ADDMODERATOR__FAILED",
				M = "SUBREDDIT__REMOVEMODERATOR_PENDING",
				U = "SUBREDDIT__REMOVEMODERATOR__SUCCESS",
				G = "SUBREDDIT__REMOVEMODERATOR__FAILED",
				q = "SUBREDDIT__RESIGNMODERATOR__SUCCESS",
				V = "SUBREDDIT__EDITMODERATOR_PENDING",
				H = "SUBREDDIT__EDITMODERATOR__SUCCESS",
				W = "SUBREDDIT__EDITMODERATOR__FAILED",
				z = "SUBREDDIT_MODERATORS_SEARCH_PENDING",
				K = "SUBREDDIT_MODERATORS_SEARCH_LOADED",
				Y = "SUBREDDIT_MODERATORS_SEARCH_FAILED",
				$ = "SUBREDDIT_MODERATORS_ACCEPT_INVITE_SUCCESS",
				Q = "SUBREDDIT_NEWMODERATORPERMISSIONS_LOADED",
				J = "SUBREDDIT_MODERATORS_DECLINE_INVITE_SUCCESS",
				X = "SUBREDDIT__REMOVEINVITEDMODERATOR_PENDING",
				Z = "SUBREDDIT__REMOVEINVITEDMODERATOR__SUCCESS",
				ee = "SUBREDDIT__REMOVEINVITEDMODERATOR__FAILED",
				te = "LAST_AUTHOR_MOD_NOTE_LOADED",
				ie = "LAST_AUTHOR_MOD_NOTE_BATCH_LOADED",
				ne = "SUBREDDIT__MODUSERNOTES_PENDING",
				re = "SUBREDDIT__MODUSERNOTES_LOADED",
				se = "SUBREDDIT__MODUSERNOTES_FAILED",
				oe = "SUBREDDIT_TOTAL_MOD_NOTES_COUNT_LOADED",
				de = "SUBREDDIT__MODNOTE_CREATED"
		},
		"./src/reddit/actions/subredditModeration/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return R
			})), i.d(t, "e", (function() {
				return F
			})), i.d(t, "f", (function() {
				return A
			})), i.d(t, "b", (function() {
				return L
			})), i.d(t, "k", (function() {
				return G
			})), i.d(t, "d", (function() {
				return W
			})), i.d(t, "h", (function() {
				return $
			})), i.d(t, "i", (function() {
				return J
			})), i.d(t, "a", (function() {
				return X
			})), i.d(t, "c", (function() {
				return ee
			})), i.d(t, "j", (function() {
				return re
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/lib/makeActionCreator/index.ts"),
				s = i("./src/reddit/actions/toaster.ts"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/makeApiRequest/index.ts"),
				a = i("./src/lib/omitHeaders/index.ts"),
				l = i("./src/reddit/constants/headers.ts"),
				u = i("./src/reddit/helpers/addRedesignIdentifier/index.ts");
			const c = (e, t, i) => Object(d.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/v1/${t}/moderators`),
					method: o.jb.GET,
					data: {
						...i,
						count: 10
					}
				}),
				_ = (e, t, i) => Object(d.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/v1/${t}/moderators_invited`),
					method: o.jb.GET,
					data: {
						...i,
						count: 50
					}
				});
			var m = i("./src/reddit/helpers/normalizeUsername/index.tsx"),
				p = i("./src/reddit/models/ModeratingSubreddits/index.ts"),
				h = i("./src/reddit/models/SubredditModeration/index.ts"),
				f = i("./src/reddit/models/Toast/index.ts"),
				b = i("./src/reddit/models/User/index.ts"),
				g = i("./src/reddit/selectors/subreddit.ts"),
				w = i("./src/reddit/selectors/user.ts"),
				v = i("./src/reddit/actions/subredditModeration/constants.ts");
			const y = Object(r.a)(v.I),
				E = Object(r.a)(v.H),
				S = Object(r.a)(v.G),
				T = Object(r.a)(v.v),
				O = Object(r.a)(v.u),
				I = Object(r.a)(v.t),
				R = (e, t) => async (i, n, {
					apiContext: r
				}) => {
					const s = n(),
						o = Object(g.S)(s, {
							subredditId: e
						}).name,
						d = t && t.after ? t.after : "",
						a = t && t.before ? t.before : "",
						l = Object(h.e)(e, d, a),
						u = s.pages.modHub.moderators.userOrder.data[l],
						_ = s.pages.modHub.moderators.userOrder.api.error[l];
					if (s.pages.modHub.moderators.userOrder.api.pending[l] || u && !_) return;
					i(y({
						subredditId: e,
						key: l
					}));
					const m = await c(r(), o, t);
					if (m.ok) {
						const t = {
							key: l,
							response: m.body,
							subredditId: e
						};
						i(E(t))
					} else {
						const t = {
							error: m.error,
							subredditId: e,
							key: l
						};
						i(S(t))
					}
				}, F = (e, t) => async (i, n, {
					apiContext: r
				}) => {
					const s = n(),
						u = Object(g.S)(s, {
							subredditId: e
						}).name,
						c = t && t.afterEditable ? t.afterEditable : "",
						_ = t && t.beforeEditable ? t.beforeEditable : "",
						m = Object(h.e)(e, c, _),
						p = s.pages.modHub.moderators.editableUserOrder.data[m],
						f = s.pages.modHub.moderators.editableUserOrder.api.error[m];
					if (s.pages.modHub.moderators.editableUserOrder.api.pending[m] || p && !f) return;
					i(T({
						subredditId: e,
						key: m
					}));
					const b = {
							...t,
							after: c,
							before: _
						},
						w = await ((e, t, i) => Object(d.a)(Object(a.a)(e, [l.a]), {
							endpoint: `${e.apiUrl}/api/v1/${t}/moderators_editable`,
							method: o.jb.GET,
							data: {
								...i,
								count: 10
							}
						}))(r(), u, b);
					if (w.ok) {
						const t = {
							key: m,
							response: w.body,
							subredditId: e
						};
						i(O(t))
					} else {
						const t = {
							key: m,
							error: w.error,
							subredditId: e
						};
						i(I(t))
					}
				}, N = Object(r.a)(v.B), C = Object(r.a)(v.A), j = Object(r.a)(v.z), A = e => async (t, i, {
					apiContext: n
				}) => {
					const r = i(),
						s = Object(g.S)(r, {
							subredditId: e
						}).name;
					if (r.pages.modHub.moderators.invitedModerators.api.pending) return;
					t(N());
					const o = await _(n(), s);
					if (o.ok) {
						const e = o.body;
						t(C(e))
					} else t(j(o.error))
				}, x = Object(r.a)(v.a), D = Object(r.a)(v.c), P = Object(r.a)(v.b), L = (e, t, i) => async (r, u, {
					apiContext: c
				}) => {
					const h = u(),
						b = Object(g.S)(h, {
							subredditId: e
						}),
						w = b.name,
						v = b.url;
					t = Object(m.a)(t), r(x());
					const y = Object(p.d)(i),
						E = await ((e, t, i, n) => Object(d.a)(Object(a.a)(e, [l.a]), {
							endpoint: `${e.apiUrl}${t}api/friend`,
							method: o.jb.POST,
							data: {
								name: i,
								type: "moderator_invite",
								permissions: n,
								api_type: "json"
							}
						}))(c(), v, t, y);
					if (E.ok) {
						const i = await _(c(), w, {
							username: t
						});
						if (E.ok) {
							const t = i.body,
								o = t.moderatorIds[0];
							h.pages.modHub.moderators.invitedModerators.models[e][o] ? r(Object(s.f)({
								kind: f.b.SuccessCommunity,
								text: n.fbt._("That user is already invited", null, {
									hk: "R8YPV"
								})
							})) : (r(Object(s.f)({
								kind: f.b.SuccessMod,
								text: n.fbt._("Successfully added a moderator", null, {
									hk: "2ZdoIZ"
								})
							})), r(D(t)))
						}
					} else {
						const e = E.body.json && E.body.json.errors;
						e && e[0] && e[0][1] && r(Object(s.f)({
							kind: f.b.Error,
							text: e[0][1],
							duration: 3e3
						})), r(P())
					}
				}, k = Object(r.a)(v.cb), B = Object(r.a)(v.eb), M = Object(r.a)(v.db), U = Object(r.a)(v.fb), G = (e, t, i, n) => async (r, s, {
					apiContext: u
				}) => {
					const c = s(),
						_ = c.subreddits.models[e].name,
						m = Object(h.e)(e, i, n);
					if (r(k()), (await ((e, t, i) => Object(d.a)(Object(a.a)(e, [l.a]), {
							endpoint: `${e.apiUrl}/api/unfriend`,
							method: o.jb.POST,
							data: {
								id: i,
								type: "moderator",
								r: t,
								api_type: "json"
							}
						}))(u(), _, t)).ok) {
						r(B({
							subredditId: e,
							userId: t,
							key: m
						}));
						const i = Object(w.k)(c);
						i && i.id === t && r(U({
							subredditId: e,
							userId: t
						}))
					} else r(M())
				}, q = Object(r.a)(v.w), V = Object(r.a)(v.y), H = Object(r.a)(v.x), W = (e, t, i, n) => async (r, s, {
					apiContext: u
				}) => {
					const c = s().subreddits.models[e].url;
					r(q());
					const _ = Object(p.d)(i);
					if ((await ((e, t, i, n) => Object(d.a)(Object(a.a)(e, [l.a]), {
							endpoint: `${e.apiUrl}${t}api/setpermissions`,
							method: o.jb.POST,
							data: {
								name: i,
								type: "moderator",
								permissions: n,
								api_type: "json"
							}
						}))(u(), c, t, _)).ok) {
						r(V({
							permissions: i,
							subredditId: e,
							userId: n
						}))
					} else r(H())
				}, z = Object(r.a)(v.L), K = Object(r.a)(v.K), Y = Object(r.a)(v.J), $ = (e, t) => async (i, n, {
					apiContext: r
				}) => {
					const s = n().subreddits.models[e].name,
						o = {
							username: Object(m.a)(t)
						};
					i(z());
					const d = await c(r(), s, o);
					d.ok ? i(K(d.body)) : i(Y(d.error))
				}, Q = Object(r.a)(v.E), J = Object(r.a)(v.Y), X = e => async (t, i, {
					apiContext: n
				}) => {
					const r = i(),
						s = r.user.account;
					if (!s) return;
					const u = r.subreddits.models[e],
						_ = u.url,
						m = u.name;
					if ((await ((e, t) => Object(d.a)(Object(a.a)(e, [l.a]), {
							endpoint: `${e.apiUrl}${t}api/accept_moderator_invite`,
							method: o.jb.POST,
							data: {
								api_type: "json"
							}
						}))(n(), _)).ok) {
						t(Q({
							subredditId: e
						})), t(F(e)), t(A(e)), t(R(e));
						const i = {
								username: Object(b.e)(s)
							},
							r = await c(n(), m, i);
						if (r.ok) {
							const i = r.body.moderators[s.id];
							i && t(J({
								[e]: i.modPermissions
							}))
						}
					}
				}, Z = Object(r.a)(v.F), ee = e => async (t, i, {
					apiContext: n
				}) => {
					const r = i().subreddits.models[e].name;
					(await ((e, t) => Object(d.a)(Object(a.a)(e, [l.a]), {
						endpoint: `${e.apiUrl}/api/v1/${t}/decline_mod_invite`,
						method: o.jb.POST,
						data: {
							api_type: "json"
						}
					}))(n(), r)).ok && t(Z({
						subredditId: e
					}))
				}, te = Object(r.a)(v.Z), ie = Object(r.a)(v.bb), ne = Object(r.a)(v.ab), re = (e, t) => async (i, n, {
					apiContext: r
				}) => {
					const s = n(),
						u = Object(g.S)(s, {
							subredditId: e
						}).name;
					i(te()), (await ((e, t, i) => Object(d.a)(Object(a.a)(e, [l.a]), {
						endpoint: `${e.apiUrl}/api/unfriend`,
						method: o.jb.POST,
						data: {
							id: i,
							type: "moderator_invite",
							r: t,
							api_type: "json"
						}
					}))(r(), u, t)).ok ? i(ie({
						subredditId: e,
						userId: t
					})) : i(ne())
				}
		},
		"./src/reddit/actions/survey/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "l", (function() {
				return n
			})), i.d(t, "f", (function() {
				return r
			})), i.d(t, "g", (function() {
				return s
			})), i.d(t, "h", (function() {
				return o
			})), i.d(t, "m", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "i", (function() {
				return _
			})), i.d(t, "j", (function() {
				return m
			})), i.d(t, "e", (function() {
				return p
			})), i.d(t, "k", (function() {
				return h
			}));
			const n = "SURVEY__TRIGGER_SCROLL_COUNTED",
				r = "SURVEY__LAYER_TRIGGER_SCROLL_COUNTED",
				s = "SURVEY__MODS_TRIGGER_SCROLL_COUNTED",
				o = "SURVEY__POST_DISMISS_COUNTED",
				d = "SURVEY__TRIGGER_VIDEOS_WATCHED",
				a = "SURVEY__CHAT_VIEW_TRIGGER",
				l = "SURVEY__DEMO_SURVEY_TOGGLED",
				u = "SURVEY__DEMO_TRIGGER_SELECTED",
				c = "SURVEY__DEMO_TRIGGER_THRESHOLD_CHANGED",
				_ = "SURVEY__SAMPLE_FACTOR_TOGGLED",
				m = "SURVEY__SEARCH_VIEW_TRIGGER",
				p = "SURVEY__DISMISS_SIGNUP_TRIGGER",
				h = "SURVEY__SUCCESSFUL_SIGNUP_TRIGGER"
		},
		"./src/reddit/actions/survey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return f
			})), i.d(t, "b", (function() {
				return b
			})), i.d(t, "c", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			})), i.d(t, "j", (function() {
				return v
			})), i.d(t, "l", (function() {
				return y
			})), i.d(t, "k", (function() {
				return E
			})), i.d(t, "m", (function() {
				return S
			})), i.d(t, "h", (function() {
				return T
			})), i.d(t, "i", (function() {
				return O
			})), i.d(t, "d", (function() {
				return I
			})), i.d(t, "g", (function() {
				return F
			})), i.d(t, "f", (function() {
				return N
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/lib/filterQueryParams/index.ts");
			var s = (e, t) => {
					history.replaceState(history.state, "", Object(r.a)(e, t))
				},
				o = i("./src/reddit/actions/preferences.ts"),
				d = i("./src/reddit/constants/parameters.ts"),
				a = i("./src/reddit/endpoints/survey/index.ts"),
				l = i("./src/reddit/helpers/localStorage/index.ts"),
				u = i("./src/reddit/selectors/experiments/survey.ts"),
				c = i("./src/reddit/selectors/platform.ts"),
				_ = i("./src/reddit/actions/survey/constants.ts");
			const m = Object(n.a)(_.l),
				p = Object(n.a)(_.f),
				h = Object(n.a)(_.g),
				f = Object(n.a)(_.b),
				b = Object(n.a)(_.c),
				g = Object(n.a)(_.d),
				w = Object(n.a)(_.i),
				v = Object(n.a)(_.h),
				y = Object(n.a)(_.m),
				E = () => async (e, t) => {
					const i = t();
					Object(u.c)(i) ? e(h()) : Object(u.b)(i) ? e(p()) : e(m())
				}, S = () => async (e, t) => {
					const i = t().user.prefs.surveyLastSeenTime,
						n = Object(l.Q)();
					i && (!n || i > n) ? Object(l.Vb)(i) : n && (!i || n > i) && e(Object(o.I)({
						surveyLastSeenTime: n
					}, !1))
				}, T = Object(n.a)(_.a), O = Object(n.a)(_.j), I = Object(n.a)(_.e), R = Object(n.a)(_.k), F = () => async (e, t) => {
					const i = Object(c.q)(t());
					!!i && "true" === i[d.w] && (e(R()), s(window.location.href, [d.w]))
				}, N = () => async (e, t, {
					gqlContext: i
				}) => {
					const n = await Object(a.a)(i());
					if (n.ok) {
						const e = n.body,
							{
								surveyCooldownDays: t,
								activeSurveys: i
							} = e.data.customerSurveyConfig;
						Object(l.Ub)(t, i)
					}
				}
		},
		"./src/reddit/actions/toaster.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "e", (function() {
				return f
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/lib/makeActionCreator/index.ts"),
				s = i("./src/reddit/models/Toast/index.ts");
			const o = 5e3,
				d = s.b.SuccessCommunity,
				a = "TOAST__DISPLAYED",
				l = "TOAST__DISMISSED",
				u = Object(r.a)(a),
				c = Object(r.a)(l),
				_ = e => async t => {
					const i = p(e);
					t(u(i)), i.duration > 0 && window.setTimeout(() => t(c(i.id)), i.duration)
				}, m = () => {
					const e = {
						text: n.fbt._("Oops, something went wrong. Try again.", null, {
							hk: "2VQ3RW"
						}),
						kind: s.b.Error
					};
					return _(e)
				}, p = e => ({
					...e,
					duration: e.duration || h(e.kind),
					id: e.id || Date.now().toString(),
					kind: e.kind || d
				}), h = e => {
					switch (e) {
						case s.b.Error:
							return -1;
						case s.b.Undo:
						case s.b.SuccessLockComment:
						case s.b.SuccessUnlockComment:
							return 1e4;
						case s.b.SuccessCommunity:
						case s.b.SuccessMod:
						default:
							return o
					}
				}, f = (e, t, i, n, r, s) => ({
					text: e,
					kind: t,
					buttonText: i,
					buttonAction: n,
					secondButtonText: r,
					secondButtonAction: s
				})
		},
		"./src/reddit/actions/tooltip.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			})), i.d(t, "h", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			})), i.d(t, "g", (function() {
				return _
			})), i.d(t, "j", (function() {
				return m
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "TOOLTIP__DROPDOWN_TOGGLED",
				s = "TOOLTIP__DROPDOWN_SET",
				o = "TOOLTIP__DROPDOWN_UNSET",
				d = "TOOLTIP__DROPDOWN_SET_IF_NONE",
				a = "TOOLTIP__DROPDOWN_UNSET_IF_ACTIVE",
				l = Object(n.a)(s),
				u = Object(n.a)(r),
				c = Object(n.a)(o),
				_ = Object(n.a)(d),
				m = Object(n.a)(a)
		},
		"./src/reddit/actions/tracing.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			}));
			var n = i("./src/lib/makeActionCreator/index.ts");
			const r = "PARENT_SPAN_RECEIVED",
				s = Object(n.a)(r)
		},
		"./src/reddit/actions/trophyCase.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return l
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/lib/makeGqlRequest/index.ts"),
				s = i("./src/redditGQL/operations/ProfileTrophies.json");
			const o = "TROPHYCASE__FETCH_SUCCESS",
				d = Object(n.a)(o),
				a = Object(n.a)("TROPHYCASE__FETCH_FAILED"),
				l = (e, t) => async (i, n, {
					gqlContext: o
				}) => {
					const l = await ((e, t) => Object(r.a)(e, {
							...s,
							variables: t
						}, {
							traceRequestName: "get_profile_trophies"
						}))(o(), {
							profileName: e
						}),
						u = l.body.data;
					if (l.ok && u) {
						const n = {},
							r = [];
						u.redditor && u.redditor.trophies && u.redditor.trophies.map(e => {
							const t = (({
									icon40Url: e,
									trophyId: t,
									...i
								}) => ({
									icon: e,
									id: t,
									...i
								}))(e),
								{
									id: i
								} = t;
							n[i] = t, r.push(i)
						}), i(d({
							profileId: t,
							profileName: e,
							trophies: n,
							trophyIds: r
						}))
					} else i(a({
						profileId: t,
						error: l.error
					}))
				}
		},
		"./src/reddit/actions/unload/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			const n = new Set,
				r = [],
				s = "AD_UNLOAD",
				o = 6e5
		},
		"./src/reddit/actions/users.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return H
			})), i.d(t, "r", (function() {
				return W
			})), i.d(t, "g", (function() {
				return z
			})), i.d(t, "f", (function() {
				return K
			})), i.d(t, "e", (function() {
				return Y
			})), i.d(t, "k", (function() {
				return $
			})), i.d(t, "d", (function() {
				return Q
			})), i.d(t, "B", (function() {
				return ee
			})), i.d(t, "c", (function() {
				return te
			})), i.d(t, "s", (function() {
				return ie
			})), i.d(t, "t", (function() {
				return ne
			})), i.d(t, "q", (function() {
				return re
			})), i.d(t, "z", (function() {
				return se
			})), i.d(t, "u", (function() {
				return oe
			})), i.d(t, "a", (function() {
				return de
			})), i.d(t, "p", (function() {
				return le
			})), i.d(t, "w", (function() {
				return ue
			})), i.d(t, "n", (function() {
				return ce
			})), i.d(t, "o", (function() {
				return _e
			})), i.d(t, "m", (function() {
				return me
			})), i.d(t, "v", (function() {
				return ge
			})), i.d(t, "x", (function() {
				return we
			})), i.d(t, "i", (function() {
				return ve
			})), i.d(t, "j", (function() {
				return ye
			})), i.d(t, "h", (function() {
				return Ee
			})), i.d(t, "y", (function() {
				return Ie
			})), i.d(t, "l", (function() {
				return Re
			})), i.d(t, "A", (function() {
				return Fe
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/makeActionCreator/index.ts"),
				o = i("./src/reddit/actions/emailVerificationTooltip.ts"),
				d = i("./src/reddit/actions/modal.ts"),
				a = i("./src/reddit/actions/notificationBanner.ts"),
				l = i("./src/reddit/actions/toaster.ts"),
				u = i("./src/reddit/components/NotificationBanners/bannerIds.ts"),
				c = i("./src/reddit/components/Settings/modalIds.ts"),
				_ = i("./src/reddit/endpoints/user/index.ts"),
				m = i("./src/lib/makeApiRequest/index.ts"),
				p = i("./src/lib/omitHeaders/index.ts"),
				h = i("./src/reddit/constants/headers.ts"),
				f = i("./src/config.ts"),
				b = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				g = e => Object(m.a)(e, {
					endpoint: Object(b.a)(`${f.a.gatewayUrl}/desktopapi/v1/me`),
					method: r.jb.GET,
					data: {
						api_type: "json",
						gilding_detail: 1,
						awarded_detail: 1
					}
				}),
				w = i("./src/reddit/helpers/getErrorMsgFromR2JQueryResponse.ts"),
				v = i("./node_modules/promise-retry/index.js"),
				y = i.n(v),
				E = i("./src/lib/makeRequest/index.ts");
			var S = i("./src/reddit/constants/history.ts"),
				T = i("./src/reddit/endpoints/session/index.ts"),
				O = i("./node_modules/js-cookie/src/js.cookie.js"),
				I = i.n(O),
				R = i("./src/lib/constants/cookie.ts");
			const F = e => {
				I.a.remove(e, {
					domain: f.a.cookieDomain
				})
			};
			var N = i("./src/reddit/helpers/history/index.ts");
			const C = 2 * r.kb;
			var j = e => Date.now() + C < new Date(e.expires).getTime(),
				A = i("./src/reddit/helpers/localStorage/index.ts"),
				x = i("./src/reddit/hooks/useSessionBlockingModal.tsx"),
				D = async (e, t) => {
					let i = t.accessToken;
					await y()(async (n, s) => {
						if (!j(t) || !i) {
							const r = await Object(T.b)(e, t);
							if (r.ok) {
								const e = r.body;
								i = e.accessToken
							} else if (1 === s) return n()
						}
						const o = await Object(m.a)(e, {
							endpoint: "/logoutproxy",
							method: r.jb.POST,
							data: {
								access_token: i
							}
						});
						if (await async function(e, t) {
								return await Object(E.b)({
									method: r.jb.POST,
									endpoint: "/timings/logoutrequest",
									data: {
										appName: e.statsAppName,
										successful: t
									},
									type: "json"
								})
							}(e, o && o.ok), !o.ok) return n()
					}, {
						retries: 1
					}).catch(() => {}).finally(() => {
						[R.d, R.e, R.h, R.i].forEach(F), Object(A.Z)(null), Object(x.a)(), Object(N.a)(S.b.JustLoggedOut, !0), window.location.reload()
					})
				}, P = i("./src/reddit/helpers/redesignOptoutCookie/index.ts"), L = i("./src/reddit/helpers/trackers/emailCollection.ts"), k = i("./src/reddit/helpers/trackers/emailVerification.ts"), B = i("./src/reddit/models/Toast/index.ts"), M = i("./src/reddit/selectors/activeModalId.ts"), U = i("./src/reddit/selectors/emailCollection.ts"), G = i("./src/reddit/selectors/notificationBanner.ts"), q = i("./src/reddit/selectors/user.ts"), V = i("./src/telemetry/index.ts");
			const H = "USER__LOID_RECEIVED",
				W = Object(s.a)(H),
				z = "USER__REQUEST_PENDING",
				K = "USER__REQUEST_LOADED",
				Y = "USER__REQUEST_FAILED",
				$ = "USER__SESSION_TRACKER_RECEIVED",
				Q = "USER__REDDAID_RECEIVED",
				J = Object(s.a)(z),
				X = Object(s.a)(K),
				Z = Object(s.a)(Y),
				ee = e => async (t, i, {
					apiContext: n
				}) => {
					if (i().users.models[e.toLowerCase()] || e === r.E) return;
					t(J({
						username: e
					}));
					const s = await Object(_.b)(n(), e);
					if (s.ok) {
						const i = {
							data: s.body
						};
						i.username = e, t(X(i))
					} else {
						const i = s.error;
						i.username = e, t(Z(i))
					}
				}, te = "USER__MYSELF_LOADED", ie = Object(s.a)(te);

			function ne({
				forceFetch: e
			} = {}) {
				return async (t, i, {
					apiContext: n
				}) => {
					const r = i();
					if (r.user.account && !e || !r.user.session || r.user.session.unsafeLoggedOut) return;
					const s = await g(n());
					s.ok && t(ie(s.body))
				}
			}
			const re = () => async (e, t, {
				apiContext: i
			}) => {
				const n = t().user.session;
				Object(P.a)(), n && D(i(), n)
			}, se = Object(s.a)($), oe = Object(s.a)(Q), de = "USER__LAYOUT_SWITCH_VIEWED", ae = Object(s.a)(de), le = () => async (e, t, {
				apiContext: i
			}) => {
				const n = t();
				n.user.account && !n.user.account.seenLayoutSwitch && (e(ae()), Object(_.c)(i()))
			}, ue = e => async (t, i, {
				apiContext: n
			}) => {
				const s = await ((e, t) => Object(m.a)(Object(p.a)(e, [h.a]), {
						method: r.jb.POST,
						endpoint: `${e.apiUrl}/api/deactivate_user`,
						data: {
							user: t.username,
							passwd: t.password,
							confirm: t.checkbox,
							deactivate_message: t.feedback
						}
					}))(n(), e),
					o = i().user.session;
				s.ok && s.body && s.body.success ? o && D(n(), o) : t(Object(l.f)({
					kind: B.b.Error,
					text: "Something went wrong deactivating your account. Try again later."
				}))
			}, ce = "USER__UPDATE_EMAIL_PENDING", _e = "USER__UPDATE_EMAIL_SUCCESS", me = "USER__UPDATE_EMAIL_FAILURE", pe = Object(s.a)(ce), he = Object(s.a)(_e), fe = Object(s.a)(me), be = (e, t) => {
				t.isEmailVerificationTooltipShowing && e(Object(o.b)())
			}, ge = e => async (t, i, {
				apiContext: n
			}) => {
				const {
					...s
				} = e;
				if (Object(q.H)(i(), "changeEmail")) return;
				t(pe());
				const o = await ((e, {
						newEmail: t,
						password: i
					}) => Object(m.a)(Object(p.a)(e, [h.a]), {
						method: r.jb.POST,
						endpoint: `${e.apiUrl}/api/update_email`,
						data: {
							...i && {
								curpass: i
							},
							email: t
						}
					}))(n(), s),
					d = i();
				if (o.ok && o.body && o.body.success) {
					Object(G.a)(u.a.EmailCollectionBannerId)(d) && t(Object(a.c)(u.a.EmailCollectionBannerId)), Object(U.a)(d) && Object(V.a)(Object(L.c)(d));
					const e = Object(q.M)(d);
					e || await t(we()), t(he(s.newEmail)), e && t(Te()), be(t, d)
				} else {
					const e = Object(w.b)(o, "Something went wrong updating your email. Try again later.");
					t(fe(e))
				}
			}, we = e => async (t, i, {
				apiContext: s
			}) => {
				const o = await ((e, t) => Object(m.a)(Object(p.a)(e, [h.a]), {
						method: r.jb.GET,
						endpoint: `${e.apiUrl}/api/send_verification_email`,
						...t.source && {
							data: t
						}
					}))(s(), {
						source: e
					}),
					a = i();
				if (o.ok && o.body && o.body.success) {
					e && (Object(V.a)(Object(k.f)(e)(a)), be(t, a));
					const i = Object(M.a)(a),
						n = i === c.h || i === c.p ? c.p : c.c;
					t(Object(d.i)(n))
				} else t(Object(l.f)({
					duration: l.a,
					kind: B.b.Error,
					text: n.fbt._("Something went wrong sending verification email. Try again later.", null, {
						hk: "2yTdAw"
					})
				}))
			}, ve = "USER__SEND_RESET_EMAIL_PENDING", ye = "USER__SEND_RESET_EMAIL_SUCCESS", Ee = "USER__SEND_RESET_EMAIL_FAILURE", Se = Object(s.a)(ve), Te = Object(s.a)(ye), Oe = Object(s.a)(Ee), Ie = e => async (t, i, {
				apiContext: n
			}) => {
				if (Object(q.H)(i(), "sendResetEmail")) return;
				t(Se());
				const s = await ((e, t) => Object(m.a)(Object(p.a)(e, [h.a]), {
					method: r.jb.POST,
					endpoint: `${e.apiUrl}/api/password`,
					data: {
						email: t.curEmail,
						name: t.name
					}
				}))(n(), e);
				if (!s.ok || !s.body || !s.body.success) {
					const e = Object(w.b)(s, "Something went wrong sending the reset email. Please try again.");
					return t(Oe()), void t(Object(l.f)({
						duration: l.a,
						kind: B.b.Error,
						text: e
					}))
				}
				t(Te())
			}, Re = "SET_USER_AVATAR_ICON", Fe = Object(s.a)(Re)
		},
		"./src/reddit/actions/video.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return f
			})), i.d(t, "k", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			})), i.d(t, "f", (function() {
				return v
			})), i.d(t, "g", (function() {
				return y
			})), i.d(t, "h", (function() {
				return E
			})), i.d(t, "j", (function() {
				return S
			})), i.d(t, "m", (function() {
				return T
			})), i.d(t, "o", (function() {
				return O
			})), i.d(t, "p", (function() {
				return I
			})), i.d(t, "n", (function() {
				return R
			})), i.d(t, "a", (function() {
				return F
			})), i.d(t, "i", (function() {
				return N
			})), i.d(t, "c", (function() {
				return C
			})), i.d(t, "l", (function() {
				return j
			})), i.d(t, "x", (function() {
				return D
			})), i.d(t, "v", (function() {
				return P
			})), i.d(t, "w", (function() {
				return L
			})), i.d(t, "u", (function() {
				return k
			})), i.d(t, "M", (function() {
				return B
			})), i.d(t, "B", (function() {
				return M
			})), i.d(t, "N", (function() {
				return U
			})), i.d(t, "O", (function() {
				return G
			})), i.d(t, "y", (function() {
				return V
			})), i.d(t, "z", (function() {
				return W
			})), i.d(t, "D", (function() {
				return Y
			})), i.d(t, "I", (function() {
				return $
			})), i.d(t, "t", (function() {
				return Q
			})), i.d(t, "J", (function() {
				return X
			})), i.d(t, "H", (function() {
				return te
			})), i.d(t, "F", (function() {
				return ie
			})), i.d(t, "r", (function() {
				return ne
			})), i.d(t, "E", (function() {
				return re
			})), i.d(t, "q", (function() {
				return se
			})), i.d(t, "A", (function() {
				return oe
			})), i.d(t, "C", (function() {
				return de
			})), i.d(t, "s", (function() {
				return ae
			})), i.d(t, "G", (function() {
				return le
			})), i.d(t, "K", (function() {
				return ue
			})), i.d(t, "L", (function() {
				return ce
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/constants/adEvents.ts"),
				s = i("./src/reddit/constants/video.ts"),
				o = i("./src/reddit/helpers/correlationIdTracker.ts"),
				d = i("./src/lib/ads/index.ts"),
				a = i("./src/lib/ads/store.ts"),
				l = i("./src/reddit/actions/post.ts"),
				u = i("./src/reddit/helpers/trackers/media.ts"),
				c = i("./src/reddit/helpers/trackers/postList.ts"),
				_ = i("./src/reddit/selectors/platform.ts"),
				m = i("./src/reddit/selectors/posts.ts"),
				p = i("./src/reddit/selectors/telemetry.ts"),
				h = (i("./src/reddit/selectors/video.ts"), i("./src/telemetry/index.ts"));
			const f = "VIDEO__CONSUMED",
				b = "VIDEO__SET_FULLSCREEN",
				g = "VIDEO__EXIT_FULLSCREEN",
				w = "VIDEO__LOADABLE",
				v = "VIDEO__LOADING",
				y = "VIDEO__PAUSED",
				E = "VIDEO__PLAYABLE",
				S = "VIDEO__METADATA_RECEIVED",
				T = "VIDEO__STARTED",
				O = "VIDEO__UNLOADABLE",
				I = "VIDEO__UNPAUSED",
				R = "VIDEO__TIME_UPDATED",
				F = "VIDEO__BUFFERING",
				N = "VIDEO__PLAYING",
				C = "VIDEO__CONTINUOUS_VIEW_STARTED_AT",
				j = "VIDEO__SET_MUTED_IN_FEED",
				A = (() => {
					let e = "";
					return (t, i, n, r) => async (s, d) => {
						if (null != t) {
							e !== t && (e = t, Object(o.e)(o.a.VideoView));
							const s = d(),
								a = r ? u.b(t, i, n) : u.a(t, i, n);
							Object(h.a)({
								...p.o(s),
								...a(s)
							})
						}
					}
				})(),
				x = Object(n.a)(C),
				D = e => async (t, i) => {
					const n = i(),
						s = Object(m.G)(n, {
							postId: e
						});
					t(A(e, "is_viewable", "video", !1)), s.isSponsored && t(Object(l.z)(s, r.a.VideoViewableImpression))
				}, P = e => async (t, i) => {
					const n = i(),
						s = Object(m.G)(n, {
							postId: e
						});
					s.isSponsored && t(Object(l.z)(s, r.a.VideoGroupMViewable))
				}, L = e => async (t, i) => {
					const n = i(),
						s = Object(m.G)(n, {
							postId: e
						});
					s.isSponsored && t(Object(l.z)(s, r.a.VideoVendorFullyViewable50))
				}, k = e => async (t, i) => {
					const n = i(),
						s = Object(m.G)(n, {
							postId: e
						});
					t(A(e, "is_fully_viewable", "video", !1)), s.isSponsored && t(Object(l.z)(s, r.a.VideoFullyViewableImpression))
				}, B = e => async (t, i) => {
					const n = Object(m.G)(i(), {
						postId: e
					});
					t(A(e, "start", "video", !1)), n.isSponsored && t(Object(l.z)(n, r.a.VideoStarted))
				}, M = (e, t) => async (i, n) => {
					const s = Object(m.G)(n(), {
						postId: t
					});
					i(A(t, "play_with_sound", "video", !1)), i(A(t, "is_viewable", "video", !1)), i(A(t, "is_fully_viewable", "video", !1)), s.isSponsored && (i(Object(l.z)(s, r.a.VideoPlayedWithSound)), e && (i(Object(l.z)(s, r.a.VideoViewableImpression)), i(Object(l.z)(s, r.a.VideoFullyViewableImpression))))
				}, U = (e, t) => async (i, n) => {
					const o = Object(m.G)(n(), {
						postId: t
					});
					let d, a;
					switch (e) {
						case s.b:
							d = "watch_25_percent", a = r.a.VideoWatched25;
							break;
						case s.c:
							d = "watch_50_percent", a = r.a.VideoWatched50;
							break;
						case s.d:
							d = "watch_75_percent", a = r.a.VideoWatched75;
							break;
						case s.e:
							d = "watch_95_percent", a = r.a.VideoWatched95;
							break;
						default:
							d = "watch_100_percent", a = r.a.VideoWatched100
					}
					i(A(t, d, "video", !1)), o.isSponsored && i(Object(l.z)(o, a, d))
				}, G = (e, t) => async (i, n) => {
					const o = Object(m.G)(n(), {
						postId: t
					});
					let d, a;
					switch (e) {
						case s.g:
							d = "watch_2_seconds", a = r.a.VideoWatchedSeconds2;
							break;
						case s.h:
							d = "watch_3_seconds", a = r.a.VideoWatchedSeconds3;
							break;
						case s.i:
							d = "watch_5_seconds", a = r.a.VideoWatchedSeconds5;
							break;
						default:
							d = "watch_10_seconds", a = r.a.VideoWatchedSeconds10
					}
					i(A(t, d, "video", !1)), o.isSponsored && i(Object(l.z)(o, a, d))
				}, q = Object(n.a)(f), V = Object(n.a)(w), H = Object(n.a)(v), W = Object(n.a)(y), z = Object(n.a)(E), K = Object(n.a)(b), Y = Object(n.a)(S), $ = Object(n.a)(R), Q = Object(n.a)(g), J = Object(n.a)(T), X = Object(n.a)(O), Z = Object(n.a)(I), ee = Object(n.a)(F), te = Object(n.a)(N), ie = e => async (t, i) => {
					const n = Object(m.G)(i(), {
						postId: e
					});
					t(K({
						postId: e
					})), ((e, t, i) => {
						i(A(t, "play_expanded", "video", !1)), i(A(t, "is_viewable", "video", !1)), i(A(t, "is_fully_viewable", "video", !1)), e.isSponsored && (i(Object(l.z)(e, r.a.VideoPlayedExpanded)), i(Object(l.z)(e, r.a.VideoViewableImpression)), i(Object(l.z)(e, r.a.VideoFullyViewableImpression)))
					})(n, e, t)
				}, ne = (e, t) => async (i, n) => {
					const r = n();
					r.posts.video.autoPlayed[e] && Object(_.k)(r) && (c.f(r, e), void 0 !== t && i(ee({
						postId: e,
						isBuffering: t
					})))
				}, re = e => async (t, i) => {
					const n = i();
					n.posts.video.autoPlayed[e] && Object(_.k)(n) && c.j(n, e)
				}, se = (e, t) => async (i, n) => {
					i(H({
						postId: e,
						time: t
					}));
					const r = n();
					Object(_.k)(r) && c.h(r, e)
				}, oe = (e, t) => async (i, n) => {
					i(z({
						postId: e,
						time: t
					}));
					const r = n();
					Object(_.k)(r) && c.a(r, e)
				}, de = e => async (t, i) => {
					const n = i(),
						r = n.posts.video.autoPlayed[e],
						s = n.posts.video.started[e];
					t(J({
						postId: e
					})), t(Z({
						postId: e
					})), !s && r && Object(_.k)(n) && c.e(n, e)
				}, ae = e => async (t, i) => {
					const n = i(),
						r = n.posts.video.autoPlayed[e],
						s = n.posts.video.consumed[e];
					t(q({
						postId: e
					})), r && Object(_.k)(n) && !s && c.b(n, e)
				}, le = Object(n.a)(j), ue = (e, t) => async (i, n) => {
					i(x({
						postId: e,
						time: t
					}));
					const r = n();
					Object(m.G)(r, {
						postId: e
					}).isSponsored && a.e(e, !0, d.n.seeked)
				}, ce = e => async (t, i) => {
					const n = i();
					Object(m.G)(n, {
						postId: e
					}).isSponsored && a.e(e, !0, d.n.seeked)
				}
		},
		"./src/reddit/actions/vote.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return y
			}));
			var n = i("./src/lib/makeActionCreator/index.ts"),
				r = i("./src/reddit/actions/login.ts"),
				s = i("./src/reddit/actions/modal.ts"),
				o = i("./src/reddit/actions/post.ts"),
				d = i("./src/reddit/constants/adEvents.ts"),
				a = i("./src/lib/constants/index.ts"),
				l = i("./src/lib/makeApiRequest/index.ts"),
				u = i("./src/lib/omitHeaders/index.ts"),
				c = i("./src/reddit/constants/headers.ts"),
				_ = i("./src/reddit/helpers/addRedesignIdentifier/index.ts");
			var m = i("./src/reddit/helpers/isComment.ts"),
				p = i("./src/reddit/helpers/isPost.ts"),
				h = i("./src/reddit/models/Vote/index.ts"),
				f = i("./src/reddit/selectors/commentSelector.ts"),
				b = i("./src/reddit/selectors/posts.ts"),
				g = i("./src/reddit/selectors/user.ts"),
				w = i("./src/reddit/actions/constants.ts");
			const v = Object(n.a)(w.a),
				y = (e, t) => i => async (n, w, {
					apiContext: y
				}) => {
					if (!Object(g.O)(w())) return n(Object(s.k)({
						actionSource: s.a.Vote
					})), void n(Object(r.j)());
					const E = e(i, w),
						S = h.b(E, t),
						T = Object(p.a)(i) ? E.postId : i;
					if (n(v({
							id: T,
							isInstance: !1,
							vote: t
						})), (w().posts.instances[T] || []).forEach(e => {
							n(v({
								id: e,
								isInstance: !0,
								vote: t
							}))
						}), S)
						if (Object(p.a)(i)) {
							const e = Object(b.G)(w(), {
									postId: i
								}),
								r = t > 0 ? d.a.Upvote : d.a.Downvote;
							n(Object(o.z)(e, r))
						} else if (Object(m.a)(i)) {
						const e = Object(f.b)(w(), {
							commentId: i
						});
						if (e) {
							const i = Object(b.G)(w(), {
									postId: e.postId
								}),
								r = t > 0 ? d.a.CommentUpvote : d.a.CommentDownvote;
							n(Object(o.z)(i, r))
						}
					}
					const O = w();
					if (Object(g.O)(O)) {
						(await ((e, t, i) => Object(l.a)(Object(u.a)(e, [c.a]), {
							endpoint: Object(_.a)(`${e.apiUrl}/api/vote`),
							method: a.jb.POST,
							data: {
								id: t,
								dir: i,
								api_type: "json"
							}
						}))(y(), T, S)).ok || n(v({
							id: T,
							isInstance: !1,
							vote: t
						}))
					}
				}
		},
		"./src/reddit/components/Econ/Prediction/helpers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/reddit/models/Prediction/index.ts");
			const r = e => e === n.b.Cancelled || e === n.b.CancelInProgress
		},
		"./src/reddit/components/Flatlist/getFlatlistTooltipId.ts": function(e, t, i) {
			"use strict";
			t.a = (e, t, i) => {
				const n = `${e}--${t}`;
				return i ? `${n}--${i}` : n
			}
		},
		"./src/reddit/components/HiddenDiv.m.less": function(e, t, i) {
			e.exports = {
				Component: "_1VhYfuKTAdUU_3j4cMjkr5",
				component: "_1VhYfuKTAdUU_3j4cMjkr5"
			}
		},
		"./src/reddit/components/HiddenDiv.tsx": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/components/HiddenDiv.m.less"),
				r = i.n(n),
				s = i("./src/lib/lessComponent.tsx");
			t.a = s.a.div("Component", r.a)
		},
		"./src/reddit/components/NotificationBanners/bannerIds.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.EmailCollectionBannerId = "email-collection-banner-id"
				}(n || (n = {}))
		},
		"./src/reddit/components/RichTextEditor/RTEState/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return u
			})), i.d(t, "a", (function() {
				return h
			}));
			var n = i("./node_modules/lodash/isEqual.js"),
				r = i.n(n),
				s = i("./node_modules/uuid/v4.js"),
				o = i.n(s),
				d = i("./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts"),
				a = i("./src/reddit/models/RichTextJson/index.ts");
			let l;
			const u = e => l = e,
				c = () => {
					if (!l) throw new Error("DraftHelpers must be initialized!");
					return l
				},
				_ = () => o()().slice(-6),
				m = /\S/;
			class p {
				static hasContent(e) {
					if (e.isBound) {
						return e.editorState.getCurrentContent().getBlockMap().some(e => !!e && (Object(d.t)(e.getType()) || Object(d.v)(e.getType()) || m.test(e.getText())))
					}
					return !Object(a.G)(e.initialRTJSON)
				}
				static getTextLength(e) {
					return e.isBound ? e.editorState.getCurrentContent().getPlainText().length : 0
				}
				static getRawText(e, t) {
					if (e.isBound) return e.editorState.getCurrentContent().getPlainText(t)
				}
				static isContentEqual(e, t) {
					if (e.isBound && t.isBound) {
						return e.editorState.getCurrentContent() === t.editorState.getCurrentContent()
					}
					return !e.isBound && !t.isBound && r()(e.initialRTJSON, t.initialRTJSON)
				}
				static toRichTextJSON(e, t) {
					if (e.isBound) {
						const i = e.editorState.getCurrentContent();
						return {
							document: c().draftToRTFJson(i, t)
						}
					}
					return e.initialRTJSON
				}
				static getPendingThumbnailUploads(e, t) {
					if (e.isBound) {
						const {
							editorState: i
						} = e;
						return c().getPendingThumbnailUploads(i.getCurrentContent(), t)
					}
				}
				static getMediaCount(e) {
					if (e.isBound) {
						const {
							editorState: t
						} = e;
						return c().getMediaCount(t.getCurrentContent())
					}
					return {
						gifvideo: 0,
						image: 0,
						video: 0,
						total: 0
					}
				}
				static isAllMediaUploaded(e, t) {
					if (e.isBound) {
						const i = e.editorState.getCurrentContent();
						return c().isAllMediaUploaded(i, t)
					}
					return !0
				}
			}
			p.createInitial = (e = a.i, t) => (e => e && e.document && Array.isArray(e.document))(e) ? {
				isBound: !1,
				editorKey: _(),
				initialRTJSON: e,
				mediaMetadataMap: t
			} : (console.warn("invalid RTJSON", e), p.createInitial());
			const h = p
		},
		"./src/reddit/components/RichTextEditor/styleAndBlockTypes.ts": function(e, t, i) {
			"use strict";
			i.d(t, "k", (function() {
				return n
			})), i.d(t, "g", (function() {
				return r
			})), i.d(t, "r", (function() {
				return o
			})), i.d(t, "n", (function() {
				return d
			})), i.d(t, "m", (function() {
				return a
			})), i.d(t, "h", (function() {
				return l
			})), i.d(t, "i", (function() {
				return u
			})), i.d(t, "s", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "p", (function() {
				return m
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "q", (function() {
				return h
			})), i.d(t, "l", (function() {
				return f
			})), i.d(t, "v", (function() {
				return b
			})), i.d(t, "j", (function() {
				return g
			})), i.d(t, "u", (function() {
				return w
			})), i.d(t, "a", (function() {
				return v
			})), i.d(t, "o", (function() {
				return y
			})), i.d(t, "t", (function() {
				return E
			})), i.d(t, "b", (function() {
				return S
			})), i.d(t, "d", (function() {
				return T
			})), i.d(t, "c", (function() {
				return O
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			const n = {
					BOLD: "BOLD",
					ITALIC: "ITALIC",
					SPOILER: "SPOILER",
					STRIKETHROUGH: "STRIKETHROUGH",
					SUBSCRIPT: "SUBSCRIPT",
					SUPERSCRIPT: "SUPERSCRIPT",
					UNDERLINE: "UNDERLINE",
					MONOSPACE: "MONOSPACE",
					HIGHLIGHT: "HIGHLIGHT"
				},
				r = {
					H1: "header-one",
					H2: "header-two",
					H3: "header-three",
					H4: "header-four",
					H5: "header-five",
					H6: "header-six"
				},
				s = new Set(["header-one", "header-two", "header-three", "header-four", "header-five", "header-six"]),
				o = e => s.has(e),
				d = "unstyled",
				a = {
					"header-one": 1,
					"header-two": 2,
					"header-three": 3,
					"header-four": 4,
					"header-five": 5,
					"header-six": 6
				},
				l = {
					1: "header-one",
					2: "header-two",
					3: "header-two",
					4: "header-two",
					5: "header-two",
					6: "header-two"
				},
				u = {
					ORDERED: "ordered-list-item",
					UNORDERED: "unordered-list-item"
				},
				c = e => "ordered-list-item" === e || "unordered-list-item" === e,
				_ = "blockquote",
				m = e => e === _,
				p = "code-block",
				h = e => e === p,
				f = "table-cell",
				b = e => e === f,
				g = "media-caption",
				w = e => e === g,
				v = "atomic",
				y = e => e === v,
				E = e => y(e) || w(e),
				S = {
					CODE_BLOCK: p,
					BLOCK_QUOTE: _,
					ATOMIC_BLOCK: v,
					ORDERED_LIST: u.ORDERED,
					TABLE_CELL: f,
					UNORDERED_LIST: u.UNORDERED,
					UNSTYLED: d,
					MEDIA_CAPTION: g,
					...r
				},
				T = [d, _, f, u.ORDERED, u.UNORDERED],
				O = [d, _, u.ORDERED, u.UNORDERED]
		},
		"./src/reddit/components/SearchNSFWToggle/hooks.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return l
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/hooks/useLocalStorage.ts");
			const s = "allow-nsfw-search-results",
				o = 30 * n.kb,
				d = () => Date.now() + o,
				a = () => ({
					allowNsfwSearchResults: !1,
					expires: d()
				}),
				l = () => {
					const [e, t] = Object(r.a)(s, a());
					return {
						get nsfwSessionSetting() {
							if (e.expires < Date.now()) {
								const e = a();
								return t(e), e.allowNsfwSearchResults
							}
							return e.allowNsfwSearchResults
						},
						refreshNsfwSessionSettingExpiryTime: () => {
							t({
								allowNsfwSearchResults: e.allowNsfwSearchResults,
								expires: d()
							})
						},
						setNsfwSessionSetting: e => {
							t({
								allowNsfwSearchResults: e,
								expires: d()
							})
						}
					}
				}
		},
		"./src/reddit/components/Settings/modalIds.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "h", (function() {
				return s
			})), i.d(t, "p", (function() {
				return o
			})), i.d(t, "i", (function() {
				return d
			})), i.d(t, "m", (function() {
				return a
			})), i.d(t, "n", (function() {
				return l
			})), i.d(t, "o", (function() {
				return u
			})), i.d(t, "j", (function() {
				return c
			})), i.d(t, "k", (function() {
				return _
			})), i.d(t, "l", (function() {
				return m
			})), i.d(t, "b", (function() {
				return p
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "e", (function() {
				return f
			})), i.d(t, "g", (function() {
				return b
			})), i.d(t, "f", (function() {
				return g
			}));
			const n = "change_email_modal_id",
				r = "check_email_modal_id",
				s = "set_email_modal_id",
				o = "verify_email_modal_id",
				d = "reset_pw_sso_2fa_modal_id",
				a = "reset_pw_sso_email_modal_id",
				l = "reset_pw_sso_google_link_modal_id",
				u = "reset_pw_sso_google_unlink_modal_id",
				c = "reset_pw_sso_apple_link_modal_id",
				_ = "reset_pw_sso_apple_unlink_modal_id",
				m = "reset_pw_sso_deactivate_account_modal_id",
				p = "change_username_modal_id",
				h = "confirm_save_username_modal_id",
				f = "intercept_action_modal_id",
				b = "second_confirm_keep_username_modal_id",
				g = "browser_notifications_permission_settings"
		},
		"./src/reddit/constants/actions.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = "@@router/CALL_HISTORY_METHOD"
		},
		"./src/reddit/constants/adEvents.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e[e.Impression = 1] = "Impression", e[e.Click = 2] = "Click", e[e.CommentsView = 3] = "CommentsView", e[e.Upvote = 4] = "Upvote", e[e.Downvote = 5] = "Downvote", e[e.CommentSubmitted = 6] = "CommentSubmitted", e[e.ViewableImpression = 7] = "ViewableImpression", e[e.CommentUpvote = 8] = "CommentUpvote", e[e.CommentDownvote = 9] = "CommentDownvote", e[e.VendorFullyInView = 10] = "VendorFullyInView", e[e.VendorFullyInViewSeconds5 = 11] = "VendorFullyInViewSeconds5", e[e.VendorFullyInViewSeconds15 = 12] = "VendorFullyInViewSeconds15", e[e.GroupMViewable = 13] = "GroupMViewable", e[e.Unload = 14] = "Unload", e[e.GalleryItemImpression = 15] = "GalleryItemImpression", e[e.VideoViewableImpression = 100] = "VideoViewableImpression", e[e.VideoFullyViewableImpression = 101] = "VideoFullyViewableImpression", e[e.VideoPlayedWithSound = 102] = "VideoPlayedWithSound", e[e.VideoPlayedExpanded = 103] = "VideoPlayedExpanded", e[e.VideoWatched25 = 104] = "VideoWatched25", e[e.VideoWatched50 = 105] = "VideoWatched50", e[e.VideoWatched75 = 106] = "VideoWatched75", e[e.VideoWatched95 = 107] = "VideoWatched95", e[e.VideoWatched100 = 108] = "VideoWatched100", e[e.VideoStarted = 109] = "VideoStarted", e[e.VideoWatchedSeconds2 = 110] = "VideoWatchedSeconds2", e[e.VideoWatchedSeconds3 = 111] = "VideoWatchedSeconds3", e[e.VideoWatchedSeconds5 = 112] = "VideoWatchedSeconds5", e[e.VideoWatchedSeconds10 = 113] = "VideoWatchedSeconds10", e[e.VideoGroupMViewable = 114] = "VideoGroupMViewable", e[e.VideoVendorFullyViewable50 = 115] = "VideoVendorFullyViewable50", e[e.DEPRECATED_MRCVideoViewableImpression = 115] = "DEPRECATED_MRCVideoViewableImpression"
				}(n || (n = {}))
		},
		"./src/reddit/constants/blade.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return r
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "h", (function() {
				return l
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "i", (function() {
				return p
			})), i.d(t, "d", (function() {
				return f
			}));
			var n, r, s = i("./node_modules/fbt/lib/FbtPublic.js"),
				o = i("./src/config.ts");
			! function(e) {
				e.NameAndIcon = "nameAndIcon", e.Banner = "banner", e.Global = "global"
			}(n || (n = {})),
			function(e) {
				e.Appearance = "community_appearance", e.Main = "community_mod_tools", e.MenuLinks = "menu_links", e.PostFlairManagement = "postflairmanagement", e.Structure = "community_structure", e.UserFlairManagement = "userflairmanagement", e.Widgets = "community_widgets"
			}(r || (r = {}));
			const d = {
					global: "theme",
					nameAndIcon: "name_icon",
					banner: "banner",
					menu: "menu",
					post: "posts",
					exportImport: "export_import",
					menuLinks: "menu_links",
					widgets: "widgets",
					addWidget: "add_widget",
					editWidget: "edit_widget",
					newWidget: "new_widget",
					reorderWidgets: "reorder_widgets",
					main: "main",
					css: "css",
					idCard: "id_card"
				},
				a = {
					global: r.Appearance,
					nameAndIcon: r.Appearance,
					banner: r.Appearance,
					menu: r.Appearance,
					post: r.Appearance,
					exportImport: r.Appearance,
					menuLinks: r.Appearance,
					widgets: r.Appearance,
					addWidget: r.Widgets,
					editWidget: r.Widgets,
					newWidget: r.Widgets,
					reorderWidgets: r.Widgets,
					main: r.Main,
					css: r.Appearance,
					idCard: "id_card"
				},
				l = {
					button: "button_widget",
					calendar: "calendar_widget",
					custom: "custom_widget",
					image: "image_widget",
					"id-card": "id_card",
					moderators: "moderators_widget",
					"community-list": "community_list_widget",
					"subreddit-rules": "rules_widget",
					textarea: "text_widget",
					"post-flair": "post_flair_widget"
				};
			var u;
			! function(e) {
				e.Add = "add", e.AssignOwnOff = "assign_own_off", e.AssignOwnOn = "assign_own_on", e.Edit = "edit", e.EnableOff = "enable_off", e.EnableOn = "enable_on", e.Remove = "remove", e.Reorder = "reorder"
			}(u || (u = {}));
			const c = {
					primaryColor: r.Appearance,
					highlightColor: r.Appearance,
					backgroundColor: r.Appearance,
					postTitleColor: r.Appearance,
					postBackgroundColor: r.Appearance,
					postDownvoteCountColor: r.Appearance,
					postUpvoteCountColor: r.Appearance,
					bannerBackgroundColor: r.Appearance,
					bannerOverlayColor: r.Appearance,
					menuBackgroundColor: r.Appearance,
					menuLinkColorActive: r.Appearance,
					menuLinkColorInactive: r.Appearance,
					menuLinkColorHover: r.Appearance,
					mobileKeyColor: r.Appearance,
					sidebarWidgetBackgroundColor: r.Widgets,
					sidebarWidgetHeaderColor: r.Widgets,
					submenuBackgroundColor: r.Appearance,
					buttonWidgetButtonColor: r.Widgets,
					buttonWidgetTextColor: r.Widgets,
					buttonWidgetFillColor: r.Widgets,
					buttonWidgetHoverButtonColor: r.Widgets,
					buttonWidgetHoverTextColor: r.Widgets,
					buttonWidgetHoverFillColor: r.Widgets
				},
				_ = {
					primaryColor: d.global,
					highlightColor: d.global,
					backgroundColor: d.global,
					postTitleColor: d.post,
					postBackgroundColor: d.post,
					postDownvoteCountColor: d.post,
					postUpvoteCountColor: d.post,
					bannerBackgroundColor: d.banner,
					bannerOverlayColor: d.banner,
					menuBackgroundColor: d.menu,
					menuLinkColorActive: d.menu,
					menuLinkColorInactive: d.menu,
					menuLinkColorHover: d.menu,
					mobileKeyColor: void 0,
					sidebarWidgetBackgroundColor: d.widgets,
					sidebarWidgetHeaderColor: d.widgets,
					submenuBackgroundColor: d.menu,
					buttonWidgetButtonColor: d.widgets,
					buttonWidgetTextColor: d.widgets,
					buttonWidgetFillColor: d.widgets,
					buttonWidgetHoverButtonColor: d.widgets,
					buttonWidgetHoverTextColor: d.widgets,
					buttonWidgetHoverFillColor: d.widgets
				},
				m = {
					main: () => s.fbt._("Back to mod tools", null, {
						hk: "1guMLb"
					}),
					global: () => s.fbt._("Color theme", null, {
						hk: "1I2aAx"
					}),
					banner: () => s.fbt._("Banner", null, {
						hk: "2dndoU"
					}),
					menu: () => s.fbt._("Menu", null, {
						hk: "2Pk5Cr"
					}),
					nameAndIcon: () => s.fbt._("Name & icon", null, {
						hk: "35BKW5"
					}),
					post: () => s.fbt._("Posts", null, {
						hk: "2lz5Zh"
					}),
					exportImport: () => s.fbt._("Manage themes", null, {
						hk: "3JIztr"
					}),
					widgets: () => s.fbt._("Sidebar widgets", null, {
						hk: "1qjncj"
					}),
					addWidget: () => s.fbt._("Add widget", null, {
						hk: "43u3IF"
					}),
					newWidget: () => s.fbt._("New widget", null, {
						hk: "2cXd2M"
					}),
					editWidget: () => s.fbt._("Edit widget", null, {
						hk: "1ZiXVl"
					}),
					menuLinks: () => s.fbt._("Menu links", null, {
						hk: "3SqTA5"
					}),
					css: () => "",
					reorderWidgets: () => "",
					idCard: () => ""
				},
				p = {
					button: () => s.fbt._("Button", null, {
						hk: "3SHU34"
					}),
					"subreddit-rules": () => s.fbt._("Rules", null, {
						hk: "7pEZ"
					}),
					textarea: () => s.fbt._("Textarea", null, {
						hk: "3cLKEP"
					}),
					image: () => s.fbt._("Images", null, {
						hk: "1NsC47"
					}),
					"community-list": () => s.fbt._("Community list", null, {
						hk: "13K5M4"
					}),
					calendar: () => s.fbt._("Calendar", null, {
						hk: "4nqD1o"
					}),
					custom: () => s.fbt._("Custom", null, {
						hk: "4sag5Y"
					}),
					"id-card": () => s.fbt._("ID Card", null, {
						hk: "3RSm35"
					}),
					"post-flair": () => s.fbt._("Post flair", null, {
						hk: "NclBb"
					})
				},
				h = e => `${o.a.redditModHelpUrl}/hc/en-us/articles/${e}`,
				f = {
					exportImport: h("360008722771-Customize-Appearance-overview"),
					global: h("360008551632-Color-theme"),
					nameAndIcon: h("360008805651-Name-icon"),
					banner: h("360010112892-Banner"),
					menu: h("360010387851-Menu"),
					post: h("360010192832-Posts"),
					menuLinks: h("360010442571-Menu-Links"),
					widgets: h("360010364372-Sidebar-Widgets")
				}
		},
		"./src/reddit/constants/categories.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "d", (function() {
				return u
			}));
			var n, r = i("./src/reddit/helpers/name/index.ts");
			! function(e) {
				e.Advice = "advice", e.Animals = "animals", e.Art = "art", e.DIY = "dIY", e.Electronics = "electronics", e.Entertainment = "entertainment", e.Fashion = "fashion", e.Food = "food", e.Funny = "funny", e.Gaming = "gaming", e.Health = "health", e.Memes = "memes", e.Music = "music", e.News = "news", e.Outdoors = "outdoors", e.Photography = "photography", e.PicsAndGifs = "picsAndGifs", e.Relationships = "relationships", e.Science = "science", e.Sports = "sports", e.Tv = "tv", e.Tech = "tech", e.Travel = "travel", e.VideoGames = "videoGames", e.Videos = "videos", e.Vroom = "vroom", e.Writing = "writing"
			}(n || (n = {}));
			const s = e => {
					let t = "";
					for (let i = 0; i < e.length; i++) t += e[i], i < e.length - 1 && (t += "+");
					return t
				},
				o = e => `/r/${s(e)}/`,
				d = ["#FAAF2A", "#96DE50", "#F9862D", "#2EA1EA", "#297ACA", "#4DCF65", "#96DE50", "#F9862D", "#FAAF2A", "#297ACA", "#2EA1EA", "#2EA1EA", "#37D2BB", "#4DCF65", "#297ACB", "#96DE50", "#F9862D", "#FAAF2A", "#297ACA", "#2EA1EA", "#297ACA", "#37D2BB", "#96DE50", "#37D2BB", "#4DCF65", "#37D2BB", "#F9862D"],
				a = /\s/g,
				l = /&/g,
				u = e => e ? Object(r.g)(e).replace(a, "_").replace(l, "and") : ""
		},
		"./src/reddit/constants/colors.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./node_modules/polished/dist/polished.es.js");
			const r = {
					admin: "#EA0027",
					adminEmeritus: "#BE1337",
					alienblue: "#0079D3",
					approved: "#46D160",
					black: "#000000",
					chat: "#000000",
					dayModeActionIcon: "#878A8C",
					defaultFlair: "#DADADA",
					downvote: "#7193FF",
					gold: "#DDBD37",
					info: "#FFF7E6",
					locked: "#FFD635",
					lightboxHeaderBg: "#030303",
					lightboxHeaderText: "#D7DADC",
					moderator: "#75D377",
					notice: "#FF8617",
					nsfw: "#FF585B",
					op: "#24A0ED",
					orangered: "#FF4500",
					overlayBackground: Object(n.f)("#1c1c1c", .9),
					overlayReportFlow: Object(n.f)("#1a1a1b", .6),
					quarantine: "#FFB000",
					removed: "#FF585B",
					reported: "#FFB000",
					restricted: "#0DD3BB",
					snoo: "#FF4500",
					spoiler: "#000000",
					tooltip: "#373C3F",
					transparent: "#00000000",
					twitter: "#1DA1F2",
					upvote: "#FF4500",
					warning: "#EA0027",
					white: "#FFFFFF"
				},
				s = "transparent",
				o = {
					lenient: "#46D160",
					moderate: "#FFB000",
					strict: "#EA0027"
				}
		},
		"./src/reddit/constants/comments.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.Comment = "comment", e.MoreComments = "moreComments", e.ContinueThread = "continueThread"
				}(n || (n = {}))
		},
		"./src/reddit/constants/cookie.ts": function(e, t, i) {
			"use strict";
			i.d(t, "k", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "j", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			})), i.d(t, "h", (function() {
				return _
			})), i.d(t, "i", (function() {
				return m
			}));
			const n = "USER",
				r = "alphaModal",
				s = "over18",
				o = "mod_mode_enabled",
				d = "recent_srs",
				a = "_recentclicks2",
				l = "uapp_cookie",
				u = "nightmode",
				c = "_options",
				_ = "show_announcements";
			var m;
			! function(e) {
				e.Yes = "yes", e.No = "no"
			}(m || (m = {}))
		},
		"./src/reddit/constants/countrySites.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			}));
			const n = "ca",
				r = "fr",
				s = ["t5_4hsusu", "t5_3j0kj", "t5_3denv", "t5_3fplt", "juan_test2", "whatssnoo", "grahamisms", "snootography"]
		},
		"./src/reddit/constants/covid.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/reddit/models/Live/index.ts");
			const s = ["coronavirus", "covid", "cv19", "pandemic"],
				o = {
					id: "COVID_SEARCH",
					icon: r.a.Snoo,
					title: () => n.fbt._("Stay informed", null, {
						hk: "3HKOH"
					}),
					description: () => n.fbt._("To get the latest updates on COVID-19 and information on how to stay safe and healthy, visit the Centers for Disease Control and Prevention (CDC).", null, {
						hk: "2glecH"
					}),
					url: "https://www.cdc.gov/",
					callToAction: () => n.fbt._("Visit CDC.gov", null, {
						hk: "2hVXRi"
					}),
					maxImpressionsCount: Number.MAX_SAFE_INTEGER,
					iconUrl: null,
					experimentName: null
				}
		},
		"./src/reddit/constants/experiments.ts": function(e, t, i) {
			"use strict";
			i.d(t, "We", (function() {
				return r
			})), i.d(t, "rd", (function() {
				return s
			})), i.d(t, "ne", (function() {
				return o
			})), i.d(t, "Md", (function() {
				return d
			})), i.d(t, "Nd", (function() {
				return a
			})), i.d(t, "ke", (function() {
				return l
			})), i.d(t, "le", (function() {
				return u
			})), i.d(t, "me", (function() {
				return c
			})), i.d(t, "G", (function() {
				return _
			})), i.d(t, "Rb", (function() {
				return m
			})), i.d(t, "te", (function() {
				return p
			})), i.d(t, "Pe", (function() {
				return h
			})), i.d(t, "lc", (function() {
				return f
			})), i.d(t, "kc", (function() {
				return b
			})), i.d(t, "jc", (function() {
				return g
			})), i.d(t, "M", (function() {
				return w
			})), i.d(t, "Ve", (function() {
				return v
			})), i.d(t, "tb", (function() {
				return y
			})), i.d(t, "sb", (function() {
				return E
			})), i.d(t, "i", (function() {
				return S
			})), i.d(t, "k", (function() {
				return T
			})), i.d(t, "l", (function() {
				return O
			})), i.d(t, "g", (function() {
				return I
			})), i.d(t, "F", (function() {
				return R
			})), i.d(t, "y", (function() {
				return F
			})), i.d(t, "lf", (function() {
				return N
			})), i.d(t, "jb", (function() {
				return C
			})), i.d(t, "H", (function() {
				return j
			})), i.d(t, "q", (function() {
				return A
			})), i.d(t, "r", (function() {
				return x
			})), i.d(t, "zc", (function() {
				return D
			})), i.d(t, "mc", (function() {
				return P
			})), i.d(t, "wc", (function() {
				return L
			})), i.d(t, "rc", (function() {
				return k
			})), i.d(t, "xc", (function() {
				return B
			})), i.d(t, "vc", (function() {
				return M
			})), i.d(t, "yc", (function() {
				return U
			})), i.d(t, "pc", (function() {
				return G
			})), i.d(t, "qc", (function() {
				return q
			})), i.d(t, "sc", (function() {
				return V
			})), i.d(t, "Ac", (function() {
				return H
			})), i.d(t, "Xc", (function() {
				return W
			})), i.d(t, "Zc", (function() {
				return z
			})), i.d(t, "Yc", (function() {
				return K
			})), i.d(t, "Be", (function() {
				return Y
			})), i.d(t, "jd", (function() {
				return $
			})), i.d(t, "Xd", (function() {
				return Q
			})), i.d(t, "qd", (function() {
				return J
			})), i.d(t, "qb", (function() {
				return X
			})), i.d(t, "Vd", (function() {
				return Z
			})), i.d(t, "lb", (function() {
				return ee
			})), i.d(t, "Oe", (function() {
				return te
			})), i.d(t, "B", (function() {
				return ie
			})), i.d(t, "A", (function() {
				return ne
			})), i.d(t, "pd", (function() {
				return re
			})), i.d(t, "Ce", (function() {
				return se
			})), i.d(t, "ad", (function() {
				return oe
			})), i.d(t, "kf", (function() {
				return de
			})), i.d(t, "Gd", (function() {
				return ae
			})), i.d(t, "Ge", (function() {
				return le
			})), i.d(t, "Ie", (function() {
				return ue
			})), i.d(t, "Ee", (function() {
				return ce
			})), i.d(t, "Fe", (function() {
				return _e
			})), i.d(t, "j", (function() {
				return me
			})), i.d(t, "h", (function() {
				return pe
			})), i.d(t, "yd", (function() {
				return he
			})), i.d(t, "De", (function() {
				return fe
			})), i.d(t, "Ub", (function() {
				return be
			})), i.d(t, "qe", (function() {
				return ge
			})), i.d(t, "He", (function() {
				return we
			})), i.d(t, "Xe", (function() {
				return ve
			})), i.d(t, "Tb", (function() {
				return ye
			})), i.d(t, "Kb", (function() {
				return Ee
			})), i.d(t, "pe", (function() {
				return Se
			})), i.d(t, "xb", (function() {
				return Te
			})), i.d(t, "Kc", (function() {
				return Oe
			})), i.d(t, "Ic", (function() {
				return Ie
			})), i.d(t, "kb", (function() {
				return Re
			})), i.d(t, "tc", (function() {
				return Fe
			})), i.d(t, "uc", (function() {
				return Ne
			})), i.d(t, "Mb", (function() {
				return Ce
			})), i.d(t, "Nb", (function() {
				return je
			})), i.d(t, "Pb", (function() {
				return Ae
			})), i.d(t, "Gc", (function() {
				return xe
			})), i.d(t, "Fc", (function() {
				return De
			})), i.d(t, "nb", (function() {
				return Pe
			})), i.d(t, "ob", (function() {
				return Le
			})), i.d(t, "pb", (function() {
				return ke
			})), i.d(t, "Sb", (function() {
				return Be
			})), i.d(t, "Hc", (function() {
				return Me
			})), i.d(t, "Hd", (function() {
				return Ue
			})), i.d(t, "Uc", (function() {
				return Ge
			})), i.d(t, "Sc", (function() {
				return qe
			})), i.d(t, "Vc", (function() {
				return Ve
			})), i.d(t, "Kd", (function() {
				return He
			})), i.d(t, "Wd", (function() {
				return We
			})), i.d(t, "Yd", (function() {
				return ze
			})), i.d(t, "Dc", (function() {
				return Ke
			})), i.d(t, "Wc", (function() {
				return Ye
			})), i.d(t, "Tc", (function() {
				return $e
			})), i.d(t, "Bc", (function() {
				return Qe
			})), i.d(t, "Lb", (function() {
				return Je
			})), i.d(t, "Cc", (function() {
				return Xe
			})), i.d(t, "J", (function() {
				return Ze
			})), i.d(t, "I", (function() {
				return et
			})), i.d(t, "Rd", (function() {
				return tt
			})), i.d(t, "Sd", (function() {
				return it
			})), i.d(t, "t", (function() {
				return nt
			})), i.d(t, "Ed", (function() {
				return rt
			})), i.d(t, "Ue", (function() {
				return st
			})), i.d(t, "Te", (function() {
				return ot
			})), i.d(t, "Se", (function() {
				return dt
			})), i.d(t, "Ec", (function() {
				return at
			})), i.d(t, "Jb", (function() {
				return lt
			})), i.d(t, "p", (function() {
				return ut
			})), i.d(t, "ae", (function() {
				return ct
			})), i.d(t, "xd", (function() {
				return _t
			})), i.d(t, "vb", (function() {
				return mt
			})), i.d(t, "re", (function() {
				return pt
			})), i.d(t, "L", (function() {
				return ht
			})), i.d(t, "K", (function() {
				return ft
			})), i.d(t, "Ne", (function() {
				return bt
			})), i.d(t, "wb", (function() {
				return gt
			})), i.d(t, "Ib", (function() {
				return wt
			})), i.d(t, "N", (function() {
				return vt
			})), i.d(t, "ie", (function() {
				return yt
			})), i.d(t, "Jc", (function() {
				return Et
			})), i.d(t, "zb", (function() {
				return St
			})), i.d(t, "Ab", (function() {
				return Tt
			})), i.d(t, "Bb", (function() {
				return Ot
			})), i.d(t, "Db", (function() {
				return It
			})), i.d(t, "Cb", (function() {
				return Rt
			})), i.d(t, "yb", (function() {
				return Ft
			})), i.d(t, "qf", (function() {
				return Nt
			})), i.d(t, "Oc", (function() {
				return Ct
			})), i.d(t, "ge", (function() {
				return jt
			})), i.d(t, "fe", (function() {
				return At
			})), i.d(t, "pf", (function() {
				return xt
			})), i.d(t, "of", (function() {
				return Dt
			})), i.d(t, "Eb", (function() {
				return Pt
			})), i.d(t, "Vb", (function() {
				return Lt
			})), i.d(t, "ff", (function() {
				return kt
			})), i.d(t, "gf", (function() {
				return Bt
			})), i.d(t, "se", (function() {
				return Mt
			})), i.d(t, "nf", (function() {
				return Ut
			})), i.d(t, "oe", (function() {
				return Gt
			})), i.d(t, "md", (function() {
				return qt
			})), i.d(t, "hf", (function() {
				return Vt
			})), i.d(t, "Qb", (function() {
				return Ht
			})), i.d(t, "Me", (function() {
				return Wt
			})), i.d(t, "s", (function() {
				return zt
			})), i.d(t, "E", (function() {
				return Kt
			})), i.d(t, "rb", (function() {
				return Yt
			})), i.d(t, "Qc", (function() {
				return $t
			})), i.d(t, "Pc", (function() {
				return Qt
			})), i.d(t, "Lc", (function() {
				return Jt
			})), i.d(t, "rf", (function() {
				return Xt
			})), i.d(t, "sf", (function() {
				return Zt
			})), i.d(t, "m", (function() {
				return ei
			})), i.d(t, "Wb", (function() {
				return ti
			})), i.d(t, "od", (function() {
				return ii
			})), i.d(t, "nd", (function() {
				return ni
			})), i.d(t, "Nc", (function() {
				return ri
			})), i.d(t, "Gb", (function() {
				return si
			})), i.d(t, "Hb", (function() {
				return oi
			})), i.d(t, "Ud", (function() {
				return di
			})), i.d(t, "Mc", (function() {
				return ai
			})), i.d(t, "Jd", (function() {
				return li
			})), i.d(t, "ub", (function() {
				return ui
			})), i.d(t, "he", (function() {
				return ci
			})), i.d(t, "Rc", (function() {
				return _i
			})), i.d(t, "n", (function() {
				return mi
			})), i.d(t, "Id", (function() {
				return pi
			})), i.d(t, "Qe", (function() {
				return hi
			})), i.d(t, "Re", (function() {
				return fi
			})), i.d(t, "Fb", (function() {
				return bi
			})), i.d(t, "mb", (function() {
				return gi
			})), i.d(t, "Ye", (function() {
				return wi
			})), i.d(t, "Td", (function() {
				return vi
			})), i.d(t, "nc", (function() {
				return yi
			})), i.d(t, "Ob", (function() {
				return Ei
			})), i.d(t, "wd", (function() {
				return Si
			})), i.d(t, "id", (function() {
				return Ti
			})), i.d(t, "bd", (function() {
				return Ii
			})), i.d(t, "vf", (function() {
				return Ri
			})), i.d(t, "Le", (function() {
				return Ci
			})), i.d(t, "dd", (function() {
				return ki
			})), i.d(t, "ed", (function() {
				return Bi
			})), i.d(t, "gd", (function() {
				return Gi
			})), i.d(t, "fd", (function() {
				return zi
			})), i.d(t, "vd", (function() {
				return Xi
			})), i.d(t, "df", (function() {
				return Zi
			})), i.d(t, "ye", (function() {
				return tn
			})), i.d(t, "ve", (function() {
				return nn
			})), i.d(t, "we", (function() {
				return sn
			})), i.d(t, "Qd", (function() {
				return on
			})), i.d(t, "xe", (function() {
				return dn
			})), i.d(t, "hc", (function() {
				return cn
			})), i.d(t, "Ae", (function() {
				return mn
			})), i.d(t, "af", (function() {
				return hn
			})), i.d(t, "if", (function() {
				return bn
			})), i.d(t, "ue", (function() {
				return gn
			})), i.d(t, "ld", (function() {
				return wn
			})), i.d(t, "S", (function() {
				return vn
			})), i.d(t, "cf", (function() {
				return yn
			})), i.d(t, "ac", (function() {
				return En
			})), i.d(t, "Zb", (function() {
				return Sn
			})), i.d(t, "c", (function() {
				return In
			})), i.d(t, "f", (function() {
				return Rn
			})), i.d(t, "e", (function() {
				return Fn
			})), i.d(t, "a", (function() {
				return Nn
			})), i.d(t, "O", (function() {
				return Cn
			})), i.d(t, "C", (function() {
				return jn
			})), i.d(t, "mf", (function() {
				return An
			})), i.d(t, "Xb", (function() {
				return xn
			})), i.d(t, "P", (function() {
				return Dn
			})), i.d(t, "x", (function() {
				return Pn
			})), i.d(t, "oc", (function() {
				return Ln
			})), i.d(t, "kd", (function() {
				return qn
			})), i.d(t, "ud", (function() {
				return Hn
			})), i.d(t, "Zd", (function() {
				return Wn
			})), i.d(t, "T", (function() {
				return zn
			})), i.d(t, "D", (function() {
				return Yn
			})), i.d(t, "gb", (function() {
				return $n
			})), i.d(t, "z", (function() {
				return er
			})), i.d(t, "td", (function() {
				return tr
			})), i.d(t, "Je", (function() {
				return ir
			})), i.d(t, "d", (function() {
				return lr
			})), i.d(t, "b", (function() {
				return ur
			})), i.d(t, "Cd", (function() {
				return cr
			})), i.d(t, "Ke", (function() {
				return _r
			})), i.d(t, "ic", (function() {
				return mr
			})), i.d(t, "ef", (function() {
				return pr
			})), i.d(t, "ec", (function() {
				return hr
			})), i.d(t, "Dd", (function() {
				return gr
			})), i.d(t, "u", (function() {
				return yr
			})), i.d(t, "R", (function() {
				return Sr
			})), i.d(t, "Q", (function() {
				return Or
			})), i.d(t, "be", (function() {
				return Ir
			})), i.d(t, "ce", (function() {
				return Rr
			})), i.d(t, "w", (function() {
				return Fr
			})), i.d(t, "Fd", (function() {
				return Nr
			})), i.d(t, "bf", (function() {
				return Cr
			})), i.d(t, "dc", (function() {
				return Ar
			})), i.d(t, "fc", (function() {
				return xr
			})), i.d(t, "gc", (function() {
				return Dr
			})), i.d(t, "v", (function() {
				return Pr
			})), i.d(t, "zd", (function() {
				return Lr
			})), i.d(t, "Ad", (function() {
				return kr
			})), i.d(t, "ze", (function() {
				return Br
			})), i.d(t, "Bd", (function() {
				return Mr
			})), i.d(t, "hd", (function() {
				return Ur
			})), i.d(t, "Yb", (function() {
				return Gr
			})), i.d(t, "je", (function() {
				return qr
			})), i.d(t, "V", (function() {
				return Vr
			})), i.d(t, "W", (function() {
				return Hr
			})), i.d(t, "X", (function() {
				return Wr
			})), i.d(t, "Z", (function() {
				return zr
			})), i.d(t, "Y", (function() {
				return Kr
			})), i.d(t, "U", (function() {
				return Yr
			})), i.d(t, "jf", (function() {
				return $r
			})), i.d(t, "cb", (function() {
				return Zr
			})), i.d(t, "fb", (function() {
				return es
			})), i.d(t, "hb", (function() {
				return ts
			})), i.d(t, "ib", (function() {
				return is
			})), i.d(t, "sd", (function() {
				return ns
			})), i.d(t, "Od", (function() {
				return rs
			})), i.d(t, "Pd", (function() {
				return ss
			})), i.d(t, "Ze", (function() {
				return os
			})), i.d(t, "bc", (function() {
				return ls
			})), i.d(t, "cc", (function() {
				return us
			})), i.d(t, "ee", (function() {
				return cs
			})), i.d(t, "ab", (function() {
				return _s
			})), i.d(t, "bb", (function() {
				return ms
			})), i.d(t, "db", (function() {
				return ps
			})), i.d(t, "de", (function() {
				return hs
			})), i.d(t, "eb", (function() {
				return fs
			})), i.d(t, "o", (function() {
				return bs
			})), i.d(t, "cd", (function() {
				return gs
			})), i.d(t, "tf", (function() {
				return vs
			})), i.d(t, "Ld", (function() {
				return ys
			})), i.d(t, "uf", (function() {
				return Es
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/fbt/lib/FbtPublic.js");
			const r = "subreddit_top_content",
				s = "guest_survey_1",
				o = "desktop_seo_post_v2_truncate",
				d = "mux_sampling_a",
				a = "mux_sampling_b",
				l = "desktop_seo_post_v2_comment_depth",
				u = "desktop_seo_post_v2_declutter",
				c = "desktop_seo_post_v2_id_card",
				_ = "collapse_pinned_comments",
				m = "d2x_shell_render_mitigation",
				p = "rpan_entry_point",
				h = "streaming_ui_refresh_viewer",
				f = "desktop_guest_exp_top_posts",
				b = "desktop_guest_exp_post_height",
				g = "desktop_frontpage_signup_v1",
				w = "create_polls_painted_door",
				v = "subreddit_mention_d2x",
				y = "d2x_gql_subreddit_page",
				E = "d2x_gql_subreddit_more_posts",
				S = "ae_crisis_text_line_v1",
				T = "ae_reporting_revamp_desktop",
				O = "ae_report_user_profile",
				I = "ae_pros_2503_d2x",
				R = "d2x_client_tracing",
				F = "d2x_best_sort_popular",
				N = "viewer_feed_the_meter",
				C = "d2x_ads_card_view_holdout",
				j = "d2x_comment_box_design",
				A = "d2x_avatar_in_comments_loggedin",
				x = "d2x_avatar_in_comments_loggedout",
				D = "econ_flag_award_web",
				P = "down_to_chat_kill_switch_web",
				L = "econ_web_awards_plaque",
				k = "econ_web_avatar_marketing",
				B = "web_econ_copy_avatar",
				M = "web_econ_avatar_refactor",
				U = "web_econ_avatar_default_profile_pics",
				G = "web_econ_avatar_achievements",
				q = "web_econ_avatar_community_spaces",
				V = "web_econ_avatar_onboarding",
				H = "econ_web_leaderboards",
				W = "web_econ_avatar_in_rpan",
				z = "web_econ_talk_start_from_web",
				K = "econ_d2x_storefront_claim",
				Y = "recaptcha_enterprise",
				$ = "d2x_frontpage_card_post_count",
				Q = "nps_survey_scroll_trigger",
				J = "guest_d2x_listing_below_user",
				X = "d2x_google_onetap",
				Z = "d2x_nps_survey_dismiss_post_trigger",
				ee = "d2x_chat_post_admin_messages",
				te = "d2x_sso_login_link",
				ie = "d2x_blended_best",
				ne = "bffs_leaderboard",
				re = "guest_d2x_post_page_q_a",
				se = "d2x_guest_removed_posts",
				oe = "cacti_email_invite_painted_door",
				de = "web_video_quality_survey",
				ae = "d2x_magic_link",
				le = "rpan_du_visibility_threshold_d2x",
				ue = "rpan_top_video_entrypoint_desktop",
				ce = "rpan_du_preload_d2x",
				_e = "du_targeting_web",
				me = "ae_pros_1870_d2x",
				pe = "ae_pros_1875_d2x",
				he = "d2x_inbox_v2_post_embeds",
				fe = "resonate_pilot",
				be = "d2x_viewscreen_on_return",
				ge = "presence_indicator_toggle",
				we = "d2x_rpan_graphql_switch",
				ve = "d2x_survey_killswitch",
				ye = "d2x_topics_entrypoint_widget",
				Ee = "d2x_receive_notification_events",
				Se = "d2x_liveliness_avatar_presence_indicator",
				Te = "d2x_inbox_redesign_holdout",
				Oe = "web_econ_predictions_auto_vote",
				Ie = "backend_econ_powerups_trophies",
				Re = "d2x_ad_post_header",
				Fe = "econ_web_postify_avatars",
				Ne = "web_econ_avatar_quick_create",
				Ce = "d2x_search_query_alignment",
				je = "d2x_serp_siid",
				Ae = "d2x_serp_redesign_layout_milestone3",
				xe = "backend_econ_powerups_award",
				De = "web_econ_powerups_avatar_perk",
				Pe = "d2x_geo_upsell_tier_0",
				Le = "d2x_geo_upsell_tier_1",
				ke = "d2x_geo_upsell_tier_2",
				Be = "d2x_signal_collection",
				Me = "web_econ_supporter_flairs",
				Ue = "web_meta_landing_page_redesign",
				Ge = "web_econ_improved_cancellation",
				qe = "web_econ_premium_awards_sheet_upsell",
				Ve = "web_econ_premium_coin_bonus_banner",
				He = "d2x_more_replies_signup_interstitial",
				We = "d2x_nps_survey_dismiss_signup_trigger",
				ze = "d2x_nps_survey_successful_signup_trigger",
				Ke = "backend_econ_coins_pack_purchase",
				Ye = "web_econ_premium_drawer_upsell_2",
				$e = "web_econ_premium_coin_store_upsell",
				Qe = "web_econ_marketplace_initial_drop",
				Je = "d2x_reonboarding_flow",
				Xe = "web_econ_marketplace_specialty_treatment",
				Ze = "ae_country_setting_d2x",
				et = "ae_comment_toxicity_setting_r2",
				tt = "d2x_nav_click_events",
				it = "d2x_nav_click_events_v2",
				nt = "web_econ_avatar_nft",
				rt = "d2x_leaderboard_takeover",
				st = "forking_community_creation",
				ot = "d2x_subreddit_discovery_post_mentions",
				dt = "d2x_subreddit_discovery_crosspost",
				at = "backend_econ_payments_sandbox",
				lt = "d2x_realtimegql_presence_load_test",
				ut = "web2x_animation_count_v2",
				ct = "nsfw_listing_below_content_v2",
				_t = "d2x_inbox_ctas",
				mt = "d2x_inbox_infinite_scroll",
				pt = "promoted_flair_cleanup",
				ht = "country_sites_enabled",
				ft = "country_sites_admin_only",
				bt = "d2x_seo_ui_match_enabled",
				gt = "d2x_inbox_policy_banner",
				wt = "d2x_one_feed",
				vt = "d2x_creator_stats_m2",
				yt = "open_ai_pilot_v1",
				Et = "web_econ_predictions_approved_mod_users",
				St = "d2x_join_optimizations_community_header",
				Tt = "d2x_join_optimizations_post_detail_header",
				Ot = "d2x_join_optimizations_post_detail_lightbox",
				It = "d2x_join_optimizations_upsell",
				Rt = "d2x_join_optimizations_private_community",
				Ft = "d2x_join_optimizations_combined_m2",
				Nt = "web2x_typing_indicators_v2_m1",
				Ct = "web_econ_predictions_marketing_page_entry",
				jt = "d2x_online_status_write_load_test",
				At = "d2x_online_status_read_load_test",
				xt = "web2x_reading_indicators_write_load_test",
				Dt = "web2x_reading_indicators_read_load_test",
				Pt = "d2x_logged_out_mini_inbox",
				Lt = "d2x_wrapped_reddit",
				kt = "d2x_telemetry_via_fetch",
				Bt = "d2x_telemetry_via_gql",
				Mt = "ps_battles",
				Ut = "web2x_reading_indicators",
				Gt = "presence_holdout",
				qt = "d2x_google_sso_gis_parity",
				Vt = "d2x_telemetry_via_sw",
				Ht = "d2x_share_chat_button",
				Wt = "d2x_safari_onetap",
				zt = "d2x_avatar_change_fix",
				Kt = "chat_link_sharing_direct",
				Yt = "d2x_gql_distinguish",
				$t = "web_econ_predictions_subreddit_leaderboard",
				Qt = "web_econ_predictions_previous_leaderboards",
				Jt = "web_econ_prediction_creation_tab",
				Xt = "web2x_typing_indicators_get_load_test",
				Zt = "web2x_typing_indicators_post_load_test",
				ei = "ae_trueblock_post_comments_as_blockee",
				ti = "d2x_wrapped_reddit_banner",
				ii = "d2x_gql_modqueues_shadowtest",
				ni = "d2x_gql_modqueues",
				ri = "web_econ_end_tournament_modal",
				si = "d2x_nsfw_signup_blocking_de_v1",
				oi = "d2x_nsfw_signup_blocking_non_us_v1",
				di = "d2x_new_community_progress_v3",
				ai = "web_econ_predictions_custom_token",
				li = "mod_widget_image_upload_test",
				ui = "d2x_i18n_logged_out_blocking",
				ci = "open_ai_crosspost",
				_i = "web_econ_predictions_unicorn_icon_v2",
				mi = "ae_trueblock_rate_limiting",
				pi = "web_mod_user_notes",
				hi = "subreddit_country_edit_d2x",
				fi = "subreddit_language_edit_d2x",
				bi = "d2x_no_pn_permissions_prompt_overlay",
				gi = "d2x_empty_state_notifications",
				wi = "survey_service_migration",
				vi = "d2x_netzdg_compliance",
				yi = "dsp_rollout",
				Ei = "d2x_seo_disable_lightbox",
				Si = "web_hot_potato";
			var Ti, Oi;
			! function(e) {
				e.Karma = "karma", e.Memes = "memes", e.PnEmail = "pn_email", e.Cats = "cats", e.Popular = "r_popular"
			}(Ti || (Ti = {})),
			function(e) {
				e.Control1 = "control_1", e.Control2 = "control_2"
			}(Oi || (Oi = {}));
			const Ii = "enabled",
				Ri = e => e === Oi.Control1 || e === Oi.Control2;
			var Fi, Ni, Ci, ji, Ai, xi, Di, Pi, Li, ki, Bi, Mi, Ui, Gi, qi, Vi, Hi, Wi, zi, Ki, Yi, $i, Qi, Ji, Xi, Zi, en, tn, nn, rn, sn, on, dn, an, ln, un, cn, _n, mn, pn, hn, fn, bn, gn, wn, vn, yn, En, Sn, Tn, On, In, Rn, Fn, Nn, Cn, jn, An, xn, Dn, Pn, Ln, kn, Bn, Mn, Un, Gn, qn, Vn, Hn, Wn, zn, Kn, Yn, $n, Qn, Jn, Xn, Zn, er, tr, ir, nr, rr, sr, or, dr, ar, lr, ur, cr, _r, mr, pr, hr, fr, br, gr, wr, vr, yr, Er, Sr, Tr, Or, Ir, Rr, Fr, Nr, Cr, jr, Ar, xr, Dr, Pr, Lr, kr, Br, Mr, Ur, Gr, qr, Vr, Hr, Wr, zr, Kr, Yr, $r, Qr, Jr, Xr, Zr, es, ts, is, ns, rs, ss, os, ds, as, ls, us, cs, _s, ms, ps, hs, fs;
			! function(e) {
				e.Enabled = "enabled"
			}(Fi || (Fi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Ni || (Ni = {})),
			function(e) {
				e.Five = "five_percent", e.Ten = "ten_percent", e.Fifty = "fifty_percent"
			}(Ci || (Ci = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ji || (ji = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Ai || (Ai = {})),
			function(e) {
				e.Enabled = "enabled"
			}(xi || (xi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Di || (Di = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Pi || (Pi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Li || (Li = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ki || (ki = {})),
			function(e) {
				e.EnabledBanner = "enabled_banner", e.ControlBanner = "control_banner"
			}(Bi || (Bi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Mi || (Mi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Ui || (Ui = {})),
			function(e) {
				e.Enabled = "enabled", e.ListingEnabled = "listing_enabled"
			}(Gi || (Gi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(qi || (qi = {})),
			function(e) {
				e.Variant1 = "variant_1"
			}(Vi || (Vi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Hi || (Hi = {})),
			function(e) {
				e.Variant1 = "variant_1", e.Variant2 = "variant_2", e.Variant3 = "variant_3"
			}(Wi || (Wi = {})),
			function(e) {
				e.Enabled = "enabled"
			}(zi || (zi = {})),
			function(e) {
				e.Treatment1 = "treatment_1"
			}(Ki || (Ki = {})),
			function(e) {
				e.Treatment1 = "treatment_1"
			}(Yi || (Yi = {})),
			function(e) {
				e.Holdout = "holdout", e.AdHoldout = "ad_holdout"
			}($i || ($i = {})),
			function(e) {
				e.TestTreatment1 = "toast", e.TestTreatment2 = "popup", e.TestTreatment3 = "knoxses"
			}(Qi || (Qi = {})),
			function(e) {
				e.Treatment1 = "treatment_1"
			}(Ji || (Ji = {})),
			function(e) {
				e.On = "on"
			}(Xi || (Xi = {})),
			function(e) {
				e.ShowTopContent = "show_top_content"
			}(Zi || (Zi = {})),
			function(e) {
				e.Rollout = "enabled", e.Holdout = "holdout"
			}(en || (en = {})),
			function(e) {
				e.Truncate = "truncate", e.SmallBanner = "small_banner", e.Both = "both"
			}(tn || (tn = {})),
			function(e) {
				e.Max1 = "max_1", e.Max2 = "max_2"
			}(nn || (nn = {})),
			function(e) {
				e.Treatment1 = "treatment_1", e.Treatment2 = "treatment_2"
			}(rn || (rn = {})),
			function(e) {
				e.NoActions = "no_actions", e.NoAds = "no_ads", e.NoWidgets = "no_widgets", e.Combined = "combined"
			}(sn || (sn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(on || (on = {})),
			function(e) {
				e.IdCard = "id_card", e.RailSwap = "rail_swap"
			}(dn || (dn = {})),
			function(e) {
				e.Narrow = "narrow", e.NarrowCard = "narrow_card"
			}(an || (an = {})),
			function(e) {
				e.Lightbox = "lightbox"
			}(ln || (ln = {})),
			function(e) {
				e.Enabled = "enabled"
			}(un || (un = {})),
			function(e) {
				e.ShellRendered = "shell_rendered"
			}(cn || (cn = {})),
			function(e) {
				e.Variant1 = "variant_1"
			}(_n || (_n = {})),
			function(e) {
				e.Enabled = "enabled"
			}(mn || (mn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(pn || (pn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(hn || (hn = {})),
			function(e) {
				e.TopicsAndDescriptionRequired = "all_required", e.NoneRequired = "none_required"
			}(fn || (fn = {})),
			function(e) {
				e.NoCommunityWidgets = "no_community_widgets", e.NoRulesModerators = "no_rules_moderators", e.RelatedPostsDu = "related_posts_du"
			}(bn || (bn = {})),
			function(e) {
				e.MediumHeight = "medium_height", e.OnlyTitles = "only_titles"
			}(gn || (gn = {})),
			function(e) {
				e.CurrentThrottled = "current_throttled", e.CurrentUnthrottled = "current_unthrottled", e.CurrentUnthrottledCopy = "current_unthrottled_copy", e.NewPageUnthrottledCopy = "new_page_unthrottled_copy", e.NewPageUnthrottledCopyFields = "new_page_unthrottled_copy_fields", e.NewPopUnthrottledCopy = "new_pop_unthrottled_copy"
			}(wn || (wn = {})),
			function(e) {
				e.Treatment = "treatment"
			}(vn || (vn = {})),
			function(e) {
				e.SmIcon = "sm_icon", e.SmIconHc = "sm_icon_hc"
			}(yn || (yn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(En || (En = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Sn || (Sn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Tn || (Tn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(On || (On = {})),
			function(e) {
				e.Enabled = "enabled"
			}(In || (In = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Rn || (Rn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Fn || (Fn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Nn || (Nn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Cn || (Cn = {})),
			function(e) {
				e.Enabled = "enabled", e.VariantA = "variant_a", e.VariantB = "variant_b"
			}(jn || (jn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(An || (An = {})),
			function(e) {
				e.Treatment = "treatment"
			}(xn || (xn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Dn || (Dn = {})),
			function(e) {
				e.Active = "active"
			}(Pn || (Pn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Ln || (Ln = {})),
			function(e) {
				e.Enabled = "enabled"
			}(kn || (kn = {})),
			function(e) {
				e.SSO = "sso"
			}(Bn || (Bn = {})),
			function(e) {
				e.Linked = "linked"
			}(Mn || (Mn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Un || (Un = {})),
			function(e) {
				e.UpvoteOnly = "upvote_only", e.UpvoteDownvote = "upvote_downvote"
			}(Gn || (Gn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(qn || (qn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Vn || (Vn = {})),
			function(e) {
				e.AdsControl = "ads_control", e.Nlp5Max = "nlp_5max", e.Nlp15Max = "nlp_15max", e.Search5Max = "search_5max"
			}(Hn || (Hn = {})),
			function(e) {
				e.MixedRecs = "mixed_recs", e.DeRecs = "de_recs"
			}(Wn || (Wn = {})),
			function(e) {
				e.Onetap = "onetap", e.OnetapAuto = "onetap_auto"
			}(zn || (zn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Kn || (Kn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Yn || (Yn = {})),
			function(e) {
				e.Enabled = "enabled"
			}($n || ($n = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Qn || (Qn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Jn || (Jn = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Xn || (Xn = {})),
			function(e) {
				e.AllItems = "all_items", e.TrendingSearch = "trending_search"
			}(Zn || (Zn = {})),
			function(e) {
				e.RotateEven = "rotate_even"
			}(er || (er = {})),
			function(e) {
				e.ML = "ml"
			}(tr || (tr = {})),
			function(e) {
				e.Redirect = "redirect"
			}(ir || (ir = {})),
			function(e) {
				e.Enabled = "enabled"
			}(nr || (nr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(rr || (rr = {})),
			function(e) {
				e.EnabledLogin = "enabled_login", e.EnabledLoginSignup = "enabled_login_signup"
			}(sr || (sr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(or || (or = {})),
			function(e) {
				e.Enabled = "enabled"
			}(dr || (dr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ar || (ar = {})),
			function(e) {
				e.Enabled = "enabled"
			}(lr || (lr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ur || (ur = {})),
			function(e) {
				e.Enabled = "enabled"
			}(cr || (cr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(_r || (_r = {})),
			function(e) {
				e.Enabled = "enabled"
			}(mr || (mr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(pr || (pr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(hr || (hr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(fr || (fr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(br || (br = {})),
			function(e) {
				e.Enabled = "enabled"
			}(gr || (gr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(wr || (wr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(vr || (vr = {})),
			function(e) {
				e.PromotedBlue = "promoted_blue", e.PromotedGrey = "promoted_grey", e.NoLockIcon = "no_lock_icon"
			}(yr || (yr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Er || (Er = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Sr || (Sr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Tr || (Tr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Or || (Or = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Ir || (Ir = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Rr || (Rr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Fr || (Fr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Nr || (Nr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Cr || (Cr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(jr || (jr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Ar || (Ar = {})),
			function(e) {
				e.Enabled = "enabled"
			}(xr || (xr = {})),
			function(e) {
				e.Redesign = "redesign"
			}(Dr || (Dr = {})),
			function(e) {
				e.VoteCountOnly = "vote_count_only", e.CommentCountOnly = "comment_count_only", e.VoteAndCommentCount = "vote_and_comment_count"
			}(Pr || (Pr = {})),
			function(e) {
				e.SeePostCTAs = "see_post_ctas", e.ReplyCTAs = "reply_ctas", e.AllCTAs = "all_ctas"
			}(Lr || (Lr = {})),
			function(e) {
				e.ContinuousScroll = "continuous_scroll"
			}(kr || (kr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Br || (Br = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Mr || (Mr = {})),
			function(e) {
				e.Supporter = "supporter_benefit", e.Community = "community_benefit"
			}(Ur || (Ur = {})),
			function(e) {
				e.Bottom_sheet = "bottom_sheet", e.Bottom_cell = "bottom_cell", e.Bottom_cell_dismissible = "bottom_cell_dismissible", e.Bottom_cell_dismissible_immediate_trigger = "bottom_cell_dism_imm_trigger", e.Bottom_cell_signup_upsell_copy = "bottom_cell_signup_upsell_copy", e.Bottom_cell_surprise_install_copy = "bottom_cell_fun_install_copy"
			}(Gr || (Gr = {})),
			function(e) {
				e.UIChangesOnly = "ui_changes_only", e.RedditRecommendation = "reddit_recommendation", e.OpenAI = "open_ai", e.FilteredOpenAI = "filtered_open_ai"
			}(qr || (qr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Vr || (Vr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Hr || (Hr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Wr || (Wr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(zr || (zr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Kr || (Kr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Yr || (Yr = {})),
			function(e) {
				e.TypingIndicators = "typing_indicators", e.IndicatorsPlusCTA = "indicators_plus_cta"
			}($r || ($r = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Qr || (Qr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Jr || (Jr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Xr || (Xr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(Zr || (Zr = {})),
			function(e) {
				e.Enabled = "enabled"
			}(es || (es = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ts || (ts = {})),
			function(e) {
				e.Enabled = "enabled"
			}(is || (is = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ns || (ns = {})),
			function(e) {
				e.Enabled = "enabled", e.ThrottledDaily = "enabled_throttled_daily", e.ThrottledWeekly = "enabled_throttled_weekly"
			}(rs || (rs = {})),
			function(e) {
				e.Daily = "d2x_more_replies_signup_interstitial_daily", e.Weekly = "d2x_more_replies_signup_interstitial_weekly"
			}(ss || (ss = {})),
			function(e) {
				e.Enabled = "enabled"
			}(os || (os = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ds || (ds = {})),
			function(e) {
				e.Enabled = "enabled"
			}(as || (as = {})),
			function(e) {
				e.Enabled = "enabled"
			}(ls || (ls = {})),
			function(e) {
				e.Enabled = "enabled"
			}(us || (us = {})),
			function(e) {
				e.V1 = "v1", e.V2 = "v2", e.NewModule = "new_module"
			}(cs || (cs = {})),
			function(e) {
				e.HardBlocking = "d2x_hard_blocking", e.SoftBlocking = "d2x_soft_blocking", e.SoftBlockingThrottledDaily = "soft_blocking_throttling_daily", e.SoftBlockingThrottledWeekly = "soft_blocking_throttling_week"
			}(_s || (_s = {})),
			function(e) {
				e.Daily = "d2x_logged_out_blocking_daily", e.Weekly = "d2x_logged_out_blocking_weekly"
			}(ms || (ms = {})),
			function(e) {
				e.Feed = "feed", e.Feed15 = "feed_15", e.PopoverFeed = "first_popover_feed", e.PopoverFeed15 = "first_popover_feed_15"
			}(ps || (ps = {})),
			function(e) {
				e.Enabled = "enabled"
			}(hs || (hs = {})),
			function(e) {
				e.Enabled = "enabled"
			}(fs || (fs = {}));
			const bs = {
					[Ei]: [Ii],
					[yi]: [Ii],
					[gi]: [Ti.Karma, Ti.Memes, Ti.PnEmail, Ti.Cats, Ti.Popular],
					[bi]: [Ii],
					[Qe]: [Ii],
					[Je]: [ps.Feed, ps.Feed15, ps.PopoverFeed, ps.PopoverFeed15],
					[pi]: [Ii],
					web_crypto_nft_verification: [Ii],
					[mi]: [Ii],
					[Ae]: [Dr.Redesign],
					[wi]: [Ii],
					[ot]: [Ii],
					[dt]: [Ii],
					[_i]: [Ii],
					[ci]: [Ii],
					[$e]: [Ii],
					[Xe]: [Ii],
					[li]: [Ii],
					chat_mediashare_images: [Ii],
					web_chat_mediashare_images_killswitch: [Ii],
					[ai]: [Ii],
					[ti]: [is.Enabled],
					[ri]: [Ii],
					[ni]: [Ii],
					[ii]: [Ii],
					[si]: [ls.Enabled],
					[oi]: [us.Enabled],
					[ei]: [Ii],
					[Ke]: [Ii],
					[Zt]: [Ii],
					[Xt]: [Ii],
					[Jt]: [Ii],
					[Qt]: [Ii],
					d2x_belonging_survey: [Ii],
					[Ye]: [Ii],
					[$t]: [Ii],
					[Ve]: [Ii],
					[We]: [ds.Enabled],
					[ze]: [as.Enabled],
					[He]: [rs.Enabled, rs.ThrottledDaily, rs.ThrottledWeekly],
					[Ge]: [Ii],
					[qe]: [Ii],
					[ui]: [_s.HardBlocking, _s.SoftBlocking, _s.SoftBlockingThrottledDaily, _s.SoftBlockingThrottledWeekly],
					[Lt]: [ts.Enabled],
					[Yt]: [Ii],
					[Wt]: [os.Enabled],
					[Ue]: [Ii],
					[qt]: [ns.Enabled],
					[Gt]: [Ii],
					[Be]: [es.Enabled],
					[Ut]: [Ii],
					[Mt]: [Ii],
					[Dt]: [Ii],
					[xt]: [Ii],
					[jt]: [Ii],
					[At]: [Ii],
					[Ct]: [Ii],
					[zt]: [Ii],
					[Kt]: [Ii],
					archive_toggle_d2x: [Ii],
					[Nt]: [$r.TypingIndicators, $r.IndicatorsPlusCTA],
					[at]: [jr.Enabled],
					[Et]: [Ii],
					[Me]: [Ii],
					[yt]: [qr.UIChangesOnly, qr.RedditRecommendation, qr.OpenAI, qr.FilteredOpenAI],
					[vt]: [Ii],
					[Ht]: [Ii],
					[De]: [Fi.Enabled],
					[Pt]: [Zr.Enabled],
					[Pe]: [Gr.Bottom_sheet, Gr.Bottom_cell, Gr.Bottom_cell_dismissible, Gr.Bottom_cell_dismissible_immediate_trigger, Gr.Bottom_cell_signup_upsell_copy, Gr.Bottom_cell_surprise_install_copy],
					[Le]: [Gr.Bottom_sheet, Gr.Bottom_cell, Gr.Bottom_cell_dismissible],
					[ke]: [Gr.Bottom_sheet, Gr.Bottom_cell, Gr.Bottom_cell_dismissible],
					[I]: [Nn.Enabled],
					[xe]: [Ur.Supporter, Ur.Community],
					[wt]: [Tr.Enabled],
					profile_follower_list_d2x: [Ii],
					[st]: [Cr.Enabled],
					[gt]: [Mr.Enabled],
					[mt]: [kr.ContinuousScroll],
					[pt]: [Br.Enabled],
					[ft]: [Ii],
					[ht]: [Ii],
					[bt]: [Ii],
					[hi]: [Ii],
					[fi]: [Ii],
					[ut]: [Pr.VoteCountOnly, Pr.CommentCountOnly, Pr.VoteAndCommentCount],
					[lt]: [Ar.Enabled],
					[Ce]: [xr.Enabled],
					[je]: [Ii],
					[tt]: [Ir.Enabled],
					[it]: [Rr.Enabled],
					[_t]: [Lr.SeePostCTAs, Lr.ReplyCTAs, Lr.AllCTAs],
					[Oe]: [wr.Enabled],
					[Ze]: [Sr.Enabled],
					[et]: [Or.Enabled],
					[Re]: [yr.PromotedBlue, yr.PromotedGrey, yr.NoLockIcon],
					[Ie]: [vr.Enabled],
					[Te]: [gr.Enabled],
					[Se]: [Ii],
					[Ee]: [hr.Enabled],
					[ve]: [pr.Enabled],
					[ye]: [Ii],
					[ge]: [Ii],
					[we]: [Ni.Enabled],
					[he]: [cr.Enabled],
					[pe]: [ur.Enabled],
					[me]: [lr.Enabled],
					[ue]: [ji.Enabled],
					[ce]: [dr.Enabled],
					[_e]: [ar.Enabled],
					[le]: [Ci.Five, Ci.Ten, Ci.Fifty],
					[ae]: [sr.EnabledLogin, sr.EnabledLoginSignup],
					[de]: [rr.Enabled],
					[se]: [ir.Redirect],
					[oe]: [Ai.Enabled],
					[ne]: [er.RotateEven],
					[ie]: [Yn.Enabled],
					[ee]: [$n.Enabled],
					[Z]: [Kn.Enabled],
					[X]: [zn.Onetap, zn.OnetapAuto],
					[J]: [Hn.AdsControl, Hn.Nlp5Max, Hn.Nlp15Max, Hn.Search5Max],
					[Q]: [Vn.Enabled],
					d2x_chat_post_voting: [Gn.UpvoteOnly, Gn.UpvoteDownvote],
					[Y]: [Un.Enabled],
					guest_d2x_subreddit_subreddit_links_url: [Mn.Linked],
					post_level_crowd_control: [kn.Enabled],
					d2x_sso_settings: [Bn.SSO],
					[P]: [Ln.Enabled],
					[D]: [zi.Enabled],
					[V]: [Ii],
					[k]: [Di.Enabled],
					[Fe]: [Pi.Enabled],
					[Ne]: [Li.Enabled],
					[G]: [ki.Enabled],
					[q]: [Bi.ControlBanner, Bi.EnabledBanner],
					[B]: [Mi.Enabled],
					[M]: [Ui.Enabled],
					[H]: [Gi.Enabled],
					[K]: [Vi.Variant1],
					[L]: [Hi.Enabled],
					econ_new_user_targeted_offer: [Wi.Variant1, Wi.Variant2, Wi.Variant3],
					[F]: [jn.Enabled, jn.VariantA, jn.VariantB],
					[S]: [In.Enabled],
					[T]: [Rn.Enabled],
					polls_ga: [On.Enabled],
					[v]: [yn.SmIcon, yn.SmIconHc],
					[y]: [En.Enabled],
					[E]: [Sn.Enabled],
					[w]: [vn.Treatment],
					[g]: [wn.CurrentThrottled, wn.CurrentUnthrottled, wn.CurrentUnthrottledCopy, wn.NewPageUnthrottledCopy, wn.NewPageUnthrottledCopyFields, wn.NewPopUnthrottledCopy],
					[b]: [gn.OnlyTitles, gn.MediumHeight],
					[f]: [bn.NoCommunityWidgets, bn.NoRulesModerators, bn.RelatedPostsDu],
					community_creation_topics: [fn.TopicsAndDescriptionRequired, fn.NoneRequired],
					[p]: [mn.Enabled],
					[h]: [hn.Enabled],
					[_]: [un.Enabled],
					desktop_seo_post_v2_lightbox: [ln.Lightbox],
					desktop_seo_post_v2_narrow: [an.Narrow, an.NarrowCard],
					[c]: [dn.IdCard, dn.RailSwap],
					[u]: [sn.NoActions, sn.NoAds, sn.NoWidgets, sn.Combined],
					[l]: [nn.Max1, nn.Max2],
					[o]: [tn.Truncate, tn.SmallBanner, tn.Both],
					[s]: [Xi.On],
					rails_search_results_follow_button: [Ji.Treatment1],
					[r]: [Zi.ShowTopContent],
					[d]: [on.Enabled],
					[a]: [on.Enabled],
					[N]: [An.Enabled],
					[C]: [xn.Treatment],
					[j]: [Dn.Enabled],
					[A]: [Pn.Active],
					[x]: [Pn.Active],
					[R]: [Cn.Enabled],
					[te]: [Qn.Enabled],
					i18n_simplify_ui: [Zn.AllItems, Zn.TrendingSearch],
					[re]: [tr.ML],
					[W]: [br.Enabled],
					[nt]: [Fr.Enabled],
					[rt]: [Nr.Enabled],
					[Ft]: [Yr.Enabled],
					[St]: [Vr.Enabled],
					[Tt]: [Hr.Enabled],
					[Ot]: [Wr.Enabled],
					[It]: [zr.Enabled],
					[Rt]: [Kr.Enabled],
					[z]: [Ii],
					[di]: [cs.V1, cs.V2, cs.NewModule],
					[vi]: [hs.Enabled]
				},
				gs = new Set([si, oi, Wt, g, s, v, x, "guest_d2x_subreddit_subreddit_links_url", J, X, te, re, se, ae, ge, Se, tt, it, lt, ut, wt, yt, ct, Pe, Le, ke, Be, kt, qt, Vt, Bt, He, vi, Ei, gi]),
				ws = {
					NFL: () => n.fbt._("NFL", null, {
						hk: "3ktT9l"
					}),
					Discussion: () => n.fbt._("Discussion", null, {
						hk: "3k9z8"
					}),
					Relationships: () => n.fbt._("Relationships", null, {
						hk: "2pjS3k"
					}),
					Sports: () => n.fbt._("Sports", null, {
						hk: "1wNOYd"
					}),
					Gaming: () => n.fbt._("Gaming", null, {
						hk: "2jVm7p"
					}),
					News: () => n.fbt._("News", null, {
						hk: "2G9qyR"
					}),
					Beauty: () => n.fbt._("Beauty", null, {
						hk: "1l030Z"
					}),
					"Health & Fitness": () => n.fbt._("Health & Fitness", null, {
						hk: "39lKFV"
					}),
					Learning: () => n.fbt._("Learning", null, {
						hk: "2OYKSO"
					}),
					Parenting: () => n.fbt._("Parenting", null, {
						hk: "21uLVN"
					}),
					Tech: () => n.fbt._("Tech", null, {
						hk: "2M3YyR"
					}),
					Crypto: () => n.fbt._("Crypto", null, {
						hk: "8kHtA"
					}),
					Science: () => n.fbt._("Science", null, {
						hk: "4EzJrz"
					}),
					"Video Games": () => n.fbt._("Video Games", null, {
						hk: "2iP5uR"
					}),
					TV: () => n.fbt._("TV", null, {
						hk: "321KwV"
					}),
					Popcorn: () => n.fbt._("Popcorn", null, {
						hk: "2yO1ji"
					}),
					Vroom: () => n.fbt._("Vroom", null, {
						hk: "3oCSe7"
					}),
					Food: () => n.fbt._("Food", null, {
						hk: "RipFl"
					}),
					Outdoors: () => n.fbt._("Outdoors", null, {
						hk: "46zvEp"
					}),
					Fashion: () => n.fbt._("Fashion", null, {
						hk: "1zj90r"
					}),
					"Books & Writing": () => n.fbt._("Books & Writing", null, {
						hk: "2W2sW8"
					}),
					"Art & Design": () => n.fbt._("Art & Design", null, {
						hk: "2WaZeS"
					}),
					Nostalgia: () => n.fbt._("Nostalgia", null, {
						hk: "2RIC4I"
					}),
					Music: () => n.fbt._("Music", null, {
						hk: "2o0Nfh"
					}),
					Travel: () => n.fbt._("Travel", null, {
						hk: "uvY4w"
					}),
					Photography: () => n.fbt._("Photography", null, {
						hk: "1CbMnF"
					}),
					Funny: () => n.fbt._("Funny", null, {
						hk: "1FimLq"
					}),
					Wholesome: () => n.fbt._("Wholesome", null, {
						hk: "4C8gnH"
					}),
					Memes: () => n.fbt._("Memes", null, {
						hk: "11enlg"
					}),
					Aww: () => n.fbt._("Aww", null, {
						hk: "3UDX4u"
					}),
					"Pics & Gifs": () => n.fbt._("Pics & Gifs", null, {
						hk: "3p7PA"
					}),
					Mindblowing: () => n.fbt._("Mindblowing", null, {
						hk: "3YHPhg"
					}),
					Videos: () => n.fbt._("Videos", null, {
						hk: "4Do6Sq"
					}),
					Cringe: () => n.fbt._("Cringe", null, {
						hk: "P2XLb"
					}),
					Schadenfreude: () => n.fbt._("Schadenfreude", null, {
						hk: "nSJdn"
					})
				},
				vs = e => e.reduce((e, t, i) => (e[t] = i + 1, e), {}),
				ys = vs(["NFL", "Discussion", "Relationships", "Sports", "Gaming", "News", "Beauty", "Health & Fitness", "Learning", "Parenting", "Tech", "Crypto", "Science", "Video Games", "TV", "Popcorn", "Vroom", "Food", "Outdoors", "Fashion", "Books & Writing", "Art & Design", "Nostalgia", "Music", "Travel", "Photography", "Funny", "Wholesome", "Memes", "Aww", "Pics & Gifs", "Mindblowing", "Videos", "Cringe", "Schadenfreude"]),
				Es = e => {
					const t = ws[e];
					return t && t() || e
				}
		},
		"./src/reddit/constants/featureThrottling.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/models/FeatureThrottling/index.ts");
			const o = e => ({
					times: e,
					type: s.b.TimesPerSession
				}),
				d = (e, t) => ({
					period: t,
					times: e,
					type: s.b.TimesPerPeriod
				});
			var a = i("./src/reddit/models/Onboarding/index.ts");
			const l = d(1, n.B),
				u = d(1, n.qc),
				c = {
					[r.nb]: u,
					[r.ob]: u,
					[r.pb]: u,
					[r.qb]: (e => ({
						nth: e,
						type: s.b.NthSession
					}))(3),
					[r.jc]: o(1),
					[r.Pd.Daily]: l,
					[r.Pd.Weekly]: u,
					[r.bb.Daily]: l,
					[r.bb.Weekly]: u,
					[a.d.FeatureGate]: (e => ({
						configs: e,
						op: s.a.And,
						type: s.b.Combined
					}))([((e, t) => ({
						period: t,
						times: e,
						type: s.b.SessionsPerPeriod
					}))(1, n.qc), (e => ({
						times: e,
						type: s.b.SessionsTotal
					}))(3)]),
					[a.d.Dismissed]: o(1),
					[a.d.Triggered]: o(1)
				}
		},
		"./src/reddit/constants/flair.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "h", (function() {
				return _
			}));
			var n = i("./src/reddit/constants/colors.ts"),
				r = i("./src/reddit/models/Flair/index.ts");
			const s = 64,
				o = 10,
				d = 10,
				a = 100,
				l = d * (a + 1),
				u = {
					backgroundColor: n.a.defaultFlair,
					id: "",
					modOnly: !1,
					textColor: r.e.Dark,
					textEditable: !1,
					richtext: [],
					text: "",
					type: r.f.Richtext
				},
				c = "t3_flairPreviewExamplePost",
				_ = 350
		},
		"./src/reddit/constants/headers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = "reddit-user_id"
		},
		"./src/reddit/constants/history.ts": function(e, t, i) {
			"use strict";
			var n, r;
			i.d(t, "b", (function() {
					return n
				})), i.d(t, "a", (function() {
					return r
				})),
				function(e) {
					e.IsOverlay = "isOverlay", e.ScrollOnLoad = "scrollOnLoad", e.CloseLocation = "closeLocation", e.JustLoggedIn = "JustLoggedIn", e.JustLoggedOut = "JustLoggedOut", e.SearchOriginPage = "searchOriginPage", e.ClickSource = "clickSource", e.ClickId = "clickId", e.FeedCorrelationId = "feedCorrelationId", e.ClickSourceFeedCorrelationId = "clickSourceFeedCorrelationId", e.FeedLoadReason = "feedLoadReason"
				}(n || (n = {})),
				function(e) {
					e.InitialLoad = "initial_load", e.UserRefresh = "user_refresh", e.SortChange = "sort_change", e.NextPageLoad = "next_page_load", e.GeoModeChange = "geo_mode_change", e.AutomaticUpdate = "automatic_update"
				}(r || (r = {}))
		},
		"./src/reddit/constants/intlSupport.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return n
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			}));
			const n = e => {
					if (!e) return !0;
					const t = Array.isArray(e) ? e : [e];
					return Intl.DateTimeFormat.supportedLocalesOf(t).length === t.length
				},
				r = (() => {
					try {
						return "1E4 bits" === new Intl.NumberFormat("en", {
							style: "unit",
							unit: "bit",
							unitDisplay: "long",
							notation: "scientific"
						}).format(1e4)
					} catch (e) {
						return !1
					}
				})(),
				s = "undefined" != typeof Intl,
				o = s && void 0 !== Intl.DateTimeFormat,
				d = s && void 0 !== Intl.RelativeTimeFormat,
				a = () => r
		},
		"./src/reddit/constants/listings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js"), i("./node_modules/fbt/lib/FbtPublic.js");
			const n = new Set(["friends", "random"]);
			var r;
			! function(e) {
				e.All = "all", e.Home = "home", e.Rpan = "rpan", e.Popular = "popular", e.SubredditLeaderboard = "subredditLeaderboard", e.Topic = "topic", e.Layer = "layer"
			}(r || (r = {}));
			const s = {
				[r.Home]: "/",
				[r.Popular]: "/r/popular/",
				[r.All]: "/r/all/",
				[r.Rpan]: "/rpan/",
				[r.SubredditLeaderboard]: "/subreddits/leaderboard/",
				[r.Topic]: "/t/",
				[r.Layer]: "/r/Layer"
			}
		},
		"./src/reddit/constants/localStorage.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "b", (function() {
					return n
				})), i.d(t, "a", (function() {
					return r
				})),
				function(e) {
					e.ANNOUNCEMENT_BANNER_SEEN_STORE = "announcement-banner-seen-store", e.ANNOUNCEMENT_BANNER_SEEN_STORE_V2 = "announcement-banner-seen-store-v2", e.AVATAR_QUICK_CREATE_EVENT_STORE = "avatar_quick_create_event_store", e.BANNER_DISMISSED_STORE = "banner_dismissed_store", e.BREAKING_NEWS_DISABLED_STORE = "breaking_news_disabled_store", e.CATEGORIES_RANKING_STORE = "categories-ranking-store", e.COMMUNITY_SURVEY_DISMISSED = "community-survey-dismissed", e.CREATE_POLLS_PAINTED_DOOR_DISMISSED_STORE = "create_polls_painted_door_dismissed_store", e.DESKTOP_NOTIFICATIONS = "desktop-notifications", e.DESKTOP_NOTIFICATIONS_PROMPT_BANNER_SEEN_STORE = "desktop_notifications_prompt_banner_seen_store", e.DESKTOP_NOTIFICATIONS_WRAPPED_REDDIT_BANNER_SEEN_STORE = "desktop_notifications_wrapped_reddit_banner_seen_store", e.DISCLAIMER_DISMISSED_STORE = "disclaimer_store", e.DOWNLOAD_OBS_DISMISSED_STORE = "download-obs-dismissed-store", e.EDITOR_MODE_HINT_SEEN_STORE = "editor-mode-hint", e.EMAIL_COLLECTION_REPROMPT_STORE = "email-collection-reprompt-store", e.EMOJI_PROMO_TOOLTIP_DISPLAY_COUNT = "emoji-promo-tooltip-display-count", e.EMOJI_PROMO_TOOLTIP_DISPLAY_COUNT_PER_SUBREDDIT = "emoji-promo-tooltip-display-count-per-subreddit", e.FEATURE_THROTTLING_STORE = "feature-throttling-store", e.FOCUS_VERTICAL_VARIANT = "FOCUS_VERTICAL_VARIANT", e.FOLLOW_STORE = "follow_store", e.GILD_DEFAULTS_STORE = "gild_defaults_store", e.GIVE_FREE_AWARD_TOOLTIP_STORE = "give_free_award_tooltip_store", e.INBOX_EXPOSURE_SEEN_STORE = "inbox-exposure-seen-store", e.INBOX_PRIVACY_POLICY_BANNER_SEEN_STORE = "inbox-privacy-policy-banner-seen-store", e.INLINE_ID_CARD_PRIMARY_TOPIC_TOOLTIP_STORE = "inline-id-card-primary-topic-tooltip-store", e.LAST_CLICKED_AD_ID = "last-clicked-ad-id", e.LAST_CLICKED_IMPRESSION_ID = "last-clicked-impression-id", e.LEGACY_INLINE_ID_CARD_EDIT_EDU_TOOLTIP_STORE = "inline-edit-edu-tooltip-store", e.LOCAL_PERSISTED_EXPERIMENTS_STORE = "local_persisted_experiments_store", e.LOW_ACTIVITY_CALL_TO_ACTION_STORE = "low-activity-call-to-action-store", e.MOD_ONBOARDING_DISMISSED_STORE = "mod-onboarding-store", e.MODAL_DISMISSED_STORE = "modal_dismissed_store", e.MODHUB_SETTING_SEEN = "modhub-setting-seen", e.OLD_COLLECTIONS_DISMISSED_KEY = "post-creation-collection-tooltip-store", e.OLD_EVENT_DISMISSED_KEY = "post-creation-event-tooltip-store", e.PAGE_TYPE_BEFORE_AD_CLICK = "page-type-before-ad-click", e.POST_CREATION_EDU_TOOLTIP_STORE = "post-creation-edu-tooltip-store", e.POSTS_CONSUMED_WEEKLY = "posts-consumed-weekly", e.POWERUPS_INFEED_UNIT_VISIBILITY_STORE = "powerups-infeed-unit-visibility-store", e.POWERUPS_UNLOCKED_INFEED_UNIT_VISIBILITY_STORE = "powerups-unlocked-infeed-unit-visibility-store", e.POWERUPS_UNAPPLIED_PREMIUM_INFEED_UNIT_VISIBILITY_STORE = "powerups-unapplied-premium-infeed-unit-visibility-store", e.POWERUPS_CNC_MODULE_VISIBILITY_STORE = "powerups-cnc-module-visibility-store", e.PROFILE_PINNED_POSTS_STORE = "profile-pinned-posts-store", e.RECENT_SEARCHES_STORE = "recent_searches", e.RPAN_DU_TRACKING_START_DATE = "rpan-du-tracking-start-date", e.RPAN_START_CHATTING_SEEN_STORE = "rpan-start-chatting-seen-store", e.RPAN_USER_SETTINGS_STORE = "rpan-user-settings-store", e.SUBSCRIBED_SUBREDDIT_VISITS = "subscribed-subreddit-visits", e.SUBREDDITS_FOR_ADOPTION_STORE = "subreddits-for-adoption", e.SURVEY_CONFIG = "survey-config", e.SURVEY_LAST_SEEN = "survey-last-seen", e.SURVEY_SAMPLE_FACTOR_BYPASS = "survey_sample_factor_bypass", e.SURVEY_TRIGGER_ACTION_COUNTS = "survey-trigger-action-counts", e.TIME_BEFORE_UNFOCUS = "time-before-unfocus", e.UPVOTE_TOAST_CTA_LAST_SHOWN = "upvote-toast-cta-last-shown", e.UPVOTE_TOAST_LAST_THREE = "upvote-toast-last-three", e.REMOVAL_REASONS_TOOLTIP_SEEN = "removal-reasons-tooltip-seen", e.EMPTY_INBOX_STATE_BADGE_SEEN = "empty_inbox_state_badge_seen"
				}(n || (n = {}));
			const r = 1e3
		},
		"./src/reddit/constants/modals.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})), i.d(t, "b", (function() {
					return r
				})),
				function(e) {
					e.ACHIEVEMENT_FLAIR = "achievement_flair", e.ADD_REMOVAL_REASON = "add_removal_reason", e.ALPHA_CONSUMER = "alpha_consumer", e.BADGE_PURCHASE = "badge_purchase", e.BAN_USER = "ban_user", e.BLADE_NIGHTMODE = "blade_nightmode", e.BLADE_UNSAVED_CHANGES = "blade_unsaved_changes", e.CHANGE_PASSWORD_MODAL_ID = "account_manager_change_password", e.CONFETTI_ANIMATION_OVERLAY = "confetti_animation_overlay", e.CONFIRM_CLOSE_COIN_MODAL_ID = "confirm_close_coin_modal_id", e.CONFIRM_CLOSE_PREMIUM_MODAL_ID = "confirm_close_premium_modal_id", e.CONTRIBUTOR_REQUEST = "contributor_request", e.CONTRIBUTOR_REQUEST_PENDING = "contributor_request_pending", e.CONTRIBUTOR_REQUEST_PRIVATE_SUREDDIT = "contributor_request_private_subreddit", e.CONVERT_TO_COINS = "convert_to_coins", e.CRYPTO_BURN_POINTS = "crypto_burn_points", e.DISABLE_TWO_FACTOR = "disable_2fa_modal", e.DOWN_TO_CHAT_PENDING_MODAL = "down_to_chat_pending_modal", e.ECON_CLAIM_FREE_AWARD_MODAL = "econ_claim_free_award_modal", e.ECON_COIN_PURCHASE = "econ_coin_purchase", e.ECON_COIN_PACKAGE_OFFER = "econ_coin_package_offer", e.ECON_MARKETPLACE_CLAIM = "econ_marketplace_claim", e.ECON_NFT_PRODUCT_DETAILS = "econ_nft_product_details", e.ECON_POWERUPS_MARKETING = "econ_powerups_marketing", e.ECON_POWERUPS_PURCHASE = "econ_powerups_purchase", e.ECON_POWERUPS_PREMIUM_UPSELL = "econ_powerups_premium_upsell", e.ECON_POWERUPS_SUCCESS = "econ_powerups_success", e.ECON_PREDICTIONS_CHANGE_END_TIME = "econ_predictions_end_time", e.ECON_PREDICTIONS_CHANGE_OUTCOME = "econ_predictions_change_outcome", e.ECON_PREDICTIONS_CANCEL_PREDICTION = "econ_predictions_cancel_prediction", e.ECON_PREDICTIONS_INACTIVITY_MODAL = "econ_predictions_inactivity_modal", e.ECON_PREDICTIONS_PREMIUM_UPSELL = "econ_predictions_premium_upsell", e.ECON_PREDICTIONS_START_TOURNAMENT_LIMIT = "econ_predictions_start_tournament_limitation", e.ECON_PREMIUM_PURCHASE = "econ_premium_purchase", e.ECON_TOP_AWARDERS = "econ_top_awarders", e.ECON_SUPPORTERS_LIST = "econ_supporters_list", e.EDIT_DESCRIPTION_MODAL = "edit_community_description_modal", e.ENABLE_TWO_FACTOR = "enable_2fa_modal", e.GOLD_GILD_ANIMATION_OVERLAY = "gold_gild_animation_overlay", e.GOLD_GILD_MODAL = "gold_gild_modal", e.GOLD_TARGETED_OFFER_MODAL = "gold_targeted_offer", e.GOOGLE_ONE_TAP_MODAL_ID = "google_one_tap_modal_id", e.GOVERNANCE_OPT_OUT = "governance_opt_out", e.GOVERNANCE_RELEASE_NOTES = "governance_release_notes", e.HARBERGER_TAX_CRYPTO_BANNER_MANAGE = "harberger_tax_crypto_banner_manage", e.HARBERGER_TAX_CRYPTO_BANNER_PURCHASE = "hargerger_tax_crypto_banner_purchase", e.HARBERGER_TAX_BANNER_MANAGE = "harberger_tax_banner_manage", e.HARBERGER_TAX_BANNER_PURCHASE = "harberger_tax_banner_purchase", e.KEYBOARD_SHORTCUTS = "keyboard_shortcuts", e.LINK_APPLE_SSO = "link_apple_sso", e.LINK_GOOGLE_SSO = "link_google_sso", e.LOGIN_MODAL_ID = "account_manager_login", e.MOD_TO_MEMBER_SHARE = "mod_to_member_share", e.CROWD_CONTROL = "crowd_control", e.MULTIREDDIT_ADD_SUBREDDIT = "multireddit_add_subreddit", e.MULTIREDDIT_CREATE = "multireddit_create", e.MULTIREDDIT_DUPLICATE = "multireddit_duplicate", e.MULTIREDDIT_EDIT = "multireddit_edit", e.MUTE_USER = "mute_user", e.ONBOARDING_MODAL_D2X = "d2x_onboarding", e.ONBOARDING_MODAL_ID = "account_manager_onboarding", e.PINNED_POSTS_LIMIT_REACHED = "pinned_posts_limit_reached", e.POST_FLOW_UPSELL_MODAL_ID = "post_flow_upsell_modal", e.REDESIGN_MODAL = "redesign_modal", e.REGISTER_MODAL_ID = "account_manager_register", e.SNOOVATAR_MODAL = "snoovatar_modal", e.SPEZ_MODAL = "spez_modal", e.SUBREDDIT_CREATION_MODAL_ID = "subreddit_creation_modal_id", e.SUBREDDIT_PREMIUM_BADGE_MANAGEMENT = "subreddit_premium_badge_management", e.SUBREDDIT_PREMIUM_GIFT_MODAL = "subreddit_premium_gift", e.SUBREDDIT_PREMIUM_UPLOAD_MODAL = "subreddit_premium_upload", e.TRANSFER_POINTS = "community_points_transfer", e.TWO_FACTOR_BACKUP_CODES = "two_factor_backup_codes", e.UNLINK_APPLE_SSO = "unlink_apple_sso", e.UNLINK_GOOGLE_SSO = "unlink_google_sso", e.USER_FLAIR_MODAL_ID = "user_flair_modal", e.WALLET_REGISTRATION_MODAL = "wallet_registration_modal"
				}(n || (n = {}));
			const r = [n.GOOGLE_ONE_TAP_MODAL_ID]
		},
		"./src/reddit/constants/page.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "e", (function() {
				return r
			})), i.d(t, "f", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "g", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			})), i.d(t, "h", (function() {
				return u
			}));
			const n = "(frontpage)",
				r = "(modListing)",
				s = "(modListingFiltered)";
			var o;
			! function(e) {
				e.Frontpage = "frontpage", e.All = "all", e.Mod = "mod", e.Friends = "friends", e.Popular = "popular", e.PostDetail = "postDetail", e.Topic = "topic", e.OtherDiscussions = "otherDiscussions"
			}(o || (o = {}));
			const d = o.All,
				a = o.Popular,
				l = o.Frontpage;
			var u;
			! function(e) {
				e[e.Top = 0] = "Top", e[e.Posts = 1] = "Posts", e[e.Listings = 2] = "Listings", e[e.Authors = 3] = "Authors", e[e.Comments = 4] = "Comments"
			}(u || (u = {}))
		},
		"./src/reddit/constants/parameters.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "j", (function() {
				return a
			})), i.d(t, "k", (function() {
				return l
			})), i.d(t, "n", (function() {
				return u
			})), i.d(t, "o", (function() {
				return c
			})), i.d(t, "p", (function() {
				return _
			})), i.d(t, "v", (function() {
				return m
			})), i.d(t, "q", (function() {
				return p
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "r", (function() {
				return f
			})), i.d(t, "s", (function() {
				return b
			})), i.d(t, "t", (function() {
				return g
			})), i.d(t, "z", (function() {
				return w
			})), i.d(t, "x", (function() {
				return v
			})), i.d(t, "B", (function() {
				return y
			})), i.d(t, "A", (function() {
				return E
			})), i.d(t, "C", (function() {
				return S
			})), i.d(t, "i", (function() {
				return T
			})), i.d(t, "D", (function() {
				return O
			})), i.d(t, "E", (function() {
				return I
			})), i.d(t, "y", (function() {
				return R
			})), i.d(t, "F", (function() {
				return F
			})), i.d(t, "G", (function() {
				return N
			})), i.d(t, "H", (function() {
				return C
			})), i.d(t, "w", (function() {
				return j
			})), i.d(t, "h", (function() {
				return A
			})), i.d(t, "f", (function() {
				return x
			})), i.d(t, "m", (function() {
				return D
			})), i.d(t, "l", (function() {
				return P
			})), i.d(t, "u", (function() {
				return L
			}));
			const n = "ampcid",
				r = "category",
				s = "category_name",
				o = "draft",
				d = "f",
				a = "include_over_18",
				l = "is_multi",
				u = "moderator",
				c = "action",
				_ = "newUser",
				m = "showOnboarding",
				p = "q",
				h = "connected_account",
				f = "ref",
				b = "related",
				g = "restrict_sr",
				w = "sr_nsfw",
				v = "sort",
				y = "t",
				E = "ts",
				S = "type",
				T = "geo_filter",
				O = "verified",
				I = "verifiedEmail",
				R = "source",
				F = "v",
				N = "v2",
				C = "show_source",
				j = "signup_survey",
				A = "force_seo",
				x = "feature",
				D = ["ad", "adHash", "clickUrl", y, x],
				P = ["after", "before"],
				L = ["ad", a, p, g, v, y, S, x, l, r, s, R, w]
		},
		"./src/reddit/constants/postCollection.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			}));
			const n = 160,
				r = 120,
				s = 50
		},
		"./src/reddit/constants/postLayout.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return n
			})), i.d(t, "d", (function() {
				return r
			})), i.d(t, "h", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "f", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "a", (function() {
				return _
			}));
			var n, r, s = i("./node_modules/fbt/lib/FbtPublic.js");
			! function(e) {
				e.Large = "LARGE", e.Medium = "MEDIUM", e.Classic = "CLASSIC", e.Compact = "COMPACT", e.Search = "SEARCH"
			}(n || (n = {})),
			function(e) {
				e.Card = "card", e.Classic = "classic", e.Compact = "compact", e.Search = "search"
			}(r || (r = {}));
			const o = {
					[r.Card]: () => s.fbt._("card", null, {
						hk: "3KqkC6"
					}),
					[r.Classic]: () => s.fbt._("classic", null, {
						hk: "2o05fy"
					}),
					[r.Compact]: () => s.fbt._("compact", null, {
						hk: "3tWjnC"
					}),
					[r.Search]: () => s.fbt._("search", null, {
						hk: "1np8Uw"
					})
				},
				d = e => {
					return (0, o[e])()
				},
				a = {
					[n.Large]: r.Card,
					[n.Medium]: r.Card,
					[n.Classic]: r.Classic,
					[n.Compact]: r.Compact,
					[n.Search]: r.Search
				},
				l = {
					[r.Card]: n.Large,
					[r.Classic]: n.Classic,
					[r.Compact]: n.Compact,
					[r.Search]: n.Search
				},
				u = 8,
				c = {
					[r.Card]: u,
					[r.Classic]: 16,
					[r.Compact]: 25,
					[r.Search]: 8
				},
				_ = 25
		},
		"./src/reddit/constants/posts.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			}));
			const n = {
					SUBREDDIT: "subreddit",
					PROFILE: "profile"
				},
				r = {
					r: n.SUBREDDIT,
					user: n.PROFILE
				},
				s = 5
		},
		"./src/reddit/constants/preferences.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			}));
			const n = "rpanDuDismissalTime",
				r = "showRpanDu",
				s = "topContentDismissalTime",
				o = "topContentTimesDismissed",
				d = [...["openPostInNewTab", "rememberCommunitySort", "sort", "stylesEnabled", "useMarkdown", "layout", "rememberCommunityLayout", "hasSeenCustomizeFlyout", "reduceAnimationsFromAwards", n, r, s, o, "surveyLastSeenTime"], "activityRelevantAds", "countryCode", "badCommentAutocollapse", "thirdPartyDataPersonalizedAds", "thirdPartySiteDataPersonalizedAds", "thirdPartyPersonalizedAds", "thirdPartySiteDataPersonalizedContent", "showLocationBasedRecommendations"]
		},
		"./src/reddit/constants/profiles.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = {
				access: !0,
				config: !0,
				flair: !0,
				mail: !0,
				posts: !0,
				wiki: !0,
				chatConfig: !0,
				chatOperator: !0,
				all: !0
			}
		},
		"./src/reddit/constants/theme.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			}));
			const n = {
					REDDIT: "REDDIT",
					NIGHT: "NIGHT"
				},
				r = n.REDDIT
		},
		"./src/reddit/constants/things.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = "t1_",
				r = "t3_"
		},
		"./src/reddit/constants/thumbnails.ts": function(e, t, i) {
			"use strict";
			var n;
			! function(e) {
				e.NSFW = "nsfw", e.SELF = "self", e.IMAGE = "image", e.DEFAULT = "default", e.SPOILER = "spoiler"
			}(n || (n = {})), t.a = n
		},
		"./src/reddit/constants/topic.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/reddit/constants/listings.ts");
			const r = e => `${n.c[n.b.Topic]}${e.toLowerCase()}/`
		},
		"./src/reddit/constants/tracking.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}));
			const n = {
					CLICK: "click",
					CLOSE: "close",
					COMPLETE: "complete",
					DESELECT: "deselect",
					DISABLE: "disable",
					DISMISS: "dismiss",
					DRAG: "drag",
					ENABLE: "enable",
					REJECT: "reject",
					SELECT: "select",
					SKIP: "skip",
					START: "start",
					STOP: "stop",
					SUBMIT: "submit",
					VIEW: "view",
					UNDO: "undo"
				},
				r = {
					POST: "post",
					SCREEN: "screen"
				},
				s = "media-element"
		},
		"./src/reddit/constants/video.ts": function(e, t, i) {
			"use strict";
			i.d(t, "m", (function() {
				return n
			})), i.d(t, "n", (function() {
				return r
			})), i.d(t, "j", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			})), i.d(t, "k", (function() {
				return c
			})), i.d(t, "g", (function() {
				return _
			})), i.d(t, "h", (function() {
				return m
			})), i.d(t, "i", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "l", (function() {
				return f
			}));
			const n = 250,
				r = 500,
				s = 10,
				o = 25,
				d = 50,
				a = 75,
				l = 95,
				u = 100,
				c = [o, d, a, l, u],
				_ = 2,
				m = 3,
				p = 5,
				h = 10,
				f = [_, m, p, h]
		},
		"./src/reddit/constants/wiki.ts": function(e, t, i) {
			"use strict";
			i.d(t, "m", (function() {
				return n
			})), i.d(t, "i", (function() {
				return r
			})), i.d(t, "j", (function() {
				return s
			})), i.d(t, "h", (function() {
				return o
			})), i.d(t, "k", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "l", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "c", (function() {
				return h
			}));
			var n;
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			! function(e) {
				e.Create = "create", e.Edit = "edit", e.Revisions = "revisions", e.Settings = "settings"
			}(n || (n = {}));
			const r = "index",
				s = "pages",
				o = "config/automoderator",
				d = "config/post_removal_message",
				a = "reddit.com",
				l = ["config/description", "config/sidebar", "config/stylesheet", "config/submit_text"],
				u = "fromWikiEditButton",
				c = 256,
				_ = 128,
				m = new Set(["edit", "revisions", "settings", "discussions", "revisions", "pages", "create"]),
				p = new Set(["reddit", "config", "special"]),
				h = 3
		},
		"./src/reddit/contexts/PageLayer/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "u", (function() {
				return a
			})), i.d(t, "fb", (function() {
				return l
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/react/index.js"),
				r = i.n(n),
				s = i("./src/reddit/contexts/PageLayer/selectors.ts");
			i.d(t, "b", (function() {
				return s.a
			})), i.d(t, "c", (function() {
				return s.b
			})), i.d(t, "d", (function() {
				return s.d
			})), i.d(t, "e", (function() {
				return s.e
			})), i.d(t, "f", (function() {
				return s.g
			})), i.d(t, "g", (function() {
				return s.h
			})), i.d(t, "h", (function() {
				return s.i
			})), i.d(t, "i", (function() {
				return s.j
			})), i.d(t, "j", (function() {
				return s.k
			})), i.d(t, "k", (function() {
				return s.l
			})), i.d(t, "l", (function() {
				return s.m
			})), i.d(t, "m", (function() {
				return s.n
			})), i.d(t, "n", (function() {
				return s.o
			})), i.d(t, "o", (function() {
				return s.p
			})), i.d(t, "p", (function() {
				return s.q
			})), i.d(t, "q", (function() {
				return s.r
			})), i.d(t, "r", (function() {
				return s.s
			})), i.d(t, "s", (function() {
				return s.t
			})), i.d(t, "t", (function() {
				return s.u
			})), i.d(t, "v", (function() {
				return s.v
			})), i.d(t, "w", (function() {
				return s.w
			})), i.d(t, "x", (function() {
				return s.x
			})), i.d(t, "y", (function() {
				return s.y
			})), i.d(t, "z", (function() {
				return s.z
			})), i.d(t, "A", (function() {
				return s.A
			})), i.d(t, "B", (function() {
				return s.B
			})), i.d(t, "C", (function() {
				return s.C
			})), i.d(t, "D", (function() {
				return s.D
			})), i.d(t, "E", (function() {
				return s.E
			})), i.d(t, "F", (function() {
				return s.F
			})), i.d(t, "G", (function() {
				return s.G
			})), i.d(t, "H", (function() {
				return s.H
			})), i.d(t, "I", (function() {
				return s.I
			})), i.d(t, "J", (function() {
				return s.J
			})), i.d(t, "K", (function() {
				return s.K
			})), i.d(t, "L", (function() {
				return s.L
			})), i.d(t, "M", (function() {
				return s.M
			})), i.d(t, "N", (function() {
				return s.N
			})), i.d(t, "O", (function() {
				return s.O
			})), i.d(t, "P", (function() {
				return s.P
			})), i.d(t, "Q", (function() {
				return s.Q
			})), i.d(t, "R", (function() {
				return s.R
			})), i.d(t, "S", (function() {
				return s.S
			})), i.d(t, "T", (function() {
				return s.T
			})), i.d(t, "U", (function() {
				return s.U
			})), i.d(t, "V", (function() {
				return s.V
			})), i.d(t, "W", (function() {
				return s.W
			})), i.d(t, "X", (function() {
				return s.X
			})), i.d(t, "Y", (function() {
				return s.Y
			})), i.d(t, "Z", (function() {
				return s.Z
			})), i.d(t, "ab", (function() {
				return s.ab
			})), i.d(t, "bb", (function() {
				return s.bb
			})), i.d(t, "cb", (function() {
				return s.cb
			})), i.d(t, "db", (function() {
				return s.db
			})), i.d(t, "eb", (function() {
				return s.eb
			}));
			const o = r.a.createContext(null);

			function d(e, t) {
				return void 0 !== t ? Object.keys(t).reduce((i, n) => (i[n] = t[n](e), i), {}) : {
					pageLayer: e
				}
			}

			function a(e) {
				return t => {
					var i;
					return (i = class extends r.a.Component {
						constructor() {
							super(...arguments), this.renderChildren = i => {
								const n = {
									...this.props,
									...d(i, e)
								};
								return r.a.createElement(t, n)
							}
						}
						render() {
							return r.a.createElement(o.Consumer, null, this.renderChildren)
						}
					}).displayName = `WithPageLayer(${t.displayName||t.name})`, i
				}
			}

			function l() {
				return Object(n.useContext)(o)
			}
		},
		"./src/reddit/contexts/PageLayer/selectors.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return k
			})), i.d(t, "A", (function() {
				return B
			})), i.d(t, "H", (function() {
				return M
			})), i.d(t, "y", (function() {
				return U
			})), i.d(t, "Q", (function() {
				return G
			})), i.d(t, "S", (function() {
				return q
			})), i.d(t, "z", (function() {
				return V
			})), i.d(t, "F", (function() {
				return H
			})), i.d(t, "D", (function() {
				return W
			})), i.d(t, "Y", (function() {
				return z
			})), i.d(t, "x", (function() {
				return K
			})), i.d(t, "w", (function() {
				return Y
			})), i.d(t, "B", (function() {
				return $
			})), i.d(t, "P", (function() {
				return Q
			})), i.d(t, "C", (function() {
				return J
			})), i.d(t, "K", (function() {
				return X
			})), i.d(t, "G", (function() {
				return Z
			})), i.d(t, "L", (function() {
				return te
			})), i.d(t, "I", (function() {
				return ie
			})), i.d(t, "N", (function() {
				return ne
			})), i.d(t, "M", (function() {
				return re
			})), i.d(t, "d", (function() {
				return se
			})), i.d(t, "b", (function() {
				return oe
			})), i.d(t, "u", (function() {
				return de
			})), i.d(t, "e", (function() {
				return ae
			})), i.d(t, "p", (function() {
				return le
			})), i.d(t, "s", (function() {
				return ue
			})), i.d(t, "o", (function() {
				return ce
			})), i.d(t, "q", (function() {
				return _e
			})), i.d(t, "r", (function() {
				return me
			})), i.d(t, "J", (function() {
				return pe
			})), i.d(t, "j", (function() {
				return he
			})), i.d(t, "k", (function() {
				return fe
			})), i.d(t, "l", (function() {
				return be
			})), i.d(t, "m", (function() {
				return ge
			})), i.d(t, "E", (function() {
				return we
			})), i.d(t, "i", (function() {
				return ve
			})), i.d(t, "U", (function() {
				return ye
			})), i.d(t, "W", (function() {
				return Ee
			})), i.d(t, "Z", (function() {
				return Se
			})), i.d(t, "eb", (function() {
				return Te
			})), i.d(t, "R", (function() {
				return Oe
			})), i.d(t, "T", (function() {
				return Ie
			})), i.d(t, "t", (function() {
				return Re
			})), i.d(t, "V", (function() {
				return Fe
			})), i.d(t, "c", (function() {
				return Ne
			})), i.d(t, "v", (function() {
				return Ce
			})), i.d(t, "X", (function() {
				return je
			})), i.d(t, "h", (function() {
				return Ae
			})), i.d(t, "n", (function() {
				return xe
			})), i.d(t, "cb", (function() {
				return De
			})), i.d(t, "f", (function() {
				return Pe
			})), i.d(t, "O", (function() {
				return Le
			})), i.d(t, "bb", (function() {
				return ke
			})), i.d(t, "ab", (function() {
				return Be
			})), i.d(t, "db", (function() {
				return Me
			})), i.d(t, "a", (function() {
				return Ue
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/isEmpty.js"),
				r = i.n(n),
				s = i("./node_modules/reselect/es/index.js"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/isFakeSubreddit/index.ts"),
				a = i("./src/lib/objectSelector/index.ts"),
				l = i("./src/lib/search/index.ts"),
				u = i("./src/reddit/constants/categories.tsx"),
				c = i("./src/reddit/constants/covid.ts"),
				_ = i("./src/reddit/constants/page.ts"),
				m = i("./src/reddit/constants/parameters.ts"),
				p = i("./src/reddit/constants/postLayout.ts"),
				h = i("./src/reddit/constants/posts.ts"),
				f = i("./src/reddit/constants/profiles.ts"),
				b = i("./src/reddit/helpers/flair.ts"),
				g = i("./src/lib/listingSort/index.ts"),
				w = i("./src/lib/makeListingKey/index.ts"),
				v = i("./src/reddit/helpers/getSubredditSortForListingKeyCreation/index.ts"),
				y = i("./src/reddit/selectors/experiments/bestSortPopular.ts"),
				E = i("./src/reddit/selectors/frontpage.ts");
			var S = (e, t) => {
					const {
						routeMatch: i,
						urlParams: n,
						queryParams: r
					} = t;
					if (!i) return;
					const s = (e => {
						const {
							routeMatch: t,
							urlParams: i,
							queryParams: n
						} = e;
						if (!t) return;
						let r = "";
						switch (t.route.meta.name) {
							case o.Nb.PROFILE_COMMENTS:
							case o.Nb.PROFILE_POSTS:
								r = n.sort;
								break;
							default:
								r = i.sort
						}
						return r || void 0
					})(t);
					switch (i.route.meta.name) {
						case o.Nb.INDEX:
						case o.Nb.LISTING:
							return s || Object(E.a)(e);
						case o.Nb.SUBREDDIT: {
							const t = n,
								{
									subredditName: i
								} = t,
								s = Object(v.a)(t, e),
								d = Object(w.a)(i, s, r),
								a = e.listings.postOrder.listingSort[d];
							if (a) {
								const {
									sort: e
								} = Object(g.d)(a.sort);
								return e
							}
							return i === _.g && Object(y.a)(e) ? o.vb : o.X
						}
						default:
							return s || o.X
					}
				},
				T = i("./src/reddit/models/Flair/index.ts"),
				O = i("./src/reddit/models/Image/index.tsx"),
				I = i("./src/reddit/routes/subreddit/index.ts"),
				R = i("./src/reddit/selectors/category.ts"),
				F = i("./src/reddit/selectors/countrySites.ts"),
				N = i("./src/reddit/selectors/modModeEnabled.ts"),
				C = i("./src/reddit/selectors/multireddit.ts"),
				j = i("./src/reddit/selectors/postCollection.ts"),
				A = i("./src/reddit/selectors/postDraft.ts"),
				x = i("./src/reddit/selectors/profile.ts"),
				D = i("./src/reddit/selectors/searchResults.ts"),
				P = i("./src/reddit/selectors/subreddit.ts"),
				L = i("./src/reddit/selectors/user.ts");
			const k = e => e ? e.url : "",
				B = e => !!(e && e.routeMatch && o.s.FRONTPAGE.includes(e.routeMatch.route.chunk)),
				M = e => e && e.routeMatch && [o.s.FRONTPAGE, o.s.MULTIREDDIT, o.s.SUBREDDIT].includes(e.routeMatch.route.chunk),
				U = e => !!(e && e.routeMatch && o.s.INTERNATIONAL_SITE_PAGE.includes(e.routeMatch.route.chunk)),
				G = e => !(!e || !e.meta || e.meta.name !== o.Nb.TOPIC),
				q = (e, {
					pageLayer: t
				}) => {
					if (!t || !M(t) || !t.routeMatch) return null;
					const {
						match: i
					} = t.routeMatch, n = i.params.subredditName;
					if (!n) return null;
					const r = Object(P.x)(e, {
						subredditName: n
					});
					return r ? r.name : n
				},
				V = (e, {
					pageLayer: t
				}) => {
					const i = Object(F.b)(e),
						n = q(e, {
							pageLayer: t
						});
					return !!n && Object(d.a)(n, {
						countryCode: null == i ? void 0 : i.countryCode,
						languageCode: null == i ? void 0 : i.languageCode
					})
				},
				H = (e, {
					pageLayer: t
				}) => {
					const i = q(e, {
							pageLayer: t
						}),
						n = B(t),
						r = Object(L.O)(e),
						s = Object(F.b)(e),
						o = !!i && Object(d.c)(i, {
							countryCode: s.countryCode,
							languageCode: s.languageCode
						});
					return i === _.g || o || !r && n
				},
				W = (e, {
					pageLayer: t
				}) => {
					const i = q(e, {
						pageLayer: t
					});
					return !(i && !Object(d.a)(i))
				},
				z = e => {
					if (!e || !e.routeMatch) return;
					const {
						route: t
					} = e.routeMatch;
					return t.meta.name
				},
				K = e => !(!e || !e.meta || e.meta.name !== o.Nb.COMMENTS),
				Y = e => !!(e && e.meta && e.meta.name === o.Nb.COMMENTS && e.urlParams.partialCommentId),
				$ = e => !(!e || !e.meta || e.meta.name !== o.Nb.SEARCH_RESULTS || e.urlParams.subredditName),
				Q = e => {
					var t;
					return Boolean((null === (t = null == e ? void 0 : e.meta) || void 0 === t ? void 0 : t.name) === o.Nb.SEARCH_RESULTS && e.urlParams.subredditName)
				},
				J = e => {
					var t;
					return Boolean((null === (t = null == e ? void 0 : e.meta) || void 0 === t ? void 0 : t.name) === o.Nb.SEARCH_RESULTS && e.urlParams.multiredditName)
				},
				X = e => !(!e || !e.meta || e.meta.name !== o.Nb.COMMENTS || h.b[e.urlParams.routePrefix] !== h.a.PROFILE),
				Z = e => !(!e || !e.meta || e.meta.name !== o.Nb.POST_CREATION),
				ee = e => !(!e || !e.meta || e.meta.name !== o.Nb.POST_DRAFT),
				te = e => !!(e && e.meta && o.Bb.has(e.meta.name)),
				ie = e => !!(e && e.meta && o.zb.has(e.meta.name)),
				ne = e => !!(e && e.meta && o.Xb.has(e.meta.name)),
				re = e => !(!e || !e.meta || o.Nb.SETTINGS !== e.meta.name),
				se = e => {
					const t = e && e.urlParams;
					if (!t) return;
					const {
						multiredditName: i,
						username: n
					} = t;
					return {
						multiredditName: i,
						username: n
					}
				},
				oe = e => {
					const t = e && e.urlParams;
					return t ? t.categoryName : void 0
				},
				de = e => {
					const t = e && e.urlParams;
					return t ? t.topicSlug : void 0
				},
				ae = (e, {
					pageLayer: t
				}) => {
					const i = se(t);
					if (!i) return null;
					const {
						multiredditName: n,
						username: r
					} = i;
					return n ? Object(C.d)(e, {
						multiredditName: n,
						username: r
					}) : null
				},
				le = (e, {
					pageLayer: t
				}) => {
					if (ee(t)) {
						const i = Ce(t);
						return Object(A.e)(e, {
							draftId: i
						})
					}
					const i = t && t.urlParams;
					return i ? i.subredditName : void 0
				},
				ue = (e, {
					pageLayer: t
				}) => {
					if (t && t.urlParams && h.b[t.urlParams.routePrefix] === h.a.PROFILE) return null;
					const i = le(e, {
						pageLayer: t
					});
					return i ? Object(P.x)(e, {
						subredditName: i
					}) : null
				},
				ce = (e, {
					pageLayer: t
				}) => {
					const i = le(e, {
						pageLayer: t
					});
					return i ? Object(P.D)(e, i) : null
				},
				_e = (e, t) => ue(e, t) || be(e, t),
				me = (e, {
					pageLayer: t
				}) => {
					const i = ((e, {
						pageLayer: t
					}) => {
						const i = ce(e, {
							pageLayer: t
						});
						return i ? e.postFlair[i] : null
					})(e, {
						pageLayer: t
					});
					return i ? i.displaySettings.position : T.b.Right
				},
				pe = e => !!(e && e.routeMatch && o.Cb.has(e.routeMatch.route.meta.name)) || X(e) || (e => !(!e || !e.meta || e.meta.name !== o.Nb.COLLECTION_COMMENTS || h.b[e.urlParams.routePrefix] !== h.a.PROFILE))(e),
				he = e => {
					const t = e && e.urlParams;
					return t ? t.profileName : void 0
				},
				fe = e => {
					if (e && e.routeMatch && z(e) === o.Nb.PROFILE_PRIVATE) return e.routeMatch.match.params.listingType
				},
				be = (e, {
					pageLayer: t
				}) => {
					const i = X(t) ? le(e, {
						pageLayer: t
					}) : he(t);
					return i ? Object(x.j)(e, {
						profileName: i
					}) : null
				},
				ge = (e, {
					pageLayer: t
				}) => {
					const i = X(t) ? le(e, {
						pageLayer: t
					}) : he(t);
					return i ? Object(L.wb)(e, {
						userName: i
					}) : null
				},
				we = (e, {
					pageLayer: t
				}) => {
					const i = be(e, {
							pageLayer: t
						}),
						n = Object(L.k)(e),
						r = n && (n.username ? n.username : n.displayText);
					return !(!r || !i || r !== i.name)
				},
				ve = (e, {
					pageLayer: t
				}) => {
					if (we(e, {
							pageLayer: t
						})) return f.a
				},
				ye = (e, {
					pageLayer: t
				}) => {
					if (!t) return;
					const {
						key: i
					} = t;
					return e.platform.referrers[i]
				},
				Ee = e => e ? e.queryParams : {},
				Se = e => {
					const t = z(e);
					if (e && t && t === o.Nb.SEARCH_RESULTS) return e.queryParams[m.c] ? Object(l.a)(e.queryParams[m.c]) : Object(l.a)(e.queryParams[m.q])
				},
				Te = e => e ? e.url : "",
				Oe = (e, {
					pageLayer: t
				}) => {
					let i;
					if (void 0 !== (i = void 0 === t ? e.platform.currentPage : t)) {
						const n = z(i);
						if (n === o.Nb.POST_CREATION) return p.g.Large;
						if (n === o.Nb.SUBREDDIT_WIKI) return p.g.Classic;
						if (n === o.Nb.EXPLORE) return p.g.Classic;
						if (n === o.Nb.TOPIC) return e.user.prefs.layout ? p.b[e.user.prefs.layout] : p.g.Large;
						if (n === o.Nb.PROFILE_SNOOBUILDER) return p.g.Classic;
						if (n === o.Nb.SUBREDDIT && e.user.prefs.rememberCommunityLayout) {
							const i = ((e, {
								pageLayer: t
							}) => {
								const i = ce(e, {
									pageLayer: t
								});
								if (i) {
									const t = e.user.prefs.subreddit[i];
									if (t && t.layout) return t.layout
								}
								return null
							})(e, {
								pageLayer: t
							});
							if (i) return p.b[i]
						}
						if (o.Cb.has(n)) {
							if (n === o.Nb.PROFILE_OVERVIEW) return p.g.Large;
							return Ie(e, {
								pageLayer: t
							}) ? n === o.Nb.PROFILE_POSTS || n === o.Nb.PROFILE_PRIVATE ? p.g.Classic : p.g.Compact : p.g.Classic
						}
					}
					return e.user.prefs.layout ? p.b[e.user.prefs.layout] : p.g.Classic
				},
				Ie = (e, {
					pageLayer: t
				}) => !!Object(N.a)(e) || !(!t || !t.meta) && t.meta.name === o.Nb.MODQUEUE_PAGES,
				Re = (e, {
					pageLayer: t
				}) => {
					const i = ce(e, {
						pageLayer: t
					});
					if (!i) return !0;
					const n = e.subreddits.about[i];
					return !n || n.showMedia
				},
				Fe = Object(a.a)((e, {
					pageLayer: t,
					postId: i,
					flairStyleTemplateDraft: n
				}) => {
					const r = e.posts.models[i];
					if (!r) return;
					const s = r.flair.find(e => Object(b.q)(e.type));
					if (!s || void 0 === s.templateId) return;
					const d = ce(e, {
						pageLayer: t
					});
					if (!d || d !== r.belongsTo.id) return;
					if (!e.structuredStyles.models[d]) return;
					const a = e.structuredStyles.flairTemplate,
						l = !!n;
					if (t && t.meta && t.meta.name === o.Nb.MODERATION_PAGES && !n) return;
					const u = Object(L.nb)(e, {
						subredditId: d
					});
					if (!l && u) return;
					let c = n || a.models[s.templateId];
					if (!c) return;
					const _ = !l && Object(L.bb)(e),
						m = t && t.locationState && t.locationState.isOverlay;
					if (_ || m) {
						if (!c.postPlaceholderImage) return;
						c = {
							postPlaceholderImage: c.postPlaceholderImage
						}
					}
					return Object.keys(c).filter(e => c[e] !== O.c).reduce((e, t) => (e[t] = c[t], e), {})
				}),
				Ne = (e, {
					pageLayer: t
				}) => t ? S(e, t) : void 0,
				Ce = e => {
					if (e) return ee(e) ? e.urlParams.draftId : e.queryParams.draft
				},
				je = e => e && e.queryParams || {},
				Ae = (e, {
					pageLayer: t
				}) => {
					const i = (e => e ? e.queryParams.collection : void 0)(t);
					return i ? Object(j.q)(e, {
						collectionId: i
					}) : void 0
				},
				xe = Object(s.a)(le, R.i, e => e.subreddits.models, e => e.subreddits.byCategory, (e, t, i, n) => {
					if (!e) return;
					const s = Object.keys(t).find(t => {
						const s = n[t];
						if (r()(s)) return !1;
						const o = s.map(e => i[e].name);
						return !r()(o) && Object(u.b)(o) === e
					});
					return s ? t[s] : void 0
				}),
				De = e => {
					const t = Se(e);
					return !!t && !!c.b.filter(e => t.toLowerCase().includes(e)).length
				},
				Pe = (e, {
					pageLayer: t
				}) => {
					if (t && t.title) return t.title; {
						const t = e.platform.currentPage,
							i = e.platform.metas;
						if (t && i) {
							const e = i[t.key];
							if (e) return e.title
						}
						return null
					}
				},
				Le = e => {
					var t, i;
					return null !== (i = (null === (t = null == e ? void 0 : e.routeMatch) || void 0 === t ? void 0 : t.match.path) === I.a) && void 0 !== i && i
				},
				ke = e => {
					var t;
					return (null === (t = null == e ? void 0 : e.meta) || void 0 === t ? void 0 : t.name) !== o.Nb.META_COMMUNITY_POINTS_LEARN_MORE_PAGE
				},
				Be = (e, t) => Object(s.a)((e, {
					pageLayer: t
				}) => Q(t), ue, D.s, (e, t, i) => {
					const n = e || Boolean(t);
					return Boolean(n && i)
				})(e, t),
				Me = (e, t, i) => {
					return !pe(t) && Object(P.r)(e, i)
				},
				Ue = (e, t, i) => {
					return !pe(t) && Object(P.e)(e, i)
				}
		},
		"./src/reddit/endpoints/flair/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return l
			})), i.d(t, "h", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			})), i.d(t, "l", (function() {
				return _
			})), i.d(t, "k", (function() {
				return m
			})), i.d(t, "j", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "b", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "a", (function() {
				return w
			})), i.d(t, "c", (function() {
				return v
			}));
			var n = i("./src/config.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/makeApiRequest/index.ts"),
				o = i("./src/lib/omitHeaders/index.ts"),
				d = i("./src/reddit/constants/headers.ts"),
				a = i("./src/reddit/models/RichTextJson/addRTJParam.ts");
			const l = (e, t, i, n, a, l) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/r/${i}/api/selectflair`,
					method: r.jb.POST,
					data: {
						api_type: "json",
						flair_template_id: n,
						name: t,
						text: a,
						css_class: l
					}
				}),
				u = (e, t, i, n) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/selectflair`,
					method: r.jb.POST,
					data: {
						api_type: "json",
						flair_template_id: i,
						link: t,
						text: n
					}
				}),
				c = (e, t, i) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/r/${i}/api/setflairenabled`,
					method: r.jb.POST,
					data: {
						api_type: "json",
						flair_enabled: t
					}
				}),
				_ = async (e, t, i) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/enable_sr_user_flair.json`,
					method: r.jb.POST,
					data: {
						subreddit: t,
						enabled: i
					}
				}), m = async (e, t, i) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/enable_sr_link_flair.json`,
					method: r.jb.POST,
					data: {
						subreddit: t,
						enabled: i
					}
				}), p = async (e, t, i, n) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/enable_sr_user_flair_self_assign.json`,
					method: r.jb.POST,
					data: {
						subreddit: n,
						flair_type: i,
						enabled: t
					}
				}), h = async (e, t, i, n) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/flairtemplate_v2`,
					method: r.jb.POST,
					data: {
						allowable_content: t.allowableContent,
						css_class: t.cssClass,
						flair_template_id: t.id,
						text: t.text,
						text_editable: t.textEditable,
						flair_type: n,
						text_color: t.textColor,
						background_color: t.backgroundColor,
						max_emojis: t.maxEmojis,
						mod_only: t.modOnly,
						r: i
					}
				}), f = async (e, t, i) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/deleteflairtemplate`,
					method: r.jb.POST,
					data: {
						flair_template_id: t,
						r: i
					}
				}), b = async (e, t, i, n) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/api/v1/${t}/flair_template_order/${i}`,
					method: r.jb.PATCH,
					type: "json",
					data: n
				}), g = async (e, t) => Object(s.a)(e, {
					endpoint: `${n.a.gatewayUrl}/desktopapi/v1/subreddits/${t}/userFlair`,
					method: r.jb.GET,
					headers: {
						[d.a]: d.a
					}
				}), w = async (e, t, i) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: `${e.apiUrl}/r/${i}/api/deleteflair`,
					method: r.jb.POST,
					data: {
						api_type: "json",
						name: t
					}
				}), v = async (e, t) => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: Object(a.a)(`${e.apiUrl}/api/top_flair_in_subreddit.json?subreddit=${t}`),
					method: r.jb.GET
				})
		},
		"./src/reddit/endpoints/moderator/snoozableReport.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/lib/makeGqlRequest/index.ts"),
				r = i("./src/redditGQL/operations/UpdateReportState.json");
			const s = (e, t) => Object(n.a)(e, {
				...r,
				variables: t
			})
		},
		"./src/reddit/endpoints/moderator/structuredStyles.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "b", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeApiRequest/index.ts"),
				s = i("./src/lib/makeGqlRequest/index.ts"),
				o = i("./src/lib/omitHeaders/index.ts"),
				d = (i("./src/lib/uploadToS3/index.ts"), i("./src/redditGQL/operations/SubredditPostFlairStyleTemplates.json")),
				a = i("./src/redditGQL/operations/SubredditStyles.json"),
				l = i("./src/reddit/constants/headers.ts");
			i("./src/reddit/helpers/media/index.ts");
			const u = async (e, t, i) => Object(r.a)(Object(o.a)(e, [l.a]), {
				endpoint: `${e.apiUrl}/api/v1/structured_styles/${t}`,
				method: n.jb.GET,
				data: {
					progressive_images: i
				}
			}), c = async (e, t, i) => Object(r.a)(Object(o.a)(e, [l.a]), {
				endpoint: `${e.apiUrl}/api/v1/structured_styles/${t}`,
				method: n.jb.PATCH,
				data: i
			}), _ = async (e, t) => Object(r.a)(Object(o.a)(e, [l.a]), {
				endpoint: `${e.apiUrl}/api/v1/structured_styles/${t}`,
				method: n.jb.DELETE
			}), m = async (e, t, i, s, d) => Object(r.a)(Object(o.a)(e, [l.a]), {
				endpoint: `${e.apiUrl}/api/v1/style_asset_upload_s3/${t}`,
				method: n.jb.POST,
				data: {
					filepath: i,
					imagetype: s,
					mimetype: d
				}
			}), p = (e, t) => Object(s.a)(e, {
				...a,
				variables: {
					subredditName: t
				}
			}), h = (e, t, i) => Object(s.a)(e, {
				...d,
				variables: {
					subredditName: t,
					templateIds: i
				}
			})
		},
		"./src/reddit/endpoints/page/commentsPage.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/config.ts"),
				r = i("./src/lib/addQueryParams/index.ts"),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/makeApiRequest/index.ts"),
				d = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				a = i("./src/reddit/models/Comment/addProfileImgParam.ts"),
				l = i("./src/reddit/models/RichTextJson/addEmotesAsImagesParam.ts"),
				u = i("./src/reddit/models/RichTextJson/addRTJParam.ts"),
				c = i("./src/lib/initializeClient/installReducer.ts"),
				_ = i("./src/reddit/reducers/features/comments/index.ts");
			Object(c.a)({
				features: {
					comments: _.a
				}
			}), t.a = (e, t, i, c, _, m) => {
				let p = i ? `${n.a.gatewayUrl}/desktopapi/v1/postcomments/${t}/${i}` : `${n.a.gatewayUrl}/desktopapi/v1/postcomments/${t}`;
				return p = Object(d.a)(Object(l.a)(Object(u.a)(p))), _ && (p = Object(a.a)(p)), m && (p = Object(r.a)(p, {
					blend_new_comments: "1"
				})), Object(o.a)(e, {
					data: c,
					endpoint: p,
					method: s.jb.GET,
					traceRequestName: "get_comments_page"
				})
			}
		},
		"./src/reddit/endpoints/page/search/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return L
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeGqlRequest/index.ts"),
				s = i("./src/reddit/constants/history.ts"),
				o = i("./src/reddit/helpers/history/index.ts"),
				d = i("./src/redditGQL/operations/GeneralSearch.json"),
				a = i("./src/telemetry/models/App.ts"),
				l = i("./node_modules/lodash/isEmpty.js"),
				u = i.n(l),
				c = i("./src/reddit/helpers/graphql/normalizeCommentFromGql/index.ts"),
				_ = i("./src/reddit/helpers/graphql/normalizeFlairFromGql/index.ts"),
				m = i("./src/reddit/helpers/graphql/normalizePostFlairFromGql/index.ts"),
				p = i("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts");
			const h = e => {
				var t, i, n;
				return null !== (n = e.profile && {
					[e.profile.id]: {
						publicDescription: null !== (t = e.profile.publicDescriptionText) && void 0 !== t ? t : "",
						userIsSubscriber: e.profile.isSubscribed,
						karma: null !== (i = e.karma) && void 0 !== i ? i : void 0
					}
				}) && void 0 !== n ? n : {}
			};
			var f = i("./src/reddit/helpers/graphql/normalizeProfileFromGql/index.ts"),
				b = i("./src/reddit/helpers/graphql/normalizeSubredditAboutFromGql/index.ts"),
				g = i("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts"),
				w = i("./src/reddit/helpers/graphql/normalizeSubredditStylesFromGql/index.ts"),
				v = i("./src/reddit/helpers/graphql/normalizeSubredditWidgetsFromGql/index.ts"),
				y = i("./src/reddit/models/DiscoveryUnit/index.ts"),
				E = i("./src/reddit/models/FeedElement/index.ts"),
				S = i("./src/reddit/models/SearchDiscoveryUnit/index.ts"),
				T = i("./src/redditGQL/types.ts");
			const O = e => (null == e ? void 0 : e.__typename) === E.a.SubredditPost,
				I = {
					[T.w.PostSearchPromotedTrend]: S.b.PromotedTrendHero,
					[T.w.PostSearchTrending]: S.b.Hero
				},
				R = {
					[T.w.PostSearchPromotedTrend]: y.f,
					[T.w.PostSearchTrending]: y.l
				};

			function F(e, t, i, n) {
				const r = Object(_.a)(t)[0];
				n[i] ? n[i][e] = r : n[i] = {
					[e]: r
				}
			}
			const N = e => e && e.reduce((e, t) => "" === e ? e + t : e += `,${t}`, ""),
				C = {
					[n.Yb.Comments]: T.u.Comments,
					[n.Yb.Hot]: T.u.Hot,
					[n.Yb.New]: T.u.New,
					[n.Yb.Top]: T.u.Top,
					[n.Yb.Relevance]: T.u.Relevance
				},
				j = e => !u()(e);

			function A(e, t) {
				var i, r, s, o, d, a, l, u, _, y, N, C, A, D, P, L, k, B, M, U, G, q, V, H, W, z, K, Y, $, Q, J, X, Z, ee, te, ie, ne, re, se, oe, de, ae, le, ue, ce, _e;
				let me, pe = {},
					he = {},
					fe = {},
					be = [],
					ge = {},
					we = {},
					ve = [],
					ye = {},
					Ee = [],
					Se = {},
					Te = {},
					Oe = [],
					Ie = {},
					Re = {},
					Fe = {},
					Ne = [],
					Ce = {},
					je = {},
					Ae = {},
					xe = {
						authors: null,
						communities: null,
						listings: null,
						posts: null,
						comments: null
					},
					De = {},
					Pe = S.c.Default,
					Le = {
						authors: !e[n.bc.Users] && void 0,
						communities: !e[n.bc.Subreddits] && void 0,
						posts: !e[n.bc.Posts] && void 0,
						comments: !e[n.bc.Comments] && void 0
					},
					ke = {};
				if (j(t)) {
					const j = null !== (d = null === (o = null === (s = null === (r = null === (i = t.data) || void 0 === i ? void 0 : i.search) || void 0 === r ? void 0 : r.general) || void 0 === s ? void 0 : s.posts) || void 0 === o ? void 0 : o.edges) && void 0 !== d ? d : [],
						Be = null !== (y = null === (_ = null === (u = null === (l = null === (a = t.data) || void 0 === a ? void 0 : a.search) || void 0 === l ? void 0 : l.general) || void 0 === u ? void 0 : u.communities) || void 0 === _ ? void 0 : _.edges) && void 0 !== y ? y : [],
						Me = null !== (P = null === (D = null === (A = null === (C = null === (N = t.data) || void 0 === N ? void 0 : N.search) || void 0 === C ? void 0 : C.general) || void 0 === A ? void 0 : A.authors) || void 0 === D ? void 0 : D.edges) && void 0 !== P ? P : [],
						Ue = null !== (U = null === (M = null === (B = null === (k = null === (L = t.data) || void 0 === L ? void 0 : L.search) || void 0 === k ? void 0 : k.general) || void 0 === B ? void 0 : B.comments) || void 0 === M ? void 0 : M.edges) && void 0 !== U ? U : [],
						Ge = null === (H = null === (V = null === (q = null === (G = t.data.search) || void 0 === G ? void 0 : G.general) || void 0 === q ? void 0 : q.posts) || void 0 === V ? void 0 : V.feedMetadata) || void 0 === H ? void 0 : H.treatment,
						qe = null !== (z = null === (W = t.data) || void 0 === W ? void 0 : W.subredditsInfoByNames) && void 0 !== z ? z : [];
					[De, me] = function(e) {
						var t;
						let i, n = {};
						if (1 === e.length && "Subreddit" === (null === (t = e[0]) || void 0 === t ? void 0 : t.__typename)) {
							i = e[0];
							const t = Object(v.a)(i);
							n = {
								data: {
									style: Object(w.a)(i.styles),
									...t && {
										content: {
											widgets: t
										}
									},
									flairTemplate: {}
								}
							}
						}
						return [n, i]
					}(qe), Pe = Ge === T.w.PostSearchTrending || Ge === T.w.PostSearchPromotedTrend ? S.c.Trending : S.c.Default, [pe, be, ge, we, ve, fe, he] = function(e, t) {
						var i, n, r, s;
						const o = {},
							d = {},
							a = [],
							l = [],
							u = {},
							c = {},
							_ = {};
						if (e.length) {
							if (t) {
								const r = null === (n = null === (i = e[0]) || void 0 === i ? void 0 : i.node) || void 0 === n ? void 0 : n.id;
								r && (l.push(r), u[r] = {
									id: r,
									layout: {
										title: "Best post",
										viewTypeWeb: I[t]
									},
									name: R[t],
									postOrder: [r],
									type: S.a.Posts
								})
							}
							for (const t of e)
								if ((null === (r = null == t ? void 0 : t.node) || void 0 === r ? void 0 : r.id) && (o[t.node.id] = Object(p.f)(t.node), a.push(t.node.id), O(t.node))) {
									const e = t.node.subreddit;
									d[e.id] = Object(g.a)(e), c[e.id] = Object(m.a)(e);
									const i = t.node.authorFlair;
									"Redditor" === (null === (s = t.node.authorInfo) || void 0 === s ? void 0 : s.__typename) && i && F(t.node.authorInfo.name, i, e.id, _)
								}
						}
						return [o, a, d, u, l, c, _]
					}(j, Ge), [ye, Ee, Se] = function(e, t, i) {
						var n, r, s;
						const o = [],
							d = {};
						for (const a of e)(null === (n = null == a ? void 0 : a.node) || void 0 === n ? void 0 : n.id) && (t[a.node.id] = Object(g.a)(a.node), o.push({
							id: a.node.id,
							type: "subreddit"
						}), d[null === (r = null == a ? void 0 : a.node) || void 0 === r ? void 0 : r.id] = Object(b.a)(a.node)[null === (s = null == a ? void 0 : a.node) || void 0 === s ? void 0 : s.id]);
						return i && (t[i.id] = Object(g.a)(i), d[i.id] = Object(b.a)(i)[i.id]), [t, o, d]
					}(Be, ge, me), [Oe, Te, Ie] = function(e) {
						var t, i, n, r;
						const s = [],
							o = {},
							d = {};
						for (const a of e)(null === (t = null == a ? void 0 : a.node) || void 0 === t ? void 0 : t.profile) && (o[a.node.profile.id] = Object(f.a)(a.node.profile), s.push({
							id: a.node.profile.id,
							type: "profile"
						}), d[null === (i = null == a ? void 0 : a.node) || void 0 === i ? void 0 : i.profile.id] = h(a.node)[null === (r = null === (n = null == a ? void 0 : a.node) || void 0 === n ? void 0 : n.profile) || void 0 === r ? void 0 : r.id]);
						return [s, o, d]
					}(Me), [Ne, Re, je, Ae, Ce, Fe] = function(e) {
						var t, i, n;
						const r = {},
							s = [],
							o = {},
							d = {},
							a = {},
							l = {};
						if (e.length)
							for (const u of e)
								if ("Comment" === (null === (t = null == u ? void 0 : u.node) || void 0 === t ? void 0 : t.__typename)) {
									r[u.node.id] = Object(c.a)(u.node), s.push(u.node.id);
									const e = u.node.postInfo;
									if (e && (o[e.id] = Object(p.f)(e), (null == e ? void 0 : e.__typename) === E.a.SubredditPost)) {
										l[e.subreddit.id] = Object(g.a)(e.subreddit), d[e.subreddit.id] = Object(m.a)(e.subreddit);
										const t = e.authorFlair;
										"Redditor" === (null === (i = e.authorInfo) || void 0 === i ? void 0 : i.__typename) && t && F(e.authorInfo.name, t, e.subreddit.id, a);
										const r = u.node.authorFlair;
										"Redditor" === (null === (n = u.node.authorInfo) || void 0 === n ? void 0 : n.__typename) && r && F(u.node.authorInfo.name, r, e.subreddit.id, a)
									}
								} return [s, r, o, l, d, a]
					}(Ue), xe = {
						authors: x(null === ($ = null === (Y = null === (K = t.data.search) || void 0 === K ? void 0 : K.general) || void 0 === Y ? void 0 : Y.authors) || void 0 === $ ? void 0 : $.pageInfo),
						comments: x(null === (X = null === (J = null === (Q = t.data.search) || void 0 === Q ? void 0 : Q.general) || void 0 === J ? void 0 : J.comments) || void 0 === X ? void 0 : X.pageInfo),
						communities: x(null === (te = null === (ee = null === (Z = t.data.search) || void 0 === Z ? void 0 : Z.general) || void 0 === ee ? void 0 : ee.communities) || void 0 === te ? void 0 : te.pageInfo),
						posts: x(null === (re = null === (ne = null === (ie = t.data.search) || void 0 === ie ? void 0 : ie.general) || void 0 === ne ? void 0 : ne.posts) || void 0 === re ? void 0 : re.pageInfo),
						listings: null
					}, Le = {
						authors: e[n.bc.Users] ? null !== (null === (oe = null === (se = t.data.search) || void 0 === se ? void 0 : se.general) || void 0 === oe ? void 0 : oe.authors) : void 0,
						comments: e[n.bc.Comments] ? null !== (null === (ae = null === (de = t.data.search) || void 0 === de ? void 0 : de.general) || void 0 === ae ? void 0 : ae.comments) : void 0,
						communities: e[n.bc.Subreddits] ? null !== (null === (ue = null === (le = t.data.search) || void 0 === le ? void 0 : le.general) || void 0 === ue ? void 0 : ue.communities) : void 0,
						posts: e[n.bc.Posts] ? null !== (null === (_e = null === (ce = t.data.search) || void 0 === ce ? void 0 : ce.general) || void 0 === _e ? void 0 : _e.posts) : void 0
					}, ke = {
						[n.ac.Posts]: null != Ge ? Ge : void 0
					}
				}
				return {
					account: null,
					authorFlair: {
						...he,
						...Fe
					},
					authorOrder: Oe,
					commentOrder: Ne,
					comments: Re,
					listingOrder: [],
					postOrder: be,
					communityOrder: Ee,
					posts: {
						...pe,
						...je
					},
					postFlair: {
						...fe,
						...Ce
					},
					profileAboutInfo: Ie,
					profiles: Te,
					structuredStyles: De,
					searchDiscoveryUnits: we,
					searchDiscoveryUnitOrder: ve,
					subreddits: {
						...ye,
						...Ae
					},
					subredditAboutInfo: Se,
					success: Le,
					tokens: xe,
					treatment: ke,
					viewTreatment: Pe
				}
			}

			function x(e) {
				return e && e.hasNextPage && e.endCursor || null
			}
			const D = 10,
				P = 50;
			async function L({
				context: e,
				isSerpRedesignLayoutM3: t,
				multiredditLabel: i,
				nsfw: l,
				options: u,
				structureType: c,
				subredditNames: _,
				tokens: m,
				queryId: p
			}) {
				var h, f, b, g;
				const w = [{
						key: "nsfw",
						value: l ? "1" : "0"
					}, {
						key: "multireddit_label",
						value: null != i ? i : null
					}, {
						key: "subreddit_names",
						value: null !== (h = N(_)) && void 0 !== h ? h : null
					}, {
						key: "time_range",
						value: (null == u ? void 0 : u.t) && "all" !== (null == u ? void 0 : u.t) ? null == u ? void 0 : u.t : null
					}].filter(e => null !== e.value),
					v = {
						[n.bc.Posts]: !1,
						[n.bc.Subreddits]: !1,
						[n.bc.Users]: !1,
						[n.bc.Comments]: !1
					};
				for (const n of null !== (b = null === (f = null == u ? void 0 : u.type) || void 0 === f ? void 0 : f.split(",")) && void 0 !== b ? b : []) void 0 !== v[n] && (v[n] = !0);
				const y = {
						ad: null == u ? void 0 : u.ad,
						originPageType: Object(o.b)(s.b.SearchOriginPage),
						queryId: p,
						structureType: c
					},
					E = v[n.bc.Posts],
					S = v[n.bc.Subreddits],
					T = v[n.bc.Users],
					O = v[n.bc.Comments] && !!t,
					I = E && S && T,
					R = {
						query: null !== (g = null == u ? void 0 : u.q) && void 0 !== g ? g : "",
						sort: (null == u ? void 0 : u.sort) ? C[null == u ? void 0 : u.sort] : null,
						filters: w,
						productSurface: `${a.TelemetryAppName.web2x}`,
						includePosts: E,
						includeCommunities: S,
						includeAuthors: T,
						includeComments: O,
						postsAfter: m.posts,
						communitiesAfter: m.communities,
						authorsAfter: m.authors,
						commentsAfter: m.comments,
						searchInput: y,
						...I && {
							communityRows: D,
							authorRows: P
						},
						communitySearch: Boolean(_),
						subredditNames: _
					},
					F = await Object(r.a)(e, {
						...d,
						variables: R
					}, {
						traceRequestName: "general_search"
					});
				return {
					...F,
					body: A(v, F.body)
				}
			}
		},
		"./src/reddit/endpoints/post/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return _
			})), i.d(t, "l", (function() {
				return m
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			})), i.d(t, "g", (function() {
				return g
			})), i.d(t, "s", (function() {
				return w
			})), i.d(t, "i", (function() {
				return v
			})), i.d(t, "u", (function() {
				return y
			})), i.d(t, "k", (function() {
				return E
			})), i.d(t, "j", (function() {
				return S
			})), i.d(t, "v", (function() {
				return T
			})), i.d(t, "o", (function() {
				return O
			})), i.d(t, "m", (function() {
				return I
			})), i.d(t, "b", (function() {
				return R
			})), i.d(t, "n", (function() {
				return F
			})), i.d(t, "w", (function() {
				return N
			})), i.d(t, "q", (function() {
				return C
			})), i.d(t, "x", (function() {
				return j
			})), i.d(t, "h", (function() {
				return A
			})), i.d(t, "t", (function() {
				return x
			})), i.d(t, "r", (function() {
				return D
			})), i.d(t, "p", (function() {
				return P
			})), i.d(t, "c", (function() {
				return L
			}));
			var n = i("./src/redditGQL/operations/PostIsTrackingCrossposts.json"),
				r = i("./src/redditGQL/operations/UpdatePostDistinguishState.json"),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/makeApiRequest/index.ts"),
				d = i("./src/lib/makeGqlRequest/index.ts"),
				a = i("./src/lib/omitHeaders/index.ts"),
				l = i("./src/reddit/constants/headers.ts"),
				u = i("./src/reddit/helpers/addRedesignIdentifier/index.ts");
			var c = i("./src/redditGQL/types.ts");
			const _ = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/approve`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				m = (e, t, i) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/distinguish/${i}`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				p = {
					[s.G.NONE]: c.g.None,
					[s.G.MODERATOR]: c.g.ModDistinguished,
					[s.G.ADMIN]: c.g.AdminDistinguished,
					[s.G.ALUMNI_ADMIN]: c.g.AlumniDistinguished
				};
			const h = (e, t, i) => {
					const n = function(e, t) {
						return {
							input: {
								postId: e,
								distinguishState: t === s.G.NONE ? c.r.None : c.r.Distinguished,
								distinguishType: p[t]
							}
						}
					}(t, i);
					return Object(d.a)(e, {
						...r,
						variables: n
					})
				},
				f = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/fetch_title`),
					method: s.jb.POST,
					data: {
						url: t,
						api_type: "json"
					}
				}),
				b = (e, t, i) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/follow_post`),
					method: s.jb.POST,
					data: {
						follow: i,
						fullname: t
					}
				}),
				g = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/hide`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				w = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/unhide`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				v = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/lock`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				y = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/unlock`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				E = (e, t, i) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/set_original_content`),
					method: s.jb.POST,
					data: {
						fullname: t,
						should_set_oc: i
					}
				}),
				S = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/marknsfw`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				T = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/unmarknsfw`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				O = (e, t, i) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: `${e.apiUrl}/api/sendreplies`,
					method: s.jb.POST,
					data: {
						id: t,
						state: i
					}
				}),
				I = (e, t, i) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/remove`),
					method: s.jb.POST,
					data: {
						id: t,
						spam: i
					}
				}),
				R = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/del`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				F = (e, t) => ((e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/save`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}))(e, t),
				N = (e, t) => ((e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/unsave`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}))(e, t),
				C = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/spoiler`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				j = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: Object(u.a)(`${e.apiUrl}/api/unspoiler`),
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				A = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: `${e.apiUrl}/api/ignore_reports`,
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				x = (e, t) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: `${e.apiUrl}/api/unignore_reports`,
					method: s.jb.POST,
					data: {
						id: t
					}
				}),
				D = (e, t, i, n) => Object(o.a)(Object(a.a)(e, [l.a]), {
					endpoint: `${e.apiUrl}/api/set_subreddit_sticky`,
					method: s.jb.POST,
					data: {
						id: t,
						state: i,
						to_profile: n
					}
				}),
				P = async (e, t, i) => Object(o.a)(Object(a.a)(e, [l.a]), {
					method: s.jb.POST,
					endpoint: Object(u.a)(`${e.apiUrl}/api/set_contest_mode/`),
					data: {
						api_type: "json",
						id: i,
						state: t
					}
				}), L = (e, t) => Object(d.a)(e, {
					...n,
					variables: t
				})
		},
		"./src/reddit/endpoints/profile/info.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return c
			})), i.d(t, "c", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			})), i.d(t, "d", (function() {
				return p
			})), i.d(t, "b", (function() {
				return h
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeApiRequest/index.ts"),
				s = i("./src/lib/makeGqlRequest/index.ts"),
				o = i("./src/lib/omitHeaders/index.ts"),
				d = i("./src/reddit/constants/headers.ts"),
				a = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				l = i("./src/redditGQL/operations/ProfileModHubPage.json"),
				u = i("./src/redditGQL/operations/RedditorKarma.json");
			const c = e => {
					var t;
					return !!(null === (t = e) || void 0 === t ? void 0 : t.karma)
				},
				_ = (e, t) => Object(r.a)(Object(o.a)(e, [d.a]), {
					endpoint: Object(a.a)(`${e.apiUrl}/user/${t}/about.json`),
					method: n.jb.GET,
					data: {
						gilding_detail: 1,
						awarded_detail: 1,
						raw_json: 1
					}
				}),
				m = {
					fromAwardsReceived: 0,
					fromAwardsGiven: 0,
					fromComments: 0,
					fromPosts: 0,
					total: 0
				},
				p = (e, t) => Object(s.a)(e, {
					...u,
					variables: {
						name: t
					}
				}),
				h = (e, t) => Object(s.a)(e, {
					...l,
					variables: {
						name: t
					}
				})
		},
		"./src/reddit/endpoints/session/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			}));
			var n = i("./src/lib/apiErrorHelpers.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/makeApiRequest/index.ts"),
				o = i("./src/lib/omitHeaders/index.ts"),
				d = i("./src/reddit/constants/headers.ts");
			const a = Object(n.a)(400),
				l = (e, t) => Object(s.a)(e, {
					allowErrorLogging: a,
					data: t,
					endpoint: "/refreshproxy",
					method: r.jb.POST
				}),
				u = e => Object(s.a)(Object(o.a)(e, [d.a]), {
					endpoint: "/api/v2/issue_session",
					method: r.jb.GET
				})
		},
		"./src/reddit/endpoints/subreddit/settings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "e", (function() {
				return f
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeApiRequest/index.ts"),
				s = i("./src/lib/omitHeaders/index.ts"),
				o = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				d = i("./src/reddit/constants/headers.ts");
			const a = (e, t, i) => Object(r.a)(Object(s.a)(e, [d.a]), {
					method: n.jb.POST,
					endpoint: `${e.apiUrl}/r/${t}/api/delete_sr_${i}`,
					data: {
						raw_json: 1
					}
				}),
				l = (e, t) => Object(r.a)(Object(s.a)(e, [d.a]), {
					method: n.jb.GET,
					endpoint: `${e.apiUrl}/r/${t}/about/edit.json`,
					data: {
						raw_json: 1
					}
				}).then(e => e.ok ? {
					...e,
					body: {
						..._(e.body.data)
					}
				} : e),
				u = (e, t, i) => Object(r.a)(Object(s.a)(e, [d.a]), {
					method: n.jb.PATCH,
					endpoint: Object(o.a)(`${e.apiUrl}/api/v1/subreddit/update_settings`),
					type: "json",
					data: {
						...m(i, h),
						sr: t
					}
				}),
				c = (e, t, i) => {
					const o = {
						...p(i),
						sr: t
					};
					return Object(r.a)(Object(s.a)(e, [d.a]), {
						method: n.jb.POST,
						endpoint: `${e.apiUrl}/api/site_admin`,
						data: o
					})
				},
				_ = e => ({
					archivePostsEnabled: e.should_archive_posts,
					allowChatPostCreation: e.allow_chat_post_creation,
					allowDiscovery: e.allow_discovery,
					allowGalleries: e.allow_galleries,
					allowImages: e.allow_images,
					allowPolls: e.allow_polls,
					allowPostCrossposts: e.allow_post_crossposts,
					allowPredictionContributors: e.allow_prediction_contributors,
					collapseDeletedComments: e.collapse_deleted_comments,
					commentScoreHideMins: e.comment_score_hide_mins,
					contentOptions: e.content_options,
					contentVisible: e.default_set,
					crowdControlFilter: e.crowd_control_filter,
					crowdControlMode: e.crowd_control_mode,
					crowdControlChatLevel: e.crowd_control_chat_level,
					crowdControlLevel: e.crowd_control_level,
					crowdControlPostLevel: e.crowd_control_post_level,
					description: e.description,
					disableContributorRequests: e.disable_contributor_requests,
					domain: e.domain,
					excludeBannedModqueue: e.exclude_banned_modqueue,
					headerHoverText: e.header_hover_text,
					hideAds: e.hide_ads,
					isChatPostFeatureEnabled: e.is_chat_post_feature_enabled,
					keyColor: e.key_color,
					language: e.language,
					liveStreamingIsEnabled: e.live_streaming_is_enabled,
					over18: e.over_18,
					publicDescription: e.public_description,
					publicTraffic: e.public_traffic,
					restrictCommenting: e.restrict_commenting,
					restrictPosting: e.restrict_posting,
					showMedia: e.show_media,
					showMediaPreview: e.show_media_preview,
					spamComments: e.spam_comments,
					spamLinks: e.spam_links,
					spamSelfposts: e.spam_selfposts,
					spoilersEnabled: e.spoilers_enabled,
					submitLinkLabel: e.submit_link_label,
					submitText: e.submit_text,
					submitTextLabel: e.submit_text_label,
					subredditId: e.subreddit_id,
					subredditType: e.subreddit_type,
					suggestedCommentSort: e.suggested_comment_sort,
					title: e.title,
					toxicityThresholdChatLevel: e.toxicity_threshold_chat_level,
					welcomeMessageEnabled: e.welcome_message_enabled,
					welcomeMessageText: e.welcome_message_text,
					wikiEditAge: e.wiki_edit_age,
					wikiEditKarma: e.wiki_edit_karma,
					wikimode: e.wikimode
				}),
				m = (e, t) => {
					const i = {};
					for (const n in e) i[t[n]] = e[n];
					return i
				},
				p = e => ({
					allow_polls: e.allowPolls,
					allow_galleries: e.allowGalleries,
					allow_post_crossposts: e.allowPostCrossposts,
					allow_chat_post_creation: e.allowChatPostCreation,
					allow_images: e.allowImages,
					allow_discovery: e.allowDiscovery,
					allow_top: e.contentVisible,
					api_type: "json",
					collapse_deleted_comments: e.collapseDeletedComments,
					comment_score_hide_mins: e.commentScoreHideMins,
					crowd_control_filter: e.crowdControlFilter,
					crowd_control_mode: e.crowdControlMode,
					crowd_control_level: e.crowdControlLevel,
					crowd_control_chat_level: e.crowdControlChatLevel,
					crowd_control_post_level: e.crowdControlPostLevel,
					disable_contributor_requests: e.disableContributorRequests,
					description: e.description,
					domain: e.domain,
					exclude_banned_modqueue: e.excludeBannedModqueue,
					"header-title": e.headerHoverText,
					hide_ads: e.hideAds,
					is_chat_post_feature_enabled: e.isChatPostFeatureEnabled,
					key_color: e.keyColor,
					lang: e.language,
					link_type: e.contentOptions,
					live_streaming_is_enabled: e.liveStreamingIsEnabled,
					over_18: e.over18,
					public_description: e.publicDescription,
					public_traffic: e.publicTraffic,
					restrict_commenting: e.restrictCommenting,
					restrict_posting: e.restrictPosting,
					show_media: e.showMedia,
					show_media_preview: e.showMediaPreview,
					should_archive_posts: e.archivePostsEnabled,
					spam_comments: e.spamComments,
					spam_links: e.spamLinks,
					spam_selfposts: e.spamSelfposts,
					spoilers_enabled: e.spoilersEnabled,
					sr: e.subredditId,
					submit_link_label: e.submitLinkLabel,
					submit_text: e.submitText,
					submit_text_label: e.submitTextLabel,
					suggested_comment_sort: e.suggestedCommentSort,
					title: e.title,
					toxicity_threshold_chat_level: e.toxicityThresholdChatLevel,
					type: e.subredditType,
					welcome_message_enabled: e.welcomeMessageEnabled,
					welcome_message_text: e.welcomeMessageText,
					wiki_edit_age: e.wikiEditAge,
					wiki_edit_karma: e.wikiEditKarma,
					wikimode: e.wikimode
				}),
				h = {
					archivePostsEnabled: "should_archive_posts",
					allowPostCrossposts: "allow_post_crossposts",
					allowImages: "allow_images",
					allowChatPostCreation: "allow_chat_post_creation",
					allowDiscovery: "allow_discovery",
					allowPolls: "allow_polls",
					allowPredictionContributors: "allow_prediction_contributors",
					allowGalleries: "allow_galleries",
					contentVisible: "allow_top",
					collapseDeletedComments: "collapse_deleted_comments",
					commentScoreHideMins: "comment_score_hide_mins",
					crowdControlFilter: "crowd_control_filter",
					crowdControlMode: "crowd_control_mode",
					crowdControlLevel: "crowd_control_level",
					crowdControlPostLevel: "crowd_control_post_level",
					crowdControlChatLevel: "crowd_control_chat_level",
					description: "description",
					disableContributorRequests: "disable_contributor_requests",
					domain: "domain",
					excludeBannedModqueue: "exclude_banned_modqueue",
					headerHoverText: "header-title",
					hideAds: "hide_ads",
					isChatPostFeatureEnabled: "is_chat_post_feature_enabled",
					keyColor: "key_color",
					language: "lang",
					liveStreamingIsEnabled: "live_streaming_is_enabled",
					contentOptions: "link_type",
					over18: "over_18",
					publicDescription: "public_description",
					publicTraffic: "public_traffic",
					restrictCommenting: "restrict_commenting",
					restrictPosting: "restrict_posting",
					showMedia: "show_media",
					showMediaPreview: "show_media_preview",
					spamComments: "spam_comments",
					spamLinks: "spam_links",
					spamSelfposts: "spam_selfposts",
					spoilersEnabled: "spoilers_enabled",
					submitLinkLabel: "submit_link_label",
					submitText: "submit_text",
					submitTextLabel: "submit_text_label",
					subredditType: "type",
					suggestedCommentSort: "suggested_comment_sort",
					title: "title",
					toxicityThresholdChatLevel: "toxicity_threshold_chat_level",
					welcomeMessageEnabled: "welcome_message_enabled",
					welcomeMessageText: "welcome_message_text",
					wikiEditAge: "wiki_edit_age",
					wikiEditKarma: "wiki_edit_karma",
					wikimode: "wikimode"
				},
				f = (e, t, i) => Object(r.a)(Object(s.a)(e, [d.a]), {
					method: n.jb.POST,
					endpoint: Object(o.a)(`${e.apiUrl}/api/v1/subreddit/test_welcome_message`),
					data: {
						sr: t,
						test_message_text: i
					}
				})
		},
		"./src/reddit/endpoints/survey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			}));
			var n = i("./src/lib/makeGqlRequest/index.ts"),
				r = i("./src/redditGQL/operations/CustomerSurveyConfig.json"),
				s = i("./src/redditGQL/operations/CustomerSurveySteps.json");
			const o = e => Object(n.a)(e, {
					...r
				}),
				d = e => Object(n.a)(e, {
					...s
				})
		},
		"./src/reddit/endpoints/user/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return _
			})), i.d(t, "c", (function() {
				return m
			})), i.d(t, "d", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			}));
			var n = i("./src/config.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/makeApiRequest/index.ts"),
				o = i("./src/lib/makeGqlRequest/index.ts"),
				d = i("./src/lib/omitHeaders/index.ts"),
				a = i("./src/redditGQL/operations/ExperimentVariants.json"),
				l = i("./src/reddit/constants/headers.ts"),
				u = i("./src/reddit/helpers/addRedesignIdentifier/index.ts"),
				c = i("./src/reddit/models/RichTextJson/addRTJParam.ts");
			const _ = (e, t) => Object(s.a)(e, {
					endpoint: Object(u.a)(Object(c.a)(`${n.a.gatewayUrl}/desktopapi/v1/user/${t}/about`)),
					method: r.jb.GET,
					data: {
						api_type: "json",
						gilding_detail: 1,
						awarded_detail: 1
					}
				}),
				m = e => Object(s.a)(Object(d.a)(e, [l.a]), {
					endpoint: `${e.apiUrl}/api/seen_layout_switch`,
					method: r.jb.POST
				}),
				p = e => Object(s.a)(Object(d.a)(e, [l.a]), {
					endpoint: `${e.apiUrl}/api/seen_modal`,
					method: r.jb.POST
				}),
				h = (e, t) => Object(o.a)(e, {
					...a,
					variables: t
				}, {
					traceRequestName: "get_experiments"
				})
		},
		"./src/reddit/endpoints/user/preferences.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return m
			})), i.d(t, "h", (function() {
				return p
			})), i.d(t, "e", (function() {
				return h
			})), i.d(t, "g", (function() {
				return f
			})), i.d(t, "f", (function() {
				return b
			})), i.d(t, "i", (function() {
				return g
			})), i.d(t, "c", (function() {
				return w
			})), i.d(t, "a", (function() {
				return v
			})), i.d(t, "d", (function() {
				return y
			})), i.d(t, "j", (function() {
				return E
			}));
			var n = i("./src/config.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/makeApiRequest/index.ts"),
				o = i("./src/lib/omitHeaders/index.ts");
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			const d = {
				activityRelevantAds: "activity_relevant_ads",
				acceptPrivateMessages: "accept_pms",
				allowClickTracking: "allow_clicktracking",
				collapseReadMessages: "collapse_read_messages",
				countryCode: "country_code",
				badCommentAutocollapse: "bad_comment_autocollapse",
				defaultCommentSort: "default_comment_sort",
				emailDigests: "email_digests",
				emailUnreadMessages: "email_messages",
				emailUnsubscribe: "email_unsubscribe_all",
				enableFollowers: "enable_followers",
				feedRecommendationsEnabled: "feed_recommendations_enabled",
				geopopular: "geopopular",
				hasSeenCustomizeFlyout: "has_seen_customize_flyout",
				hideAds: "hide_ads",
				hideFromRobots: "hide_from_robots",
				hideNSFW: "no_profanity",
				highlightComments: "highlight_new_comments",
				ignoreSuggestedSort: "ignore_suggested_sort",
				inBeta: "beta",
				labelNSFW: "label_nsfw",
				markMessagesRead: "mark_messages_read",
				nightmode: "nightmode",
				over18: "over_18",
				sendWelcomeMessages: "send_welcome_messages",
				showMessagesInInbox: "threaded_messages",
				showNotifications: "live_orangereds",
				showUsernameMentionNotifications: "monitor_mentions",
				privateFeeds: "private_feeds",
				autoplayVideo: "video_autoplay",
				reduceAnimationsFromAwards: "reduce_animations_from_awards",
				rpanDuDismissalTime: "rpan_du_dismissal_time",
				showActiveCommunities: "top_karma_subreddits",
				showPresence: "show_presence",
				showRpanDu: i("./src/reddit/constants/preferences.ts").c,
				showTwitter: "show_twitter",
				stylesEnabled: "styles_enabled",
				openPostInNewTab: "open_post_in_new_tab",
				rememberCommunitySort: "remember_community_sort",
				useMarkdown: "use_markdown",
				sort: "sort",
				layout: "layout",
				rememberCommunityLayout: "remember_community_layout",
				topContentDismissalTime: "top_content_dismissal_time",
				topContentTimesDismissed: "top_content_times_dismissed",
				thirdPartyDataPersonalizedAds: "third_party_data_personalized_ads",
				thirdPartyPersonalizedAds: "third_party_personalized_ads",
				thirdPartySiteDataPersonalizedAds: "third_party_site_data_personalized_ads",
				thirdPartySiteDataPersonalizedContent: "third_party_site_data_personalized_content",
				showLocationBasedRecommendations: "show_location_based_recommendations",
				surveyLastSeenTime: "survey_last_seen_time"
			};
			var a = e => {
					const t = {};
					return Object.keys(e).map(i => {
						d.hasOwnProperty(i) && (t[d[i]] = e[i])
					}), t
				},
				l = i("./src/reddit/helpers/addRedesignIdentifier/index.ts");
			const u = {
				rpanDuDismissalTime: "rpan_du_dismissal_time",
				isContributorRequestTimestamp: "is_contributor_request_timestamp",
				sort: "sort",
				stylesEnabled: "styles_enabled",
				layout: "layout"
			};
			var c = e => {
					const t = {};
					return Object.keys(e).map(i => {
						t[u[i]] = e[i]
					}), t
				},
				_ = i("./src/reddit/constants/headers.ts");
			const m = e => Object(s.a)(Object(o.a)(e, [_.a]), {
					method: r.jb.GET,
					endpoint: `${e.apiUrl}/api/v1/me/prefs`
				}),
				p = e => Object(s.a)(Object(o.a)(e, [_.a]), {
					method: r.jb.PATCH,
					endpoint: `${e.apiUrl}/api/v1/me/prefs`,
					type: "json",
					data: {
						over_18: "true"
					}
				}),
				h = (e, t) => Object(s.a)(Object(o.a)(t, [_.a]), {
					method: r.jb.PATCH,
					endpoint: `${t.apiUrl}/api/v1/me/prefs`,
					type: "json",
					data: {
						video_autoplay: e
					}
				}),
				f = (e, t) => Object(s.a)(Object(o.a)(t, [_.a]), {
					method: r.jb.PATCH,
					endpoint: `${t.apiUrl}/api/v1/me/prefs`,
					type: "json",
					data: {
						nightmode: e
					}
				}),
				b = (e, t) => Object(s.a)(Object(o.a)(t, [_.a]), {
					method: r.jb.PATCH,
					endpoint: `${t.apiUrl}/api/v1/me/prefs`,
					type: "json",
					data: {
						geopopular: e
					}
				}),
				g = (e, t) => Object(s.a)(Object(o.a)(t, [_.a]), {
					method: r.jb.PATCH,
					endpoint: `${t.apiUrl}/api/v1/me/prefs`,
					type: "json",
					data: a(e)
				}),
				w = (e, t) => Object(s.a)(Object(o.a)(t, [_.a]), {
					method: r.jb.POST,
					endpoint: `${t.apiUrl}/api/quarantine_optin`,
					data: {
						sr_name: e,
						api_type: "json",
						accept: !0
					}
				}),
				v = (e, t) => Object(s.a)(Object(o.a)(t, [_.a]), {
					method: r.jb.POST,
					endpoint: `${t.apiUrl}/api/gated_sr_optin`,
					data: {
						sr_name: e,
						api_type: "json",
						accept: !0
					}
				}),
				y = (e, t) => Object(s.a)(t, {
					method: r.jb.POST,
					endpoint: Object(l.a)(`${n.a.gatewayUrl}/desktopapi/v1/set_preferences`),
					type: "json",
					data: {
						type: "account",
						preferences: a(e)
					}
				}),
				E = (e, t, i) => Object(s.a)(i, {
					method: r.jb.POST,
					endpoint: `${n.a.gatewayUrl}/desktopapi/v1/set_preferences`,
					type: "json",
					data: {
						type: "subreddit",
						subreddit_id: e,
						preferences: c(t)
					}
				})
		},
		"./src/reddit/featureFlags/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return T
			})), i.d(t, "a", (function() {
				return O
			})), i.d(t, "f", (function() {
				return I
			})), i.d(t, "g", (function() {
				return F
			})), i.d(t, "b", (function() {
				return N
			})), i.d(t, "c", (function() {
				return C
			})), i.d(t, "e", (function() {
				return A
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/isNil.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/mapValues.js"),
				o = i.n(s),
				d = i("./src/lib/constants/euCookiePolicy.ts"),
				a = i("./src/lib/getParsedUserAgent/index.ts"),
				l = i("./src/lib/notifications/featureFlags.ts");
			var u = i("./src/reddit/featureFlags/utils.ts"),
				c = i("./src/reddit/models/User/index.ts"),
				_ = i("./src/reddit/selectors/user.ts");
			const m = new Set(["coachzzz", "settrace", "flash_55", "mikapp", "ggalex", "jdawg1000"]);
			var p = i("./src/reddit/selectors/moderatorPermissions.ts"),
				h = i("./src/reddit/selectors/platform.ts"),
				f = i("./src/reddit/selectors/subreddit.ts");
			var b = i("./src/reddit/selectors/responsiveSettings.ts");
			const g = new Set(["AntiEvilPlayground", "lgbt", "dccomics", "yurop", "muaonthecheap", "loveislandusa", "blackladiesdating", "stpetersburgfl", "pics", "canada", "askuk", "fortnitebr", "unitedkingdom", "stopdrinking", "casualconversation", "animalsonreddit", "bisexual", "liberalgunowners", "redditsweats", "orangetheory", "fortnite", "readwithme", "dndgreentext", "ukraine"].map(e => e.toLowerCase())),
				w = new Set(["uzitest", "testingtesting127", "kpkrunal"]);
			var v = i("./src/reddit/featureFlags/subredditPoints.ts");
			const y = new Set(["askaliberal", "asktransgender", "askwomen", "bisexual", "blackladies", "exchristian", "exmormon", "gendercynical", "girlgamers", "neoliberal", "nothowgirlswork", "progresspics", "subredditdrama", "teenagers", "thegirlsurvivalguide", "thequickbrowncorgi", "traaaaaaannnnnnnnnns", "transpositive", "trollxchromosomes", "twoxchromosomes"]);
			var E = i("./src/reddit/featureFlags/useProductionStreamingApi.ts");
			const S = {
					[E.a]: () => Object(E.b)(),
					introModal: Object(u.d)(u.g),
					markdownMode: u.g,
					modQueue: Object(u.e)(u.g, u.h),
					spBadges: v.c,
					spBurnLinks: v.d,
					spClaimablePoints: v.e,
					spCustomBadgesAndEmotes: v.f,
					spCustomCrypto: v.g,
					spEmotes: v.h,
					spGiphy: v.i,
					spGovPolls: v.j,
					spHarberger: v.k,
					spLeaderboard: v.l,
					spPoints: v.m,
					spPointsCoinConversion: v.n,
					spPolls: v.o,
					spPublicPoints: v.p,
					spSpecialMemberships: v.r,
					spSpecialMembershipUpsells: v.q,
					spSpinoffs: v.s,
					spTipping: v.t,
					spWalletRegistrationBanner: v.u,
					scheduledPosts: e => {
						const t = Object(h.d)(e);
						return !!t && Object(p.h)(e, {
							subredditId: Object(f.D)(e, t)
						})
					},
					adminCommunityTopics: e => {
						if (!e.user.account) return !1;
						const t = Object(c.e)(e.user.account).toLowerCase();
						return Object(_.L)(e) && m.has(t)
					},
					rteVideoPoster: u.g,
					devAndStagingWatermark: u.g,
					fpsMeter: u.k,
					rabbitHole: u.k,
					measureScrollFPS: u.h,
					showVerboseErrors: Object(u.e)(u.g, u.h),
					srAdoptionWeek: u.l,
					uappBanner: u.k,
					experiments: Object(u.a)(u.i, Object(u.d)(u.f)),
					enableGraphQl: u.i,
					importExportThemes: u.h,
					flairRestrictions: u.l,
					newPostRequirements: u.l,
					superbOwl: u.j,
					enableShadowMode: Object(u.c)(0),
					pushNotificationsBrowserSupported: e => {
						return !(!Object(a.c)(navigator.userAgent) && !Object(b.a)(e, {
							pageLayer: e.platform.currentPage
						})) && Object(l.b)()
					},
					enableToxicityWarning: e => {
						const t = Object(h.d)(e);
						return !!t && y.has(t.toLowerCase())
					},
					snoovatar30: u.g,
					geoSubredditRecommendationDULoggedIn: u.k,
					geoSubredditRecommendationDULoggedOut: u.k,
					subredditInlineEditing: u.l,
					modToMemberShare: e => {
						const t = Object(h.d)(e);
						return !!t && w.has(t.toLowerCase())
					},
					subredditMentionD2xExperiment: u.l,
					privacySettingLocationBasedRecommendations: u.l,
					reCaptchaEnterprise: Object(u.d)(Object(u.b)(...d.d)),
					hatefulContentFiltersEnabled: e => {
						const t = Object(h.d)(e);
						return !!t && g.has(t.toLowerCase())
					},
					__requiredDoNotRemove: u.k
				},
				T = o()(S, (e, t) => i => {
					const n = i.featureFlags.overrides[t];
					return r()(n) ? e(i) : n
				}),
				O = Object.keys(S),
				I = e => e.filter(e => "__requiredDoNotRemove" !== e),
				R = /^feature_(.*)$/i,
				F = e => {
					const t = e.match(R);
					if (null !== t) return t[1]
				},
				N = "FEATURES__FEATURE_SET",
				C = "FEATURES__FEATURE_TOGGLED",
				j = function(e, ...t) {
					return function(...i) {
						const n = e(...i);
						return t.forEach(e => e(n, ...i)), n
					}
				}(({
					featureName: e,
					currentValue: t
				}) => ({
					type: C,
					payload: {
						featureName: e,
						currentValue: t
					}
				}), E.c),
				A = ({
					featureName: e
				}) => (t, i) => {
					const n = (0, T[e])(i());
					t(j({
						featureName: e,
						currentValue: n
					}))
				}
		},
		"./src/reddit/featureFlags/profileCollections.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/models/User/index.ts");
			const r = new Set(["0perspective", "almondparfitt", "almondparfitt", "avocadoast", "chtorrr", "coachzzz", "crowd__pleaser", "dadintech", "flash_55", "igabeup", "kalluraya", "kp-krunal", "kpkrunal", "lakelly000", "sodypop", "vlkoti", "wokata", "wting", "mynameizkhan", "mattkula", "wokata", "vladkonon", "jamiewu683", "casualwill", "Mother_of_Memes", "hardleyjeannite", "recklessmaterialism", "toyotausa", "allierightmeow", "shotteh22", "adsforthewin", "cheepono_foundation", "captainenergy", "RocketLeagueOfficial", "disintegrationgame", "Artemis_Red"]),
				s = e => {
					if (!e.user.account) return !1;
					const t = Object(n.e)(e.user.account).toLowerCase();
					return r.has(t)
				}
		},
		"./src/reddit/featureFlags/subredditPoints.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return l
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "g", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "i", (function() {
				return b
			})), i.d(t, "j", (function() {
				return g
			})), i.d(t, "k", (function() {
				return w
			})), i.d(t, "l", (function() {
				return v
			})), i.d(t, "m", (function() {
				return y
			})), i.d(t, "a", (function() {
				return E
			})), i.d(t, "n", (function() {
				return S
			})), i.d(t, "o", (function() {
				return T
			})), i.d(t, "p", (function() {
				return O
			})), i.d(t, "r", (function() {
				return I
			})), i.d(t, "q", (function() {
				return R
			})), i.d(t, "s", (function() {
				return F
			})), i.d(t, "t", (function() {
				return N
			})), i.d(t, "u", (function() {
				return C
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/selectors/platform.ts");
			const r = new Set(["cryptocurrencytest", "gigapoints", "pointsnitebr", "hiphopheadstest"]),
				s = new Set([...r, "cryptocurrency", "fortnitebr"]),
				o = new Set(["daonuts", "ethtrader"]),
				d = new Set([...s, "badgesroyaletest", "funkygoose"]),
				a = new Set([...s, ...o, "funkygoose"]),
				l = new Set([...s, ...o, "badgesroyaletest", "funkygoose"]),
				u = (...e) => t => {
					const i = Object(n.d)(t);
					if (i) {
						for (const t of e)
							if (!t.has(i.toLowerCase())) return !1;
						return !0
					}
					return !1
				},
				c = u(l),
				_ = u(r),
				m = u(s),
				p = u(d, new Set([...s, "badgesroyaletest", "funkygoose"])),
				h = u(o),
				f = u(d),
				b = u(new Set([...s, ...o, "badgesroyaletest", "funkygoose"])),
				g = u(a),
				w = u(a, new Set([...o, "funkygoose"])),
				v = u(new Set([...s, ...o, "badgesroyaletest", "funkygoose"])),
				y = u(a),
				E = s,
				S = u(E),
				T = u(a),
				O = u(a),
				I = u(l),
				R = u(l, new Set(["badgesroyaletest", "fortnitebr", "funkygoose"])),
				F = u(a, new Set(["funkygoose"])),
				N = u(a, new Set([...s, ...o, "funkygoose"])),
				C = u(o)
		},
		"./src/reddit/featureFlags/useProductionStreamingApi.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			}));
			var n = i("./src/lib/env/index.ts");
			const r = "useProductionStreamingApi",
				s = "1";

			function o() {
				return Object(n.a)() && !0
			}

			function d() {
				return o() && localStorage.getItem(r) === s
			}

			function a({
				payload: {
					featureName: e,
					currentValue: t
				}
			}) {
				o() && e === r && (!t ? localStorage.setItem(r, s) : localStorage.removeItem(r))
			}
		},
		"./src/reddit/featureFlags/utils.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "b", (function() {
				return c
			})), i.d(t, "l", (function() {
				return _
			})), i.d(t, "k", (function() {
				return m
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "h", (function() {
				return h
			})), i.d(t, "g", (function() {
				return f
			})), i.d(t, "i", (function() {
				return b
			})), i.d(t, "j", (function() {
				return g
			}));
			var n = i("./node_modules/crypto-js/sha256.js"),
				r = i.n(n);
			var s = i("./src/reddit/selectors/runTimeEnvVars.ts"),
				o = i("./src/reddit/selectors/user.ts");
			const d = e => t => !e(t),
				a = (...e) => t => e.some(e => e(t)),
				l = (...e) => t => e.every(e => e(t)),
				u = e => t => (({
					user: e
				}, t) => {
					if (0 === t) return !1;
					const i = e && e.loid.loid;
					return !!i && parseInt(r()(i).toString(), 16) % 1e3 < 10 * t
				})(t, e),
				c = (...e) => t => e.some(e => e === t.meta.country),
				_ = e => !0,
				m = e => !1,
				p = e => !1,
				h = o.L,
				f = a(p, s.c),
				b = e => !!e.user.session,
				g = ((e, t) => i => {
					const n = i.meta.pageloadServerTime;
					return n > e && n < t
				})(15492132e5, 15492561e5)
		},
		"./src/reddit/helpers/adCount/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/reducers/sidebarPromotedPosts/models/index.ts"),
				s = i("./src/reddit/selectors/platform.ts");
			const o = (e, t, i) => [e, t, i].join("/"),
				d = (e, t) => {
					switch (t) {
						case r.a.SUBREDDIT:
						case r.a.COMMENTS_OVERLAY:
						case r.a.COMMENTS: {
							const t = Object(s.i)(e);
							return [o(n.c.ABOVE_THE_FOLD, t, 0), o(n.c.BELOW_THE_FOLD, t, 1)]
						}
						case r.a.FRONTPAGE:
							return [o(n.c.ABOVE_THE_FOLD, !1, 0), o(n.c.BELOW_THE_FOLD, !1, 1)];
						case r.a.MULTIREDDIT:
						case r.a.SEARCH_RESULTS:
							return [o(n.c.BELOW_THE_FOLD, !1, 0)];
						default:
							return [o(n.c.ABOVE_THE_FOLD, !1, 0), o(n.c.BELOW_THE_FOLD, !1, 1)]
					}
				}
		},
		"./src/reddit/helpers/addRedesignIdentifier/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			}));
			var n = i("./src/config.ts"),
				r = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				s = i.n(r),
				o = i("./src/lib/addQueryParams/index.ts");

			function d(e) {
				const {
					protocol: t,
					host: i
				} = s.a.parse(e), r = `${t}//${i}` === n.a.oauthUrl ? n.a.telemetry.appName.redesignR2 : n.a.telemetry.appName.redesign, d = {
					redditWebClient: r,
					app: `${r}-client-production`
				};
				return Object(o.a)(e, d)
			}
			const a = () => {
				const e = n.a.telemetry.appName.redesignR2;
				return {
					redditWebClient: e,
					app: `${e}-client-production`
				}
			}
		},
		"./src/reddit/helpers/canonicalUrls.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return f
			})), i.d(t, "d", (function() {
				return b
			})), i.d(t, "a", (function() {
				return g
			})), i.d(t, "b", (function() {
				return w
			})), i.d(t, "e", (function() {
				return y
			})), i.d(t, "f", (function() {
				return E
			}));
			var n = i("./node_modules/react-router-redux/es/index.js"),
				r = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				s = i.n(r),
				o = i("./src/lib/addQueryParams/index.ts"),
				d = i("./src/lib/isAdHocMultireddit/index.ts"),
				a = i("./src/lib/isFakeSubreddit/index.ts"),
				l = i("./src/reddit/actions/otherDiscussions/constants.ts"),
				u = i("./src/reddit/constants/topic.ts"),
				c = i("./src/reddit/models/Comment/index.ts"),
				_ = i("./src/reddit/models/Post/index.ts"),
				m = (i("./src/reddit/selectors/meta.ts"), i("./src/reddit/selectors/multireddit.ts")),
				p = i("./src/reddit/selectors/subreddit.ts");
			const h = (e, t, i, r, s) => {
					const d = Object(o.a)(i, r),
						a = e.platform && e.platform.currentPage && e.platform.currentPage.locationState || void 0;
					t(Object(n.c)(d, a))
				},
				f = (e, t, i) => {
					const {
						params: n,
						queryParams: r,
						url: s
					} = i, {
						multiredditName: o,
						username: d
					} = n, a = Object(m.g)(e, {
						multiredditName: o,
						username: d
					});
					if (!a) return;
					const l = s === a,
						u = s.endsWith("/");
					if (l && u) return;
					const c = u ? s : `${s}/`,
						_ = l ? c : `${a}${c.substr(a.length)}`;
					h(e, t, _, r)
				},
				b = (e, t, i) => {
					const {
						params: n,
						queryParams: r,
						url: s
					} = i, {
						subredditName: o
					} = n;
					if (o) {
						const i = `/user/${o}/`,
							n = s.endsWith("/"),
							d = Object(p.b)(e, {
								profileName: o
							});
						if (!d) return;
						const a = i === d;
						if (a && n) return;
						const l = n ? s : `${s}/`,
							u = a ? l : l.replace(i, d);
						h(e, t, u, r)
					}
				},
				g = (e, t) => {
					let i;
					if (Object(a.a)(t) && Object(d.a)(t)) {
						const {
							subredditIds: n
						} = Object(m.a)(e, {
							listingName: t
						});
						if (!n) return;
						i = `/r/${Object(p.ab)(e,{subredditIds:n}).map(e=>e.name).sort().join("+")}/`
					}
					return i
				},
				w = (e, t, i) => {
					const {
						params: n,
						queryParams: r,
						url: o
					} = i, {
						partialCommentId: d,
						partialPostId: a
					} = n, u = d ? Object(c.h)(d) : "", m = a ? Object(_.t)(a) : "";
					if (u) {
						const i = e.features.comments.models[u];
						if (!i) return;
						const n = s.a.parse(i.permalink).pathname;
						n && n !== o && h(e, t, n, r)
					} else if (m) {
						const n = e.posts.models[m];
						if (!n) return;
						const d = s.a.parse(n.permalink).pathname,
							a = Object(l.d)(i.path),
							u = d && a ? Object(l.e)(d) : d;
						d && d !== o && !a ? h(e, t, d, r) : u && u !== Object(l.e)(o) && a && h(e, t, u, r)
					}
				},
				v = e => e.replace(/\/$/, ""),
				y = (e, t, i) => {
					const {
						params: n,
						queryParams: r,
						url: s
					} = i, {
						subredditName: o,
						countryCode: l,
						languageCode: u
					} = n;
					if (o) {
						const i = (l ? `/${l}` : "") + (u ? `/${u}` : "") + `/r/${o}/`,
							n = s.endsWith("/");
						let c = s;
						if (Object(a.a)(o) && Object(d.a)(o)) {
							const t = g(e, o);
							t && (c = c.replace(v(i), v(t)))
						} else {
							const t = Object(p.d)(e, {
								subredditName: o,
								countryCode: l,
								languageCode: u
							});
							if (!t) return;
							const r = i === t;
							if (r && n) return;
							const d = n ? s : `${s}/`;
							c = r ? d : d.replace(v(i), v(t))
						}
						c !== s && h(e, t, c, r)
					}
				},
				E = (e, t, i) => {
					const {
						params: n,
						queryParams: r,
						url: s
					} = i, o = Object(u.a)(n.topicSlug), d = o !== s;
					return d && h(e, t, o, r), d
				}
		},
		"./src/reddit/helpers/chooseVariant/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return b
			})), i.d(t, "b", (function() {
				return w
			})), i.d(t, "c", (function() {
				return v
			})), i.d(t, "d", (function() {
				return y
			})), i.d(t, "e", (function() {
				return E
			}));
			var n = i("./node_modules/reselect/es/index.js");
			const r = {},
				s = {};
			var o = i("./src/reddit/helpers/featureThrottling/store/index.ts"),
				d = i("./src/reddit/selectors/experiments/index.ts"),
				a = i("./src/reddit/selectors/platform.ts"),
				l = i("./src/reddit/selectors/telemetry.ts"),
				u = i("./src/telemetry/index.ts"),
				c = i("./src/telemetry/models/Event.ts");
			const _ = e => Object(u.a)(e),
				m = (e, t, i, n, r) => {
					Object(u.a)({
						action: c.d.Expose,
						actionInfo: void 0,
						app: e,
						experiment: n,
						noun: c.e.UserId,
						referrer: void 0,
						request: i,
						session: void 0,
						source: c.f.Experiment,
						user: t,
						...r
					})
				};
			var p = i("./src/server/helpers/canonicalUrl.tsx");
			const h = Object(n.a)(e => Object(d.g)(e), e => Object(p.a)(e), (e, t) => !!e && e === t),
				f = (e, t) => {
					if (!t.experimentEligibilitySelector(e)) return !1;
					if (t.isThrottled && o.a.isFeatureThrottled(t.experimentName)) return !1;
					if (t.throttledVariants) {
						const i = ((e, t) => {
								const i = Object(d.c)(e, t),
									n = Object(d.b)(e, t);
								return void 0 !== n ? n : i && i.variant || void 0
							})(e, t),
							n = i && t.throttledVariants[i];
						if (n && o.a.isFeatureThrottled(n)) return !1
					}
					return !0
				},
				b = () => !0,
				g = [],
				w = Object(n.a)(d.c, d.b, f, (e, t) => t.expEventOverride, (e, t) => t.experimentName, d.g, e => Object(p.a)(e), (e, t) => ((e, t) => {
					const i = Object(d.b)(e, t),
						n = void 0 !== i,
						r = Object(d.c)(e, t);
					let s;
					n ? s = {
						id: -1,
						isOverride: !0,
						name: t.experimentName,
						variant: i,
						version: "-1"
					} : r && (s = {
						...r,
						isOverride: !1
					});
					const o = Object(a.o)(e),
						u = o ? l.J(e, o) : void 0,
						_ = {
							...l.Z(e),
							canonical_url: Object(d.g)(e) || void 0
						};
					return {
						source: c.f.Experiment,
						action: c.d.Expose,
						noun: c.e.CanonicalUrl,
						actionInfo: void 0,
						app: l.g(e),
						experiment: s,
						post: u,
						request: _,
						referrer: void 0,
						session: void 0,
						subreddit: l.jb(e),
						user: l.rb(e)
					}
				})(e, t), h, (e, t, i, n, r, o, d, a, l) => {
					if (!l || !i) return;
					const u = o || d || "",
						c = (() => s)();
					let m = c[u];
					if (m || (m = {}, c[u] = m), !e) return t && m[r] !== t && !1 !== n && (_(a), m[r] = t), t;
					const p = e.name,
						h = void 0 !== t ? t : e.variant;
					if (h) {
						m[p] === h || !1 === n || (_(a), m[r] = h)
					}
					return h
				}),
				v = Object(n.a)(d.c, d.b, e => l.g(e), e => l.rb(e), e => l.Z(e), (e, t) => t.expEventOverride, (e, t) => t.customPayloadMaker && t.customPayloadMaker(e), f, (e, t) => t.experimentName, (e, t, i, n, s, o, d = {}, a, l) => {
					if (!a) return;
					const u = (() => r)();
					if (!e) return t && !1 !== o && u[l] !== t && !g.includes(l) && (m(i, n, s, {
						id: -1,
						isOverride: !0,
						name: l,
						variant: t,
						version: "-1"
					}, d), u[l] = t), t;
					const c = e.name,
						{
							id: _
						} = e,
						p = void 0 !== t,
						h = p ? t : e.variant;
					if (h) {
						const t = -1 === _,
							r = u[c] === h;
						t || r || !1 === o || g.includes(l) || (m(i, n, s, {
							...e,
							isOverride: p,
							variant: h
						}, d), u[c] = h)
					}
					return p ? t : h
				}),
				y = (e, t) => {
					const i = l.g(e),
						n = l.rb(e),
						r = l.Z(e),
						s = Object(d.c)(e, t),
						o = Object(d.b)(e, t),
						a = void 0 !== o;
					if (s) {
						const e = a ? o : s.variant;
						e && m(i, n, r, {
							...s,
							isOverride: a,
							variant: e
						}, {})
					}
				},
				E = (e, t) => {
					v(e, {
						experimentName: t,
						experimentEligibilitySelector: b
					})
				}
		},
		"./src/reddit/helpers/clickSourceData/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/history.ts"),
				s = i("./src/reddit/selectors/telemetry.ts"),
				o = i("./node_modules/uuid/v4.js"),
				d = i.n(o);

			function a(e) {
				var t;
				let i = e ? Object(s.w)(e) : void 0;
				if ("search_results" === i)
					if (Object(s.ib)(e) === s.c.Trending) i = "search_results_trending";
					else {
						const {
							type: t
						} = (null == e ? void 0 : e.queryParams) || {};
						switch (t) {
							case n.bc.Comments:
								i = "search_comments_tab";
								break;
							case n.bc.Subreddits:
								i = "search_communities_tab";
								break;
							case n.bc.Users:
								i = "search_authors_tab";
								break;
							case n.bc.Posts:
							case void 0:
							default:
								i = "search_posts_tab"
						}
					} const o = null === (t = null == e ? void 0 : e.locationState) || void 0 === t ? void 0 : t[r.b.FeedCorrelationId];
				return {
					[r.b.ClickSource]: i,
					[r.b.ClickId]: d()(),
					[r.b.ClickSourceFeedCorrelationId]: o
				}
			}
		},
		"./src/reddit/helpers/cookies/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return u
			})), i.d(t, "b", (function() {
				return c
			}));
			var n = i("./node_modules/Base64/base64.js"),
				r = i("./node_modules/icepick/icepick.js"),
				s = i("./node_modules/js-cookie/src/js.cookie.js"),
				o = i.n(s),
				d = i("./src/lib/constants/index.ts"),
				a = i("./src/lib/permanentCookieOptions.ts"),
				l = i("./src/reddit/constants/cookie.ts");

			function u(e) {
				const t = function() {
						const e = o.a.get(l.k);
						if (e) try {
							return JSON.parse(Object(n.atob)(e))
						} catch (t) {
							0
						}
					}(),
					i = Object(r.merge)(t || {}, e),
					s = new Date;
				s.setFullYear(s.getFullYear() + 2), o.a.set(l.k, btoa(JSON.stringify(i)), Object(a.a)(2))
			}

			function c(e) {
				const t = o.a.get(l.d),
					i = t ? JSON.parse(decodeURIComponent(t)) : {};
				o.a.set(l.d, JSON.stringify({
					...i,
					...e
				}), d.C)
			}
		},
		"./src/reddit/helpers/correlationIdTracker.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			}));
			var n, r = i("./node_modules/uuid/v4.js"),
				s = i.n(r);
			! function(e) {
				e.AwardCreationFlow = "AwardCreationFlow", e.AwardDeletionFlow = "AwardDeletionFlow", e.CommentComposer = "CommentComposer", e.Explore = "Explore", e.GildingFlow = "GildingFlow", e.GiftPremiumFlow = "GiftPremiumFlow", e.GoldPayment = "GoldPayment", e.LinkedPosts = "LinkedPosts", e.ModNotes = "ModNotes", e.ModQueue = "ModQueue", e.NsfwLinkedPosts = "NsfwLinkedPosts", e.PostComposer = "PostComposer", e.PowerupsFlow = "PowerupsFlow", e.PremiumSettings = "PremiumSettings", e.SearchResults = "SearchResults", e.SubredditCreation = "SubredditCreation", e.VideoView = "VideoView"
			}(n || (n = {}));
			const o = {},
				d = e => o[e],
				a = (e, t = !0) => {
					const i = t || !o[e] ? s()() : o[e];
					return o[e] = i, i
				},
				l = e => o[e] = void 0,
				u = (e, t) => o[e] = t
		},
		"./src/reddit/helpers/dom/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "i", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "h", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			}));
			var n = i("./node_modules/lodash/map.js"),
				r = i.n(n),
				s = i("./src/lib/FocusTrap/index.ts");
			const o = e => "INPUT" === e.tagName.toUpperCase() || "TEXTAREA" === e.tagName.toUpperCase() || "DIV" === e.tagName.toUpperCase() && e.isContentEditable,
				d = e => {
					let t = e;
					do {
						if (o(t)) return !0
					} while (t = t.parentElement);
					return !1
				},
				a = () => {
					const e = document.getSelection();
					return !!e && (e.rangeCount > 0 && e.getRangeAt(0).toString().length > 0)
				},
				l = () => a() ? (() => {
					const e = document.getSelection();
					if (!e) return [];
					const t = e.getRangeAt(0).cloneContents().childNodes;
					return r()(t, e => e.textContent || "")
				})() : null,
				u = (e, t) => {
					const i = document.createRange();
					return i.selectNode(t), e.compareBoundaryPoints(Range.END_TO_START, i) < 0 && e.compareBoundaryPoints(Range.START_TO_END, i) > 0
				},
				c = e => {
					const t = window.getSelection();
					if (1 !== t.rangeCount) return;
					const i = t.getRangeAt(0);
					if (!u(i, e)) return;
					const {
						startContainer: n,
						startOffset: r,
						endContainer: s,
						endOffset: o
					} = i, d = document.createRange();
					d.selectNode(e);
					let a = !0;
					if (-1 === d.compareBoundaryPoints(Range.START_TO_START, i) && (d.setStart(n, r), a = !1), 1 === d.compareBoundaryPoints(Range.END_TO_END, i) && (d.setEnd(s, o), a = !1), a) return [e];
					const l = document.createElement("div");
					return l.appendChild(d.cloneContents()), [...l.childNodes]
				},
				_ = (e, t, i) => {
					let n = e;
					for (; n && (!i || !i(n));) {
						if (n && t(n)) return n;
						n = n.parentElement
					}
				},
				m = e => e && e.parentElement && _(e.parentElement, e => "static" !== window.getComputedStyle(e).getPropertyValue("position")),
				p = e => {
					if (!e || e.hidden) return !0;
					if (window.getComputedStyle) {
						const t = window.getComputedStyle(e);
						if ("none" === t.display || "hidden" === t.visibility) return !0
					}
					return !!e.parentElement && p(e.parentElement)
				},
				h = e => {
					e.querySelectorAll(s.a).forEach(e => {
						e.tabIndex = -1
					})
				}
		},
		"./src/reddit/helpers/featureThrottling/store/index.ts": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/constants/featureThrottling.ts"),
				r = i("./src/reddit/helpers/localStorage/index.ts"),
				s = i("./src/reddit/selectors/user.ts"),
				o = i("./node_modules/lodash/uniq.js"),
				d = i.n(o),
				a = i("./node_modules/reselect/es/index.js"),
				l = i("./src/reddit/models/FeatureThrottling/index.ts");
			const u = [],
				c = (e, t, i) => {
					switch (e.type) {
						case l.b.TimesPerPeriod: {
							const i = Date.now() - e.period;
							return t.filter(e => e.when >= i).length < e.times
						}
						case l.b.SessionsPerPeriod: {
							const n = Date.now() - e.period,
								r = new Set;
							for (const e of t) e.when >= n && e.sessionId !== i && r.add(e.sessionId);
							return r.size < e.times
						}
						case l.b.TimesPerSession:
							return t.filter(e => e.sessionId === i).length < e.times;
						case l.b.TimesTotal:
							return t.length < e.times;
						case l.b.SessionsTotal: {
							const n = new Set;
							for (const e of t) e.sessionId !== i && n.add(e.sessionId);
							return n.size < e.times
						}
						case l.b.NthSession:
							return d()([...t.map(e => e.sessionId), i]).length % e.nth == 0;
						case l.b.Combined:
							return (e.op === l.a.And ? Array.prototype.every : Array.prototype.some).call(e.configs, e => c(e, t, i));
						default:
							return !1
					}
				},
				_ = Object(a.a)((e, t) => t.name, (e, t) => t.sessionId, (e, t) => n.a[t.name], (e, t) => e[t.name] || u, (e, t, i, n) => {
					if (!i) return !1;
					try {
						return c(i, n, t)
					} catch (r) {
						return !1
					}
				}),
				m = (e, t) => !_(e, t);
			const p = new class {
				constructor() {
					this.isReady = !1, this.listeners = new Set, this.sessionId = "", this.throttlingData = {}, this.subscribe = e => {
						this.listeners.has(e) || (this.listeners.add(e), this.isReady && e(this.throttlingData))
					}, this.unsubscribe = e => {
						this.listeners.delete(e)
					}, this.persistToLSAndNotify = e => {
						Object(r.vb)(this.throttlingData), this.notifyAll(e)
					}, this.isFeatureThrottled = e => !!this.isReady && m(this.throttlingData, {
						name: e,
						sessionId: this.sessionId
					}), this.throttleFeature = e => {
						n.a[e] && !this.isFeatureThrottled(e) && (this.throttlingData = {
							...this.throttlingData,
							[e]: [...this.throttlingData[e] || [], {
								sessionId: this.sessionId,
								when: Date.now()
							}]
						}, this.persistToLSAndNotify(e))
					}, this.resetFeature = e => {
						n.a[e] && (this.throttlingData = {
							...this.throttlingData,
							[e]: []
						}, this.persistToLSAndNotify(e))
					}
				}
				initialize(e) {
					this.sessionId = Object(s.p)(e), this.isReady = !0;
					const t = Object(r.n)();
					if (!t) return;
					const i = Object.keys(n.a);
					let o = !1;
					Object.keys(t).forEach(e => {
						i.includes(e) || (delete t[e], o = !0)
					}), o && Object(r.vb)(t), this.throttlingData = t, this.notifyAll()
				}
				notifyAll(e) {
					this.isReady && this.listeners.forEach(t => {
						t(this.throttlingData, e)
					})
				}
			};
			t.a = p
		},
		"./src/reddit/helpers/flair.ts": function(e, t, i) {
			"use strict";
			i.d(t, "q", (function() {
				return c
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "i", (function() {
				return p
			})), i.d(t, "p", (function() {
				return h
			})), i.d(t, "a", (function() {
				return f
			})), i.d(t, "r", (function() {
				return b
			})), i.d(t, "n", (function() {
				return w
			})), i.d(t, "o", (function() {
				return v
			})), i.d(t, "h", (function() {
				return y
			})), i.d(t, "c", (function() {
				return S
			})), i.d(t, "b", (function() {
				return T
			})), i.d(t, "l", (function() {
				return O
			})), i.d(t, "f", (function() {
				return R
			})), i.d(t, "d", (function() {
				return F
			})), i.d(t, "s", (function() {
				return C
			})), i.d(t, "k", (function() {
				return j
			})), i.d(t, "m", (function() {
				return A
			})), i.d(t, "j", (function() {
				return x
			})), i.d(t, "e", (function() {
				return D
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/lodash/isEqual.js"),
				s = i.n(r),
				o = i("./src/lib/addQueryParams/index.ts"),
				d = i("./src/lib/formatEmojiName/index.ts"),
				a = i("./src/reddit/constants/colors.ts"),
				l = i("./src/reddit/constants/flair.ts"),
				u = i("./src/reddit/models/Flair/index.ts");
			const c = e => e === u.f.Text || e === u.f.Richtext || e === u.f.Image || e === u.f.Meta,
				_ = e => e.e === u.c.Emoji ? Object(d.b)(e.a) : e.t,
				m = e => e.type === u.f.Richtext ? e.richtext.map(_).join("") : e.text || "",
				p = e => m(e).length,
				h = (e, t) => m(e) === m(t),
				f = e => !e.allowableContent || e.allowableContent === u.a.Emoji || e.allowableContent === u.a.All,
				b = e => !e.allowableContent || e.allowableContent === u.a.Text || e.allowableContent === u.a.All,
				g = e => !!e.find(e => e.e === u.c.Text),
				w = e => e.type === u.f.Richtext ? g(e.richtext) : !!e.text,
				v = e => !e || (e.type === u.f.Richtext ? 0 === e.richtext.length : "" === e.text),
				y = e => e.type === u.f.Richtext ? e.richtext.reduce((e, t) => t.e === u.c.Emoji ? e + 1 : e, 0) : 0,
				E = e => ({
					e: u.c.Text,
					t: e
				}),
				S = (e, t = !0) => {
					let i;
					return i = e.type === u.f.Richtext ? {
						backgroundColor: e.backgroundColor,
						cssClass: e.cssClass,
						richtext: e.richtext,
						templateId: e.id || e.templateId,
						textColor: e.textColor,
						type: e.type
					} : {
						backgroundColor: e.backgroundColor,
						cssClass: e.cssClass,
						templateId: e.id || e.templateId,
						text: e.text,
						textColor: e.textColor,
						type: e.type
					}, t && (i = F({
						flair: i,
						template: e
					})), i
				},
				T = () => {
					return {
						backgroundColor: a.a.defaultFlair,
						text: "",
						textColor: u.e.Dark,
						type: u.f.Text
					}
				},
				O = ({
					maxEmojis: e
				}) => {
					if ("string" == typeof e) {
						const t = parseInt(e, 10);
						return Number.isInteger(t) ? t : l.d
					}
					return "number" == typeof e ? e : l.d
				},
				I = (e, t) => {
					if (t >= e.length) return e;
					let i = e,
						n = -1,
						r = 0,
						s = -1;
					for (let o = 0; o < e.length; o++)
						if (e[o].e === u.c.Emoji)
							if (++r === t) s = o;
							else if (r > t) {
						n = s + 1;
						break
					}
					if (n >= 0) {
						i = e.slice(0, n);
						let t = "";
						for (let i = n; i < e.length; i++) t += _(e[i]);
						i.push(E(t))
					}
					return i
				},
				R = (e, t) => {
					const i = e.type === u.f.Richtext ? e.richtext : [],
						n = m(e);
					return {
						...t,
						type: e.type,
						richtext: i,
						text: n
					}
				},
				F = e => {
					const {
						flair: t,
						template: i,
						ignoreTextAllowance: n = !1
					} = e, r = !!n || b(i);
					let s = t;
					if (t.type === u.f.Richtext) {
						let e = t.richtext;
						e = f(i) ? I(e, O(i)) : I(e, 0), !r && g(e) && (e = e.filter(e => e.e !== u.c.Text)), e !== t.richtext && (s = {
							...t,
							richtext: e
						})
					} else t.text && !r && (s = {
						...t,
						text: ""
					});
					return s
				},
				N = () => !0,
				C = (e, t, i = N) => {
					const {
						emojis: n,
						snoomojis: r
					} = t, o = e.type === u.f.Richtext ? e.richtext : [E(e.text)], a = [];
					return o.forEach(e => {
						if (e.e === u.c.Text) {
							e.t.split(/(:[-\w]+:)/).forEach(e => {
								if (!e) return;
								if (d.a.test(e)) {
									const t = e,
										s = t.slice(1, -1),
										o = n[s] || r[s];
									if (o && i(o)) {
										const e = ((e, t) => ({
											e: u.c.Emoji,
											a: e,
											u: t
										}))(t, o.url);
										return void a.push(e)
									}
								}
								const t = a[a.length - 1];
								t && t.e === u.c.Text ? t.t += e : a.push(E(e))
							})
						} else a.push(e)
					}), s()(a, o) ? e : {
						...e,
						type: u.f.Richtext,
						richtext: a
					}
				},
				j = e => {
					const t = O(e);
					return e.allowableContent === u.a.Emoji ? n.fbt._({
						"*": "Allows up to {number} emojis only",
						_1: "Allows up to 1 emoji only"
					}, [n.fbt._plural(t, "number")], {
						hk: "3377Jj"
					}) : e.allowableContent === u.a.Text ? n.fbt._("Allows text only", null, {
						hk: "49lmsO"
					}) : n.fbt._({
						"*": "Allows text and up to {number} emojis",
						_1: "Allows text and up to 1 emoji"
					}, [n.fbt._plural(t, "number")], {
						hk: "2xjY7a"
					})
				},
				A = (e, t, i = {}) => {
					const r = p(e),
						s = b(t),
						o = f(t);
					if (0 === r && !i.allowBlank) return s && o ? n.fbt._("Error: text or emoji is required", null, {
						hk: "1xtECb"
					}) : o ? n.fbt._("Error: emoji is required", null, {
						hk: "4t0Hum"
					}) : n.fbt._("Error: text is required", null, {
						hk: "2VMFwd"
					});
					if (r > l.g && !i.allowOverflow) return n.fbt._("Error: character limit exceeded", null, {
						hk: "2ejRbH"
					});
					const d = O(t),
						a = y(e);
					return !s && w(e) ? n.fbt._("Error: Only emojis allowed", null, {
						hk: "4edtZW"
					}) : !o && a > 0 ? n.fbt._("Error: Emojis aren't allowed", null, {
						hk: "40qrwM"
					}) : a > d ? n.fbt._({
						"*": "Error: Exceeds {number} emojis limit",
						_1: "Error: Exceeds 1 emoji limit"
					}, [n.fbt._plural(d, "number")], {
						hk: "m0uE6"
					}) : void 0
				},
				x = e => `flair_name:"${m(e)}"`,
				D = (e, t) => Object(o.a)(e, {
					f: t
				})
		},
		"./src/reddit/helpers/getCommentsPageSort/index.ts": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/extractQueryParams/index.ts"),
				s = i("./node_modules/lodash/fromPairs.js"),
				o = i.n(s),
				d = i("./src/reddit/constants/parameters.ts"),
				a = i("./src/reddit/selectors/chatPost.ts"),
				l = i("./src/reddit/selectors/user.ts");
			t.a = (e, t) => {
				var i;
				const {
					user: s
				} = e, u = t && e.posts.models[t], c = u && u.suggestedSort ? u.suggestedSort : "", _ = !!s && Object(l.F)(e), m = null === (i = null == s ? void 0 : s.prefs) || void 0 === i ? void 0 : i.defaultCommentSort;
				let p = n.v,
					h = !1;
				_ && m ? p = m : c ? p = c : m && (p = m);
				const f = (e => {
						const t = e.platform.currentPage && e.platform.currentPage.url;
						return t && o()([...Object(r.a)(t)]) || new Set([])
					})(e),
					b = d.x in f ? f[d.x] : "";
				return (n.lc.has(b) ? b : p) === b && (p = b), b && (h = !0), Object(a.d)(e, {
					postId: t
				}) && (p = n.u.CHAT, h = !1), {
					hasSortParam: h,
					sortToUse: p
				}
			}
		},
		"./src/reddit/helpers/getErrorMsgFromR2JQueryResponse.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return s
			}));
			const n = {
					INVALID_EMAIL: "You entered an invalid email. Please try again.",
					RATELIMITED: "You are doing that too much. Please try later.",
					WRONG_PASSWORD: "You entered an incorrect password. Please try again."
				},
				r = (e, t) => -1 !== e.indexOf(t);

			function s(e, t = "Something went wrong. Please try again.") {
				const i = e && e.body && e.body.jquery && e.body.jquery[14] && e.body.jquery[14][3] && e.body.jquery[14][3][0];
				return "string" != typeof i ? t : r(i, "the following emails are invalid") ? n.INVALID_EMAIL : r(i, "wrong password") ? n.WRONG_PASSWORD : r(i, "you are doing that too much") ? n.RATELIMITED : t
			}
		},
		"./src/reddit/helpers/getGenericUploadError.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/lib/constants/index.ts");

			function r(e) {
				return {
					type: n.I.UNKNOWN_ERROR,
					fields: [{
						field: e,
						msg: "Image failed to upload"
					}]
				}
			}
		},
		"./src/reddit/helpers/getPostFromRouteMatch/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/models/Post/index.ts"),
				r = i("./src/lib/constants/index.ts");
			t.a = (e, t) => {
				if (!t) {
					const {
						currentPage: i
					} = e.platform;
					if (!i) return null;
					t = i.routeMatch
				}
				const {
					name: i
				} = t.route.meta;
				if (i === r.Nb.COMMENTS || i === r.Nb.DUPLICATES) {
					const {
						partialPostId: i
					} = t.match.params, r = Object(n.t)(i);
					return e.posts.models[r]
				}
				return null
			}
		},
		"./src/reddit/helpers/getRichTextContent/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return _
			})), i.d(t, "b", (function() {
				return h
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/lib/env/index.ts"),
				s = i("./src/lib/sentry/index.ts"),
				o = i("./src/reddit/helpers/isComment.ts"),
				d = (i("./src/reddit/models/Flair/index.ts"), i("./src/reddit/models/RichTextJson/index.ts")),
				a = i("./src/reddit/models/RichTextJson/nodeMakers.ts");
			const l = {
				document: "[Unable to render content]".split("\n").map(e => Object(a.l)([Object(a.s)(e, null)]))
			};
			const u = (e, t) => {
					const i = `getRichTextContent: ${e} (in ${Object(o.a)(t.id)?"comment":"post"})`;
					s.c.withScope(e => {
						e.setExtra("info", {
							id: t.id,
							permalink: t.permalink,
							media: t.media
						}), e.setTag("rtjson", "getting_content"), s.c.captureMessage(i)
					}), Object(r.b)() || console.log(`${t.id}: ${i}`)
				},
				c = (e, t, i = !0) => {
					const n = void 0 === t ? l : t,
						r = e.media;
					if (!r) return i && u("Media object is missing", e), n;
					if ("rtjson" !== r.type) return i && u("Media object type is not rtjson", e), n;
					const s = r.richtextContent;
					return s ? Array.isArray(s.document) ? s : (i && u("Invalid richtextContent document", e), n) : (i && u("Missing richtextContent property", e), n)
				},
				_ = e => !!c(e, null, !1),
				m = (e, t) => {
					switch (e.e) {
						case d.o:
							return t ? e.t : void 0;
						case d.g:
						case d.v:
						case d.y:
						case d.B:
						case d.C:
							return t ? `${e.e}${e.t}` : void 0;
						case d.x:
							return t ? n.fbt._("Spoiler alert. Click to see", null, {
								hk: "1TQtKR"
							}) : void 0;
						case d.A:
						case d.w:
							return e.t && e.t.trim()
					}
				},
				p = (e, t) => {
					let i = [];
					switch (e.e) {
						case d.u:
							e.c.forEach(e => {
								const n = m(e, t);
								n && i.push(n)
							});
							break;
						case d.p:
							const n = e.c;
							n && n.forEach(e => {
								e.e === d.q && e.c && e.c.forEach(e => {
									e.e === d.u && e.c.forEach(e => {
										const n = m(e, t);
										n && i.push(n)
									})
								})
							});
							break;
						case d.k:
							e.c && e.c.forEach(e => {
								const n = m(e, t);
								n && i.push(n)
							});
							break;
						case d.c:
							e.c && t && e.c.forEach(e => {
								const n = m(e, t);
								n && i.push(n)
							});
							break;
						case d.b:
							e.c && t && e.c.forEach(e => {
								i = [...i, ...p(e, t)]
							});
							break;
						case d.z:
							e.h && t && e.h.forEach(e => {
								e.c && e.c.forEach(e => {
									const n = m(e, t);
									n && i.push(n, " | ")
								})
							}), e.c && t && e.c.forEach(e => {
								e.forEach(e => {
									e.c && e.c.forEach(e => {
										const n = m(e, t);
										n && i.push(n, " | ")
									})
								})
							})
					}
					return i
				},
				h = (e, t) => {
					const i = c(e, null, !1);
					if (!i) return;
					const n = i.document;
					let r = [];
					return n.forEach(e => {
						const i = p(e, t);
						i && (r = [...r, ...i])
					}), 0 !== r.length ? r.join(" ") : void 0
				};
			t.a = c
		},
		"./src/reddit/helpers/getS3KeyFromUrl/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				r = i.n(n);
			t.a = e => {
				const {
					pathname: t = ""
				} = r.a.parse(e);
				return t.startsWith("/") ? t.slice(1) : t
			}
		},
		"./src/reddit/helpers/getSubredditOrProfileIconData/index.tsx": function(e, t, i) {
			"use strict";
			var n = i("./src/config.ts"),
				r = i("./src/reddit/models/StructuredStyles/index.ts");
			const s = {};
			t.a = e => e.subredditOrProfile ? {
				url: e.shouldHideNsfwIcon && e.subredditOrProfile.isNSFW ? `${n.a.assetPath}/img/avatar_over18.png` : e.subredditOrProfile.communityIcon || e.subredditOrProfile.icon.url,
				color: Object(r.i)(e.subredditOrProfile)
			} : s
		},
		"./src/reddit/helpers/getSubredditSortForListingKeyCreation/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/isFakeSubreddit/index.ts"),
				s = i("./src/reddit/constants/page.ts"),
				o = i("./src/reddit/selectors/experiments/bestSortPopular.ts");
			t.a = (e, t) => {
				const {
					sort: i,
					subredditName: d
				} = e;
				return i || (!d || Object(r.a)(d) ? d === s.g && Object(o.a)(t) ? n.vb : n.X : void 0)
			}
		},
		"./src/reddit/helpers/getSubredditUrl/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/isFakeSubreddit/index.ts");
			t.a = e => e && !Object(n.a)(e.name) ? e.url : ""
		},
		"./src/reddit/helpers/getVendorMetadata.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/ads/index.ts"),
				r = i("./src/lib/ads/store.ts"),
				s = i("./src/reddit/constants/adEvents.ts");
			const o = (e, t) => {
					return Object.keys(e).reduce((i, n) => (i[n] = t - (e[n].timeEntered || t), i), {})
				},
				d = (e, t, i, n = 0) => {
					if (i) {
						if (e && t) return 4;
						if (!t && e) return 3;
						if (t && !e) return 2;
						if (!t && !e) return 1
					}
					return n
				},
				a = (e, t, i) => {
					let a = null,
						l = null;
					if ("undefined" == typeof document || "undefined" == typeof window) return null;
					const u = Date.now(),
						{
							thresholdData: c,
							videoThresholdData: _,
							videoAds: m
						} = r.c(e) || r.a,
						{
							videoData: p
						} = t,
						h = o(c, u),
						f = o(_, u),
						b = c[1].totalTime + h[1],
						g = c[50].totalTime + h[50],
						w = c[100].totalTime + h[100],
						v = Math.max(c[1].maxContinuousTime, h[1]),
						y = Math.max(c[30].maxContinuousTime, h[30]),
						E = Math.max(c[50].maxContinuousTime, h[50]),
						S = Math.max(c[100].maxContinuousTime, h[100]),
						T = E > n.m,
						O = document.getElementById(e);
					if (!O) return null;
					const I = O.getElementsByTagName("video");
					let R = null;
					I && I[0] && (R = I[0].getBoundingClientRect());
					const F = O.getBoundingClientRect(),
						N = (a = Math.floor(F.width)) * (l = Math.floor(F.height)),
						C = N > 242499 && E >= 1e3 || S >= 1e3 || i === s.a.GroupMViewable ? 1 : 0,
						j = N > 242499 && y >= 1e3 || S >= 1e3 ? 1 : 0,
						A = Math.max(_.FULL_IN_VIEW_TIME.maxContinuousTime, f.FULL_IN_VIEW_TIME) >= 1e3,
						x = _.HALF_DURATION_80_IN_VIEW_AUDIBLE.totalTime + f.HALF_DURATION_80_IN_VIEW_AUDIBLE,
						D = {
							w: a,
							h: l,
							sw: window.screen.width,
							sh: window.screen.height,
							t: u,
							a: b,
							b: g,
							c: w,
							d: v,
							e: E,
							f: S,
							g: C ? 1 : 0,
							i: i === s.a.Impression ? u : t.timeImpressionViewed || 0,
							o: T ? 1 : 0,
							q: j ? 1 : 0,
							r: t.eventGlobalCount ? t.eventGlobalCount : 0
						};
					if (p.isVideo) {
						const e = p.videoDuration || 0,
							{
								videoAudible: r
							} = t.videoData;
						D.va = p.isVideo ? 1 : 0, D.vh = R ? Math.floor(R.height) : 0, D.vw = R ? Math.floor(R.width) : 0, D.ve = p.videoVolume || 0, D.vc = Math.floor(e), D.vd = Math.floor(p.cumulativeViewedTime) || 0, D.vq = p.wasFullScreen || 0, D.vg = _[1].timeEntered ? 1 : 0, D.vb = _.TOTAL_MRC_VIEWABLE_TIME.totalTime + f.TOTAL_MRC_VIEWABLE_TIME, D.vs = d(r, _[1].timeEntered, i === s.a.VideoStarted, p.videoStarted), D.vt = d(r, _[1].timeEntered, i === s.a.VideoWatched25, p.watched25), D.vu = d(r, _[1].timeEntered, i === s.a.VideoWatched50, p.watched50), D.vv = d(r, _[1].timeEntered, i === s.a.VideoWatched75, p.watched75), D.vx = d(r, _[1].timeEntered, i === s.a.VideoWatched100, p.watched100);
						const o = e > 0 ? x >= Math.min(n.g, e / 2) : x >= n.g;
						D.vr = o ? 1 : 0, D.vy = _.FULL_IN_VIEW_AUDIBLE_TIME.totalTime + f.FULL_IN_VIEW_AUDIBLE_TIME, D.vi = _.AUDIBLE_TIME.totalTime + f.AUDIBLE_TIME, D.vz = _.FULL_IN_VIEW_TIME.totalTime + f.FULL_IN_VIEW_TIME, D.xa = A ? 1 : 0, D.xb = Math.max(_.TOTAL_MRC_VIEWABLE_TIME.maxContinuousTime, f.TOTAL_MRC_VIEWABLE_TIME), D.xc = m.seeked.value ? 1 : 0
					}
					return D
				}
		},
		"./src/reddit/helpers/graphql/helpers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/models/Gold/Award.ts");
			const r = (e, t = null) => {
					try {
						return JSON.parse(e)
					} catch (i) {
						return t
					}
				},
				s = e => {
					switch (e) {
						case "UP":
							return 1;
						case "DOWN":
							return -1;
						default:
							return 0
					}
				},
				o = e => e.reduce((e, {
					award: t,
					total: i
				}) => {
					if (void 0 !== t.icon) {
						const r = Object(n.i)(t, i);
						e.push(r)
					}
					return e
				}, []);
			var d;
			! function(e) {
				e[e.Seconds = 3] = "Seconds", e[e.Millis = 0] = "Millis"
			}(d || (d = {}));
			const a = (e, t = d.Seconds) => {
					if (!e) return 0;
					let i = Date.parse(e);
					return Number.isNaN(i) && (i = Date.parse(e.replace("+0000", "Z"))), Number.isNaN(i) || i <= 0 ? 0 : i - i % Math.pow(10, t)
				},
				l = e => {
					const t = {},
						i = e.split("?")[1];
					if (!i) return t;
					const n = i.split("&");
					for (const r of n) {
						const [e, i] = r.split("=");
						t[e] = i
					}
					return t
				};
			window.URL
		},
		"./src/reddit/helpers/graphql/normalizeAllowedPostTypesFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/models/Subreddit/index.ts");
			const r = {
				[n.a.Image]: "images",
				[n.a.Link]: "links",
				[n.a.Spoiler]: "spoilers",
				[n.a.Text]: "text",
				[n.a.Video]: "videos",
				[n.a.Poll]: "polls",
				[n.a.Gallery]: "galleries",
				[n.a.Talk]: "talks"
			};
			t.a = e => {
				return {
					images: !1,
					links: !1,
					spoilers: !1,
					text: !1,
					videos: !1,
					polls: !1,
					galleries: !1,
					talks: !1,
					...e.reduce((e, t) => (e[r[t]] = !0, e), {})
				}
			}
		},
		"./src/reddit/helpers/graphql/normalizeCommentFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/helpers/graphql/helpers.ts"),
				s = i("./src/reddit/helpers/graphql/normalizeModeratorPartFromGql/index.ts"),
				o = i("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts"),
				d = i("./src/reddit/helpers/graphql/normalizeUserFromGql/index.ts"),
				a = i("./src/reddit/models/Post/index.ts"),
				l = i("./src/reddit/models/PostCreationForm/index.ts"),
				u = i("./src/reddit/models/User/index.ts"),
				c = i("./src/reddit/reducers/posts/models/helpers.ts");
			const _ = e => ({
					richtextContent: e.content && e.content.richtext ? Object(r.f)(e.content.richtext) : {},
					type: "rtjson",
					rteMode: l.i.RICH_TEXT
				}),
				m = (e, t) => !(!e || !t || Object(o.e)(t) || !t.authorInfo) && Object(d.b)(e) === Object(d.b)(t.authorInfo),
				p = e => e && !Object(o.e)(e) && e.authorInfo ? Object(d.b)(e.authorInfo) : null;
			t.a = e => {
				var t, i, o;
				const {
					associatedAward: l,
					authorInfo: h,
					awardings: f,
					content: b,
					createdAt: g,
					distinguishedAs: w,
					editedAt: v,
					id: y,
					isGildable: E,
					isScoreHidden: S,
					isStickied: T,
					isSaved: O,
					parent: I,
					permalink: R,
					postInfo: F,
					score: N,
					voteState: C
				} = e, j = "ADMIN" === w, A = "MODERATOR" === w, x = f ? Object(r.b)(f) : void 0, D = h && h.__typename === u.c.AvailableRedditor && h.isCakeDayNow || !1, P = h && h.__typename === u.c.AvailableRedditor && h.isPremiumMember || !1, L = {
					allAwardings: x,
					awardCountsById: Object(c.g)(x),
					associatedAward: l,
					author: h && Object(d.b)(h) || n.E,
					authorId: h && h.id || "",
					body: b && b.html || "",
					bodyMD: b && b.markdown || "",
					created: Object(r.e)(g) / 1e3,
					distinguishType: w || "",
					editedAt: Object(r.e)(v) / 1e3 || null,
					id: y,
					isAdmin: j,
					isAuthorCakeday: D,
					isAuthorPremium: P,
					isGildable: E,
					isMod: A,
					isOp: m(h, F),
					isSaved: O,
					isScoreHidden: S,
					isStickied: T,
					markdown: b && b.markdown || "",
					media: _(e),
					parentId: I && I.id,
					permalink: `https://www.reddit.com${R}`,
					postAuthor: p(F),
					postId: F && F.id || "",
					postTitle: F && F.title || null,
					profileImage: null === (o = null === (i = null === (t = null == h ? void 0 : h.profile) || void 0 === t ? void 0 : t.styles) || void 0 === i ? void 0 : i.legacyIcon) || void 0 === o ? void 0 : o.url,
					score: N || 0,
					subredditId: "",
					voteState: Object(r.d)(C),
					modReports: [],
					userReports: [],
					...Object(s.a)(e),
					collapsed: !1,
					collapsedReason: null,
					collapsedBecauseCrowdControl: !1,
					collapsedReasonCode: null,
					isDeleted: !1,
					isLocked: !1,
					deletedBy: null,
					sendReplies: !0,
					isSystem: !1
				};
				return e.postInfo && Object(a.n)(e.postInfo) ? L.subredditId = e.postInfo.subreddit.id : e.postInfo && Object(a.l)(e.postInfo) && (L.subredditId = e.postInfo.profile.id), L
			}
		},
		"./src/reddit/helpers/graphql/normalizeDateTime/index.ts": function(e, t, i) {
			"use strict";
			t.a = function(e) {
				return e.replace(/(\+\d{2})(\d{2})$/, "$1:$2")
			}
		},
		"./src/reddit/helpers/graphql/normalizeFlairFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			}));
			var n = i("./src/reddit/models/Flair/index.ts"),
				r = i("./src/reddit/helpers/graphql/helpers.ts");
			const s = e => {
					switch (e) {
						case n.i.Dark:
							return n.e.Dark;
						case n.i.Light:
							return n.e.Light
					}
				},
				o = (e, t, i, s, o) => {
					const d = [];
					return o === n.f.Richtext ? (d.push({
						type: o,
						richtext: Object(r.f)(s, []) || [],
						...e
					}), t && d.push({
						type: n.f.Text,
						text: t,
						...e
					})) : d.push({
						type: o,
						text: i,
						...e
					}), d
				},
				d = e => {
					const {
						text: t,
						richtext: i
					} = e, {
						id: n,
						textColor: r,
						type: d,
						text: a,
						backgroundColor: l,
						cssClass: u
					} = e.template, c = {
						backgroundColor: l || "",
						cssClass: u,
						...n && {
							templateId: n
						},
						...r && {
							textColor: s(r)
						}
					};
					return o(c, a || "", t, i, d)
				},
				a = e => {
					const {
						text: t,
						richtext: i,
						cssClass: n
					} = e, {
						id: r,
						textColor: d,
						type: a,
						text: l,
						backgroundColor: u,
						cssClass: c,
						richtext: _
					} = e.template, m = {
						backgroundColor: (u || "").toLowerCase(),
						cssClass: n || c,
						...r && {
							templateId: r
						},
						...d && {
							textColor: s(d)
						}
					};
					return o(m, l || "", t || "", i || _, a)
				}
		},
		"./src/reddit/helpers/graphql/normalizeModeratorPartFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/helpers/graphql/helpers.ts");
			const r = (e, t) => !!e && (e.verdict === `MOD_${t.toUpperCase()}` || e.verdict === `ADMIN_${t.toUpperCase()}`),
				s = e => e && e.length ? e.map(e => {
					const t = e.authorInfo || e.author;
					return [e.reason || "", (null == t ? void 0 : t.displayName) || (null == t ? void 0 : t.name) || ""]
				}) : null,
				o = e => e && e.length ? e.map(e => [e.reason || "", e.count || 0, !1, !1]) : null;
			t.a = ({
				moderationInfo: e
			}) => {
				if (!e) return;
				const t = (e => {
						var t;
						return (null === (t = null == e ? void 0 : e.verdictBy) || void 0 === t ? void 0 : t.name) || null
					})(e),
					i = (e => e && Object(n.e)(e.verdictAt) || null)(e),
					d = r(e, "spammed"),
					a = r(e, "approved"),
					l = r(e, "removed"),
					{
						approvedBy: u = null,
						approvedAtUTC: c = null,
						bannedBy: _ = null,
						bannedAtUTC: m = null
					} = a ? {
						approvedBy: t,
						approvedAtUTC: i
					} : {
						bannedBy: t,
						bannedAtUTC: i
					};
				return {
					isSpam: d,
					isApproved: a,
					isRemoved: l,
					ignoreReports: e.isReportingIgnored,
					numReports: e.reportCount || null,
					modNote: e.modNote,
					approvedBy: u,
					approvedAtUTC: c,
					bannedBy: _,
					bannedAtUTC: m,
					...l && {
						modReasonBy: t,
						modRemovalReason: e.banReason
					},
					modReports: s(e.modReports) || [],
					userReports: o(e.userReports) || [],
					modReportsDismissed: s(e.dismissedModReports) || [],
					userReportsDismissed: o(e.dismissedUserReports) || [],
					modQueueTriggers: e.modQueueTriggers || [],
					lastAuthorModNote: e.lastAuthorModNote
				}
			}
		},
		"./src/reddit/helpers/graphql/normalizeMultiredditDataFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return h
			}));
			var n = i("./node_modules/lodash/forEach.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/merge.js"),
				o = i.n(s),
				d = i("./src/lib/env/index.ts"),
				a = i("./src/lib/sentry/index.ts"),
				l = i("./src/reddit/helpers/graphql/helpers.ts"),
				u = i("./src/reddit/helpers/graphql/normalizeProfileFromGql/index.ts"),
				c = i("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts"),
				_ = i("./src/reddit/models/GqlTopLevelField.ts"),
				m = i("./src/reddit/models/Multireddit/index.ts");

			function p(e) {
				const t = {
					multireddits: {},
					multiredditsByUser: {},
					subreddits: {},
					profiles: {}
				};
				if (!e) return t;
				const {
					path: i
				} = e, n = i.toLowerCase(), r = n.endsWith("/") ? n : n + "/", s = {
					created: 0,
					description: e.descriptionContent ? e.descriptionContent.markdown : "",
					descriptionHtml: null,
					descriptionRtJson: e.descriptionContent ? JSON.parse(e.descriptionContent.richtext) : null,
					displayText: e.displayName,
					followerCount: e.followerCount,
					name: e.name,
					icon: e.icon,
					isFavorited: e.isFavorited,
					isFollowed: e.isFollowed,
					isNSFW: e.isNsfw || !1,
					isQuarantined: e.isQuarantined || !1,
					subredditCount: e.subredditCount,
					ownerId: e.ownerInfo.id,
					url: r,
					visibility: e.visibility && e.visibility.toLowerCase() || m.e.Private
				};
				if (s.created = Object(l.e)(e.createdAt) / 1e3, e.sources) {
					s.subredditIds = [], s.profileIds = [];
					for (const {
							node: i
						} of e.sources.edges) {
						if (i.__typename === _.a.Subreddit) s.subredditIds.push(i.id), t.subreddits[i.id] = t.subreddits[i.id] || Object(c.a)(i);
						else if (i.__typename === _.a.Profile) s.profileIds.push(i.id), t.profiles[i.id] = t.profiles[i.id] || Object(u.a)(i);
						else {
							const e = `Unexpected Multireddit.sources node with type "${i.__typename}"`;
							Object(d.b)() ? a.c.captureMessage(e) : console.error(e)
						}
						i.isNSFW && (s.isNSFW = !0), i.isQuarantined && (s.isQuarantined = !0)
					}
				}
				return t.multireddits[r] = s, t.multiredditsByUser[e.ownerInfo.id] = [r], t
			}

			function h(e) {
				const t = {},
					i = {},
					n = {},
					s = {},
					d = e.map(p);
				for (const a of d) r()(a.multiredditsByUser, (e, t) => {
					i[t] = [...i[t] || [], ...e]
				}), o()(t, a.multireddits), o()(n, a.profiles), o()(s, a.subreddits);
				return {
					multireddits: t,
					multiredditsByUser: i,
					profiles: n,
					subreddits: s
				}
			}
			t.a = p
		},
		"./src/reddit/helpers/graphql/normalizePoll/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			}));
			var n = i("./src/reddit/helpers/graphql/helpers.ts");
			const r = ({
				predictionStatus: e,
				options: t,
				selectedOptionId: i,
				totalVoteCount: r,
				votingEndsAt: s,
				resolvedOptionId: o,
				voteUpdatesRemained: d
			}) => ({
				endsAt: Object(n.e)(s),
				options: t.map(({
					redditorStakeAmount: e,
					...t
				}) => ({
					userStakeAmount: e,
					...t
				})),
				predictionStatus: e,
				resolvedOptionId: o,
				totalVoters: r,
				userSelection: i,
				voteUpdatesRemained: d
			});
			t.a = ({
				isPrediction: e,
				predictionStatus: t,
				options: i,
				selectedOptionId: r,
				totalVoteCount: s,
				voteUpdatesRemained: o,
				votingEndsAt: d,
				totalStakeAmount: a,
				tournamentId: l,
				wonAmount: u,
				resolvedOptionId: c
			}) => ({
				isPrediction: e,
				predictionStatus: t,
				options: i.map(({
					redditorStakeAmount: e,
					...t
				}) => ({
					userStakeAmount: e,
					...t
				})),
				totalVoteCount: s,
				userSelection: r,
				voteUpdatesRemained: o,
				votingEndTimestamp: Object(n.e)(d),
				totalStakeAmount: a,
				tournamentId: l,
				userWonAmount: u,
				resolvedOptionId: c
			})
		},
		"./src/reddit/helpers/graphql/normalizePostFlairFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/models/Flair/index.ts");

			function r(e) {
				switch (e) {
					case n.h.LEFT:
						return n.b.Left;
					case n.h.RIGHT:
						return n.b.Right;
					default:
						return null
				}
			}

			function s({
				isEnabled: e = !1,
				position: t
			}) {
				return {
					isEnabled: e,
					position: r(t)
				}
			}
			t.a = ({
				postFlairSettings: e
			}) => ({
				...e && {
					displaySettings: e && s(e)
				}
			})
		},
		"./src/reddit/helpers/graphql/normalizePostFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return w
			})), i.d(t, "d", (function() {
				return A
			})), i.d(t, "b", (function() {
				return M
			})), i.d(t, "c", (function() {
				return z
			})), i.d(t, "f", (function() {
				return $
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/adEvents.ts"),
				s = i("./src/reddit/constants/thumbnails.ts"),
				o = i("./src/reddit/helpers/graphql/normalizeFlairFromGql/index.ts"),
				d = i("./src/reddit/helpers/graphql/normalizeModeratorPartFromGql/index.ts"),
				a = i("./src/reddit/helpers/graphql/normalizePoll/index.ts"),
				l = i("./src/reddit/helpers/graphql/normalizePredictionTournamentFromGql/index.ts");
			const u = /i\.redd\.it|v\.redd\.it|i\.reddituploads\.com/;
			var c = i("./src/reddit/models/Flair/index.ts"),
				_ = i("./src/reddit/models/Media/index.ts");
			const m = e => {
				switch (e) {
					case "IMPRESSION":
						return r.a.Impression;
					case "CLICK":
						return r.a.Click;
					case "COMMENTS_VIEW":
						return r.a.CommentsView;
					case "UPVOTE":
						return r.a.Upvote;
					case "DOWNVOTE":
						return r.a.Downvote;
					case "COMMENT_SUBMITTED":
						return r.a.CommentSubmitted;
					case "VIEWABLE_IMPRESSION":
						return r.a.ViewableImpression;
					case "COMMENT_UPVOTE":
						return r.a.CommentUpvote;
					case "COMMENT_DOWNVOTE":
						return r.a.CommentDownvote;
					case "VIDEO_VIEWABLE_IMPRESSION":
						return r.a.VideoViewableImpression;
					case "VIDEO_FULLY_VIEWABLE_IMPRESSION":
						return r.a.VideoFullyViewableImpression;
					case "VIDEO_PLAYED_WITH_SOUND":
						return r.a.VideoPlayedWithSound;
					case "VIDEO_PLAYED_EXPANDED":
						return r.a.VideoPlayedExpanded;
					case "VIDEO_WATCHED_25":
						return r.a.VideoWatched25;
					case "VIDEO_WATCHED_50":
						return r.a.VideoWatched50;
					case "VIDEO_WATCHED_75":
						return r.a.VideoWatched75;
					case "VIDEO_WATCHED_95":
						return r.a.VideoWatched95;
					case "VIDEO_WATCHED_100":
						return r.a.VideoWatched100;
					case "VIDEO_STARTED":
						return r.a.VideoStarted;
					case "VIDEO_WATCHED_3_SECS":
						return r.a.VideoWatchedSeconds3;
					case "VIDEO_WATCHED_5_SECS":
						return r.a.VideoWatchedSeconds5;
					case "VIDEO_WATCHED_10_SECS":
						return r.a.VideoWatchedSeconds10;
					case "VENDOR_FULLY_IN_VIEW":
						return r.a.VendorFullyInView;
					case "VENDOR_FULLY_IN_VIEW_5_SECS":
						return r.a.VendorFullyInViewSeconds5;
					case "VENDOR_FULLY_IN_VIEW_15_SECS":
						return r.a.VendorFullyInViewSeconds15;
					case "UNLOAD":
						return r.a.Unload;
					case "GROUP_M_VIEWABLE":
						return r.a.GroupMViewable;
					case "MRC_VIDEO_VIEWABLE_IMPRESSION":
						return r.a.DEPRECATED_MRCVideoViewableImpression;
					case "VIDEO_VENDOR_FULLY_VIEWABLE_50":
						return r.a.VideoVendorFullyViewable50;
					case "VIDEO_GROUP_M_VIEWABLE":
						return r.a.VideoGroupMViewable;
					case "GALLERY_ITEM_IMPRESSION":
						return r.a.GalleryItemImpression
				}
			};
			var p = i("./src/reddit/models/Post/index.ts"),
				h = i("./src/reddit/models/PostCreationForm/index.ts"),
				f = i("./src/reddit/models/RichTextJson/index.ts"),
				b = i("./src/reddit/models/User/index.ts"),
				g = i("./src/reddit/helpers/graphql/helpers.ts");
			const w = e => Object(p.i)(e) || Object(p.j)(e),
				v = [p.e.Embed, p.e.Image, p.e.Video, p.e.Gifvideo],
				y = e => {
					const t = e.thumbnail ? {
						url: e.thumbnail.url,
						...e.thumbnail.dimensions
					} : {
						url: s.a.DEFAULT,
						width: null,
						height: null
					};
					return Object(p.h)(e) && e.authorOnlyInfo && t.url ? t : Object(p.n)(e) && !e.subreddit.isThumbnailsEnabled ? e.isSelfPost ? {
						...t,
						url: s.a.SELF
					} : e.media && e.media.typeHint && v.includes(e.media.typeHint) ? {
						...t,
						url: s.a.IMAGE
					} : {
						...t,
						url: s.a.DEFAULT
					} : t
				},
				E = e => Object(p.n)(e) ? {
					id: e.subreddit.id,
					type: "subreddit"
				} : {
					id: e.profile.id,
					type: "profile"
				},
				S = ({
					flair: e,
					isNsfw: t,
					isSpoiler: i,
					...n
				}) => {
					const r = [];
					e && r.push(...Object(o.b)(e)), i && r.push({
						text: "spoiler",
						type: c.f.Spoiler
					}), t && r.push({
						text: "nsfw",
						type: c.f.Nsfw
					});
					let s = !1;
					return Object(p.l)(n) ? s = n.profile.isQuarantined : Object(p.n)(n) && (s = n.subreddit.isQuarantined), s && r.push({
						text: "quarantined",
						type: c.f.Quarantined
					}), r
				},
				T = e => e.map(({
					type: e,
					url: t
				}) => ({
					url: t || "",
					type: m(e)
				})),
				O = ({
					domain: e,
					url: t,
					...i
				}) => {
					if (Object(p.h)(i) || !i.isSelfPost && !(e => u.test(e))(e || "")) {
						const n = i.outboundLink && i.outboundLink.expiresAt && Object(g.e)(i.outboundLink.expiresAt);
						return {
							displayText: e || "",
							url: t || "",
							...i.outboundLink && {
								outboundUrl: i.outboundLink.url || void 0,
								outboundUrlCreated: n && n - 36e5 || void 0,
								outboundUrlExpiration: n || void 0
							}
						}
					}
					return null
				},
				I = {
					small: 108,
					medium: 216,
					large: 320,
					xlarge: 640,
					xxlarge: 960,
					xxxlarge: 1080
				},
				R = {
					originalObfuscated: "dynamic",
					smallObfuscated: 108,
					mediumObfuscated: 216,
					largeObfuscated: 320,
					xlargeObfuscated: 640,
					xxlargeObfuscated: 960,
					xxxlargeObfuscated: 1080
				},
				F = (e, t) => {
					const i = e && (t ? e.animated : e.still);
					if (!i) return [];
					const n = e && e.still && e.still.source ? e.still.source.dimensions.width : 0;
					return Object.keys(I).reduce((e, r) => {
						const s = i[t ? `${t}_${r}` : r];
						if (!s || I[r] > n) return e;
						const o = {
							url: s.url,
							...s.dimensions
						};
						return o ? [...e, o] : e
					}, [])
				},
				N = (e, t, i) => {
					const n = i[t];
					return n && n.url && n.dimensions && n.dimensions.width && n.dimensions.height && e.push({
						x: n.dimensions.width,
						y: n.dimensions.height,
						u: n.url
					}), e
				},
				C = e => Object.keys(I).reduce((t, i) => N(t, i, e), []),
				j = e => Object.keys(R).reduce((t, i) => N(t, i, e), []),
				A = e => Object(g.f)(e, f.i),
				x = e => {
					const {
						media: t,
						isSelfPost: i
					} = e;
					if (i) return e.content && e.content.richtext ? _.o.RTJSON : _.o.TEXT;
					if (e.gallery) return _.o.GALLERY;
					switch (t && t.typeHint) {
						case p.e.Image:
							return _.o.IMAGE;
						case p.e.Gifvideo:
							return _.o.GIFVIDEO;
						case p.e.Video:
							return _.o.VIDEO;
						case p.e.Embed:
							return _.o.EMBED;
						case p.e.RPAN:
							return _.o.LIVEVIDEO;
						default:
							return null
					}
				},
				D = e => e.authorOnlyInfo && e.authorOnlyInfo.contentMode === p.d.Markdown ? h.i.MARKDOWN : h.i.RICH_TEXT,
				P = e => Math.min(e.height, e.width),
				L = (e, t) => {
					const {
						media: i,
						content: n
					} = e, r = (e => e.isSpoiler || e.isNsfw)(e) ? i && i.obfuscatedStill && i.obfuscatedStill.source && i.obfuscatedStill.source.url : null;
					switch (t) {
						case _.o.VIDEO: {
							const e = 400,
								n = F(i),
								s = i && i.still && i.still.source && {
									url: i.still.source.url,
									...i.still.source.dimensions
								};
							let o;
							if (n.length) {
								o = n.reduce((e, t) => e.width > t.width ? e : t);
								const t = n.reduce((t, i) => P(i) > e && s && P(i) < P(s) ? [...t, i] : t, []);
								t.length && (o = t.reduce((e, t) => P(e) < P(t) ? e : t))
							} else o = s;
							return {
								type: t,
								obfuscated: r,
								hlsUrl: i && i.streaming && i.streaming.hlsUrl || "",
								dashUrl: i && i.streaming && i.streaming.dashUrl || "",
								isGif: !!i && !!i.streaming && i.streaming.isGif,
								scrubberThumbSource: i && i.streaming && i.streaming.scrubberMediaUrl || "",
								width: i && i.streaming ? i.streaming.dimensions.width : 0,
								height: i && i.streaming ? i.streaming.dimensions.height : 0,
								posterUrl: o && o.url || void 0
							}
						}
						case _.o.LIVEVIDEO:
							return {
								type: t, obfuscated: null, hlsUrl: i && i.RPAN && i.RPAN.hlsUrl || "", scrubberThumbSource: i && i.RPAN && i.RPAN.scrubberMediaUrl || ""
							};
						case _.o.TEXT:
							return {
								type: t, obfuscated: null, markdownContent: e.content ? e.content.markdown : "", content: "", rteMode: D(e)
							};
						case _.o.RTJSON:
							return {
								type: t, obfuscated: null, markdownContent: e.content ? e.content.markdown : "", richtextContent: A(n.richtext), content: "", rteMode: D(e), mediaMetadata: W(e)
							};
						case _.o.IMAGE: {
							const n = i && i.animated && i.animated.gif_source ? "gif" : null;
							let s = "";
							return "i.redd.it" === e.domain && e.url ? s = e.url : i && i.still && i.still.source && (s = i.still.source.url), {
								type: t,
								obfuscated: r,
								resolutions: F(i, n),
								width: i && i.still && i.still.source ? i.still.source.dimensions.width : 0,
								height: i && i.still && i.still.source ? i.still.source.dimensions.height : 0,
								content: s
							}
						}
						case _.o.EMBED:
							return {
								type: t, obfuscated: r, width: i && i.video && i.video.dimensions && i.video.dimensions.width || 0, height: i && i.video && i.video.dimensions && i.video.dimensions.height || 0, provider: i && i.video && i.video.attribution && i.video.attribution.providerName || "", content: i && i.video && i.video.embedUrl ? i.video.embedUrl : ""
							};
						case _.o.GIFVIDEO:
							return {
								type: t, obfuscated: r, resolutions: F(i, "mp4"), width: i && i.still && i.still.source ? i.still.source.dimensions.width : 0, height: i && i.still && i.still.source ? i.still.source.dimensions.height : 0, gifBackgroundImage: i && i.still && i.still.source ? i.still.source.url : "", content: i && i.animated && i.animated.mp4_source ? i.animated.mp4_source.url : ""
							};
						case _.o.GALLERY: {
							const i = K(e.gallery);
							return {
								type: t,
								obfuscated: null,
								gallery: i ? i.gallery : null,
								mediaMetadata: i ? i.mediaMetadata : void 0,
								crossPostRootId: Y(e.crosspostRoot),
								crossPostParentId: Y(e.crosspostRoot),
								numCrossposts: e.crosspostCount || 0,
								isCrosspostable: e.isCrosspostable
							}
						}
						default:
							return null
					}
				},
				k = {
					events: [],
					impressionId: null,
					impressionIdStr: null,
					isBlank: !1,
					isSponsored: !1
				},
				B = /\.gif\?(.*$)/,
				M = e => {
					const t = e.adEvents.find(e => m(e.type) === r.a.Impression),
						i = t && t.url && t.url.match(B);
					return i && i[1] ? `t3_${i[1]}` : null
				},
				U = e => {
					const {
						adEvents: t,
						callToAction: i,
						domain: n,
						impressionId: r,
						isBlank: s,
						isCreatedFromAdsUi: o
					} = e;
					return {
						callToAction: i,
						domainOverride: n,
						events: T(t),
						impressionId: r,
						impressionIdStr: null,
						isBlank: s,
						isCreatedFromAdsUi: o,
						isSponsored: !0
					}
				},
				G = e => e ? e.toLowerCase() : null,
				q = ({
					isLive: e,
					startsAt: t,
					endsAt: i
				}) => ({
					eventIsLive: e,
					eventStart: Math.round(Date.parse(t) / 1e3),
					eventEnd: Math.round(Date.parse(i) / 1e3)
				});
			t.a = e => {
				const t = {
						post: $(e)
					},
					{
						crosspostRoot: i
					} = e;
				return i && i.type === p.a.Post && i.postInfo && (t.crosspost = $(i.postInfo)), t
			};
			const V = e => e && e.__typename !== b.c.DeletedRedditor ? "name" in e && e.name || "" : n.E,
				H = e => !(!e || e.__typename !== b.c.AvailableRedditor) && !!e.isPremiumMember,
				W = e => e.content && e.content.richtextMedia && e.content.richtextMedia.length ? z(e.content.richtextMedia) : null,
				z = (e, t) => e.length ? e.reduce((e, t) => {
					switch (t.__typename) {
						case p.c.ImageAsset:
							"image/gif" === t.mimetype ? e[t.id] = {
								e: f.r,
								id: t.id,
								s: {
									gif: t.url,
									x: t.height,
									y: t.width
								}
							} : e[t.id] = {
								e: f.s,
								id: t.id,
								s: {
									u: t.url,
									x: t.height,
									y: t.width
								}
							};
							break;
						case p.c.VideoAsset:
							e[t.id] = {
								dashUrl: t.dashUrl,
								e: f.t,
								hlsUrl: t.hlsUrl,
								id: t.id,
								x: t.height,
								y: t.width
							}
					}
					return e
				}, {}) : null,
				K = e => {
					if (!(e && "items" in e)) return null;
					const t = e.items,
						i = {},
						n = {
							items: []
						};
					return t.map(e => {
						if (!e.media) return;
						const t = e.media.id;
						if (n.items.push({
								caption: e.caption || void 0,
								id: parseInt(e.id),
								mediaId: t,
								outboundUrl: e.outboundUrl || void 0,
								callToAction: e.callToAction || void 0,
								displayAddress: e.displayAddress || void 0,
								adEvents: T(e.adEvents || [])
							}), t && e.media) {
							const n = (e => e.length ? e.reduce((e, t) => {
								let i;
								return i = !!t.url && t.url.endsWith(".gif") ? {
									x: t.width || 0,
									y: t.height || 0,
									gif: t.url
								} : {
									x: t.width || 0,
									y: t.height || 0,
									u: t.url
								}, e[t.id] = {
									e: f.s,
									id: t.id,
									m: t.mimetype || "",
									o: j(t),
									p: C(t),
									s: i
								}, e
							}, {}) : null)([e.media]);
							n && (i[t] = n[t])
						}
					}), {
						gallery: n.items.length > 0 ? n : null,
						mediaMetadata: Object.keys(i).length > 0 ? i : null
					}
				},
				Y = e => e ? e.type === p.a.Post ? e.postInfo && e.postInfo.id : e.comment && e.comment.id : null,
				$ = e => {
					var t, i;
					const {
						audioRoom: r,
						awardings: s,
						commentCount: o,
						createdAt: u,
						crosspostCount: c,
						crosspostRoot: _,
						discussionType: m,
						domain: h,
						id: f,
						isArchived: b,
						isCreatedFromAdsUi: w,
						isContestMode: v,
						isFollowed: T,
						isGildable: I,
						isHidden: R,
						isLocked: F,
						isNsfw: N,
						isOriginalContent: C,
						isSaved: j,
						isSpoiler: A,
						isStickied: D,
						liveCommentsWebsocket: P,
						permalink: B,
						removedBy: M,
						removedByCategory: W,
						poll: z,
						predictionTournament: K,
						score: $,
						suggestedCommentSort: Q,
						title: J,
						topAwardedType: X,
						upvoteRatio: Z,
						viewCount: ee,
						voteState: te
					} = e, ie = W && "NONE" !== W ? W.toLowerCase() : null, ne = Y(_), re = {
						allAwardings: s ? Object(g.b)(s) : void 0,
						audioRoom: r,
						author: n.E,
						authorId: "",
						authorIsBlocked: !1,
						approvedAtUTC: null,
						approvedBy: null,
						bannedAtUTC: null,
						bannedBy: null,
						belongsTo: {
							id: "",
							type: "subreddit"
						},
						contestMode: v,
						created: Object(g.e)(u),
						crosspostParentId: ne,
						crosspostRootId: ne,
						discussionType: m,
						distinguishType: null,
						domain: h || "",
						flair: S(e),
						hidden: R,
						id: f,
						ignoreReports: !1,
						isApproved: !1,
						isArchived: b,
						isAuthorPremium: !1,
						isCreatedFromAdsUi: w,
						isCrosspostable: !1,
						isEligibleForLinkedPosts: null !== (t = e.isEligibleForLinkedPosts) && void 0 !== t && t,
						isEligibleForQASchema: null !== (i = e.isEligibleForQASchema) && void 0 !== i && i,
						isFollowed: T,
						isGildable: I,
						isLocked: F,
						isMediaOnly: !1,
						isMeta: !1,
						isNSFW: N,
						isOriginalContent: C,
						isPinned: !1,
						isRemoved: !1,
						isScoreHidden: null === $,
						isSpam: !1,
						isSpoiler: A,
						isStickied: D,
						liveCommentsWebsocket: P,
						media: null,
						modReports: [],
						numComments: o || 0,
						numCrossposts: c || 0,
						numReports: null,
						permalink: `https://www.reddit.com${B}`,
						pollData: z && Object(a.a)(z) || void 0,
						postCategories: null,
						postId: f,
						predictionTournament: K && Object(l.a)(K) || void 0,
						previewComments: [],
						removedBy: M && M.name ? M.name : null,
						removedByCategory: ie,
						saved: j,
						score: null !== $ && $ > 0 ? $ : 0,
						sendReplies: !1,
						source: O(e),
						suggestedSort: Q && n.u[Q] || null,
						thumbnail: {
							height: null,
							url: "",
							width: null
						},
						title: J || "",
						topAwardedType: X || void 0,
						upvoteRatio: Z,
						userReports: [],
						viewCount: ee || 0,
						voteState: te ? Object(g.d)(te) : 0,
						...Object(p.h)(e) ? U(e) : k,
						...Object(d.a)(e)
					};
					if (Object(p.i)(e) || Object(p.j)(e)) return re;
					const {
						authorInfo: se,
						authorOnlyInfo: oe,
						distinguishedAs: de,
						isCrosspostable: ae,
						isMediaOnly: le,
						isPollIncluded: ue,
						media: ce,
						postEventInfo: _e
					} = e, me = (e => e && e.still && e.still.source ? {
						url: e.still.source.url,
						...e.still.source.dimensions
					} : void 0)(ce);
					return {
						...re,
						author: se && V(se) || n.E,
						authorId: se && se.id || "",
						authorIsBlocked: !1,
						belongsTo: E(e),
						distinguishType: G(de),
						isCrosspostable: ae,
						isMediaOnly: le,
						isMeta: ue,
						isAuthorPremium: H(se),
						media: L(e, x(e)),
						thumbnail: y(e),
						...me && {
							preview: me
						},
						...oe && {
							sendReplies: oe.isReceivingPostReplies
						},
						..._e && {
							eventInfo: q(_e)
						}
					}
				}
		},
		"./src/reddit/helpers/graphql/normalizePredictionTournamentFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./src/reddit/components/Econ/Prediction/helpers.ts"),
				r = i("./src/reddit/helpers/graphql/normalizeDateTime/index.ts"),
				s = i("./src/reddit/models/Prediction/Tournament/index.ts");

			function o({
				tournamentId: e,
				name: t,
				status: i,
				themeId: o,
				tokenIcon: a,
				totalParticipantsCount: u = null,
				createdAt: c,
				endedAt: _,
				predictions: m,
				predictionPosts: p,
				predictionChipPackages: h,
				latestParticipants: f,
				isActive: b
			}) {
				const g = {
					tournamentId: e,
					name: t || "",
					status: i || s.a.Draft,
					theme: o,
					isActive: b
				};
				return void 0 !== a && (g.tokenIconUrl = (null == a ? void 0 : a.url) || null), null !== u && (g.totalParticipantsCount = u), c && (g.createdAt = new Date(Object(r.a)(c)).valueOf()), _ && (g.endedAt = new Date(Object(r.a)(_)).valueOf()), m && (g.totalPredictionsCount = m.filter(({
					status: e
				}) => !Object(n.a)(e)).length, g.predictions = m.map(d).filter(e => Boolean(e))), p && (g.totalPredictionsCount = p.filter(e => {
					var t;
					return !Object(n.a)(null === (t = null == e ? void 0 : e.poll) || void 0 === t ? void 0 : t.predictionStatus)
				}).length, g.predictionPosts = p.filter(e => null !== e).map(e => e.id)), f && (g.latestParticipants = f.map(l)), h && (g.predictionChipPackages = h), g
			}

			function d({
				title: e,
				createdAt: t,
				endsAt: i,
				options: n,
				isNsfw: s,
				totalVoteCount: o,
				totalStakeAmount: d,
				wonAmount: l,
				selectedOptionId: u,
				resolvedOptionId: c,
				voteUpdatesRemained: _,
				status: m,
				...p
			}) {
				return e && n ? {
					title: e,
					createdAt: new Date(Object(r.a)(t)).valueOf(),
					endsAt: new Date(Object(r.a)(i)).valueOf(),
					options: n.map(a),
					isNSFW: s,
					totalVoteCount: null != o ? o : null,
					totalStakeAmount: null != d ? d : null,
					wonAmount: null != l ? l : null,
					selectedOptionId: null != u ? u : null,
					resolvedOptionId: null != c ? c : null,
					status: null != m ? m : null,
					voteUpdatesRemained: null != _ ? _ : null,
					...p
				} : null
			}

			function a({
				redditorStakeAmount: e,
				text: t,
				...i
			}) {
				return {
					text: t || "",
					userStakeAmount: e,
					...i
				}
			}

			function l({
				name: e,
				profile: t,
				icon: i
			}) {
				return {
					name: e,
					profile: {
						isNsfw: Boolean(t && t.isNsfw)
					},
					icon: i
				}
			}
		},
		"./src/reddit/helpers/graphql/normalizePreferencesFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/models/User/index.ts"),
				s = i("./src/reddit/helpers/graphql/normalizeDateTime/index.ts");
			t.a = (e, t) => ({
				allowClickTracking: e.isClickTrackingEnabled,
				autoplayVideo: !e.isVideoAutoplayDisabled,
				defaultCommentSort: e.defaultCommentSort && r.b[e.defaultCommentSort] ? n.u[e.defaultCommentSort] : n.u.CONFIDENCE,
				geopopular: e.geopopular,
				hideNSFW: e.isNsfwMediaBlocked,
				ignoreSuggestedSort: e.isSuggestedSortIgnored,
				labelNSFW: e.isNsfwLabelShown,
				markMessagesRead: e.isMessageAutoReadEnabled,
				nightmode: e.isNightModeEnabled,
				over18: e.isNsfwContentShown,
				reduceAnimationsFromAwards: e.isReduceAnimationsFromAwardsEnabled,
				showLocationBasedRecommendations: e.isLocationBasedRecommendationEnabled,
				account: {
					openPostInNewTab: e.isNewTabOpenedForPostView,
					rpanDuDismissalTime: e.rpanDuDismissedAt && Object(s.a)(e.rpanDuDismissedAt),
					sort: e.globalCommunityPostFeedSort.range ? `${e.globalCommunityPostFeedSort.sort.toLowerCase()}_${e.globalCommunityPostFeedSort.range.toLowerCase()}` : e.globalCommunityPostFeedSort.sort.toLowerCase(),
					showPresence: e.isOnlinePresenceShown,
					showRpanDu: e.isRpanDuShown,
					stylesEnabled: e.isCommunityStylingEnabled,
					rememberCommunitySort: e.isCommunityPostFeedSortingPreserved,
					useMarkdown: e.isMarkdownDefaultEditorMode,
					rememberCommunityLayout: e.isCommunityLayoutPreserved,
					layout: e.postFeedLayout.toLowerCase(),
					hasSeenCustomizeFlyout: t && t.isDefaultPostLayoutAware,
					surveyLastSeenTime: e.surveyLastSeenAt ? new Date(e.surveyLastSeenAt).getTime() : void 0
				}
			})
		},
		"./src/reddit/helpers/graphql/normalizeProfileFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return d
			}));
			var n = i("./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts"),
				r = i("./src/reddit/models/Subreddit/index.ts"),
				s = i("./src/reddit/models/User/index.ts"),
				o = i("./src/reddit/models/WhitelistStatus/index.ts");
			const d = ({
				pageInfo: e,
				edges: t
			}) => {
				const i = {
					moderatedSubredditIds: [],
					pageInfo: e,
					subreddits: {}
				};
				for (const {
						node: r
					} of t) {
					const e = Object(n.a)(r);
					i.subreddits[e.id] = e, i.moderatedSubredditIds.push(e.id)
				}
				return i
			};
			t.a = ({
				name: e,
				path: t,
				redditorInfo: i,
				styles: n,
				wls: d,
				id: a,
				title: l,
				isQuarantined: u,
				isNSFW: c,
				subscribers: _
			}) => {
				const {
					height: m,
					icon: p,
					width: h
				} = n && n.legacyIcon && {
					height: n.legacyIcon.dimensions.height,
					icon: n.legacyIcon.url,
					width: n.legacyIcon.dimensions.width
				} || {
					height: null,
					icon: n && n.icon || "",
					width: null
				}, f = n && n.legacyPrimaryColor, b = i && i.__typename === s.c.AvailableRedditor && i.prefixedName || "", g = i && i.__typename === s.c.AvailableRedditor && i.isAcceptingFollowers;
				return {
					...g && {
						acceptFollowers: g
					},
					communityIcon: p,
					displayText: b,
					icon: {
						url: p,
						width: h,
						height: m
					},
					id: a,
					isNSFW: c,
					isQuarantined: u,
					name: e.substr(2),
					...f && {
						primaryColor: f
					},
					subscribers: _,
					title: l,
					type: r.f.User,
					url: t,
					...d && {
						whitelistStatus: d.toLowerCase(),
						wls: o.b[d]
					}
				}
			}
		},
		"./src/reddit/helpers/graphql/normalizeSubredditAboutFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			}));
			var n = i("./src/reddit/helpers/graphql/helpers.ts"),
				r = i("./src/reddit/helpers/graphql/normalizeAllowedPostTypesFromGql/index.ts");
			const s = e => {
					var t, i;
					const s = Object(r.a)(e.allowedPostTypes),
						o = e.moderation ? e.moderation.coins : void 0;
					return {
						[e.id]: {
							accountsActive: e.activeCount,
							activity7Day: e.activity7Day,
							allOriginalContent: !1,
							allowedPostTypes: s,
							allowChatPostCreation: e.isChatPostCreationAllowed,
							coins: o,
							created: Object(n.e)(e.createdAt) / 1e3,
							disableContributorRequests: !1,
							emojisEnabled: !0,
							isChatPostFeatureEnabled: e.isChatPostFeatureEnabled,
							isCrosspostableSubreddit: e.isCrosspostDestination,
							isLiveStreamingEnabled: e.liveStreamingInfo.isLiveStreamingEnabled,
							originalContentTagEnabled: !0,
							powerups: e.powerups,
							publicDescription: e.publicDescription.markdown,
							quarantineMessage: null === (t = null == e ? void 0 : e.quarantineMessage) || void 0 === t ? void 0 : t.markdown,
							quarantineMessageHtml: null === (i = null == e ? void 0 : e.quarantineMessage) || void 0 === i ? void 0 : i.html,
							notificationLevel: e.notificationLevel,
							detectedLanguage: e.detectedLanguage,
							restrictCommenting: !1,
							restrictPosting: !0,
							showMedia: !0,
							subscribers: e.subscribersCount,
							userIsBanned: e.isUserBanned,
							userIsContributor: e.isContributor,
							userIsSubscriber: e.isSubscribed
						}
					}
				},
				o = e => e.reduce((e, t) => ({
					...e,
					...s(t)
				}), {});
			t.a = s
		},
		"./src/reddit/helpers/graphql/normalizeSubredditFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "g", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "e", (function() {
				return h
			}));
			var n = i("./node_modules/lodash/some.js"),
				r = i.n(n),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/reddit/helpers/graphql/normalizePostFromGql/index.ts"),
				d = i("./src/reddit/models/GqlTopLevelField.ts"),
				a = i("./src/reddit/models/WhitelistStatus/index.ts");
			const l = e => e.subredditRecommendations.recommendations.map(c).reduce((e, t) => (e[t.id] = t, e), {}),
				u = e => {
					const t = {
							posts: {},
							subredditTopContent: {}
						},
						i = [],
						{
							__typename: n
						} = e;
					if (n !== d.a.Subreddit) return null;
					const {
						id: r,
						isSubscribed: a,
						name: l,
						topContent: u
					} = e, {
						posts: c,
						range: _
					} = u;
					return c.forEach(e => {
						const {
							post: n,
							crosspost: r
						} = Object(o.a)(e), s = n.id;
						if (t.posts[s] = n, i.push(s), r) {
							const e = r.id;
							t.posts[e] = r
						}
					}), t.subredditTopContent[l.toLowerCase()] = {
						id: r,
						isSubscribed: a,
						name: l,
						postIds: i,
						range: s.hc[_]
					}, t
				},
				c = e => {
					const {
						answerableQuestions: t,
						path: i,
						prefixedName: n,
						type: r,
						styles: s,
						wls: o,
						id: d,
						isQuarantined: l,
						isNSFW: u,
						isSubscribed: c,
						name: _,
						subscribers: m,
						title: p,
						isFreeFormReportingAllowed: h
					} = e, {
						height: f,
						icon: b,
						width: g
					} = s && s.legacyIcon && {
						height: s.legacyIcon.dimensions.height,
						icon: s.legacyIcon.url,
						width: s.legacyIcon.dimensions.width
					} || {
						height: null,
						icon: s && s.icon || "",
						width: null
					}, w = s && s.primaryColor, v = s && s.icon;
					return {
						url: i,
						displayText: n,
						icon: {
							url: b,
							width: g,
							height: f
						},
						...v && {
							communityIcon: v
						},
						type: r.toLowerCase(),
						primaryColor: w || "",
						...o && {
							whitelistStatus: o.toLowerCase(),
							wls: a.b[o]
						},
						freeFormReports: h,
						answerableQuestions: t,
						id: d,
						isQuarantined: l,
						isNSFW: u,
						isSubscribed: c,
						name: _,
						subscribers: m,
						title: p
					}
				},
				_ = (e, t) => ({
					isMod: r()(e),
					modAccess: e.isAccessEnabled,
					modConfig: e.isConfigEditingAllowed,
					modFlair: e.isFlairEditingAllowed,
					modFull: e.isAllAllowed,
					modMail: e.isMailEditingAllowed,
					modNone: !r()(e),
					modPost: e.isPostEditingAllowed,
					modWiki: e.isWikiEditingAllowed,
					isSubscriber: t
				}),
				m = e => e.reduce((e, t) => {
					const i = c(t);
					return e[i.id] = i, e
				}, {}),
				p = e => e,
				h = e => e.subredditsInfoByIds.reduce((e, {
					id: t,
					notificationSettings: i
				}) => (e[t] = i, e), {});
			t.a = c
		},
		"./src/reddit/helpers/graphql/normalizeSubredditModPermissions/index.ts": function(e, t, i) {
			"use strict";
			t.a = ({
				isAccessEnabled: e,
				isAllAllowed: t,
				isChatConfigEditingAllowed: i,
				isChatOperator: n,
				isConfigEditingAllowed: r,
				isFlairEditingAllowed: s,
				isMailEditingAllowed: o,
				isPostEditingAllowed: d,
				isWikiEditingAllowed: a
			}) => ({
				access: !!e,
				all: !!t,
				chatConfig: !!i,
				chatOperator: !!n,
				config: !!r,
				flair: !!s,
				mail: !!o,
				posts: !!d,
				wiki: !!a
			})
		},
		"./src/reddit/helpers/graphql/normalizeSubredditRulesFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/helpers/graphql/helpers.ts"),
				r = i("./src/reddit/models/Rule/index.ts");
			t.a = e => ({
				rules: e.map(e => ({
					kind: r.c[e.kind],
					description: e.content.markdown,
					descriptionRichText: e.content.richtext,
					shortName: e.name,
					violationReason: e.violationReason || "",
					createdUtc: Object(n.e)(e.createdAt, n.a.Millis),
					priority: e.priority
				}))
			})
		},
		"./src/reddit/helpers/graphql/normalizeSubredditStylesFromGql/index.ts": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			t.a = e => {
				var t;
				const i = {
					menuPosition: e.menuPosition ? e.menuPosition.toLowerCase() : void 0,
					bannerCommunityNameFormat: e.bannerCommunityNameFormat ? e.bannerCommunityNameFormat.toLowerCase() : void 0,
					bannerShowCommunityIcon: e.bannerShowCommunityIcon ? e.bannerShowCommunityIcon.toLowerCase() : void 0,
					bannerHeight: e.bannerHeight ? e.bannerHeight.toLowerCase() : void 0,
					postVoteIcons: e.postVoteIcons ? e.postVoteIcons.toLowerCase() : void 0,
					submenuBackgroundStyle: e.submenuBackgroundStyle ? e.submenuBackgroundStyle.toLowerCase() : void 0,
					backgroundImagePosition: e.backgroundImagePosition ? e.backgroundImagePosition.toLowerCase() : void 0,
					bannerBackgroundImagePosition: e.bannerBackgroundImagePosition ? e.bannerBackgroundImagePosition.toLowerCase() : void 0,
					bannerPositionedImagePosition: e.bannerPositionedImagePosition ? e.bannerPositionedImagePosition.toLowerCase() : void 0,
					postBackgroundImagePosition: e.postBackgroundImagePosition ? e.postBackgroundImagePosition.toLowerCase() : void 0,
					postPlaceholderImagePosition: e.postPlaceholderImagePosition ? e.postPlaceholderImagePosition.toLowerCase() : void 0,
					menuBackgroundOpacity: e.menuBackgroundOpacity || void 0,
					backgroundImage: e.backgroundImage || void 0,
					bannerBackgroundImage: e.bannerBackgroundImage || void 0,
					bannerPositionedImage: e.bannerPositionedImage || void 0,
					communityIcon: e.icon || (null === (t = e.legacyIcon) || void 0 === t ? void 0 : t.url) || void 0,
					menuBackgroundImage: e.menuBackgroundImage || void 0,
					postBackgroundImage: e.postBackgroundImage || void 0,
					postDownvoteIconActive: e.postDownvoteIconActive || void 0,
					postDownvoteIconInactive: e.postDownvoteIconInactive || void 0,
					postPlaceholderImage: e.postPlaceholderImage || void 0,
					postUpvoteIconActive: e.postUpvoteIconActive || void 0,
					postUpvoteIconInactive: e.postUpvoteIconInactive || void 0,
					bannerBackgroundColor: e.bannerBackgroundColor || void 0,
					bannerOverlayColor: e.bannerOverlayColor || void 0,
					menuBackgroundColor: e.menuBackgroundColor || void 0,
					menuLinkColorActive: e.menuLinkColorActive || void 0,
					menuLinkColorInactive: e.menuLinkColorInactive || void 0,
					menuLinkColorHover: e.menuLinkColorHover || void 0,
					submenuBackgroundColor: e.submenuBackgroundColor || void 0,
					primaryColor: e.primaryColor || void 0,
					highlightColor: e.highlightColor || void 0,
					postTitleColor: e.postTitleColor || void 0,
					backgroundColor: e.backgroundColor || void 0,
					postBackgroundColor: e.postBackgroundColor || void 0,
					postDownvoteCountColor: e.postDownvoteCountColor || void 0,
					postUpvoteCountColor: e.postUpvoteCountColor || void 0,
					mobileKeyColor: e.mobileKeyColor || void 0,
					mobileBannerImage: e.mobileBannerImage || void 0,
					sidebarWidgetHeaderColor: e.sidebarWidgetHeaderColor || void 0,
					sidebarWidgetBackgroundColor: e.sidebarWidgetBackgroundColor || void 0,
					secondaryBannerPositionedImage: e.secondaryBannerPositionedImage || void 0
				};
				return Object.keys(i).forEach(e => {
					void 0 === i[e] && delete i[e]
				}), i
			}
		},
		"./src/reddit/helpers/graphql/normalizeSubredditWidgetsFromGql/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/sentry/index.ts"),
				r = i("./src/reddit/helpers/graphql/normalizeSubredditRulesFromGql/index.ts"),
				s = i("./src/reddit/models/Flair/index.ts"),
				o = i("./src/reddit/models/Widgets/index.ts");
			t.a = e => {
				const {
					rules: t,
					widgets: i,
					name: r
				} = e, s = {
					items: {},
					layout: {
						topbar: {
							order: []
						},
						sidebar: {
							order: []
						},
						moderatorWidget: "",
						idCardWidget: ""
					}
				};
				if (!i) {
					const e = new Error(`Subreddit widgets: widgets not loaded, upstream error on subreddit ${r} `);
					return n.c.captureException(e), s
				}
				const {
					orderedSidebarWidgets: h,
					orderedTopbarWidgets: f
				} = i;
				for (const n of f) {
					if (n.__typename !== o.d.Menu) break;
					s.items[n.id] = d(n), s.layout.topbar.order.push(n.id)
				}
				for (const n of h) switch (n.__typename !== o.c.IdCard && n.__typename !== o.c.Moderators && s.layout.sidebar.order.push(n.id), n.__typename) {
					case o.c.Button:
						s.items[n.id] = a(n);
						break;
					case o.c.Calendar:
						s.items[n.id] = l(n);
						break;
					case o.c.CommunityList:
						s.items[n.id] = u(n);
						break;
					case o.c.Custom:
						s.items[n.id] = c(n);
						break;
					case o.c.IdCard:
						s.items[n.id] = _(n), s.layout.idCardWidget = n.id;
						break;
					case o.c.Image:
						s.items[n.id] = m(n);
						break;
					case o.c.Moderators:
						s.items[n.id] = p(n), s.layout.moderatorWidget = n.id;
						break;
					case o.c.PostFlair:
						s.items[n.id] = b(n);
						break;
					case o.c.SubredditRules:
						s.items[n.id] = g({
							widget: n,
							rules: t,
							name: r
						});
						break;
					case o.c.TextArea:
						s.items[n.id] = w(n)
				}
				return s
			};
			const d = e => ({
					...v(e),
					kind: o.j.Menu,
					showWiki: e.isWikiShown,
					data: e.menus
				}),
				a = e => ({
					...v(e),
					kind: o.i.Button,
					shortName: e.shortName,
					description: e.description.markdown,
					descriptionHtml: e.description.html,
					descriptionRichtext: e.description.richtext,
					buttons: e.buttons.map(e => {
						var t, i, n, r, s, d, a, l;
						return {
							text: e.text,
							hoverState: e.hoverState.kind === o.e.Image ? {
								kind: o.k.Image,
								url: (null === (t = e.hoverState.media.source) || void 0 === t ? void 0 : t.url) || "",
								height: (null === (i = e.hoverState.media.source) || void 0 === i ? void 0 : i.dimensions.height) || 0,
								width: (null === (n = e.hoverState.media.source) || void 0 === n ? void 0 : n.dimensions.width) || 0
							} : (null === (r = e.hoverState) || void 0 === r ? void 0 : r.kind) ? {
								kind: o.k.Text,
								text: e.hoverState.text,
								color: e.hoverState.color,
								fillColor: e.hoverState.fillColor,
								textColor: e.hoverState.textColor
							} : void 0,
							...e.kind === o.e.Image ? {
								kind: o.k.Image,
								linkUrl: e.media.linkUrl,
								url: (null === (s = e.media.source) || void 0 === s ? void 0 : s.url) || "",
								height: (null === (d = e.media.source) || void 0 === d ? void 0 : d.dimensions.height) || 0,
								width: (null === (a = e.media.source) || void 0 === a ? void 0 : a.dimensions.width) || 0
							} : {
								kind: o.k.Text,
								url: (null === (l = e.media.source) || void 0 === l ? void 0 : l.url) || "",
								color: e.color,
								fillColor: e.fillColor,
								textColor: e.textColor
							}
						}
					})
				}),
				l = e => ({
					...v(e),
					kind: o.i.Calendar,
					shortName: e.shortName,
					configuration: {
						numEvents: e.eventsCount,
						showDate: e.isDateShown,
						showDescription: e.isDescriptionShown,
						showLocation: e.isLocationShown,
						showTime: e.isTimeShown
					},
					configuredAtUTC: null,
					data: e.events.map(e => ({
						allDay: e.isAllDay,
						description: e.description.markdown,
						descriptionHtml: e.description.html,
						endTime: Math.round(Date.parse(e.endsAt) / 1e3),
						location: e.location.markdown,
						locationHtml: e.location.html,
						startTime: Math.round(Date.parse(e.startsAt) / 1e3),
						title: e.title.markdown,
						titleHtml: e.title.html
					})),
					googleCalendarId: e.googleCalendarId,
					moderator: null,
					requiresSync: e.isSyncRequired,
					synchronizedAtUTC: null
				}),
				u = e => ({
					...v(e),
					kind: o.i.CommunityList,
					shortName: e.shortName,
					data: e.communities.map(e => {
						var t;
						return {
							name: e.name,
							type: "subreddit",
							id: e.id,
							bannerBackgroundColor: e.styles.bannerBackgroundColor,
							bannerBackgroundImage: e.styles.bannerBackgroundImage,
							communityIcon: e.styles.icon,
							displayText: e.name,
							subscribers: e.subscribersCount,
							iconUrl: e.styles.icon || (null === (t = e.styles.legacyIcon) || void 0 === t ? void 0 : t.url) || null,
							isSubscribed: e.isSubscribed,
							primaryColor: e.styles.primaryColor,
							isNSFW: e.isNsfw
						}
					})
				}),
				c = e => ({
					...v(e),
					kind: o.i.Custom,
					shortName: e.shortName,
					text: e.text.markdown,
					textHtml: e.text.html,
					textRichtext: e.text.richtext,
					css: e.css,
					stylesheetUrl: e.stylesheetUrl,
					height: e.height,
					imageData: e.imageData.map(e => {
						var t, i, n;
						return {
							name: e.name || "",
							url: (null === (t = e.source) || void 0 === t ? void 0 : t.url) || "",
							height: (null === (i = e.source) || void 0 === i ? void 0 : i.dimensions.height) || 0,
							width: (null === (n = e.source) || void 0 === n ? void 0 : n.dimensions.width) || 0
						}
					})
				}),
				_ = e => ({
					...v(e),
					kind: o.i.IdCard,
					shortName: e.shortName,
					currentlyViewingCount: e.currentlyViewingCount,
					currentlyViewingText: e.currentlyViewingText,
					description: e.descriptionText,
					subscribersCount: e.subscribersCount,
					subscribersText: e.subscribersText
				}),
				m = e => ({
					...v(e),
					kind: o.i.Image,
					shortName: e.shortName,
					data: e.data.map(e => {
						var t, i, n;
						return {
							linkUrl: e.linkUrl,
							url: (null === (t = e.source) || void 0 === t ? void 0 : t.url) || "",
							height: (null === (i = e.source) || void 0 === i ? void 0 : i.dimensions.height) || 0,
							width: (null === (n = e.source) || void 0 === n ? void 0 : n.dimensions.width) || 0
						}
					})
				}),
				p = e => ({
					...v(e),
					kind: o.i.Moderators,
					mods: e.moderators.map(e => ({
						name: e.redditor.name,
						...e.flair ? {
							authorFlairBackgroundColor: e.flair.template.backgroundColor,
							authorFlairRichText: e.flair.richtext ? JSON.parse(e.flair.richtext) : [],
							authorFlairText: e.flair.template.text || "",
							authorFlairTextColor: e.flair.textColor === s.i.Light ? s.e.Light : s.e.Dark,
							authorFlairType: e.flair.type
						} : {
							authorFlairBackgroundColor: "",
							authorFlairRichText: [],
							authorFlairText: "",
							authorFlairTextColor: s.e.Dark,
							authorFlairType: s.f.Text
						}
					}))
				}),
				h = e => {
					switch (e) {
						case s.g.All:
							return s.a.All;
						case s.g.Text:
							return s.a.Text;
						case s.g.Emoji:
							return s.a.Emoji
					}
				},
				f = e => e === s.i.Light ? s.e.Light : s.e.Dark,
				b = e => ({
					...v(e),
					kind: o.i.PostFlair,
					shortName: e.shortName,
					order: e.templates.map(e => e.id || ""),
					display: e.display,
					templates: e.templates.reduce((e, t) => t.id ? (e[t.id] = {
						allowableContent: h(t.allowableContent),
						backgroundColor: t.backgroundColor,
						cssClass: t.cssClass,
						id: t.id,
						maxEmojis: t.maxEmojis,
						modOnly: t.isModOnly,
						richtext: t.richtext ? JSON.parse(t.richtext) : [],
						text: t.text,
						textColor: f(t.textColor),
						textEditable: t.isEditable,
						type: t.type
					}, e) : e, {})
				}),
				g = ({
					widget: e,
					rules: t,
					name: i
				}) => ({
					...v(e),
					kind: o.i.SubredditRules,
					shortName: e.shortName,
					display: e.display,
					subreddit: i,
					data: t ? Object(r.a)(t).rules : []
				}),
				w = e => ({
					...v(e),
					kind: o.i.Textarea,
					shortName: e.shortName,
					text: e.text.markdown,
					textHtml: e.text.html,
					textRichtext: e.text.richtext
				}),
				v = e => ({
					id: e.id,
					styles: e.styles
				})
		},
		"./src/reddit/helpers/graphql/normalizeUserFromGql/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return u
			}));
			var n = i("./src/reddit/endpoints/profile/info.ts"),
				r = i("./src/reddit/models/User/index.ts"),
				s = i("./src/reddit/helpers/graphql/helpers.ts");
			const o = e => e && e.expiresAt && Object(s.e)(e.expiresAt, s.a.Seconds) / 1e3 || null,
				d = e => e && e.unreadCount ? e.unreadCount : 0,
				a = /^u\//,
				l = e => e.replace(a, "/user/"),
				u = e => e.__typename === r.c.DeletedRedditor ? null : "name" in e && e.name || null;
			t.a = ({
				redditor: e,
				inbox: t,
				premium: i,
				preferences: a,
				coins: u,
				...c
			}) => {
				var _, m;
				let p = {
					karma: n.a,
					hasUserProfile: !1,
					id: e.id,
					isGold: !1,
					url: ""
				};
				if (e.__typename === r.c.AvailableRedditor) {
					const {
						karma: t,
						profile: i,
						snoovatarIcon: r
					} = e, s = null === (m = null === (_ = null == i ? void 0 : i.styles) || void 0 === _ ? void 0 : _.legacyIcon) || void 0 === m ? void 0 : m.url, o = r && r.url || null;
					p = {
						...p,
						...s && {
							accountIcon: s
						},
						karma: {
							...n.a,
							...t
						},
						displayText: e.name,
						hasExternalAccount: e.isLinkedToExternalAccount,
						hasUserProfile: !!i,
						isGold: !!e.isGilded,
						snoovatarFullBodyAsset: o,
						profileId: i && i.id || void 0,
						url: e.prefixedName && l(e.prefixedName) || void 0
					}
				}
				const {
					interactions: h,
					modMail: f
				} = c;
				return {
					...p,
					canCreateSubreddit: !!c.isSubredditCreationAllowed,
					coins: u,
					created: Object(s.e)(c.createdAt, s.a.Seconds) / 1e3,
					goldExpiration: o(i),
					hasUnreadMail: d(t) > 0,
					hasUnreadModmail: !!f && f.isUnread,
					hasUnreadOldModmail: !!f && f.isUnread,
					hasVerifiedEmail: !!c.isEmailVerified,
					inboxCount: d(t),
					inRedesignBeta: a.isInRedesignBeta,
					isEmployee: !!c.isEmployee,
					isFPR: !!c.isForcePasswordReset,
					isNameEditable: !!c.isNameEditable,
					isMod: !!c.isModerator,
					isPasswordSet: !!c.isPasswordSet,
					isSuspended: c.isSuspended,
					nightmode: a.isNightModeEnabled,
					seenLayoutSwitch: !!h && h.isLayoutSwitchAware,
					seenRedesignModal: !!h && h.isRedesignModalAware,
					seenSubredditChatFtux: !!h && h.isSubredditChatAware,
					showRecentPosts: a.isRecentPostsShown,
					showTrending: a.isTrendingSubredditsShown,
					...i && i.subscription && {
						hasAndroidSubscription: i.subscription.isAndroidAvailable,
						hasGoldSubscription: i.subscription.isGoldAvailable,
						hasIosSubscription: i.subscription.isIosAvailable,
						hasPaypalSubscription: i.subscription.isPaypalAvailable,
						hasStripeSubscription: i.subscription.isStripeAvailable
					}
				}
			}
		},
		"./src/reddit/helpers/history/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			}));
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n);
			const s = (e, t) => {
					var i, n;
					const r = null !== (n = null === (i = null === history || void 0 === history ? void 0 : history.state) || void 0 === i ? void 0 : i.state) && void 0 !== n ? n : {},
						s = {
							...history.state,
							state: {
								...r,
								[e]: t
							}
						};
					history.replaceState(s, window.document.title)
				},
				o = e => {
					var t;
					const i = {
						...history.state,
						state: {
							...r()(null === (t = null === history || void 0 === history ? void 0 : history.state) || void 0 === t ? void 0 : t.state, e)
						}
					};
					history.replaceState(i, window.document.title)
				},
				d = e => {
					var t, i;
					return null === (i = null === (t = null === history || void 0 === history ? void 0 : history.state) || void 0 === t ? void 0 : t.state) || void 0 === i ? void 0 : i[e]
				}
		},
		"./src/reddit/helpers/imagePreview/index.ts": function(e, t, i) {
			"use strict";

			function n(e) {
				if ("string" == typeof e) return e;
				if (e && window.URL && window.URL.createObjectURL) try {
					return window.URL.createObjectURL(e)
				} catch (t) {}
				return ""
			}

			function r(e) {
				e && window.URL && window.URL.revokeObjectURL && window.URL.revokeObjectURL(e)
			}
			async function s(e) {
				return new Promise((t, i) => {
					const n = new Image;
					n.onload = () => {
						t({
							width: n.width,
							height: n.height
						})
					}, n.onerror = e => i(e), n.src = e
				})
			}
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}))
		},
		"./src/reddit/helpers/installGoodVisitFeedSearchTracker/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/helpers/trackers/global.ts"),
				r = i("./src/telemetry/index.ts");
			const s = {};
			"undefined" != typeof window && window.addEventListener("beforeunload", (function() {
				var e, t;
				for (const i of Object.values(s)) i.completed || (null === (e = i.goodVisitTimer) || void 0 === e || e.clear(), null === (t = i.downtimeTimer) || void 0 === t || t.clear())
			}));
			const o = (e, t, i, o, d, a, u, c) => {
					if (s[e]) return;
					s[e] = {
						completed: !1
					};
					const _ = s[e],
						m = null != u ? u : 15e3,
						p = null != c ? c : 3e4;
					_.goodVisitTimer = new l(m, () => {
						var e;
						null === (e = _.goodVisitTimer) || void 0 === e || e.clear(), Object(r.a)(Object(n.c)(m, t, o, d, a)(i())), _.goodVisitTimer = new l(p - m, () => {
							var e, s;
							null === (e = _.goodVisitTimer) || void 0 === e || e.clear(), null === (s = _.downtimeTimer) || void 0 === s || s.clear(), Object(r.a)(Object(n.c)(p, t, o, d, a)(i())), _.completed = !0
						})
					})
				},
				d = e => {
					var t;
					const i = s[e];
					i && (i.completed || (null === (t = i.goodVisitTimer) || void 0 === t || t.pause(), i.downtimeTimer = new l(3e5, () => {
						var e, t;
						null === (e = i.goodVisitTimer) || void 0 === e || e.clear(), null === (t = i.downtimeTimer) || void 0 === t || t.clear(), i.completed = !0
					})))
				},
				a = e => {
					var t, i;
					const n = s[e];
					n && (n.completed || (null === (t = n.downtimeTimer) || void 0 === t || t.clear(), null === (i = n.goodVisitTimer) || void 0 === i || i.reset()))
				};
			class l {
				constructor(e, t) {
					this.remaining = e, this.callback = t, this.reset()
				}
				pause() {
					this.start && (window.clearTimeout(this.timerId), this.remaining -= Date.now() - this.start)
				}
				reset() {
					this.start = Date.now(), window.clearTimeout(this.timerId), this.timerId = window.setTimeout(this.callback, this.remaining)
				}
				clear() {
					window.clearTimeout(this.timerId)
				}
			}
		},
		"./src/reddit/helpers/isComment.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			}));
			var n = i("./src/reddit/constants/things.ts");

			function r(e) {
				if (!e) return !1;
				return e.substring(0, 3) === n.a
			}
			const s = e => r(e.id);
			t.a = r
		},
		"./src/reddit/helpers/isPost.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			}));
			var n = i("./src/reddit/constants/things.ts");

			function r(e) {
				if (!e) return !1;
				return e.substring(0, 3) === n.b
			}
			const s = e => r(e.id);
			t.a = r
		},
		"./src/reddit/helpers/localStorage/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "Ib", (function() {
				return le
			})), i.d(t, "D", (function() {
				return ue
			})), i.d(t, "E", (function() {
				return ce
			})), i.d(t, "Z", (function() {
				return _e
			})), i.d(t, "Kb", (function() {
				return be
			})), i.d(t, "bb", (function() {
				return ge
			})), i.d(t, "H", (function() {
				return we
			})), i.d(t, "lb", (function() {
				return ve
			})), i.d(t, "f", (function() {
				return ye
			})), i.d(t, "N", (function() {
				return Ee
			})), i.d(t, "Qb", (function() {
				return Se
			})), i.d(t, "cb", (function() {
				return Te
			})), i.d(t, "qb", (function() {
				return Oe
			})), i.d(t, "h", (function() {
				return Ie
			})), i.d(t, "i", (function() {
				return Re
			})), i.d(t, "rb", (function() {
				return Fe
			})), i.d(t, "j", (function() {
				return Ne
			})), i.d(t, "U", (function() {
				return Ce
			})), i.d(t, "q", (function() {
				return je
			})), i.d(t, "zb", (function() {
				return Ae
			})), i.d(t, "M", (function() {
				return Pe
			})), i.d(t, "Pb", (function() {
				return Le
			})), i.d(t, "Ob", (function() {
				return Me
			})), i.d(t, "L", (function() {
				return Ue
			})), i.d(t, "Nb", (function() {
				return Ge
			})), i.d(t, "K", (function() {
				return qe
			})), i.d(t, "e", (function() {
				return Ve
			})), i.d(t, "d", (function() {
				return He
			})), i.d(t, "jb", (function() {
				return We
			})), i.d(t, "A", (function() {
				return ze
			})), i.d(t, "kb", (function() {
				return Ke
			})), i.d(t, "Y", (function() {
				return Ye
			})), i.d(t, "Tb", (function() {
				return $e
			})), i.d(t, "k", (function() {
				return Qe
			})), i.d(t, "sb", (function() {
				return Je
			})), i.d(t, "W", (function() {
				return Xe
			})), i.d(t, "ob", (function() {
				return Ze
			})), i.d(t, "l", (function() {
				return et
			})), i.d(t, "tb", (function() {
				return tt
			})), i.d(t, "I", (function() {
				return it
			})), i.d(t, "Lb", (function() {
				return nt
			})), i.d(t, "m", (function() {
				return rt
			})), i.d(t, "b", (function() {
				return st
			})), i.d(t, "c", (function() {
				return ot
			})), i.d(t, "T", (function() {
				return dt
			})), i.d(t, "wb", (function() {
				return at
			})), i.d(t, "mb", (function() {
				return lt
			})), i.d(t, "r", (function() {
				return ct
			})), i.d(t, "Cb", (function() {
				return _t
			})), i.d(t, "Xb", (function() {
				return mt
			})), i.d(t, "n", (function() {
				return pt
			})), i.d(t, "vb", (function() {
				return ht
			})), i.d(t, "g", (function() {
				return ft
			})), i.d(t, "nb", (function() {
				return bt
			})), i.d(t, "G", (function() {
				return wt
			})), i.d(t, "Jb", (function() {
				return vt
			})), i.d(t, "Q", (function() {
				return yt
			})), i.d(t, "Vb", (function() {
				return Et
			})), i.d(t, "F", (function() {
				return St
			})), i.d(t, "X", (function() {
				return Tt
			})), i.d(t, "Ub", (function() {
				return Ot
			})), i.d(t, "y", (function() {
				return It
			})), i.d(t, "Eb", (function() {
				return Rt
			})), i.d(t, "Mb", (function() {
				return Ft
			})), i.d(t, "J", (function() {
				return Nt
			})), i.d(t, "gb", (function() {
				return Ct
			})), i.d(t, "eb", (function() {
				return jt
			})), i.d(t, "z", (function() {
				return At
			})), i.d(t, "Fb", (function() {
				return xt
			})), i.d(t, "fb", (function() {
				return Dt
			})), i.d(t, "S", (function() {
				return Pt
			})), i.d(t, "Wb", (function() {
				return Lt
			})), i.d(t, "ib", (function() {
				return kt
			})), i.d(t, "R", (function() {
				return Bt
			})), i.d(t, "V", (function() {
				return Mt
			})), i.d(t, "hb", (function() {
				return Ut
			})), i.d(t, "O", (function() {
				return Gt
			})), i.d(t, "Sb", (function() {
				return qt
			})), i.d(t, "ab", (function() {
				return Vt
			})), i.d(t, "yb", (function() {
				return zt
			})), i.d(t, "xb", (function() {
				return Kt
			})), i.d(t, "p", (function() {
				return Yt
			})), i.d(t, "o", (function() {
				return $t
			})), i.d(t, "db", (function() {
				return Qt
			})), i.d(t, "P", (function() {
				return Jt
			})), i.d(t, "a", (function() {
				return Xt
			})), i.d(t, "C", (function() {
				return Zt
			})), i.d(t, "Hb", (function() {
				return ei
			})), i.d(t, "B", (function() {
				return ti
			})), i.d(t, "Gb", (function() {
				return ii
			})), i.d(t, "v", (function() {
				return ni
			})), i.d(t, "Ab", (function() {
				return ri
			})), i.d(t, "s", (function() {
				return si
			})), i.d(t, "pb", (function() {
				return oi
			})), i.d(t, "u", (function() {
				return di
			})), i.d(t, "ub", (function() {
				return ai
			})), i.d(t, "t", (function() {
				return li
			})), i.d(t, "Db", (function() {
				return ui
			})), i.d(t, "w", (function() {
				return ci
			})), i.d(t, "Bb", (function() {
				return _i
			})), i.d(t, "Rb", (function() {
				return mi
			})), i.d(t, "x", (function() {
				return pi
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/localStorageAvailable/index.ts"),
				r = i("./src/lib/timeAgo/index.ts"),
				s = i("./node_modules/lodash/isEqual.js"),
				o = i.n(s),
				d = i("./node_modules/lodash/isObjectLike.js"),
				a = i.n(d),
				l = i("./src/reddit/actions/focusedVerticals/constants.ts"),
				u = i("./src/reddit/constants/localStorage.ts"),
				c = i("./src/reddit/helpers/survey/index.ts");
			const _ = [u.b.CATEGORIES_RANKING_STORE, u.b.LOCAL_PERSISTED_EXPERIMENTS_STORE];
			var m = i("./src/reddit/models/Search/index.ts"),
				p = i("./node_modules/uuid/v4.js"),
				h = i.n(p);
			const {
				ANNOUNCEMENT_BANNER_SEEN_STORE_V2: f,
				ANNOUNCEMENT_BANNER_SEEN_STORE: b,
				AVATAR_QUICK_CREATE_EVENT_STORE: g,
				BANNER_DISMISSED_STORE: w,
				BREAKING_NEWS_DISABLED_STORE: v,
				CATEGORIES_RANKING_STORE: y,
				CREATE_POLLS_PAINTED_DOOR_DISMISSED_STORE: E,
				DESKTOP_NOTIFICATIONS: S,
				DESKTOP_NOTIFICATIONS_PROMPT_BANNER_SEEN_STORE: T,
				DESKTOP_NOTIFICATIONS_WRAPPED_REDDIT_BANNER_SEEN_STORE: O,
				DISCLAIMER_DISMISSED_STORE: I,
				DOWNLOAD_OBS_DISMISSED_STORE: R,
				EDITOR_MODE_HINT_SEEN_STORE: F,
				EMAIL_COLLECTION_REPROMPT_STORE: N,
				FEATURE_THROTTLING_STORE: C,
				FOCUS_VERTICAL_VARIANT: j,
				FOLLOW_STORE: A,
				GILD_DEFAULTS_STORE: x,
				INBOX_EXPOSURE_SEEN_STORE: D,
				INBOX_PRIVACY_POLICY_BANNER_SEEN_STORE: P,
				INLINE_ID_CARD_PRIMARY_TOPIC_TOOLTIP_STORE: L,
				LAST_CLICKED_AD_ID: k,
				LAST_CLICKED_IMPRESSION_ID: B,
				LEGACY_INLINE_ID_CARD_EDIT_EDU_TOOLTIP_STORE: M,
				LOW_ACTIVITY_CALL_TO_ACTION_STORE: U,
				MODAL_DISMISSED_STORE: G,
				MODHUB_SETTING_SEEN: q,
				OLD_COLLECTIONS_DISMISSED_KEY: V,
				OLD_EVENT_DISMISSED_KEY: H,
				PAGE_TYPE_BEFORE_AD_CLICK: W,
				POST_CREATION_EDU_TOOLTIP_STORE: z,
				PROFILE_PINNED_POSTS_STORE: K,
				RECENT_SEARCHES_STORE: Y,
				RPAN_DU_TRACKING_START_DATE: $,
				RPAN_START_CHATTING_SEEN_STORE: Q,
				SUBSCRIBED_SUBREDDIT_VISITS: J,
				SURVEY_CONFIG: X,
				SURVEY_LAST_SEEN: Z,
				SURVEY_SAMPLE_FACTOR_BYPASS: ee,
				SURVEY_TRIGGER_ACTION_COUNTS: te,
				TIME_BEFORE_UNFOCUS: ie,
				UPVOTE_TOAST_CTA_LAST_SHOWN: ne,
				UPVOTE_TOAST_LAST_THREE: re,
				REMOVAL_REASONS_TOOLTIP_SEEN: se,
				EMPTY_INBOX_STATE_BADGE_SEEN: oe
			} = u.b, de = (e, t) => {
				const i = e.getItem(t);
				if (i) return JSON.parse(i)
			}, ae = (e, t, i) => e.setItem(t, JSON.stringify(i)), le = (e, t) => {
				window.localStorage && ae(window.localStorage, e, t)
			}, ue = e => de(localStorage, e), ce = () => {
				const e = {};
				for (const t of _) {
					const i = localStorage.getItem(t);
					if (i) try {
						const n = JSON.parse(i);
						e[t] = n
					} catch {}
				}
				return e
			}, _e = e => {
				const t = /(t2_\w+)/;
				let i = [];
				try {
					i = Object.keys(localStorage)
				} catch (r) {
					return
				}
				const n = i.filter((function(i) {
					const n = t.exec(i);
					if (n && n[1] !== e) return !0
				}));
				try {
					for (let e = 0, t = n.length; e < t; e++) localStorage.removeItem(n[e])
				} catch (r) {
					return
				}
			}, me = (e, t, i, n) => {
				const r = de(e, t) || {};
				return r[i] = n, ae(e, t, r)
			}, pe = (e, t, i, n, r) => {
				const s = de(e, t) || {};
				return a()(s[i]) || (s[i] = {}), s[i][r] = n, ae(e, t, s)
			}, he = (e, t, i) => {
				const n = de(e, t);
				return !!n && !0 === n[i]
			}, fe = (e, t, i, n) => {
				const r = de(e, t);
				return !(!r || !r[i]) && !0 === r[i][n]
			}, be = (e, t) => me(localStorage, G, e, t), ge = e => ((e, t, i) => {
				const n = de(e, t) || {};
				return delete n[i], ae(e, t, n)
			})(localStorage, G, e), we = e => he(localStorage, G, e), ve = (e, t, i) => pe(localStorage, w, e, t, i), ye = (e, t) => !Object(n.a)() || fe(localStorage, w, e, t), Ee = e => ((e, t, i) => {
				const n = de(e, i);
				let r = n ? n[t] : [];
				return r = r.map(e => e.id && e.section ? e : {
					...e,
					section: m.c.recent,
					id: h()()
				})
			})(localStorage, Y, e), Se = (e, t) => ((e, t, i, n) => {
				let r = (de(e, n) || {})[t] || [],
					s = -1;
				r = r.map((e, t) => {
					const n = e.id === i.id || e.searchQuery === i.searchQuery && e.subredditOrProfileRestrictedName === i.subredditOrProfileRestrictedName;
					return -1 === s && n && (s = t), e.id && e.section ? e : {
						...e,
						id: h()(),
						section: m.c.recent
					}
				}), -1 !== s && r.splice(s, 1), r.length >= 5 && (r = r.slice(0, 4));
				const o = {
					[Y]: r
				};
				return r.unshift(i), ae(e, n, o), r
			})(localStorage, Y, e, t), Te = (e, t) => ((e, t, i, n) => {
				const r = de(e, n);
				let s = [];
				if (r && r[t]) {
					s = r[t].filter(e => !o()(e, i)), ae(e, n, {
						[Y]: s
					})
				}
				return s
			})(localStorage, Y, e, t), Oe = (e, t) => ((e, t, i, n) => {
				const r = de(e, t) || {};
				return r[i] = n, ae(e, t, r)
			})(localStorage, I, e, t), Ie = e => ((e, t, i) => {
				const n = de(e, t);
				return !!n && !0 === n[i]
			})(localStorage, I, e), Re = e => !!xe(e), Fe = e => {
				De(e, "1")
			}, Ne = (e, t) => {
				const i = ue(e);
				return i && i[t] ? i[t] : 0
			}, Ce = (e, t) => {
				if (!e) return;
				const i = ue(e);
				le(e, i ? {
					...i,
					[t]: i[t] + 1 || 1
				} : {
					[t]: 1
				})
			}, je = () => {
				const e = ue(x);
				return !(!e || !0 !== e.anonymous)
			}, Ae = e => {
				le(x, {
					anonymous: e
				})
			}, xe = e => Object(n.a)() && localStorage.getItem(e) || "", De = (e, t) => {
				Object(n.a)() && localStorage.setItem(e, t)
			}, Pe = () => Re(K), Le = () => Fe(K), ke = e => le(z, e), Be = () => {
				const e = ue(z);
				if (e) return e;
				const t = Re(H);
				t && localStorage.removeItem(H);
				const i = Re(V);
				i && localStorage.removeItem(V);
				const n = {
					collectionShowTimesLeft: i ? 0 : 3,
					eventShowTimesLeft: t ? 0 : 3
				};
				return ke(n), n
			}, Me = e => {
				const t = Be();
				ke({
					...t,
					eventShowTimesLeft: e
				})
			}, Ue = () => Be().eventShowTimesLeft, Ge = e => {
				const t = Be();
				ke({
					...t,
					collectionShowTimesLeft: e
				})
			}, qe = () => Be().collectionShowTimesLeft, Ve = () => ue(f) || {}, He = e => {
				const t = ue(f);
				return t && t[e] || 0
			}, We = (e, t) => {
				const i = Ve();
				le(f, {
					...i,
					[e]: t
				})
			}, ze = () => {
				const e = {
					lastInteractionTimestamp: 0,
					id: "-1",
					eventViews: 0
				};
				if (!Object(n.a)()) return e;
				const t = ue(g);
				return t ? {
					id: t.id,
					lastInteractionTimestamp: parseInt(t.lastInteractionTimestamp || "0", 10),
					eventViews: parseInt(t.eventViews, 10)
				} : e
			}, Ke = e => {
				le(g, e)
			}, Ye = () => {
				return !!ue(Q)
			}, $e = () => {
				le(Q, 1)
			}, Qe = () => {
				let e = !1;
				return Object(n.a)() && (e = !!ue(R)), e
			}, Je = () => {
				Object(n.a)() && le(R, 1)
			}, Xe = () => {
				const e = xe(S);
				return e ? "1" === e : void 0
			}, Ze = e => {
				De(S, e ? "1" : "0")
			}, et = () => parseInt(xe(F)) || 0, tt = e => De(F, String(e)), it = e => {
				return (ue(q) || {})[e] || !1
			}, nt = e => {
				const t = ue(q) || {};
				t[e] = !0, le(q, t)
			}, rt = () => ue(N) || 0, st = () => {
				le(N, 3)
			}, ot = () => {
				const e = rt();
				0 !== e && le(N, e - 1)
			}, dt = () => () => {
				const e = Date.now(),
					t = ue(`${j}_${l.a}`);
				return !!t && (t < e && e < t + 2592e6)
			}, at = () => () => {
				const e = Date.now();
				le(`${j}_${l.a}`, e)
			}, lt = e => {
				le(y, e)
			}, ut = {
				dismissed: !1,
				seen: 0
			}, ct = () => {
				if (!Object(n.a)()) return !1;
				localStorage.removeItem(M);
				const e = ue(L);
				return !!e && (e.dismissed || e.seen >= 5)
			}, _t = () => {
				Object(n.a)() && le(L, {
					dismissed: !0,
					seen: 0
				})
			}, mt = () => {
				const e = ue(L) || ut;
				le(L, {
					...e,
					seen: Math.min(e.seen + 1, 5)
				})
			}, pt = () => ue(C), ht = e => {
				le(C, e)
			}, ft = () => Re(E), bt = () => Fe(E), gt = () => {
				try {
					return ue(U)
				} catch {
					return
				}
			}, wt = () => {
				const e = gt();
				if (!e) return !1;
				const t = Object(r.c)(Math.floor(new Date(e.dismissedAt).valueOf() / 1e3));
				return 3 === e.dismissedTimes || 1 === e.dismissedTimes && t <= 3 || 2 === e.dismissedTimes && t <= 7
			}, vt = () => {
				const e = gt(),
					t = e ? e.dismissedTimes + 1 : 1;
				le(U, {
					dismissedTimes: t,
					dismissedAt: (new Date).toISOString()
				})
			}, yt = () => ue(Z), Et = e => {
				le(Z, e), Object(c.h)().setState(e)
			}, St = () => {
				var e;
				return Object(n.a)() && null !== (e = ue(X)) && void 0 !== e ? e : null
			}, Tt = () => !!Object(n.a)() && !!ue(ee), Ot = (e, t) => {
				le(X, {
					lastUpdated: Date.now(),
					surveyCooldownDays: e,
					activeSurveys: t
				})
			}, It = () => xe(k), Rt = e => {
				De(k, e)
			}, Ft = e => {
				De(W, e)
			}, Nt = () => xe(W), Ct = () => {
				De(W, "")
			}, jt = () => {
				De(k, "")
			}, At = () => xe(B), xt = e => {
				De(B, e)
			}, Dt = () => {
				De(B, "")
			}, Pt = () => ue(ie), Lt = e => {
				le(ie, e)
			}, kt = () => {
				le(ie, 0)
			}, Bt = () => ue(te), Mt = e => {
				const t = Bt();
				le(te, {
					...t,
					[e]: (t && t[e] || 0) + 1
				}), Object(c.c)().setState(e)
			}, Ut = e => {
				Object(c.c)().setState(e);
				const t = Bt();
				le(te, {
					...t,
					[e]: 0
				})
			}, Gt = () => Object(n.a)() && ue($) || null, qt = e => le($, e), Vt = () => localStorage.removeItem($), Ht = () => ue(A) || [], Wt = () => {
				const e = Ht(),
					t = Object.keys(e).map(t => ({
						...e[t],
						followedPosts: e[t].followedPosts.filter(e => e.expiresAt > Date.now()),
						followedComments: e[t].followedComments.filter(e => e.expiresAt > Date.now())
					}));
				le(A, t)
			}, zt = (e, t) => {
				t && Object(n.a)() && ((e, t) => {
					const i = Ht(),
						n = i.find(e => e.userId === t);
					let r;
					r = n ? i.map(i => i.userId === t ? {
						...n,
						followedPosts: e
					} : i) : [...i, {
						userId: t,
						followedPosts: e,
						followedComments: []
					}], le(A, r)
				})(e, t)
			}, Kt = (e, t) => {
				t && Object(n.a)() && ((e, t) => {
					const i = Ht(),
						n = i.find(e => e.userId === t);
					let r;
					r = n ? i.map(i => i.userId === t ? {
						...n,
						followedComments: e
					} : i) : [...i, {
						userId: t,
						followedComments: e,
						followedPosts: []
					}], le(A, r)
				})(e, t)
			}, Yt = e => {
				var t;
				if (!e || !Object(n.a)()) return;
				return Wt(), (null === (t = Ht().find(t => t.userId === e)) || void 0 === t ? void 0 : t.followedPosts) || []
			}, $t = e => {
				var t;
				if (!e || !Object(n.a)()) return;
				return Wt(), (null === (t = Ht().find(t => t.userId === e)) || void 0 === t ? void 0 : t.followedComments) || []
			}, Qt = (e, t) => {
				if (!e || !Object(n.a)()) return null;
				const i = ue(J);
				if (!i || !i[e] || !i[e][t]) return;
				const r = i[e],
					s = Object.keys(r).filter(e => e !== t).reduce((e, t) => (e[t] = r[t], e), {});
				le(J, {
					...i,
					[e]: s
				})
			}, Jt = (e, t) => {
				if (!e || !Object(n.a)()) return null;
				const i = ue(J);
				return i && i[e] ? i[e][t] : null
			}, Xt = (e, t) => {
				if (!e || !Object(n.a)()) return null;
				const i = ue(J);
				let r, s;
				if (i && i[e]) {
					const n = i[e][t];
					s = n ? !("number" == typeof n && n < 3) || n + 1 : 1, r = {
						...i,
						[e]: {
							...i[e],
							[t]: s
						}
					}
				} else r = {
					...i,
					[e]: {
						[t]: 1
					}
				}, s = 1;
				return le(J, r), s
			}, Zt = () => ue(ne), ei = () => {
				const e = Date.now();
				le(ne, e)
			}, ti = () => ue(re), ii = e => {
				le(re, e)
			}, ni = e => !!Object(n.a)() && -1 !== (ue(D) || []).indexOf(e), ri = e => {
				if (!Object(n.a)()) return;
				if (ni(e)) return;
				const t = ue(D) || [];
				le(D, [...t, e])
			}, si = e => !!Object(n.a)() && -1 !== (ue(T) || []).indexOf(e), oi = e => {
				if (!Object(n.a)() || si(e)) return;
				const t = ue(T) || [];
				le(T, [...t, e])
			}, di = e => !!Object(n.a)() && -1 !== (ue(oe) || []).indexOf(e), ai = e => {
				if (!Object(n.a)() || di(e)) return;
				const t = ue(oe) || [];
				le(oe, [...t, e])
			}, li = e => !!Object(n.a)() && -1 !== (ue(O) || []).indexOf(e), ui = e => {
				if (!Object(n.a)() || si(e)) return;
				const t = ue(O) || [];
				le(O, [...t, e])
			}, ci = e => !!Object(n.a)() && -1 !== (ue(P) || []).indexOf(e), _i = e => {
				if (!Object(n.a)() || ci(e)) return;
				const t = ue(P) || [];
				le(P, [...t, e])
			}, mi = () => {
				le(se, !0)
			}, pi = () => {
				return !!ue(se)
			}
		},
		"./src/reddit/helpers/makeProfileListingKey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeListingKey/index.ts");
			const s = (e, t) => `${n.jc}${e.toLowerCase()}--private--${t}`;
			t.a = (e, t, i, s = {}) => {
				const o = `${n.jc}${e}--${t}`;
				return Object(r.a)(o, i, s)
			}
		},
		"./src/reddit/helpers/media/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return s
			})), i.d(t, "n", (function() {
				return o
			})), i.d(t, "l", (function() {
				return d
			})), i.d(t, "k", (function() {
				return a
			})), i.d(t, "j", (function() {
				return l
			})), i.d(t, "f", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			})), i.d(t, "o", (function() {
				return f
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "h", (function() {
				return w
			})), i.d(t, "m", (function() {
				return v
			})), i.d(t, "e", (function() {
				return y
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/models/Media/index.ts");

			function s(e) {
				return new Promise((t, i) => {
					try {
						const n = new FileReader;
						n.onloadend = e => {
							try {
								const i = e.target.result,
									n = new Uint8Array(i).subarray(0, 4);
								let r = "";
								for (let e = 0; e < n.length; e++) r += n[e].toString(16);
								const s = function(e) {
									switch (e) {
										case "89504e47":
											return "image/png";
										case "47494638":
											return "image/gif";
										default:
											return "ffd8ff" === e.slice(0, 6) ? "image/jpeg" : null
									}
								}(r);
								t(s)
							} catch (n) {
								i(n)
							}
						}, n.readAsArrayBuffer(e)
					} catch (n) {
						i(n)
					}
				})
			}
			const o = async (e, t) => {
				var i;
				const n = await s(e);
				if (!n) throw new Error("Cannot determine file mimeType");
				if (!a(n)) throw new Error("File Is not an image");
				const r = document.createElement("canvas"),
					o = document.createElement("img"),
					d = await new Promise(t => {
						const i = new FileReader;
						i.onload = e => {
							var i;
							return t(null === (i = null == e ? void 0 : e.target) || void 0 === i ? void 0 : i.result)
						}, i.readAsDataURL(e)
					});
				if (!d) throw new Error("Error reading image file");
				o.src = d, await new Promise(e => {
					o.onload = e
				});
				const {
					width: l,
					height: u
				} = o, {
					newWidth: c,
					newHeight: _
				} = (({
					width: e,
					height: t,
					maxDimension: i
				}) => {
					let n = e,
						r = t;
					if (e > i || t > i) {
						const s = i / Math.max(e, t);
						n = Math.round(e * s), r = Math.round(t * s)
					}
					return {
						newWidth: n,
						newHeight: r
					}
				})({
					width: l,
					height: u,
					maxDimension: t
				});
				return r.width = c, r.height = _, null === (i = r.getContext("2d")) || void 0 === i || i.drawImage(o, 0, 0, r.width, r.height), {
					file: await new Promise(t => {
						r.toBlob(i => {
							t(new File([i], e.name))
						}, e.type)
					}),
					width: c,
					height: _
				}
			}, d = e => e.startsWith("video/"), a = e => e.startsWith("image/"), l = e => "image/gif" === e, u = e => {
				if (e) return d(e) ? "video" : a(e) ? "image" : void 0
			}, c = e => n.a.has(e) || n.b.has(e), _ = e => window.URL && window.URL.createObjectURL ? window.URL.createObjectURL(e) : null;

			function m(e, t) {
				try {
					return new File([e], t, {
						type: e.type,
						lastModified: Date.now()
					})
				} catch (i) {
					const n = new Blob([e], {
						type: e.type
					});
					return Object.assign(n, {
						name: t,
						lastModified: Date.now()
					}), n
				}
			}

			function p(e) {
				const t = atob(e.split(",")[1]),
					i = e.split(",")[0].split(":")[1].split(";")[0],
					n = new Uint8Array(t.length);
				for (let r = 0; r < t.length; r++) n[r] = t.charCodeAt(r);
				return new Blob([n], {
					type: i
				})
			}
			const h = (e, t, i) => {
					e.addEventListener(t, n => (e.removeEventListener(t, i), i(n)))
				},
				f = (e, t) => new Promise((i, n) => {
					const r = () => {
						e.readyState >= 2 && i(e)
					};
					h(e, "error", () => {
						n(new Error("Invalid video source"))
					}), ["loadedmetadata", "loadeddata", "suspend"].forEach(t => h(e, t, r)), e.src = t, r()
				}),
				b = (e, t) => new Promise(i => {
					h(e, "seeked", () => i(e)), e.currentTime = t
				});
			async function g(e, t, i) {
				let n = e.currentTime;
				for (; null !== n;) {
					await b(e, n), t.height = e.videoHeight, t.width = e.videoWidth;
					const r = t.getContext("2d");
					r && r.drawImage(e, 0, 0), n = i({
						dataUrl: t.toDataURL(),
						time: e.currentTime
					})
				}
			}
			async function w(e, t = !1) {
				const i = document.createElement("video");
				let n;
				if (await f(i, e), t) {
					i.currentTime = 0;
					const e = document.createElement("canvas");
					await g(i, e, e => (n = e, null))
				}
				return {
					width: i.videoWidth,
					height: i.videoHeight,
					duration: i.duration,
					firstFrame: n
				}
			}
			const v = e => new Promise(t => {
					const i = new Image;
					i.onload = () => t(), i.onerror = () => t(), i.src = e
				}),
				y = (e, t, i) => {
					if (e.media && (e.media.type === r.o.IMAGE || e.media.type === r.o.GIFVIDEO)) {
						const n = e.media.resolutions;
						for (let e = 0; e < n.length; e++) {
							const r = n[e];
							if (r.width >= t || r.height >= i) return r
						}
					}
					if (e.thumbnail && !e.isNSFW && !e.isSpoiler) {
						const n = e.thumbnail,
							r = n && n.width || 0,
							s = n && n.height || 0;
						if (r >= t || s >= i) return e.thumbnail
					}
					return null
				}
		},
		"./src/reddit/helpers/name/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "h", (function() {
				return u
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "c", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "e", (function() {
				return h
			})), i.d(t, "f", (function() {
				return f
			})), i.d(t, "a", (function() {
				return b
			})), i.d(t, "b", (function() {
				return g
			}));
			var n = i("./node_modules/lodash/capitalize.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/upperFirst.js"),
				o = i.n(s);
			const d = /^(r|u)?\//i,
				a = /^r\//i,
				l = /^u\//i,
				u = e => e.replace(d, ""),
				c = e => u(e.toLowerCase().trim()),
				_ = e => `r/${u(e)}`,
				m = e => `u/${u(e)}`,
				p = e => d.test(e),
				h = e => a.test(e),
				f = e => l.test(e),
				b = (e, t) => !((e, t) => p(e) && p(t) && e[0].toLowerCase() !== t[0].toLowerCase())(e, t) && c(e) === c(t),
				g = (e, t) => {
					if (!e) return "";
					const i = t ? o.a : r.a;
					return e.split(" ").map(i).join(" ")
				}
		},
		"./src/reddit/helpers/normalizeUsername/index.tsx": function(e, t, i) {
			"use strict";
			t.a = e => {
				const t = /^((\/u\/)|(u\/))/;
				return /^((\/u\/)|(u\/))(.+)/.test(e) ? e.replace(t, "") : e
			}
		},
		"./src/reddit/helpers/onboarding/postsConsumedWeekly.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/localStorage.ts"),
				s = i("./src/reddit/helpers/localStorage/index.ts");
			const o = () => Object(s.D)(r.b.POSTS_CONSUMED_WEEKLY) || [],
				d = () => o().reduce((e, t) => e + t.count, 0),
				a = e => {
					let t = o();
					const i = t.length - 1,
						d = t.length && t[i],
						a = Date.now() + n.qc;
					d && d.sessionId === e ? (d.count++, d.expires = a, t[i] = d) : (t = t.filter(e => e.expires >= Date.now())).push({
						sessionId: e,
						expires: a,
						count: 1
					}), Object(s.Ib)(r.b.POSTS_CONSUMED_WEEKLY, t)
				}
		},
		"./src/reddit/helpers/overlay/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			}));
			var n = i("./node_modules/history/esm/history.js"),
				r = i("./node_modules/react-router-redux/es/index.js"),
				s = i("./src/reddit/helpers/path/index.ts");
			const o = e => {
					if ("string" == typeof e) return Object(n.c)(Object(s.b)(e), {
						isOverlay: !0
					}); {
						const t = Object(n.c)(e);
						return t.state = {
							...t.state || {},
							isOverlay: !0
						}, t
					}
				},
				d = e => Object(r.b)(o(e))
		},
		"./src/reddit/helpers/parseUrl.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return d
			}));
			var n = i("./node_modules/lodash/pick.js"),
				r = i.n(n),
				s = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				o = i.n(s);
			const d = /\b(https?|chrome):\/\/[^\s$.?#].[^\s]*\b/;
			t.a = e => {
				if (!e) return null;
				const t = o.a.parse(e);
				return r()(t, ["protocol", "hostname", "port", "pathname", "search", "hash", "host", "query"])
			}
		},
		"./src/reddit/helpers/path/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./node_modules/path-browserify/index.js"),
				r = i.n(n);
			const s = (e, t) => r.a.join(r.a.sep, e || "", t),
				o = e => e.replace(/^.*\/\/[^\/]+/, "")
		},
		"./src/reddit/helpers/pixels.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			}));
			var n = i("./src/lib/LRUCache/index.ts"),
				r = i("./node_modules/query-string/index.js"),
				s = i.n(r),
				o = i("./src/lib/sentry/index.ts"),
				d = i("./src/reddit/constants/adEvents.ts"),
				a = i("./src/reddit/models/Media/index.ts");
			const l = new n.a(1e3),
				u = [d.a.Click, d.a.GalleryItemImpression],
				c = e => {
					e.forEach(e => l.set(e.url, !0))
				},
				_ = e => /^(http|https):\/\/([a-z]+\.)?reddit.com/.test(e),
				m = (e, t, i, n = 0) => {
					const r = e.events;
					let d = [];
					const c = e.media;
					if (c && Object(a.E)(c) && c.gallery && u.includes(t)) {
						const e = c.gallery.items[n];
						d = (null == e ? void 0 : e.adEvents) || []
					}
					return [...r, ...d].filter(e => e.type === t).every(e => (({
						url: e,
						type: t
					}, i) => {
						if (!e) return o.c.captureMessage(`Pixel of type ${t} has no url`), !1;
						if (!l.get(e)) {
							let t = "";
							if (i && _(e)) {
								const {
									url: n,
									query: r
								} = s.a.parseUrl(e);
								t = s.a.stringifyUrl({
									url: n,
									query: {
										...r,
										...i
									}
								})
							}
							const n = new Image;
							return l.set(e, !0), t && (e = t), n.src = e, !0
						}
						return !1
					})(e, i))
				}
		},
		"./src/reddit/helpers/postCollection.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => !!e.collectionIds && e.collectionIds.length >= 1
		},
		"./src/reddit/helpers/postEvent.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => e && !!e.eventInfo
		},
		"./src/reddit/helpers/publicAccessNetwork/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "f", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "a", (function() {
				return m
			}));
			var n = i("./src/config.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/reddit/constants/things.ts");
			const o = e => e.startsWith(s.b) ? e.slice(3) : e,
				d = e => e.startsWith(s.b) ? e : `${s.b}${e}`,
				a = () => `/${r.Nb.PUBLIC_ACCESS_NETWORK}/`,
				l = e => `${a()}${o(e)}`,
				u = e => `${a()}r/${e}/`,
				c = (e, t) => t ? `${u(t)}${o(e)}` : l(e),
				_ = ({
					post: e
				}) => c(e.id, e.subreddit.name),
				m = e => `${n.a.redditUrl}${l(e)}`
		},
		"./src/reddit/helpers/r2/normalizeAwardingsFromR2.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			}));
			var n = i("./src/reddit/models/Gold/Award.ts");
			t.a = e => e.map(e => ({
				awardType: e.award_type,
				awardSubType: e.award_sub_type ? e.award_sub_type : n.b.Global,
				coinPrice: e.coin_price,
				coinReward: e.coin_reward,
				count: e.count,
				daysOfDripExtension: e.days_of_drip_extension,
				daysOfPremium: e.days_of_premium,
				description: e.description,
				iconUrl: e.icon_url,
				resizedIcons: e.resized_icons,
				resizedStaticIcons: e.resized_static_icons,
				id: e.id,
				isEnabled: e.is_enabled,
				isNew: !!e.is_new,
				name: e.name,
				staticIconUrl: e.static_icon_url,
				subredditCoinReward: e.subreddit_coin_reward,
				tags: e.tags,
				tiers: Object(n.o)(e.tiersByRequiredAwardings)
			}));
			const r = e => {
					const {
						icon_url: t,
						resized_icons: i,
						resized_static_icons: r,
						static_icon_url: s
					} = e;
					let o, d, a, l, u, c;
					for (const {
							url: n,
							width: _
						} of i || []) 32 === _ && (o = {
						url: n
					}), 64 === _ && (d = {
						url: n
					}), 128 === _ && (a = {
						url: n
					});
					for (const {
							url: n,
							width: _
						} of r || []) 32 === _ && (l = {
						url: n
					}), 64 === _ && (u = {
						url: n
					}), 128 === _ && (c = {
						url: n
					});
					return {
						awardType: e.award_type.toUpperCase(),
						awardSubType: e.award_sub_type ? e.award_sub_type.toUpperCase() : n.d.Global,
						coinPrice: e.coin_price,
						coinReward: e.coin_reward,
						daysOfDripExtension: e.days_of_drip_extension,
						daysOfPremium: e.days_of_premium,
						description: e.description,
						id: e.id,
						isEnabled: e.is_enabled,
						isNew: !!e.is_new,
						name: e.name,
						icon: {
							url: t
						},
						icon32: o,
						icon64: d,
						icon128: a,
						staticIcon: {
							url: s
						},
						staticIcon32: l,
						staticIcon64: u,
						staticIcon128: c,
						subredditCoinReward: e.subreddit_coin_reward,
						tags: e.tags,
						tiers: Object(n.o)(e.tiersByRequiredAwardings)
					}
				},
				s = e => {
					const {
						top_award: t,
						total_count: i
					} = e;
					return {
						topAward: t && r(t),
						totalCount: i
					}
				}
		},
		"./src/reddit/helpers/r2/normalizeProfileSubredditFromR2/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/sentry/index.ts"),
				r = i("./src/reddit/helpers/r2/normalizeSubredditFromR2/index.ts"),
				s = i("./src/reddit/models/Subreddit/index.ts");
			t.a = (e, t, i) => {
				const {
					wls: o,
					...d
				} = Object(r.a)(e);
				return d.type !== s.f.User && n.c.captureMessage("Wrong subreddit type for Profile"), {
					...d,
					acceptFollowers: i,
					name: t
				}
			}
		},
		"./src/reddit/helpers/r2/normalizeSubredditFromR2/index.ts": function(e, t, i) {
			"use strict";
			t.a = e => ({
				allowContractors: e.allow_contractors,
				communityIcon: e.community_icon,
				displayText: e.display_name_prefixed,
				icon: {
					height: e.icon_size ? e.icon_size[1] : 0,
					url: e.community_icon || e.icon_img || "",
					width: e.icon_size ? e.icon_size[0] : 0
				},
				id: e.name,
				isNSFW: e.over_18 || e.over18,
				isQuarantined: !!e.quarantine,
				name: e.display_name,
				primaryColor: e.primary_color,
				publicDescription: e.public_description,
				subscribers: e.subscribers,
				title: e.title,
				type: e.subreddit_type,
				url: e.url,
				wls: e.wls
			})
		},
		"./src/reddit/helpers/redesignOptoutCookie/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			}));
			var n = i("./src/config.ts"),
				r = i("./node_modules/js-cookie/src/js.cookie.js"),
				s = i.n(r);
			const o = "redesign_optout";

			function d() {
				const e = new Date;
				return e.setFullYear(e.getFullYear() + 3), e
			}

			function a() {
				s.a.get(o) || s.a.set(o, "true", {
					domain: n.a.cookieDomain,
					expires: d()
				})
			}

			function l() {
				s.a.get(o) && s.a.remove(o, {
					domain: n.a.cookieDomain
				})
			}
		},
		"./src/reddit/helpers/routeKey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return F
			})), i.d(t, "c", (function() {
				return C
			})), i.d(t, "d", (function() {
				return j
			})), i.d(t, "e", (function() {
				return x
			})), i.d(t, "a", (function() {
				return D
			}));
			var n = i("./node_modules/lodash/pick.js"),
				r = i.n(n),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/makeCommentsPageKey/index.ts"),
				d = i("./src/lib/makeListingKey/index.ts"),
				a = i("./src/lib/makePostCreationPageKey/index.ts"),
				l = i("./src/lib/makeSearchKey/index.ts"),
				u = i("./src/reddit/actions/pages/countrySite/constants.ts"),
				c = i("./src/reddit/constants/listings.ts"),
				_ = i("./src/reddit/constants/page.ts"),
				m = i("./src/reddit/constants/parameters.ts"),
				p = i("./src/reddit/constants/postLayout.ts"),
				h = i("./src/reddit/constants/wiki.ts"),
				f = i("./src/reddit/helpers/getCommentsPageSort/index.ts"),
				b = i("./src/reddit/helpers/getSubredditSortForListingKeyCreation/index.ts"),
				g = i("./src/reddit/helpers/makeProfileListingKey/index.ts"),
				w = i("./src/reddit/models/Comment/index.ts"),
				v = i("./src/reddit/models/Multireddit/index.ts"),
				y = i("./src/reddit/models/Post/index.ts"),
				E = i("./src/reddit/models/User/index.ts"),
				S = i("./src/reddit/routes/modListing/index.ts"),
				T = i("./src/reddit/selectors/experiments/serpRedesignLayout.ts"),
				O = i("./src/reddit/selectors/frontpage.ts"),
				I = i("./src/reddit/selectors/meta.ts"),
				R = i("./src/reddit/selectors/user.ts");
			const F = (e, t, i) => {
					const {
						route: n
					} = e, {
						name: r
					} = n.meta;
					if (!r || !s.V.has(r) && r !== s.Nb.COINS && r !== s.Nb.COMMENTS && r !== s.Nb.POST_CREATION && r !== s.Nb.PREMIUM && r !== s.Nb.PUBLIC_ACCESS_NETWORK && r !== s.Nb.SEARCH_RESULTS && r !== s.Nb.EXPLORE && r !== s.Nb.SETTINGS && r !== s.Nb.SUBREDDIT_WIKI || !i && (r === s.Nb.COMMENTS || r === s.Nb.DUPLICATES)) return null;
					switch (r) {
						case s.Nb.POST_CREATION:
							return Object(a.a)(e.match.params);
						case s.Nb.INTERNATIONAL_SITE_PAGE:
						case s.Nb.INDEX:
						case s.Nb.LISTING:
						case s.Nb.SUBREDDIT:
						case s.Nb.TOPIC:
							return C(e, t).listingKey;
						case s.Nb.PROFILE_COMMENTS:
						case s.Nb.PROFILE_POSTS:
						case s.Nb.PROFILE_OVERVIEW:
						case s.Nb.PROFILE_PRIVATE:
							return j(e, t);
						case s.Nb.MULTIREDDIT:
							return A(e, t);
						case s.Nb.COMMENTS:
							return D(e, t, i);
						case s.Nb.SEARCH_RESULTS:
							return x(e, t);
						case s.Nb.SUBREDDIT_WIKI:
							return L(e);
						case s.Nb.COINS:
						case s.Nb.PREMIUM:
						case s.Nb.PUBLIC_ACCESS_NETWORK:
							return r;
						case s.Nb.SETTINGS:
							return P(e);
						default:
							return null
					}
				},
				N = {
					listingKey: null
				},
				C = (e, t) => {
					const {
						route: i,
						match: n
					} = e, {
						name: r
					} = i.meta;
					if (!s.V.has(r) && r !== s.Nb.POST_CREATION && r !== s.Nb.SUBREDDIT_WIKI) return N;
					const {
						queryParams: o
					} = n;
					switch (r) {
						case s.Nb.INDEX:
						case s.Nb.LISTING: {
							const e = Object(O.a)(t),
								i = n.params,
								r = i.sort ? i.sort : e;
							return {
								listingKey: Object(d.a)(_.b, r, o),
								sort: r
							}
						}
						case s.Nb.PROFILE_COMMENTS:
						case s.Nb.PROFILE_POSTS: {
							const {
								profileName: e
							} = n.params, {
								sort: t
							} = o;
							return {
								listingKey: Object(d.a)(`u_${e}`, t, o),
								sort: t
							}
						}
						case s.Nb.POST_CREATION:
						case s.Nb.SUBREDDIT: {
							const e = n.params,
								{
									subredditName: i
								} = e,
								r = o.f,
								a = Object(b.a)(e, t);
							if (r) {
								const e = Object(l.d)(o, Object(R.ib)(t));
								return {
									listingKey: Object(l.b)(i, void 0, e),
									sort: a
								}
							}
							return i === _.d.Popular && a === s.W.HOT && (o.geo_filter = o.geo_filter || Object(I.k)(t) || ""), {
								listingKey: Object(d.a)(i, a, o),
								sort: a
							}
						}
						case s.Nb.TOPIC: {
							const e = n.params,
								t = e.sort || s.X,
								i = e.topicSlug;
							return {
								listingKey: Object(d.a)(c.b.Topic, t, {
									...e,
									topicSlug: i
								}),
								sort: t
							}
						}
						case s.Nb.MOD_LISTING: {
							const e = n.params,
								{
									sort: t = s.X
								} = e,
								i = Object(S.d)(n.path) ? _.f : _.e;
							return {
								listingKey: Object(d.a)(i, t, o),
								sort: t
							}
						}
						case s.Nb.MULTIREDDIT:
							return {
								listingKey: A(e, t)
							};
						case s.Nb.SEARCH_RESULTS:
							return {
								listingKey: F(e, t, null)
							};
						case s.Nb.INTERNATIONAL_SITE_PAGE: {
							const e = n.params,
								t = s.X;
							return {
								listingKey: Object(d.a)(u.d, t, e),
								sort: t
							}
						}
						default:
							return N
					}
				},
				j = (e, t) => {
					const {
						route: i,
						match: n
					} = e, {
						name: r
					} = i.meta;
					if (!s.V.has(r) && r !== s.Nb.POST_CREATION) return null;
					const {
						params: o,
						queryParams: a
					} = n, {
						profileName: l
					} = o, {
						sort: u = s.Eb
					} = a;
					switch (r) {
						case s.Nb.PROFILE_OVERVIEW:
							const e = (t.user.prefs && t.user.prefs.profileLayout ? t.user.prefs.profileLayout : p.g.Large) === p.g.Compact ? s.tb : s.ub;
							return Object(g.a)((l || "").toLowerCase(), e, u, a);
						case s.Nb.PROFILE_COMMENTS:
						case s.Nb.PROFILE_POSTS:
							return Object(d.a)(`u_${l}`, u, a);
						case s.Nb.PROFILE_PRIVATE:
							const {
								listingType: i
							} = o;
							return Object(g.b)(l.toLowerCase(), i);
						default:
							return null
					}
				},
				A = (e, t) => {
					const {
						route: i,
						match: n
					} = e, {
						name: r
					} = i.meta;
					if (r !== s.Nb.MULTIREDDIT) return null;
					const {
						params: o,
						queryParams: a
					} = n, {
						multiredditName: l,
						sort: u = s.W.HOT
					} = o;
					let {
						username: c
					} = o;
					c || (c = t.user.account ? Object(E.e)(t.user.account) : "me");
					const _ = Object(v.h)(c, l);
					return Object(d.a)(_, u, a)
				},
				x = (e, t) => {
					const {
						route: i,
						match: n
					} = e, {
						name: o
					} = i.meta;
					if (o !== s.Nb.SEARCH_RESULTS) return null;
					const {
						subredditName: d
					} = n.params, {
						username: a
					} = n.params, u = Object(T.a)(t), c = Object(s.sc)(u), _ = Object(l.e)(r()(n.queryParams, m.u), c);
					return Object(l.b)(d, a, _)
				},
				D = (e, t, i) => {
					const {
						route: n,
						match: r
					} = e, {
						name: d
					} = n.meta;
					if (!d || d !== s.Nb.COMMENTS) return null;
					const {
						partialCommentId: a,
						partialPostId: l
					} = r.params, u = Object(y.t)(l), c = a && Object(w.h)(a), {
						hasSortParam: _,
						sortToUse: m
					} = Object(f.a)(t, u);
					return Object(o.a)(u, c, {
						sort: m,
						hasSortParam: _
					})
				},
				P = e => "SettingsPage-" + e.match.params.page,
				L = e => {
					const {
						route: t,
						match: i
					} = e;
					if (t.meta.name !== s.Nb.SUBREDDIT_WIKI) return;
					const {
						subredditName: n = h.e,
						wikiPageName: r,
						wikiSubRoute: o
					} = i.params;
					return ["Wiki", n, o, r].join("--")
				}
		},
		"./src/reddit/helpers/search/SearchTelemetrySource.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.SERP = "SERP", e.Typeahead = "typeahead"
				}(n || (n = {}))
		},
		"./src/reddit/helpers/search/getQueryWithNsfwSetting.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			i("./src/lib/constants/index.ts").Pb;
			const n = (e, t, i, n) => {
				return !n && (i || !(e && t))
			}
		},
		"./src/reddit/helpers/search/searchImpressionId.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./node_modules/uuid/v4.js"),
				r = i.n(n),
				s = i("./src/reddit/helpers/search/SearchTelemetrySource.ts");
			class o {
				static get(e) {
					return o.activeImpressions[e] ? o.activeImpressions[e] : o.update(e)
				}
				static update(e) {
					return o.activeImpressions[e] = r()(), o.activeImpressions[e]
				}
				static clear() {
					o.activeImpressions = {
						[s.a.SERP]: "",
						[s.a.Typeahead]: ""
					}
				}
			}
			o.activeImpressions = {
				[s.a.SERP]: "",
				[s.a.Typeahead]: ""
			}
		},
		"./src/reddit/helpers/search/searchQueryId.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./src/lib/makeSearchKey/index.ts"),
				r = i("./node_modules/uuid/v4.js"),
				s = i.n(r);
			class o {
				static get(e, t) {
					const i = o.createKey(e, t);
					return o.getOrGenerate(i)
				}
				static set(e, t) {
					o.queryIds[e] = t
				}
				static createKey(e, t) {
					const i = Object(n.e)(e);
					return `${t}-${Object(n.b)(void 0,void 0,{...i})}`
				}
				static generate(e) {
					const t = s()();
					return o.set(e, t), o.queryIds[e]
				}
				static getOrGenerate(e) {
					return o.queryIds[e] ? o.queryIds[e] : o.generate(e)
				}
				static clear(e) {
					e ? delete o.queryIds[e] : o.queryIds = {}
				}
			}
			o.queryIds = {}
		},
		"./src/reddit/helpers/survey/config.json": function(e) {
			e.exports = JSON.parse('{"surveyCooldownDays":182,"activeSurveys":[{"experimentName":"nps_survey_scroll_trigger","triggerEvent":"feed_scroll_1_page","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":2,"sampleFactor":0.5}],"steps":[{"type":"NPS","question":"How likely are you to recommend Reddit to a friend?","followUpQuestion":"What\'s your main reason for feeling that way?"}]},{"experimentName":"d2x_nps_survey_dismiss_post_trigger","triggerEvent":"dismiss_post","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":3,"sampleFactor":0.01}],"steps":[{"type":"NPS","question":"How likely are you to recommend Reddit to a friend?","followUpQuestion":"What is the primary reason for your rating?"}]},{"experimentName":"survey_demo_nps_1","triggerEvent":"feed_scroll_1_page","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":1}],"steps":[{"type":"NPS","question":"How likely are you to recommend Reddit to a friend?","followUpQuestion":"What is the primary reason for your score?"}]},{"experimentName":"survey_demo_combined_1","triggerEvent":"mods_feed_scroll_1_page","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":1}],"steps":[{"type":"CSAT","question":"How would you rate your overall satisfaction with moderating on Reddit?","followUpQuestion":"What is the primary reason for your score with moderating on Reddit?"},{"type":"CES","question":"How easy is it to use the Reddit moderation tools available on this device?","followUpQuestion":"What is the primary reason for your score with moderation tools on this device?"}]},{"experimentName":"d2x_search_survey","triggerEvent":"search_view_trigger","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":0.05}],"steps":[{"type":"multi_choice","question":"Did you find what you were looking for","question_options":["Yes","No"],"followUpQuestion":"Why or why not?"}]},{"experimentName":"d2x_chat_survey","triggerEvent":"chat_view_trigger","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":0.15}],"steps":[{"type":"CSAT","question":"How would you rate your overall satisfaction with Reddit\'s chat?","followUpQuestion":"What is the primary reason for your score?"}]},{"experimentName":"d2x_mods_survey","triggerEvent":"mods_feed_scroll_1_page","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":1}],"steps":[{"type":"CSAT","question":"How would you rate your overall satisfaction with moderating on Reddit?","followUpQuestion":"What is the primary reason for your score with moderating on Reddit?"},{"type":"CES","question":"How easy is it to use the Reddit moderation tools available on this device?","followUpQuestion":"What is the primary reason for your score with moderation tools on this device?"}]},{"experimentName":"d2x_nps_survey_dismiss_signup_trigger","triggerEvent":"dismiss_signup_trigger","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":0.3}],"steps":[{"type":"NPS","question":"How likely are you to recommend signing up for Reddit to a friend or colleague?","followUpQuestion":"What is the primary reason for your score?"}]},{"experimentName":"d2x_nps_survey_successful_signup_trigger","triggerEvent":"successful_signup_trigger","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":0.75}],"steps":[{"type":"NPS","question":"How likely are you to recommend signing up for Reddit to a friend or colleague?","followUpQuestion":"What is the primary reason for your score?"}]},{"experimentName":"d2x_belonging_survey","triggerEvent":"feed_scroll_1_page","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":2,"sampleFactor":0.1}],"steps":[{"type":"multi_choice","question":"Do you feel that Reddit is a place for you?","questionOptions":["Yes","No"],"followUpQuestion":"What makes you feel that way?"},{"type":"multi_choice","question":"Do you feel connected to other people who also use Reddit?","questionOptions":["Yes","No"],"followUpQuestion":"What makes you feel that way?"}]},{"experimentName":"d2x_belonging_survey_demo","triggerEvent":"feed_scroll_1_page","variants":[{"variantName":"enabled","surveyEnabled":true,"triggerThreshold":1,"sampleFactor":1}],"steps":[{"type":"multi_choice","question":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore dolore magna aliqua?","questionOptions":["Lorem ipsum dolor sit consectetur adipis (1)","Lorem ipsum dolor sit consectetur adipis (2)","Lorem ipsum dolor sit consectetur adipis (3)","Lorem ipsum dolor sit consectetur adipis (4)","Lorem ipsum dolor sit consectetur adipis (5)","Lorem ipsum dolor sit consectetur adipis (6)"],"followUpQuestion":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore dolore magna aliqua?"}]}]}')
		},
		"./src/reddit/helpers/survey/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return c
			})), i.d(t, "h", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "a", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "e", (function() {
				return f
			})), i.d(t, "i", (function() {
				return g
			})), i.d(t, "g", (function() {
				return w
			})), i.d(t, "d", (function() {
				return v
			}));
			var n = i("./node_modules/brcast/dist/brcast.es.js"),
				r = i("./node_modules/lodash/once.js"),
				s = i.n(r),
				o = function(e, t, i) {
					return t = t || 1, (i = i || 0) + (9301 * (e = "number" == typeof e ? e : e.split("").reduce((e, t) => t.charCodeAt(0) + e, 0)) + 49297) % 233280 / 233280 * (t - i)
				},
				d = i("./src/reddit/actions/survey/constants.ts"),
				a = i("./src/reddit/helpers/localStorage/index.ts"),
				l = i("./src/reddit/models/Survey/index.ts");
			const u = i("./src/reddit/helpers/survey/config.json"),
				c = s()(() => Object(n.a)()),
				_ = s()(() => Object(n.a)());
			var m;
			! function(e) {
				e.dismiss_post = "dismiss_post", e.feed_scroll_1_page = "feed_scroll_1_page", e.layer_feed_scroll_1_page = "layer_feed_scroll_1_page", e.mods_feed_scroll_1_page = "mods_feed_scroll_1_page", e.videos_watched = "videos_watched", e.chat_view_trigger = "chat_view_trigger", e.search_view_trigger = "search_view_trigger", e.dismiss_signup_trigger = "dismiss_signup_trigger", e.successful_signup_trigger = "successful_signup_trigger"
			}(m || (m = {}));
			const p = {
					[d.g]: m.mods_feed_scroll_1_page,
					[d.f]: m.layer_feed_scroll_1_page,
					[d.l]: m.feed_scroll_1_page,
					[d.h]: m.dismiss_post,
					[d.m]: m.videos_watched,
					[d.a]: m.chat_view_trigger,
					[d.j]: m.search_view_trigger,
					[d.e]: m.dismiss_signup_trigger,
					[d.k]: m.successful_signup_trigger
				},
				h = ({
					triggerName: e,
					isDemoEnabled: t,
					activeDemoTrigger: i,
					demoTriggerThreshold: n
				}) => {
					const r = Object(a.R)();
					return t && i === e && r && r[e] && r[e] >= n ? (e => ({
						experimentName: "desktop_local_survey_demo",
						triggerEvent: e,
						variants: [{
							variantName: "enabled",
							surveyEnabled: !0,
							triggerThreshold: 1,
							sampleFactor: 1
						}],
						steps: [{
							type: l.a.CSAT,
							question: "How would you rate your overall satisfaction with search on Reddit?",
							followUpQuestion: "What is the primary reason for your score on overall satisfaction with search?"
						}, {
							type: l.a.NPS,
							question: "How likely are you to recommend Reddit to a friend?",
							followUpQuestion: "What's your main reason for feeling that way?"
						}, {
							type: l.a.CES,
							question: "How easy was it to use Reddit search?",
							followUpQuestion: "What is the primary reason for your score on the ease of searching?"
						}, {
							type: l.a.MULTI_CHOICE,
							question: "Do you feel that Reddit is a place for you?",
							questionOptions: ["Yes", "No", "Maybe", "Not Really", "Absolutely", "Not Sure"],
							followUpQuestion: "What makes you feel that way?"
						}]
					}))(e) : null
				},
				f = ({
					triggerName: e,
					surveyExperimentVariants: t,
					samplingId: i,
					isSampleFactorEnabled: n,
					isSurveyServiceMigrationEnabled: r
				}) => {
					var s;
					const d = Object(a.R)(),
						l = Object(a.Q)(),
						u = n && !Object(a.X)(),
						c = b(r);
					if (!c) return null;
					const _ = 864e5 * c.surveyCooldownDays;
					if (!d || !d[e] || l && Date.now() - l <= _) return null;
					const m = [],
						{
							activeSurveys: p
						} = c;
					for (let a = 0; a < p.length; a++) {
						const {
							experimentName: n,
							triggerEvent: r,
							variants: l
						} = p[a], c = null === (s = t[n]) || void 0 === s ? void 0 : s.variant, _ = c && l.find(e => e.variantName === c);
						r !== e || !d[r] || !_ || !_.surveyEnabled || d[r] < _.triggerThreshold || u && o(i + n) > _.sampleFactor || m.push(p[a])
					}
					return m.length ? m[Math.floor(Math.random() * m.length)] : null
				},
				b = e => {
					if (e) {
						const e = Object(a.F)();
						return e || null
					}
					return u
				},
				g = (e, t) => {
					const {
						triggerEvent: i
					} = e;
					Object(a.Vb)(t), Object(a.hb)(i)
				},
				w = e => {
					const t = b(e);
					return t ? t.activeSurveys.map(e => e.experimentName) : []
				},
				v = e => e.steps.reduce((e, t) => e + 1 + (t.followUpQuestion ? 1 : 0), 0)
		},
		"./src/reddit/helpers/timeApiRoute/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/telemetry/index.ts");
			async function s(e, t) {
				const i = r.c.start();
				try {
					const s = await t();
					return Object(r.b)(n.n.Redesign, {
						page: e,
						type: "route",
						duration: r.c.end(i)
					}), s
				} finally {
					r.c.cancel(i)
				}
			}
		},
		"./src/reddit/helpers/trackers/authorHovercard.ts": function(e, t, i) {
			"use strict";
			i.d(t, "h", (function() {
				return s
			})), i.d(t, "g", (function() {
				return o
			})), i.d(t, "f", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "e", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			}));
			var n = i("./src/reddit/helpers/isComment.ts"),
				r = i("./src/reddit/selectors/telemetry.ts");
			const s = (e, t) => ({
					comment: t && Object(n.a)(t) ? r.i(e, t) : null,
					post: t ? r.J(e, t) : null,
					profile: r.S(e, t),
					screen: r.bb(e),
					snoovatar: t ? r.gb(e, t) : null,
					user: r.rb(e)
				}),
				o = (e, t) => i => ({
					source: "user_hovercard",
					action: "click",
					noun: e,
					...s(i, t)
				}),
				d = e => t => ({
					source: "user_hovercard",
					action: "view",
					noun: "hover_user_hovercard",
					...s(t, e)
				}),
				a = e => t => ({
					source: "user_hovercard",
					action: "click",
					noun: "mute_dialog_in_context",
					...s(t, e)
				}),
				l = e => t => ({
					source: "user_hovercard",
					action: "click",
					noun: "ban_dialog_in_context",
					...s(t, e)
				}),
				u = e => t => ({
					source: "user_hovercard",
					action: "click",
					noun: "unban_user_in_context",
					...s(t, e)
				}),
				c = e => t => ({
					source: "user_hovercard",
					action: "click",
					noun: "change_user_flair_in_context",
					userSubreddit: r.tb(t),
					...s(t, e)
				}),
				_ = e => t => ({
					source: r.S(t) ? "user_profile" : "user_hovercard",
					action: "click",
					noun: "create_chat",
					...e && s(t, e)
				})
		},
		"./src/reddit/helpers/trackers/blockingInterstitial.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			}));
			var n, r, s, o = i("./src/reddit/selectors/telemetry.ts"),
				d = i("./src/telemetry/index.ts");
			! function(e) {
				e.Dismiss = "dismiss", e.View = "view"
			}(n || (n = {})),
			function(e) {
				e.Load = "few_comments", e.SsoSignup = "sso_signup"
			}(r || (r = {})),
			function(e) {
				e.Popup = "popup", e.PostDetail = "post_detail"
			}(s || (s = {}));
			const a = e => Object(d.a)({
					...Object(o.o)(e),
					source: s.Popup,
					action: n.View,
					noun: r.SsoSignup,
					actionInfo: Object(o.d)(e)
				}),
				l = () => e => ({
					...Object(o.o)(e),
					source: s.Popup,
					action: n.Dismiss,
					noun: r.SsoSignup,
					actionInfo: Object(o.d)(e)
				})
		},
		"./src/reddit/helpers/trackers/emailCollection.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			}));
			var n = i("./src/reddit/constants/tracking.ts"),
				r = i("./src/reddit/selectors/telemetry.ts");
			const s = e => t => ({
					source: e,
					action: n.c.VIEW,
					actionInfo: r.d(t, {
						settingValue: "footer_2"
					}),
					noun: "email_collection"
				}),
				o = e => t => ({
					source: e,
					action: n.c.CLICK,
					actionInfo: r.d(t, {
						settingValue: "footer_2"
					}),
					noun: "add_email_collection"
				}),
				d = e => t => ({
					source: e,
					action: "close",
					actionInfo: r.d(t, {
						settingValue: "footer_2"
					}),
					noun: "email_collection"
				}),
				a = e => ({
					...r.o(e),
					source: "popup",
					action: n.c.CLICK,
					actionInfo: r.d(e, {
						settingValue: "footer_2"
					}),
					noun: "save_email_collection"
				}),
				l = e => t => ({
					...r.o(t),
					source: "popup",
					action: n.c.CLICK,
					actionInfo: r.d(t, {
						reason: e ? "1" : "0",
						settingValue: "footer_2"
					}),
					noun: "email_digest_check"
				}),
				u = e => ({
					...r.o(e),
					source: "popup",
					action: n.c.CLICK,
					actionInfo: r.d(e, {
						settingValue: "footer_2"
					}),
					noun: "email_settings_link"
				})
		},
		"./src/reddit/helpers/trackers/emailVerification.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "g", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			}));
			var n = i("./src/reddit/selectors/telemetry.ts");
			const r = "tooltip",
				s = e => t => ({
					...Object(n.o)(t),
					action: "view",
					noun: "verification",
					source: e
				}),
				o = e => t => ({
					...Object(n.o)(t),
					action: "close",
					noun: "verification",
					source: e
				}),
				d = (e, t) => i => ({
					...Object(n.o)(i),
					action: "click",
					noun: `verification_${t}`,
					source: e
				}),
				a = e => t => ({
					...Object(n.o)(t),
					action: "send",
					noun: `verification_email_${e}`,
					source: "email"
				}),
				l = e => t => ({
					...Object(n.o)(t),
					action: "click",
					noun: `verification_email_${e}`,
					source: "email"
				}),
				u = () => e => ({
					...Object(n.o)(e),
					action: "confirm",
					noun: "verification_email",
					source: "email"
				})
		},
		"./src/reddit/helpers/trackers/global.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "e", (function() {
				return f
			})), i.d(t, "d", (function() {
				return b
			})), i.d(t, "c", (function() {
				return g
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/makeSearchKey/index.ts"),
				s = i("./src/reddit/constants/tracking.ts"),
				o = i("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				d = i("./src/reddit/selectors/profile.ts"),
				a = i("./src/reddit/selectors/searchResults.ts"),
				l = i("./src/reddit/selectors/subreddit.ts"),
				u = i("./src/reddit/selectors/telemetry.ts"),
				c = i("./src/telemetry/index.ts"),
				_ = i("./src/telemetry/models/Timer.ts"),
				m = i("./src/reddit/helpers/trackers/searchResults.ts");
			const p = e => Object(c.a)({
					...u.o(e),
					source: "global",
					action: "view",
					noun: "empty"
				}),
				h = e => t => ({
					...u.o(t),
					action: "leave",
					actionInfo: u.d(t, {
						reason: e
					}),
					noun: "app",
					source: "global"
				}),
				f = (e, t) => (i, n, r, s) => ({
					...u.o(i),
					action: "refocus",
					actionInfo: {
						reason: u.d(i, {
							reason: e
						}).reason,
						pageType: t
					},
					noun: "ad",
					source: "post",
					post: u.J(i, r),
					adClick: {
						landingPageDuration: n
					},
					adMetadata: {
						impressionId: s
					}
				}),
				b = e => t => ({
					...u.o(t),
					action: "view",
					noun: "heartbeat",
					source: "global",
					timer: {
						type: _.TimerType.GoodVisit,
						millis: e
					}
				}),
				g = (e, t, i, c, p) => h => {
					const {
						partialCommentId: f,
						partialPostId: b,
						profileName: g,
						subredditName: w
					} = i.match.params, v = f ? `${n.Ib.Comment}_${f}` : "", y = Object(a.d)(h, v), E = b ? `${n.Ib.Post}_${b}` : "", S = g ? Object(d.m)(h, g) : "", T = Object(l.D)(h, w), O = n.M.has(t), I = u.H(h, null), R = Object(r.e)((null == p ? void 0 : p.queryParams) || {});
					return {
						...u.o(h),
						source: m.c.GLOBAL,
						action: s.c.VIEW,
						noun: m.a.HEARTBEAT,
						actionInfo: Object(m.i)(h, null, I, null),
						comment: y ? u.j(h, y, w) : void 0,
						post: u.J(h, E),
						profile: u.W(h, S),
						search: O ? u.cb(h, R, o.a.SERP, !!T) : void 0,
						subreddit: w ? u.nb(h, T) : void 0,
						timer: {
							type: O ? _.TimerType.GoodVisitSearch : _.TimerType.GoodVisitFeed,
							millis: e,
							referrer: t,
							referrerCorrelationId: c
						}
					}
				}
		},
		"./src/reddit/helpers/trackers/media.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./src/reddit/selectors/telemetry.ts");
			const r = (e, t, i) => r => ({
					source: "videoplayer",
					action: t,
					noun: i,
					post: n.J(r, e),
					media: n.C(r, e),
					profile: n.S(r),
					subreddit: n.jb(r),
					actionInfo: n.D(r, e),
					correlationId: n.ub()
				}),
				s = e => t => ({
					source: "videoplayer",
					action: "underrun",
					noun: "playback",
					post: n.J(t, e),
					profile: n.S(t),
					subreddit: n.jb(t),
					actionInfo: n.D(t, e),
					media: n.C(t, e)
				}),
				o = (e, t, i) => s => ({
					...r(e, t, i)(s),
					timer: n.vb(s, e),
					media: {
						...n.C(s, e),
						...n.wb(s, e)
					}
				})
		},
		"./src/reddit/helpers/trackers/post.ts": function(e, t, i) {
			"use strict";
			i.d(t, "p", (function() {
				return m
			})), i.d(t, "o", (function() {
				return p
			})), i.d(t, "b", (function() {
				return h
			})), i.d(t, "h", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "e", (function() {
				return y
			})), i.d(t, "n", (function() {
				return E
			})), i.d(t, "g", (function() {
				return S
			})), i.d(t, "f", (function() {
				return T
			})), i.d(t, "c", (function() {
				return O
			})), i.d(t, "m", (function() {
				return I
			})), i.d(t, "k", (function() {
				return N
			})), i.d(t, "j", (function() {
				return C
			})), i.d(t, "a", (function() {
				return j
			})), i.d(t, "l", (function() {
				return A
			})), i.d(t, "i", (function() {
				return x
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/constants/tracking.ts"),
				o = i("./src/reddit/helpers/correlationIdTracker.ts"),
				d = i("./src/reddit/models/Post/index.ts"),
				a = i("./src/reddit/selectors/experiments/listingBelow.ts"),
				l = i("./src/reddit/selectors/experiments/nsfwListingBelow.ts"),
				u = i("./src/reddit/selectors/telemetry.ts"),
				c = i("./src/telemetry/index.ts");
			const _ = e => e && e.meta && e.meta.name && e.meta.name === n.Nb.DUPLICATES,
				m = (e, t, i, n) => {
					const {
						currentPage: s
					} = e.platform, d = _(s) ? "other_discussions" : "post", l = Object(a.c)(e), m = Object(o.c)(o.a.LinkedPosts);
					if (m && n && n.hostPostId && n.isEligibleForLinkedPosts && l) {
						const {
							baseUrl: s,
							canonicalUrl: o,
							hostPostId: d,
							subreddit: a
						} = n, _ = u.o(e);
						return Object(c.a)({
							..._,
							action: "view",
							actionInfo: u.d(e, {
								position: "number" == typeof i ? i + 1 : void 0
							}),
							correlationId: m,
							experiment: u.q(e, r.qd),
							media: u.C(e, t),
							mlModel: u.B(l, d),
							noun: "post",
							poll: u.O(e, t),
							post: u.J(e, t),
							profile: u.S(e),
							predictions: u.P(e, t),
							request: {
								..._.request,
								base_url: s,
								canonical_url: o
							},
							source: "post_detail",
							subreddit: a
						})
					}
					const p = R(e, n);
					return Object(c.a)({
						source: d,
						action: "view",
						noun: "post",
						...u.o(e),
						actionInfo: u.d(e, {
							position: i
						}),
						poll: u.O(e, t),
						post: u.J(e, t),
						profile: u.S(e),
						predictions: u.P(e, t),
						media: u.C(e, t),
						screen: u.bb(e),
						subreddit: u.jb(e),
						feed: u.r(e),
						...p
					})
				},
				p = (e, t) => Object(c.a)({
					source: "post",
					action: "view",
					noun: "ad",
					...u.o(e),
					post: u.J(e, t),
					media: u.C(e, t),
					screen: u.bb(e),
					subreddit: u.jb(e),
					feed: u.r(e)
				}),
				h = (e, t, i, n, r) => Object(c.a)({
					source: "post",
					action: "consume",
					noun: "post",
					...u.o(e),
					actionInfo: u.d(e, {
						position: n
					}),
					listing: u.A(e, void 0, void 0, r),
					post: u.J(e, t, i),
					media: u.C(e, t),
					screen: u.bb(e),
					subreddit: u.jb(e),
					feed: u.r(e)
				}),
				f = (e, t, i, n) => ({
					noun: n,
					post: u.J(e, t),
					source: i
				}),
				b = (e, t, i = "post", n, l, c, m) => p => {
					const h = u.J(p, e),
						b = u.o(p),
						{
							currentPage: g
						} = p.platform,
						w = _(g) ? ((e, t, i, n) => {
							const {
								currentPage: r
							} = e.platform;
							if (_(r)) {
								const i = Object(d.t)(r && r.urlParams.partialPostId || "");
								return {
									noun: "post",
									post: u.J(e, i),
									source: "other_discussions",
									targetPost: u.J(e, t)
								}
							}
							return f(e, t, i, n)
						})(p, e, i, t) : f(p, e, i, t),
						v = Object(a.c)(p) || c,
						y = Object(o.c)(o.a.LinkedPosts),
						E = n ? u.y(p, e, n) : null;
					if (y && l && l.hostPostId && l.isEligibleForLinkedPosts && v) {
						const {
							baseUrl: i,
							canonicalUrl: n,
							hostPostId: o,
							subreddit: d
						} = l;
						return {
							...b,
							action: s.c.CLICK,
							actionInfo: {
								...b.actionInfo,
								position: "number" == typeof E ? E + 1 : void 0,
								referralId: m
							},
							correlationId: y,
							experiment: u.q(p, r.qd),
							media: u.C(p, e),
							mlModel: u.B(v, o),
							noun: t,
							poll: u.O(p, e),
							post: h,
							predictions: u.P(p, e),
							profile: u.S(p),
							request: {
								...b.request,
								base_url: i,
								canonical_url: n
							},
							source: "post_detail",
							subreddit: d
						}
					}
					const S = R(p, l);
					return {
						...w,
						...b,
						action: s.c.CLICK,
						actionInfo: {
							...b.actionInfo,
							position: E,
							referralId: m
						},
						media: u.C(p, e),
						subreddit: u.jb(p) || u.mb(p, e),
						feed: u.r(p),
						...S
					}
				},
				g = (e, t) => i => Object(c.a)(w(e, t)(i)),
				w = (e, t, i = "post") => n => ({
					source: i,
					action: s.c.CLICK,
					noun: t,
					...u.o(n),
					post: u.J(n, e),
					media: u.C(n, e),
					screen: u.bb(n),
					session: u.fb(n),
					subreddit: u.jb(n)
				}),
				v = (e, t) => ({
					post: u.J(e, t),
					profile: u.S(e)
				}),
				y = e => t => ({
					action: "pin",
					noun: "post",
					source: "profile",
					...v(t, e),
					...u.o(t)
				}),
				E = e => t => ({
					action: "unpin",
					noun: "post",
					source: "profile",
					...v(t, e),
					...u.o(t)
				}),
				S = (e, t, i) => n => ({
					action: s.c.CLICK,
					noun: "vote",
					source: "poll",
					...u.o(n),
					poll: u.I(n, e, !0, i),
					post: u.J(n, t),
					subreddit: u.jb(n),
					userSubreddit: u.tb(n)
				}),
				T = (e, t) => i => ({
					action: "view",
					noun: "results",
					source: "poll",
					...u.o(i),
					poll: u.I(i, e, !1),
					post: u.J(i, t),
					subreddit: u.jb(i),
					userSubreddit: u.tb(i)
				}),
				O = e => t => ({
					action: s.c.CLICK,
					noun: "follow",
					source: "post",
					...u.o(t),
					post: u.J(t, e),
					subreddit: u.jb(t),
					userSubreddit: u.tb(t)
				}),
				I = e => t => ({
					action: s.c.UNDO,
					noun: "follow",
					source: "post",
					...u.o(t),
					post: u.J(t, e),
					subreddit: u.jb(t),
					userSubreddit: u.tb(t)
				}),
				R = (e, t) => {
					const i = Object(l.a)(e),
						n = Object(o.c)(o.a.NsfwLinkedPosts),
						s = t && t.hostPostId;
					let d = {};
					return i && (d = {
						correlationId: n,
						experiment: u.q(e, r.ae),
						mlModel: u.B(i, s)
					}), d
				};
			var F;
			! function(e) {
				e.overflowShowMore = "overflow_show_more", e.overflowShowLess = "overflow_show_less", e.overflowDisableAll = "overflow_disable_all", e.overflowEnableAll = "overflow_enable_all", e.communityNotRelevant = "community_not_relevant", e.sourceCommunityNotRelevant = "source_community_not_relevant", e.topicNotRelevant = "topic_not_relevant", e.postNotRelevant = "post_not_relevant"
			}(F || (F = {}));
			const N = e => w(e, F.overflowShowMore),
				C = e => w(e, F.overflowShowLess),
				j = e => w(e, F.communityNotRelevant, "recommendation_feedback"),
				A = e => w(e, F.sourceCommunityNotRelevant, "recommendation_feedback"),
				x = e => w(e, F.postNotRelevant, "recommendation_feedback")
		},
		"./src/reddit/helpers/trackers/postList.ts": function(e, t, i) {
			"use strict";
			i.d(t, "k", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "g", (function() {
				return a
			})), i.d(t, "h", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			})), i.d(t, "e", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "i", (function() {
				return m
			})), i.d(t, "j", (function() {
				return p
			})), i.d(t, "l", (function() {
				return h
			})), i.d(t, "d", (function() {
				return f
			})), i.d(t, "c", (function() {
				return b
			}));
			var n = i("./src/telemetry/index.ts"),
				r = i("./src/reddit/selectors/telemetry.ts");
			const s = (e, t) => ({
					...r.o(e),
					media: r.C(e, t),
					post: r.J(e, t),
					profile: r.S(e),
					subreddit: r.jb(e)
				}),
				o = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "stop",
						noun: "autoplay_initial_load"
					})
				},
				d = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "complete",
						noun: "autoplay_initial_load"
					})
				},
				a = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "start",
						noun: "autoplay_initial_load"
					})
				},
				l = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "start",
						noun: "autoplay_network_load"
					})
				},
				u = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "consume",
						noun: "autoplay"
					})
				},
				c = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "start",
						noun: "autoplay"
					})
				},
				_ = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "start",
						noun: "autoplay_buffering"
					})
				},
				m = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "stop",
						noun: "autoplay"
					})
				},
				p = (e, t) => {
					Object(n.a)({
						...s(e, t),
						source: "postlist",
						action: "stop",
						noun: "autoplay_buffering"
					})
				},
				h = (e, t) => {
					Object(n.a)({
						action: "view",
						source: "postlist",
						noun: "bottom",
						...r.o(e),
						listing: r.A(e, t),
						subreddit: r.jb(e)
					})
				},
				f = e => t => ({
					action: "view",
					source: "community_feed",
					noun: "new_post_pill",
					...r.o(t),
					listing: r.A(t, e),
					subreddit: r.jb(t)
				}),
				b = e => t => ({
					action: "click",
					source: "community_feed",
					noun: "new_post_pill",
					...r.o(t),
					listing: r.A(t, e),
					subreddit: r.jb(t)
				})
		},
		"./src/reddit/helpers/trackers/profileSettings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			})), i.d(t, "m", (function() {
				return p
			})), i.d(t, "l", (function() {
				return h
			})), i.d(t, "i", (function() {
				return b
			})), i.d(t, "h", (function() {
				return g
			})), i.d(t, "k", (function() {
				return w
			})), i.d(t, "d", (function() {
				return v
			})), i.d(t, "j", (function() {
				return y
			})), i.d(t, "b", (function() {
				return E
			})), i.d(t, "a", (function() {
				return S
			})), i.d(t, "g", (function() {
				return T
			}));
			var n = i("./node_modules/lodash/pick.js"),
				r = i.n(n),
				s = i("./src/reddit/constants/tracking.ts"),
				o = i("./src/reddit/selectors/telemetry.ts"),
				d = i("./src/telemetry/index.ts"),
				a = i("./src/telemetry/models/PostComposer.ts");
			const l = e => ({
					source: "profile_settings",
					...Object(o.o)(e)
				}),
				u = (e, t = []) => {
					const i = Object(o.l)(e);
					if (i) return r()(i, ["id", "name", "type", ...t])
				},
				c = e => {
					Object(d.a)({
						...l(e),
						noun: "twitter_connect_link",
						action: s.c.CLICK
					})
				},
				_ = e => {
					Object(d.a)({
						...l(e),
						noun: "twitter_disconnect_link",
						action: s.c.CLICK
					})
				},
				m = (e, t) => {
					Object(d.a)({
						...l(e),
						noun: "display_twitter_checkbox",
						action: Object(a.getToggleAction)(t)
					})
				},
				p = (e, t) => {
					Object(d.a)({
						...l(e),
						noun: "twitter_account",
						action: s.c.CLICK,
						profile: {
							id: t.id,
							name: t.username
						}
					})
				},
				h = e => {
					Object(d.a)({
						...l(e),
						profile: u(e, ["display_name", "about", "avatar_url", "cover_url", "nsfw", "content_visible", "communities_visible", "allow_follow"]),
						action: s.c.VIEW,
						noun: "settings_page"
					})
				},
				f = {
					profileIcon: "avatar",
					profileBanner: "cover"
				},
				b = (e, t) => {
					Object(d.a)({
						...l(e),
						profile: u(e, ["avatar_url", "cover_url"]),
						action: "upload",
						noun: f[t]
					})
				},
				g = (e, t) => {
					Object(d.a)({
						...l(e),
						profile: u(e, []),
						action: "remove",
						noun: f[t]
					})
				},
				w = e => {
					Object(d.a)({
						...l(e),
						profile: u(e, ["display_name", "about", "nsfw", "content_visible", "communities_visible", "allow_follow"]),
						action: "click",
						noun: "save_settings"
					})
				},
				v = e => t => ({
					...l(t),
					profile: u(t, []),
					action: e ? "select" : "deselect",
					noun: "content_visible"
				}),
				y = e => t => ({
					...l(t),
					profile: u(t, []),
					action: e ? "select" : "deselect",
					noun: "nsfw"
				}),
				E = e => t => ({
					...l(t),
					profile: u(t, []),
					action: e ? "select" : "deselect",
					noun: "active_in_communities"
				}),
				S = () => e => ({
					...Object(o.o)(e),
					source: "gender_app_settings",
					action: s.c.SELECT,
					noun: "gender"
				}),
				T = e => t => ({
					...l(t),
					profile: u(t, []),
					action: e ? "select" : "deselect",
					noun: "allow_follow"
				})
		},
		"./src/reddit/helpers/trackers/searchResults.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			})), i.d(t, "e", (function() {
				return b
			})), i.d(t, "u", (function() {
				return g
			})), i.d(t, "k", (function() {
				return w
			})), i.d(t, "w", (function() {
				return v
			})), i.d(t, "v", (function() {
				return y
			})), i.d(t, "x", (function() {
				return E
			})), i.d(t, "z", (function() {
				return S
			})), i.d(t, "b", (function() {
				return O
			})), i.d(t, "l", (function() {
				return I
			})), i.d(t, "y", (function() {
				return R
			})), i.d(t, "q", (function() {
				return F
			})), i.d(t, "i", (function() {
				return N
			})), i.d(t, "j", (function() {
				return C
			})), i.d(t, "p", (function() {
				return j
			})), i.d(t, "o", (function() {
				return A
			})), i.d(t, "h", (function() {
				return D
			})), i.d(t, "g", (function() {
				return P
			})), i.d(t, "t", (function() {
				return L
			})), i.d(t, "s", (function() {
				return k
			})), i.d(t, "d", (function() {
				return B
			})), i.d(t, "f", (function() {
				return M
			})), i.d(t, "m", (function() {
				return U
			})), i.d(t, "n", (function() {
				return G
			})), i.d(t, "r", (function() {
				return q
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/constants/posts.ts"),
				s = i("./src/reddit/constants/tracking.ts"),
				o = i("./src/reddit/helpers/correlationIdTracker.ts"),
				d = i("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				a = i("./src/reddit/models/SearchDiscoveryUnit/index.ts"),
				l = i("./src/reddit/selectors/experiments/serpSIIDs.ts"),
				u = i("./src/reddit/selectors/posts.ts"),
				c = i("./src/reddit/selectors/subreddit.ts"),
				_ = i("./src/reddit/selectors/telemetry.ts"),
				m = i("./src/reddit/helpers/search/searchImpressionId.ts");
			const p = {
				GLOBAL: "global",
				SEARCH: "search"
			};
			var h;
			! function(e) {
				e.COMMENT = "comment", e.HEARTBEAT = "heartbeat", e.PEOPLE = "people", e.RECENT = "recent_search", e.SUBREDDIT = "subreddit", e.TRENDING = "trending_search", e.TYPEAHEAD = "typeahead", e.QUERY_PROMPT = "query_prompt", e.SUBREDDIT_SEARCH = "subreddit_search"
			}(h || (h = {}));
			const f = {
					subreddit: h.SUBREDDIT,
					profile: h.PEOPLE
				},
				b = (e, t) => {
					const i = _.jb(e);
					return {
						screen: _.bb(e),
						subreddit: i && t && t.restrict_sr ? i : null
					}
				},
				g = (e, t, i, n, r) => s => ({
					...C(s, e, t, r, n, i),
					noun: "ad"
				}),
				w = (e, t, i) => r => {
					let o = !0;
					if (t.type.indexOf(n.bc.Posts) > -1) {
						const {
							api: t
						} = r.listings.listingOrder;
						o = o && !t.error[e] && !t.pending[e]
					}
					if (t.type.indexOf(n.bc.Subreddits) > -1 || t.type.indexOf(n.bc.Users) > -1) {
						const {
							api: t
						} = r.listings.postOrder;
						o = o && !t.error[e] && !t.pending[e]
					}
					return {
						...b(r, t),
						source: p.SEARCH,
						action: s.c.VIEW,
						noun: "search_results_post",
						actionInfo: _.d(r, {
							success: o,
							pageType: "search_results",
							position: 0
						}),
						discoveryUnit: _.p(i),
						search: _.cb(r, t, d.a.SERP)
					}
				},
				v = (e, t, i) => n => ({
					action: s.c.VIEW,
					actionInfo: _.d(n, {
						paneName: _.b.SearchDropdown,
						position: i
					}),
					metaSearch: _.E(t),
					noun: e,
					screen: _.bb(n),
					search: _.qb(n, t),
					source: p.SEARCH
				}),
				y = (e, t) => i => ({
					action: s.c.CLICK,
					actionInfo: _.d(i),
					noun: e,
					metaSearch: _.E(t),
					screen: _.bb(i),
					search: _.qb(i, t),
					source: p.SEARCH
				}),
				E = (e, t, i) => n => ({
					source: p.SEARCH,
					action: s.c.CLICK,
					noun: h.RECENT,
					actionInfo: _.d(n, {
						paneName: "subreddit_dropdown",
						position: i + 1
					}),
					search: {
						query: e,
						originPageType: n.platform.currentPage ? _.w(n.platform.currentPage) : void 0,
						impressionId: Object(l.a)(n) ? m.a.get(d.a.Typeahead) : void 0,
						queryId: _.db(n, d.a.Typeahead)
					},
					...T(n, t)
				}),
				S = (e, t, i, n) => r => {
					const o = n.filter(e => e.id);
					return {
						source: p.SEARCH,
						action: s.c.CLICK,
						noun: h.TYPEAHEAD,
						actionInfo: _.d(r, {
							position: i + 1
						}),
						search: {
							query: t.displayInfo && t.displayInfo.subredditOrProfileName ? t.displayInfo.subredditOrProfileName : e,
							originPageType: r.platform.currentPage ? _.w(r.platform.currentPage) : void 0,
							queryId: _.db(r, d.a.Typeahead),
							impressionId: Object(l.a)(r) ? m.a.get(d.a.Typeahead) : void 0,
							typeaheadActive: !0,
							subredditIds: o.map(e => e.id),
							numberSubreddits: o.length
						},
						...T(r, t)
					}
				},
				T = (e, t) => {
					const i = t.isSubreddit && t.id ? _.nb(e, t.id) : void 0,
						n = t.isProfile && t.id ? _.W(e, t.id) : void 0,
						r = {
							id: t.id,
							name: t.displayInfo ? t.displayInfo.subredditOrProfileName : void 0
						};
					return {
						subreddit: t.isSubreddit ? i || r : void 0,
						profile: t.isProfile ? n || r : void 0
					}
				};
			var O;
			! function(e) {
				e.TopResults = "tab_top_results", e.Posts = "tab_posts", e.CommunitiesAndUsers = "tab_communities", e.Communities = "tab_communities", e.Authors = "tab_authors", e.Comments = "tab_comments"
			}(O || (O = {}));
			const I = (e, t) => i => ({
					...b(i, t),
					source: p.SEARCH,
					action: s.c.CLICK,
					noun: e,
					correlationId: Object(o.c)(o.a.SearchResults),
					actionInfo: _.d(i, {
						paneName: _.H(i, null)
					}),
					search: _.cb(i, t, d.a.SERP)
				}),
				R = (e, t) => i => ({
					action: s.c.CLICK,
					correlationId: Object(o.c)(o.a.SearchResults),
					noun: e ? n.Zb.ToSubreddit : n.Zb.ToGlobal,
					search: _.cb(i, t, d.a.SERP),
					source: p.SEARCH
				}),
				F = (e, t, i, n, r) => s => C(s, e, t, i, n, r),
				N = (e, t, i, n) => {
					var r;
					const s = null !== (r = null != t ? t : e.platform.currentPage) && void 0 !== r ? r : void 0;
					return {
						pageType: s && _.w(s),
						paneName: i,
						position: n
					}
				},
				C = (e, t, i, n, r, o) => {
					const a = _.H(e, n),
						l = x(e, t, r, o),
						u = _.f(e, i, r, o, a),
						c = null !== l ? u + l : null,
						m = _.ib(n),
						h = {
							..._.cb(e, i, d.a.SERP, !0, n || void 0),
							structureType: m
						};
					return {
						source: p.SEARCH,
						action: s.c.CLICK,
						noun: "post",
						actionInfo: N(e, n, a, c),
						search: h,
						post: _.J(e, t),
						userPreferences: {
							hideNsfw: !e.user.prefs.over18
						},
						discoveryUnit: o ? _.p(o) : null
					}
				},
				j = (e, t, i, n, r, o) => d => D({
					action: s.c.CLICK,
					state: d,
					searchOptions: e,
					pageLayer: t,
					subredditOrProfileIdentifier: i,
					key: n,
					postId: r,
					discoveryUnit: o
				}),
				A = ({
					comment: e,
					key: t,
					originElement: i,
					pageLayer: n,
					postId: r,
					searchOptions: o
				}) => d => P({
					action: s.c.CLICK,
					comment: e,
					key: t,
					originElement: i,
					pageLayer: n,
					postId: r,
					searchOptions: o,
					state: d
				}),
				x = (e, t, i, n) => {
					var r;
					return (null === (r = null == n ? void 0 : n.layout) || void 0 === r ? void 0 : r.viewTypeWeb) === a.b.Hero ? 0 : (null == n ? void 0 : n.postOrder) ? n.postOrder.indexOf(t) >= 0 ? n.postOrder.indexOf(t) : null : i ? _.y(e, t, i) : null
				},
				D = ({
					action: e,
					state: t,
					searchOptions: i,
					pageLayer: n,
					subredditOrProfileIdentifier: s,
					key: o,
					postId: a,
					discoveryUnit: l
				}) => {
					if (!s) {
						s = Object(u.G)(t, {
							postId: a
						}).belongsTo
					}
					const c = _.H(t, n);
					let m;
					if (a) {
						const e = x(t, a, o, l),
							n = _.f(t, i, o, l, c);
						m = null !== e ? n + e : null
					} else m = o ? _.z(t, s, o) : null;
					const h = _.ib(n),
						b = {
							..._.cb(t, i, d.a.SERP, !0, n || void 0),
							structureType: h
						};
					return {
						source: p.SEARCH,
						action: e,
						noun: f[s.type],
						search: b,
						subreddit: s.type === r.a.SUBREDDIT ? _.nb(t, s.id) : void 0,
						profile: s.type === r.a.PROFILE ? _.W(t, s.id) : void 0,
						userPreferences: {
							hideNsfw: !t.user.prefs.over18
						},
						discoveryUnit: l ? _.p(l) : null,
						actionInfo: N(t, n, c, m),
						post: a ? _.J(t, a) : void 0
					}
				},
				P = ({
					action: e,
					comment: t,
					key: i,
					originElement: n,
					pageLayer: r,
					searchOptions: s,
					state: o
				}) => {
					const a = _.ib(r),
						{
							impressionId: l,
							originPageType: u,
							query: m,
							queryId: f
						} = _.cb(o, s, d.a.SERP, !0, r || void 0),
						{
							name: b
						} = Object(c.S)(o, {
							subredditId: t.subredditId
						}),
						g = _.H(o, r);
					return {
						action: e,
						source: p.SEARCH,
						noun: h.COMMENT,
						search: {
							impressionId: l,
							originElement: n,
							originPageType: u,
							query: m,
							queryId: f,
							structureType: a
						},
						userPreferences: {
							hideNsfw: !o.user.prefs.over18
						},
						actionInfo: N(o, r, g, i ? _.v(o, t.id, i) : null),
						comment: _.j(o, t, b),
						profile: _.W(o, t.authorId),
						post: _.J(o, t.postId)
					}
				},
				L = (e, t, i, n, r) => o => ({
					...C(o, t, i, n, e, r),
					action: s.c.VIEW
				}),
				k = (e, t, i, n) => r => ({
					...b(r, i),
					source: p.SEARCH,
					action: s.c.VIEW,
					noun: "search_results_post",
					correlationId: Object(o.c)(o.a.SearchResults),
					actionInfo: _.d(r, {
						relativePosition: _.y(r, t, e),
						position: _.u(r, t, e)
					}),
					search: {
						..._.cb(r, i, d.a.SERP),
						...!!n && {
							originElement: n
						}
					},
					post: _.J(r, t)
				}),
				B = (e, t) => i => ({
					...b(i, t),
					source: p.SEARCH,
					action: e,
					noun: "covid_banner",
					correlationId: Object(o.c)(o.a.SearchResults),
					actionInfo: _.d(i),
					search: _.cb(i, t, d.a.SERP)
				}),
				M = e => ({
					action: s.c.DISABLE,
					noun: h.SUBREDDIT_SEARCH,
					source: p.SEARCH,
					subreddit: {
						id: null == e ? void 0 : e.id,
						name: null == e ? void 0 : e.name,
						nsfw: null == e ? void 0 : e.isNSFW,
						quarantined: null == e ? void 0 : e.isQuarantined
					}
				});

			function U(e, t) {
				return i => ({
					...b(i, t),
					source: p.SEARCH,
					action: s.c.VIEW,
					noun: `no_${e}_results`,
					correlationId: Object(o.c)(o.a.SearchResults),
					actionInfo: _.d(i),
					search: _.cb(i, t, d.a.SERP)
				})
			}

			function G(e, t, i, n, r) {
				return o => ({
					...b(o),
					source: p.SEARCH,
					action: s.c.CLICK,
					noun: e,
					actionInfo: _.d(o),
					search: _.cb(o, t, n, i, r)
				})
			}

			function q(e, t, i, n) {
				return r => ({
					...b(r),
					source: p.SEARCH,
					action: s.c.VIEW,
					noun: h.QUERY_PROMPT,
					actionInfo: _.d(r, {
						paneName: _.b.SearchDropdown,
						position: i
					}),
					search: _.cb(r, e, d.a.Typeahead, t, n)
				})
			}
		},
		"./src/reddit/helpers/userSnoovatar/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/config.ts");

			function r(e) {
				return !!e && (e.indexOf("profileIcon_snoo") > -1 || (null == e ? void 0 : e.indexOf("snoovatar/avatars")) > -1 || e.endsWith("snoovatar_anonymous.svg"))
			}
			const s = /(?:\/|-)nft-([a-z0-9]+)-([a-z]+)(?:-headshot)?\.(?:png|svg)/i,
				o = /(?:\/|-)nftv2_([a-z0-9%]+)_([a-z]+)_([a-z0-9-]{36})(?:-headshot)?\.(?:png|svg)/i;

			function d(e) {
				return a(e) || l(e)
			}

			function a(e) {
				return !!e && s.test(e)
			}

			function l(e) {
				return !!e && o.test(e)
			}
			var u;

			function c(e) {
				switch (m(e)) {
					case u.RARE:
						return `${n.a.assetPath}/img/snoovatars/comment-animations/rare-rarity.json`;
					case u.LEGEND:
						return `${n.a.assetPath}/img/snoovatars/comment-animations/legendary-rarity.json`;
					case u.EPIC:
						return `${n.a.assetPath}/img/snoovatars/comment-animations/epic-rarity.json`;
					case u.TEST:
						return `${n.a.assetPath}/img/snoovatars/comment-animations/test-rarity.json`;
					default:
						return `${n.a.assetPath}/img/snoovatars/comment-animations/nft_comment_animation.json`
				}
			}

			function _(e) {
				switch (m(e)) {
					case u.RARE:
					case u.LEGEND:
					case u.EPIC:
					case u.TEST:
						return !0;
					default:
						return !1
				}
			}

			function m(e) {
				if (!e || !l(e)) return null;
				return Object.values(u).find(t => e.toUpperCase().includes(`_${t}_`)) || null
			}! function(e) {
				e.RARE = "RARE", e.LEGEND = "LEGEND", e.EPIC = "EPIC", e.TEST = "TEST"
			}(u || (u = {}))
		},
		"./src/reddit/helpers/widgets/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return o
			})), i.d(t, "m", (function() {
				return _
			})), i.d(t, "h", (function() {
				return m
			})), i.d(t, "c", (function() {
				return g
			})), i.d(t, "b", (function() {
				return w
			})), i.d(t, "d", (function() {
				return v
			})), i.d(t, "a", (function() {
				return y
			})), i.d(t, "l", (function() {
				return A
			})), i.d(t, "e", (function() {
				return x
			})), i.d(t, "f", (function() {
				return D
			})), i.d(t, "j", (function() {
				return P
			})), i.d(t, "i", (function() {
				return L
			})), i.d(t, "k", (function() {
				return k
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./src/reddit/models/Subreddit/index.ts"),
				s = i("./src/reddit/models/Widgets/index.ts");
			const o = () => ({
					backgroundColor: null,
					headerColor: null
				}),
				d = () => ({
					id: null,
					kind: s.i.Textarea,
					shortName: "",
					text: "",
					textHtml: void 0,
					textRichtext: void 0,
					styles: o()
				}),
				a = e => {
					return {
						id: e.id,
						kind: e.kind,
						text: e.text,
						shortName: e.shortName,
						styles: e.styles
					}
				},
				l = () => ({
					currentlyViewingCount: 0,
					currentlyViewingText: "",
					description: "",
					id: null,
					kind: s.i.IdCard,
					shortName: "Community details",
					subscribersCount: 0,
					subscribersText: "",
					styles: o()
				}),
				u = e => {
					return {
						id: e.id,
						kind: e.kind,
						shortName: e.shortName,
						description: e.description,
						buttons: e.buttons,
						styles: e.styles
					}
				},
				c = () => ({
					id: null,
					kind: s.i.Button,
					shortName: "",
					description: null,
					descriptionHtml: null,
					descriptionRichtext: void 0,
					buttons: [],
					styles: o()
				}),
				_ = () => ({
					kind: s.k.Text,
					text: "",
					url: "",
					color: "#000000",
					hoverState: void 0
				}),
				m = e => e.kind === s.k.Image ? e.linkUrl : e.url,
				p = e => {
					return {
						id: e.id,
						display: e.display,
						kind: e.kind,
						subreddit: e.subreddit,
						shortName: "Subreddit Rules",
						styles: e.styles
					}
				},
				h = () => ({
					id: null,
					kind: s.i.SubredditRules,
					display: "full",
					data: [],
					subreddit: "",
					shortName: "Subreddit Rules",
					styles: o()
				}),
				f = () => ({
					id: null,
					kind: s.i.PostFlair,
					display: s.g.List,
					order: [],
					shortName: "",
					styles: o(),
					templates: {}
				}),
				b = e => {
					return {
						id: e.id,
						display: e.display,
						kind: e.kind,
						order: e.order,
						shortName: e.shortName,
						styles: e.styles
					}
				},
				g = (e, t) => {
					const i = {
						id: e.id,
						displayText: e.displayText,
						name: e.name,
						subscribers: e.subscribers,
						iconUrl: e.icon && e.icon.url,
						isSubscribed: !1,
						type: "subreddit",
						primaryColor: e.primaryColor,
						isNSFW: e.isNSFW
					};
					return t && t.publicDescription && (i.description = t.publicDescription), t && t.bannerBackgroundImage && (i.bannerBackgroundImage = t.bannerBackgroundImage), t && t.bannerBackgroundColor && (i.bannerBackgroundColor = t.bannerBackgroundColor), i
				},
				w = e => ({
					id: e.id,
					name: e.name,
					subscribers: e.subscribers,
					iconUrl: e && e.icon.url,
					type: "profile",
					isNSFW: e.isNSFW
				}),
				v = e => Object(r.h)(e) ? w(e) : g(e),
				y = e => ({
					iconUrl: e.iconUrl,
					id: e.id,
					name: e.name,
					subscribers: e.subscribers,
					primaryColor: e.primaryColor,
					type: "subreddit",
					isNSFW: e.isNsfw || !1
				}),
				E = e => {
					const t = e.data.map(e => e.name),
						i = {
							...e
						};
					return i.data = t, i
				},
				S = () => ({
					id: null,
					kind: s.i.CommunityList,
					shortName: "",
					data: [],
					description: "",
					styles: o()
				}),
				T = () => ({
					id: null,
					kind: s.i.Calendar,
					shortName: "",
					configuration: {
						numEvents: 10,
						showDate: !0,
						showTime: !0,
						showTitle: !0,
						showLocation: !0,
						showDescription: !0
					},
					configuredAtUTC: null,
					data: [],
					googleCalendarId: "",
					moderator: null,
					requiresSync: !0,
					synchronizedAtUTC: null,
					styles: o()
				}),
				O = e => {
					return {
						id: e.id,
						kind: e.kind,
						shortName: e.shortName,
						googleCalendarId: e.googleCalendarId,
						moderator: e.moderator,
						requiresSync: e.requiresSync,
						configuredAtUTC: e.configuredAtUTC,
						configuration: {
							...e.configuration,
							numEvents: e.configuration.numEvents || 10
						},
						data: e.data,
						styles: e.styles
					}
				},
				I = e => (e.data.forEach((function(e) {
					void 0 === e.linkUrl && (e.linkUrl = "")
				})), e),
				R = () => ({
					data: [],
					id: null,
					kind: s.i.Image,
					shortName: ""
				}),
				F = () => ({
					id: null,
					kind: s.i.Custom,
					shortName: "",
					text: "",
					css: "",
					height: null,
					imageData: []
				}),
				N = e => ({
					id: e.id,
					kind: e.kind,
					shortName: e.shortName,
					text: e.text,
					css: e.css,
					height: e.height,
					imageData: e.imageData
				}),
				C = e => ({
					id: e.id,
					kind: e.kind,
					styles: e.styles
				}),
				j = () => ({
					id: null,
					kind: s.j.Menu,
					data: [],
					showWiki: !1
				});

			function A(e) {
				return "widgetId" in e
			}

			function x(e) {
				switch (e.kind) {
					case s.i.SubredditRules:
						return p(e);
					case s.i.CommunityList:
						return E(e);
					case s.i.Image:
						return I(e);
					case s.i.Calendar:
						return O(e);
					case s.i.Textarea:
						return a(e);
					case s.i.Button:
						return u(e);
					case s.i.Custom:
						return N(e);
					case s.i.Moderators:
						return C(e);
					case s.i.PostFlair:
						return b(e);
					default:
						return e
				}
			}

			function D(e) {
				switch (e) {
					case s.i.Textarea:
						return d();
					case s.i.Button:
						return c();
					case s.i.SubredditRules:
						return h();
					case s.i.Image:
						return R();
					case s.i.CommunityList:
						return S();
					case s.i.Calendar:
						return T();
					case s.j.Menu:
						return j();
					case s.i.Custom:
						return F();
					case s.i.IdCard:
						return l();
					case s.i.PostFlair:
						return f();
					default:
						throw new Error("Unknown widget type encountered")
				}
			}

			function P(e) {
				switch (e) {
					case s.i.Button:
						return n.fbt._("Button", null, {
							hk: "HgC1C"
						});
					case s.i.Calendar:
						return n.fbt._("Calendar", null, {
							hk: "ikzne"
						});
					case s.i.CommunityList:
						return n.fbt._("Community list", null, {
							hk: "2KybEl"
						});
					case s.i.Custom:
						return n.fbt._("Custom", null, {
							hk: "4fliIM"
						});
					case s.i.IdCard:
						return n.fbt._("ID Card", null, {
							hk: "qYWnZ"
						});
					case s.i.Image:
						return n.fbt._("Images", null, {
							hk: "3IdoS0"
						});
					case s.i.Moderators:
						return n.fbt._("Moderators", null, {
							hk: "22G5Vw"
						});
					case s.j.Menu:
						return n.fbt._("structuredStyles widgets menu label", null, {
							hk: "38QOec"
						});
					case s.i.PostFlair:
						return n.fbt._("Post flair", null, {
							hk: "2iqHRS"
						});
					case s.i.SubredditRules:
						return n.fbt._("Rules", null, {
							hk: "1GxTNW"
						});
					case s.i.Textarea:
						return n.fbt._("Textarea", null, {
							hk: "14tyaE"
						})
				}
			}

			function L(e) {
				switch (e) {
					case s.i.Button:
						return n.fbt._("A widget for buttons...", null, {
							hk: "3gJsQp"
						});
					case s.i.Calendar:
						return n.fbt._("Add a calendar for events, etc.", null, {
							hk: "2RqtNI"
						});
					case s.i.CommunityList:
						return n.fbt._("Recommended, related communities, etc.", null, {
							hk: "2KQCPp"
						});
					case s.i.Custom:
						return n.fbt._("Experimental: custom visuals with CSS", null, {
							hk: "14Pc95"
						});
					case s.i.IdCard:
						return n.fbt._("Community Description", null, {
							hk: "2vhNN2"
						});
					case s.i.Image:
						return n.fbt._("Art display, more cat pics, etc.", null, {
							hk: "2buUWv"
						});
					case s.i.Moderators:
						return n.fbt._("structuredStyles widgets moderators description", null, {
							hk: "2B8iNe"
						});
					case s.j.Menu:
						return n.fbt._("structuredStyles widgets menu description", null, {
							hk: "2Ljjwx"
						});
					case s.i.PostFlair:
						return n.fbt._("Display post flair for easy searching", null, {
							hk: "2KuxtA"
						});
					case s.i.SubredditRules:
						return n.fbt._("Rules for your community", null, {
							hk: "14w8VP"
						});
					case s.i.Textarea:
						return n.fbt._("Announcements, quick links, etc.", null, {
							hk: "1jQHO6"
						})
				}
			}

			function k(e) {
				switch (e.kind) {
					case s.i.Textarea:
					case s.i.Button:
					case s.i.Image:
					case s.i.SubredditRules:
					case s.i.CommunityList:
					case s.i.Calendar:
					case s.i.Custom:
					case s.i.IdCard:
					case s.i.PostFlair:
						return e.shortName;
					default:
						return e.kind
				}
			}
		},
		"./src/reddit/hooks/useLocalStorage.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			}));
			var n = i("./node_modules/react/index.js"),
				r = i("./src/reddit/helpers/localStorage/index.ts");
			const s = {},
				o = (e, t, i) => (s[e] || (s[e] = {
					callbacks: [],
					value: i
				}), s[e].callbacks.push(t), {
					deregister: () => {
						const {
							callbacks: i
						} = s[e], n = i.indexOf(t);
						n > -1 && i.splice(n, 1)
					},
					emit: i => {
						s[e].value !== i && (s[e].value = i, s[e].callbacks.forEach(e => {
							e !== t && e(i)
						}))
					}
				});

			function d(e, t) {
				const i = Object(n.useRef)(null);
				let s;
				s = Object(r.D)(e);
				const [d, a] = Object(n.useState)(null != s ? s : t);
				return Object(n.useEffect)(() => (i.current = o(e, a, t), () => {
					var e;
					return null === (e = i.current) || void 0 === e ? void 0 : e.deregister()
				}), [e, t]), Object(n.useEffect)(() => {
					var e;
					null === (e = i.current) || void 0 === e || e.emit(d)
				}, [d]), [d, function(t) {
					Object(r.Ib)(e, t), a(t)
				}]
			}
		},
		"./src/reddit/hooks/useSessionBlockingModal.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "b", (function() {
				return c
			})), i.d(t, "a", (function() {
				return m
			}));
			var n = i("./node_modules/react/index.js"),
				r = i.n(n),
				s = i("./node_modules/react-redux/es/index.js"),
				o = i("./src/reddit/actions/post.ts"),
				d = i("./src/reddit/constants/modals.ts"),
				a = i("./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts");

			function l() {
				const e = Object(s.d)(),
					t = Object(s.e)(a.c);
				Object(n.useEffect)(() => {
					if (t) {
						const t = _();
						t && e(Object(o.K)(t.actionSource, t.redirectUrl))
					}
				}, [])
			}

			function u(e) {
				const t = e.displayName || e.name || "Component";

				function i(t) {
					return l(), r.a.createElement(e, t)
				}
				return i.displayName = `withSessionBlockingModal(${t})`, i
			}
			const c = (e, t) => {
					window.sessionStorage && window.sessionStorage.setItem("account_manager_modal_storage", JSON.stringify({
						modalId: d.a.REGISTER_MODAL_ID,
						actionSource: e,
						redirectUrl: t
					}))
				},
				_ = () => {
					let e = null;
					if (window.sessionStorage) {
						const t = window.sessionStorage.getItem("account_manager_modal_storage");
						if (t) {
							const i = JSON.parse(t);
							i.modalId === d.a.REGISTER_MODAL_ID && (e = i)
						}
					}
					return e
				},
				m = () => {
					window.sessionStorage && window.sessionStorage.removeItem("account_manager_modal_storage")
				}
		},
		"./src/reddit/models/Comment/addProfileImgParam.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/addQueryParams/index.ts");
			t.a = e => Object(n.a)(e, {
				profile_img: !0
			})
		},
		"./src/reddit/models/Comment/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "h", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "d", (function() {
				return p
			}));
			var n, r, s, o, d = i("./src/lib/constants/index.ts"),
				a = i("./src/reddit/constants/comments.ts"),
				l = i("./src/reddit/constants/things.ts");
			! function(e) {
				e.User = "user", e.Moderator = "moderator"
			}(n || (n = {})),
			function(e) {
				e.Prediction = "PREDICTION"
			}(r || (r = {})),
			function(e) {
				e.FOLLOWED = "FOLLOWED", e.UNFOLLOWED = "UNFOLLOWED"
			}(s || (s = {})),
			function(e) {
				e.None = "", e.Friend = "F", e.Submitter = "S", e.Moderator = "M", e.Admin = "A", e.Alumni = "special", e.Cake = "cake"
			}(o || (o = {}));
			const u = e => `${l.a}${e&&e.toLowerCase()}`,
				c = e => ({
					id: e,
					type: a.a.Comment
				}),
				_ = e => e.author === d.E,
				m = e => "BLOCKED_AUTHOR" === e.collapsedReasonCode;
			var p;
			! function(e) {
				e.DeletedComment = "DeletedComment", e.Comment = "Comment"
			}(p || (p = {}))
		},
		"./src/reddit/models/DiscoveryUnit/index.ts": function(e, t, i) {
			"use strict";
			var n, r, s, o;
			i.d(t, "e", (function() {
					return n
				})), i.d(t, "d", (function() {
					return r
				})), i.d(t, "c", (function() {
					return s
				})), i.d(t, "b", (function() {
					return d
				})), i.d(t, "g", (function() {
					return a
				})), i.d(t, "k", (function() {
					return l
				})), i.d(t, "a", (function() {
					return u
				})), i.d(t, "i", (function() {
					return c
				})), i.d(t, "j", (function() {
					return _
				})), i.d(t, "h", (function() {
					return m
				})), i.d(t, "l", (function() {
					return p
				})), i.d(t, "f", (function() {
					return h
				})),
				function(e) {
					e.Community = "community", e.CommunityCategory = "community_category", e.FavoriteSubreddits = "favorite_subreddits", e.Listing = "listing", e.RecentlyVisitedSubreddits = "recently_visited_subreddits", e.SubredditListing = "subreddit_listing"
				}(n || (n = {})),
				function(e) {
					e.Comments = "comments", e.Communities = "communities", e.Explore = "explore", e.Frontpage = "front_page", e.Popular = "popular", e.SubredditListing = "subreddit_listing", e.Topic = "topic"
				}(r || (r = {})),
				function(e) {
					e.Large = "large", e.Small = "small"
				}(s || (s = {})),
				function(e) {
					e.Wide = "wide", e.Description = "description", e.ActionButton = "action_button", e.SeeMore = "see_more", e.HideItems = "hide_items", e.HideUnit = "hide_unit", e.ShowLess = "show_less", e.PostShowSubredditHeader = "post_show_subreddit_header", e.UnitShowSubredditHeader = "unit_show_subreddit_header", e.PreviewMode = "preview_mode"
				}(o || (o = {}));
			const d = "community_banner_posts",
				a = "search_posts",
				l = "trending_on_popular",
				u = "best_of_community",
				c = "top_week_posts",
				_ = "top_week_posts_large",
				m = "top_topic_communities_rails",
				p = "trending_hero",
				h = "promoted_trend_hero"
		},
		"./src/reddit/models/FeatureThrottling/index.ts": function(e, t, i) {
			"use strict";
			var n, r;
			i.d(t, "b", (function() {
					return n
				})), i.d(t, "a", (function() {
					return r
				})),
				function(e) {
					e[e.TimesPerSession = 0] = "TimesPerSession", e[e.TimesTotal = 1] = "TimesTotal", e[e.SessionsTotal = 2] = "SessionsTotal", e[e.TimesPerPeriod = 3] = "TimesPerPeriod", e[e.SessionsPerPeriod = 4] = "SessionsPerPeriod", e[e.NthSession = 5] = "NthSession", e[e.Combined = 6] = "Combined"
				}(n || (n = {})),
				function(e) {
					e.And = "and", e.Or = "or"
				}(r || (r = {}))
		},
		"./src/reddit/models/FeedElement/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.AdPost = "AdPost", e.DeletedProfilePost = "DeletedProfilePost", e.DeletedSubredditPost = "DeletedSubredditPost", e.InterestTopicRecommendationsFeedElement = "InterestTopicRecommendationsFeedElement", e.LiveEvent = "LiveEvent", e.ProfilePost = "ProfilePost", e.PostRecommendation = "PostRecommendation", e.SubredditPost = "SubredditPost", e.FreeNftFeedElement = "FreeNftFeedElement"
				}(n || (n = {}))
		},
		"./src/reddit/models/Flair/index.ts": function(e, t, i) {
			"use strict";
			var n, r, s, o, d, a, l, u, c;
			i.d(t, "c", (function() {
					return n
				})), i.d(t, "f", (function() {
					return r
				})), i.d(t, "e", (function() {
					return s
				})), i.d(t, "a", (function() {
					return o
				})), i.d(t, "d", (function() {
					return d
				})), i.d(t, "b", (function() {
					return a
				})), i.d(t, "i", (function() {
					return l
				})), i.d(t, "h", (function() {
					return u
				})), i.d(t, "g", (function() {
					return c
				})),
				function(e) {
					e.Text = "text", e.Emoji = "emoji"
				}(n || (n = {})),
				function(e) {
					e.Image = "image", e.Meta = "meta", e.Nsfw = "nsfw", e.Oc = "oc", e.Richtext = "richtext", e.Spoiler = "spoiler", e.Text = "text", e.Quarantined = "quarantined"
				}(r || (r = {})),
				function(e) {
					e.Dark = "dark", e.Light = "light"
				}(s || (s = {})),
				function(e) {
					e.Text = "text", e.Emoji = "emoji", e.All = "all"
				}(o || (o = {})),
				function(e) {
					e.UserFlair = "USER_FLAIR", e.LinkFlair = "LINK_FLAIR"
				}(d || (d = {})),
				function(e) {
					e.Left = "left", e.Right = "right"
				}(a || (a = {})),
				function(e) {
					e.Dark = "DARK", e.Light = "LIGHT"
				}(l || (l = {})),
				function(e) {
					e.RIGHT = "RIGHT", e.LEFT = "LEFT"
				}(u || (u = {})),
				function(e) {
					e.Text = "TEXT", e.Emoji = "EMOJI", e.All = "ALL"
				}(c || (c = {}))
		},
		"./src/reddit/models/Gold/Award.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "f", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "g", (function() {
				return a
			})), i.d(t, "q", (function() {
				return l
			})), i.d(t, "n", (function() {
				return u
			})), i.d(t, "p", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "l", (function() {
				return m
			})), i.d(t, "m", (function() {
				return p
			})), i.d(t, "b", (function() {
				return f
			})), i.d(t, "j", (function() {
				return g
			})), i.d(t, "k", (function() {
				return w
			})), i.d(t, "r", (function() {
				return v
			})), i.d(t, "h", (function() {
				return y
			})), i.d(t, "i", (function() {
				return E
			})), i.d(t, "o", (function() {
				return T
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/config.ts");
			const r = "https://www.reddithelp.com/en/categories/reddit-101/reddit-basics/what-karma";
			var s, o, d;
			! function(e) {
				e.Global = "GLOBAL", e.Moderator = "MODERATOR", e.Community = "COMMUNITY"
			}(s || (s = {})),
			function(e) {
				e.Global = "GLOBAL", e.Moderator = "MODERATOR", e.Community = "COMMUNITY", e.Appreciation = "APPRECIATION", e.Premium = "PREMIUM", e.Group = "GROUP"
			}(o || (o = {})),
			function(e) {
				e.png = "PNG", e.apng = "APNG", e.jpg = "JPG", e.gif = "GIF"
			}(d || (d = {}));
			const a = "award_deleted",
				l = {
					awardType: s.Global,
					awardSubType: o.Global,
					coinPrice: 100,
					coinReward: 0,
					description: "Shows the Silver Award... and that's it.",
					daysOfDripExtension: 0,
					icon: {
						url: `${n.a.assetPath}/img/gold/badges/award-silver-medium.png?v=2`
					},
					staticIcon: {
						url: `${n.a.assetPath}/img/gold/badges/award-silver-medium.png?v=2`
					},
					id: "gid_1",
					isEnabled: !0,
					isNew: !1,
					name: "Silver",
					daysOfPremium: 0,
					tiers: null
				},
				u = {
					awardType: s.Global,
					awardSubType: o.Global,
					coinPrice: 500,
					coinReward: 100,
					description: "Gives %{coin_symbol}100 Reddit Coins and a week of r/lounge access and ad-free browsing.",
					daysOfDripExtension: 0,
					icon: {
						url: `${n.a.assetPath}/img/gold/badges/award-gold-medium.png?v=2`
					},
					staticIcon: {
						url: `${n.a.assetPath}/img/gold/badges/award-gold-medium.png?v=2`
					},
					id: "gid_2",
					isEnabled: !0,
					isNew: !1,
					name: "Gold",
					daysOfPremium: 7,
					tiers: null
				},
				c = {
					awardType: s.Global,
					awardSubType: o.Global,
					coinPrice: 1800,
					coinReward: 0,
					description: "Gives a month of r/lounge access and ad-free browsing, and %{coin_symbol}700 Reddit Coins for that month.",
					daysOfDripExtension: 31,
					icon: {
						url: `${n.a.assetPath}/img/gold/badges/award-platinum-medium.png?v=2`
					},
					staticIcon: {
						url: `${n.a.assetPath}/img/gold/badges/award-platinum-medium.png?v=2`
					},
					id: "gid_3",
					isEnabled: !0,
					isNew: !1,
					name: "Platinum",
					daysOfPremium: 31,
					tiers: null
				};
			var _;
			! function(e) {
				e.Silver = "silver", e.Gold = "gold", e.Platinum = "platinum"
			}(_ || (_ = {}));
			const m = [l, u, c],
				p = m.reduce((e, t) => (e[t.id] = t, e), {});
			var h, f;
			! function(e) {
				e.Global = "global", e.Community = "community", e.Moderator = "moderator"
			}(h || (h = {})),
			function(e) {
				e.Global = "global", e.Community = "community", e.Moderator = "moderator", e.Appreciation = "appreciation", e.Premium = "premium"
			}(f || (f = {}));
			const b = {
					500: 8,
					1e3: 4,
					2e3: 1,
					5e3: 1,
					1e4: 1,
					4e4: 1
				},
				g = e => {
					const t = e.reduce((e, t) => t.awardType !== s.Community ? e : (e[t.coinPrice] = (e[t.coinPrice] || 0) + 1, e), {}),
						i = e.map(e => ({
							price: e.coinPrice,
							filled: !0,
							award: e
						}));
					return Object.keys(b).forEach(e => {
						const n = t[e] || 0,
							r = Math.max(b[e] - n, 0);
						r > 0 && i.push({
							filled: !1,
							price: parseInt(e),
							quantity: r
						})
					}), i
				},
				w = e => {
					const t = e.reduce((e, t) => t.awardType !== s.Community ? e : (e[t.coinPrice] = (e[t.coinPrice] || 0) + 1, e), {});
					return Object.keys(b).reduce((e, i) => {
						const n = t[i] || 0;
						return b[i] - n > 0 ? [...e, parseInt(i)] : e
					}, [])
				};

			function v(e) {
				return e.sort((e, t) => e.awardType === s.Moderator && t.awardType !== s.Moderator ? -1 : t.awardType === s.Moderator && e.awardType !== s.Moderator ? 1 : t.coinPrice - e.coinPrice)
			}

			function y(e) {
				const {
					count: t,
					iconUrl: i,
					resizedIcons: n,
					resizedStaticIcons: r,
					staticIconUrl: s,
					...o
				} = e;
				let d, a, l, u, c, _;
				for (const {
						url: p,
						width: h
					} of n || []) 32 === h && (d = {
					url: p
				}), 64 === h && (a = {
					url: p
				}), 128 === h && (l = {
					url: p
				});
				for (const {
						url: p,
						width: h
					} of r || []) 32 === h && (u = {
					url: p
				}), 64 === h && (c = {
					url: p
				}), 128 === h && (_ = {
					url: p
				});
				let m = e.tiers;
				return e.tiersByRequiredAwardings && (m = T(e.tiersByRequiredAwardings)), {
					...o,
					icon: {
						url: i
					},
					icon32: d,
					icon64: a,
					icon128: l,
					staticIcon: {
						url: s
					},
					staticIcon32: u,
					staticIcon64: c,
					staticIcon128: _,
					tiers: m,
					awardType: o.awardType.toUpperCase(),
					awardSubType: o.awardSubType.toUpperCase()
				}
			}

			function E(e, t) {
				const {
					awardType: i,
					awardSubType: n,
					icon: r,
					icon32: s,
					icon64: o,
					icon128: d,
					staticIcon: a,
					staticIcon32: l,
					staticIcon64: u,
					staticIcon128: c,
					..._
				} = e, m = [], p = [];
				return s && m.push({
					height: 32,
					url: s.url,
					width: 32
				}), o && m.push({
					height: 64,
					url: o.url,
					width: 64
				}), d && m.push({
					height: 128,
					url: d.url,
					width: 128
				}), l && p.push({
					height: 32,
					url: l.url,
					width: 32
				}), u && p.push({
					height: 64,
					url: u.url,
					width: 64
				}), c && p.push({
					height: 128,
					url: c.url,
					width: 128
				}), {
					awardType: i.toLowerCase(),
					awardSubType: n ? n.toLowerCase() : f.Global,
					count: t,
					iconUrl: r.url,
					resizedIcons: m,
					resizedStaticIcons: p,
					staticIconUrl: a.url,
					..._
				}
			}

			function S(e) {
				return (e || []).reduce((e, t) => (e[t.width] = {
					url: t.url
				}, e), {})
			}

			function T(e) {
				if (e) return Object.values(e).map(e => {
					const t = {
							url: e.icon.url
						},
						i = {
							url: e.static_icon.url
						},
						n = S(e.resized_icons);
					n[e.icon.width] = t;
					const r = S(e.resized_static_icons);
					return r[e.static_icon.width] = i, {
						awardingsRequired: e.awardings_required,
						icon: t,
						icon32: n[32] || null,
						icon64: n[64] || null,
						icon128: n[128] || null,
						staticIcon: i,
						staticIcon32: r[32] || null,
						staticIcon64: r[64] || null,
						staticIcon128: r[128] || null
					}
				}).sort((e, t) => e.awardingsRequired - t.awardingsRequired)
			}
		},
		"./src/reddit/models/Gold/Coins/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "d", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "e", (function() {
				return l
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/fbt/lib/FbtPublic.js");
			const r = new Set(["low_coin_upsell"]),
				s = new Set(["new_purchaser", "repeat_purchaser"]),
				o = [{
					prompt: () => n.fbt._("What are coins?", null, {
						hk: "bD2cQ"
					}),
					answer: () => n.fbt._("Coins are our virtual good, and you can use them to award exceptional posts or comments, giving them Silver, Gold, or Platinum. We'll be adding cool new ways to spend your coins in the future.", null, {
						hk: "2RS7Fb"
					})
				}, {
					prompt: () => n.fbt._('What is "Give Award"?', null, {
						hk: "Q08fJ"
					}),
					answer: () => n.fbt._('Giving an Award, or "gilding", is a way to show appreciation for an exceptional contribution to Reddit. You can award someone by clicking on "Give Award" below their post or comment. This distinguishes it with an Award for all to see, and some even grant the honoree special bonus benefits.', null, {
						hk: "4fZWQ3"
					})
				}, {
					prompt: () => n.fbt._("What are these new Award types?", null, {
						hk: "2ysK1l"
					}),
					answer: () => n.fbt._("There are now several ways to Give Awards. A Silver Award requires 100 coins, which simply marks a post or comment with a Silver Award icon. A classic Gold Award requires 500 coins and gives the recipient a week of Reddit Premium membership and 100 coins. Finally, the ultra rare Platinum Award costs 1800 coins, and gives the recipient with one month of Reddit Premium membership, which includes 700 coins for that month.", null, {
						hk: "Mvg07"
					})
				}, {
					prompt: () => n.fbt._("I bought coins, how can I tell how many I have?", null, {
						hk: "4a4pGf"
					}),
					answer: () => n.fbt._("If you buy coins you will always have a balance associated with your Reddit account. You can view your balance on the top navigation bar by your username.", null, {
						hk: "2VWZ2s"
					})
				}, {
					prompt: () => n.fbt._("Can I transfer coins between Reddit accounts?", null, {
						hk: "1jLVez"
					}),
					answer: () => n.fbt._("You cannot transfer your Reddit coin balance across usernames, sorry. You can offer a Gold Award to other users which will grant them 100 coins.", null, {
						hk: "435l4g"
					})
				}, {
					prompt: () => n.fbt._("Can I get coins for free?", null, {
						hk: "1fhxmd"
					}),
					answer: () => n.fbt._("We may give away coins on special occasions. Stay tuned!", null, {
						hk: "3qKa11"
					})
				}, {
					prompt: () => n.fbt._("What happened to Creddits? Do those still exist?", null, {
						hk: "qTu5W"
					}),
					answer: () => n.fbt._("Yes, Creddits are simply called \"coins\" now, and we've converted any existing balance at a generous exchange rate of one Creddit to 2000 coins. That's double their original monetary value as a thank you for supporting us early. Use them to award exceptional posts and comments you come across. Thanks again for your contribution to the Reddit community.", null, {
						hk: "3bz9Wy"
					})
				}, {
					prompt: () => n.fbt._("I thought Gold was the name of Reddit's subscription membership?", null, {
						hk: "26YDse"
					}),
					answer: () => n.fbt._('You\'re correct, it used to also be the name of the subscription membership. However, many people confused the subscription "Reddit Gold" membership with a virtual good or coin. To make things easier to understand, we\'ve renamed the membership to "Reddit Premium", while our virtual good is called "coins".', null, {
						hk: "aFpGc"
					})
				}],
				d = e => "COIN_SALE" === e.promoType,
				a = e => "COIN_DEAL" === e.promoType,
				l = e => "Coin" === e.kind
		},
		"./src/reddit/models/Gold/Gild/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = (e, t, i) => {
					const n = {};
					for (const s of t) n[s.award.id] = s.total;
					const r = i ? e.awarders && e.awarders.length ? e.awarders.includes(i) ? e.awarders : [i, ...e.awarders] : [i] : e.awarders;
					return {
						...e,
						awarders: r,
						awardCountsById: n
					}
				},
				r = (e, t) => ({
					...e,
					awardCountsById: {
						...e.awardCountsById,
						[t]: 0
					}
				})
		},
		"./src/reddit/models/Gold/Powerups/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "c", (function() {
				return c
			}));
			var n, r = i("./src/config.ts"),
				s = i("./node_modules/fbt/lib/FbtPublic.js"),
				o = i("./src/lib/constants/index.ts");
			! function(e) {
				e[e.First = 1] = "First", e[e.Second = 2] = "Second"
			}(n || (n = {}));
			n.Second;
			var d;
			! function(e) {
				e.Achievements = "ACHIEVEMENT_FLAIRS", e.SdVideo = "SD_VIDEO", e.HdVideo = "HD_VIDEO", e.CommentsWithGifs = "COMMENTS_WITH_GIFS", e.CommentsWithEmoji = "COMMENTS_WITH_EMOJI", e.PostsImageUpload = "POSTS_IMAGE_UPLOAD", e.HeroStatus = "HERO_STATUS", e.CommentRecognition = "COMMENT_RECOGNITION", e.PowerupsAward = "POWERUPS_AWARD", e.CommunityGear = "COMMUNITY_AVATAR_GEAR", e.More = "MORE"
			}(d || (d = {}));
			const a = e => {
					const {
						description: t,
						title: i,
						isNew: n
					} = l[e]();
					return {
						isNew: n,
						description: t,
						title: i,
						key: `cell_${e}`,
						telemetryTag: e,
						iconUrl: `${r.a.assetPath}/img/powerups/${e}_v3.png`
					}
				},
				l = {
					[d.CommentRecognition]: () => ({
						title: s.fbt._("Comment Recognition", null, {
							hk: "3sxu4T"
						}),
						description: s.fbt._("Stand out in the comments with a ring around your avatar", null, {
							hk: "4FXS1Z"
						})
					}),
					[d.PowerupsAward]: () => ({
						title: s.fbt._("Powerups Award", null, {
							hk: "k1D64"
						}),
						description: s.fbt._("Exclusive awards to use in your community", null, {
							hk: "1FdKZ7"
						})
					}),
					[d.Achievements]: () => ({
						title: s.fbt._("Achievements", null, {
							hk: "15Pxs"
						}),
						description: s.fbt._("Recognize members' contributions and skills", null, {
							hk: "lhUOn"
						})
					}),
					[d.CommunityGear]: () => ({
						title: s.fbt._("Community Gear", null, {
							hk: "7Lg71"
						}),
						description: s.fbt._("Show your support with exclusive gear", null, {
							hk: "w3r3L"
						}),
						isNew: !0
					}),
					[d.SdVideo]: () => ({
						title: s.fbt._("SD video", null, {
							hk: "GDxZa"
						}),
						description: ""
					}),
					[d.HdVideo]: () => ({
						title: s.fbt._("HD Video", null, {
							hk: "2KPR6O"
						}),
						description: s.fbt._("Upload and watch in greater resolution", null, {
							hk: "1rvNwn"
						})
					}),
					[d.CommentsWithGifs]: () => ({
						title: s.fbt._("GIF Replies", null, {
							hk: "1wXiEa"
						}),
						description: s.fbt._("Throw a GIF in the thread when words won’t do", null, {
							hk: "4ATk7M"
						})
					}),
					[d.CommentsWithEmoji]: () => ({
						title: s.fbt._("Custom Emojis", null, {
							hk: "2qt00u"
						}),
						description: s.fbt._("Use emojis made just for this community", null, {
							hk: "4cQwCT"
						})
					}),
					[d.PostsImageUpload]: () => ({
						title: s.fbt._("Upload images", null, {
							hk: "1P6ot7"
						}),
						description: ""
					}),
					[d.HeroStatus]: () => ({
						title: s.fbt._("Hero Status", null, {
							hk: "miGwE"
						}),
						description: s.fbt._("Get on the heroes list and instantly access all perks", null, {
							hk: "2bnnTY"
						})
					}),
					[d.More]: () => ({
						title: s.fbt._("More to come...", null, {
							hk: "3ksSuD"
						}),
						description: void 0
					})
				},
				u = [o.F, o.E, o.Lb],
				c = e => !e.supporterInfo || !e.supporterInfo.displayName || u.includes(e.supporterInfo.displayName)
		},
		"./src/reddit/models/Gold/Premium/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "f", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js");
			const r = {
					PREMIUM_1_MONTH: {
						priceInCoins: 1800,
						monthsOfPremium: 1
					},
					PREMIUM_3_MONTHS: {
						priceInCoins: 5400,
						monthsOfPremium: 3
					},
					PREMIUM_6_MONTHS: {
						priceInCoins: 10800,
						monthsOfPremium: 6
					},
					PREMIUM_12_MONTHS: {
						priceInCoins: 21600,
						monthsOfPremium: 12
					}
				},
				s = (e, t = !1) => {
					const i = [];
					for (const n in r) {
						const s = r[n];
						(s.priceInCoins <= e || t) && i.push(s)
					}
					return i
				},
				o = e => n.fbt._({
					"*": "{number of months} months {number of coins} Coins",
					_1: "1 month {number of coins} Coins"
				}, [n.fbt._plural(e.monthsOfPremium, "number of months"), n.fbt._param("number of coins", e.priceInCoins.toLocaleString())], {
					hk: "2bar0C"
				}),
				d = "com.reddit.premium_1";
			var a;
			! function(e) {
				e.Monthly = "monthly", e.Yearly = "yearly"
			}(a || (a = {}));
			const l = e => "CoinsDrip" === e.kind,
				u = e => "FirstTimeCoinsBonus" === e.kind
		},
		"./src/reddit/models/Gold/ProductOffer.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			}));
			var n, r = i("./node_modules/fbt/lib/FbtPublic.js");
			! function(e) {
				e.CoinConversion = "user-coins-in-subreddit", e.Powerups = "powerups", e.Premium = "premium", e.Coinpack = "coinpack"
			}(n || (n = {}));
			const s = {
				[n.Powerups]: () => r.fbt._("Reddit - Buy Powerups", null, {
					hk: "4sEI31"
				}),
				[n.Premium]: () => r.fbt._("Reddit - Buy Premium", null, {
					hk: "19EtMU"
				}),
				[n.Coinpack]: () => r.fbt._("Reddit - Buy Coins", null, {
					hk: "48rKNT"
				}),
				[n.CoinConversion]: () => r.fbt._("Reddit - Coins Conversion", null, {
					hk: "1lx9I1"
				})
			};
			var o, d;
			! function(e) {
				e.Month = "MONTH", e.Year = "YEAR"
			}(o || (o = {})),
			function(e) {
				e.GildFlow = "gild_flow", e.LowCoinBalance = "low_coin_balance", e.NewUserTargetedOffer = "new_user_targeted_offer", e.RepeatUserTargetedOffer = "repeat_user_targeted_offer", e.StorefrontFreeAward = "storefront_free_award", e.CoinSale = "coin_sale", e.AvatarNewGear = "avatar_new_gear"
			}(d || (d = {}));
			const a = (e, t) => {
				const i = e && e.dealInfo && e.dealInfo.type,
					n = "low_coin_upsell" === i,
					r = "new_purchaser" === i,
					s = "repeat_purchaser" === i;
				return t ? d.GildFlow : n ? d.LowCoinBalance : r ? d.NewUserTargetedOffer : s ? d.RepeatUserTargetedOffer : void 0
			}
		},
		"./src/reddit/models/GqlTopLevelField.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.Comment = "Comment", e.Multireddit = "Multireddit", e.PostInfo = "PostInfo", e.Profile = "Profile", e.RedditorInfo = "RedditorInfo", e.Subreddit = "Subreddit", e.UnavailableSubreddit = "UnavailableSubreddit"
				}(n || (n = {}))
		},
		"./src/reddit/models/Image/index.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "j", (function() {
				return u
			})), i.d(t, "i", (function() {
				return c
			})), i.d(t, "h", (function() {
				return _
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "e", (function() {
				return h
			})), i.d(t, "g", (function() {
				return f
			})), i.d(t, "l", (function() {
				return b
			})), i.d(t, "m", (function() {
				return g
			})), i.d(t, "n", (function() {
				return w
			})), i.d(t, "o", (function() {
				return v
			})), i.d(t, "k", (function() {
				return y
			})), i.d(t, "d", (function() {
				return E
			}));
			var n, r = i("./node_modules/uuid/v4.js"),
				s = i.n(r),
				o = i("./src/config.ts"),
				d = i("./src/reddit/helpers/imagePreview/index.ts");
			! function(e) {
				e.Pending = "pending", e.NotUploaded = "not-uploaded", e.TempUploaded = "temp-uploaded", e.Uploaded = "uploaded", e.FailedToUpload = "failed-to-upload", e.Saved = "saved", e.Invalid = "invalid"
			}(n || (n = {}));
			const a = o.a.processingImageUrl;
			var l;

			function u(e) {
				return e.kind === n.Uploaded
			}

			function c(e) {
				switch (e.kind) {
					case n.Pending:
					case n.Saved:
					case n.Invalid:
						return !1;
					default:
						return !0
				}
			}

			function _(e) {
				switch (e.kind) {
					case n.TempUploaded:
					case n.Uploaded:
					case n.Saved:
						return !0;
					default:
						return !1
				}
			}
			async function m(e) {
				const t = Object(d.b)(e),
					i = s()();
				let n = 0,
					r = 0;
				if (t) {
					const e = await Object(d.a)(t);
					n = e.width, r = e.height
				}
				return {
					file: e,
					height: r,
					id: i,
					url: t,
					width: n
				}
			}
			async function p(e) {
				return {
					...await m(e),
					kind: n.Pending
				}
			}
			async function h(e) {
				return {
					...await m(e),
					kind: n.NotUploaded
				}
			}

			function f(e) {
				return {
					...e,
					kind: n.Saved,
					id: s()()
				}
			}

			function b(e, t) {
				return {
					kind: n.Invalid,
					file: e.file,
					height: e.height,
					id: e.id,
					url: e.url,
					width: e.width,
					errorString: t
				}
			}

			function g(e) {
				return {
					...e,
					kind: n.NotUploaded
				}
			}

			function w(e, t, i, r) {
				return {
					kind: n.TempUploaded,
					file: e.file,
					width: e.width,
					height: e.height,
					id: e.id,
					url: t,
					websocketUrl: i,
					context: r
				}
			}

			function v(e, t) {
				return Object(d.c)(e.url), {
					kind: n.Uploaded,
					width: e.width,
					height: e.height,
					id: e.id,
					url: t
				}
			}

			function y(e, t) {
				return {
					error: t,
					file: e.file,
					height: e.height,
					id: e.id,
					kind: n.FailedToUpload,
					url: e.url,
					width: e.width
				}
			}

			function E(e) {
				Object(d.c)(e.url)
			}! function(e) {
				e[e.Profiles = 0] = "Profiles", e[e.StructuredStyles = 1] = "StructuredStyles", e[e.Widgets = 2] = "Widgets", e[e.FlairTemplates = 3] = "FlairTemplates"
			}(l || (l = {}))
		},
		"./src/reddit/models/Live/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "a", (function() {
				return r
			}));
			var n, r, s = i("./src/reddit/models/FeedElement/index.ts");

			function o(e) {
				return e.__typename === s.a.LiveEvent
			}! function(e) {
				e.Ama = "ama", e.Announcement = "announcement", e.Document = "document", e.Moderation = "moderation", e.Snoo = "snoo"
			}(n || (n = {})),
			function(e) {
				e.Ama = "AMA", e.Announcement = "ANNOUNCEMENT", e.Document = "DOCUMENT", e.Moderation = "MODERATION", e.Snoo = "SNOO"
			}(r || (r = {}))
		},
		"./src/reddit/models/Media/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "v", (function() {
				return n
			})), i.d(t, "M", (function() {
				return o
			})), i.d(t, "N", (function() {
				return d
			})), i.d(t, "H", (function() {
				return a
			})), i.d(t, "G", (function() {
				return l
			})), i.d(t, "F", (function() {
				return u
			})), i.d(t, "E", (function() {
				return c
			})), i.d(t, "K", (function() {
				return _
			})), i.d(t, "o", (function() {
				return m
			})), i.d(t, "a", (function() {
				return p
			})), i.d(t, "j", (function() {
				return h
			})), i.d(t, "k", (function() {
				return f
			})), i.d(t, "l", (function() {
				return b
			})), i.d(t, "m", (function() {
				return g
			})), i.d(t, "z", (function() {
				return w
			})), i.d(t, "i", (function() {
				return v
			})), i.d(t, "p", (function() {
				return y
			})), i.d(t, "y", (function() {
				return E
			})), i.d(t, "c", (function() {
				return S
			})), i.d(t, "n", (function() {
				return T
			})), i.d(t, "q", (function() {
				return O
			})), i.d(t, "r", (function() {
				return I
			})), i.d(t, "e", (function() {
				return R
			})), i.d(t, "f", (function() {
				return F
			})), i.d(t, "t", (function() {
				return N
			})), i.d(t, "u", (function() {
				return C
			})), i.d(t, "h", (function() {
				return j
			})), i.d(t, "b", (function() {
				return A
			})), i.d(t, "s", (function() {
				return x
			})), i.d(t, "x", (function() {
				return D
			})), i.d(t, "w", (function() {
				return P
			})), i.d(t, "d", (function() {
				return L
			})), i.d(t, "g", (function() {
				return k
			})), i.d(t, "A", (function() {
				return B
			})), i.d(t, "D", (function() {
				return M
			})), i.d(t, "C", (function() {
				return U
			})), i.d(t, "L", (function() {
				return G
			})), i.d(t, "B", (function() {
				return q
			})), i.d(t, "O", (function() {
				return V
			})), i.d(t, "J", (function() {
				return H
			})), i.d(t, "I", (function() {
				return W
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n, r = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				s = i.n(r);
			! function(e) {
				e.YouTube = "YouTube", e.Vimeo = "Vimeo", e.BandCamp = "BandCamp", e.Clyp = "Clyp", e.Gfycat = "Gfycat", e.GfycatOld = "gfycat", e.Giphy = "Giphy", e.Imgur = "Imgur", e.RedGIFS = "RedGIFS", e.SoundCloud = "SoundCloud", e.Spotify = "Spotify", e.Streamable = "Streamable", e.Twitch = "Twitch.tv", e.Twitter = "Twitter", e.IFrameEmbed = "iframe embed"
			}(n || (n = {}));
			const o = e => e.type === m.TEXT,
				d = e => e.type === m.VIDEO,
				a = e => e.type === m.LIVEVIDEO,
				l = e => e.type === m.LIVEAUDIO,
				u = e => e.type === m.IMAGE,
				c = e => e.type === m.GALLERY,
				_ = e => "rtjson" === e.type,
				m = {
					LIVEAUDIO: "liveaudio",
					TEXT: "text",
					VIDEO: "video",
					IMAGE: "image",
					EMBED: "embed",
					GIFVIDEO: "gifvideo",
					RTJSON: "rtjson",
					LIVEVIDEO: "rpan",
					GALLERY: "gallery"
				},
				p = new Set([m.TEXT, m.IMAGE, m.RTJSON, m.GALLERY]),
				h = (new Set([n.YouTube, n.Vimeo, n.Streamable, n.Twitch, n.Gfycat, n.GfycatOld, n.RedGIFS]), 512),
				f = 250,
				b = 60,
				g = 0,
				w = 608,
				v = 40,
				y = 160,
				E = 143.5,
				S = .5625,
				T = 869,
				O = 273,
				I = 486,
				R = 700,
				F = 822,
				N = 363,
				C = 645,
				j = new Set([n.Clyp, n.Gfycat, n.GfycatOld, n.Giphy, n.RedGIFS, n.SoundCloud, n.Spotify, n.Twitter, n.Vimeo, n.YouTube]),
				A = new Set([n.BandCamp, n.Gfycat, n.GfycatOld, n.Giphy, n.Imgur, n.RedGIFS, n.SoundCloud, n.Spotify, n.Streamable, n.Twitch, n.Twitter, n.YouTube, n.Vimeo]),
				x = new Set([n.SoundCloud, n.Spotify, n.Streamable, n.Twitter, n.Vimeo, n.YouTube]),
				D = new Set([n.Gfycat, n.GfycatOld, n.Imgur, n.RedGIFS]),
				P = ["gif", "jpeg", "jpg", "png", "tiff"],
				L = new Set([m.VIDEO, m.GIFVIDEO, m.EMBED, m.LIVEVIDEO]);
			var k, B;
			! function(e) {
				e.Mute = "mute", e.Pause = "pause", e.Play = "play"
			}(k || (k = {})),
			function(e) {
				e.Pause = "pauseVideo", e.Play = "playVideo", e.Mute = "mute"
			}(B || (B = {}));
			const M = e => e.source ? e.source.url : e.media && e.media.type !== m.VIDEO && e.media.type !== m.LIVEVIDEO && e.media.type !== m.LIVEAUDIO && e.media.content ? e.media.content : "",
				U = e => {
					if (!d(e)) return;
					const t = e;
					let i;
					if (t.hlsUrl) i = t.hlsUrl;
					else {
						if (!t.dashUrl) return;
						i = t.dashUrl
					}
					return (e => {
						const t = s.a.parse(e);
						if (t && t.pathname) return t.pathname.split("/")[1]
					})(i)
				},
				G = (e, t) => {
					return e / t > 16 / 9
				},
				q = (e, t, i) => i ? 100 * i : e && t ? e / t * 100 : 100 * S,
				V = e => {
					const t = M(e);
					return "v.redd.it" === s.a.parse(t).hostname
				},
				H = e => {
					var t, i, n, r, s, o;
					return (null === (t = e.media) || void 0 === t ? void 0 : t.hasOwnProperty("content")) || (null === (i = e.media) || void 0 === i ? void 0 : i.hasOwnProperty("dashUrl")) || (null === (n = e.media) || void 0 === n ? void 0 : n.hasOwnProperty("hlsUrl")) || (null === (r = e.media) || void 0 === r ? void 0 : r.hasOwnProperty("gallery")) || !!((null === (o = null === (s = e.media) || void 0 === s ? void 0 : s.richtextContent) || void 0 === o ? void 0 : o.document.length) > 0)
				},
				W = e => {
					var t, i, n, r, s;
					const o = null == e ? void 0 : e.media;
					return o && _(o) ? "[unavailable]" === (null === (s = null === (r = null === (n = null === (i = null === (t = null == o ? void 0 : o.richtextContent) || void 0 === t ? void 0 : t.document) || void 0 === i ? void 0 : i[0]) || void 0 === n ? void 0 : n.c) || void 0 === r ? void 0 : r[0]) || void 0 === s ? void 0 : s.t) : o && c(o) ? null === o.gallery : void 0
				}
		},
		"./src/reddit/models/ModQueue/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			}));
			var n = i("./src/reddit/helpers/isPost.ts"),
				r = i("./src/reddit/models/Flair/index.ts");
			const s = 1;
			var o;
			! function(e) {
				e.Approve = "approve", e.Flair = "flair", e.IgnoreReports = "ignore_reports", e.Lock = "lock", e.MarkNSFW = "mark_nsfw", e.RemovalReason = "removal_reason", e.Remove = "remove", e.Spam = "spam", e.Spoiler = "spoiler", e.UnignoreReports = "unignore_reports", e.Unlock = "unlock", e.UnmarkNSFW = "unmark_nsfw", e.Unspoiler = "unspoiler"
			}(o || (o = {}));
			const d = {},
				a = {
					ignore_reports: o.UnignoreReports,
					lock: o.Unlock,
					mark_nsfw: o.UnmarkNSFW,
					remove: o.Approve,
					spam: o.Approve,
					spoiler: o.Unspoiler,
					unignore_reports: o.IgnoreReports,
					unlock: o.Lock,
					unmark_nsfw: o.MarkNSFW,
					unspoiler: o.Spoiler
				},
				l = (e, t, i, s, a) => {
					switch (t) {
						case "approve": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									approvedBy: s,
									isApproved: !0,
									isRemoved: !1,
									isSpam: !1,
									bannedBy: null,
									modNote: null,
									modReasonBy: null,
									modRemovalReason: null,
									numReports: 0
								}
							}), e
						}
						case "flair": {
							const t = {};
							return i.forEach(i => {
								if (Object(n.a)(i)) {
									const n = e[i].flair.filter(e => e.type === r.f.Nsfw || e.type === r.f.Spoiler);
									a && a.flair && n.push(a.flair), t[i] = {
										flair: n
									}
								}
							}), t
						}
						case "ignore_reports": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									ignoreReports: !0
								}
							}), e
						}
						case "lock": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									isLocked: !0
								}
							}), e
						}
						case "mark_nsfw": {
							const t = {},
								s = {
									text: "nsfw",
									type: r.f.Nsfw
								};
							return i.forEach(i => {
								if (Object(n.a)(i)) {
									const n = e[i],
										r = n.isNSFW ? n.flair : n.flair ? [...n.flair, s] : {
											[i]: s
										};
									t[i] = {
										isNSFW: !0,
										flair: r
									}
								}
							}), t
						}
						case "remove": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									approvedBy: null,
									isApproved: !1,
									isRemoved: !0,
									isSpam: !1,
									bannedBy: s
								}
							}), e
						}
						case "spam": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									approvedBy: null,
									isApproved: !1,
									isRemoved: !1,
									isSpam: !0,
									bannedBy: s
								}
							}), e
						}
						case "spoiler": {
							const t = {},
								s = {
									text: "spoiler",
									type: r.f.Spoiler
								};
							return i.forEach(i => {
								if (Object(n.a)(i)) {
									const n = e[i],
										r = n.isSpoiler ? n.flair : n.flair ? [...n.flair, s] : {
											[i]: s
										};
									t[i] = {
										isSpoiler: !0,
										flair: r
									}
								}
							}), t
						}
						case "unignore_reports": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									ignoreReports: !1
								}
							}), e
						}
						case "unlock": {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									isLocked: !1
								}
							}), e
						}
						case "unmark_nsfw": {
							const t = {};
							return i.forEach(i => {
								if (Object(n.a)(i)) {
									const n = e[i],
										s = n.flair ? n.flair.filter(e => e.type !== r.f.Nsfw) : null;
									t[i] = {
										isNSFW: !1,
										flair: s
									}
								}
							}), t
						}
						case "unspoiler": {
							const t = {};
							return i.forEach(i => {
								if (Object(n.a)(i)) {
									const n = e[i],
										s = n.flair ? n.flair.filter(e => e.type !== r.f.Spoiler) : null;
									t[i] = {
										isSpoiler: !1,
										flair: s
									}
								}
							}), t
						}
						case o.RemovalReason: {
							const e = {};
							return i.forEach(t => {
								e[t] = {
									modNote: a && a.modNote,
									modReasonBy: s,
									modRemovalReason: a && a.removalReason
								}
							}), e
						}
						default:
							return d
					}
				}
		},
		"./src/reddit/models/ModeratingSubreddits/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n, r = i("./node_modules/lodash/snakeCase.js"),
				s = i.n(r);
			! function(e) {
				e.access = "access", e.config = "config", e.flair = "flair", e.mail = "mail", e.posts = "posts", e.wiki = "wiki", e.chatConfig = "chatConfig", e.chatOperator = "chatOperator", e.all = "all"
			}(n || (n = {}));
			const o = Object.freeze({
					all: !0,
					access: !0,
					chatConfig: !0,
					chatOperator: !0,
					config: !0,
					flair: !0,
					mail: !0,
					posts: !0,
					wiki: !0
				}),
				d = o,
				a = e => {
					return Object.keys(e).map(t => (e[t] ? "+" : "-") + s()(t)).join(",")
				}
		},
		"./src/reddit/models/Multireddit/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "h", (function() {
				return l
			})), i.d(t, "i", (function() {
				return u
			})), i.d(t, "g", (function() {
				return c
			}));
			const n = 50,
				r = 500,
				s = 2;
			var o, d;

			function a(e) {
				return "string" == typeof e.url
			}! function(e) {
				e.Hidden = "hidden", e.Private = "private", e.Public = "public"
			}(o || (o = {})),
			function(e) {
				e.TooShort = "tooshort", e.SameName = "samename", e.Generic = "generic"
			}(d || (d = {}));
			const l = (e, t) => `/user/${e}/m/${t}/`.toLowerCase(),
				u = e => /^\/user\/([^/]+)\//.exec(e)[1];

			function c(e) {
				return !!e.subredditIds || !!e.profileIds
			}
		},
		"./src/reddit/models/NewStructuredStyles/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return c
			})), i.d(t, "c", (function() {
				return y
			})), i.d(t, "a", (function() {
				return T
			})), i.d(t, "b", (function() {
				return O
			}));
			var n = i("./node_modules/polished/dist/polished.es.js"),
				r = i("./src/reddit/models/Theme/NewColorSystem/index.ts"),
				s = i("./src/reddit/constants/colors.ts");
			const o = {
					borderRadius: "24",
					customSize: "32",
					padding: "6",
					size: "24"
				},
				d = {
					highlight: "#E9F5FD",
					metaText: "#787C7E",
					metaTextAlpha50: Object(n.f)("#787C7E", .5),
					metaTextShaded80: Object(n.h)(.8, "#787C7E"),
					placeholder: "#D3D6DA",
					postIcon: "#878A8C",
					postLine: "#D3D6DA",
					report: "#FFF7E5"
				},
				a = {
					...d,
					postLineShaded80: Object(n.h)(.8, d.postLine),
					postLineShaded90: Object(n.h)(.9, d.postLine)
				},
				l = {
					actionIcon: "#878A8C",
					body: "#FFFFFF",
					bodyFade: "#FFFFFF00",
					bodyText: "#1A1A1B",
					checkbox: "#000000",
					errorText: "#FF0000",
					field: "#F6F7F8",
					fieldFade: "#F6F7F800",
					flair: "#EDEFF1",
					inactive: "#EDEFF1",
					lightText: "#FFFFFF",
					line: "#EDEFF1",
					linkText: "#0079D3",
					monospaceColor: "#FF006D",
					navIcon: "#1A1A1B",
					nsfwBlocking: {
						bgcolor: "#edeff1",
						color: "#030303",
						contentTitleBgColor: "#f6f7f8;",
						mainCtaBgColor: "#fff"
					},
					pageHeader: "#0079D3",
					postFlairText: "#1A1A1B"
				},
				u = (e, t, i) => Object(n.c)(i, (e => e ? "#FFFFFF" : "#000000")(t), e),
				c = (e, t) => u(e, t, .2),
				_ = {
					...l,
					invertFilter: "invert(0)",
					actionIconAlpha20: Object(n.f)(l.actionIcon, .2),
					actionIconAlpha50: Object(n.f)(l.actionIcon, .5),
					actionIconShaded80: Object(n.h)(.8, l.actionIcon),
					actionIconTinted80: Object(n.i)(.8, l.actionIcon),
					bodyAlpha50: Object(n.f)(l.body, .5),
					bodyAlpha70: Object(n.f)(l.body, .7),
					bodyAlpha80: Object(n.f)(l.body, .8),
					bodyShaded80: Object(n.h)(.8, l.body),
					bodyTinted50: Object(n.i)(.5, l.body),
					bodyTinted80: Object(n.i)(.8, l.body),
					bodyText: l.bodyText,
					bodyTextAlpha03: Object(n.f)(l.bodyText, .03),
					bodyTextAlpha20: Object(n.f)(l.bodyText, .2),
					bodyTextShaded20: Object(n.h)(.2, l.bodyText),
					bodyTextTinted20: Object(n.i)(.2, l.bodyText),
					lineShaded80: Object(n.h)(.8, l.line),
					lineShaded90: Object(n.h)(.9, l.line),
					lightTextAlpha75: Object(n.f)(l.lightText, .75),
					linkTextAlpha80: Object(n.f)(l.linkText, .5),
					linkTextShaded80: Object(n.h)(.8, l.linkText),
					linkTextTinted80: Object(n.i)(.8, l.linkText),
					linkTextWithBody: Object(n.c)(.75, l.linkText, l.body),
					menuButtonBackground: {
						active: Object(n.f)(0, 0, 0, .08),
						focus: Object(n.f)(0, 0, 0, .12),
						hover: Object(n.f)(0, 0, 0, .04)
					},
					navIconFaded10: Object(n.f)(l.navIcon, .1)
				},
				m = {
					downvote: s.a.downvote,
					downvoteShaded80: Object(n.h)(.8, s.a.downvote),
					downvoteTinted80: Object(n.i)(.8, s.a.downvote),
					upvote: s.a.upvote,
					upvoteShaded80: Object(n.h)(.8, s.a.upvote),
					upvoteTinted80: Object(n.i)(.8, s.a.upvote)
				},
				p = {
					active: "#24A0ED",
					banner: {
						backgroundColor: "#24A0ED",
						backgroundImage: void 0,
						backgroundImagePosition: "cover",
						communityNameFormat: "slashtag",
						iconColor: "#24A0ED",
						iconImage: void 0,
						iconDimensions: o,
						lineHeight: "38",
						height: 64,
						positionedImage: void 0,
						positionedImageHeight: 48,
						positionedImageAlignment: "cover",
						secondaryBannerPositionedImage: void 0,
						showCommunityIcon: !0
					},
					button: "#0079D3",
					buttonShaded80: Object(n.h)(.8, "#0079D3"),
					canvas: "#DAE0E6",
					menu: "#FFFFFF",
					menuActiveText: "#0079D3",
					menuInactiveText: "#0079D3",
					metaText: a.metaText,
					metaTextAlpha50: a.metaTextAlpha50,
					metaTextShaded80: a.metaTextShaded80,
					navBar: {
						activeLink: a.highlight,
						activeSubmenuCaret: "#24A0ED",
						activeSubmenuLink: "#24A0ED",
						backgroundColor: "#24A0ED",
						backgroundImage: void 0,
						hoverLink: a.highlight,
						inactiveLink: _.inactive,
						inactiveSubmenuCaret: Object(n.g)(.6, "#24A0ED"),
						inactiveSubmenuLink: Object(n.g)(.6, "#24A0ED"),
						submenuBackgroundColor: Object(n.g)(.93, "#24A0ED"),
						useOverlay: !1
					},
					post: "#FFFFFF",
					postFlairText: "#1A1A1B",
					titleText: "#1A1A1B",
					upsell: {
						appleIcon: "#000000",
						ssoButtonBorderColor: "#D3D6DA",
						ssoButtonTextColor: "#3D4043"
					},
					voteText: {
						...m,
						base: "#878A8C"
					},
					voteIcons: {
						upvoteActive: void 0,
						upvoteInactive: void 0,
						downvoteActive: void 0,
						downvoteInactive: void 0
					},
					widgetColors: {
						sidebarWidgetBackgroundColor: "#FFFFFF",
						sidebarWidgetBorderColor: c("#FFFFFF", !1),
						sidebarWidgetHeaderColor: "#FFFFFF",
						sidebarWidgetHeaderColorAlpha60: Object(n.f)("#FFFFFF", .6),
						sidebarWidgetTextColor: "#1A1A1B",
						sidebarWidgetTextColorShaded80: Object(n.h)(.8, "#1A1A1B"),
						sidebarWidgetTitleColor: "#1A1A1B",
						lineColor: Object(r.b)("#1A1A1B")
					},
					search: {
						syntaxHighlightBackgroundColor: "#E9F5FD",
						syntaxHighlightColor: "#1A1A1A"
					}
				},
				h = {
					...p,
					postTransparent20: Object(n.k)(.2, p.post),
					postError: Object(n.c)(.1, "#FF0000", p.post),
					activeAlpha10: Object(n.f)(p.active, .1),
					activeAlpha20: Object(n.f)(p.active, .2),
					activeAlpha50: Object(n.f)(p.active, .5),
					activeLight60: Object(n.g)(.6, p.active),
					activeTinted05: Object(n.i)(.05, p.active),
					activeShaded80: Object(n.h)(.8, p.active),
					activeShaded90: Object(n.h)(.9, p.active),
					buttonAlpha05: Object(n.f)(p.button, .05),
					buttonAlpha10: Object(n.f)(p.button, .1),
					buttonAlpha20: Object(n.f)(p.button, .2),
					buttonAlpha40: Object(n.f)(p.button, .4),
					buttonAlpha50: Object(n.f)(p.button, .5),
					buttonAlpha80: Object(n.f)(p.button, .8),
					buttonShaded80: Object(n.h)(.8, p.button),
					buttonTinted20: Object(n.i)(.2, p.button),
					buttonTinted50: Object(n.i)(.5, p.button),
					buttonTinted80: Object(n.i)(.8, p.button),
					postTinted20: Object(n.i)(.2, p.post)
				},
				f = {
					actionIcon: "#818384",
					body: "#1A1A1B",
					bodyFade: "#1A1A1B00",
					bodyText: "#D7DADC",
					button: "#D7DADC",
					buttonShaded80: Object(n.h)(.8, "#D7DADC"),
					canvas: "#030303",
					checkbox: "#FFFFFF",
					errorText: "#FF0000",
					field: "#272729",
					fieldFade: "#27272900",
					highlight: "#17232D",
					inactive: "#343536",
					lightText: "#FFFFFF",
					line: "#343536",
					lineShaded80: Object(n.h)(.8, "#343536"),
					lineShaded90: Object(n.h)(.9, "#343536"),
					linkText: "#4FBCFF",
					menu: "#030303",
					menuActiveText: "#D7DADC",
					menuInactiveText: "#D7DADC",
					metaText: "#818384",
					metaTextAlpha50: Object(n.f)("#818384", .5),
					metaTextShaded80: Object(n.h)(.8, "#818384"),
					monospaceColor: "#5291f8",
					navIcon: "#D7DADC",
					nsfwBlocking: {
						bgcolor: "#030303",
						color: "#ffffff",
						mainCtaBgColor: "#1a1a1b",
						contentTitleBgColor: "#272729"
					},
					pageHeader: "#818384",
					placeholder: "#3A3A3C",
					post: "#1A1A1B",
					postFlairText: "#FFFFFF",
					postIcon: "#818384",
					postLine: "#343536",
					postLineShaded80: Object(n.h)(.8, "#343536"),
					postLineShaded90: Object(n.h)(.9, "#343536"),
					report: "#1C1402",
					titleText: "#D7DADC",
					upsell: {
						appleIcon: "#7d7d7d",
						ssoButtonBorderColor: "#D7DADC",
						ssoButtonTextColor: "#D7DADC"
					},
					voteText: {
						...m,
						base: "#818384"
					},
					voteIcons: {
						upvoteActive: void 0,
						upvoteInactive: void 0,
						downvoteActive: void 0,
						downvoteInactive: void 0
					},
					widgetColors: {
						appleIcon: "#7d7d7d",
						sidebarWidgetBackgroundColor: "#1A1A1B",
						sidebarWidgetBorderColor: c("#1A1A1B", !0),
						sidebarWidgetHeaderColor: "#1A1A1B",
						sidebarWidgetHeaderColorAlpha60: Object(n.f)("#1A1A1B", .6),
						sidebarWidgetTextColor: "#D7DADC",
						sidebarWidgetTextColorShaded80: Object(n.h)(.8, "#D7DADC"),
						sidebarWidgetTitleColor: "#818384",
						lineColor: "#343536"
					}
				},
				b = {
					...f,
					invertFilter: "invert(0.9)",
					actionIconAlpha20: Object(n.f)(f.actionIcon, .2),
					actionIconAlpha50: Object(n.f)(f.actionIcon, .5),
					actionIconShaded80: Object(n.h)(.8, f.actionIcon),
					actionIconTinted80: Object(n.i)(.8, f.actionIcon),
					bodyAlpha50: Object(n.f)(f.body, .5),
					bodyAlpha70: Object(n.f)(f.body, .7),
					bodyAlpha80: Object(n.f)(f.body, .8),
					bodyShaded80: Object(n.h)(.8, f.body),
					bodyTinted50: Object(n.i)(.5, f.body),
					bodyTinted80: Object(n.i)(.8, f.body),
					bodyTextAlpha03: Object(n.f)(f.bodyText, .03),
					bodyTextAlpha20: Object(n.f)(f.bodyText, .2),
					bodyTextShaded20: Object(n.h)(.2, f.bodyText),
					bodyTextTinted20: Object(n.i)(.2, f.bodyText),
					buttonAlpha05: Object(n.f)(f.button, .05),
					buttonAlpha10: Object(n.f)(f.button, .1),
					buttonAlpha20: Object(n.f)(f.button, .2),
					buttonAlpha40: Object(n.f)(f.button, .4),
					buttonAlpha50: Object(n.f)(f.button, .5),
					buttonAlpha80: Object(n.f)(f.button, .8),
					buttonShaded80: Object(n.h)(.8, f.button),
					buttonTinted20: Object(n.i)(.2, f.button),
					buttonTinted50: Object(n.i)(.5, f.button),
					buttonTinted80: Object(n.i)(.8, f.button),
					lightTextAlpha75: Object(n.f)("#FFFFFF", .75),
					navIconFaded10: Object(n.f)(f.navIcon, .1),
					linkTextAlpha80: Object(n.f)(f.linkText, .5),
					linkTextShaded80: Object(n.h)(.8, f.linkText),
					linkTextTinted80: Object(n.i)(.8, f.linkText),
					linkTextWithBody: Object(n.c)(.75, f.linkText, f.body),
					menuButtonBackground: {
						active: Object(n.f)(255, 255, 255, .08),
						focus: Object(n.f)(255, 255, 255, .12),
						hover: Object(n.f)(255, 255, 255, .04)
					},
					postTransparent20: Object(n.k)(.2, f.post),
					postError: Object(n.c)(.1, "#FF0000", f.post),
					postTinted20: Object(n.i)(.2, f.post)
				},
				g = {
					lineShadedNinety: Object(n.h)(.9, b.line),
					primaryButtonShadedEighty: Object(n.h)(.8, b.button),
					primaryButtonTintedEighty: Object(n.i)(.8, b.button),
					primaryButtonTintedSixty: Object(n.i)(.6, b.button),
					primaryButtonTintedFifty: Object(n.i)(.5, b.button)
				},
				w = {
					active: "#0079D3",
					banner: {
						backgroundColor: "#24A0ED",
						backgroundImage: void 0,
						backgroundImagePosition: "cover",
						communityNameFormat: "slashtag",
						iconColor: "#24A0ED",
						iconImage: void 0,
						iconDimensions: o,
						lineHeight: "38",
						height: 64,
						positionedImage: void 0,
						positionedImageHeight: 48,
						positionedImageAlignment: "cover",
						secondaryBannerPositionedImage: void 0,
						showCommunityIcon: !0
					},
					flair: "#343536",
					navBar: {
						activeLink: a.highlight,
						activeSubmenuCaret: "#D7DADC",
						activeSubmenuLink: "#D7DADC",
						backgroundColor: "#030303",
						backgroundImage: void 0,
						hoverLink: "#D7DADC",
						inactiveLink: "#D7DADC",
						inactiveSubmenuCaret: "#D7DADC",
						inactiveSubmenuLink: "#D7DADC",
						submenuBackgroundColor: "#1A1A1B",
						useOverlay: !1
					},
					search: {
						syntaxHighlightBackgroundColor: "#FFF7E5",
						syntaxHighlightColor: "#0a0a0a"
					}
				},
				v = {
					...w,
					activeAlpha10: Object(n.f)(w.active, .1),
					activeAlpha20: Object(n.f)(w.active, .2),
					activeAlpha50: Object(n.f)(w.active, .1),
					activeLight60: Object(n.g)(.6, w.active),
					activeTinted05: Object(n.i)(.05, w.active),
					activeShaded80: Object(n.h)(.8, w.active),
					activeShaded90: Object(n.h)(.9, w.active)
				},
				y = (e, t, i) => i ? E(e) : S(e, t),
				E = e => ({
					...O,
					activeAlpha10: e.active ? Object(n.f)(e.active, .1) : v.activeAlpha10,
					activeAlpha20: e.active ? Object(n.f)(e.active, .2) : v.activeAlpha20,
					activeAlpha50: e.active ? Object(n.f)(e.active, .5) : v.activeAlpha50,
					activeLight60: e.active ? Object(n.g)(.6, e.active) : v.activeLight60,
					activeTinted05: e.active ? Object(n.i)(.05, e.active) : v.activeTinted05,
					activeShaded80: e.active ? Object(n.h)(.8, e.active) : v.activeShaded80,
					activeShaded90: e.active ? Object(n.h)(.9, e.active) : v.activeShaded90,
					banner: e.banner || v.banner,
					navBar: e.navBar || v.navBar
				}),
				S = (e, t) => {
					let i;
					if (e.post) {
						const r = u(e.post, !1, .89),
							s = u(e.post, !1, .2);
						(i = {
							..._,
							...t,
							...e,
							bodyText: r,
							bodyTextAlpha03: Object(n.f)(r, .03),
							bodyTextAlpha20: Object(n.f)(r, .2),
							bodyTextShaded20: Object(n.h)(.2, r),
							bodyTextTinted20: Object(n.i)(.2, r),
							activeAlpha10: e.active ? Object(n.f)(e.active, .1) : h.activeAlpha10,
							activeAlpha20: e.active ? Object(n.f)(e.active, .2) : h.activeAlpha20,
							activeAlpha50: e.active ? Object(n.f)(e.active, .5) : h.activeAlpha50,
							activeLight60: e.active ? Object(n.g)(.6, e.active) : h.activeLight60,
							activeTinted05: e.active ? Object(n.i)(.05, e.active) : h.activeTinted05,
							activeShaded80: e.active ? Object(n.h)(.8, e.active) : h.activeShaded80,
							activeShaded90: e.active ? Object(n.h)(.9, e.active) : h.activeShaded90,
							buttonAlpha05: e.button ? Object(n.f)(e.button, .05) : h.buttonAlpha05,
							buttonAlpha10: e.button ? Object(n.f)(e.button, .1) : h.buttonAlpha10,
							buttonAlpha20: e.button ? Object(n.f)(e.button, .2) : h.buttonAlpha20,
							buttonAlpha40: e.button ? Object(n.f)(e.button, .4) : h.buttonAlpha40,
							buttonAlpha50: e.button ? Object(n.f)(e.button, .5) : h.buttonAlpha50,
							buttonAlpha80: e.button ? Object(n.f)(e.button, .8) : h.buttonAlpha80,
							buttonShaded80: e.button ? Object(n.h)(.8, e.button) : h.buttonShaded80,
							buttonTinted20: e.button ? Object(n.i)(.2, e.button) : p.button,
							buttonTinted50: e.button ? Object(n.i)(.5, e.button) : h.buttonTinted50,
							buttonTinted80: e.button ? Object(n.i)(.8, e.button) : h.buttonTinted80,
							metaText: u(e.post, !1, .51),
							placeholder: u(e.post, !1, .16),
							postError: Object(n.c)(.1, "#FF0000", e.post),
							postIcon: u(e.post, !1, .46),
							postLine: s,
							postLineShaded80: Object(n.h)(.8, s),
							postLineShaded90: Object(n.h)(.9, s),
							postTransparent20: Object(n.k)(.2, e.post),
							postTinted20: Object(n.i)(.2, e.post),
							report: Object(n.c)(.1, "#FFB000", e.post)
						}).voteText.base = u(e.post, !1, .46), e.active ? i.highlight = Object(n.c)(.1, e.active, e.post) : i.highlight = u(e.post, !1, .1)
					} else(i = {
						...e,
						..._,
						active: h.active,
						postTransparent20: Object(n.k)(.2, h.post),
						postError: Object(n.c)(.1, "#FF0000", h.post),
						activeAlpha10: h.activeAlpha10,
						activeAlpha20: h.activeAlpha20,
						activeAlpha50: h.activeAlpha50,
						activeLight60: h.activeLight60,
						activeTinted05: h.activeTinted05,
						activeShaded80: h.activeShaded80,
						activeShaded90: h.activeShaded90
					}).voteText.base = h.voteText.base;
					return i
				},
				T = {
					...h,
					...a,
					..._
				},
				O = {
					...v,
					...g,
					...b
				}
		},
		"./src/reddit/models/Onboarding/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			}));
			var n = i("./src/reddit/models/FeedElement/index.ts");
			const r = "topic_chaining_icons";

			function s(e) {
				return e.__typename === n.a.InterestTopicRecommendationsFeedElement
			}
			var o;
			! function(e) {
				e.ONBOARDING = "onboarding", e.REONBOARDING = "reonboarding"
			}(o || (o = {}));
			const d = {
				type: o.ONBOARDING
			};
			var a;
			! function(e) {
				e.Dismissed = "dismissed", e.Triggered = "triggered", e.FeatureGate = "feature_gate"
			}(a || (a = {}))
		},
		"./src/reddit/models/Poll/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "f", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			}));
			var n, r, s = i("./node_modules/bignumber.js/bignumber.js");
			! function(e) {
				e.GovGeneric = "governance:generic", e.ReplaceTopMod = "governance:replace-top-mod", e.Spinoff = "governance:spin-off", e.GA = "ga", e.Prediction = "prediction"
			}(n || (n = {})),
			function(e) {
				e.ByVoters = "byVoters", e.ByVotingPower = "byVotingPower"
			}(r || (r = {}));
			const o = {
				[n.ReplaceTopMod]: () => [{
					text: "Yes"
				}, {
					text: "No"
				}],
				[n.Spinoff]: e => [{
					text: e ? `Yes, I'd like to join r/${e}` : "Yes, I'd like to join the new community"
				}, {
					text: "No"
				}]
			};

			function d(e, t) {
				return !!e.options.filter(e => t.options[e.id].userSelected).length
			}

			function a(e, t) {
				return new Date(e.endsAt).getTime() < Date.now() || d(e, t)
			}

			function l(e, t) {
				let i = e.options[0],
					n = new s.BigNumber(t.options[i.id].votes);
				for (const r of e.options) {
					const e = new s.BigNumber(t.options[r.id].votes);
					e.isGreaterThan(n) && (i = r, n = e)
				}
				return i
			}

			function u(e) {
				switch (e.type) {
					case n.GovGeneric:
					case n.ReplaceTopMod:
					case n.Spinoff:
						return !0;
					default:
						return !1
				}
			}
		},
		"./src/reddit/models/Post/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "g", (function() {
				return r
			})), i.d(t, "t", (function() {
				return u
			})), i.d(t, "u", (function() {
				return c
			})), i.d(t, "o", (function() {
				return _
			})), i.d(t, "c", (function() {
				return h
			})), i.d(t, "a", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "n", (function() {
				return w
			})), i.d(t, "l", (function() {
				return v
			})), i.d(t, "i", (function() {
				return y
			})), i.d(t, "j", (function() {
				return E
			})), i.d(t, "h", (function() {
				return S
			})), i.d(t, "m", (function() {
				return T
			})), i.d(t, "k", (function() {
				return O
			})), i.d(t, "q", (function() {
				return I
			})), i.d(t, "s", (function() {
				return R
			})), i.d(t, "p", (function() {
				return F
			})), i.d(t, "r", (function() {
				return N
			})), i.d(t, "f", (function() {
				return C
			}));
			var n, r, s = i("./src/reddit/constants/posts.ts"),
				o = i("./src/reddit/constants/things.ts"),
				d = i("./src/reddit/models/FeedElement/index.ts"),
				a = i("./src/reddit/models/Media/index.ts"),
				l = i("./src/lib/constants/index.ts");
			! function(e) {
				e.Chat = "CHAT", e.Comment = "COMMENT"
			}(n || (n = {})),
			function(e) {
				e.AntiEvilOps = "anti_evil_ops", e.Author = "author", e.AuthorDeleted = "deleted", e.AutomodFiltered = "automod_filtered", e.CommunityOps = "community_ops", e.ContentTakedown = "content_takedown", e.CopyrightTakedown = "copyright_takedown", e.Moderator = "moderator", e.Reddit = "reddit"
			}(r || (r = {}));
			const u = e => `${o.b}${e&&e.toLowerCase()}`,
				c = e => e.startsWith(o.b) ? e.substr(o.b.length) : e,
				_ = e => e === l.E;
			var m, p, h, f, b, g;

			function w(e) {
				return e.__typename === d.a.SubredditPost
			}

			function v(e) {
				return e.__typename === d.a.ProfilePost
			}

			function y(e) {
				return e.__typename === d.a.DeletedProfilePost
			}

			function E(e) {
				return e.__typename === d.a.DeletedSubredditPost
			}

			function S(e) {
				return e.__typename === d.a.AdPost
			}

			function T(e) {
				return e.__typename === d.a.PostRecommendation
			}

			function O(e) {
				return w(e) || v(e) || y(e) || E(e) || S(e)
			}! function(e) {
				e.AdPost = "AdPost", e.DeletedProfilePost = "DeletedProfilePost", e.DeletedSubredditPost = "DeletedSubredditPost", e.ProfilePost = "ProfilePost", e.SubredditPost = "SubredditPost"
			}(m || (m = {})),
			function(e) {
				e.MOD_APPROVED = "MOD_APPROVED", e.MOD_REMOVED = "MOD_REMOVED", e.MOD_SPAMMED = "MOD_SPAMMED", e.ADMIN_REMOVED = "ADMIN_REMOVED", e.ADMIN_APPROVED = "ADMIN_APPROVED", e.ADMIN_SPAMMED = "ADMIN_SPAMMED"
			}(p || (p = {})),
			function(e) {
				e.ImageAsset = "ImageAsset", e.VideoAsset = "VideoAsset"
			}(h || (h = {})),
			function(e) {
				e.Post = "POST", e.Comment = "COMMENT"
			}(f || (f = {})),
			function(e) {
				e.Embed = "EMBED", e.Image = "IMAGE", e.Video = "VIDEO", e.Gifvideo = "GIFVIDEO", e.RPAN = "RPAN"
			}(b || (b = {})),
			function(e) {
				e.Richtext = "RICHTEXT", e.Markdown = "MARKDOWN"
			}(g || (g = {}));
			const I = e => e.belongsTo.type === s.a.PROFILE,
				R = e => e.belongsTo.type === s.a.SUBREDDIT,
				F = e => !!e.media && e.media.type === a.o.LIVEVIDEO,
				N = e => e.isStickied && !e.isSponsored;
			var C;
			! function(e) {
				e.FOLLOWED = "FOLLOWED", e.UNFOLLOWED = "UNFOLLOWED"
			}(C || (C = {}))
		},
		"./src/reddit/models/PostCollection/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.TIMELINE = "TIMELINE", e.GALLERY = "GALLERY"
				}(n || (n = {}))
		},
		"./src/reddit/models/PostCreationForm/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "n", (function() {
				return r
			})), i.d(t, "f", (function() {
				return s
			})), i.d(t, "r", (function() {
				return o
			})), i.d(t, "x", (function() {
				return d
			})), i.d(t, "w", (function() {
				return l
			})), i.d(t, "i", (function() {
				return u
			})), i.d(t, "h", (function() {
				return c
			})), i.d(t, "l", (function() {
				return _
			})), i.d(t, "m", (function() {
				return m
			})), i.d(t, "p", (function() {
				return p
			})), i.d(t, "q", (function() {
				return h
			})), i.d(t, "k", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			})), i.d(t, "a", (function() {
				return g
			})), i.d(t, "b", (function() {
				return w
			})), i.d(t, "c", (function() {
				return v
			})), i.d(t, "d", (function() {
				return y
			})), i.d(t, "g", (function() {
				return E
			})), i.d(t, "o", (function() {
				return S
			})), i.d(t, "v", (function() {
				return T
			})), i.d(t, "s", (function() {
				return O
			})), i.d(t, "t", (function() {
				return I
			})), i.d(t, "u", (function() {
				return R
			})), i.d(t, "j", (function() {
				return F
			}));
			var n = i("./src/reddit/models/Upload/index.ts");
			const r = Object(n.d)("VIDEO_POSTER"),
				s = {
					isProfile: !1,
					name: ""
				};
			var o;
			! function(e) {
				e[e.Post = 0] = "Post", e[e.Draft = 1] = "Draft", e[e.ScheduledPost = 2] = "ScheduledPost"
			}(o || (o = {}));
			const d = e => !(1 !== e.items.length || !e.items[0].video),
				a = ["title", "body", "link", "flair"],
				l = e => a.includes(e);
			var u, c, _, m, p, h, f;
			! function(e) {
				e.MARKDOWN = "markdown", e.RICH_TEXT = "richtext"
			}(u || (u = {})),
			function(e) {
				e.POST_CREATION = "POST_CREATION", e.POST_EDITING = "POST_EDITING"
			}(c || (c = {})),
			function(e) {
				e.CLICK = "click", e.TYPE = "type"
			}(_ || (_ = {})),
			function(e) {
				e.CAPTION = "caption", e.TITLE = "title", e.BODY = "body", e.OUTBOUND_URL = "outbound_url", e.URL = "url"
			}(m || (m = {})),
			function(e) {
				e.CROSSPOST = "crosspost", e.GALLERY = "gallery", e.LINK = "link", e.RICH_TEXT = "richText", e.MARKDOWN = "markdown", e.MEDIA = "media", e.VIDEO_GIF = "videogif", e.SELF = "self", e.POLL = "poll"
			}(p || (p = {})),
			function(e) {
				e.ImageWillBeRemoved = "SrChangePrompt_ImageWillBeRemoved", e.VideoWillBeRemovedMediaNotAllowed = "SrChangePrompt_VideoWillBeRemovedMediaNotAllowed", e.VideoWillBeRemovedTooLongForGif = "SrChangePrompt_VideoWillBeRemovedTooLongForGif", e.GalleryWillBeRemovedGalleryNotAllowed = "GalleryWillBeRemovedGalleryNotAllowed"
			}(h || (h = {})),
			function(e) {
				e.POST_OVERFLOW_MENU = "postOverflowMenu", e.COLLECTION_INFO_POST = "colletionInfoPost"
			}(f || (f = {}));
			const b = "POST_DRAFTS_MODAL_ID",
				g = "COLLECTIONS_LIST_MODAL_ID",
				w = "CREATE_COLLECTION_MODAL_ID",
				v = "DIRECT_CREATE_COLLECTION_MODAL_ID",
				y = "DISCARD_POST_ON_CREATE_POST_MODAL_ID",
				E = "EVENT_SCHEDULE_PICKER_MODAL_ID",
				S = "POST_SCHEDULE_PICKER_MODAL_ID",
				T = e => e === w || e === v,
				O = (e, t, i) => `${E}-[postId: ${e}]-isOverlay[${t}]-pos[${i}]`,
				I = (e, t) => `${g}-[postId: ${e}]-isOverlay[${t}]`,
				R = (e, t) => `${w}-[postId: ${e}]-isOverlay[${t}]`;
			var F;
			! function(e) {
				e.Now = "now", e.AtEventTime = "atEventTime"
			}(F || (F = {}))
		},
		"./src/reddit/models/PostDraft/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return o
			}));
			var n, r, s = i("./src/lib/constants/index.ts");
			! function(e) {
				e[e.Image = 0] = "Image", e[e.Link = 1] = "Link", e[e.Markdown = 2] = "Markdown", e[e.RichText = 3] = "RichText", e[e.Video = 4] = "Video"
			}(n || (n = {})),
			function(e) {
				e[e.replyToPost = 0] = "replyToPost", e[e.replyToComment = 1] = "replyToComment", e[e.edit = 2] = "edit"
			}(r || (r = {}));
			const o = {
				[n.Image]: s.Wb.MEDIA,
				[n.Link]: s.Wb.LINK_ONLY,
				[n.Markdown]: s.Wb.POST,
				[n.RichText]: s.Wb.POST,
				[n.Video]: s.Wb.MEDIA
			}
		},
		"./src/reddit/models/PostRequirements/index.ts": function(e, t, i) {
			"use strict";
			var n, r;
			i.d(t, "b", (function() {
					return n
				})), i.d(t, "a", (function() {
					return r
				})),
				function(e) {
					e.None = "NONE", e.Whitelist = "WHITELIST", e.Blacklist = "BLACKLIST"
				}(n || (n = {})),
				function(e) {
					e.None = "NONE", e.Required = "REQUIRED", e.NotAllowed = "NOT_ALLOWED"
				}(r || (r = {}))
		},
		"./src/reddit/models/Prediction/Tournament/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			}));
			var n = i("./src/redditGQL/types.ts");

			function r(e) {
				return Boolean(e.predictionTournament)
			}

			function s(e) {
				var t;
				return Boolean(null === (t = e.pollData) || void 0 === t ? void 0 : t.isPrediction)
			}
			i.d(t, "a", (function() {
				return n.t
			}))
		},
		"./src/reddit/models/Prediction/index.ts": function(e, t, i) {
			"use strict";
			var n, r;

			function s(e) {
				return e.isPrediction
			}
			i.d(t, "a", (function() {
					return n
				})), i.d(t, "b", (function() {
					return r
				})), i.d(t, "c", (function() {
					return s
				})),
				function(e) {
					e.Coins = "COINS", e.Tokens = "TOKENS", e.NotSupported = "NOT_SUPPORTED"
				}(n || (n = {})),
				function(e) {
					e.Open = "OPEN", e.Closed = "CLOSED", e.Cancelled = "CANCELLED", e.Resolved = "RESOLVED", e.CancelInProgress = "CANCEL_IN_PROGRESS", e.ResolveInProgress = "RESOLVE_IN_PROGRESS"
				}(r || (r = {}))
		},
		"./src/reddit/models/Profile/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js");
			var r;
			! function(e) {
				e.Downvoted = "downvoted", e.Hidden = "hidden", e.Saved = "saved", e.Upvoted = "upvoted", e.ReceivedGildings = "gilded", e.GivenGildings = "given"
			}(r || (r = {}));
			const s = {
				[r.Downvoted]: () => n.fbt._("hmm... looks like you haven't downvoted anything yet", null, {
					hk: "2DbFlZ"
				}),
				[r.Hidden]: () => n.fbt._("hmm... looks like you haven't hidden anything yet", null, {
					hk: "Bf1JR"
				}),
				[r.Saved]: () => n.fbt._("hmm... looks like you haven't saved anything yet", null, {
					hk: "6odfL"
				}),
				[r.Upvoted]: () => n.fbt._("hmm... looks like you haven't upvoted anything yet", null, {
					hk: "4voq8V"
				}),
				[r.ReceivedGildings]: () => n.fbt._("hmm... looks like you haven't received any awards yet", null, {
					hk: "3NhMZq"
				}),
				[r.GivenGildings]: () => n.fbt._("hmm... looks like you haven't given any awards yet", null, {
					hk: "2UdWhD"
				})
			}
		},
		"./src/reddit/models/Profile/mock.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./src/reddit/models/Subreddit/index.ts"),
				r = i("./src/reddit/models/Subreddit/mock.ts");

			function s(e) {
				return {
					...Object(r.b)({
						acceptFollowers: !0,
						displayText: "u/cfb",
						url: "/user/cfb",
						subscribers: 1,
						...e
					}),
					type: n.f.User
				}
			}
			const o = {
				t5_100: s({
					id: "t5_100",
					displayText: "u/cfb",
					name: "cfb",
					title: "CFB Title",
					url: "/user/cfb",
					subscribers: 1
				}),
				t5_200: s({
					id: "t5_200",
					displayText: "u/test",
					name: "test",
					title: "Test User Title",
					url: "/user/test",
					subscribers: 10
				}),
				t5_300: s({
					id: "t5_200",
					displayText: "u/shitty_watercolour",
					name: "shitty_watercolour",
					title: "Shitty_Watercolour Title",
					url: "/user/shitty_watercolour",
					subscribers: 20
				})
			}
		},
		"./src/reddit/models/Reportable/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = (e, t, i) => {
				return e.map(e => {
					const [n, r, , s] = e;
					return n === t ? [n, r, i, s] : e
				})
			}
		},
		"./src/reddit/models/RichTextJson/addEmotesAsImagesParam.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/addQueryParams/index.ts");
			t.a = e => Object(n.a)(e, {
				emotes_as_images: !0
			})
		},
		"./src/reddit/models/RichTextJson/addRTJParam.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/lib/addQueryParams/index.ts");
			t.a = e => Object(n.a)(e, {
				rtj: "only"
			})
		},
		"./src/reddit/models/RichTextJson/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "j", (function() {
					return n
				})), i.d(t, "A", (function() {
					return r
				})), i.d(t, "w", (function() {
					return s
				})), i.d(t, "n", (function() {
					return o
				})), i.d(t, "o", (function() {
					return d
				})), i.d(t, "g", (function() {
					return a
				})), i.d(t, "v", (function() {
					return l
				})), i.d(t, "y", (function() {
					return u
				})), i.d(t, "B", (function() {
					return c
				})), i.d(t, "C", (function() {
					return _
				})), i.d(t, "x", (function() {
					return m
				})), i.d(t, "u", (function() {
					return p
				})), i.d(t, "k", (function() {
					return h
				})), i.d(t, "l", (function() {
					return f
				})), i.d(t, "b", (function() {
					return b
				})), i.d(t, "c", (function() {
					return g
				})), i.d(t, "q", (function() {
					return w
				})), i.d(t, "p", (function() {
					return v
				})), i.d(t, "e", (function() {
					return y
				})), i.d(t, "f", (function() {
					return E
				})), i.d(t, "d", (function() {
					return S
				})), i.d(t, "z", (function() {
					return T
				})), i.d(t, "h", (function() {
					return O
				})), i.d(t, "m", (function() {
					return I
				})), i.d(t, "s", (function() {
					return F
				})), i.d(t, "a", (function() {
					return N
				})), i.d(t, "r", (function() {
					return C
				})), i.d(t, "D", (function() {
					return j
				})), i.d(t, "t", (function() {
					return A
				})), i.d(t, "i", (function() {
					return x
				})), i.d(t, "G", (function() {
					return D
				})), i.d(t, "F", (function() {
					return P
				})), i.d(t, "E", (function() {
					return L
				})),
				function(e) {
					e[e.bold = 1] = "bold", e[e.italic = 2] = "italic", e[e.underline = 4] = "underline", e[e.strikethrough = 8] = "strikethrough", e[e.subscript = 16] = "subscript", e[e.superscript = 32] = "superscript", e[e.monospace = 64] = "monospace"
				}(n || (n = {}));
			const r = "text",
				s = "raw",
				o = "br",
				d = "link",
				a = "c/",
				l = "p/",
				u = "r/",
				c = "u/",
				_ = "@",
				m = "spoilertext",
				p = "par",
				h = "h",
				f = "hr",
				b = "blockquote",
				g = "code",
				w = "li",
				v = "list",
				y = "L",
				E = "R",
				S = "C",
				T = "table",
				O = "embed",
				I = "img";
			var R;
			! function(e) {
				e.Valid = "valid", e.Unprocessed = "unprocessed", e.Failed = "failed", e.Invalid = "invalid"
			}(R || (R = {}));
			const F = "Image",
				N = "gif",
				C = "AnimatedImage",
				j = "video",
				A = "RedditVideo",
				x = {
					document: []
				},
				D = e => !e || !e.document || (e => 0 === e.length || 1 === e.length && (e => "par" === e.e && (!e.c || 0 === e.c.length))(e[0]))(e.document),
				P = e => e.e === N || e.e === I || e.e === j,
				L = (e, t) => {
					const i = e && e[t];
					if (i && (!i.status || i.status === R.Valid)) return i
				}
		},
		"./src/reddit/models/RichTextJson/nodeMakers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "s", (function() {
				return r
			})), i.d(t, "m", (function() {
				return s
			})), i.d(t, "i", (function() {
				return o
			})), i.d(t, "n", (function() {
				return d
			})), i.d(t, "o", (function() {
				return a
			})), i.d(t, "t", (function() {
				return l
			})), i.d(t, "l", (function() {
				return u
			})), i.d(t, "f", (function() {
				return c
			})), i.d(t, "c", (function() {
				return _
			})), i.d(t, "d", (function() {
				return m
			})), i.d(t, "j", (function() {
				return p
			})), i.d(t, "k", (function() {
				return h
			})), i.d(t, "q", (function() {
				return f
			})), i.d(t, "p", (function() {
				return b
			})), i.d(t, "r", (function() {
				return g
			})), i.d(t, "g", (function() {
				return w
			})), i.d(t, "b", (function() {
				return v
			})), i.d(t, "u", (function() {
				return y
			})), i.d(t, "e", (function() {
				return E
			})), i.d(t, "h", (function() {
				return S
			})), i.d(t, "a", (function() {
				return T
			}));
			var n = i("./src/reddit/models/RichTextJson/index.ts");
			const r = (e, t) => ({
					e: n.A,
					t: e,
					...t ? {
						f: t
					} : null
				}),
				s = e => ({
					e: n.w,
					t: e
				}),
				o = (e, t, i) => ({
					e: n.o,
					t: e,
					u: t,
					...i ? {
						f: i
					} : null
				}),
				d = e => ({
					e: n.x,
					c: [r(e, null)]
				}),
				a = (e, t) => ({
					e: n.y,
					t: e,
					l: t
				}),
				l = (e, t) => ({
					e: n.B,
					t: e,
					l: t
				}),
				u = e => ({
					e: n.u,
					c: e
				}),
				c = (e, t) => ({
					e: n.k,
					l: e,
					c: t
				}),
				_ = e => ({
					e: n.b,
					c: e
				}),
				m = e => ({
					e: "code",
					c: e
				}),
				p = e => ({
					e: n.q,
					c: e
				}),
				h = (e, t) => ({
					e: n.p,
					c: e,
					o: t
				}),
				f = (e, t) => ({
					c: e,
					...t ? {
						a: t
					} : {}
				}),
				b = e => ({
					c: e
				}),
				g = (e, t) => ({
					e: n.z,
					h: e,
					c: t
				}),
				w = (e, t) => ({
					e: n.m,
					id: e,
					c: t
				}),
				v = (e, t) => ({
					e: n.a,
					id: e,
					c: t
				}),
				y = (e, t, i, r) => ({
					e: n.D,
					id: e,
					c: t,
					gifify: r,
					...i ? {
						p: w(i)
					} : {}
				}),
				E = (e, t) => "image/gif" === t ? {
					e: n.a,
					id: e
				} : {
					e: n.m,
					id: e
				},
				S = () => ({
					e: n.n
				}),
				T = {
					e: n.u,
					c: [{
						e: n.A,
						t: ""
					}]
				}
		},
		"./src/reddit/models/Rule/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "f", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "h", (function() {
				return c
			}));
			const n = {
					all: "all",
					post: "post",
					comment: "comment"
				},
				r = {
					all: "all",
					link: "post",
					comment: "comment"
				},
				s = {
					LINK_AND_COMMENT: "all",
					LINK: "post",
					COMMENT: "comment"
				},
				o = 15,
				d = 100,
				a = 100,
				l = 500,
				u = 2e3,
				c = e => ({
					rules: e.map(e => ({
						kind: r[e.kind],
						description: e.description,
						descriptionHtml: e.description_html,
						shortName: e.short_name,
						violationReason: e.violation_reason,
						createdUtc: e.created_utc,
						priority: e.priority
					}))
				})
		},
		"./src/reddit/models/Search/index.ts": function(e, t, i) {
			"use strict";
			var n, r, s;
			i.d(t, "c", (function() {
					return n
				})), i.d(t, "d", (function() {
					return r
				})), i.d(t, "b", (function() {
					return s
				})), i.d(t, "a", (function() {
					return o
				})), i.d(t, "e", (function() {
					return d
				})),
				function(e) {
					e.trending = "trending", e.typeahead = "typeahead", e.recent = "recent", e.submit = "submit"
				}(n || (n = {})),
				function(e) {
					e.tile = "tile", e.dropdown = "dropdown"
				}(r || (r = {})),
				function(e) {
					e.subredditOrProfile = "subredditOrProfile", e.text = "text"
				}(s || (s = {}));
			const o = {
					searchQuery: "",
					section: n.recent,
					type: s.text
				},
				d = e => ({
					enableFollowers: !e.displayText.startsWith("u/") || e.acceptFollowers,
					displayInfo: {
						iconUrl: e.icon.url,
						isNSFW: e.isNSFW,
						subredditOrProfileName: e.name,
						subscribers: e.subscribers
					},
					id: e.id,
					isProfile: e.displayText.startsWith("u/"),
					isSubreddit: e.displayText.startsWith("r/"),
					isTypeaheadSuggestion: !0,
					searchQuery: e.displayText,
					section: n.typeahead,
					type: s.subredditOrProfile
				})
		},
		"./src/reddit/models/SearchDiscoveryUnit/index.ts": function(e, t, i) {
			"use strict";
			var n, r, s;
			i.d(t, "c", (function() {
					return n
				})), i.d(t, "a", (function() {
					return r
				})), i.d(t, "b", (function() {
					return s
				})),
				function(e) {
					e.Default = "DEFAULT", e.Trending = "TRENDING"
				}(n || (n = {})),
				function(e) {
					e.Communities = "COMMUNITIES", e.Posts = "POSTS", e.Queries = "QUERIES"
				}(r || (r = {})),
				function(e) {
					e.Carousel = "CAROUSEL", e.Hero = "HERO", e.Row = "ROW", e.Widget = "WIDGET", e.PromotedTrendHero = "PROMOTED_TREND_HERO"
				}(s || (s = {}))
		},
		"./src/reddit/models/StructuredStyles/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "g", (function() {
				return s
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "l", (function() {
				return u
			})), i.d(t, "j", (function() {
				return g
			})), i.d(t, "i", (function() {
				return w
			})), i.d(t, "h", (function() {
				return y
			})), i.d(t, "c", (function() {
				return E
			})), i.d(t, "k", (function() {
				return S
			})), i.d(t, "b", (function() {
				return T
			})), i.d(t, "d", (function() {
				return O
			})), i.d(t, "e", (function() {
				return I
			})), i.d(t, "f", (function() {
				return R
			}));
			var n = i("./node_modules/polished/dist/polished.es.js"),
				r = i("./src/reddit/models/Image/index.tsx");
			const s = "reddit-user_id",
				o = {
					primaryColor: "#0079D3",
					highlightColor: "#0079D3",
					postTitleColor: "#222222",
					backgroundColor: "#DAE0E6",
					postBackgroundColor: "#FFFFFF",
					postDownvoteCountColor: "#7193FF",
					postUpvoteCountColor: "#FF4500"
				},
				d = {
					bannerBackgroundColor: void 0,
					bannerOverlayColor: void 0,
					menuBackgroundColor: void 0,
					menuLinkColorActive: void 0,
					menuLinkColorInactive: void 0,
					menuLinkColorHover: void 0,
					mobileKeyColor: void 0,
					sidebarWidgetBackgroundColor: void 0,
					sidebarWidgetHeaderColor: void 0,
					submenuBackgroundColor: void 0
				};
			var a;
			! function(e) {
				e.ButtonWidgetButtonColor = "buttonWidgetButtonColor", e.ButtonWidgetTextColor = "buttonWidgetTextColor", e.ButtonWidgetFillColor = "buttonWidgetFillColor", e.ButtonWidgetHoverColor = "buttonWidgetHoverButtonColor", e.ButtonWidgetHoverTextColor = "buttonWidgetHoverTextColor", e.ButtonWidgetHoverFillColor = "buttonWidgetHoverFillColor"
			}(a || (a = {}));
			const l = {
				backgroundImage: void 0,
				bannerBackgroundImage: void 0,
				bannerPositionedImage: void 0,
				communityIcon: void 0,
				menuBackgroundImage: void 0,
				mobileBannerImage: void 0,
				postBackgroundImage: void 0,
				postDownvoteIconActive: void 0,
				postDownvoteIconInactive: void 0,
				postPlaceholderImage: void 0,
				postUpvoteIconActive: void 0,
				postUpvoteIconInactive: void 0,
				secondaryBannerPositionedImage: void 0
			};

			function u(e) {
				return e in l
			}
			const c = {
				menuBackgroundOpacity: 70
			};
			const _ = {
				backgroundImagePosition: "cover",
				bannerBackgroundImagePosition: "cover",
				bannerPositionedImagePosition: "left",
				postBackgroundImagePosition: "cover",
				postPlaceholderImagePosition: "cover"
			};
			const m = {
				postVoteIcons: "default",
				submenuBackgroundStyle: "default"
			};
			const p = {
				bannerHeight: "small"
			};
			const h = {
				bannerShowCommunityIcon: "show"
			};
			const f = {
				bannerCommunityNameFormat: "slashtag"
			};
			const b = {
				menuPosition: "default"
			};
			const g = e => {
					const t = {
						...E
					};
					for (const i in t) t[i] = i in e ? e[i] : null;
					return t
				},
				w = e => e.primaryColor || o.primaryColor,
				v = {
					highlightColor: e => e.highlightColor ? e.highlightColor : o.highlightColor,
					primaryColor: w,
					sidebarWidgetHeaderColor: e => e.sidebarWidgetHeaderColor || e.primaryColor || o.primaryColor,
					sidebarWidgetBackgroundColor: e => e.sidebarWidgetBackgroundColor || o.postBackgroundColor
				},
				y = (e, t) => {
					const i = {};
					for (const n in E) {
						if (t && n in t) {
							if (null != t[n]) {
								i[n] = t[n];
								continue
							}
						} else if (n in v) {
							const t = v[n](e);
							if (null != t) {
								i[n] = t;
								continue
							}
						}
						n in e && null != e[n] && e[n] !== r.c ? i[n] = e[n] : i[n] = E[n]
					}
					return i
				},
				E = {
					...d,
					...o,
					...l,
					...c,
					..._,
					...m,
					...p,
					...h,
					...f,
					...b
				},
				S = e => ({
					...e,
					bannerBackgroundColor: e.bannerBackgroundColor || Object(n.g)(.6, e.primaryColor),
					menuLinkColorActive: e.menuLinkColorActive || e.highlightColor,
					menuLinkColorInactive: e.menuLinkColorInactive || e.primaryColor,
					menuLinkColorHover: e.menuLinkColorHover || e.highlightColor,
					menuBackgroundColor: e.menuBackgroundColor || Object(n.g)(.93, e.primaryColor),
					submenuBackgroundColor: e.submenuBackgroundColor || Object(n.g)(.93, e.primaryColor),
					bannerOverlayColor: e.bannerOverlayColor || e.primaryColor
				}),
				T = ["#EA0027", "#FF4500", "#FFB000", "#FFD635", "#94E044", "#46D160", "#0DD3BB", "#00A6A5", "#B8001F", "#CC3600", "#CC8B00", "#CCAC2B", "#73AD34", "#349E48", "#0AA18F", "#007373", "#0079D3", "#014980", "#7193FF", "#FF66AC", "#9E8D49", "#DDBD37", "#EDEFF1", "#373C3F", "#005BA1", "#0266B3", "#5A74CC", "#CC5289", "#6B6031", "#AB912B", "#BBBDBF", "#646D73"],
				O = "#EDEFF1",
				I = "postBackgroundImage",
				R = "postPlaceholderImage"
		},
		"./src/reddit/models/Subreddit/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return n
			})), i.d(t, "f", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			})), i.d(t, "j", (function() {
				return d
			})), i.d(t, "k", (function() {
				return a
			})), i.d(t, "h", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "i", (function() {
				return m
			})), i.d(t, "g", (function() {
				return p
			})), i.d(t, "b", (function() {
				return _
			}));
			var n, r, s, o = i("./src/reddit/models/GqlTopLevelField.ts");
			! function(e) {
				e.BannedSubreddit = "BANNED", e.GoldSubreddit = "GOLD", e.PrivateSubreddit = "PRIVATE", e.QuarantinedSubreddit = "QUARANTINED", e.NotFoundSubreddit = "NOT_FOUND", e.ForbiddenSubreddit = "FORBIDDEN", e.GatedSubreddit = "GATED"
			}(n || (n = {})),
			function(e) {
				e.Archived = "archived", e.EmployeesOnly = "employees_only", e.GoldOnly = "gold_only", e.GoldRestricted = "gold_restricted", e.Private = "private", e.Public = "public", e.Restricted = "restricted", e.User = "user"
			}(r || (r = {})),
			function(e) {
				e.Unknown = "UNKNOWN", e.Private = "PRIVATE", e.GoldOnly = "GOLD_ONLY", e.Banned = "BANNED", e.Quarantined = "QUARANTINED", e.Gated = "GATED"
			}(s || (s = {}));
			const d = e => "__typename" in e && e.__typename === o.a.UnavailableSubreddit,
				a = e => "__typename" in e && e.__typename === o.a.UnavailableSubreddit,
				l = e => e.type === r.User;
			var u, c, _;

			function m(e) {
				var t;
				return !!(null === (t = null == e ? void 0 : e.allowedPostTypes) || void 0 === t ? void 0 : t.spoilers)
			}

			function p(e) {
				return !!e && (e.originalContentTagEnabled || !!e.contentCategory)
			}! function(e) {
				e.Multi = "MULTI_SELECT", e.SingleNoSubmit = "SINGLE_SELECT_NO_SUBMIT_BUTTON", e.SingleWithSubmit = "SINGLE_SELECT_WITH_SUBMIT_BUTTON"
			}(u || (u = {})),
			function(e) {
				e.Image = "IMAGE", e.Link = "LINK", e.Spoiler = "SPOILER", e.Text = "TEXT", e.Video = "VIDEO", e.Poll = "POLL", e.Gallery = "GALLERY", e.Talk = "TALK"
			}(c || (c = {})),
			function(e) {
				e.FREQUENT = "FREQUENT", e.LOW = "LOW", e.OFF = "OFF"
			}(_ || (_ = {}))
		},
		"./src/reddit/models/Subreddit/mock.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			}));
			var n = i("./src/config.ts"),
				r = i("./src/reddit/models/Subreddit/index.ts"),
				s = i("./src/reddit/models/WhitelistStatus/index.ts");

			function o(e) {
				return {
					id: "t5_1",
					displayText: "r/cfb",
					name: "cfb",
					title: "CFB Title",
					type: r.f.Public,
					url: "/r/cfb",
					icon: {
						url: `${n.a.assetPath}/img/placeholder_gradient_light-280.png`,
						width: 120,
						height: 120
					},
					subscribers: 14343103,
					wls: s.b.ALL_ADS,
					isNSFW: !1,
					...e
				}
			}
			const d = {
				t5_1: o({
					id: "t5_1",
					displayText: "r/cfb",
					name: "cfb",
					title: "CFB Title",
					type: r.f.Public,
					url: "/r/cfb",
					subscribers: 14343103,
					wls: s.b.ALL_ADS
				}),
				t5_2: o({
					id: "t5_2",
					displayText: "r/test",
					name: "test",
					title: "Test Title",
					type: r.f.Private,
					url: "/r/test",
					subscribers: 1,
					wls: void 0
				}),
				t5_3: o({
					id: "t5_3",
					displayText: "r/test",
					name: "test",
					title: "Gold Title",
					type: r.f.GoldOnly,
					url: "/r/test",
					subscribers: 1,
					wls: void 0
				})
			}
		},
		"./src/reddit/models/SubredditAutocomplete/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "c", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			}));
			var n, r = i("./src/reddit/helpers/getSubredditOrProfileIconData/index.tsx"),
				s = i("./src/reddit/models/User/index.ts");
			! function(e) {
				e[e.OWN_PROFILE = 0] = "OWN_PROFILE", e[e.SUBSCRIBED_TO_SUBREDDIT = 1] = "SUBSCRIBED_TO_SUBREDDIT", e[e.OTHER_SUBREDDIT = 2] = "OTHER_SUBREDDIT", e[e.MODERATED_SUBREDDIT = 3] = "MODERATED_SUBREDDIT"
			}(n || (n = {}));
			const o = (e, t) => d(e, n.SUBSCRIBED_TO_SUBREDDIT, t),
				d = (e, t, i) => {
					const {
						color: n,
						url: s
					} = Object(r.a)({
						shouldHideNsfwIcon: i,
						subredditOrProfile: e
					});
					return {
						iconUrl: s,
						id: e.id,
						isNsfw: e.isNSFW,
						name: e.name,
						primaryColor: n,
						subscribers: e.subscribers,
						type: t
					}
				},
				a = e => ({
					iconUrl: e.accountIcon,
					id: e.id,
					name: Object(s.e)(e),
					type: n.OWN_PROFILE
				})
		},
		"./src/reddit/models/SubredditModeration/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			}));
			const n = 999;
			var r;
			! function(e) {
				e.Editable = "editable", e.Invited = "invited"
			}(r || (r = {}));
			const s = {
					searchTerm: null,
					userId: null,
					username: null
				},
				o = (e, t) => t || e || "1",
				d = (e, t, i) => `${e}-${o(i,t)}`,
				a = (e, t, i, n) => `${e}-${t}-${i}-${o(n,void 0)}`
		},
		"./src/reddit/models/SubredditRestrictions/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "e", (function() {
				return s
			})), i.d(t, "f", (function() {
				return o
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			}));
			var n, r, s, o, d = i("./node_modules/fbt/lib/FbtPublic.js");
			! function(e) {
				e.Create = "create", e.Draft = "draft"
			}(n || (n = {})),
			function(e) {
				e.Comment = "comment_composer", e.IdCard = "id_card", e.PostSubmission = "post_submission", e.ContentGate = "content_gate"
			}(r || (r = {})),
			function(e) {
				e.PostAndComment = "post and comment", e.Post = "post", e.Comment = "comment", e.View = "view"
			}(s || (s = {})),
			function(e) {
				e.Post = "restrictPosting", e.Comment = "restrictCommenting"
			}(o || (o = {}));
			const a = {
					[s.Post]: () => d.fbt._("post", null, {
						hk: "3jbs05"
					}),
					[s.Comment]: () => d.fbt._("comment", null, {
						hk: "1b6xGG"
					}),
					[s.PostAndComment]: () => d.fbt._("post and comment", null, {
						hk: "2Wxjcu"
					})
				},
				l = {
					[n.Create]: () => d.fbt._("create", null, {
						hk: "2nFG0L"
					}),
					[n.Draft]: () => d.fbt._("draft", null, {
						hk: "1LrMyG"
					})
				},
				u = e => d.fbt._("Anyone can view this community, but only approved users can {restrictionType}", [d.fbt._param("restrictionType", e && a[e] && a[e]() || a[s.Post]())], {
					hk: "43LL8D"
				})
		},
		"./src/reddit/models/Survey/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})),
				function(e) {
					e.CES = "CES", e.CSAT = "CSAT", e.NPS = "NPS", e.MULTI_CHOICE = "multi_choice"
				}(n || (n = {}))
		},
		"./src/reddit/models/Theme/NewColorSystem/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			}));
			var n = i("./node_modules/polished/dist/polished.es.js"),
				r = i("./src/reddit/models/NewStructuredStyles/index.ts");
			const s = {
				borderRadius: "32",
				customSize: "52",
				padding: "10",
				size: "36"
			};

			function o(e) {
				return Object(n.k)(.93, e)
			}

			function d(e, t, i) {
				return Object(r.c)(e, t, i)
			}

			function a(e) {
				return e.redditStyle || e["data-redditstyle"] ? e.theme.newRedditTheme : e.theme.newCommunityTheme
			}
		},
		"./src/reddit/models/Theme/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "e", (function() {
				return u
			})), i.d(t, "g", (function() {
				return p
			})), i.d(t, "f", (function() {
				return S
			})), i.d(t, "c", (function() {
				return R
			})), i.d(t, "i", (function() {
				return N
			})), i.d(t, "h", (function() {
				return C
			})), i.d(t, "b", (function() {
				return j
			})), i.d(t, "d", (function() {
				return A
			}));
			var n = i("./node_modules/polished/dist/polished.es.js"),
				r = i("./src/reddit/constants/theme.ts"),
				s = i("./src/reddit/models/NewStructuredStyles/index.ts"),
				o = i("./src/reddit/models/StructuredStyles/index.ts");
			var d = i("./src/reddit/models/Theme/NewColorSystem/index.ts");
			const a = {
					small: 64,
					medium: 128,
					large: 192
				},
				l = {
					show: !0,
					hide: !1
				};

			function u(e, t, i) {
				if ("pretty" === i) return [e];
				if ("slashtag" === i) {
					if (t) {
						const e = t.indexOf("/");
						return [t.slice(0, e + 1), t.slice(e + 1)]
					}
					return ["r/", e]
				}
				return null
			}
			const c = e => {
					switch (e) {
						case "cover":
							return "no-repeat center / cover";
						case "tiled":
							return "repeat center top";
						case "centered":
							return "no-repeat center top";
						default:
							return ""
					}
				},
				_ = (e, t) => {
					const i = t / 100,
						r = Object(n.d)(e);
					return r.alpha = i, Object(n.j)(r)
				},
				m = (e, t) => Object(n.g)(e, t),
				p = (e, t, i) => t ? [e, `url(${t})`, c(i)].filter(Boolean).join(" ") : e,
				h = (o.c, {}),
				f = {
					borderRadius: "24",
					customSize: "32",
					padding: "6",
					size: "24"
				},
				b = e => "overlay" === e.menuPosition ? e.bannerOverlayColor ? _(e.bannerOverlayColor, e.menuBackgroundOpacity) : _(e.primaryColor, e.menuBackgroundOpacity) : "default" === e.menuPosition ? e.menuBackgroundColor || m(.93, e.primaryColor) : void 0,
				g = e => "custom" === e.submenuBackgroundStyle ? e.submenuBackgroundColor || m(.93, e.primaryColor) : e.menuBackgroundColor || m(.93, e.primaryColor),
				w = e => {
					let t = a[e.bannerHeight];
					return "overlay" === e.menuPosition && (t += 36), t
				},
				v = e => parseInt(a[e]) - 16,
				y = {
					shouldShowNSFWContent: !1,
					emojiWidth: void 0,
					emojiHeight: void 0
				},
				E = (e, t) => Object(n.h)(e, t),
				S = e => e && Object(n.b)(e) < .5 ? s.a.body : s.a.bodyText,
				T = (e, t) => Object(n.i)(e, t),
				O = (e, t) => Object(n.k)(e, t),
				I = e => {
					return Object(n.b)(e) > .9 ? Object(n.a)(.1, e) : e
				},
				R = N(o.c, y);

			function F(e) {
				return e.bannerBackgroundColor || m(.6, e.primaryColor) || s.a.banner.backgroundColor
			}

			function N(e, t) {
				const i = e.highlightColor ? I(e.highlightColor) : s.a.linkText,
					r = S(e.sidebarWidgetBackgroundColor || s.a.widgetColors.sidebarWidgetBackgroundColor),
					o = e.sidebarWidgetBackgroundColor || s.a.widgetColors.sidebarWidgetBackgroundColor,
					a = i,
					u = {
						...s.a.voteText
					};
				if (e.postUpvoteCountColor) {
					const t = e.postUpvoteCountColor;
					u.upvote = t, u.upvoteShaded80 = Object(n.h)(.8, t), u.upvoteTinted80 = Object(n.i)(.8, t)
				}
				if (e.postDownvoteCountColor) {
					const t = e.postDownvoteCountColor;
					u.downvote = t, u.downvoteShaded80 = Object(n.h)(.8, t), u.downvoteTinted80 = Object(n.i)(.8, t)
				}
				return {
					subredditContext: t,
					communityTheme: {},
					newCommunityTheme: Object(d.c)({
						active: e.primaryColor,
						activeShaded80: E(.8, e.primaryColor),
						activeShaded90: E(.9, e.primaryColor),
						banner: {
							backgroundColor: F(e),
							backgroundImage: e.bannerBackgroundImage,
							backgroundImagePosition: e.bannerBackgroundImagePosition,
							communityNameFormat: e.bannerCommunityNameFormat,
							iconColor: e.primaryColor,
							iconImage: e.communityIcon,
							iconDimensions: "small" === e.bannerHeight ? f : d.d,
							lineHeight: "small" === e.bannerHeight ? "38" : "60",
							height: w(e),
							positionedImage: e.bannerPositionedImage,
							positionedImageHeight: v(e.bannerHeight),
							positionedImageAlignment: e.bannerPositionedImagePosition,
							secondaryBannerPositionedImage: e.secondaryBannerPositionedImage,
							showCommunityIcon: l[e.bannerShowCommunityIcon]
						},
						button: i,
						buttonShaded80: E(.8, i),
						canvas: e.backgroundColor || s.a.canvas,
						canvasImgUrl: e.backgroundImage,
						canvasImgPosition: e.backgroundImagePosition,
						lineShadedNinety: E(.9, s.a.line),
						linkText: a,
						linkTextAlpha80: Object(n.f)(a, .5),
						linkTextShaded80: E(.8, a),
						linkTextTinted80: T(.8, a),
						menu: e.menuBackgroundColor || s.a.menu,
						menuActiveText: e.menuLinkColorActive || s.a.menuActiveText,
						menuInactiveText: e.menuLinkColorInactive || s.a.menuInactiveText,
						navBar: {
							activeLink: e.menuLinkColorActive || e.highlightColor,
							activeSubmenuCaret: e.primaryColor,
							activeSubmenuLink: e.primaryColor,
							backgroundColor: b(e) || "",
							backgroundImage: "overlay" !== e.menuPosition ? e.menuBackgroundImage : void 0,
							hoverLink: e.menuLinkColorHover || e.highlightColor,
							inactiveLink: e.menuLinkColorInactive || e.primaryColor,
							inactiveSubmenuCaret: m(.6, e.primaryColor),
							inactiveSubmenuLink: m(.6, e.primaryColor),
							submenuBackgroundColor: g(e),
							useOverlay: "overlay" === e.menuPosition
						},
						post: !e.postBackgroundColor || t.isOverlay || t.isCommentsPage ? s.a.post : e.postBackgroundColor,
						primaryButtonShadedEighty: E(.8, e.primaryColor || s.a.button),
						primaryButtonTintedEighty: T(.8, e.primaryColor || s.a.button),
						primaryButtonTintedSixty: T(.6, e.primaryColor || s.a.button),
						primaryButtonTintedFifty: T(.5, e.primaryColor || s.a.button),
						titleText: e.postTitleColor && !t.isOverlay ? e.postTitleColor : s.a.titleText,
						textTransparentizedEighty: O(.8, s.a.bodyText),
						voteText: u,
						voteIcons: {
							upvoteActive: "custom" === e.postVoteIcons ? e.postUpvoteIconActive : void 0,
							upvoteInactive: "custom" === e.postVoteIcons ? e.postUpvoteIconInactive : void 0,
							downvoteActive: "custom" === e.postVoteIcons ? e.postDownvoteIconActive : void 0,
							downvoteInactive: "custom" === e.postVoteIcons ? e.postDownvoteIconInactive : void 0
						},
						widgetColors: {
							sidebarWidgetBackgroundColor: o,
							sidebarWidgetBorderColor: Object(s.d)(o, !1),
							sidebarWidgetHeaderColor: e.sidebarWidgetHeaderColor || s.a.widgetColors.sidebarWidgetHeaderColor,
							sidebarWidgetHeaderColorAlpha60: e.sidebarWidgetHeaderColor && Object(n.f)(e.sidebarWidgetHeaderColor, .6) || Object(n.f)(s.a.widgetColors.sidebarWidgetHeaderColor, .6),
							sidebarWidgetTextColor: r,
							sidebarWidgetTextColorShaded80: Object(n.h)(.8, r),
							sidebarWidgetTitleColor: S(e.sidebarWidgetHeaderColor || s.a.widgetColors.sidebarWidgetHeaderColor),
							lineColor: Object(d.b)(S(o))
						}
					}, {
						backgroundImage: t.isOverlay ? void 0 : e.postBackgroundImage,
						backgroundImagePosition: e.postBackgroundImagePosition,
						placeholderImage: e.postPlaceholderImage,
						placeholderImagePosition: e.postPlaceholderImagePosition
					}, !1),
					redditTheme: h,
					newRedditTheme: Object(d.c)(s.a, {}, !1)
				}
			}

			function C(e, t) {
				return {
					subredditContext: t,
					communityTheme: {},
					newCommunityTheme: Object(d.c)({
						banner: {
							backgroundColor: Object(n.h)(.9, e.bannerBackgroundColor || m(.6, e.primaryColor) || s.b.banner.backgroundColor),
							backgroundImage: e.bannerBackgroundImage,
							backgroundImagePosition: e.bannerBackgroundImagePosition,
							communityNameFormat: e.bannerCommunityNameFormat,
							iconColor: e.primaryColor,
							iconImage: e.communityIcon,
							iconDimensions: "small" === e.bannerHeight ? f : d.d,
							lineHeight: "small" === e.bannerHeight ? "38" : "60",
							height: w(e),
							positionedImage: e.bannerPositionedImage,
							positionedImageHeight: v(e.bannerHeight),
							positionedImageAlignment: e.bannerPositionedImagePosition,
							secondaryBannerPositionedImage: e.secondaryBannerPositionedImage,
							showCommunityIcon: l[e.bannerShowCommunityIcon]
						},
						voteIcons: {
							upvoteActive: "custom" === e.postVoteIcons ? e.postUpvoteIconActive : void 0,
							upvoteInactive: "custom" === e.postVoteIcons ? e.postUpvoteIconInactive : void 0,
							downvoteActive: "custom" === e.postVoteIcons ? e.postDownvoteIconActive : void 0,
							downvoteInactive: "custom" === e.postVoteIcons ? e.postDownvoteIconInactive : void 0
						},
						widgetColors: s.b.widgetColors
					}, {
						backgroundImage: void 0,
						backgroundImagePosition: void 0,
						placeholderImage: e.postPlaceholderImage,
						placeholderImagePosition: e.postPlaceholderImagePosition
					}, !0),
					redditTheme: h,
					newRedditTheme: Object(d.c)(s.b, {}, !0)
				}
			}
			const j = C(o.c, y),
				A = {
					[r.b.REDDIT]: R,
					[r.b.NIGHT]: j
				}
		},
		"./src/reddit/models/Toast/index.ts": function(e, t, i) {
			"use strict";
			var n, r, s;
			i.d(t, "b", (function() {
					return r
				})), i.d(t, "a", (function() {
					return s
				})),
				function(e) {
					e.AuthError = "auth-error"
				}(n || (n = {})),
				function(e) {
					e[e.SuccessAward = 0] = "SuccessAward", e[e.SuccessCommunity = 1] = "SuccessCommunity", e[e.SuccessCommunityGreen = 2] = "SuccessCommunityGreen", e[e.SuccessMod = 3] = "SuccessMod", e[e.Error = 4] = "Error", e[e.Undo = 5] = "Undo", e[e.EuCookiePolicy = 6] = "EuCookiePolicy", e[e.UappBanner = 7] = "UappBanner", e[e.AuthError = 8] = "AuthError", e[e.Custom = 9] = "Custom", e[e.Modal = 10] = "Modal", e[e.SuccessLockComment = 11] = "SuccessLockComment", e[e.SuccessUnlockComment = 12] = "SuccessUnlockComment", e[e.SuccessEndBroadcast = 13] = "SuccessEndBroadcast"
				}(r || (r = {})),
				function(e) {
					e[e.subscribeMilestone = 0] = "subscribeMilestone", e[e.subscribeCap = 1] = "subscribeCap", e[e.voteMilestone = 2] = "voteMilestone"
				}(s || (s = {}))
		},
		"./src/reddit/models/Upload/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			}));
			var n = i("./src/reddit/helpers/getS3KeyFromUrl/index.ts");
			const r = (e, t = "") => `${e}/${t}`,
				s = e => Object(n.a)(e).split("/").slice(-1)[0],
				o = {
					PENDING: "PENDING",
					UPLOADING: "UPLOADING",
					SUCCESS: "SUCCESS",
					FAILED: "FAILED",
					CANCELED: "CANCELED"
				},
				d = ({
					status: e
				}) => e === o.PENDING || e === o.UPLOADING
		},
		"./src/reddit/models/User/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return r
				})), i.d(t, "e", (function() {
					return s
				})), i.d(t, "d", (function() {
					return o
				})), i.d(t, "c", (function() {
					return d
				})), i.d(t, "b", (function() {
					return a
				})),
				function(e) {
					e.Favorites = "favorites", e.Multis = "multis", e.Moderating = "moderating", e.Subscriptions = "subscriptions", e.Profiles = "profiles"
				}(n || (n = {}));
			const r = {
					favorites: !1,
					multis: !1,
					moderating: !1,
					subscriptions: !1,
					profiles: !1
				},
				s = e => {
					const t = e.username || e.displayText;
					if (!t) throw new Error("Invalid username!");
					return t
				},
				o = e => {
					const t = 1e3 * e.created;
					if (t) return new Date(t).getTime()
				};
			var d, a;
			! function(e) {
				e.AvailableRedditor = "Redditor", e.DeletedRedditor = "DeletedRedditor", e.UnavailableRedditor = "UnavailableRedditor"
			}(d || (d = {})),
			function(e) {
				e.BLANK = "BLANK", e.CONFIDENCE = "CONFIDENCE", e.CONTROVERSIAL = "CONTROVERSIAL", e.LIVE = "LIVE", e.NEW = "NEW", e.OLD = "OLD", e.QA = "QA", e.RANDOM = "RANDOM", e.TOP = "TOP"
			}(a || (a = {}))
		},
		"./src/reddit/models/Vote/index.ts": function(e, t, i) {
			"use strict";
			var n;
			i.d(t, "a", (function() {
					return n
				})), i.d(t, "b", (function() {
					return r
				})), i.d(t, "d", (function() {
					return s
				})), i.d(t, "c", (function() {
					return o
				})), i.d(t, "e", (function() {
					return d
				})),
				function(e) {
					e[e.downvoted = -1] = "downvoted", e[e.notVoted = 0] = "notVoted", e[e.upvoted = 1] = "upvoted"
				}(n || (n = {}));
			const r = (e, t) => e.voteState === t ? n.notVoted : t,
				s = e => {
					switch (e) {
						case !0:
							return n.upvoted;
						case !1:
							return n.downvoted;
						default:
							return n.notVoted
					}
				},
				o = (e, t) => {
					const i = e.voteState === t,
						n = i ? 0 : t,
						r = i ? e.score - t : e.score - e.voteState + t;
					return {
						...e,
						voteState: n,
						score: r
					}
				},
				d = e => "UP" === e ? n.upvoted : "DOWN" === e ? n.downvoted : n.notVoted
		},
		"./src/reddit/models/WhitelistStatus/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return s
			}));
			var n, r;
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			! function(e) {
				e[e.NO_ADS = 0] = "NO_ADS", e[e.HOUSE_ONLY = 1] = "HOUSE_ONLY", e[e.PROMO_ADULT_NSFW = 3] = "PROMO_ADULT_NSFW", e[e.PROMO_ALL = 5] = "PROMO_ALL", e[e.ALL_ADS = 6] = "ALL_ADS", e[e.SOME_ADS = 7] = "SOME_ADS"
			}(n || (n = {})),
			function(e) {
				e.NO_ADS = "NO_ADS", e.HOUSE_ONLY = "HOUSE_ONLY", e.PROMO_SPECIFIED = "PROMO_SPECIFIED", e.PROMO_ADULT_NSFW = "PROMO_ADULT_NSFW", e.PROMO_ADULT = "PROMO_ADULT", e.PROMO_ALL = "PROMO_ALL", e.SOME_ADS = "SOME_ADS", e.ALL_ADS = "ALL_ADS"
			}(r || (r = {}));
			const s = new Set([n.ALL_ADS, n.SOME_ADS])
		},
		"./src/reddit/models/Widgets/index.ts": function(e, t, i) {
			"use strict";
			var n, r;
			i.d(t, "i", (function() {
					return n
				})), i.d(t, "j", (function() {
					return r
				})), i.d(t, "f", (function() {
					return s
				})), i.d(t, "k", (function() {
					return o
				})), i.d(t, "a", (function() {
					return d
				})), i.d(t, "b", (function() {
					return a
				})), i.d(t, "h", (function() {
					return l
				})), i.d(t, "g", (function() {
					return u
				})), i.d(t, "c", (function() {
					return _
				})), i.d(t, "d", (function() {
					return m
				})), i.d(t, "e", (function() {
					return p
				})),
				function(e) {
					e.Textarea = "textarea", e.Button = "button", e.SubredditRules = "subreddit-rules", e.CommunityList = "community-list", e.IdCard = "id-card", e.Image = "image", e.Moderators = "moderators", e.Calendar = "calendar", e.Custom = "custom", e.PostFlair = "post-flair"
				}(n || (n = {})),
				function(e) {
					e.Menu = "menu"
				}(r || (r = {}));
			const s = 1;
			var o;
			! function(e) {
				e.Text = "text", e.Image = "image"
			}(o || (o = {}));
			const d = 32,
				a = 288,
				l = {
					FULL: "full",
					COMPACT: "compact"
				};
			var u, c, _, m, p;
			! function(e) {
				e.Cloud = "cloud", e.List = "list"
			}(u || (u = {})),
			function(e) {
				e[e.Pending = 0] = "Pending", e[e.Complete = 1] = "Complete", e[e.Failed = 2] = "Failed"
			}(c || (c = {})),
			function(e) {
				e.Button = "ButtonWidget", e.Calendar = "CalendarWidget", e.CommunityList = "CommunityListWidget", e.Custom = "CustomWidget", e.IdCard = "IdCardWidget", e.Image = "ImageWidget", e.Moderators = "ModeratorWidget", e.PostFlair = "PostFlairWidget", e.SubredditRules = "SubredditRulesWidget", e.TextArea = "TextAreaWidget"
			}(_ || (_ = {})),
			function(e) {
				e.Menu = "MenuWidget"
			}(m || (m = {})),
			function(e) {
				e.Text = "TEXT", e.Image = "IMAGE"
			}(p || (p = {}))
		},
		"./src/reddit/reducers/features/comments/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/redux/es/redux.js"),
				r = i("./node_modules/lodash/get.js"),
				s = i.n(r),
				o = i("./src/reddit/actions/comment/constants.ts"),
				d = i("./src/reddit/actions/pages/constants.ts");
			const a = {};
			var l = (e = a, t) => {
					switch (t.type) {
						case o.e: {
							const {
								commentsPageKey: i,
								commentId: n,
								isCollapsed: r
							} = t.payload;
							return {
								...e,
								[i]: {
									...e[i],
									[n]: !s()(e, [i, n], r)
								}
							}
						}
						case o.f: {
							const {
								commentsPageKey: i,
								commentId: n
							} = t.payload;
							return {
								...e,
								[i]: {
									...e[i],
									[n]: !1
								}
							}
						}
						case o.w:
						case d.b:
						case d.f: {
							const {
								key: i,
								shouldCollapse: n
							} = t.payload;
							if (!n) return e;
							const r = n.reduce((e, t) => ({
								...e,
								[t]: !0
							}), {});
							return {
								...e,
								[i]: {
									...e[i],
									...r
								}
							}
						}
						default:
							return e
					}
				},
				u = i("./src/lib/makeDraftKey/index.ts"),
				c = i("./src/reddit/actions/dashboard/constants.ts"),
				_ = i("./src/reddit/models/PostCreationForm/index.ts"),
				m = i("./src/reddit/models/PostDraft/index.ts");
			const p = {};
			var h = (e = p, t) => {
				switch (t.type) {
					case o.r: {
						const {
							draftKey: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								autofocusDisabled: !0
							}
						}
					}
					case o.k: {
						const {
							draftKey: i,
							hasFocus: n
						} = t.payload;
						return e[i] ? {
							...e,
							[i]: {
								...e[i],
								hasFocus: n
							}
						} : e
					}
					case c.b: {
						const {
							draftKey: i
						} = t.payload;
						return {
							...e,
							[i]: {
								rteState: null,
								draftType: m.c.replyToPost
							}
						}
					}
					case d.b:
					case d.c:
					case d.h: {
						const {
							postId: i,
							commentMode: n
						} = t.payload, r = Object(u.a)(m.c.replyToPost, i);
						return {
							...e,
							[r]: {
								commentMode: n,
								draftType: m.c.replyToPost,
								hasFocus: !1,
								rteState: null,
								text: ""
							}
						}
					}
					case d.f: {
						const {
							postId: i,
							preferences: n
						} = t.payload;
						if (!n || void 0 === n.useMarkdown) return e;
						const r = Object(u.a)(m.c.replyToPost, i),
							s = n.useMarkdown ? _.i.MARKDOWN : _.i.RICH_TEXT;
						return {
							...e,
							[r]: {
								...e[r],
								commentMode: s
							}
						}
					}
					case o.m:
						const {
							draftKey: i, content: n, editorMode: r
						} = t.payload;
						return e[i] ? {
							...e,
							[i]: {
								...e[i],
								commentMode: r,
								rteState: null,
								text: r === _.i.MARKDOWN ? n : "",
								rtJson: r === _.i.RICH_TEXT ? n : null
							}
						} : e;
					case o.s:
					case o.q: {
						const {
							draftKey: i,
							formData: n
						} = t.payload;
						return {
							...e,
							[i]: {
								...n,
								hasFocus: !0
							}
						}
					}
					case o.l: {
						const {
							draftKey: i,
							formData: n
						} = t.payload;
						return null === e[i] ? e : {
							...e,
							[i]: {
								...e[i],
								...n
							}
						}
					}
					case o.g: {
						const {
							draftKey: i
						} = t.payload, n = e[i];
						return n && n.draftType === m.c.replyToPost ? {
							...e,
							[i]: {
								...n,
								rteState: null,
								text: ""
							}
						} : {
							...e,
							[i]: null
						}
					}
					case o.J: {
						const {
							draftKey: i
						} = t.payload, n = e[i];
						return {
							...e,
							[i]: {
								...n,
								rteState: null,
								text: ""
							}
						}
					}
					case o.I:
					case o.D: {
						const {
							draftKey: i
						} = t.payload;
						return {
							...e,
							[i]: null
						}
					}
					case o.H: {
						const {
							draftKey: i,
							draft: n
						} = t.payload;
						return {
							...e,
							[i]: n
						}
					}
					default:
						return e
				}
			};
			const f = {};
			var b = (e = f, t) => {
				switch (t.type) {
					case o.i: {
						const {
							commentListNodeId: i
						} = t.payload;
						return {
							...e,
							[i]: !0
						}
					}
					case o.j: {
						const {
							commentListNodeId: i
						} = t.payload;
						return {
							...e,
							[i]: !e[i]
						}
					}
					default:
						return e
				}
			};
			const g = {};
			var w = (e = g, t) => {
				switch (t.type) {
					case o.d: {
						const {
							commentListNodeIds: i,
							commentsPageKey: n
						} = t.payload, r = i.reduce((t, i) => (t[i] = !s()(e, [n, i], !1), t), {});
						return {
							...e,
							[n]: {
								...e[n],
								...r
							}
						}
					}
					case o.c: {
						const {
							commentListNodeIds: i,
							commentsPageKey: n
						} = t.payload, r = i.reduce((e, t) => (e[t] = !0, e), {});
						return {
							...e,
							[n]: {
								...e[n],
								...r
							}
						}
					}
					case o.w:
					case d.b:
					case d.f: {
						const {
							key: i,
							shouldHide: n
						} = t.payload;
						if (!n) return e;
						const r = n.reduce((e, t) => (e[t] = !0, e), {});
						return {
							...e,
							[i]: {
								...e[i],
								...r
							}
						}
					}
					default:
						return e
				}
			};
			const v = {};
			var y = (e = v, t) => {
					switch (t.type) {
						case o.s: {
							const {
								commentId: i,
								commentsPageKey: n
							} = t.payload;
							return {
								...e,
								[n]: {
									...e[n],
									[i]: !0
								}
							}
						}
						case o.h:
						case o.B:
						case o.D: {
							const {
								commentId: i,
								commentsPageKey: n
							} = t.payload;
							return {
								...e,
								[n]: {
									...e[n],
									[i]: !1
								}
							}
						}
						default:
							return e
					}
				},
				E = i("./node_modules/lodash/isEqual.js"),
				S = i.n(E),
				T = i("./node_modules/lodash/mapValues.js"),
				O = i.n(T),
				I = i("./node_modules/lodash/mergeWith.js"),
				R = i.n(I),
				F = i("./node_modules/lodash/omit.js"),
				N = i.n(F),
				C = i("./src/reddit/actions/bulkActions/constants.ts"),
				j = i("./src/reddit/actions/comment/websocket/constants.ts"),
				A = i("./src/reddit/actions/constants.ts"),
				x = i("./src/reddit/actions/gold/constants.ts"),
				D = i("./src/reddit/actions/modMode.ts"),
				P = i("./src/reddit/actions/modQueue/constants.ts"),
				L = i("./src/reddit/actions/pages/profileComments/constants.ts"),
				k = i("./src/reddit/actions/pages/profileOverview/constants.ts"),
				B = i("./src/reddit/actions/pages/profilePrivate/constants.ts"),
				M = i("./src/reddit/actions/pages/search/index.ts"),
				U = i("./src/reddit/actions/profileConversations.ts"),
				G = i("./src/reddit/actions/profileOverviewChrono/constants.ts"),
				q = i("./src/reddit/actions/subredditModeration/constants.ts"),
				V = i("./src/reddit/helpers/isComment.ts"),
				H = i("./src/reddit/models/Comment/index.ts"),
				W = i("./src/reddit/models/Gold/Gild/index.tsx"),
				z = i("./src/reddit/models/ModQueue/index.ts"),
				K = i("./src/reddit/models/Vote/index.ts");
			const Y = {},
				$ = e => t => {
					for (let i = 0; i < e.length; i++) t = e[i](t);
					return t
				},
				Q = ["next", "prev", "depth"],
				J = e => N()(e, Q),
				X = e => {
					const {
						allAwardings: t,
						associatedAward: i,
						...n
					} = e, r = {
						...n
					};
					if (t) {
						const e = {};
						for (const i of t) e[i.id] = i.count;
						r.awardCountsById = e
					}
					return i && (r.associatedAwardId = i.id), r
				};
			var Z = (e = Y, t) => {
				switch (t.type) {
					case j.b:
					case j.c:
					case j.d:
					case o.I:
					case o.J: {
						const {
							comment: i
						} = t.payload, n = $([X]);
						return {
							...e,
							[i.id]: n(i)
						}
					}
					case o.w:
					case d.b:
					case d.f:
					case L.b:
					case L.e:
					case k.b:
					case k.e:
					case U.b:
					case U.e:
					case G.b:
					case B.i:
					case B.g:
					case B.c:
					case B.e: {
						const i = {
								...e
							},
							n = $([J, X]);
						for (const r in t.payload.comments) {
							const s = e[r],
								o = t.payload.comments[r];
							s ? S()(s, o) || (o.postAuthor || (o.postAuthor = s.postAuthor), o.postTitle || (o.postTitle = s.postTitle), i[r] = n(o)) : i[r] = n(o)
						}
						return i
					}
					case j.a:
					case o.A: {
						const {
							id: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								isDeleted: !0,
								deletedBy: H.c.User
							}
						}
					}
					case o.o: {
						const i = t.payload;
						return R()({
							...e
						}, i, (e, t) => ({
							...e,
							...t
						}))
					}
					case A.a: {
						const {
							id: i,
							vote: n
						} = t.payload, r = e[i];
						return r ? {
							...e,
							[i]: Object(K.c)(r, n)
						} : e
					}
					case x.s: {
						const {
							awardings: i,
							id: n,
							gilder: r,
							treatmentTags: s
						} = t.payload, o = e[n];
						return o ? {
							...e,
							[n]: {
								...Object(W.a)(o, i, r),
								treatmentTags: s
							}
						} : e
					}
					case x.D: {
						const {
							awardId: i,
							thingId: n
						} = t.payload, r = e[n];
						return r ? {
							...e,
							[n]: Object(W.b)(r, i)
						} : e
					}
					case q.n: {
						const {
							comments: i
						} = t.payload;
						return {
							...e,
							...i
						}
					}
					case P.i:
					case P.f:
					case P.m:
					case P.p:
					case P.v: {
						const {
							response: i
						} = t.payload, {
							comments: n
						} = i, r = $([X]);
						return {
							...e,
							...O()(n, r)
						}
					}
					case C.b:
					case P.s: {
						const {
							operation: i,
							ids: n,
							username: r,
							options: s
						} = t.payload, o = n.filter(e => Object(V.a)(e)), d = Object(z.d)(e, i, o, r, s);
						return R()({
							...e
						}, d, (e, t) => ({
							...e,
							...t
						}))
					}
					case M.c: {
						const {
							comments: i
						} = t.payload;
						return {
							...e,
							...i
						}
					}
					case D.a: {
						const i = {
							...e
						};
						for (const n in e)
							if (e.hasOwnProperty(n)) {
								const r = e[n];
								i[n].computedCollapsed = r.collapsedBecauseCrowdControl ? !t.payload.enabled : r.collapsed
							} return i
					}
					case o.n: {
						const {
							commentId: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								collapsedBecauseCrowdControl: !1
							}
						}
					}
					default:
						return e
				}
			};
			const ee = {};
			var te = (e = ee, t) => {
				switch (t.type) {
					case o.q: {
						const {
							parentCommentId: i,
							commentsPageKey: n
						} = t.payload;
						return {
							...e,
							[n]: {
								...e[n],
								[i]: !0
							}
						}
					}
					case o.p:
					case o.I: {
						const {
							parentCommentId: i,
							commentsPageKey: n
						} = t.payload;
						return {
							...e,
							[n]: {
								...e[n],
								[i]: !1
							}
						}
					}
					default:
						return e
				}
			};
			const ie = {};
			var ne = (e = ie, t) => {
				switch (t.type) {
					case o.p:
					case o.H:
					case o.C:
					case o.J:
					case o.I:
					case o.D: {
						const {
							draftKey: i
						} = t.payload;
						return {
							...e,
							[i]: null
						}
					}
					case o.G:
					case o.B: {
						const {
							draftKey: i,
							error: n
						} = t.payload;
						return {
							...e,
							[i]: n
						}
					}
					case o.y: {
						const {
							id: i,
							error: n
						} = t.payload;
						return {
							...e,
							[i]: n
						}
					}
					case o.z:
					case o.A: {
						const {
							id: i
						} = t.payload;
						return {
							...e,
							[i]: null
						}
					}
					default:
						return e
				}
			};
			const re = {};
			var se = (e = re, t) => {
					switch (t.type) {
						case o.H:
						case o.C: {
							const {
								draftKey: i
							} = t.payload;
							return {
								...e,
								[i]: !0
							}
						}
						case o.I:
						case o.J:
						case o.D:
						case o.G:
						case o.B: {
							const {
								draftKey: i
							} = t.payload;
							return {
								...e,
								[i]: !1
							}
						}
						case o.z: {
							const {
								id: i
							} = t.payload;
							return {
								...e,
								[i]: !0
							}
						}
						case o.A:
						case o.y: {
							const {
								id: i
							} = t.payload;
							return {
								...e,
								[i]: !1
							}
						}
						default:
							return e
					}
				},
				oe = Object(n.c)({
					error: ne,
					pending: se
				}),
				de = i("./src/reddit/reducers/features/comments/visitHighlightingFilter/index.ts");
			t.a = Object(n.c)({
				collapsed: l,
				drafts: h,
				focused: b,
				hidden: w,
				isEditing: y,
				models: Z,
				replyFormOpen: te,
				submit: oe,
				visitHighlightFilter: de.b
			})
		},
		"./src/reddit/reducers/features/comments/visitHighlightingFilter/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			var n, r = i("./src/reddit/actions/comment/constants.ts"),
				s = i("./src/reddit/actions/platform.ts");
			! function(e) {
				e.First = "First", e.Last = "Last", e.None = "None"
			}(n || (n = {}));
			const o = n.Last;
			t.b = (e = o, t) => {
				switch (t.type) {
					case s.b:
						return o;
					case r.a:
						return t.payload.sort;
					default:
						return e
				}
			}
		},
		"./src/reddit/reducers/features/goldPurchase/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/redux/es/redux.js"),
				r = i("./src/reddit/actions/goldPurchaseModals/constants.ts");
			var s = (e = null, t) => {
					switch (t.type) {
						case r.t:
						case r.y: {
							const {
								packageId: e
							} = t.payload;
							return e
						}
						default:
							return e
					}
				},
				o = Object(n.c)({
					packageId: s
				}),
				d = i("./src/lib/constants/index.ts"),
				a = i("./src/reddit/actions/platform.ts");
			var l = (e = "", t) => {
				switch (t.type) {
					case r.b: {
						const {
							cardName: e
						} = t.payload;
						return e
					}
					case r.F:
						return t.payload !== d.Gb ? "" : e;
					case r.c:
					case r.d:
					case r.e:
					case r.f:
					case a.b:
						return "";
					default:
						return e
				}
			};
			var u = Object(n.c)({
				cardCvc: (e = "", t) => {
					switch (t.type) {
						case r.I: {
							const {
								error: e
							} = t.payload;
							return e && e.message || ""
						}
						case r.F:
							return t.payload !== d.Gb ? "" : e;
						case r.c:
						case r.d:
						case r.e:
						case r.f:
						case a.b:
							return "";
						default:
							return e
					}
				},
				cardExpiry: (e = "", t) => {
					switch (t.type) {
						case r.J: {
							const {
								error: e
							} = t.payload;
							return e && e.message || ""
						}
						case r.F:
							return t.payload !== d.Gb ? "" : e;
						case r.c:
						case r.d:
						case r.e:
						case r.f:
						case a.b:
							return "";
						default:
							return e
					}
				},
				cardNumber: (e = "", t) => {
					switch (t.type) {
						case r.K: {
							const {
								error: e
							} = t.payload;
							return e && e.message || ""
						}
						case r.F:
							return t.payload !== d.Gb ? "" : e;
						case r.c:
						case r.d:
						case r.e:
						case r.f:
						case a.b:
							return "";
						default:
							return e
					}
				},
				nameOnCard: (e = "", t) => {
					switch (t.type) {
						case r.a:
							return t.payload.message || e;
						case r.b:
							return "";
						case r.F:
							return t.payload !== d.Gb ? "" : e;
						case r.c:
						case r.d:
						case r.e:
						case r.f:
						case a.b:
							return "";
						default:
							return e
					}
				}
			});
			const c = d.Hb;
			var _ = (e = c, t) => {
					switch (t.type) {
						case r.u:
						case r.v:
						case r.x:
							return c;
						case r.F:
							return t.payload;
						default:
							return e
					}
				},
				m = i("./src/reddit/actions/gold/constants.ts");
			var p = (e = null, t) => {
				switch (t.type) {
					case r.B:
						return t.payload || e;
					case r.F: {
						const {
							method: i
						} = t.payload;
						return i === d.Hb ? null : e
					}
					case r.u:
					case r.v:
					case r.x:
					case m.K:
						return null;
					default:
						return e
				}
			};
			var h = (e = "", t) => {
					switch (t.type) {
						case r.x:
							return "";
						case r.z: {
							const e = t.payload;
							return e.body && e.body.passthrough ? e.body.passthrough : ""
						}
						default:
							return e
					}
				},
				f = Object(n.c)({
					errorMessage: p,
					passthrough: h
				});
			var b = (e = "", t) => {
				switch (t.type) {
					case r.C: {
						const {
							postalCode: e
						} = t.payload;
						return e
					}
					case r.F:
						return t.payload !== d.Gb ? "" : e;
					case r.c:
					case r.d:
					case r.e:
					case r.f:
					case a.b:
						return "";
					default:
						return e
				}
			};
			var g = (e = !0, t) => {
				switch (t.type) {
					case r.N:
						return !e;
					case r.F:
						return t.payload !== d.Gb || e;
					case r.c:
					case r.d:
					case r.e:
					case a.b:
						return !0;
					default:
						return e
				}
			};
			const w = [];
			var v = (e = w, t) => {
				switch (t.type) {
					case r.E:
						return t.payload;
					case r.g: {
						const i = t.payload;
						return e.filter(e => e.cardId !== i)
					}
					default:
						return e
				}
			};
			var y = (e = !1, t) => {
				switch (t.type) {
					case r.D:
						return !0;
					case r.E:
						return !1;
					default:
						return e
				}
			};
			var E = (e = null, t) => {
					switch (t.type) {
						case r.a:
						case r.L:
							return t.payload.message || e;
						case r.H:
							return t.payload;
						case r.K:
						case r.J:
						case r.I:
						case r.b:
						case r.M:
							return null;
						case r.F:
							return t.payload === d.Gb ? null : e;
						default:
							return e
					}
				},
				S = i("./src/reddit/actions/modal.ts");
			var T = (e = !1, t) => {
					switch (t.type) {
						case S.c:
						case r.a:
						case r.H:
						case r.L:
							return !1;
						case r.F:
							return t.payload !== d.Gb && e;
						case r.M:
							return !0;
						default:
							return e
					}
				},
				O = Object(n.c)({
					errorMessage: E,
					pending: T
				});
			var I = (e = null, t) => {
					switch (t.type) {
						case r.G:
							return t.payload;
						case r.g:
							return t.payload === e ? null : e;
						default:
							return e
					}
				},
				R = Object(n.c)({
					cardName: l,
					cardValidation: u,
					paymentMethod: _,
					paypal: f,
					postalCode: b,
					rememberCard: g,
					savedCards: v,
					savedCardsPending: y,
					stripeToken: O,
					useSavedCard: I
				});
			const F = {
				pending: !1,
				successful: !1,
				error: !1
			};
			var N = (e = F, t) => {
				switch (t.type) {
					case m.U:
						return {
							pending: !0, successful: !1, error: !1
						};
					case m.V:
						return {
							pending: !1, successful: !0, error: !1
						};
					case m.T:
						return {
							pending: !1, successful: !1, error: !0
						};
					case S.c:
						return F;
					default:
						return e
				}
			};
			var C = (e = !1, t) => {
				switch (t.type) {
					case m.E:
						return t.payload || !1;
					case S.c:
						return !1;
					default:
						return e
				}
			};
			var j = (e = 1, t) => {
				switch (t.type) {
					case m.R:
						return t.payload || 1;
					case S.c:
						return 1;
					default:
						return e
				}
			};
			var A = (e = !1, t) => {
					switch (t.type) {
						case S.c:
							return !1;
						case m.V:
						case m.S:
							return !0;
						default:
							return e
					}
				},
				x = Object(n.c)({
					freeReallocation: N,
					powerupsCount: j,
					isAnonymous: C,
					purchaseCompleted: A
				});
			var D = (e = "selectPayment", t) => {
				switch (t.type) {
					case r.x:
						return "selectPayment";
					case r.A:
					case m.W:
						return "paymentCompleted";
					default:
						return e
				}
			};
			var P = (e = null, t) => {
				switch (t.type) {
					case r.x: {
						if (!t.payload) return e;
						const {
							packageId: i
						} = t.payload;
						return i
					}
					case r.e:
						return null;
					default:
						return e
				}
			};
			var L = (e = null, t) => {
				switch (t.type) {
					case m.ab: {
						if (!t.payload) return e;
						const {
							renewInterval: i
						} = t.payload;
						return i
					}
					case r.e:
						return null;
					default:
						return e
				}
			};
			var k = (e = !1, t) => {
					switch (t.type) {
						case r.x:
							return !0;
						case a.b:
						case r.e:
							return !1;
						default:
							return e
					}
				},
				B = Object(n.c)({
					activePage: D,
					showModal: k,
					packageId: P,
					renewInterval: L
				}),
				M = i("./src/lib/makeProductOfferKey/index.ts"),
				U = i("./src/reddit/models/Gold/ProductOffer.ts");
			const G = {};
			var q = (e = G, t) => {
					switch (t.type) {
						case m.Y: {
							const {
								productOffers: i
							} = t.payload;
							if (!(null == i ? void 0 : i.length)) return e;
							const n = i.reduce((e, t) => {
								const i = Object(M.a)(t.type);
								return e[i] = e[i] ? [...e[i], t] : [t], e
							}, {});
							return {
								...e,
								...n
							}
						}
						case r.i: {
							const i = t.payload,
								n = {
									id: i.id,
									version: i.version,
									description: i.description,
									type: U.c.Coinpack,
									name: i.name,
									pricePackages: i.pricePackages.map(e => ({
										price: Number(e.price),
										quantity: Number(e.quantity),
										id: e.id,
										currency: e.currency
									}))
								};
							return {
								...e,
								[U.c.Coinpack]: [n]
							}
						}
						default:
							return e
					}
				},
				V = i("./src/reddit/models/Gold/Coins/index.ts");
			const H = e => Math.round(new Date(e).getTime() / 1e3);
			var W = (e = null, t) => {
				switch (t.type) {
					case r.m: {
						const {
							activeSaleConfig: e
						} = t.payload;
						return e
					}
					case r.s: {
						const {
							coinSale: e
						} = t.payload;
						return e ? {
							...e,
							endsAt: e.endsAt ? H(e.endsAt) : void 0
						} : null
					}
					case r.i: {
						const i = t.payload.pricePackages.find(e => e.promos.some(V.d));
						if (!i) return e;
						const n = i.promos.find(V.d);
						return {
							dropdownHeaderBackgroundAsset: n.headerImage.url,
							dropdownHeaderText: n.headerText,
							endsAt: H(n.endsAt),
							heroImageUrl: n.heroImage.url,
							heroText: n.heroText,
							heroSubtext: n.heroSubText,
							ctaText: n.ctaText
						}
					}
					default:
						return e
				}
			};
			var z = (e = null, t) => {
				switch (t.type) {
					case r.r:
					case r.q:
					case r.i:
					case r.o:
					case r.m:
					case r.l:
						return null;
					case r.p:
					case r.n:
					case r.k:
						return t.payload;
					default:
						return e
				}
			};
			var K = (e = !1, t) => {
				switch (t.type) {
					case r.n:
					case r.i:
					case r.p:
					case r.r:
						return !1;
					case r.o:
					case r.q:
						return !0;
					default:
						return e
				}
			};
			var Y = (e = !1, t) => {
					switch (t.type) {
						case r.k:
						case r.m:
						case r.i:
						case r.n:
							return !1;
						case r.l:
						case r.o:
							return !0;
						default:
							return e
					}
				},
				$ = Object(n.c)({
					errorMessage: z,
					recommendedPending: K,
					storefrontPending: Y
				});
			const Q = [];
			var J = (e = Q, t) => {
				switch (t.type) {
					case r.m: {
						const {
							dealCoinPackages: e
						} = t.payload;
						return e.map(e => e.mobileId)
					}
					case r.i:
						return t.payload.pricePackages.filter(e => e.promos.some(V.f)).map(e => e.id);
					default:
						return e
				}
			};
			const X = [{
					prefix: "marketing_",
					key: "marketing"
				}, {
					prefix: "purchase_success_",
					key: "purchaseSuccess"
				}],
				Z = e => {
					const t = {
						marketing: {},
						purchaseSuccess: {}
					};
					return e.forEach(e => {
						const i = X.find(({
							prefix: t
						}) => e.name.includes(t));
						if (!i) return;
						const n = e.name.replace(i.prefix, "");
						t[i.key][n] = {
							url: e.image.url,
							width: e.image.dimensions.width,
							height: e.image.dimensions.height
						}
					}), t
				},
				{
					fbt: ee
				} = i("./node_modules/fbt/lib/FbtPublic.js"),
				te = {};
			var ie = (e = te, t) => {
				switch (t.type) {
					case r.r: {
						const {
							coinPackages: i
						} = t.payload, n = {};
						return i.forEach(e => n[e.mobileId] = e), {
							...e,
							...n
						}
					}
					case r.m: {
						const {
							coinPackages: i,
							dealCoinPackages: n
						} = t.payload, r = [...i, ...n], s = {};
						return r.forEach(e => s[e.mobileId] = e), {
							...e,
							...s
						}
					}
					case r.i: {
						const i = t.payload,
							n = {};
						return i.pricePackages.forEach(e => {
							const t = e.skus.find(V.e);
							if (!t) return;
							const i = e.tags.includes("featured"),
								r = e.promos.find(V.f);
							n[e.id] = {
								pennies: Number(e.price),
								baselinePennies: Number(e.baselinePrice || e.price),
								coins: t.coins,
								baselineCoins: t.baselineCoins || t.coins,
								bonusPct: Number(e.bonusPercent) || 0,
								description: e.description || "",
								featured: i,
								featuredLabel: i ? ee._("Finest option", null, {
									hk: "3trJ1N"
								}) : "",
								images: Z(e.images),
								tags: e.tags,
								mobileId: e.id,
								...r ? {
									dealInfo: {
										type: r.dealType,
										title: r.name,
										subtitle: r.description
									}
								} : {}
							}
						}), {
							...e,
							...n
						}
					}
					default:
						return e
				}
			};
			const ne = [];
			var re = (e = ne, t) => {
				switch (t.type) {
					case r.r: {
						const {
							coinPackages: e
						} = t.payload;
						return e.map(e => e.mobileId)
					}
					case r.i:
						return t.payload.pricePackages.filter(e => e.tags.includes("recommended_candidate") || e.tags.includes("recommended_for_profile")).map(e => e.id);
					case r.q:
					case r.o:
						return ne;
					default:
						return e
				}
			};
			const se = [];
			var oe = (e = se, t) => {
					switch (t.type) {
						case r.m: {
							const {
								coinPackages: e
							} = t.payload;
							return e.map(e => e.mobileId)
						}
						case r.i:
							return t.payload.pricePackages.filter(e => e.tags.includes("regular")).map(e => e.id);
						default:
							return e
					}
				},
				de = Object(n.c)({
					models: ie,
					dealPackageIds: J,
					recommendedPackageIds: re,
					storefrontPackageIds: oe
				});
			const ae = e => e.filter(e => {
				var t;
				return !(e.name.includes("Powerups") || (null === (t = e.tags) || void 0 === t ? void 0 : t.includes("econ:award:powerups:post")))
			}).map(e => e.id);
			var le = (e = null, t) => {
					var i;
					switch (t.type) {
						case m.s: {
							const {
								awardId: i
							} = t.payload;
							return e ? {
								...e,
								awardIds: e.awardIds.filter(e => e !== i)
							} : null
						}
						case r.h:
							const {
								awards: n
							} = t.payload;
							return (null == n ? void 0 : n.length) ? {
								awardIds: ae(n),
								isEnabled: !1
							} : e;
						case r.s:
							const {
								freeAwardEvent: s
							} = t.payload;
							return s ? {
								awardIds: ae((null === (i = s.freeAwards) || void 0 === i ? void 0 : i.awards) || []),
								isEnabled: s.isEnabled
							} : null;
						default:
							return e
					}
				},
				ue = i("./src/reddit/models/Gold/Premium/index.ts");
			const ce = [];
			var _e = (e = ce, t) => {
					switch (t.type) {
						case r.m:
							return t.payload.premiumPackages;
						case r.j: {
							const e = [];
							return t.payload.pricePackages.forEach(t => {
								var i, n;
								e.push({
									frequency: "MONTH" === t.renewInterval ? ue.c.Monthly : ue.c.Yearly,
									mobileId: t.id,
									pennies: Number(t.price),
									periodicalCoins: (null === (i = t.skus.find(ue.f)) || void 0 === i ? void 0 : i.coins) || 0,
									bonusPct: "MONTH" === t.renewInterval ? 0 : 30,
									defaultSignupBonusCoins: 1e3,
									signupBonusCoins: (null === (n = t.skus.find(ue.g)) || void 0 === n ? void 0 : n.coins) || 0
								})
							}), e
						}
						default:
							return e
					}
				},
				me = Object(n.c)({
					activeSaleConfig: W,
					api: $,
					coinPackages: de,
					freeAwardEvent: le,
					premiumPackages: _e
				});
			var pe = (e = "selectPayment", t) => {
				switch (t.type) {
					case r.u:
					case r.v:
						return "selectPayment";
					case r.A:
						return "paymentCompleted";
					default:
						return e
				}
			};
			var he = (e = null, t) => {
				switch (t.type) {
					case r.x:
					case r.y:
					case r.u:
					case r.v: {
						if (!t.payload) return null;
						const {
							correlationId: e
						} = t.payload;
						return e
					}
					case r.e:
					case r.c:
					case r.d:
					case r.A:
						return null;
					default:
						return e
				}
			};
			var fe = (e = null, t) => {
				switch (t.type) {
					case r.c:
					case r.d:
					case m.e:
					case m.s:
						return null;
					case r.u: {
						const {
							thingId: e
						} = t.payload;
						return e || null
					}
					case r.w:
						return t.payload && t.payload.thingId ? t.payload.thingId : e;
					default:
						return e
				}
			};
			var be = (e = null, t) => {
				switch (t.type) {
					case r.u: {
						const {
							packageId: e
						} = t.payload;
						return e
					}
					case r.A:
					case r.c:
						return null;
					default:
						return e
				}
			};
			var ge = (e = !1, t) => {
					switch (t.type) {
						case r.u:
						case r.v:
							return !0;
						case m.K:
						case a.b:
						case r.c:
						case r.d:
							return !1;
						default:
							return e
					}
				},
				we = Object(n.c)({
					activePage: pe,
					correlationId: he,
					gildThingId: fe,
					packageId: be,
					showModal: ge
				});
			t.a = Object(n.c)({
				packageOfferModal: o,
				payment: R,
				powerupsPurchaseModal: x,
				premiumPurchaseModal: B,
				productOffers: q,
				purchaseCatalog: me,
				purchaseModal: we
			})
		},
		"./src/reddit/reducers/features/predictions/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/redux/es/redux.js"),
				r = i("./node_modules/lodash/cloneDeep.js"),
				s = i.n(r),
				o = i("./src/reddit/actions/economics/predictions/constants.ts");
			const d = [];
			var a = (e = d, t) => {
				switch (t.type) {
					case o.s:
						return d;
					case o.a: {
						const {
							prediction: i
						} = t.payload;
						return [...e, s()(i)]
					}
					case o.r:
						return e.slice(0, -1);
					default:
						return e
				}
			};
			const l = {};
			var u = (e = l, t) => {
				switch (t.type) {
					case o.d: {
						const {
							subredditId: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								isFetching: !0,
								error: !1
							}
						}
					}
					case o.c: {
						const {
							subredditId: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								isFetching: !1,
								error: !0
							}
						}
					}
					case o.e: {
						const {
							subredditId: i,
							leaderboard: n
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								isFetching: !1,
								error: !1,
								isFetched: !0,
								data: n
							}
						}
					}
					default:
						return e
				}
			};
			const c = {};
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var _ = i("./node_modules/lodash/mapValues.js"),
				m = i.n(_),
				p = i("./src/reddit/reducers/posts/models/helpers.ts"),
				h = i("./src/reddit/actions/frontpage/constants.ts"),
				f = i("./src/reddit/actions/pages/constants.ts"),
				b = i("./src/reddit/models/Prediction/Tournament/index.ts");
			const g = {};
			var w = (e = g, t) => {
				switch (t.type) {
					case o.m: {
						const {
							tournaments: i
						} = t.payload;
						return {
							...e,
							...i.reduce((t, i) => ({
								...t,
								[i.tournamentId]: {
									...e[i.tournamentId],
									...i
								}
							}), {})
						}
					}
					case h.b:
					case "PAGE__SUBREDDIT_LOADED":
					case "SUBREDDIT__MORE_POSTS_LOADED":
					case h.f:
					case f.b:
					case f.f: {
						const i = m()(t.payload.posts, Object(p.i)([p.p])),
							n = Object.values(i).reduce((t, i) => {
								if (Object(b.c)(i)) {
									const {
										tournamentId: n
									} = i.predictionTournament;
									t[n] = {
										...e[n],
										...i.predictionTournament,
										predictions: void 0
									}
								}
								return t
							}, {});
						return {
							...e,
							...n
						}
					}
					case o.g: {
						const i = t.payload,
							{
								tournamentId: n
							} = i;
						return {
							...e,
							[n]: {
								...e[n],
								...i
							}
						}
					}
					default:
						return e
				}
			};
			const v = {},
				y = {
					isFetching: !1,
					isFetchedFullInfo: !1,
					tournaments: []
				};
			var E = (e = v, t) => {
				var i;
				switch (t.type) {
					case o.k: {
						const {
							subredditId: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...y,
								...e[i],
								isFetching: !0
							}
						}
					}
					case o.l: {
						const {
							subredditId: i
						} = t.payload;
						return {
							...e,
							[i]: {
								...e[i],
								isFetching: !1,
								isFetchedFullInfo: !0
							}
						}
					}
					case o.m: {
						const {
							subredditId: n,
							tournaments: r
						} = t.payload;
						return {
							...e,
							[n]: {
								...y,
								...e[n],
								tournaments: Array.from(new Set([...r.map(e => e.tournamentId), ...(null === (i = e[n]) || void 0 === i ? void 0 : i.tournaments) || []]))
							}
						}
					}
					default:
						return e
				}
			};
			const S = {};
			t.a = Object(n.c)({
				creation: a,
				leaderboards: u,
				tournaments: w,
				tournamentsLeaderboards: (e = S, t) => {
					switch (t.type) {
						case o.f:
						case o.j: {
							const {
								tournamentId: i,
								leaderboard: n
							} = t.payload;
							return i ? {
								...e,
								[i]: n
							} : e
						}
						default:
							return e
					}
				},
				tournamentsBySubreddit: E,
				queriedLeaderboards: (e = c, t) => {
					switch (t.type) {
						case o.i: {
							const {
								tournamentId: i
							} = t.payload;
							return {
								...e,
								[i]: {
									...e[i],
									isFetching: !0,
									error: !1
								}
							}
						}
						case o.h: {
							const {
								tournamentId: i
							} = t.payload;
							return {
								...e,
								[i]: {
									...e[i],
									isFetching: !1,
									error: !0
								}
							}
						}
						case o.j: {
							const {
								tournamentId: i
							} = t.payload;
							return {
								...e,
								[i]: {
									...e[i],
									isFetching: !1,
									isFetched: !0,
									error: !1
								}
							}
						}
						default:
							return e
					}
				}
			})
		},
		"./src/reddit/reducers/posts/models/helpers.ts": function(e, t, i) {
			"use strict";
			i.d(t, "h", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "q", (function() {
				return m
			})), i.d(t, "e", (function() {
				return p
			})), i.d(t, "f", (function() {
				return h
			})), i.d(t, "p", (function() {
				return f
			})), i.d(t, "o", (function() {
				return b
			})), i.d(t, "l", (function() {
				return g
			})), i.d(t, "m", (function() {
				return w
			})), i.d(t, "k", (function() {
				return v
			})), i.d(t, "j", (function() {
				return y
			})), i.d(t, "d", (function() {
				return E
			})), i.d(t, "g", (function() {
				return S
			})), i.d(t, "n", (function() {
				return T
			})), i.d(t, "i", (function() {
				return O
			})), i.d(t, "c", (function() {
				return I
			}));
			var n = i("./node_modules/icepick/icepick.js"),
				r = i("./src/reddit/helpers/path/index.ts"),
				s = i("./src/reddit/components/Econ/Prediction/helpers.ts");

			function o({
				tournamentId: e,
				name: t,
				status: i,
				themeId: n,
				totalParticipants: r,
				predictions: o
			}) {
				return {
					tournamentId: e,
					name: t,
					status: i,
					theme: n,
					totalParticipantsCount: r,
					predictions: o.map(d),
					totalPredictionsCount: o.filter(({
						status: e
					}) => !Object(s.a)(e)).length
				}
			}

			function d({
				id: e,
				title: t,
				status: i,
				resolvedOptionId: n,
				createdAt: r,
				votingEndTimestamp: s,
				userWonAmount: o,
				totalStakeAmount: d,
				totalVoteCount: l,
				userSelection: u,
				isNSFW: c,
				isSpoiler: _,
				options: m
			}) {
				return {
					id: e,
					title: t,
					createdAt: r,
					endsAt: s,
					status: i,
					voteUpdatesRemained: null,
					isNSFW: c,
					isSpoiler: _,
					totalVoteCount: l,
					totalStakeAmount: d,
					wonAmount: o,
					resolvedOptionId: n,
					selectedOptionId: u,
					options: m.map(a)
				}
			}

			function a({
				userAmount: e,
				...t
			}) {
				return {
					...t,
					userStakeAmount: e
				}
			}
			var l = i("./src/reddit/models/Media/index.ts");
			const u = e => {
					const {
						protocol: t,
						domain: i
					} = e;
					return e => {
						const n = Object(r.b)(e.permalink);
						return {
							...e,
							permalink: `${t}://${i}${n}`
						}
					}
				},
				c = e => t => {
					const i = e[t.id];
					return i && i.events && (t.events = i.events, t.source = i.source, t.impressionId = i.impressionId, t.impressionIdStr = i.impressionIdStr), t
				},
				_ = e => t => {
					const i = e[t.id];
					return i && i.isSponsored && (t.isSponsored = i.isSponsored), t
				},
				m = (e, t) => e.pollData ? {
					...e,
					pollData: {
						...e.pollData,
						...t
					}
				} : e,
				p = ({
					post: e,
					selectedOptionId: t
				}) => m(e, {
					userSelection: t
				}),
				h = ({
					post: e,
					selectedOptionId: t,
					predictionId: i
				}) => {
					var n, r;
					if (e.predictionTournament) return {
						...e,
						predictionTournament: {
							...e.predictionTournament,
							predictions: null === (r = null === (n = e.predictionTournament) || void 0 === n ? void 0 : n.predictions) || void 0 === r ? void 0 : r.map(e => e.id === i ? {
								...e,
								selectedOptionId: t
							} : e)
						}
					}
				},
				f = ({
					tournamentData: e,
					...t
				}) => e ? {
					...t,
					predictionTournament: o(e)
				} : t,
				b = e => e.media && Object(l.E)(e.media) ? {
					...Object(n.unsetIn)(e, ["source"])
				} : e,
				g = e => t => {
					const i = e[t.id];
					return (null == i ? void 0 : i.recommendationContext) && !t.recommendationContext && (t.recommendationContext = i.recommendationContext), t
				},
				w = e => t => {
					const i = e[t.id];
					return t && t.media && i && i.media && Object(l.K)(t.media) && t.media.isRichtextPreview && Object(l.K)(i.media) && !i.media.isRichtextPreview && (t.media.richtextContent = i.media.richtextContent, t.media.isRichtextPreview = !1), t
				},
				v = e => t => {
					const i = e[t.id];
					return i && i.numDuplicates && (t.numDuplicates = i.numDuplicates), t
				},
				y = e => t => {
					const i = e[t.id];
					return i && void 0 !== i.isEligibleForLinkedPosts && (t.isEligibleForLinkedPosts = i.isEligibleForLinkedPosts), t
				},
				E = e => {
					let t = e.source;
					return t && t.outboundUrlCreated && (t = {
						...t,
						outboundUrlReceived: Date.now()
					}, e.source = t), e
				},
				S = (e = []) => e.reduce((e, t) => (e[t.id] = t.count, e), {}),
				T = e => {
					const {
						allAwardings: t,
						...i
					} = e;
					return {
						...i,
						awardCountsById: S(t)
					}
				},
				O = e => t => {
					for (let i = 0; i < e.length; i++) t = e[i](t);
					return t
				},
				I = (e, t) => ({
					...e,
					events: t.events,
					source: t.source
				})
		},
		"./src/reddit/reducers/sidebarPromotedPosts/models/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			var n, r = i("./src/reddit/actions/ads/constants.ts");
			! function(e) {
				e[e.FRONTPAGE = 0] = "FRONTPAGE", e[e.COMMENTS_OVERLAY = 1] = "COMMENTS_OVERLAY", e[e.COMMENTS = 2] = "COMMENTS", e[e.SUBREDDIT = 3] = "SUBREDDIT", e[e.MULTIREDDIT = 4] = "MULTIREDDIT", e[e.SEARCH_RESULTS = 5] = "SEARCH_RESULTS"
			}(n || (n = {}));
			const s = {};
			t.b = (e = s, t) => {
				switch (t.type) {
					case r.t:
					case r.q: {
						const i = t.payload;
						return {
							...e,
							...i
						}
					}
					case r.r:
					case r.t:
						return e;
					case r.v:
						return s;
					default:
						return e
				}
			}
		},
		"./src/reddit/routes/modListing/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			})), i.d(t, "b", (function() {
				return _
			})), i.d(t, "d", (function() {
				return h
			}));
			var n = i("./node_modules/core-js/modules/web.dom.iterable.js"),
				r = i.n(n),
				s = i("./node_modules/@loadable/component/dist/loadable.esm.js"),
				o = i("./node_modules/lodash/flatten.js"),
				d = i.n(o),
				a = i("./src/lib/constants/index.ts"),
				l = i("./src/lib/loadableAction/index.ts");
			const u = Object(s.a)({
					resolved: {},
					chunkName: () => "ModListing",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!i.m[t]
					},
					importAsync: () => Promise.all([i.e("vendors~Governance~ModListing~Reddit~Subreddit"), i.e("Governance~ModListing~Reddit~ReportFlow~Subreddit"), i.e("ModListing~PostCreation~Reddit~StandalonePostPage~Subreddit"), i.e("Governance~ModListing~Reddit~Subreddit"), i.e("ModListing")]).then(i.bind(null, "./src/reddit/pages/ModListing/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return i(t)
					},
					resolve() {
						return "./src/reddit/pages/ModListing/index.tsx"
					}
				}),
				c = "/r/mod",
				_ = "/me/f/mod",
				m = [c, _],
				p = d()(m.map(e => Object.keys(a.W).map(t => `${e}/:sort(${a.W[t]})?`))),
				h = e => e.startsWith(_),
				f = {
					action: Object(l.a)(() => Promise.all([i.e("vendors~Governance~ModListing~Reddit~Subreddit"), i.e("Governance~ModListing~Reddit~ReportFlow~Subreddit"), i.e("ModListing~PostCreation~Reddit~StandalonePostPage~Subreddit"), i.e("Governance~ModListing~Reddit~Subreddit"), i.e("ModListing")]).then(i.bind(null, "./src/reddit/actions/pages/modListing/index.ts")).then(e => e.modListingPageRequested)),
					chunk: a.s.MOD_LISTING,
					component: u,
					exact: !0,
					meta: {
						name: a.Nb.MOD_LISTING
					},
					path: p,
					prefetches: [a.s.SUBREDDIT, a.s.COMMENTS_PAGE]
				};
			t.c = f
		},
		"./src/reddit/routes/postCreation/constants.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "c", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}));
			const n = "/submit",
				r = "/r/:subredditName/submit",
				s = "/user/:profileName/submit"
		},
		"./src/reddit/routes/subreddit/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			}));
			var n = i("./node_modules/core-js/modules/web.dom.iterable.js"),
				r = i.n(n),
				s = i("./node_modules/@loadable/component/dist/loadable.esm.js"),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/countrySites/index.ts"),
				a = i("./src/lib/loadableAction/index.ts");
			const l = Object(s.a)({
					resolved: {},
					chunkName: () => "Subreddit",
					isReady(e) {
						const t = this.resolve(e);
						return !1 !== this.resolved[t] && !!i.m[t]
					},
					importAsync: () => Promise.all([i.e("vendors~Governance~ModListing~Reddit~Subreddit"), i.e("vendors~PostCreation~Reddit~Subreddit"), i.e("Governance~Reddit~Subreddit~reddit-components-BlankPost~reddit-components-ClassicPost~reddit-compone~3b56c92e"), i.e("PostCreation~Reddit~StandalonePostPage~Subreddit~reddit-components-ClassicPost~reddit-components-Com~82e48dd3"), i.e("Governance~ModListing~Reddit~ReportFlow~Subreddit"), i.e("ModListing~PostCreation~Reddit~StandalonePostPage~Subreddit"), i.e("CollectionCommentsPage~CommentsPage~Subreddit~SubredditWiki"), i.e("Governance~ModListing~Reddit~Subreddit"), i.e("Reddit~Subreddit"), i.e("Subreddit")]).then(i.bind(null, "./src/reddit/pages/Subreddit/index.tsx")),
					requireAsync(e) {
						const t = this.resolve(e);
						return this.resolved[t] = !1, this.importAsync(e).then(e => (this.resolved[t] = !0, e))
					},
					requireSync(e) {
						const t = this.resolve(e);
						return i(t)
					},
					resolve() {
						return "./src/reddit/pages/Subreddit/index.tsx"
					}
				}),
				u = Object.keys(o.W).map(e => `/r/:subredditName/:sort(${o.W[e]})?`),
				c = "/r/:subredditName/predictions";
			let _ = ["/r/:subredditName", c, ...u];
			_ = Object(d.b)(_);
			const m = _,
				p = {
					action: Object(a.a)(() => Promise.all([i.e("vendors~Governance~ModListing~Reddit~Subreddit"), i.e("vendors~PostCreation~Reddit~Subreddit"), i.e("Governance~Reddit~Subreddit~reddit-components-BlankPost~reddit-components-ClassicPost~reddit-compone~3b56c92e"), i.e("PostCreation~Reddit~StandalonePostPage~Subreddit~reddit-components-ClassicPost~reddit-components-Com~82e48dd3"), i.e("Governance~ModListing~Reddit~ReportFlow~Subreddit"), i.e("ModListing~PostCreation~Reddit~StandalonePostPage~Subreddit"), i.e("CollectionCommentsPage~CommentsPage~Subreddit~SubredditWiki"), i.e("Governance~ModListing~Reddit~Subreddit"), i.e("Reddit~Subreddit"), i.e("Subreddit")]).then(i.bind(null, "./src/reddit/actions/pages/subreddit.ts")).then(e => e.subredditRequested)),
					chunk: o.s.SUBREDDIT,
					component: l,
					exact: !0,
					meta: {
						name: o.Nb.SUBREDDIT
					},
					path: m,
					prefetches: [o.s.COMMENTS_PAGE, o.s.FRONTPAGE]
				};
			t.b = p
		},
		"./src/reddit/selectors/activeModal.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "c", (function() {
				return s
			}));
			const n = e => {
					var t;
					return null === (t = e.activeModal) || void 0 === t ? void 0 : t.id
				},
				r = e => {
					var t;
					return null === (t = e.activeModal) || void 0 === t ? void 0 : t.args
				},
				s = e => t => {
					var i;
					return (null === (i = t.activeModal) || void 0 === i ? void 0 : i.id) === e
				}
		},
		"./src/reddit/selectors/activeModalId.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/selectors/activeModal.ts");
			i.d(t, "a", (function() {
				return n.b
			})), i.d(t, "b", (function() {
				return n.c
			}))
		},
		"./src/reddit/selectors/ads.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			}));
			const n = e => e.ads,
				r = (e, t) => e.ads[t]
		},
		"./src/reddit/selectors/brandSafety.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return u
			})), i.d(t, "a", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "b", (function() {
				return p
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/isFakeSubreddit/index.ts"),
				s = i("./src/reddit/contexts/PageLayer/selectors.ts"),
				o = i("./src/reddit/models/WhitelistStatus/index.ts"),
				d = i("./src/reddit/selectors/posts.ts"),
				a = i("./src/reddit/selectors/subreddit.ts");
			const l = new Set([n.W.NEW, n.W.RISING, n.W.CONTROVERSIAL]),
				u = e => e.brandSafety.hasBrandSafetyBeenAssessed,
				c = (e, {
					postId: t
				}) => {
					const i = Object(d.G)(e, {
							postId: t
						}),
						n = Object(d.U)(e, {
							postId: t
						});
					return !(!i || !n) && (n.wls === o.b.ALL_ADS && !i.isNSFW)
				},
				_ = e => e.brandSafety.isViewSafe,
				m = e => !e.brandSafety.isViewSafe,
				p = (e, t) => {
					const {
						listingName: i,
						pageLayer: n
					} = t, d = Object(a.x)(e, {
						subredditName: i
					}), u = Object(s.c)(e, {
						pageLayer: n
					});
					return (!u || !l.has(u)) && (!(d || !Object(r.a)(i)) || !!d && d.wls === o.b.ALL_ADS)
				}
		},
		"./src/reddit/selectors/category.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return _
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "h", (function() {
				return p
			})), i.d(t, "l", (function() {
				return h
			})), i.d(t, "m", (function() {
				return f
			})), i.d(t, "k", (function() {
				return b
			})), i.d(t, "f", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			})), i.d(t, "b", (function() {
				return y
			})), i.d(t, "a", (function() {
				return S
			})), i.d(t, "n", (function() {
				return T
			})), i.d(t, "c", (function() {
				return I
			})), i.d(t, "d", (function() {
				return R
			})), i.d(t, "j", (function() {
				return F
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/pickBy.js"),
				r = i.n(n),
				s = i("./node_modules/reselect/es/index.js"),
				o = i("./src/lib/objectSelector/index.ts"),
				d = i("./src/reddit/constants/experiments.ts"),
				a = i("./src/reddit/helpers/name/index.ts"),
				l = i("./src/reddit/helpers/widgets/index.tsx"),
				u = i("./src/reddit/selectors/subreddit.ts");
			const c = [],
				_ = e => e.features.categories.models,
				m = e => e.features.categories.api.list.loaded,
				p = e => e.features.categories.api.list.pending,
				h = (e, {
					id: t
				}) => t ? e.features.categories.api.subreddits.loaded[t] : void 0,
				f = (e, {
					id: t
				}) => t ? e.features.categories.api.subreddits.pending[t] : void 0,
				b = (e, {
					id: t
				}) => t ? e.features.categories.models[t] : void 0,
				g = (e, {
					categoryName: t
				}) => e.features.categories.nameToId[Object(a.g)(t)],
				w = (e, t) => {
					const i = g(e, t);
					if (i) return b(e, {
						id: i
					})
				},
				v = new Set(["nba", "nfl"]),
				y = Object(s.a)((e, t) => t.categoriesOrder || d.Ld, (e, t) => t.excludedCategories || v, e => e.features.categories.ids, e => e.features.categories.models, (e, t, i, n) => {
					const r = {};
					let s = 1e3;
					const o = [];
					for (const d of i) {
						const i = n[d];
						t.has(Object(a.g)(i.name)) || (e[i.name] || (r[i.name] = s++), o.push(i))
					}
					return o.sort((t, i) => {
						return (e[t.name] || r[t.name]) - (e[i.name] || r[i.name])
					})
				}),
				E = (e, {
					categoryName: t
				}) => {
					const i = w(e, {
						categoryName: t
					});
					return i && e.subreddits.byCategory[i.id] || c
				},
				S = (Object(s.a)((e, {
					id: t
				}) => {
					if (!t) return c;
					return e.subreddits.byCategory[t] || c
				}, u.Z, e => e.subreddits.about, (e, t, i) => e.map(e => Object(l.c)(t[e], i[e]))), Object(s.a)(E, u.Z, (e, t) => 0 === e.length ? c : e.map(e => t[e])), () => Object(o.a)(Object(s.a)(E, u.Z, (e, t) => 0 === e.length ? c : e.map(e => {
					const i = t[e];
					return i ? i.name : ""
				}).filter(Boolean)))),
				T = (e, t) => {
					const i = t ? e.posts.models[t] : null;
					return i && i.postCategories ? i.postCategories : null
				},
				O = Object(s.a)(e => e.subreddits.byCategory, u.Z, (e, t) => Object.keys(e).reduce((i, n) => {
					const r = e[n];
					if (!r || 0 === r.length) return i;
					for (const e of r) {
						const r = t[e];
						if (r) {
							const e = Object(a.g)(r.name);
							i[e] || (i[e] = []), i[e].push(Object(a.g)(n))
						}
					}
					return i
				}, {})),
				I = Object(s.a)((e, t) => t.subredditName, O, (e, t) => t[Object(a.g)(e)] || c),
				R = e => e.features.categories.ranking,
				F = (e, {
					id: t
				}) => t && e.features.categories.ranking[t] || 0;
			Object(s.a)(y, R, (e, t) => {
				const i = r()(t, e => e >= 3);
				return 0 === Object.keys(i).length ? e : [...e].sort((e, t) => {
					const n = i[e.id] || 0;
					return (i[t.id] || 0) - n
				})
			})
		},
		"./src/reddit/selectors/chatPost.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			}));
			var n = i("./src/reddit/contexts/PageLayer/selectors.ts"),
				r = i("./src/reddit/models/Post/index.ts"),
				s = i("./src/reddit/selectors/isModeratorOfSubreddit.ts"),
				o = i("./src/reddit/selectors/posts.ts");
			const d = (e, t) => {
					const i = t && e.subreddits.models[t];
					return Boolean(i && i.isChatPostFeatureEnabled)
				},
				a = (e, t) => {
					const i = t && e.subreddits.models[t];
					return Boolean(i && i.allowChatPostCreation)
				},
				l = (e, {
					postId: t
				}) => {
					const i = !!t && Object(o.G)(e, {
						postId: t
					});
					return !!i && i.discussionType === r.b.Chat
				},
				u = (e, t) => {
					const i = t.subredditId || Object(n.o)(e, t),
						r = d(e, i),
						o = a(e, i),
						l = !!i && Object(s.c)(e, {
							subredditId: i
						});
					return !!r && (!!l || o)
				}
		},
		"./src/reddit/selectors/commentSelector.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return s
			})), i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			}));
			var n = i("./src/lib/makeCommentPermalink/index.ts"),
				r = i("./src/reddit/selectors/subreddit.ts");
			const s = (e, {
					commentId: t
				}) => t ? e.features.comments.models[t] : void 0,
				o = (e, t) => {
					const i = Object(r.S)(e, {
						subredditId: t.subredditId
					});
					return t.id ? Object(n.a)(i.name, t.postId, t.id) : ""
				},
				d = (e, {
					commentIds: t
				}) => t.map(t => e.features.comments.models[t])
		},
		"./src/reddit/selectors/communityAwards.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return s
			})), i.d(t, "e", (function() {
				return o
			})), i.d(t, "f", (function() {
				return d
			})), i.d(t, "d", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "a", (function() {
				return u
			})), i.d(t, "h", (function() {
				return _
			})), i.d(t, "g", (function() {
				return m
			})), i.d(t, "i", (function() {
				return p
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/objectSelector/index.ts"),
				r = i("./src/reddit/models/Gold/Award.ts");
			const s = e => e.awards.create.api.pending,
				o = Object(n.a)((e, {
					subredditOrProfileId: t
				}) => {
					const i = e.awards.manageable.order[t];
					return i ? i.map(t => e.awards.models[t]).filter(e => e.isEnabled) : []
				}),
				d = Object(n.a)((e, {
					subredditOrProfileId: t
				}) => Object.entries(e.awards.manageable.availability[t] || {}).map(([t, i]) => ({
					...e.awards.models[t],
					isEnabled: i
				})).sort((e, t) => e.name.localeCompare(t.name))),
				a = (e, {
					subredditOrProfileId: t
				}) => e.awards.manageable.api.pending[t],
				l = (e, {
					subredditOrProfileId: t
				}) => !!e.awards.blacklist[t],
				u = (e, t) => e.awards.models[t],
				c = r.l.map(e => ({
					award: e,
					total: 0
				})),
				_ = Object(n.a)((e, {
					subredditId: t,
					thingId: i
				}) => {
					const n = e.awards.sortedUsable.order[t],
						r = null == n ? void 0 : n[i];
					return r ? r.map(({
						award: t,
						total: i
					}) => ({
						total: i,
						award: e.awards.models[t.id]
					})).filter(({
						award: e
					}) => e.isEnabled) : c
				}),
				m = (e, {
					subredditId: t,
					thingId: i
				}) => {
					const n = e.awards.sortedUsable.api.pending[t];
					return !!n && n[i]
				},
				p = Object(n.a)((e, {
					subredditId: t
				}) => e.awards.tags.order[t] || [])
		},
		"./src/reddit/selectors/communityFlairs.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return s
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			}));
			var n = i("./node_modules/reselect/es/index.js");
			const r = (e, t) => {
					const i = e.communityFlairs[t];
					return i && i.sortedKeys
				},
				s = Object(n.a)(r, e => e),
				o = (e, t) => {
					const i = e.communityFlairs[t];
					return i && i.models
				},
				d = Object(n.a)(o, e => e),
				a = (Object(n.a)((e, t) => o(e, t), (e, t) => r(e, t), (e, t) => {
					if (t && e) return t.map(t => e[t])
				}), (e, t) => e.communityFlairs.hasOwnProperty(t))
		},
		"./src/reddit/selectors/contentControls.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			}));
			const n = (e, {
					subredditName: t
				}) => e.contentControls.api.fetch.pending[t.toLowerCase()] || !1,
				r = (e, {
					subredditName: t
				}) => e.contentControls.models[t.toLowerCase()]
		},
		"./src/reddit/selectors/countrySites.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "c", (function() {
				return u
			})), i.d(t, "d", (function() {
				return c
			}));
			var n = i("./node_modules/@reddit/reddit-country-url-redirects/dist/esm/index.js"),
				r = i("./src/lib/env/index.ts"),
				s = i("./src/reddit/constants/countrySites.ts"),
				o = i("./src/reddit/selectors/experiments/countrySites.ts"),
				d = i("./src/reddit/selectors/user.ts");
			const a = e => {
					const t = Object(o.b)(e),
						i = Object(o.a)(e),
						s = !Object(r.b)() || Object(d.L)(e);
					return {
						countrySitesEnabled: i,
						countrySitesAdminOnly: t,
						enabledCountries: s ? n.f : n.b,
						userIsAdmin: s
					}
				},
				l = e => {
					const {
						currentPage: t
					} = e.platform, {
						url: i = ""
					} = t || {}, {
						countryCode: n = "",
						languageCode: r = "",
						subredditName: s = ""
					} = (null == t ? void 0 : t.urlParams) || {};
					return {
						countryCode: n,
						currentUrl: i,
						languageCode: r,
						subredditName: s
					}
				},
				u = e => !!e && s.c.includes(e.toLowerCase()),
				c = e => {
					const t = Object(o.b)(e),
						i = !Object(r.b)() || Object(d.L)(e);
					return t && i
				}
		},
		"./src/reddit/selectors/emailCollection.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/helpers/localStorage/index.ts"),
				s = i("./src/reddit/selectors/user.ts");
			const o = Object(n.a)(s.O, s.n, s.C, (e, t, i) => e && !t && !i),
				d = e => (() => 0 === Object(r.m)())() && o(e)
		},
		"./src/reddit/selectors/experiments/avatarsInComments.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts"),
				o = i("./src/reddit/selectors/user.ts");
			const d = Object(n.a)(o.O, o.N, (e, t) => e || t),
				a = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: d,
					experimentName: r.q
				}), e => e === r.x.Active),
				l = Object(n.a)(o.O, o.N, (e, t) => !e && !t),
				u = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: l,
					experimentName: r.r
				}), e => e === r.x.Active),
				c = Object(n.a)(a, u, (e, t) => e || t)
		},
		"./src/reddit/selectors/experiments/bestSortPopular.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/helpers/chooseVariant/index.ts");
			const s = e => new Set(Object.values(n.C)).has(Object(r.c)(e, {
				experimentEligibilitySelector: r.a,
				experimentName: n.y
			}))
		},
		"./src/reddit/selectors/experiments/countrySites.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "e", (function() {
				return u
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts");
			const o = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.L
				}), e => e === r.bd),
				d = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: o,
					experimentName: r.K
				}), e => e === r.bd),
				a = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.Ne
				}), e => e === r.bd),
				l = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.Qe
				}), e => e === r.bd),
				u = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.Re
				}), e => e === r.bd)
		},
		"./src/reddit/selectors/experiments/d2xGqlDistinguish.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/helpers/chooseVariant/index.ts");

			function s(e) {
				return Object(r.c)(e, {
					experimentEligibilitySelector: r.a,
					experimentName: n.rb
				}) === n.bd
			}
		},
		"./src/reddit/selectors/experiments/econ/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "s", (function() {
				return s
			})), i.d(t, "u", (function() {
				return o
			})), i.d(t, "o", (function() {
				return d
			})), i.d(t, "h", (function() {
				return a
			})), i.d(t, "n", (function() {
				return l
			})), i.d(t, "q", (function() {
				return u
			})), i.d(t, "r", (function() {
				return c
			})), i.d(t, "x", (function() {
				return _
			})), i.d(t, "v", (function() {
				return m
			})), i.d(t, "w", (function() {
				return p
			})), i.d(t, "p", (function() {
				return h
			})), i.d(t, "j", (function() {
				return f
			})), i.d(t, "i", (function() {
				return b
			})), i.d(t, "g", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			})), i.d(t, "a", (function() {
				return v
			})), i.d(t, "c", (function() {
				return y
			})), i.d(t, "d", (function() {
				return E
			})), i.d(t, "f", (function() {
				return S
			})), i.d(t, "b", (function() {
				return T
			})), i.d(t, "k", (function() {
				return O
			})), i.d(t, "l", (function() {
				return I
			})), i.d(t, "m", (function() {
				return R
			})), i.d(t, "t", (function() {
				return F
			})), i.d(t, "y", (function() {
				return N
			})), i.d(t, "z", (function() {
				return C
			}));
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/selectors/experiments/econ/simpleExperiment.ts");
			const s = Object(r.a)(n.Rc),
				o = Object(r.a)(n.Tc),
				d = Object(r.a)(n.Mc),
				a = Object(r.a)(n.Dc),
				l = (Object(r.a)(n.Nc), Object(r.a)(n.Lc)),
				u = Object(r.a)(n.Pc),
				c = Object(r.a)(n.Qc),
				_ = Object(r.a)(n.Wc),
				m = Object(r.a)(n.Uc),
				p = Object(r.a)(n.Vc),
				h = Object(r.a)(n.Oc),
				f = Object(r.a)(n.Hc),
				b = Object(r.a)(n.Fc),
				g = Object(r.a)(n.yc),
				w = Object(r.a)(n.vc),
				v = Object(r.a)(n.rc),
				y = Object(r.a)(n.tc),
				E = Object(r.a)(n.uc),
				S = Object(r.a)(n.xc),
				T = Object(r.a)(n.sc),
				O = Object(r.a)(n.Ic),
				I = Object(r.a)(n.Jc),
				R = Object(r.a)(n.Kc),
				F = Object(r.a)(n.Sc),
				N = Object(r.a)(n.Xc),
				C = Object(r.a)(n.Zc)
		},
		"./src/reddit/selectors/experiments/econ/simpleExperiment.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/helpers/chooseVariant/index.ts");
			const s = e => t => {
				const i = Object(r.c)(t, {
					experimentEligibilitySelector: r.a,
					experimentName: e
				});
				return !(!i || Object(n.vf)(i))
			}
		},
		"./src/reddit/selectors/experiments/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return a
			})), i.d(t, "d", (function() {
				return l
			})), i.d(t, "b", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			})), i.d(t, "g", (function() {
				return p
			})), i.d(t, "a", (function() {
				return h
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/lib/env/index.ts"),
				s = i("./src/lib/objectSelector/index.ts"),
				o = i("./src/reddit/constants/experiments.ts"),
				d = i("./src/reddit/selectors/user.ts");
			const a = Object(s.a)((e, t) => {
					var i, n, r, s;
					const o = null !== (n = null === (i = e.user) || void 0 === i ? void 0 : i.experiments.byName) && void 0 !== n ? n : {},
						d = null !== (s = null === (r = e.page) || void 0 === r ? void 0 : r.experiments.byName) && void 0 !== s ? s : {},
						a = t.experimentName.toLowerCase();
					return o[a] || d[a]
				}),
				l = (e, t) => {
					let i = a(e, t);
					const n = t.experimentName.toLowerCase(),
						r = c(e, t);
					return r && (i ? i.variant = r : i = {
						id: -1,
						name: n,
						variant: r,
						version: "-1"
					}), i
				},
				u = (e, t) => Object(r.a)() || (null == e ? void 0 : e.isEmployee) || o.cd.has(t.toLowerCase()),
				c = (e, {
					experimentName: t
				}) => {
					var i;
					const n = Object(d.k)(e);
					return u(n, t) ? null === (i = e.experimentOverrides) || void 0 === i ? void 0 : i[t.toLowerCase()] : void 0
				},
				_ = Object(n.a)(d.O, d.N, (e, t) => e || t),
				m = Object(n.a)(_, e => !e),
				p = e => e.page.experiments.canonicalUrl,
				h = e => {
					const t = Object(d.k)(e),
						i = {
							...e.user.experiments.byName,
							...e.page.experiments.byName
						};
					for (const n of Object.keys(e.experimentOverrides)) u(t, n) && (i[n] = {
						id: 0,
						name: n,
						variant: e.experimentOverrides[n] || ""
					});
					return i
				}
		},
		"./src/reddit/selectors/experiments/listingBelow.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return c
			})), i.d(t, "a", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts"),
				o = i("./src/reddit/helpers/getPostFromRouteMatch/index.ts"),
				d = i("./src/reddit/selectors/meta.ts"),
				a = i("./src/reddit/selectors/platform.ts"),
				l = i("./src/reddit/selectors/user.ts");
			const u = Object(n.a)(d.c, l.N, l.O, a.f, a.e, e => Object(o.a)(e), (e, t, i, n, r, s) => !e && !t && !i && n && !!r && !r.isNSFW && !!s && !s.isNSFW),
				c = e => Object(s.c)(e, {
					experimentEligibilitySelector: u,
					experimentName: r.qd,
					expEventOverride: !1
				}),
				_ = e => e === r.ud.AdsControl,
				m = e => e === r.ud.Nlp15Max
		},
		"./src/reddit/selectors/experiments/loggedOutBlockingInterstitial.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return u
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			}));
			var n = i("./node_modules/reselect/es/index.js");
			const r = {
				t5_2r2jt: !0,
				t5_2ranw: !0,
				t5_2rmfx: !0,
				t5_2qhh7: !0,
				t5_2skrn: !0,
				t5_2qnwb: !0,
				t5_2ra72: !0,
				t5_2vgfw: !0,
				t5_2qo2a: !0,
				t5_voyv5: !0,
				t5_2qwnx: !0,
				t5_2qqqf: !0,
				t5_2rch0: !0,
				t5_2xtuc: !0,
				t5_2qyib: !0,
				t5_3pmyi: !0,
				t5_2shbb: !0,
				t5_3n3op: !0,
				t5_2vfzu: !0,
				t5_2uog0: !0,
				t5_2sqd6: !0,
				t5_2r4b9: !0,
				t5_2qmbm: !0,
				t5_2tdzg: !0,
				t5_2qmij: !0,
				t5_31thr: !0,
				t5_2qhff: !0,
				t5_2qpzs: !0,
				t5_2t9mw: !0,
				t5_2sxmq: !0,
				t5_2tand: !0,
				t5_2rmf8: !0,
				t5_32jqy: !0,
				t5_2ya5k: !0,
				t5_2s7yr: !0,
				t5_2f4l19: !0,
				t5_2qhef: !0,
				t5_2mohet: !0,
				t5_37f5r: !0,
				t5_2r1b9: !0,
				t5_2s8kf: !0,
				t5_2qnc9: !0,
				t5_30m5u: !0,
				t5_2vmuo: !0,
				t5_2x8ez: !0,
				t5_2qhs6: !0,
				t5_2tek4: !0,
				t5_3f5dt: !0,
				t5_2svua: !0,
				t5_2qirg: !0,
				t5_2r22n: !0,
				t5_2vvid: !0,
				t5_2qv0q: !0,
				t5_2oo66g: !0,
				t5_2rpgi: !0,
				t5_2u67r: !0,
				t5_2vahj: !0,
				t5_2trla: !0,
				t5_4tq0sp: !0,
				t5_313rl: !0,
				t5_2qjny: !0,
				t5_2ubfr: !0,
				t5_2snp9: !0,
				t5_9n2w1: !0,
				t5_2rbaq: !0,
				t5_2s9i3: !0,
				t5_2qqdp: !0,
				t5_2hnraa: !0,
				t5_31nsz: !0,
				t5_33xiv9: !0,
				t5_2rm6u: !0,
				t5_2qvqm: !0,
				t5_2f3oes: !0,
				t5_2iokxd: !0,
				t5_364ed9: !0,
				t5_2snsq: !0,
				t5_2rdj4: !0,
				t5_2uczz: !0,
				t5_2r0y3: !0,
				t5_31aao: !0,
				t5_rbmui: !0,
				t5_2f6rwj: !0,
				t5_2ukv2: !0,
				t5_2wlnp: !0,
				t5_2s3g1: !0,
				t5_2f86o2: !0,
				t5_2qnv4: !0,
				t5_2qh9z: !0,
				t5_2se6p: !0,
				t5_2qx0h: !0,
				t5_3ncrj: !0,
				t5_2z5yq: !0,
				t5_2tj2f: !0,
				t5_2h8n8q: !0,
				t5_2u5r2: !0,
				t5_3gppqs: !0,
				t5_315ru: !0,
				t5_2shdt: !0,
				t5_2qhsj: !0,
				t5_3ea67: !0,
				t5_2ryc6: !0,
				t5_2tgev: !0,
				t5_g49g0: !0,
				t5_2rm6q: !0,
				t5_2raxb: !0,
				t5_2z6kb: !0,
				t5_2sxk3: !0,
				t5_2t5fu: !0,
				t5_3g2n6: !0,
				t5_3ibn9: !0,
				t5_fg2cu: !0,
				t5_so2i4: !0,
				t5_2rs2k: !0,
				t5_2ui5x: !0,
				t5_2qr75: !0,
				t5_2st2y: !0,
				t5_39lfe: !0,
				t5_vlfm1: !0,
				t5_2xrxs: !0,
				t5_2ys1m: !0,
				t5_4eh6a: !0,
				t5_2g8yh6: !0,
				t5_rczr0: !0,
				t5_3jalv9: !0,
				t5_2tn3t: !0,
				t5_3nboq: !0,
				t5_3fv67: !0,
				t5_ilpqk: !0,
				t5_2qlaa: !0,
				t5_2r9qy: !0,
				t5_3g7hb: !0,
				t5_33dd6: !0,
				t5_329jv: !0,
				t5_2rhel: !0,
				t5_3wsx40: !0,
				t5_2rqqs: !0,
				t5_4do9fz: !0,
				t5_31mz6: !0,
				t5_2tku5: !0,
				t5_35jbl: !0,
				t5_2tcpq: !0,
				t5_39dpu: !0,
				t5_2spwe: !0,
				t5_37a9h: !0,
				t5_2vrr5: !0,
				t5_2qpyn: !0,
				t5_37istz: !0,
				t5_2rqo4: !0,
				t5_33d9u: !0,
				t5_2xpj4l: !0,
				t5_2t8gr: !0,
				t5_mwfyw: !0,
				t5_2r76d: !0,
				t5_2s453: !0,
				t5_3bj8w: !0,
				t5_3e7tpq: !0,
				t5_2qh8d: !0,
				t5_2vmoc: !0,
				t5_2ug7r: !0,
				t5_2qh3g: !0,
				t5_2r75x: !0,
				t5_2qxpm: !0,
				t5_2x77y: !0,
				t5_2rpzk: !0,
				t5_hezwm: !0,
				t5_3cscce: !0,
				t5_2ua08: !0,
				t5_i2hkt: !0,
				t5_2s14a: !0,
				t5_35m0f: !0,
				t5_2rdpj: !0,
				t5_2qzru: !0,
				t5_2rhee: !0,
				t5_2spw0: !0,
				t5_2tjkc: !0,
				t5_u4ylu: !0,
				t5_2roi8: !0,
				t5_2mxhtl: !0,
				t5_3dbxi: !0,
				t5_2ttk1: !0,
				t5_2szuo: !0,
				t5_2v77d: !0,
				t5_2wizt3: !0,
				t5_33d8b: !0,
				t5_2qo7i: !0,
				t5_3rcxc6: !0,
				t5_2gpd6g: !0,
				t5_2u0nr: !0,
				t5_2t7nyq: !0,
				t5_44y483: !0,
				t5_2qh7n: !0,
				t5_37a7m: !0,
				t5_2tm8x: !0,
				t5_h1sjl: !0,
				t5_2s36e: !0,
				t5_xhtqf: !0,
				t5_2s5lq: !0,
				t5_qp633: !0,
				t5_2r3xg: !0,
				t5_2tnai: !0,
				t5_3pa5j: !0,
				t5_39pql: !0,
				t5_2wjzr: !0,
				t5_2vy6x: !0,
				t5_3yfmeo: !0,
				t5_2rbuf: !0,
				t5_2v769: !0,
				t5_2qwbh: !0,
				t5_11idtj: !0,
				t5_4bzigh: !0,
				t5_2zcvb: !0,
				t5_2oiu4x: !0,
				t5_2qhja: !0,
				t5_28wetz: !0,
				t5_2ys3w: !0,
				t5_2ue3h: !0,
				t5_364dh4: !0,
				t5_31hoq: !0,
				t5_32yl1: !0,
				t5_2w6aj: !0,
				t5_2rmn5: !0,
				t5_39v1r: !0,
				t5_2qm0x: !0,
				t5_28mv6s: !0,
				t5_2st5x: !0,
				t5_2rgl1: !0,
				t5_4hsb06: !0,
				t5_2ihy50: !0,
				t5_2sj6l: !0,
				t5_2qj77: !0,
				t5_2ug6sz: !0,
				t5_2t187: !0,
				t5_2saf4: !0,
				t5_31r90: !0,
				t5_2qixx: !0,
				t5_2qwut: !0,
				t5_2vzrv: !0,
				t5_2vo15: !0,
				t5_2lx3tz: !0,
				t5_2sd5e: !0,
				t5_2t8ya: !0,
				t5_2th9l: !0,
				t5_2r828: !0,
				t5_4jsz1n: !0,
				t5_2tokr: !0,
				t5_2g7e72: !0,
				t5_3ijj6: !0,
				t5_2xty7: !0,
				t5_38bow: !0,
				t5_t4nzv: !0,
				t5_2ayvk7: !0,
				t5_2s73v: !0,
				t5_2ka4cq: !0,
				t5_2s8ot: !0,
				t5_4kc87h: !0,
				t5_2s23e: !0,
				t5_4cztsf: !0,
				t5_2r4lw: !0,
				t5_3o9yw: !0,
				t5_2ikcs1: !0,
				t5_3yx96k: !0,
				t5_2qwvc: !0,
				t5_2qs1d: !0,
				t5_2saej: !0,
				t5_2t0ha: !0,
				t5_xuccg: !0,
				t5_2vtfp: !0,
				t5_2saq9: !0,
				t5_3j7j1: !0,
				t5_29bur2: !0,
				t5_2qwyh: !0,
				t5_3dtdn4: !0,
				t5_2ub55: !0,
				t5_31khp: !0,
				t5_3eg84: !0,
				t5_2gy66v: !0,
				t5_2tkij: !0,
				t5_12pesv: !0,
				t5_3f1pfs: !0,
				t5_2whjo: !0,
				t5_qmczq: !0,
				t5_1e074e: !0,
				t5_33y6y: !0,
				t5_2qhe2: !0,
				t5_11d8d1: !0,
				t5_399hw: !0,
				t5_2qp7z: !0,
				t5_39yww: !0,
				t5_3fv2t: !0,
				t5_2rdms: !0,
				t5_2ydxq: !0,
				t5_2uk5az: !0,
				t5_2h5fm5: !0,
				t5_35hany: !0,
				t5_2gx1h6: !0,
				t5_39h6w: !0,
				t5_2qho7: !0,
				t5_33q99: !0,
				t5_2s1h9: !0,
				t5_3ns82: !0,
				t5_2tant: !0,
				t5_49und4: !0,
				t5_2vzvv: !0,
				t5_2gdu8o: !0,
				t5_4vqie2: !0,
				t5_2rv5s: !0,
				t5_2rupu: !0,
				t5_2s0tv: !0,
				t5_3igo10: !0,
				t5_2tkk8: !0,
				t5_2s8rw: !0,
				t5_2scf0: !0,
				t5_2tb9x: !0,
				t5_2v74a: !0,
				t5_2yfo0: !0,
				t5_2wfll: !0,
				t5_4p5zbo: !0,
				t5_2s9r3: !0,
				t5_2tkn9: !0,
				t5_3nfua8: !0,
				t5_2u80h: !0,
				t5_2v89v: !0,
				t5_2948tz: !0,
				t5_2qhe8: !0,
				t5_2qvch: !0,
				t5_2skpz: !0,
				t5_2stfe: !0,
				t5_2r8tk: !0,
				t5_39lr7t: !0,
				t5_2spz6s: !0,
				t5_2r91v: !0,
				t5_2z46j: !0,
				t5_3k63k: !0,
				t5_32736w: !0,
				t5_2tjvf: !0,
				t5_4vp9an: !0,
				t5_2qo48: !0,
				t5_2rxjp: !0,
				t5_sn51g: !0,
				t5_2vz6k: !0,
				t5_2t4ye: !0,
				t5_2qpmh: !0,
				t5_2we8l: !0,
				t5_2sv5a: !0,
				t5_3j3hlb: !0,
				t5_2s3xd: !0,
				t5_4cz93z: !0,
				t5_3ewuk: !0,
				t5_2yo8f: !0,
				t5_39pn6: !0,
				t5_z9993: !0,
				t5_2v4ei: !0,
				t5_2vh1a: !0,
				t5_2xugh: !0,
				t5_2rdud: !0,
				t5_3bj8n: !0,
				t5_2tcjc: !0,
				t5_2rw9q: !0,
				t5_2rhwk: !0,
				t5_4vpufu: !0,
				t5_2wwpu: !0,
				t5_2pqzo7: !0,
				t5_4az17r: !0,
				t5_384mz: !0,
				t5_1b9104: !0,
				t5_2tw1s: !0,
				t5_2vnka: !0,
				t5_j779r: !0,
				t5_2y9mbm: !0,
				t5_2uubv: !0,
				t5_3yzx3x: !0,
				t5_30xmm: !0,
				t5_2ydy9: !0,
				t5_2u6be: !0,
				t5_2sjdn: !0,
				t5_4bkio: !0,
				t5_2rtve: !0,
				t5_4zujq5: !0,
				t5_2sf60: !0,
				t5_2j42gx: !0,
				t5_2j4zt8: !0,
				t5_35m2v: !0,
				t5_2hkqkr: !0,
				t5_38hf9: !0,
				t5_2sjb5: !0,
				t5_2tg5w: !0,
				t5_2scp5: !0,
				t5_2qq1i: !0,
				t5_2rdt9: !0,
				t5_2vjxi: !0,
				t5_326p5: !0,
				t5_2rg3c: !0,
				t5_25tz1j: !0,
				t5_2vy6k: !0,
				t5_2s99h: !0,
				t5_2uvh0w: !0,
				t5_2rluy: !0,
				t5_3vseds: !0,
				t5_2vjua: !0,
				t5_124gju: !0,
				t5_4dypyc: !0,
				t5_2sq8b: !0,
				t5_gv2qf: !0,
				t5_54rztw: !0,
				t5_2w3g8: !0,
				t5_3e2zi: !0,
				t5_2zy2x: !0,
				t5_2sihf: !0,
				t5_3hv47: !0,
				t5_35ga9: !0,
				t5_2rrq9: !0,
				t5_4l3geb: !0,
				t5_42jywl: !0,
				t5_2smi6: !0,
				t5_2weqn: !0,
				t5_3pw0a: !0,
				t5_2rdsb: !0,
				t5_2qi0j: !0,
				t5_28r1xe: !0,
				t5_2tumk: !0,
				t5_30biu: !0,
				t5_2qxro: !0,
				t5_28jr8w: !0,
				t5_2tyg2: !0,
				t5_31r5h: !0,
				t5_2ktwai: !0,
				t5_3a09l: !0,
				t5_2s8vp: !0,
				t5_2uvhq: !0,
				t5_3tduik: !0,
				t5_2v9s2: !0,
				t5_2tg2l: !0,
				t5_33h8h: !0,
				t5_3bmf2: !0,
				t5_278gr0: !0,
				t5_2vjm4: !0,
				t5_321qi: !0,
				t5_3155l: !0,
				t5_2tmc8: !0,
				t5_4n5dj2: !0,
				t5_32viw: !0,
				t5_34o3en: !0,
				t5_2syyo: !0,
				t5_29cxhr: !0,
				t5_2i0b8x: !0,
				t5_2wa95: !0,
				t5_4arufe: !0,
				t5_2qmdm: !0,
				t5_3wr1ba: !0,
				t5_2y3x3: !0,
				t5_2szkz: !0,
				t5_2scc7: !0,
				t5_2ugup: !0,
				t5_2t389: !0,
				t5_2qius: !0,
				t5_2xx4a: !0,
				t5_2rhx3: !0,
				t5_2x9e7: !0,
				t5_2umwf: !0,
				t5_4n81k8: !0,
				t5_375hf: !0,
				t5_2uz12: !0,
				t5_3bhkf: !0,
				t5_3d20b: !0,
				t5_4wzd0y: !0,
				t5_30z05: !0,
				t5_4hhltn: !0,
				t5_2sz9e: !0,
				t5_2yren: !0,
				t5_2wsjv: !0,
				t5_2vbe1: !0,
				t5_2rfx0: !0,
				t5_3b7g7d: !0,
				t5_2r99w: !0,
				t5_q1ofh: !0,
				t5_27btg2: !0,
				t5_3whtje: !0,
				t5_4htjqx: !0,
				t5_348dl: !0,
				t5_2qyzp: !0,
				t5_395ja: !0,
				t5_372t2: !0,
				t5_2ojf76: !0,
				t5_2s35s: !0,
				t5_2zww6: !0,
				t5_4u3sj8: !0,
				t5_2uneg: !0,
				t5_3p24u: !0,
				t5_2rghq: !0,
				t5_2ssjn: !0,
				t5_34scd: !0,
				t5_4pcaro: !0,
				t5_2z1s2: !0,
				t5_9kjlc: !0,
				t5_3cach: !0,
				t5_1b376p: !0,
				t5_2qood: !0,
				t5_2zgyv: !0,
				t5_2qpcj: !0,
				t5_2grk6u: !0,
				t5_4mwkt6: !0,
				t5_muzsw: !0,
				t5_2mhow9: !0,
				t5_nzyrp: !0,
				t5_2s5ni: !0,
				t5_2hrykq: !0,
				t5_2vxnl: !0,
				t5_2syer: !0,
				t5_265py5: !0,
				t5_3am40: !0,
				t5_u7d68: !0,
				t5_2wkhb: !0,
				t5_up2e1: !0,
				t5_30xzp: !0,
				t5_2dmvki: !0,
				t5_2s4nb: !0,
				t5_2z1yj: !0,
				t5_4ig8cn: !0,
				t5_3ip0zv: !0,
				t5_2vosmb: !0,
				t5_34jzi: !0,
				t5_2viuq: !0,
				t5_3nm5ca: !0,
				t5_wf7tn: !0,
				t5_2iuocl: !0,
				t5_2sx3i: !0,
				t5_3n8fa: !0,
				t5_2gxt9z: !0,
				t5_33bb0: !0,
				t5_2zkob5: !0,
				t5_46r2au: !0,
				t5_2uzy2: !0,
				t5_2vzs0: !0,
				t5_2wxli: !0,
				t5_2snvh: !0,
				t5_2pqvv3: !0,
				t5_4srgcv: !0,
				t5_x3t3a: !0,
				t5_3krk3a: !0,
				t5_jmn1m: !0,
				t5_2scwr: !0,
				t5_3w187s: !0,
				t5_zlszm: !0,
				t5_p5zv5: !0,
				t5_2zf7w: !0,
				t5_2s7e5: !0,
				t5_2sk0u: !0,
				t5_xcr6k: !0,
				t5_r4bzt: !0,
				t5_2tnlj: !0,
				t5_11crzk: !0,
				t5_33mdo: !0,
				t5_2tqwy: !0,
				t5_3lcyb: !0,
				t5_3bfhas: !0,
				t5_12xb4w: !0,
				t5_2xjrr: !0,
				t5_2zlfl: !0,
				t5_k6b8f: !0,
				t5_2rfqf: !0,
				t5_3nab7: !0,
				t5_41g6lm: !0,
				t5_3j5d3: !0,
				t5_2wnr1: !0,
				t5_2semk: !0,
				t5_30y26p: !0,
				t5_2snpl: !0,
				t5_mlnoa: !0,
				t5_2t6dy: !0,
				t5_3782d: !0,
				t5_232do9: !0,
				t5_2v090: !0,
				t5_2iyxta: !0,
				t5_4xdc9q: !0,
				t5_2vjtw: !0,
				t5_2y44v: !0,
				t5_2se19: !0,
				t5_2suva: !0,
				t5_k8gsw: !0,
				t5_s3fuf: !0,
				t5_3e2d1d: !0,
				t5_39iug: !0,
				t5_27j1r2: !0,
				t5_2lqm3m: !0,
				t5_2g19kp: !0,
				t5_38kph: !0,
				t5_34cxf: !0,
				t5_24care: !0,
				t5_vfrh7: !0,
				t5_25j8pz: !0,
				t5_2vg2wz: !0,
				t5_2vwxs: !0,
				t5_vqneh: !0,
				t5_4x59lc: !0,
				t5_2bpuz7: !0,
				t5_2h06ph: !0,
				t5_2vsqj: !0,
				t5_2sfb8: !0,
				t5_31933: !0,
				t5_3ftuc: !0,
				t5_3cwoe: !0,
				t5_345vi: !0,
				t5_2su4p: !0,
				t5_35pvf: !0,
				t5_2tlhk: !0,
				t5_49zanl: !0,
				t5_2yge0: !0,
				t5_s5o7i: !0,
				t5_ktubw: !0,
				t5_2ztwm: !0,
				t5_33wkt: !0,
				t5_3e6xc: !0,
				t5_2zw1d: !0,
				t5_2szqz: !0,
				t5_2vxel: !0,
				t5_2s6nz: !0,
				t5_2xoi2: !0,
				t5_3mdrs0: !0,
				t5_2wv9sg: !0,
				t5_2r6wj: !0,
				t5_2rtne: !0,
				t5_2veuz: !0,
				t5_3gnez: !0,
				t5_4m5k7k: !0,
				t5_21v6m9: !0,
				t5_2z5a4c: !0,
				t5_4qtlny: !0,
				t5_35l44: !0,
				t5_2c5nxf: !0,
				t5_39bsz: !0,
				t5_2vaej: !0,
				t5_11cwir: !0,
				t5_36psw: !0,
				t5_2enkbf: !0,
				t5_2yhgk: !0,
				t5_2tfmr: !0,
				t5_2u5qiz: !0,
				t5_2slmz: !0,
				t5_2xr5d: !0,
				t5_39xvlo: !0,
				t5_2vgqg: !0,
				t5_4dfao6: !0,
				t5_347wh: !0,
				t5_2uo1i: !0,
				t5_2lh2su: !0,
				t5_2axhuf: !0,
				t5_2qzzg: !0,
				t5_4eecv9: !0,
				t5_lwei5: !0,
				t5_3j815: !0,
				t5_5eadu8: !0,
				t5_2r0nj: !0,
				t5_2sizq: !0,
				t5_2w321: !0,
				t5_2vx87: !0,
				t5_2x8iq: !0,
				t5_2uzjs: !0,
				t5_rkocg: !0,
				t5_301h5: !0,
				t5_xv0in: !0,
				t5_304i1z: !0,
				t5_3g2ly: !0,
				t5_3g1p0: !0,
				t5_2w7ge: !0,
				t5_383rt: !0,
				t5_21pfla: !0,
				t5_3ibyi: !0,
				t5_2sqoh: !0,
				t5_2t2oe: !0,
				t5_2vxrh: !0,
				t5_12q2x3: !0,
				t5_2vssw: !0,
				t5_3heut: !0,
				t5_2qkr8: !0,
				t5_2sl6z: !0,
				t5_3cxr2: !0,
				t5_2sxz7: !0,
				t5_2r6xc: !0,
				t5_2yt5k: !0,
				t5_2ra6x: !0,
				t5_308c8: !0,
				t5_29senh: !0,
				t5_2jbc28: !0,
				t5_2xt3o: !0,
				t5_2y9c4: !0,
				t5_26647x: !0,
				t5_2qlvv: !0,
				t5_2rg7m: !0,
				t5_129eh5: !0,
				t5_38ptg5: !0,
				t5_394ca: !0,
				t5_gntp3: !0,
				t5_2r876: !0,
				t5_2yhc1: !0,
				t5_vr1hj: !0,
				t5_2vq5h: !0,
				t5_3wm4u9: !0,
				t5_y216u: !0,
				t5_4n0ixx: !0,
				t5_298bry: !0,
				t5_4opl96: !0,
				t5_3elck: !0,
				t5_frznt: !0,
				t5_2ufyx: !0,
				t5_38x5n: !0,
				t5_35wky: !0,
				t5_2zfm9: !0,
				t5_2umic: !0,
				t5_31z95: !0,
				t5_2lm45i: !0,
				t5_3esyr: !0,
				t5_3fa7j: !0,
				t5_2gfkcx: !0,
				t5_w9l30: !0,
				t5_z7ink: !0,
				t5_prrc9: !0,
				t5_10s27h: !0,
				t5_zzszh: !0,
				t5_2zgpn: !0,
				t5_2wu7ss: !0,
				t5_35p00: !0,
				t5_m9xlr: !0,
				t5_4dt74r: !0,
				t5_2sp3j: !0,
				t5_2rzlq: !0,
				t5_2u7bp: !0,
				t5_48hrov: !0,
				t5_37kll: !0,
				t5_53ppbm: !0,
				t5_2w7fu: !0,
				t5_sp8ku: !0,
				t5_3jodm: !0,
				t5_2tv3i: !0,
				t5_23iqi5: !0,
				t5_53o5nd: !0,
				t5_4hgmz: !0,
				t5_4onl64: !0,
				t5_2pxdzp: !0,
				t5_1a1e8e: !0,
				t5_hlpvm: !0,
				t5_2rplw: !0,
				t5_2u101: !0,
				t5_2ytpb: !0,
				t5_4xcbbb: !0,
				t5_2dibbq: !0,
				t5_3qgqd1: !0,
				t5_2st9ez: !0,
				t5_3hyawx: !0,
				t5_2higep: !0,
				t5_2mpvpn: !0,
				t5_2uhqj: !0,
				t5_2usbg: !0,
				t5_2xlbc: !0,
				t5_3iyohl: !0,
				t5_35l5c: !0,
				t5_2myycs: !0,
				t5_3gh9k5: !0,
				t5_2uaj3: !0,
				t5_3jk20k: !0,
				t5_2udu1w: !0,
				t5_3hhz87: !0,
				t5_2x8y5: !0,
				t5_32a4f: !0,
				t5_34c1e: !0,
				t5_npof1: !0,
				t5_2r7duf: !0,
				t5_3i443: !0,
				t5_3gaft: !0,
				t5_5dcyyt: !0,
				t5_2u18u: !0,
				t5_30mux: !0,
				t5_3xp2ez: !0,
				t5_2sc0a: !0,
				t5_2sf4a: !0,
				t5_2yy9e: !0,
				t5_2romi: !0,
				t5_xmuio: !0,
				t5_2ticd: !0,
				t5_4sozfh: !0,
				t5_36bc6: !0,
				t5_mq6ps: !0,
				t5_2spc7b: !0,
				t5_3nucc7: !0,
				t5_4sgf68: !0,
				t5_2w7cb: !0,
				t5_2zyfd: !0,
				t5_2rzcr: !0,
				t5_3lurmd: !0,
				t5_2ap2ow: !0,
				t5_3c5hil: !0,
				t5_sj2x6: !0,
				t5_2siff: !0,
				t5_4acrx4: !0,
				t5_2se1e: !0,
				t5_3bpuyt: !0,
				t5_30tnq: !0,
				t5_43or0d: !0,
				t5_11ajln: !0,
				t5_qjadm: !0,
				t5_38rfo: !0,
				t5_2qp1o: !0,
				t5_35kq3c: !0,
				t5_2q9rll: !0,
				t5_2r9k3: !0,
				t5_2ls1x1: !0,
				t5_3gpmve: !0,
				t5_2u9hs: !0,
				t5_2uspt: !0,
				t5_3fig1: !0,
				t5_2jf22m: !0,
				t5_309iq: !0,
				t5_2gyp0a: !0,
				t5_1yie53: !0,
				t5_3617y: !0,
				t5_2xe3j: !0,
				t5_3n34z: !0,
				t5_2zzq8: !0,
				t5_53m1ar: !0,
				t5_2vimr: !0,
				t5_2qtur: !0,
				t5_11ltid: !0,
				t5_4nmm60: !0,
				t5_jwiwv: !0,
				t5_2gzgco: !0,
				t5_2gl9od: !0,
				t5_2yyeme: !0,
				t5_3lp6y: !0,
				t5_3q51w7: !0,
				t5_3zc11u: !0,
				t5_3a1w1g: !0,
				t5_2qsry: !0,
				t5_38ivs: !0,
				t5_3eywmj: !0,
				t5_2ujrm: !0,
				t5_28veoo: !0,
				t5_3490pr: !0,
				t5_2v6pi: !0,
				t5_4y9m6a: !0,
				t5_58ozwv: !0,
				t5_2a5elk: !0,
				t5_3wpaz5: !0,
				t5_309ql: !0,
				t5_2r24h: !0,
				t5_zlcza: !0,
				t5_3n637: !0,
				t5_3d8b3: !0,
				t5_3q6b4z: !0,
				t5_3nxlxz: !0,
				t5_2rqhw: !0,
				t5_2axuxa: !0,
				t5_2r8fp: !0,
				t5_2s0bv: !0,
				t5_3623c: !0,
				t5_2td6s: !0,
				t5_2sujy: !0,
				t5_35ulb: !0,
				t5_2tuvu: !0,
				t5_2pnmow: !0,
				t5_2xsu7: !0,
				t5_2v3pvp: !0,
				t5_2tb1k: !0,
				t5_2i7bwm: !0,
				t5_3568x: !0,
				t5_2z3pw8: !0,
				t5_tzlml: !0,
				t5_13d6vl: !0,
				t5_31hrq: !0,
				t5_2s5f5: !0,
				t5_2r139: !0,
				t5_4mdnml: !0,
				t5_y6tu3: !0,
				t5_2wrwy: !0,
				t5_3vi5i3: !0,
				t5_36sjvs: !0,
				t5_2zwpv1: !0,
				t5_2x3bb: !0,
				t5_3z3grc: !0,
				t5_3epgf: !0,
				t5_2unrd: !0,
				t5_2ns8sm: !0,
				t5_2rae2: !0,
				t5_47oqil: !0,
				t5_315r3: !0,
				t5_2u0be: !0,
				t5_2vb6t: !0,
				t5_2teun: !0,
				t5_2tjh0: !0,
				t5_2eqx39: !0,
				t5_35fwjx: !0,
				t5_2tfwo: !0,
				t5_3yr2ih: !0,
				t5_34ily: !0,
				t5_3li20: !0,
				t5_3dd6l: !0,
				t5_35doh: !0,
				t5_2xbl6: !0,
				t5_2scsz: !0,
				t5_31awqg: !0,
				t5_2v64n: !0,
				t5_32ktv: !0,
				t5_35duyh: !0,
				t5_22qp0k: !0,
				t5_2naj8e: !0,
				t5_2s0t5: !0,
				t5_2rggh: !0,
				t5_43cqvg: !0,
				t5_4r9cwz: !0,
				t5_4iddsu: !0,
				t5_2s5k4: !0,
				t5_3g9cg5: !0,
				t5_2jlxhd: !0,
				t5_2voz4: !0,
				t5_2wrar: !0,
				t5_3h5kq: !0,
				t5_2zeh7: !0,
				t5_2tbmad: !0,
				t5_2jb0wg: !0,
				t5_2sl1j: !0,
				t5_i1ic4: !0,
				t5_2wuvl: !0,
				t5_3ppwi: !0,
				t5_2t3v5: !0,
				t5_2srim: !0,
				t5_3riwhx: !0,
				t5_36ta8o: !0,
				t5_o3plh: !0,
				t5_36avw4: !0,
				t5_3b0kx: !0,
				t5_28t2g8: !0,
				t5_33w3tw: !0,
				t5_3nrwp: !0,
				t5_2rlb9: !0,
				t5_2p38dm: !0,
				t5_3sj6kh: !0,
				t5_3hpeyv: !0,
				t5_2nzi2t: !0,
				t5_4dmrbx: !0,
				t5_3cy3p: !0,
				t5_2jl1y1: !0,
				t5_vb67a: !0,
				t5_2dp9ud: !0,
				t5_2rfbj: !0,
				t5_3yxw4r: !0,
				t5_2xq4hb: !0,
				t5_o9ov4: !0,
				t5_27zj9i: !0,
				t5_uwekw: !0,
				t5_31fim: !0,
				t5_2gnjmd: !0,
				t5_2s3yb: !0,
				t5_38bs8: !0,
				t5_362ku: !0,
				t5_2w23u: !0,
				t5_3ax4li: !0,
				t5_4c0oi2: !0,
				t5_2vvml: !0,
				t5_2rib8: !0,
				t5_2k4h0z: !0,
				t5_2zrkm: !0,
				t5_3hvtoc: !0,
				t5_2xnwz: !0,
				t5_34onfa: !0,
				t5_4cbryk: !0,
				t5_ps1cx: !0,
				t5_2ucc3: !0,
				t5_36ycm: !0,
				t5_49zal5: !0,
				t5_32b32: !0,
				t5_2rugr: !0,
				t5_3li9g: !0,
				t5_37smh: !0,
				t5_3cia1: !0,
				t5_31cw5v: !0,
				t5_2705kc: !0,
				t5_32m36o: !0,
				t5_36ml0n: !0,
				t5_2s8d7: !0,
				t5_5c3gv9: !0,
				t5_3aeag: !0,
				t5_2txac: !0,
				t5_3011h: !0,
				t5_4mwcpy: !0,
				t5_2wk01: !0,
				t5_2qp4d: !0,
				t5_3a4wz: !0,
				t5_2y5x1: !0,
				t5_2tv74b: !0,
				t5_3e8dw: !0,
				t5_9x3ni: !0,
				t5_2amq44: !0,
				t5_3a5hjb: !0,
				t5_1mc3kc: !0,
				t5_2gq13z: !0,
				t5_2u32x: !0,
				t5_2yo2c3: !0,
				t5_3cgnj: !0,
				t5_2y9wc: !0,
				t5_4x7b4i: !0,
				t5_32n6e: !0,
				t5_37e5s: !0,
				t5_3akbb: !0,
				t5_2z4au: !0,
				t5_3yof0y: !0,
				t5_2qpaq: !0,
				t5_3lbp59: !0,
				t5_2thph2: !0,
				t5_2rld3: !0,
				t5_jr113: !0,
				t5_2rm1p: !0,
				t5_3iy44c: !0,
				t5_jkxgd: !0,
				t5_2sfysp: !0,
				t5_12qd6m: !0,
				t5_398no: !0,
				t5_2qmil: !0,
				t5_2m3rtq: !0,
				t5_2vw5a0: !0,
				t5_3nuhq: !0,
				t5_36pbnb: !0,
				t5_2t7zf: !0,
				t5_29vr4c: !0,
				t5_2w80aw: !0,
				t5_3iugzf: !0,
				t5_2vznr: !0,
				t5_2s369: !0,
				t5_26y9az: !0,
				t5_3ke9n: !0,
				t5_ye8et: !0,
				t5_4qb7da: !0,
				t5_3iegl: !0,
				t5_2vvc9: !0,
				t5_3237ae: !0,
				t5_2st2g: !0,
				t5_2sq7j: !0,
				t5_2zpzg: !0,
				t5_x32mh: !0,
				t5_xkytb: !0,
				t5_2sk1d: !0,
				t5_2vssx: !0,
				t5_4tjyq4: !0,
				t5_3100v4: !0,
				t5_2qbcr7: !0,
				t5_3paq5: !0,
				t5_451cl4: !0,
				t5_4onklq: !0,
				t5_33hi4: !0,
				t5_2zmz1: !0,
				t5_3l1vix: !0,
				t5_2ta7c: !0,
				t5_2slpl: !0,
				t5_2vny2: !0,
				t5_2r63s: !0,
				t5_4kxgfm: !0,
				t5_4lzibw: !0,
				t5_46s1tx: !0,
				t5_3e65q: !0,
				t5_2ltqoa: !0,
				t5_310of: !0,
				t5_35lwf7: !0,
				t5_3e468: !0,
				t5_zkbji: !0,
				t5_2w32t: !0,
				t5_436wvu: !0,
				t5_kk43l: !0,
				t5_3rd0rt: !0,
				t5_23o7up: !0,
				t5_2ujli: !0,
				t5_3rmy3e: !0,
				t5_2zk9gu: !0,
				t5_2t37u3: !0,
				t5_2qgl1m: !0,
				t5_39rtw: !0,
				t5_4n21zm: !0,
				t5_2so7z: !0,
				t5_3eqny: !0,
				t5_2si295: !0,
				t5_2egwh5: !0,
				t5_2b71fc: !0,
				t5_3hqhp: !0,
				t5_1t2b5e: !0,
				t5_39e2ka: !0,
				t5_38coss: !0,
				t5_37ier: !0,
				t5_2rdpn: !0,
				t5_2zkat: !0,
				t5_3yki03: !0,
				t5_2v2rt: !0,
				t5_h6pcp: !0,
				t5_3gloo: !0,
				t5_2wlzo: !0,
				t5_3zh9bf: !0,
				t5_22bryh: !0,
				t5_2at87a: !0,
				t5_3enr1g: !0,
				t5_2thmg: !0,
				t5_33o00: !0,
				t5_126i5d: !0,
				t5_2vjwh: !0,
				t5_33k4w: !0,
				t5_2ug5f: !0,
				t5_ym99w: !0,
				t5_2t6sm: !0,
				t5_2rops: !0,
				t5_2qlpg: !0,
				t5_2r2co: !0,
				t5_2rpsy: !0,
				t5_318u8: !0,
				t5_2sb9h: !0,
				t5_3jfv2: !0,
				t5_2okzvg: !0,
				t5_31wkx: !0,
				t5_2tp8l: !0,
				t5_3ommia: !0,
				t5_2sqd2c: !0,
				t5_2eop3u: !0,
				t5_2v0b0: !0,
				t5_3foit: !0,
				t5_4l3ijt: !0,
				t5_4c0zqe: !0,
				t5_4lfwkr: !0,
				t5_3hbq0: !0,
				t5_2sigz: !0,
				t5_2vvjz: !0,
				t5_2y12s: !0,
				t5_4849w7: !0,
				t5_url1z: !0,
				t5_38o8j: !0,
				t5_2we6u: !0,
				t5_4qb4ej: !0,
				t5_10vkok: !0,
				t5_31ovs: !0,
				t5_3jfmc: !0,
				t5_3e789: !0,
				t5_sbdr4: !0,
				t5_2r318: !0,
				t5_3carb9: !0,
				t5_35vfbg: !0,
				t5_3je4i: !0,
				t5_309ob: !0,
				t5_2wex0: !0,
				t5_32vxe: !0,
				t5_31rkl: !0,
				t5_39v240: !0,
				t5_2ufm7: !0,
				t5_2w7s1: !0,
				t5_3ojpf6: !0,
				t5_38h91: !0,
				t5_r3x0n: !0,
				t5_2qb1nz: !0,
				t5_knz7g: !0,
				t5_41mwjo: !0,
				t5_3jyoj: !0,
				t5_38n7w: !0,
				t5_3b3zt: !0,
				t5_3fvqoj: !0,
				t5_2r7hps: !0,
				t5_3iitc: !0,
				t5_2v137: !0,
				t5_l27ia: !0,
				t5_2smfi7: !0,
				t5_3bq5u: !0,
				t5_32xd8: !0,
				t5_263axm: !0,
				t5_2zovoe: !0,
				t5_27wn3a: !0,
				t5_45cqeg: !0,
				t5_3w2er5: !0,
				t5_2ybm2: !0,
				t5_2s6lj: !0,
				t5_2srfv: !0,
				t5_2xv1l: !0,
				t5_3j0bs: !0,
				t5_2rips: !0,
				t5_ovyqm: !0,
				t5_3mro3f: !0,
				t5_2zcqw: !0,
				t5_2ribq: !0,
				t5_2yj3r: !0,
				t5_35nx70: !0,
				t5_2stpq3: !0,
				t5_2oy0od: !0,
				t5_30s0l: !0,
				t5_3pujx: !0,
				t5_3wbu6f: !0,
				t5_2x1s6: !0,
				t5_4ib2wv: !0,
				t5_2u3bu: !0,
				t5_2se32: !0,
				t5_2s1qy: !0,
				t5_r1og0: !0,
				t5_4iad1o: !0,
				t5_3jd8b: !0,
				t5_3gyyx: !0,
				t5_2sodo: !0,
				t5_47945r: !0,
				t5_564w01: !0,
				t5_4iihjc: !0,
				t5_2rr3c: !0,
				t5_3bmcp: !0,
				t5_2wihz: !0,
				t5_2ssp9: !0,
				t5_3rd0p7: !0,
				t5_2h6zwt: !0,
				t5_3ctla: !0,
				t5_2so28: !0,
				t5_23f0ms: !0,
				t5_4qdiih: !0,
				t5_2twp0: !0,
				t5_2qpbp: !0,
				t5_2ur93: !0,
				t5_396b1: !0,
				t5_2ui1h: !0,
				t5_32qt5: !0,
				t5_4x6jti: !0,
				t5_30d81b: !0,
				t5_3jth5: !0,
				t5_2t1un: !0,
				t5_31ltl: !0,
				t5_2uuwv: !0,
				t5_2nk0tj: !0,
				t5_2uzi3: !0,
				t5_2tx6t: !0,
				t5_fwqfi: !0,
				t5_1229nt: !0,
				t5_32ypc: !0,
				t5_2y5mp: !0,
				t5_2sk0k: !0,
				t5_3eaxt: !0,
				t5_3547e: !0,
				t5_2f0vl9: !0,
				t5_2se3o: !0,
				t5_39ws4: !0,
				t5_2xgo8f: !0,
				t5_2yxon: !0,
				t5_530ocn: !0,
				t5_2juhh9: !0,
				t5_2sl9n: !0,
				t5_12oaeb: !0,
				t5_5fb9uc: !0,
				t5_2lsok3: !0,
				t5_2rb54: !0,
				t5_2xy1l: !0,
				t5_3cn79f: !0,
				t5_2rsmt: !0,
				t5_2y8sc: !0,
				t5_323tx7: !0,
				t5_39xb5: !0,
				t5_2tjrq: !0,
				t5_46up4i: !0,
				t5_4je4hf: !0,
				t5_2zczk: !0,
				t5_2xhob: !0,
				t5_m3qch: !0,
				t5_2rcg0: !0,
				t5_41bmr4: !0,
				t5_2yxn6: !0,
				t5_33p1y: !0,
				t5_2h6hat: !0,
				t5_10u4gh: !0,
				t5_31ndt: !0,
				t5_2s9y5: !0,
				t5_4ph3dr: !0,
				t5_3ct5z: !0,
				t5_3buzc: !0,
				t5_3b4myv: !0,
				t5_2qxjk: !0,
				t5_2u1d8: !0,
				t5_32oat1: !0,
				t5_4r8dta: !0,
				t5_5fkudd: !0,
				t5_2ylwq: !0,
				t5_3ezada: !0,
				t5_2s71c: !0,
				t5_2x9gs3: !0,
				t5_3j5irf: !0,
				t5_3sdawh: !0,
				t5_2tiwy: !0,
				t5_2qhiu: !0,
				t5_3iqz6m: !0,
				t5_37klq: !0,
				t5_2vl22: !0,
				t5_2uxu9: !0,
				t5_3a48d: !0,
				t5_2uvig: !0,
				t5_2oqc4s: !0,
				t5_g9c2o: !0,
				t5_48im6s: !0,
				t5_31pof: !0,
				t5_2r443: !0,
				t5_gjq1k: !0,
				t5_o7ugh: !0,
				t5_3n9v8: !0,
				t5_3dnf5j: !0,
				t5_353sm: !0,
				t5_22ym08: !0,
				t5_2yg6lw: !0,
				t5_2s41rk: !0,
				t5_2i8a1q: !0,
				t5_3a7b5: !0,
				t5_392we: !0,
				t5_2vru17: !0,
				t5_4oacny: !0,
				t5_2xuc0: !0,
				t5_2ufxh: !0,
				t5_2159l8: !0,
				t5_u438e: !0,
				t5_33sjt: !0,
				t5_3cep9t: !0,
				t5_4329fr: !0,
				t5_2zu2v: !0,
				t5_2zt44: !0,
				t5_3334a: !0,
				t5_ujpst: !0,
				t5_2tjbz: !0,
				t5_3m2nd: !0,
				t5_3bkgt: !0,
				t5_50fiq5: !0,
				t5_4j0fba: !0,
				t5_2oq6qb: !0,
				t5_2eos81: !0,
				t5_3l6sb: !0,
				t5_4jxy64: !0,
				t5_3uov4y: !0,
				t5_2oihaz: !0,
				t5_3bpjr1: !0,
				t5_acnqr: !0,
				t5_2bqkcj: !0,
				t5_2da4g7: !0,
				t5_2s95r: !0,
				t5_344td: !0,
				t5_3hzldl: !0,
				t5_2sndv: !0,
				t5_2tn75: !0,
				t5_2xt84: !0,
				t5_3ii51: !0,
				t5_hx8kx: !0,
				t5_4hbbsm: !0,
				t5_2sevn: !0,
				t5_32zxv: !0,
				t5_3qa27l: !0,
				t5_3b2oe: !0,
				t5_2xuj2i: !0,
				t5_3zwte5: !0,
				t5_2wv1z: !0,
				t5_2srwh: !0,
				t5_2t10pj: !0,
				t5_2s86k: !0,
				t5_27r3ol: !0,
				t5_2rgv8: !0,
				t5_347vz: !0,
				t5_4fs4y5: !0,
				t5_3iyxd: !0,
				t5_48x31i: !0,
				t5_3idz6: !0,
				t5_2u3rm: !0,
				t5_38ky1: !0,
				t5_3bkjv: !0,
				t5_4vwpd4: !0,
				t5_2riou: !0,
				t5_4o5b6c: !0,
				t5_2yg1v1: !0,
				t5_mst4v: !0,
				t5_31afca: !0,
				t5_2ukr5: !0,
				t5_3afcvz: !0,
				t5_2bm11v: !0,
				t5_3ihiv: !0,
				t5_3c5t4: !0,
				t5_13sd4q: !0,
				t5_2hu4h4: !0,
				t5_2m2gce: !0,
				t5_3bogm: !0,
				t5_3a6r8: !0,
				t5_3k1ex: !0,
				t5_vt3kk: !0,
				t5_2ck7mn: !0,
				t5_gu99p: !0,
				t5_32m3s: !0,
				t5_2wh6n: !0,
				t5_2vjdj: !0,
				t5_2r6f5: !0,
				t5_4wafps: !0,
				t5_l0045: !0,
				t5_2t87c: !0,
				t5_2w4cvt: !0,
				t5_2s624: !0,
				t5_3h6re: !0,
				t5_39qp3: !0,
				t5_4seqjd: !0,
				t5_2re4m: !0,
				t5_3crpje: !0,
				t5_2d9k9w: !0,
				t5_4sau4n: !0,
				t5_3nrh5: !0,
				t5_3bdpr: !0,
				t5_3awid: !0,
				t5_244x0l: !0,
				t5_3ywhdq: !0,
				t5_2r7ki: !0,
				t5_39nby: !0,
				t5_30jq8p: !0,
				t5_30y9f: !0,
				t5_2723fr: !0,
				t5_2ijh9u: !0,
				t5_4e6ca3: !0,
				t5_3b1tw: !0,
				t5_2d9ixw: !0,
				t5_3fvwr: !0,
				t5_2tmd8: !0,
				t5_2htz3b: !0,
				t5_3fcnd: !0,
				t5_2rvg9x: !0,
				t5_hi9bg: !0,
				t5_2pqqu8: !0,
				t5_2skgz: !0,
				t5_31vap: !0,
				t5_2xaog: !0,
				t5_2dqnia: !0,
				t5_2tt6i: !0,
				t5_5e05ko: !0,
				t5_2qtjw: !0,
				t5_3e2eq: !0,
				t5_2yibm: !0,
				t5_bw2fp: !0,
				t5_316uk: !0,
				t5_9z0l4: !0,
				t5_2ylnc: !0,
				t5_4iuj23: !0,
				t5_4rwwrm: !0,
				t5_2wyfbt: !0,
				t5_29ieq6: !0,
				t5_2sv442: !0,
				t5_2etpnw: !0,
				t5_2oph55: !0,
				t5_2qob4: !0,
				t5_2ig1mm: !0,
				t5_15aerf: !0,
				t5_10hrkp: !0,
				t5_3kr0uk: !0,
				t5_3ewv6: !0,
				t5_2c0bxj: !0,
				t5_2unqp1: !0,
				t5_11etuk: !0,
				t5_2buhwa: !0,
				t5_326u7: !0,
				t5_2ryuf: !0,
				t5_2t74y: !0,
				t5_2p60u6: !0,
				t5_2sdef: !0,
				t5_2s6mp: !0,
				t5_2pmg02: !0,
				t5_2tb2f: !0,
				t5_9khmz: !0,
				t5_2hfkqs: !0,
				t5_3qyjej: !0,
				t5_2oc9zp: !0,
				t5_37czwl: !0,
				t5_2zwyrz: !0,
				t5_427wno: !0,
				t5_37839: !0,
				t5_2dhqf3: !0,
				t5_2sbb0: !0,
				t5_2z9mh: !0,
				t5_2pm5pm: !0,
				t5_27mh0w: !0,
				t5_2rd14: !0,
				t5_2r63a: !0,
				t5_2sekx: !0,
				t5_47g0kq: !0,
				t5_4dofvx: !0,
				t5_2wk9n: !0,
				t5_2ijyph: !0,
				t5_2u60n: !0,
				t5_4h75r0: !0,
				t5_2g2wzc: !0,
				t5_11241l: !0,
				t5_31bh7: !0,
				t5_3ns4p: !0,
				t5_3ma60: !0,
				t5_2taq4: !0,
				t5_roatt: !0,
				t5_2vifh: !0,
				t5_5ewzpj: !0,
				t5_2gca3l: !0,
				t5_2ufjph: !0,
				t5_5en7en: !0,
				t5_2hcvml: !0,
				t5_2qohd: !0,
				t5_2txx1: !0,
				t5_3ep3d: !0,
				t5_2ghlyp: !0,
				t5_2d7arm: !0,
				t5_2yv4t: !0,
				t5_2xkof: !0,
				t5_2vpxdq: !0,
				t5_38sx83: !0,
				t5_378lb: !0,
				t5_4nwzti: !0,
				t5_2vkui: !0,
				t5_3k1e5: !0,
				t5_4brtgv: !0,
				t5_k2jsc: !0,
				t5_2oktjz: !0,
				t5_2w1w2h: !0,
				t5_2ymyu: !0,
				t5_vqq5o: !0,
				t5_38jc2: !0,
				t5_4s268c: !0,
				t5_iangf: !0,
				t5_3bfwn: !0,
				t5_37mbk: !0,
				t5_5f0was: !0,
				t5_3050rm: !0,
				t5_4qjkqh: !0,
				t5_2sfm0: !0,
				t5_4itz2f: !0,
				t5_53shen: !0,
				t5_4gdu6u: !0,
				t5_37rlo: !0,
				t5_23sjsg: !0,
				t5_2sm2b: !0,
				t5_znwx7: !0,
				t5_34ggw: !0,
				t5_3naiq1: !0,
				t5_33756q: !0,
				t5_23zs1q: !0,
				t5_2k44q2: !0,
				t5_2htznc: !0,
				t5_2ayr5e: !0,
				t5_2xg89: !0,
				t5_2x0nv: !0,
				t5_2c0g4d: !0,
				t5_37h29g: !0,
				t5_3pars: !0,
				t5_11hh9v: !0,
				t5_2t1z3: !0,
				t5_4bhd5o: !0,
				t5_3fpjd: !0,
				t5_38kg2: !0,
				t5_51linl: !0,
				t5_3d7cg8: !0,
				t5_2qxcq: !0,
				t5_2sgef: !0,
				t5_4j0617: !0,
				t5_2vid4: !0,
				t5_2r8co: !0,
				t5_2r6r1: !0,
				t5_42qjt9: !0,
				t5_3l54en: !0,
				t5_4bqwxv: !0,
				t5_35szq: !0,
				t5_5feav5: !0,
				t5_4mc22t: !0,
				t5_3ynleb: !0,
				t5_3vv7dp: !0,
				t5_xzs32: !0,
				t5_2w3j5: !0,
				t5_4rkvpi: !0,
				t5_3jj9li: !0,
				t5_2liyx4: !0,
				t5_3a7as1: !0,
				t5_2s5w4: !0,
				t5_35oga: !0,
				t5_2wdr5: !0,
				t5_124uvi: !0,
				t5_41urvu: !0,
				t5_38u2r: !0,
				t5_2xxh8: !0,
				t5_2su71: !0,
				t5_2re12: !0,
				t5_36gpui: !0,
				t5_2otzzc: !0,
				t5_4tdvb9: !0,
				t5_ztq9p: !0,
				t5_5fzphw: !0,
				t5_2sf3p: !0,
				t5_3lm6p: !0,
				t5_3e5rb: !0,
				t5_4c8s7z: !0,
				t5_sjvw0: !0,
				t5_3d2fn: !0
			};
			var s = i("./src/reddit/constants/experiments.ts"),
				o = i("./src/reddit/helpers/chooseVariant/index.ts"),
				d = i("./src/reddit/selectors/experiments/index.ts"),
				a = i("./src/reddit/selectors/experiments/utils.ts"),
				l = i("./src/reddit/selectors/platform.ts");
			const u = 10,
				c = Object(n.a)(d.f, l.l, l.f, l.c, (e, t, i, n) => t || i ? e && !!n && !r[n] : e),
				_ = Object(n.a)(e => Object(o.c)(e, {
					experimentEligibilitySelector: c,
					experimentName: s.ub,
					throttledVariants: {
						[s.ab.SoftBlockingThrottledDaily]: s.bb.Daily,
						[s.ab.SoftBlockingThrottledWeekly]: s.bb.Weekly
					}
				}), a.a),
				m = Object(n.a)(_, e => !!Object(a.a)(e)),
				p = Object(n.a)(_, e => e === s.ab.HardBlocking);
			Object(n.a)(_, e => e !== s.ab.HardBlocking)
		},
		"./src/reddit/selectors/experiments/magicLink.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts"),
				o = i("./src/reddit/selectors/experiments/index.ts"),
				d = i("./src/reddit/selectors/experiments/utils.ts");
			const a = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: o.e,
					experimentName: r.Gd,
					expEventOverride: !1
				}), d.a),
				l = e => Object(s.c)(e, {
					experimentEligibilitySelector: o.e,
					experimentName: r.Gd
				})
		},
		"./src/reddit/selectors/experiments/nsfwListingBelow.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			}));
			var n = i("./src/reddit/selectors/meta.ts"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts"),
				o = i("./src/reddit/models/WhitelistStatus/index.ts"),
				d = i("./src/reddit/selectors/platform.ts"),
				a = i("./src/reddit/selectors/user.ts"),
				l = i("./node_modules/reselect/es/index.js");
			const u = Object(l.a)(n.c, a.N, a.O, d.f, d.e, n.b, (e, t, i, n, r, s) => !e && !t && !i && n && "DE" === s && !!r && r.isNSFW && !o.a.has(r.wls || o.b.NO_ADS)),
				c = e => Object(s.c)(e, {
					experimentEligibilitySelector: u,
					experimentName: r.ae
				})
		},
		"./src/reddit/selectors/experiments/postSeo.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return p
			})), i.d(t, "b", (function() {
				return f
			})), i.d(t, "e", (function() {
				return b
			})), i.d(t, "g", (function() {
				return g
			})), i.d(t, "h", (function() {
				return w
			})), i.d(t, "c", (function() {
				return v
			})), i.d(t, "f", (function() {
				return y
			})), i.d(t, "a", (function() {
				return E
			})), i.d(t, "d", (function() {
				return S
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts"),
				o = i("./src/reddit/helpers/name/index.ts"),
				d = i("./src/reddit/models/Media/index.ts"),
				a = i("./src/reddit/models/RichTextJson/index.ts"),
				l = i("./src/reddit/selectors/meta.ts"),
				u = i("./src/reddit/selectors/posts.ts"),
				c = i("./src/reddit/selectors/user.ts"),
				_ = i("./src/reddit/selectors/platform.ts");
			i("./src/reddit/selectors/seo/index.ts");
			const m = Object(n.a)(l.m, e => {
					return "reddit.com" !== e.split(".").splice(1).join(".")
				}),
				p = (e, {
					post: t
				}) => {
					const i = Object(u.U)(e, t);
					return i && i.displayText || t && t.author && Object(o.d)(t.author)
				},
				h = (e, t, i) => Object(_.f)(e) && !Object(_.i)(e) && !!t && !!t.title && t.title.length <= 200 && !t.isNSFW && !!t.media && (Object(d.F)(t.media) || Object(d.K)(t.media)) && (e => !!e && !!e.media && (Object(d.F)(e.media) && (e => /https?:\/\/i\.redd\.it/.test(e))(e.media.content) || Object(d.K)(e.media) && e.media.richtextContent && e.media.richtextContent.document && e.media.richtextContent.document.some(({
					e
				}) => e === a.m)))(t) && (i && !t.media.altText || !i),
				f = (e, t) => {
					const i = !!t && !!t.media && (Object(d.F)(t.media) || Object(d.K)(t.media)) && t.media.altText;
					return h(e, t, !1) && !!i && i.length <= 250 && t.title.toLowerCase() !== i.toLowerCase()
				},
				b = Object(n.a)(c.O, m, (e, t) => !e && t),
				g = e => {
					const t = m(e);
					return Object(s.c)(e, {
						experimentName: r.ke,
						experimentEligibilitySelector: () => t
					})
				},
				w = e => {
					const t = m(e);
					return Object(s.c)(e, {
						experimentName: r.me,
						experimentEligibilitySelector: () => t
					})
				},
				v = e => e === r.xe.IdCard,
				y = e => e === r.xe.RailSwap,
				E = (e, t) => {
					const i = Object(u.G)(e, {
						postId: t
					});
					return i && i.media && (Object(d.F)(i.media) || Object(d.K)(i.media)) ? i.media.altText : null
				},
				S = e => !!Object(s.b)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.pd,
					expEventOverride: !1
				})
		},
		"./src/reddit/selectors/experiments/searchQueryAligment.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/helpers/chooseVariant/index.ts"),
				s = i("./node_modules/reselect/es/index.js");
			const o = Object(s.a)(e => Object(r.c)(e, {
				experimentEligibilitySelector: r.a,
				experimentName: n.Mb
			}), e => e === n.fc.Enabled)
		},
		"./src/reddit/selectors/experiments/serpRedesignLayout.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/helpers/chooseVariant/index.ts"),
				s = i("./node_modules/reselect/es/index.js");
			const o = Object(s.a)(e => Object(r.c)(e, {
				experimentEligibilitySelector: r.a,
				experimentName: n.Pb
			}), e => e === n.gc.Redesign)
		},
		"./src/reddit/selectors/experiments/serpSIIDs.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			}));
			var n = i("./src/reddit/constants/experiments.ts"),
				r = i("./src/reddit/helpers/chooseVariant/index.ts"),
				s = i("./node_modules/reselect/es/index.js");
			const o = Object(s.a)(e => Object(r.c)(e, {
				experimentEligibilitySelector: r.a,
				experimentName: n.Nb
			}), e => e === n.bd)
		},
		"./src/reddit/selectors/experiments/survey.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return f
			})), i.d(t, "c", (function() {
				return g
			})), i.d(t, "e", (function() {
				return w
			})), i.d(t, "d", (function() {
				return v
			})), i.d(t, "h", (function() {
				return y
			})), i.d(t, "a", (function() {
				return E
			})), i.d(t, "f", (function() {
				return S
			})), i.d(t, "g", (function() {
				return O
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/experiments.ts"),
				s = i("./src/reddit/helpers/chooseVariant/index.ts"),
				o = i("./src/reddit/helpers/survey/index.ts"),
				d = i("./src/reddit/models/Subreddit/index.ts"),
				a = i("./src/reddit/selectors/experiments/utils.ts"),
				l = i("./src/reddit/selectors/isModeratorOfSubreddit.ts"),
				u = i("./src/reddit/selectors/platform.ts"),
				c = i("./src/reddit/selectors/survey.ts");
			const _ = ({
					experimentName: e,
					experimentVariant: t = "enabled",
					experimentEligibilitySelector: i,
					filteringLogic: n,
					triggerName: o
				}) => d => !(void 0 !== n && !n(d)) && (!!((e, t) => Object(c.c)(e) && Object(c.a)(e) === t)(d, o) || !(e => Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.Xe
				}) === r.ef.Enabled)(d) && Object(s.c)(d, {
					experimentEligibilitySelector: i || s.a,
					experimentName: e
				}) === t),
				m = _({
					experimentName: r.Xd,
					triggerName: o.b.feed_scroll_1_page
				}),
				p = _({
					experimentName: "survey_demo_nps_1",
					triggerName: o.b.feed_scroll_1_page
				}),
				h = _({
					experimentName: "survey_demo_combined_1",
					triggerName: o.b.feed_scroll_1_page
				}),
				f = _({
					experimentName: "d2x_layer_survey",
					triggerName: o.b.layer_feed_scroll_1_page,
					filteringLogic: e => e.subscriptions.subredditOrder.includes("t5_32b7p")
				}),
				b = _({
					experimentName: "d2x_belonging_survey",
					triggerName: o.b.feed_scroll_1_page
				}),
				g = _({
					experimentName: "d2x_mods_survey",
					triggerName: o.b.mods_feed_scroll_1_page,
					filteringLogic: e => {
						const t = Object(u.e)(e);
						return !(!t || Object(d.h)(t)) && Object(l.c)(e, {
							subredditId: t.id
						})
					}
				}),
				w = e => g(e) || f(e) || m(e) || p(e) || b(e) || h(e),
				v = _({
					experimentName: r.Vd,
					triggerName: o.b.dismiss_post
				}),
				y = _({
					experimentName: r.kf,
					triggerName: o.b.videos_watched
				}),
				E = _({
					experimentName: r.Wd,
					triggerName: o.b.dismiss_signup_trigger
				}),
				S = _({
					experimentName: r.Yd,
					triggerName: o.b.successful_signup_trigger
				}),
				T = Object(n.a)(e => Object(s.c)(e, {
					experimentEligibilitySelector: s.a,
					experimentName: r.Ye
				}), a.a),
				O = Object(n.a)(T, e => e === r.bd)
		},
		"./src/reddit/selectors/experiments/utils.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/reddit/constants/experiments.ts");
			const r = e => {
				if (!Object(n.vf)(e)) return e || void 0
			}
		},
		"./src/reddit/selectors/features/predictions/tournaments/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return c
			})), i.d(t, "i", (function() {
				return _
			})), i.d(t, "k", (function() {
				return m
			})), i.d(t, "g", (function() {
				return h
			})), i.d(t, "f", (function() {
				return f
			})), i.d(t, "b", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "c", (function() {
				return w
			})), i.d(t, "e", (function() {
				return v
			})), i.d(t, "l", (function() {
				return y
			})), i.d(t, "h", (function() {
				return E
			})), i.d(t, "j", (function() {
				return S
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/lib/initializeClient/installReducer.ts"),
				s = i("./src/reddit/reducers/features/predictions/index.ts"),
				o = i("./src/reddit/models/Prediction/index.ts"),
				d = i("./src/reddit/models/Prediction/Tournament/index.ts"),
				a = i("./src/reddit/selectors/poll/index.ts"),
				l = i("./src/reddit/selectors/posts.ts"),
				u = i("./src/reddit/selectors/user.ts");
			Object(r.a)({
				features: {
					predictions: s.a
				}
			});
			const c = (e, t) => {
					var i, n;
					return (null === (n = null === (i = e.features) || void 0 === i ? void 0 : i.predictions) || void 0 === n ? void 0 : n.tournaments[t]) || null
				},
				_ = (e, t) => {
					var i, n, r;
					return Boolean(null === (r = null === (n = null === (i = e.features) || void 0 === i ? void 0 : i.predictions) || void 0 === n ? void 0 : n.tournamentsBySubreddit[t.subredditId]) || void 0 === r ? void 0 : r.isFetchedFullInfo)
				},
				m = (e, t) => {
					var i, n, r;
					return (null === (r = null === (n = null === (i = e.features) || void 0 === i ? void 0 : i.predictions) || void 0 === n ? void 0 : n.tournamentsBySubreddit[t.subredditId]) || void 0 === r ? void 0 : r.isFetching) || !1
				},
				p = (e, t) => {
					var i, n, r;
					return (null === (r = null === (n = null === (i = e.features) || void 0 === i ? void 0 : i.predictions) || void 0 === n ? void 0 : n.tournamentsBySubreddit[t.subredditId]) || void 0 === r ? void 0 : r.tournaments) || []
				},
				h = Object(n.a)(p, e => {
					var t, i;
					return (null === (i = null === (t = e.features) || void 0 === t ? void 0 : t.predictions) || void 0 === i ? void 0 : i.tournaments) || {}
				}, (e, t) => {
					return e.map(e => t[e]).sort((e, t) => (t.createdAt || 0) - (e.createdAt || 0))
				}),
				f = (e, t) => {
					const i = h(e, t);
					return i.length ? i[0] : null
				},
				b = (e, t) => {
					const i = f(e, t);
					return i ? i.status !== d.a.Live && i.status !== d.a.LiveInProgress ? null : i : null
				},
				g = (e, t) => !!p(e, t).length,
				w = (e, t) => !!b(e, t),
				v = Object(n.a)(b, e => e, (e, t) => {
					if (!e) return !1;
					return Object(a.h)(t, null == e ? void 0 : e.tournamentId).some(({
						endsAt: e,
						resolvedOptionId: t,
						predictionStatus: i
					}) => e > Date.now() && !t && i === o.b.Open)
				}),
				y = Object(n.a)(f, l.h, l.J, u.ib, (e, t, i, n) => {
					var r;
					return (null === (r = null == e ? void 0 : e.predictionPosts) || void 0 === r ? void 0 : r.length) ? null == e ? void 0 : e.predictionPosts.reduce((e, r) => {
						if (t.includes(r)) return e;
						const s = i[r];
						return !s || !n && s.isNSFW || (e[r] = s), e
					}, {}) : {}
				}),
				E = (e, t) => {
					const i = b(e, t);
					return !!i && Object(a.h)(e, i.tournamentId).every(e => null !== e.resolvedOptionId || e.predictionStatus === o.b.Cancelled || e.predictionStatus === o.b.CancelInProgress)
				},
				S = Object(n.a)(f, e => !!e && e.status === d.a.LiveInProgress)
		},
		"./src/reddit/selectors/frontpage.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/selectors/experiments/bestSortPopular.ts");
			const s = e => e.user && e.user.session && !e.user.session.unsafeLoggedOut || Object(r.a)(e) ? n.W.BEST : n.W.HOT
		},
		"./src/reddit/selectors/gold/powerups/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "k", (function() {
				return c
			})), i.d(t, "h", (function() {
				return m
			})), i.d(t, "p", (function() {
				return p
			})), i.d(t, "r", (function() {
				return f
			})), i.d(t, "s", (function() {
				return b
			})), i.d(t, "o", (function() {
				return g
			})), i.d(t, "q", (function() {
				return w
			})), i.d(t, "t", (function() {
				return v
			})), i.d(t, "j", (function() {
				return y
			})), i.d(t, "i", (function() {
				return E
			})), i.d(t, "m", (function() {
				return S
			})), i.d(t, "n", (function() {
				return T
			})), i.d(t, "a", (function() {
				return O
			})), i.d(t, "z", (function() {
				return I
			})), i.d(t, "w", (function() {
				return R
			})), i.d(t, "y", (function() {
				return F
			})), i.d(t, "x", (function() {
				return N
			})), i.d(t, "e", (function() {
				return C
			})), i.d(t, "d", (function() {
				return j
			})), i.d(t, "c", (function() {
				return A
			})), i.d(t, "f", (function() {
				return x
			})), i.d(t, "g", (function() {
				return L
			})), i.d(t, "l", (function() {
				return k
			})), i.d(t, "v", (function() {
				return B
			})), i.d(t, "b", (function() {
				return M
			})), i.d(t, "u", (function() {
				return U
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/reddit/selectors/subscriptions.ts"),
				r = i("./node_modules/reselect/es/index.js"),
				s = i("./src/reddit/models/Gold/Powerups/index.ts"),
				o = i("./src/reddit/selectors/moderatorPermissions.ts"),
				d = i("./src/lib/initializeClient/installReducer.ts"),
				a = i("./src/reddit/reducers/features/goldPurchase/index.ts"),
				l = i("./src/reddit/selectors/subreddit.ts"),
				u = i("./src/reddit/selectors/user.ts");
			Object(d.a)({
				features: {
					goldPurchase: a.a
				}
			});
			const c = (e, {
					subredditId: t
				}) => t ? e.subreddits.powerups[t] : null,
				_ = (e, {
					subredditId: t
				}) => t ? e.subreddits.powerupsEmojis[t] : null,
				m = Object(r.a)(c, e => !!e),
				p = (e, {
					subredditId: t,
					benefit: i
				}) => {
					var n;
					return null === (n = ((e, {
						subredditId: t
					}) => {
						var i;
						return (null === (i = c(e, {
							subredditId: t
						})) || void 0 === i ? void 0 : i.benefits) || []
					})(e, {
						subredditId: t
					})) || void 0 === n ? void 0 : n.includes(i)
				},
				h = e => Object(r.a)(c, t => {
					var i;
					return !!(null === (i = null == t ? void 0 : t.benefits) || void 0 === i ? void 0 : i.includes(e))
				}),
				f = h(s.a.CommentsWithEmoji),
				b = h(s.a.CommentsWithGifs),
				g = h(s.a.Achievements),
				w = h(s.a.CommunityGear),
				v = (e, {
					subredditId: t
				}) => {
					const i = c(e, {
						subredditId: t
					});
					if (!i) return !1;
					const {
						benefits: n
					} = i;
					return n && n.some(e => e === s.a.HdVideo || e === s.a.SdVideo || e === s.a.PostsImageUpload)
				},
				y = (e, t) => {
					var i;
					const n = _(e, t);
					return (null === (i = null == n ? void 0 : n.free_emotes_pack) || void 0 === i ? void 0 : i.emotes) || []
				},
				E = (e, {
					subredditId: t
				}) => {
					var i;
					if (!t) return [];
					const n = _(e, {
						subredditId: t
					});
					return (null === (i = null == n ? void 0 : n[t]) || void 0 === i ? void 0 : i.emotes) || []
				},
				S = (e, {
					subredditId: t
				}) => {
					if (t) return e.subreddits.powerupTopSupporters[t]
				},
				T = Object(r.a)(S, e => {
					if (!e) return;
					const t = e.filter(s.c);
					if (!t.length) return e;
					const i = {
						supporterInfo: null,
						score: t.reduce((e, t) => e + t.score, 0),
						lastSupportedAt: t[t.length - 1].lastSupportedAt
					};
					return [...e.filter(e => !Object(s.c)(e)), i]
				}),
				O = (e, {
					subredditId: t,
					userId: i
				}) => {
					const n = S(e, {
						subredditId: t
					});
					return !!n && n.some(e => !!e.supporterInfo && e.supporterInfo.id === i)
				},
				I = e => e.user.powerups.data,
				R = Object(r.a)(I, e => !!(null == e ? void 0 : e.freeCount)),
				F = e => e.user.powerups.allocationByKey,
				N = Object(r.a)([F, (e, {
					subredditId: t
				}) => t], (e, t) => Object.values(e).some(e => e.subredditInfo.id === t)),
				C = e => e.features.goldPurchase.powerupsPurchaseModal.powerupsCount,
				j = e => e.features.goldPurchase.powerupsPurchaseModal.isAnonymous,
				A = e => e.features.goldPurchase.powerupsPurchaseModal.freeReallocation.pending,
				x = e => e.users.powerups.allocationByKey,
				D = Object(r.a)(c, e => null == e ? void 0 : e.count),
				P = Object(r.a)(c, e => {
					if (!e) return;
					const {
						tiersInfo: t
					} = e, i = t.find(e => 2 === e.tier);
					return null == i ? void 0 : i.powerupsCost
				}),
				L = Object(r.a)(c, e => {
					var t;
					if (!e) return;
					const {
						tiersInfo: i
					} = e, n = i.find(e => 2 === e.tier);
					return null === (t = null == n ? void 0 : n.benefits) || void 0 === t ? void 0 : t.includes(s.a.CommunityGear)
				}),
				k = Object(r.a)(D, P, (e, t) => {
					if (void 0 !== e && void 0 !== t) return e >= t
				}),
				B = Object(r.a)(o.e, o.f, o.g, (e, t, i) => e || t || i),
				M = Object(r.a)(l.S, m, o.f, u.L, (e, t, i, n) => !(!e || !i || t || e.isNSFW) && (!!n || e.subscribers >= 25e3)),
				U = e => {
					return Object(n.c)(e).filter(t => m(e, {
						subredditId: t.id
					}))
				}
		},
		"./src/reddit/selectors/gold/purchaseCatalog.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "f", (function() {
				return _
			})), i.d(t, "e", (function() {
				return m
			})), i.d(t, "r", (function() {
				return p
			})), i.d(t, "p", (function() {
				return h
			})), i.d(t, "l", (function() {
				return f
			})), i.d(t, "h", (function() {
				return b
			})), i.d(t, "m", (function() {
				return g
			})), i.d(t, "i", (function() {
				return w
			})), i.d(t, "j", (function() {
				return v
			})), i.d(t, "k", (function() {
				return y
			})), i.d(t, "o", (function() {
				return E
			})), i.d(t, "n", (function() {
				return S
			})), i.d(t, "q", (function() {
				return T
			})), i.d(t, "g", (function() {
				return O
			})), i.d(t, "b", (function() {
				return I
			}));
			var n = i("./src/reddit/selectors/communityAwards.ts"),
				r = i("./node_modules/reselect/es/index.js"),
				s = i("./src/lib/initializeClient/installReducer.ts"),
				o = i("./src/reddit/reducers/features/goldPurchase/index.ts"),
				d = i("./src/reddit/selectors/experiments/econ/index.ts"),
				a = i("./src/reddit/selectors/user.ts");
			Object(s.a)({
				features: {
					goldPurchase: o.a
				}
			});
			const l = e => e.features.goldPurchase.purchaseCatalog.activeSaleConfig,
				u = e => {
					return e.features.goldPurchase.purchaseCatalog.coinPackages.storefrontPackageIds.map(t => e.features.goldPurchase.purchaseCatalog.coinPackages.models[t])
				},
				c = (e, t) => {
					return u(e).find(e => e.mobileId === t)
				},
				_ = e => {
					return e.features.goldPurchase.purchaseCatalog.coinPackages.dealPackageIds.map(t => e.features.goldPurchase.purchaseCatalog.coinPackages.models[t])
				},
				m = (e, t) => {
					return _(e).filter(e => e.mobileId === t)[0]
				},
				p = e => {
					return e.features.goldPurchase.purchaseCatalog.coinPackages.recommendedPackageIds.map(t => e.features.goldPurchase.purchaseCatalog.coinPackages.models[t])
				},
				h = (e, t) => {
					var i;
					const r = e.features.goldPurchase.purchaseCatalog.coinPackages.recommendedPackageIds;
					if (!Object(d.h)(e)) return r[0];
					const s = r.map(t => e.features.goldPurchase.purchaseCatalog.coinPackages.models[t]);
					if (!t) return null === (i = s.find(e => {
						var t;
						return null === (t = e.tags) || void 0 === t ? void 0 : t.includes("recommended_for_profile")
					})) || void 0 === i ? void 0 : i.mobileId;
					const o = Object(n.a)(e, t),
						l = Object(a.e)(e),
						u = s.filter(e => {
							var t;
							return null === (t = e.tags) || void 0 === t ? void 0 : t.includes("recommended_candidate")
						}).sort((e, t) => e.coins - t.coins).find(e => l + e.coins > o.coinPrice);
					return null == u ? void 0 : u.mobileId
				},
				f = e => e.features.goldPurchase.purchaseCatalog.premiumPackages,
				b = Object(r.a)(f, e => {
					if (!(null == e ? void 0 : e.length)) return;
					const {
						signupBonusCoins: t
					} = e[0];
					return t
				}),
				g = Object(r.a)(b, e => e && e > 0 ? e.toLocaleString() : void 0),
				w = Object(r.a)(f, e => {
					var t;
					const i = null === (t = null == e ? void 0 : e[0]) || void 0 === t ? void 0 : t.defaultSignupBonusCoins;
					return i && i > 0 ? i.toLocaleString() : void 0
				}),
				v = e => {
					const t = f(e);
					if (!(null == t ? void 0 : t.length)) return;
					const {
						periodicalCoins: i
					} = t[0];
					return i.toLocaleString()
				},
				y = (e, t) => {
					return f(e).find(e => e.mobileId === t)
				},
				E = e => e.features.goldPurchase.purchaseCatalog.api.storefrontPending,
				S = e => e.features.goldPurchase.purchaseCatalog.api.errorMessage,
				T = e => e.features.goldPurchase.purchaseCatalog.api.recommendedPending,
				O = e => {
					var t;
					return !!(null === (t = e.features.goldPurchase.purchaseCatalog.freeAwardEvent) || void 0 === t ? void 0 : t.isEnabled)
				},
				I = e => {
					var t;
					const i = null === (t = e.features.goldPurchase.purchaseCatalog.freeAwardEvent) || void 0 === t ? void 0 : t.awardIds[0];
					return i ? Object(n.a)(e, i) : null
				}
		},
		"./src/reddit/selectors/header.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => e.header.isSubscriptionsDropdownOpen
		},
		"./src/reddit/selectors/imageUploads.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			})), i.d(t, "c", (function() {
				return o
			}));
			var n = i("./src/reddit/models/Image/index.tsx");
			const r = e => e.imageUploads,
				s = (e, {
					id: t
				}) => {
					return r(e)[t]
				},
				o = (e, t) => {
					const i = r(e),
						s = [];
					for (const r in i) {
						const e = i[r];
						e.kind === n.b.TempUploaded && e.context === t && s.push(e)
					}
					return s
				}
		},
		"./src/reddit/selectors/interceptedAction.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => e.interceptedAction
		},
		"./src/reddit/selectors/isModeratorOfSubreddit.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			}));
			var n = i("./node_modules/lodash/values.js"),
				r = i.n(n),
				s = i("./src/reddit/selectors/platform.ts");
			const o = e => !!(e.user && e.user.account && e.user.account.isAdmin),
				d = (e, {
					subredditId: t
				}) => {
					const i = e.moderatingSubreddits[t];
					return o(e) || !(!i || !r()(i).some(e => e))
				},
				a = e => {
					const t = Object(s.e)(e);
					if (!t) return !1;
					const i = e.moderatingSubreddits[t.id];
					return o(e) || !(!i || !r()(i).some(e => e))
				}
		},
		"./src/reddit/selectors/listings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			})), i.d(t, "g", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			})), i.d(t, "h", (function() {
				return _
			})), i.d(t, "i", (function() {
				return m
			})), i.d(t, "f", (function() {
				return p
			})), i.d(t, "j", (function() {
				return h
			}));
			var n = i("./src/lib/objectSelector/index.ts"),
				r = i("./src/lib/safeGet/index.ts");
			const s = (e, {
					listingKey: t
				}) => Object(r.a)(e.listings.postOrder.api.error, t),
				o = (e, {
					listingKey: t
				}) => Object(r.a)(e.listings.postOrder.api.pending, t),
				d = (e, t) => Object(r.a)(e.listings.postOrder.loadMore, t.listingKey),
				a = (e, {
					listingKey: t,
					token: i
				}) => Object(r.a)(e.listings.postOrder.fetchedTokens, t)[i],
				l = e => e.listings.activeKey,
				u = Object(n.a)((e, {
					postId: t
				}) => {
					const i = l(e);
					if (!i) return;
					const n = Object(r.a)(e.listings.postOrder.ids, i);
					if (!n) return;
					const s = e.posts.models,
						o = c({
							listings: n,
							posts: s,
							postId: t,
							dir: "next"
						}),
						d = c({
							listings: n,
							posts: s,
							postId: t,
							dir: "prev"
						}),
						a = e.posts.models[d];
					return {
						nextPost: e.posts.models[o],
						prevPost: a
					}
				}),
				c = ({
					listings: e,
					posts: t,
					postId: i,
					dir: n
				}) => {
					const r = e.indexOf(i);
					if (r < 0) return null;
					let s, o = r;
					do {
						s = e[o += "prev" === n ? -1 : 1]
					} while (t[s] && t[s].isBlank);
					return s
				},
				_ = (e, {
					listingKey: t
				}) => e.listings.listingOrder.api.pending[t],
				m = (e, {
					listingKey: t,
					token: i
				}) => e.listings.listingOrder.fetchedTokens[t][i],
				p = (e, {
					listingKey: t
				}) => !!e.listings.listingOrder.fetchedTokens[t],
				h = (e, {
					listingKey: t
				}) => e.listings.listingOrder.loadMore[t]
		},
		"./src/reddit/selectors/media.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "d", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			})), i.d(t, "c", (function() {
				return d
			}));
			const n = e => !r(e) && !!s(e),
				r = e => e.mediaPlayback.isMuted,
				s = e => e.mediaPlayback.volume,
				o = (e, t) => {
					var i;
					return (null === (i = e.mediaGalleries) || void 0 === i ? void 0 : i.currentSlideIndex[t]) || 0
				},
				d = (e, t) => e.mediaGalleries.isGalleryTileLayout[t]
		},
		"./src/reddit/selectors/meta.ts": function(e, t, i) {
			"use strict";
			i.d(t, "j", (function() {
				return o
			})), i.d(t, "a", (function() {
				return d
			})), i.d(t, "b", (function() {
				return a
			})), i.d(t, "i", (function() {
				return l
			})), i.d(t, "l", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "f", (function() {
				return m
			})), i.d(t, "h", (function() {
				return p
			})), i.d(t, "m", (function() {
				return h
			})), i.d(t, "e", (function() {
				return f
			})), i.d(t, "g", (function() {
				return b
			})), i.d(t, "k", (function() {
				return g
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/lib/constants/euCookiePolicy.ts"),
				s = i("./src/lib/getParsedUserAgent/index.ts");
			const o = e => `${e.meta.protocol}://${e.meta.domain}`,
				d = e => e.meta.city,
				a = e => e.meta.country,
				l = e => e.meta.locale,
				u = e => e.meta.region,
				c = e => e.meta.crawler,
				_ = e => e.meta.isBot,
				m = (Object(n.a)(e => e.meta.userAgent, e => Object(s.b)(e)), Object(n.a)(e => e.meta.userAgent, e => Object(s.f)(e)), Object(n.a)(e => e.meta.userAgent, e => Object(s.d)(e)), Object(n.a)(e => e.meta.userAgent, s.e)),
				p = Object(n.a)(e => e.meta.userAgent, s.h),
				h = e => e.meta && e.meta.sessionReferrerDomain,
				f = e => e.meta.country && r.a.includes(e.meta.country) || !1,
				b = e => e.meta.isSessionSeo,
				g = e => e.meta.popularGeoFilter
		},
		"./src/reddit/selectors/modModeEnabled.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r
			}));
			var n = i("./src/reddit/selectors/user.ts");
			const r = e => !!Object(n.O)(e) && e.modModeEnabled
		},
		"./src/reddit/selectors/moderatorPermissions.ts": function(e, t, i) {
			"use strict";
			i.d(t, "j", (function() {
				return l
			})), i.d(t, "k", (function() {
				return u
			})), i.d(t, "l", (function() {
				return c
			})), i.d(t, "m", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "n", (function() {
				return p
			})), i.d(t, "e", (function() {
				return f
			})), i.d(t, "f", (function() {
				return b
			})), i.d(t, "g", (function() {
				return g
			})), i.d(t, "i", (function() {
				return w
			})), i.d(t, "h", (function() {
				return v
			})), i.d(t, "d", (function() {
				return y
			})), i.d(t, "c", (function() {
				return E
			})), i.d(t, "a", (function() {
				return S
			}));
			var n = i("./src/lib/objectSelector/index.ts"),
				r = i("./src/reddit/models/ModeratingSubreddits/index.ts"),
				s = i("./src/reddit/selectors/posts.ts"),
				o = i("./src/reddit/selectors/subreddit.ts"),
				d = i("./node_modules/reselect/es/index.js");
			const a = e => !!(e.user && e.user.account && e.user.account.isAdmin),
				l = e => !!(e.user && e.user.account && e.user.account.isMod) || a(e),
				u = e => e.moderatingSubreddits,
				c = (e, t) => {
					if (a(e)) return r.b;
					const i = Object(s.G)(e, t);
					if (!i) return null;
					const n = i.belongsTo.id;
					return e.moderatingSubreddits[n]
				},
				_ = (e, t) => a(e) ? r.b : e.moderatingSubreddits[t.subredditId],
				m = e => (t, i) => {
					if (a(t)) return !0;
					const n = _(t, i);
					return !(!n || !n[e])
				},
				p = Object(n.a)((e => t => {
					const i = a(t),
						n = [];
					for (const r in t.moderatingSubreddits) {
						const s = t.moderatingSubreddits[r];
						(i || s && s[e]) && (t.subreddits.models[r] ? n.push(t.subreddits.models[r]) : t.profiles.models[r] && n.push(t.profiles.models[r]))
					}
					return n
				})(r.c.posts)),
				h = e => t => {
					if (a(t)) return !0;
					for (const i in t.moderatingSubreddits) {
						const n = t.moderatingSubreddits[i];
						if (n && n[e]) return !0
					}
					return !1
				},
				f = m(r.c.all),
				b = m(r.c.config),
				g = m(r.c.flair),
				w = m(r.c.wiki),
				v = m(r.c.posts),
				y = (h(r.c.flair), h(r.c.posts)),
				E = (e, {
					postId: t
				}) => {
					const i = c(e, {
						postId: t
					});
					return !!i && i.posts
				},
				S = Object(d.a)(o.n, u, (e, t) => e ? e.filter(e => t[e].config || t[e].all) : null)
		},
		"./src/reddit/selectors/multireddit.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return h
			})), i.d(t, "h", (function() {
				return f
			})), i.d(t, "i", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			})), i.d(t, "j", (function() {
				return w
			})), i.d(t, "g", (function() {
				return v
			})), i.d(t, "f", (function() {
				return y
			})), i.d(t, "e", (function() {
				return E
			})), i.d(t, "b", (function() {
				return S
			})), i.d(t, "c", (function() {
				return T
			})), i.d(t, "k", (function() {
				return O
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/lodash/sortBy.js"),
				s = i.n(r),
				o = i("./src/lib/constants/index.ts"),
				d = i("./src/lib/objectSelector/index.ts"),
				a = i("./src/reddit/helpers/widgets/index.tsx"),
				l = i("./src/reddit/models/Multireddit/index.ts"),
				u = i("./src/reddit/models/User/index.ts"),
				c = i("./src/reddit/selectors/profile.ts"),
				_ = i("./src/reddit/selectors/subreddit.ts"),
				m = i("./src/reddit/selectors/user.ts");
			const p = [],
				h = Object(d.a)((e, {
					listingName: t
				}) => {
					const i = (e => e.replace(/\++/g, "+").replace(/^\+/, "").replace(/\+$/, ""))(t.toLowerCase()).split("+"),
						r = i.filter(e => !e.startsWith(o.jc)).map(t => Object(_.D)(e, t)).filter(e => void 0 !== e),
						s = i.filter(e => e.startsWith(o.jc)).map(t => Object(c.m)(e, t.slice(2))).filter(e => void 0 !== e),
						d = [...r.map(t => e.subreddits.models[t].name), ...s.map(t => e.profiles.models[t].name)].join(", ");
					return {
						displayText: `${n.fbt._("Posts from {subredditNames}",[n.fbt._param("subredditNames",d)],{hk:"1YeYEE"})}`,
						profileIds: s,
						subredditIds: r
					}
				}),
				f = e => e.multireddits.api.forUser.fetched,
				b = e => e.multireddits.api.forUser.pending,
				g = (e, {
					multiredditName: t,
					username: i
				}) => {
					if (!i) {
						if (!e.user.account) return null;
						const {
							displayText: t
						} = e.user.account;
						i = t
					}
					const n = Object(l.h)(i, t);
					return e.multireddits.models[n]
				},
				w = Object(d.a)(e => {
					const {
						account: t
					} = e.user;
					if (!t) return p;
					const {
						id: i
					} = t, n = e.multireddits.byUserId[i];
					return n ? n.map(t => e.multireddits.models[t]) : p
				}),
				v = (e, {
					multiredditName: t,
					username: i
				}) => {
					if (i) {
						const n = g(e, {
							multiredditName: t,
							username: i
						});
						return n ? `/user/${i}/m/${n.name}` : ""
					}
					const {
						account: n
					} = e.user;
					if (!n) return "";
					const r = g(e, {
						multiredditName: t
					});
					return r ? `/me/m/${r.name}` : ""
				},
				y = (e, {
					multiredditName: t,
					username: i
				}) => {
					if (!i) {
						const {
							account: t
						} = e.user;
						if (!t) return "";
						i = Object(u.e)(t)
					}
					const r = Object(l.h)(i, t),
						s = e.multireddits.models[r];
					return s ? `${n.fbt._("{displayText} subreddits curated by {userpath}",[n.fbt._param("displayText",s.displayText),n.fbt._param("userpath","u/"+i)],{hk:"38iTbH"})}` : ""
				},
				E = (e, t) => e.multireddits.models[t],
				S = Object(d.a)((e, {
					subredditIds: t,
					profileIds: i
				}) => {
					const n = [];
					let r = [...t && t.reduce((t, i) => {
						const r = Object(_.S)(e, {
							subredditId: i
						});
						return r ? [...t, r] : (n.push(i), t)
					}, []) || [], ...i && i.map(t => Object(c.p)(e, {
						profileId: t
					})) || []].filter(e => !!e).map(t => {
						const i = Object(a.d)(t);
						return i.isSubscribed = Object(_.eb)(e, {
							identifier: {
								type: i.type,
								name: i.name
							}
						}), i
					});
					if (n) {
						const t = n.map(t => e.subreddits.communityInfo[t]).filter(e => !!e);
						r.push(...t), r = s()(r, e => e.name.toLowerCase())
					}
					return r
				}),
				T = (e, t) => {
					const i = Object(m.k)(e),
						n = Object(l.i)(t);
					return !!i && (i.displayText || "").toLowerCase() === n.toLowerCase()
				},
				O = Object(d.a)((e, {
					multireddit: t
				}) => Object(l.f)(t) && e.multireddits.recommendations[t.url] && e.multireddits.recommendations[t.url].length ? e.multireddits.recommendations[t.url].map(t => Object(a.c)(e.subreddits.models[t])) : [])
		},
		"./src/reddit/selectors/notificationBanner.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			}));
			const n = e => t => t.notificationBannerId === e
		},
		"./src/reddit/selectors/platform.ts": function(e, t, i) {
			"use strict";
			i.d(t, "b", (function() {
				return a
			})), i.d(t, "m", (function() {
				return l
			})), i.d(t, "r", (function() {
				return u
			})), i.d(t, "g", (function() {
				return c
			})), i.d(t, "k", (function() {
				return _
			})), i.d(t, "l", (function() {
				return m
			})), i.d(t, "p", (function() {
				return p
			})), i.d(t, "i", (function() {
				return h
			})), i.d(t, "f", (function() {
				return f
			})), i.d(t, "j", (function() {
				return b
			})), i.d(t, "q", (function() {
				return g
			})), i.d(t, "c", (function() {
				return w
			})), i.d(t, "d", (function() {
				return v
			})), i.d(t, "e", (function() {
				return y
			})), i.d(t, "s", (function() {
				return E
			})), i.d(t, "t", (function() {
				return S
			})), i.d(t, "n", (function() {
				return T
			})), i.d(t, "a", (function() {
				return O
			})), i.d(t, "u", (function() {
				return I
			})), i.d(t, "o", (function() {
				return R
			})), i.d(t, "h", (function() {
				return F
			}));
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/lib/objectSelector/index.ts"),
				s = i("./src/reddit/models/Post/index.ts"),
				o = i("./src/reddit/selectors/activeModal.ts"),
				d = i("./src/reddit/selectors/subreddit.ts");
			const a = e => e.platform.currentPage,
				l = e => e.platform.lastPage,
				u = e => {
					if (!e.platform.currentPage || !e.platform.currentPage.routeMatch) return null;
					const {
						route: t
					} = e.platform.currentPage.routeMatch;
					return t.meta.name
				},
				c = e => e.platform.currentPage && e.platform.currentPage.routeMatch && e.platform.currentPage.routeMatch.route.chunk === n.s.FRONTPAGE,
				_ = e => e.platform.currentPage && e.platform.currentPage.routeMatch && [n.s.FRONTPAGE, n.s.MULTIREDDIT, n.s.SUBREDDIT].includes(e.platform.currentPage.routeMatch.route.chunk),
				m = e => {
					var t, i, r;
					return (null === (r = null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.routeMatch) || void 0 === r ? void 0 : r.route.chunk) === n.s.SUBREDDIT
				},
				p = e => !!(e.platform.lastPage && e.platform.lastPage.locationState && e.platform.lastPage.locationState.isOverlay),
				h = e => !!(e.platform && e.platform.currentPage && e.platform.currentPage.locationState && e.platform.currentPage.locationState.isOverlay),
				f = e => !(!e.platform.currentPage || !e.platform.currentPage.meta || e.platform.currentPage.meta.name !== n.Nb.COMMENTS && e.platform.currentPage.meta.name !== n.Nb.DUPLICATES),
				b = e => !(!e.platform.currentPage || !e.platform.currentPage.meta || e.platform.currentPage.meta.name !== n.Nb.POST_CREATION),
				g = e => {
					var t, i;
					return null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.queryParams
				},
				w = e => {
					const t = v(e);
					return t ? Object(d.D)(e, t) : null
				},
				v = e => {
					const t = e.platform.currentPage && e.platform.currentPage.urlParams;
					return t ? t.subredditName : null
				},
				y = e => {
					const t = v(e);
					return t ? Object(d.x)(e, {
						subredditName: t
					}) : null
				},
				E = e => {
					var t;
					return (null === (t = Object(o.a)(e)) || void 0 === t ? void 0 : t.subredditId) || w(e)
				},
				S = e => {
					const t = E(e);
					return t ? Object(d.S)(e, {
						subredditId: t
					}) : y(e)
				},
				T = Object(r.a)((e, {
					page: t
				}) => {
					const i = t && t.routeMatch;
					if (!i) return;
					const {
						partialPostId: n
					} = i.match.params;
					return e.posts.models[Object(s.t)(n)]
				}),
				O = e => e.platform.allowNavigationCallback,
				I = e => e.platform.currentPage ? e.platform.currentPage.url : "",
				R = e => {
					const t = e.platform.currentPage;
					if (t && t.routeMatch) {
						const {
							params: e
						} = t.routeMatch.match;
						if (e && e.partialPostId) return Object(s.t)(e.partialPostId)
					}
					return ""
				},
				F = e => {
					var t, i, r;
					return (null === (r = null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.routeMatch) || void 0 === r ? void 0 : r.route.chunk) === n.s.SUBREDDIT_LEADERBOARD
				}
		},
		"./src/reddit/selectors/poll/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return d
			})), i.d(t, "e", (function() {
				return a
			})), i.d(t, "g", (function() {
				return l
			})), i.d(t, "f", (function() {
				return u
			})), i.d(t, "h", (function() {
				return c
			})), i.d(t, "d", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "c", (function() {
				return p
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/models/Comment/index.ts"),
				s = i("./src/reddit/models/Prediction/index.ts"),
				o = i("./src/reddit/selectors/commentSelector.ts");
			const d = (e, {
					postId: t
				}) => e.posts.metaMap[t],
				a = (e, {
					postId: t
				}) => {
					const i = d(e, {
						postId: t
					});
					if (i) return e.polls.models[i]
				},
				l = (e, {
					postId: t
				}) => {
					const i = a(e, {
						postId: t
					});
					return i && Object(s.c)(i) ? i : null
				},
				u = (e, {
					commentId: t
				}) => {
					const i = Object(o.b)(e, {
						commentId: t
					});
					return i && i.commentType === r.b.Prediction && l(e, i) || null
				},
				c = Object(n.a)(e => e.polls.models, (e, t) => t, (e, t) => Object.values(e).filter(e => Object(s.c)(e) && e.tournamentId === t)),
				_ = (e, {
					postId: t
				}) => {
					const i = d(e, {
						postId: t
					});
					if (i) return e.polls.rewards[i]
				},
				m = (e, {
					postId: t
				}) => {
					const i = d(e, {
						postId: t
					});
					if (i) return e.polls.results.byVotingPower[i]
				},
				p = (e, {
					postId: t
				}) => {
					const i = d(e, {
						postId: t
					});
					if (i) return e.polls.results.byVoters[i]
				}
		},
		"./src/reddit/selectors/postCollection.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return g
			})), i.d(t, "d", (function() {
				return w
			})), i.d(t, "r", (function() {
				return v
			})), i.d(t, "s", (function() {
				return y
			})), i.d(t, "q", (function() {
				return E
			})), i.d(t, "n", (function() {
				return S
			})), i.d(t, "k", (function() {
				return T
			})), i.d(t, "p", (function() {
				return O
			})), i.d(t, "o", (function() {
				return I
			})), i.d(t, "m", (function() {
				return F
			})), i.d(t, "v", (function() {
				return N
			})), i.d(t, "u", (function() {
				return C
			})), i.d(t, "g", (function() {
				return j
			})), i.d(t, "c", (function() {
				return A
			})), i.d(t, "l", (function() {
				return x
			})), i.d(t, "h", (function() {
				return D
			})), i.d(t, "j", (function() {
				return P
			})), i.d(t, "f", (function() {
				return L
			})), i.d(t, "b", (function() {
				return k
			})), i.d(t, "a", (function() {
				return B
			})), i.d(t, "t", (function() {
				return M
			})), i.d(t, "e", (function() {
				return U
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/lib/eventTools/index.ts"),
				s = i("./src/reddit/constants/postCollection.ts"),
				o = i("./src/reddit/featureFlags/profileCollections.ts"),
				d = i("./src/reddit/helpers/media/index.ts"),
				a = i("./src/reddit/models/Media/index.ts"),
				l = i("./src/reddit/models/PostCollection/index.ts"),
				u = i("./src/reddit/models/Subreddit/index.ts"),
				c = i("./src/reddit/selectors/isModeratorOfSubreddit.ts"),
				_ = i("./src/reddit/selectors/posts.ts"),
				m = i("./src/reddit/selectors/structuredStyles.ts"),
				p = i("./src/reddit/selectors/subreddit.ts"),
				h = i("./src/reddit/selectors/user.ts"),
				f = i("./src/reddit/selectors/profile.ts");
			const b = [],
				g = (e, {
					postId: t
				}) => {
					const i = Object(_.G)(e, {
						postId: t
					});
					let n = !1;
					if (i && i.eventInfo) {
						const {
							eventStart: e,
							eventEnd: t,
							eventIsLive: s
						} = i.eventInfo;
						if (!s) {
							n = Object(r.e)(e, t) === r.a.Future
						}
					}
					return n
				},
				w = (e, {
					collectionId: t
				}) => {
					const i = E(e, {
						collectionId: t
					});
					if (!i || !i.id) return "";
					const n = Object(p.c)(e, i.subredditId);
					return n && t ? `${n}submit?collection=${t}` : ""
				},
				v = (e, t, i) => {
					if (i && !Object(o.a)(e)) return !1;
					if (!(i ? Object(h.U)(e, t) : Object(c.c)(e, {
							subredditId: Object(p.D)(e, t)
						}))) return !1;
					const n = i ? Object(p.p)(e, t) : Object(p.u)(e, {
						subredditName: t
					});
					return !(!n || !n.collectionsEnabled)
				},
				y = (e, {
					collectionId: t
				}) => {
					const i = E(e, {
						collectionId: t
					});
					if (!i) return !1;
					const n = Object(p.S)(e, {
						subredditId: i.subredditId
					}) || Object(f.p)(e, {
						profileId: i.subredditId
					});
					return v(e, n.name, n.type === u.f.User)
				},
				E = (e, {
					collectionId: t
				}) => e.postCollection.models[t],
				S = (e, {
					postId: t
				}) => {
					const i = e.posts.models[t],
						{
							collectionIds: n
						} = i,
						r = n ? n[0] : null;
					return r && e.postCollection.models[r] || null
				},
				T = (e, {
					postId: t
				}) => {
					const i = e.posts.models[t],
						{
							collectionIds: n
						} = i;
					return !!(n ? n[0] : null)
				},
				O = (e, {
					collectionId: t
				}) => {
					const i = E(e, {
						collectionId: t
					});
					return i ? i.primaryPostId : null
				},
				I = (e, {
					collectionId: t
				}) => {
					const i = E(e, {
						collectionId: t
					});
					if (!i) return null;
					const n = i.postIds || [];
					return Object(_.K)(e, {
						postIds: n
					})
				},
				R = (e, {
					subredditId: t
				}) => e.postCollection.subredditToIds[t],
				F = (e, {
					subredditId: t
				}) => {
					const i = R(e, {
						subredditId: t
					});
					return !(!i || !i.length)
				},
				N = Object(n.a)(R, e => e.postCollection.models, (e, t) => e ? e.map(e => t[e]).filter(Boolean) : b),
				C = (e, t) => {
					const i = R(e, t);
					return i ? i.length : 0
				},
				j = e => e.creations.api.collection.createOrUpdate.pending,
				A = e => e.creations.api.collection.createOrUpdate.error,
				x = e => e.postCollection.api.pending.reorderPending,
				D = e => e.postCollection.api.pending.updateDescriptionPending,
				P = e => e.postCollection.api.pending.updateLayoutPending,
				L = e => e && e.displayLayout || l.a.TIMELINE,
				k = (e, {
					collectionId: t
				}) => L(e.postCollection.models[t]),
				B = (e, {
					postId: t
				}) => L(S(e, {
					postId: t
				})),
				M = (e, {
					collectionId: t
				}) => !(!((e, {
					collectionId: t
				}) => {
					const i = E(e, {
						collectionId: t
					});
					if (!i || !i.id) return;
					const n = i.subredditId,
						r = Object(m.k)(e, {
							subredditId: n
						});
					return r && !!r.postPlaceholderImage
				})(e, {
					collectionId: t
				}) && !((e, {
					collectionId: t
				}) => {
					const i = I(e, {
						collectionId: t
					});
					if (!i || !Object.keys(i).length) return;
					let n = 0;
					for (const r in i) {
						const e = i[r];
						e && e.thumbnail.width && e.thumbnail.height && (n += 1)
					}
					return n >= Object.keys(i).length - n
				})(e, {
					collectionId: t
				})),
				U = (e, {
					postId: t
				}) => {
					const i = Object(_.G)(e, {
						postId: t
					});
					let n = null;
					return i && (i.media && i.media.type !== a.o.GIFVIDEO && (n = Object(d.e)(i, 2 * s.b, 2 * s.a) || Object(d.e)(i, s.b, s.a)), !n && i.thumbnail && i.thumbnail.width && i.thumbnail.height && (n = i.thumbnail, (i.isNSFW || i.isSpoiler) && (n = (e => {
						if (!e || e.type === a.o.RTJSON || e.type === a.o.TEXT || e.type === a.o.LIVEVIDEO || e.type === a.o.GALLERY) return null;
						const t = e.obfuscated;
						return t ? {
							url: t,
							width: e.width,
							height: e.height
						} : null
					})(i.media)))), n
				}
		},
		"./src/reddit/selectors/postCreations.ts": function(e, t, i) {
			"use strict";
			i.d(t, "w", (function() {
				return A
			})), i.d(t, "x", (function() {
				return x
			})), i.d(t, "S", (function() {
				return D
			})), i.d(t, "o", (function() {
				return k
			})), i.d(t, "L", (function() {
				return B
			})), i.d(t, "bb", (function() {
				return M
			})), i.d(t, "ob", (function() {
				return U
			})), i.d(t, "X", (function() {
				return G
			})), i.d(t, "Y", (function() {
				return q
			})), i.d(t, "h", (function() {
				return V
			})), i.d(t, "g", (function() {
				return H
			})), i.d(t, "mb", (function() {
				return W
			})), i.d(t, "e", (function() {
				return z
			})), i.d(t, "a", (function() {
				return K
			})), i.d(t, "M", (function() {
				return Y
			})), i.d(t, "ab", (function() {
				return $
			})), i.d(t, "k", (function() {
				return Q
			})), i.d(t, "i", (function() {
				return J
			})), i.d(t, "j", (function() {
				return X
			})), i.d(t, "l", (function() {
				return Z
			})), i.d(t, "m", (function() {
				return ee
			})), i.d(t, "I", (function() {
				return te
			})), i.d(t, "O", (function() {
				return ie
			})), i.d(t, "T", (function() {
				return ne
			})), i.d(t, "P", (function() {
				return re
			})), i.d(t, "p", (function() {
				return se
			})), i.d(t, "db", (function() {
				return oe
			})), i.d(t, "qb", (function() {
				return de
			})), i.d(t, "J", (function() {
				return ae
			})), i.d(t, "Q", (function() {
				return le
			})), i.d(t, "lb", (function() {
				return ue
			})), i.d(t, "jb", (function() {
				return ce
			})), i.d(t, "r", (function() {
				return _e
			})), i.d(t, "n", (function() {
				return me
			})), i.d(t, "rb", (function() {
				return pe
			})), i.d(t, "hb", (function() {
				return he
			})), i.d(t, "R", (function() {
				return fe
			})), i.d(t, "H", (function() {
				return be
			})), i.d(t, "nb", (function() {
				return ge
			})), i.d(t, "pb", (function() {
				return we
			})), i.d(t, "ib", (function() {
				return ve
			})), i.d(t, "U", (function() {
				return ye
			})), i.d(t, "V", (function() {
				return Ee
			})), i.d(t, "W", (function() {
				return Se
			})), i.d(t, "tb", (function() {
				return Te
			})), i.d(t, "gb", (function() {
				return Oe
			})), i.d(t, "Z", (function() {
				return Ie
			})), i.d(t, "F", (function() {
				return Re
			})), i.d(t, "E", (function() {
				return Fe
			})), i.d(t, "B", (function() {
				return Ne
			})), i.d(t, "C", (function() {
				return Ce
			})), i.d(t, "A", (function() {
				return je
			})), i.d(t, "D", (function() {
				return Ae
			})), i.d(t, "q", (function() {
				return xe
			})), i.d(t, "b", (function() {
				return De
			})), i.d(t, "eb", (function() {
				return Pe
			})), i.d(t, "u", (function() {
				return Le
			})), i.d(t, "v", (function() {
				return ke
			})), i.d(t, "kb", (function() {
				return Be
			})), i.d(t, "f", (function() {
				return Me
			})), i.d(t, "cb", (function() {
				return Ue
			})), i.d(t, "fb", (function() {
				return Ge
			})), i.d(t, "c", (function() {
				return qe
			})), i.d(t, "d", (function() {
				return Ve
			})), i.d(t, "N", (function() {
				return He
			})), i.d(t, "K", (function() {
				return We
			})), i.d(t, "G", (function() {
				return ze
			})), i.d(t, "z", (function() {
				return Ke
			})), i.d(t, "y", (function() {
				return Ye
			})), i.d(t, "t", (function() {
				return $e
			})), i.d(t, "s", (function() {
				return Qe
			})), i.d(t, "sb", (function() {
				return Je
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/reselect/es/index.js"),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/makePostCreationPageKey/index.ts"),
				d = i("./src/reddit/components/RichTextEditor/RTEState/index.tsx"),
				a = i("./src/reddit/constants/posts.ts"),
				l = i("./src/reddit/contexts/PageLayer/index.tsx"),
				u = i("./src/reddit/contexts/PageLayer/selectors.ts"),
				c = i("./src/reddit/featureFlags/index.ts"),
				_ = i("./src/reddit/featureFlags/profileCollections.ts"),
				m = i("./src/reddit/helpers/getSubredditUrl/index.ts"),
				p = i("./src/reddit/helpers/media/index.ts"),
				h = i("./src/reddit/helpers/name/index.ts"),
				f = i("./src/reddit/helpers/path/index.ts"),
				b = i("./src/reddit/models/Poll/index.ts"),
				g = i("./src/reddit/models/PostCreationForm/index.ts"),
				w = i("./src/reddit/models/PostRequirements/index.ts"),
				v = i("./src/reddit/models/Subreddit/index.ts"),
				y = i("./src/reddit/models/Upload/index.ts"),
				E = i("./src/reddit/routes/postCreation/constants.ts"),
				S = i("./src/reddit/selectors/contentControls.ts"),
				T = i("./src/reddit/selectors/features/predictions/tournaments/index.ts"),
				O = i("./src/reddit/selectors/gold/powerups/index.ts"),
				I = i("./src/reddit/selectors/platform.ts"),
				R = i("./src/reddit/selectors/postFlair.ts"),
				F = i("./src/reddit/selectors/posts.ts"),
				N = (i("./src/reddit/selectors/runTimeEnvVars.ts"), i("./src/reddit/selectors/subreddit.ts")),
				C = i("./src/reddit/selectors/subredditAutocomplete.ts"),
				j = i("./src/reddit/selectors/user.ts");
			const A = e => {
					const {
						api: t
					} = e.creations, {
						apiError: i,
						pollError: n,
						validationError: r
					} = t.post.submit.error;
					return !!(i || r || t.editor.mediaUpload.error || n)
				},
				x = e => {
					const {
						submitValidationError: t
					} = e.creations.api.post.submit.error;
					return !!t
				},
				D = e => null !== e.creations.formData.postSchedule,
				P = e => (e && e.fields || []).map(e => e.msg),
				L = e => e && "extra" in e ? Object.keys(e.extra).map(t => e.extra[t]) : [],
				k = Object(r.a)(e => e.creations.api.post.submit.error, e => e.creations.api.editor.mediaUpload.error, (e, t) => {
					const {
						apiError: i,
						validationError: n,
						pollError: r
					} = e;
					return [...P(i), ...P(n), ...P(t), ...L(r)]
				}),
				B = (e, {
					pageLayer: t
				}) => {
					if (!t || !Object(l.G)(t)) return !1;
					const {
						subredditName: i,
						profileName: n
					} = t.urlParams, r = Object(o.a)({
						subredditName: i,
						profileName: n
					});
					return !!e.creations.api.page.pending[r]
				},
				M = e => U(e) || G(e),
				U = e => e.creations.api.post.submit.pending,
				G = e => e.creations.api.editor.mediaUpload.pending,
				q = e => e.creations.api.post.submit.error.needsCaptcha,
				V = Object(r.a)(j.k, I.e, e => {
					const t = Object(I.d)(e);
					if (t) {
						const i = Object(C.d)(e, {
							substring: t
						});
						if (i) return i.subreddits.find(e => Object(h.a)(e.name, t))
					}
				}, e => {
					const t = Object(I.e)(e);
					return t && Object(N.w)(e, {
						subredditName: t.name
					})
				}, e => e.platform.currentPage, (e, t, i, n, r) => {
					const {
						profileName: s = "",
						subredditName: o = ""
					} = r && r.urlParams || {};
					if (s) return {
						isProfile: !0,
						name: e && e.username || Object(h.g)(s),
						id: e && e.id || void 0
					}; {
						const {
							name: e = Object(h.g)(o),
							id: r = ""
						} = t || i || {};
						return {
							isProfile: !1,
							allowedPostTypes: n,
							id: r || void 0,
							name: e
						}
					}
				}),
				H = e => {
					const t = V(e);
					return t.name ? t.isProfile ? Object(_.a)(e) ? Object(N.p)(e, t.name) : null : Object(N.u)(e, {
						subredditName: t.name
					}) : null
				},
				W = e => e.creations.formData.submissionType,
				z = e => {
					const t = V(e),
						i = Object(I.e)(e),
						n = W(e),
						r = !!i && Object(O.t)(e, {
							subredditId: i.id
						}),
						o = !!i && i.isNSFW;
					if (n === s.Wb.MEDIA && o && !r) return !1;
					if (t.isProfile) return Object(j.U)(e, t.name);
					if (!t.id) return !1;
					const d = e.moderatingSubreddits[t.id];
					return !!d && (e => Object.keys(e).some(t => !0 === e[t]))(d)
				},
				K = Object(r.a)(W, I.e, V, z, e => {
					const t = Object(I.c)(e);
					return !!t && Object(O.t)(e, {
						subredditId: t
					})
				}, (e, t, i, n, r) => {
					if (e === s.Wb.POLL || e === s.Wb.PREDICTION) return e;
					const {
						allowedPostTypes: o
					} = i, d = !!t && t.isNSFW;
					if (n && (!d || e !== s.Wb.MEDIA || r) || !o) return e;
					const a = [o.text && s.Wb.POST, (o.images || o.videos) && (!d || r) && s.Wb.MEDIA, o.links && s.Wb.LINK_ONLY, s.Wb.CROSSPOST, o.talks && s.Wb.TALK].filter(Boolean);
					return a.indexOf(e) >= 0 ? e : a[0]
				}),
				Y = (e, {
					postId: t
				}) => e.creations.postEditing.postId === t,
				$ = e => e.creations.api.post.update.pending,
				Q = e => !!e.creations.api.post.update.error,
				J = e => e.creations.formState.editorMode || g.i.RICH_TEXT,
				X = Object(r.a)(e => e.creations.api.post.update.error, e => P(e)),
				Z = e => e.creations.postEditing.draft.markdown,
				ee = e => e.creations.postEditing.draft.rte,
				te = e => e.creations.formData.isChatPost,
				ie = e => e.creations.formData.isNSFW,
				ne = e => {
					const {
						isSpoiler: t
					} = e.creations.formData, i = H(e);
					return !(i && !Object(v.i)(i)) && t
				},
				re = e => {
					const {
						isOC: t
					} = e.creations.formData, i = H(e);
					if (i) {
						if (!Object(v.g)(i)) return !1;
						if (i.allOriginalContent) return !0
					}
					return t
				},
				se = e => e.creations.formData.eventSchedule || void 0,
				oe = e => e.creations.formData.postSchedule || void 0,
				de = e => e.creations.formData.suggestedSort,
				ae = e => e.creations.formData.isContestMode,
				le = e => e.creations.formData.isPostAsMetaMod,
				ue = e => e.creations.formData.stickyPosition,
				ce = e => c.d.scheduledPosts(e),
				_e = Object(r.a)(e => e.creations.formData.flair, e => {
					const t = Object(I.c)(e);
					return t ? Object(R.d)(e, {
						subredditId: t
					}) : null
				}, (e, t) => e && e.templateId && t && t.templateIds.includes(e.templateId) ? e : null),
				me = e => e.creations.formState.editorMode || e.user.prefs.editorMode,
				pe = e => e.creations.formData.title,
				he = e => e.creations.formData.sendReplies,
				fe = e => e.creations.formData.isPublicLink,
				be = e => e.creations.formState.isChanged,
				ge = e => e.creations.formState.submitMode,
				we = e => {
					const {
						name: t
					} = V(e), i = Object(S.b)(e, {
						subredditName: t
					});
					return null == i ? void 0 : i.postRequirements
				},
				ve = Object(r.a)(z, we, (e, t) => e || !t || t.bodyRestrictionPolicy !== w.a.NotAllowed),
				ye = e => e.creations.formData.body.link,
				Ee = e => e.creations.formData.body.markdown,
				Se = Object(r.a)(e => e.creations.formData.body.media, e => e.uploads, V, (e, t, i) => {
					let {
						items: r
					} = e;
					if (!r.length) return e;
					const s = 1 === r.length,
						o = r[0],
						d = o && t[o.uploadKey];
					if (s && d && Object(p.l)(d.metadata.mimetype || "")) {
						const {
							allowedPostTypes: e
						} = i;
						let t, {
							isMakeGif: s = !1
						} = o.video || {};
						if (e) {
							const r = i.name;
							e.images ? e.videos || (t = `${n.fbt._("Video auto converted to GIF because {subredditName} is an image only subreddit",[n.fbt._param("subredditName",`
								r / $ {
									r
								}
								`)],{hk:"4g01YI"})}`, s = !0) : (t = `${n.fbt._("Video cannot be converted to GIF because {subredditName} is a video only subreddit",[n.fbt._param("subredditName",`
								r / $ {
									r
								}
								`)],{hk:"2RVHSt"})}`, s = !1)
						}
						const a = {
							thumbnail: {
								time: 0,
								url: d.metadata.videoFirstFrameUrl
							},
							...o.video || {},
							isMakeGif: s,
							makeGifDisableReason: t
						};
						r = [{
							...o,
							video: a
						}]
					}
					return {
						...e,
						items: r
					}
				}),
				Te = e => e.wrappedReddit,
				Oe = e => e.creations.formData.body.rte,
				Ie = e => e.creations.formData.nextSubreddit,
				Re = e => {
					return !!pe(e).trim()
				},
				Fe = e => {
					const t = Oe(e);
					return d.a.hasContent(t)
				},
				Ne = e => {
					return !!Ee(e).trim()
				},
				Ce = e => {
					return Se(e).items.some(t => {
						const i = e.uploads[t.uploadKey];
						return i && i.status !== y.a.FAILED
					})
				},
				je = e => {
					return !!ye(e).trim()
				},
				Ae = e => Re(e) || Fe(e) || Ne(e) || Ce(e) || je(e),
				xe = (e, {
					field: t
				}) => {
					switch (t) {
						case s.wb.TITLE:
							return {
								title: pe(e)
							};
						case s.wb.BODY:
							if (me(e) === g.i.RICH_TEXT) {
								const t = Oe(e);
								return {
									rtjson: d.a.toRichTextJSON(t, e.uploads).document
								}
							}
							return {
								selftext: Ee(e).trim()
							};
						case s.wb.LINK: {
							const t = ye(e);
							if (!t) return;
							return {
								url: t
							}
						}
						case s.wb.FLAIR: {
							const t = _e(e);
							return {
								flairId: t ? t.templateId : void 0
							}
						}
						default:
							return
					}
				},
				De = (e, t) => {
					const i = V(e),
						n = _e(e),
						r = ae(e),
						s = te(e),
						o = ie(e),
						d = re(e),
						a = le(e),
						l = ne(e),
						u = he(e),
						c = pe(e),
						_ = fe(e),
						m = e.platform.currentPage.queryParams.collection,
						p = de(e) || void 0;
					return {
						collectionId: m,
						destSubreddit: i,
						draftId: t,
						flair: n,
						isContestMode: r,
						isChatPost: s,
						isNSFW: o,
						isOC: d,
						isPostAsMetaMod: a,
						isSpoiler: l,
						sendReplies: u,
						title: c,
						isPublicLink: _,
						sticky: ue(e) || void 0,
						suggestedSort: p
					}
				},
				Pe = (e, t) => {
					const i = De(e, t.draftId),
						n = t.destSubreddit || i.destSubreddit;
					if (!i || !n.name) return;
					const r = (e => e.creations.formData.recaptcha)(e),
						o = Ge(e, t),
						a = se(e),
						l = {
							...i,
							destSubreddit: n,
							eventSchedule: a,
							gRecaptchaResponse: r,
							postToTwitter: o,
							validate_on_submit: !0
						},
						u = me(e),
						c = ye(e),
						_ = Ee(e),
						m = Se(e),
						p = Oe(e),
						h = ve(e),
						f = K(e),
						{
							uploads: b
						} = e,
						{
							sourcePostId: w
						} = t,
						v = m.items;
					if (f === s.Wb.LINK_ONLY && c) return {
						...l,
						url: c,
						kind: g.p.LINK
					};
					if (f === s.Wb.MEDIA && v.length) {
						if (v.length > 1) {
							const e = v.map(e => {
								const t = b[e.uploadKey],
									i = t && t.url || null;
								if (!i) throw new Error("Asset is not uploaded");
								return {
									...e,
									assetId: Object(y.b)(i)
								}
							});
							return {
								...l,
								kind: g.p.GALLERY,
								galleryItems: e
							}
						} {
							const e = v[0],
								{
									video: t
								} = e,
								i = b[e.uploadKey],
								n = b[g.n],
								r = t && n ? n.url : null;
							return {
								...l,
								mediaType: t ? "video" : "image",
								videoThumbnailUrl: r,
								kind: g.p.MEDIA,
								url: i.url || "",
								makeGif: !!t && t.isMakeGif
							}
						}
					}
					if ((f === s.Wb.POST || f === s.Wb.POLL || f === s.Wb.PREDICTION) && u === g.i.MARKDOWN) return {
						...l,
						kind: g.p.MARKDOWN,
						markdown: h ? _ : ""
					};
					if ((f === s.Wb.POST || f === s.Wb.POLL || f === s.Wb.PREDICTION) && u === g.i.RICH_TEXT) {
						const e = h && d.a.hasContent(p) ? d.a.toRichTextJSON(p, b).document : [];
						return {
							...l,
							kind: g.p.RICH_TEXT,
							document: e
						}
					}
					return f === s.Wb.CROSSPOST && w ? {
						...l,
						kind: g.p.CROSSPOST,
						sourcePostId: w
					} : void 0
				},
				Le = e => e.creations.formData,
				ke = e => e.creations.formState,
				Be = (e, {
					sourcePostId: t
				}) => t ? Object(F.f)(e, {
					postId: t
				}) : void 0,
				Me = e => {
					const t = Se(e);
					switch (K(e)) {
						case s.Wb.LINK_ONLY:
							return "link";
						case s.Wb.MEDIA:
							return Object(g.x)(t) ? t.items[0].video.isMakeGif ? "videogif" : "video" : "image";
						default:
							return "self"
					}
				},
				Ue = (e, {
					pageLayer: t
				}) => {
					if (!t) return E.b;
					const i = Object(l.r)(e, {
						pageLayer: t
					});
					if (i) return Object(f.a)(Object(m.a)(i), E.b);
					const n = Object(l.k)(e, {
						pageLayer: t
					});
					return n && Object(l.E)(e, {
						pageLayer: t
					}) && Object(j.h)(e) ? Object(f.a)(n.url, E.b) : E.b
				},
				Ge = (e, t) => {
					const i = Object(u.q)(e, t);
					return (!i || !i.isQuarantined) && e.creations.formData.postToTwitter
				},
				qe = e => {
					const t = V(e);
					if (!t.id || t.isProfile) return !1;
					const i = {
						id: t.id,
						type: a.a.SUBREDDIT
					};
					return Object(R.b)(e, i, !0, !0)
				},
				Ve = e => {
					var t, i, n;
					if (z(e)) return !0;
					const r = V(e);
					if (!r.isProfile && r.allowedPostTypes && r.allowedPostTypes.polls) return !0;
					const s = c.d.spPolls(e),
						o = (null == r ? void 0 : r.id) ? null === (i = null === (t = e.features) || void 0 === t ? void 0 : t.crypto) || void 0 === i ? void 0 : i.points[null == r ? void 0 : r.id] : void 0,
						d = !1 === (null === (n = null == o ? void 0 : o.polls) || void 0 === n ? void 0 : n.canCreate);
					return s && !d
				},
				He = e => {
					const t = z(e);
					return (e => {
						const t = V(e),
							{
								images: i = !0,
								galleries: n = !0
							} = t.allowedPostTypes || {};
						return i && n
					})(e) || t
				},
				We = (e, t) => Object(N.M)(e, t) && !Object(T.c)(e, t) && (e => e.creations.formData.govType === b.a.Prediction)(e),
				ze = (e, t) => Object(N.M)(e, t) && Object(T.c)(e, t),
				Ke = e => {
					var t;
					const i = null === (t = e.creations.formData.polls) || void 0 === t ? void 0 : t.options;
					return !!i && i.length > 1 && i.every(({
						text: e
					}) => e.length > 0)
				},
				Ye = e => {
					var t;
					const i = null === (t = e.creations.formData.polls) || void 0 === t ? void 0 : t.endDate,
						n = new Date;
					return n.setHours(n.getHours() + 1), i >= n
				},
				$e = e => e.creations.formData.polls || void 0,
				Qe = e => e.creations.formData.govType,
				Je = e => e.creations.formData.tournament
		},
		"./src/reddit/selectors/postDraft.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return p
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "e", (function() {
				return f
			})), i.d(t, "b", (function() {
				return b
			})), i.d(t, "f", (function() {
				return g
			})), i.d(t, "g", (function() {
				return v
			})), i.d(t, "a", (function() {
				return y
			})), i.d(t, "h", (function() {
				return E
			})), i.d(t, "i", (function() {
				return S
			}));
			var n = i("./src/config.ts"),
				r = i("./node_modules/lodash/values.js"),
				s = i.n(r),
				o = i("./node_modules/reselect/es/index.js"),
				d = i("./src/lib/constants/index.ts"),
				a = i("./src/reddit/components/RichTextEditor/RTEState/index.tsx"),
				l = i("./src/reddit/models/PostCreationForm/index.ts"),
				u = i("./src/reddit/models/PostDraft/index.ts"),
				c = i("./src/reddit/selectors/postCreations.ts"),
				_ = i("./src/reddit/selectors/subreddit.ts"),
				m = i("./src/reddit/selectors/user.ts");
			const p = Object(o.a)(e => e.creations.drafts, e => s()(e).sort((e, t) => {
					const i = e.modified || e.created;
					return (t.modified || t.created) - i
				})),
				h = (e, {
					draftId: t
				}) => t ? e.creations.drafts[t] : null,
				f = (e, t) => {
					const i = h(e, t);
					if (i && i.subredditId) {
						const t = Object(_.S)(e, {
							subredditId: i.subredditId
						});
						return t ? t.name : void 0
					}
				},
				b = e => e.creations.api.draft.listing.pending,
				g = e => {
					const {
						api: t
					} = e.creations, {
						apiError: i,
						validationError: n
					} = t.draft.save.error;
					return !(!i && !n)
				},
				w = e => (e && e.fields || []).map(e => e.msg),
				v = (Object(o.a)(e => e.creations.api.draft.save.error, e => {
					const {
						apiError: t,
						validationError: i
					} = e;
					return [...w(t), ...w(i)]
				}), e => e.creations.api.draft.save.pending),
				y = (e, t) => e.creations.api.draft.deleteDraft.pending[t] || !1,
				E = (e, t) => {
					const i = Object(c.b)(e, t);
					if (!i) return;
					const n = Object(c.n)(e),
						r = Object(c.U)(e),
						s = Object(c.V)(e),
						o = Object(c.gb)(e),
						_ = Object(c.ib)(e),
						m = Object(c.a)(e),
						{
							uploads: p
						} = e;
					if (m === d.Wb.LINK_ONLY) return {
						...i,
						body: r,
						kind: u.b.Link
					};
					if (m === d.Wb.POST && n === l.i.MARKDOWN) return {
						...i,
						body: _ ? s : "",
						kind: u.b.Markdown
					};
					if (m === d.Wb.POST && n === l.i.RICH_TEXT) {
						const e = _ ? a.a.toRichTextJSON(o, p).document : [];
						return {
							...i,
							body: e,
							kind: u.b.RichText
						}
					}
				},
				S = (e, {
					draftId: t
				}) => {
					const i = Object(m.k)(e);
					return t && i ? `${n.a.redditUrl}/user/${i.displayText}/draft/${t}` : ""
				}
		},
		"./src/reddit/selectors/postFlair.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "b", (function() {
				return m
			})), i.d(t, "a", (function() {
				return p
			}));
			var n = i("./src/lib/objectSelector/index.ts"),
				r = i("./src/reddit/constants/posts.ts"),
				s = i("./src/reddit/helpers/flair.ts"),
				o = i("./src/reddit/models/Flair/index.ts"),
				d = i("./src/reddit/selectors/moderatorPermissions.ts"),
				a = i("./src/reddit/selectors/posts.ts"),
				l = i("./src/reddit/selectors/user.ts");
			const u = (e, {
					subredditId: t
				}) => e.postFlair[t],
				c = (e, {
					subredditId: t
				}) => !e.postFlair[t] || e.postFlair[t].displaySettings.isEnabled,
				_ = Object(n.a)((e, {
					subredditId: t
				}) => {
					const i = u(e, {
						subredditId: t
					});
					if (i) return {
						type: o.d.LinkFlair,
						displaySettings: i.displaySettings,
						permissions: i.permissions
					}
				}),
				m = (e, t, i, n = !1) => {
					if (t.type === r.a.PROFILE) return !1;
					const s = t.id;
					if (!c(e, {
							subredditId: s
						})) return !1;
					const o = u(e, {
						subredditId: s
					});
					if (!o) return !1;
					if (n) {
						if (!!!(o.templateIds && o.templateIds.length > 0)) return !1
					}
					if (Object(d.g)(e, {
							subredditId: s
						})) return !0;
					const {
						canAssignOwn: a
					} = o.permissions;
					return a && i
				},
				p = (e, {
					postId: t
				}) => {
					const i = Object(a.G)(e, {
						postId: t
					});
					if (!i) return !1;
					const n = i.flair.some(e => Object(s.q)(e.type)),
						r = Object(l.zb)(e, {
							post: i
						});
					return m(e, i.belongsTo, r, !n)
				}
		},
		"./src/reddit/selectors/posts.ts": function(e, t, i) {
			"use strict";
			i.d(t, "z", (function() {
				return y
			})), i.d(t, "h", (function() {
				return E
			})), i.d(t, "N", (function() {
				return T
			})), i.d(t, "y", (function() {
				return O
			})), i.d(t, "M", (function() {
				return I
			})), i.d(t, "i", (function() {
				return R
			})), i.d(t, "j", (function() {
				return F
			})), i.d(t, "G", (function() {
				return N
			})), i.d(t, "B", (function() {
				return C
			})), i.d(t, "A", (function() {
				return j
			})), i.d(t, "w", (function() {
				return A
			})), i.d(t, "C", (function() {
				return x
			})), i.d(t, "d", (function() {
				return D
			})), i.d(t, "f", (function() {
				return P
			})), i.d(t, "J", (function() {
				return L
			})), i.d(t, "b", (function() {
				return k
			})), i.d(t, "K", (function() {
				return B
			})), i.d(t, "S", (function() {
				return U
			})), i.d(t, "U", (function() {
				return G
			})), i.d(t, "c", (function() {
				return q
			})), i.d(t, "e", (function() {
				return V
			})), i.d(t, "m", (function() {
				return H
			})), i.d(t, "E", (function() {
				return W
			})), i.d(t, "F", (function() {
				return z
			})), i.d(t, "I", (function() {
				return K
			})), i.d(t, "Q", (function() {
				return Y
			})), i.d(t, "H", (function() {
				return $
			})), i.d(t, "s", (function() {
				return Q
			})), i.d(t, "p", (function() {
				return J
			})), i.d(t, "r", (function() {
				return X
			})), i.d(t, "q", (function() {
				return Z
			})), i.d(t, "P", (function() {
				return ee
			})), i.d(t, "a", (function() {
				return te
			})), i.d(t, "x", (function() {
				return ie
			})), i.d(t, "O", (function() {
				return ne
			})), i.d(t, "n", (function() {
				return re
			})), i.d(t, "W", (function() {
				return se
			})), i.d(t, "D", (function() {
				return oe
			})), i.d(t, "l", (function() {
				return de
			})), i.d(t, "u", (function() {
				return ue
			})), i.d(t, "v", (function() {
				return ce
			})), i.d(t, "g", (function() {
				return me
			})), i.d(t, "V", (function() {
				return pe
			})), i.d(t, "T", (function() {
				return he
			})), i.d(t, "t", (function() {
				return fe
			})), i.d(t, "o", (function() {
				return be
			})), i.d(t, "R", (function() {
				return ge
			})), i.d(t, "k", (function() {
				return we
			})), i.d(t, "L", (function() {
				return ve
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/lib/isPinnedAdminPost/index.ts"),
				s = i("./src/lib/objectSelector/index.ts"),
				o = i("./src/lib/permalinkToOverlayLocation/index.ts"),
				d = i("./src/reddit/constants/posts.ts"),
				a = i("./src/reddit/helpers/publicAccessNetwork/index.ts"),
				l = i("./src/reddit/helpers/widgets/index.tsx"),
				u = i("./src/reddit/models/Media/index.ts"),
				c = i("./src/reddit/models/Subreddit/index.ts"),
				_ = (i("./src/reddit/models/Profile/mock.ts"), i("./src/reddit/models/Subreddit/mock.ts"), i("./src/lib/safeGet/index.ts")),
				m = i("./src/reddit/selectors/activeModal.ts"),
				p = i("./src/reddit/selectors/ads.ts"),
				h = i("./src/reddit/selectors/media.ts"),
				f = i("./src/reddit/selectors/profile.ts"),
				b = i("./src/reddit/selectors/subreddit.ts"),
				g = i("./src/reddit/selectors/user.ts"),
				w = i("./src/reddit/selectors/video.ts");
			const v = [],
				y = Object(s.a)((e, {
					listingKey: t
				}) => {
					const i = e.posts.models;
					return S(e, {
						listingKey: t
					}).filter(e => {
						const t = i[e];
						return t && !t.hidden
					})
				}),
				E = Object(n.a)(e => e.posts.models, e => Object.keys(e).filter(t => e[t].hidden)),
				S = (e, {
					listingKey: t
				}) => Object(_.a)(e.listings.postOrder.ids, t) || v,
				T = Object(s.a)((e, {
					listingKey: t
				}) => {
					return y(e, {
						listingKey: t
					}).map(t => e.posts.models[t])
				}),
				O = (e, {
					listingKey: t
				}) => {
					return y(e, {
						listingKey: t
					}).reduce((t, i) => (t[i] = e.posts.models[i], t), {})
				},
				I = (e, {
					listingKey: t
				}) => {
					const i = T(e, {
						listingKey: t
					});
					return i ? i.length : 0
				},
				R = Object(s.a)((e, {
					postId: t
				}) => {
					const i = N(e, {
						postId: t
					});
					if (i && i.media && i.media.type === u.o.GALLERY && i.media.gallery) {
						const t = Object(h.b)(e, i.id);
						return i.media.gallery.items[t]
					}
				}),
				F = (e, {
					postId: t
				}) => !!e.shortcuts.activePostId && t === e.shortcuts.activePostId,
				N = (e, {
					postId: t
				}) => e.posts.models[t],
				C = (e, {
					postId: t
				}) => N(e, {
					postId: t
				}).isLocked,
				j = (e, {
					postId: t
				}) => N(e, {
					postId: t
				}).isArchived,
				A = (e, {
					postId: t
				}) => {
					var i;
					return null === (i = N(e, {
						postId: t
					})) || void 0 === i ? void 0 : i.authorIsBlocked
				},
				x = (e, {
					postId: t
				}) => N(e, {
					postId: t
				}).isEligibleForQASchema,
				D = (e, {
					postId: t
				}) => {
					const i = N(e, {
						postId: t
					});
					if (i && i.crosspostRootId) return N(e, {
						postId: i.crosspostRootId
					}) || void 0
				},
				P = (e, {
					postId: t
				}) => D(e, {
					postId: t
				}) || N(e, {
					postId: t
				}) || void 0,
				L = e => e.posts.models,
				k = Object(n.a)(e => e, (e, t) => N(e, {
					postId: t
				}), p.a, (e, t, i) => {
					var n, r, s, o, d, a, l;
					const c = {
						videoData: {
							isVideo: !1,
							cumulativeViewedTime: 0
						}
					};
					if (i && !c.timeImpressionViewed && (c.timeImpressionViewed = (null === (n = i.adImpression) || void 0 === n ? void 0 : n.i) || 0), i) {
						const e = Object.keys(i).length;
						c.eventGlobalCount = e
					}
					if (t && t.media && Object(u.N)(t.media)) {
						const n = Object(w.h)(e, {
								postId: t.id
							}),
							u = Object(w.g)(e, {
								postId: t.id
							});
						c.videoData = {
							isVideo: !0,
							videoAudible: Object(h.a)(e),
							videoDuration: n ? n.length : 0,
							videoVolume: Math.floor(100 * (Object(h.d)(e) || 0)),
							cumulativeViewedTime: u || 0
						}, i && (c.videoData.wasFullScreen = i.adVideoPlayedExpanded ? 1 : 0, c.videoData.videoStarted = (null === (r = i.adVideoStarted) || void 0 === r ? void 0 : r.vs) || 0, c.videoData.videoStartTime = (null === (s = i.adVideoStarted) || void 0 === s ? void 0 : s.t) || 0, c.videoData.watched25 = (null === (o = i.adVideoWatchedPercentwatch_25_percent) || void 0 === o ? void 0 : o.vt) || 0, c.videoData.watched50 = (null === (d = i.adVideoWatchedPercentwatch_50_percent) || void 0 === d ? void 0 : d.vu) || 0, c.videoData.watched75 = (null === (a = i.adVideoWatchedPercentwatch_75_percent) || void 0 === a ? void 0 : a.vv) || 0, c.videoData.watched100 = (null === (l = i.adVideoWatchedPercentwatch_100_percent) || void 0 === l ? void 0 : l.vx) || 0)
					}
					return c
				}),
				B = Object(s.a)((e, {
					postIds: t
				}) => {
					const i = e.posts.models,
						n = {};
					return t.map(e => {
						n[e] = i[e]
					}), n
				}),
				M = Object(n.a)(L, y, (e, t) => t.limit, (e, t, i) => {
					let n = t;
					return i && (n = t.slice(0, i)), n.reduce((t, i) => (t[i] = e[i], t), {})
				}),
				U = Object(s.a)((e, t) => {
					const i = M(e, t),
						n = {},
						r = e.posts.models;
					return Object.keys(i).forEach(e => {
						const {
							crosspostRootId: t
						} = i[e];
						t && (n[t] = r[t])
					}), {
						...i,
						...n
					}
				}),
				G = (e, {
					postId: t,
					disallowProfile: i
				}) => {
					const n = N(e, {
						postId: t
					});
					if (!n) return;
					const {
						belongsTo: r
					} = n;
					return i || r.type !== d.a.PROFILE ? e.subreddits.models[r.id] || !1 : e.profiles.models[r.id] || !1
				},
				q = (e, {
					postId: t
				}) => {
					const i = G(e, {
						postId: t
					});
					if (i) return Object(c.h)(i) ? Object(l.b)(i) : Object(l.c)(i)
				},
				V = (e, {
					postId: t
				}) => {
					const i = N(e, {
						postId: t
					});
					return i && i.crosspostRootId ? G(e, {
						postId: i.crosspostRootId
					}) : null
				},
				H = (e, {
					postId: t
				}) => e.posts.expanded[t],
				W = (e, {
					postId: t
				}) => {
					if (!t) return "";
					const i = N(e, {
						postId: t
					});
					return i && i.liveCommentsWebsocket ? i.liveCommentsWebsocket : ""
				},
				z = (e, {
					postId: t
				}) => {
					if (!t) return "";
					const i = N(e, {
						postId: t
					});
					if (!i) return "";
					let n = i.permalink;
					if (i.media && Object(u.H)(i.media)) {
						const {
							id: t,
							type: r
						} = i.belongsTo, s = "subreddit" === r ? e.subreddits.models[t] : null;
						n = s ? Object(a.c)(i.id, s.name) : Object(a.c)(i.id)
					}
					return n
				},
				K = (e, {
					postId: t
				}) => {
					if (!t) return null;
					const i = z(e, {
						postId: t
					});
					return Object(o.a)(i)
				},
				Y = Object(s.a)(e => {
					return e.posts.recent.map(t => e.posts.models[t]).filter(e => !!e)
				}),
				$ = (e, {
					postId: t
				}) => {
					if (!t) return null;
					const i = N(e, {
						postId: t
					});
					return i && i.belongsTo.type !== d.a.PROFILE ? Object(b.G)(e, {
						identifier: i.belongsTo
					}) : null
				},
				Q = (e, {
					postId: t
				}) => {
					const i = N(e, {
							postId: t
						}),
						n = Object(f.m)(e, i.author),
						r = e.profiles.pinnedPosts.data[n];
					return !!r && r.includes(t)
				},
				J = (e, t, i) => {
					const n = Object(f.m)(e, i),
						r = e.profiles.pinnedPosts.initialData[n];
					return !!r && r.includes(t)
				},
				X = (e, t, i) => {
					const n = Object(f.m)(e, i),
						r = e.profiles.pinnedPosts.data[n];
					return !!r && r.includes(t)
				},
				Z = (e, t) => Q(e, t) !== ((e, {
					postId: t
				}) => {
					const i = N(e, {
							postId: t
						}),
						n = Object(f.m)(e, i.author),
						r = e.profiles.pinnedPosts.pending[n];
					return !!r && r.includes(t)
				})(e, t),
				ee = Object(s.a)((e, t) => {
					const i = Object(f.m)(e, t.profileName);
					return e.profiles.pinnedPosts.data[i] || []
				}),
				te = (e, t) => {
					const i = Object(f.m)(e, t.profileName);
					return !!e.profiles.pinnedPosts.data[i]
				},
				ie = (e, t) => {
					const i = N(e, {
							postId: t
						}),
						n = (new Date).getTime();
					return !!i && (n - i.created) / 1e3 / 60 / 60 < 24
				},
				ne = Object(s.a)((e, t) => {
					const i = y(e, t);
					return t.excludePinnedPosts ? i.filter(t => !Q(e, {
						postId: t
					})) : i
				}),
				re = (e, {
					profileName: t
				}) => {
					const i = ee(e, {
						profileName: t
					});
					if (!i.length) return !1;
					const [n] = i, s = N(e, {
						postId: n
					});
					return !!s && (!(t.toLowerCase() === s.author.toLowerCase()) && Object(r.a)(!0, s.distinguishType))
				},
				se = Object(s.a)((e, t) => {
					const {
						models: i
					} = e.posts;
					return t.filter(e => {
						const t = i[e];
						return !!t && !t.isBlank && !t.hidden
					})
				}),
				oe = (e, t, i, n) => {
					const r = y(e, {
						listingKey: t
					});
					if (n) {
						const t = Object(b.D)(e, i);
						if (t) {
							if (!!e.subreddits.appliedFilters.meta[t]) {
								const t = e.posts.metaMap;
								return r.filter(e => !!t[e])
							}
						}
					}
					return r
				},
				de = (e, t) => {
					const i = N(e, t);
					if (!i || i.belongsTo.type === d.a.SUBREDDIT) return !1;
					const n = G(e, t);
					return !!n && Object(g.U)(e, n.name)
				},
				ae = Object(n.a)((e, t) => t.postId, y, (e, t) => {
					const i = t.indexOf(e);
					return i >= 0 ? t[i + 1] : void 0
				}),
				le = (Object(n.a)(ae, e => e.posts.models, (e, t) => e && t[e] || void 0), e => e.posts.modToMemberShare),
				ue = e => {
					const t = le(e);
					return t ? N(e, {
						postId: t
					}) : null
				},
				ce = e => {
					const t = le(e);
					return t && G(e, {
						postId: t
					}) || null
				},
				_e = e => e.posts.crowdControl,
				me = e => {
					const t = _e(e);
					return t ? N(e, {
						postId: t
					}) : null
				},
				pe = e => {
					const t = _e(e);
					if (!t) return;
					const i = N(e, {
						postId: t
					});
					return Object(b.Y)(e, i.belongsTo.id)
				},
				he = e => {
					const t = _e(e);
					if (!t) return;
					const i = N(e, {
							postId: t
						}),
						n = Object(b.U)(e, i.belongsTo.id);
					return n ? n.crowdControlLevel : void 0
				},
				fe = (e, {
					postId: t
				}) => {
					var i;
					return !!((null === (i = e.posts) || void 0 === i ? void 0 : i.followed) || []).find(e => e.id === t)
				},
				be = (e, {
					postId: t
				}) => {
					var i;
					const n = ((null === (i = e.posts) || void 0 === i ? void 0 : i.followed) || []).find(e => e.id === t);
					return !!(n && n.expiresAt < Date.now())
				},
				ge = e => {
					var t;
					const i = null === (t = Object(m.a)(e)) || void 0 === t ? void 0 : t.postId;
					return i ? N(e, {
						postId: i
					}) : null
				},
				we = e => e.posts.isAnimatingUpvote,
				ve = (e, t) => {
					var i;
					const n = [];
					for (const r of t)(null === (i = e.posts.carousel.items) || void 0 === i ? void 0 : i[r]) && n.push(e.posts.carousel.items[r]);
					return n
				}
		},
		"./src/reddit/selectors/profile.ts": function(e, t, i) {
			"use strict";
			i.d(t, "p", (function() {
				return m
			})), i.d(t, "j", (function() {
				return p
			})), i.d(t, "i", (function() {
				return h
			})), i.d(t, "m", (function() {
				return b
			})), i.d(t, "a", (function() {
				return g
			})), i.d(t, "b", (function() {
				return w
			})), i.d(t, "f", (function() {
				return v
			})), i.d(t, "q", (function() {
				return y
			})), i.d(t, "h", (function() {
				return E
			})), i.d(t, "g", (function() {
				return S
			})), i.d(t, "k", (function() {
				return T
			})), i.d(t, "l", (function() {
				return O
			})), i.d(t, "n", (function() {
				return I
			})), i.d(t, "o", (function() {
				return R
			})), i.d(t, "r", (function() {
				return F
			})), i.d(t, "c", (function() {
				return N
			})), i.d(t, "d", (function() {
				return C
			})), i.d(t, "e", (function() {
				return j
			}));
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/reselect/es/index.js"),
				s = i("./src/lib/objectSelector/index.ts"),
				o = i("./src/lib/pageTitle/index.ts"),
				d = i("./src/lib/safeGet/index.ts"),
				a = i("./src/reddit/models/Multireddit/index.ts"),
				l = i("./src/reddit/models/User/index.ts"),
				u = i("./src/reddit/selectors/subreddit.ts"),
				c = i("./src/reddit/selectors/user.ts");
			const _ = [],
				m = (e, {
					profileId: t
				}) => e.profiles.models[t],
				p = (e, {
					profileName: t
				}) => e.profiles.models[b(e, t)],
				h = (e, t) => e.profiles.models[t],
				f = Object(r.a)(e => e.profiles.models, e => {
					const t = {};
					for (const i in e) {
						const n = e[i];
						t[n.name.toLowerCase()] = n.id
					}
					return t
				}),
				b = (e, t) => Object(d.a)(f(e), t ? t.toLowerCase() : ""),
				g = (e, {
					profileName: t
				}) => {
					const {
						pending: i
					} = e.profiles.moderated.api;
					return !!(t && t in i) && i[t.toLowerCase()]
				},
				w = (e, {
					profileName: t
				}) => {
					const {
						pending: i
					} = e.profiles.multireddits.api;
					return !!(t && t in i) && i[t.toLowerCase()]
				},
				v = (e, {
					profileName: t
				}) => {
					const i = Object(c.k)(e);
					if (!i || !t) return !1;
					const n = Object(l.e)(i);
					return I(e, {
						profileName: n
					}).some(e => e.name.toLowerCase() === t.toLowerCase())
				},
				y = (e, {
					profileName: t
				}) => {
					const i = p(e, {
						profileName: t
					});
					return i && `${n.fbt._("{profileTitleOrName} ({displayText}) - Reddit",[n.fbt._param("profileTitleOrName",i.title||i.name),n.fbt._param("displayText",i.displayText)],{hk:"1MLLB8"})}` || `${Object(o.e)()}`
				},
				E = (e, {
					profileName: t
				}) => {
					const i = b(e, t);
					return e.profiles.about[i]
				},
				S = (e, t) => e.profiles.about[t],
				T = Object(s.a)((e, {
					profileName: t
				}) => void 0 !== e.profiles.moderated.models[t ? t.toLowerCase() : ""]),
				O = (e, {
					profileName: t
				}) => void 0 !== e.profiles.multireddits.pageInfo[t ? t.toLowerCase() : ""],
				I = Object(s.a)((e, {
					profileName: t
				}) => {
					const i = Object(d.a)(e.profiles.moderated.models, t ? t.toLowerCase() : "");
					if (!i) return _;
					const n = [];
					return i.forEach(t => {
						Object(u.S)(e, {
							subredditId: t
						}) ? n.push(Object(u.S)(e, {
							subredditId: t
						})) : m(e, {
							profileId: t
						}) && n.push(m(e, {
							profileId: t
						}))
					}), n
				}),
				R = Object(r.a)((e, t) => {
					const i = Object(c.wb)(e, {
						userName: t.profileName
					});
					return i ? e.multireddits.byUserId[i.id] : null
				}, e => e.multireddits.models, (e, t) => e ? e.map(e => t[e]).filter(e => e.visibility === a.e.Public) : null),
				F = Object(r.a)(e => e.trophies, e => e.profiles.trophyCases, (e, t) => t, (e, t, i) => {
					const n = t[i];
					return n ? n.map(t => e[t]) : []
				}),
				N = (e, {
					extraCommentsId: t
				}) => e.pages.profileOverview.conversations.extraComments.models[t],
				C = (e, {
					profileName: t
				}) => e.profiles.moderated.pageInfo[t] ? e.profiles.moderated.pageInfo[t].hasNextPage : void 0,
				j = (e, {
					profileName: t
				}) => !!e.profiles.multireddits.pageInfo[t] && e.profiles.multireddits.pageInfo[t].hasNextPage
		},
		"./src/reddit/selectors/profileComments.ts": function(e, t, i) {
			"use strict";
			i.d(t, "f", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "a", (function() {
				return a
			})), i.d(t, "b", (function() {
				return l
			})), i.d(t, "d", (function() {
				return u
			})), i.d(t, "c", (function() {
				return c
			}));
			var n = i("./node_modules/lodash/set.js"),
				r = i.n(n),
				s = i("./src/lib/objectSelector/index.ts");
			const o = (e, {
					listingKey: t
				}) => {
					return e.profileCommentsPage.commentIds[t] || []
				},
				d = Object(s.a)((e, {
					listingKey: t
				}) => {
					const i = e.features.comments.models;
					return o(e, {
						listingKey: t
					}).reduce((e, t) => r()(e, t, i[t].postId), {})
				}),
				a = (e, {
					listingKey: t
				}) => e.profileCommentsPage.api.error[t],
				l = (e, {
					listingKey: t
				}) => e.profileCommentsPage.api.pending[t],
				u = (e, {
					listingKey: t
				}) => e.profileCommentsPage.loadMore[t],
				c = (e, {
					listingKey: t
				}) => e.profileCommentsPage.fetchedTokens[t]
		},
		"./src/reddit/selectors/responsivePage.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/selectors/meta.ts");
			const s = Object(n.a)(r.f, r.h, e => {
				var t, i, n;
				return null === (n = null === (i = null === (t = e.platform) || void 0 === t ? void 0 : t.currentPage) || void 0 === i ? void 0 : i.meta) || void 0 === n ? void 0 : n.isResponsive
			}, (e, t, i) => !(!e && !t || !i))
		},
		"./src/reddit/selectors/responsiveSettings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return a
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./src/lib/constants/index.ts"),
				r = i("./src/reddit/contexts/PageLayer/index.tsx"),
				s = i("./src/reddit/selectors/meta.ts"),
				o = i("./src/reddit/selectors/user.ts");
			const d = new Set([n.cc.Creator, n.cc.Messaging, n.cc.Payments, n.cc.SpecialMembership]),
				a = (e, t) => !(!Object(s.f)(e) && !Object(s.h)(e)) && (!(!Object(o.N)(e) && !Object(o.O)(e)) && (!!Object(r.M)(t.pageLayer) && (!(!t.pageLayer || !t.pageLayer.routeMatch) && !d.has(t.pageLayer.routeMatch.match.params.page))))
		},
		"./src/reddit/selectors/runTimeEnvVars.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "b", (function() {
				return r
			})), i.d(t, "a", (function() {
				return s
			}));
			i("./src/lib/constants/index.ts");
			const n = e => e.runTimeEnvVars.staging,
				r = e => n(e),
				s = e => e.runTimeEnvVars.startTimeInMillis
		},
		"./src/reddit/selectors/searchResults.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return b
			})), i.d(t, "j", (function() {
				return g
			})), i.d(t, "b", (function() {
				return w
			})), i.d(t, "c", (function() {
				return v
			})), i.d(t, "f", (function() {
				return y
			})), i.d(t, "g", (function() {
				return E
			})), i.d(t, "p", (function() {
				return S
			})), i.d(t, "h", (function() {
				return T
			})), i.d(t, "a", (function() {
				return O
			})), i.d(t, "e", (function() {
				return I
			})), i.d(t, "v", (function() {
				return R
			})), i.d(t, "t", (function() {
				return F
			})), i.d(t, "u", (function() {
				return N
			})), i.d(t, "w", (function() {
				return C
			})), i.d(t, "x", (function() {
				return j
			})), i.d(t, "z", (function() {
				return A
			})), i.d(t, "q", (function() {
				return x
			})), i.d(t, "y", (function() {
				return D
			})), i.d(t, "r", (function() {
				return P
			})), i.d(t, "s", (function() {
				return L
			})), i.d(t, "n", (function() {
				return k
			})), i.d(t, "l", (function() {
				return B
			})), i.d(t, "m", (function() {
				return M
			})), i.d(t, "o", (function() {
				return U
			})), i.d(t, "d", (function() {
				return G
			})), i.d(t, "k", (function() {
				return q
			}));
			var n = i("./src/lib/initializeClient/installReducer.ts"),
				r = i("./src/reddit/components/SearchNSFWToggle/hooks.ts"),
				s = i("./src/reddit/helpers/localStorage/index.ts"),
				o = i("./node_modules/redux/es/redux.js"),
				d = i("./node_modules/icepick/icepick.js"),
				a = i("./src/reddit/actions/pages/search/index.ts"),
				l = i("./src/reddit/actions/search.ts");
			const u = {};
			var c = (e = u, t) => {
					const {
						type: i,
						payload: n
					} = t;
					switch (i) {
						case a.c:
						case l.e:
							return n.comments ? Object(d.merge)(e, n.comments) : e;
						default:
							return e
					}
				},
				_ = Object(o.c)({
					models: c
				}),
				m = Object(o.c)({
					comments: _
				}),
				p = i("./src/reddit/selectors/posts.ts"),
				h = i("./src/reddit/selectors/user.ts");
			Object(n.a)({
				pages: {
					search: m
				}
			});
			const f = [],
				b = (e, {
					listingKey: t
				}) => e.listings.communityOrder.api.error[t],
				g = (e, {
					listingKey: t
				}) => e.listings.communityOrder.api.pending[t],
				w = (e, {
					listingKey: t
				}) => e.listings.authorOrder.api.error[t],
				v = (e, {
					listingKey: t
				}) => e.listings.authorOrder.api.pending[t],
				y = (e, {
					listingKey: t
				}) => e.listings.commentOrder.api.error[t],
				E = (e, {
					listingKey: t
				}) => e.listings.commentOrder.api.pending[t],
				S = (e, {
					listingKey: t
				}) => e.listings.listingOrder.identifiers[t] || [],
				T = (e, {
					listingKey: t
				}) => e.listings.communityOrder.identifiers[t] || [],
				O = (e, {
					listingKey: t
				}) => e.listings.authorOrder.identifiers[t] || [],
				I = (e, {
					listingKey: t
				}) => e.listings.commentOrder.identifiers[t] || [],
				R = (e, {
					listingKey: t
				}) => e.listings.communityOrder.loadMore[t],
				F = (e, {
					listingKey: t
				}) => e.listings.authorOrder.loadMore[t],
				N = (e, {
					listingKey: t
				}) => e.listings.commentOrder.loadMore[t],
				C = (e, {
					listingKey: t
				}) => e.listings.postOrder.treatment[t],
				j = e => e.search.searchQuery,
				A = e => {
					const t = e.search.searchQuery;
					if (!t) return f;
					const i = e.search.typeahead.idsByQuery[t.toLowerCase()];
					if (!i) return f;
					const n = [];
					return i.forEach(t => {
						n.push(e.search.typeahead.models[t])
					}), n
				},
				x = e => e.search.typeahead.idsByQuery,
				D = e => {
					const t = e.listings.activeKey;
					return e.search.viewTreatment[t]
				},
				P = e => e.search.isDropdownOpen,
				L = e => e.search.isSubredditSearchEnabled,
				k = (e, t) => !!g(e, t) || T(e, t).length > 0,
				B = (e, t) => !!v(e, t) || O(e, t).length > 0,
				M = (e, t) => !!E(e, t) || I(e, t).length > 0,
				U = (e, t) => !!((e, {
					listingKey: t
				}) => e.listings.postOrder.api.pending[t])(e, t) || Object(p.N)(e, t).length > 0,
				G = (e, t) => {
					var i, n;
					return null === (n = null === (i = e.pages) || void 0 === i ? void 0 : i.search) || void 0 === n ? void 0 : n.comments.models[t]
				};

			function q(e) {
				const t = Object(h.ib)(e),
					i = Object(s.D)(r.a);
				return !!(t && (null == i ? void 0 : i.allowNsfwSearchResults) && (null == i ? void 0 : i.expires) > Date.now())
			}
		},
		"./src/reddit/selectors/seo/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return h
			})), i.d(t, "b", (function() {
				return f
			})), i.d(t, "c", (function() {
				return b
			})), i.d(t, "d", (function() {
				return g
			}));
			var n, r = i("./node_modules/reselect/es/index.js"),
				s = i("./src/reddit/contexts/PageLayer/index.tsx");
			! function(e) {
				e.GoogleBot = "googlebot", e.BingBot = "bingbot", e.AppleBot = "applebot"
			}(n || (n = {}));
			var o = i("./src/reddit/models/Media/index.ts"),
				d = i("./src/reddit/models/Post/index.ts"),
				a = i("./src/reddit/models/RichTextJson/index.ts"),
				l = i("./src/reddit/models/Subreddit/index.ts"),
				u = i("./src/reddit/selectors/experiments/postSeo.ts"),
				c = i("./src/reddit/selectors/platform.ts"),
				_ = i("./src/reddit/selectors/posts.ts"),
				m = i("./src/reddit/selectors/subreddit.ts"),
				p = i("./src/reddit/selectors/user.ts");
			const h = e => e.seo.crawler,
				f = e => e.meta.crawler === n.GoogleBot,
				b = Object(r.a)(p.N, m.K, c.i, e => Object(u.e)(e), e => {
					const t = h(e);
					return t && t.name || null
				}, (e, t, i, n, r) => Boolean(r && !e && !i && n && !Object(l.h)(t))),
				g = (e, {
					pageLayer: t
				}) => {
					if (!t || !Object(s.x)(t) || Object(s.K)(t)) return !1;
					const {
						partialPostId: i
					} = !!t && t.urlParams;
					if (!i) return !1;
					const n = i && Object(d.t)(i),
						r = Object(_.G)(e, {
							postId: n
						});
					return !(!r || !r.media) && (r.media.type === o.o.IMAGE || r.media.type === o.o.RTJSON && r.media.richtextContent && r.media.richtextContent.document && r.media.richtextContent.document.some(({
						e
					}) => e === a.m))
				}
		},
		"./src/reddit/selectors/structuredStyles.ts": function(e, t, i) {
			"use strict";
			i.d(t, "i", (function() {
				return c
			})), i.d(t, "k", (function() {
				return _
			})), i.d(t, "o", (function() {
				return m
			})), i.d(t, "p", (function() {
				return b
			})), i.d(t, "b", (function() {
				return g
			})), i.d(t, "g", (function() {
				return w
			})), i.d(t, "f", (function() {
				return v
			})), i.d(t, "c", (function() {
				return y
			})), i.d(t, "n", (function() {
				return E
			})), i.d(t, "e", (function() {
				return S
			})), i.d(t, "m", (function() {
				return T
			})), i.d(t, "d", (function() {
				return O
			})), i.d(t, "h", (function() {
				return I
			})), i.d(t, "j", (function() {
				return R
			})), i.d(t, "a", (function() {
				return F
			})), i.d(t, "l", (function() {
				return N
			}));
			var n = i("./node_modules/lodash/isEqual.js"),
				r = i.n(n),
				s = i("./node_modules/reselect/es/index.js"),
				o = i("./src/lib/objectSelector/index.ts"),
				d = i("./src/reddit/models/StructuredStyles/index.ts"),
				a = i("./src/reddit/selectors/platform.ts"),
				l = i("./src/reddit/selectors/subreddit.ts"),
				u = i("./src/reddit/selectors/user.ts");
			const c = e => e.structuredStyles.isEditing,
				_ = (e, t) => e.structuredStyles.models[t.subredditId],
				m = Object(s.a)(_, e => Object(d.h)(e)),
				p = e => e.structuredStyles.draft,
				h = {},
				f = Object(o.a)((e, t) => {
					const i = Object(l.S)(e, t),
						n = ((e, t) => {
							const i = _(e, t);
							if (i) return {
								url: i.communityIcon,
								color: i.primaryColor
							}
						})(e, t);
					return n && n.url ? {
						...n,
						altText: i && i.displayText
					} : ((e, t) => e && e.icon ? {
						altText: e.displayText,
						url: e.icon.url,
						color: t
					} : h)(i, n ? n.color : void 0)
				}),
				b = (e, t) => {
					const i = Object(l.D)(e, t.subredditName);
					return i ? f(e, {
						subredditId: i
					}) : h
				},
				g = e => {
					const t = Object(a.c)(e);
					return t ? f(e, {
						subredditId: t
					}) : h
				},
				w = (e, t) => {
					const i = e.structuredStyles.imagePreviews[t.name];
					if (i && i in e.imageUploads) return e.imageUploads[i]
				},
				v = Object(o.a)(e => {
					const t = e.structuredStyles.imagePreviews,
						i = {};
					for (const n in t) {
						const t = w(e, {
							name: n
						});
						t && (i[n] = t.url)
					}
					return i
				}),
				y = (e, t) => p(e)[t.name],
				E = e => e.structuredStyles.models,
				S = e => e.structuredStyles.flairTemplate.models,
				T = (e, t) => e.structuredStyles.models[t],
				O = e => e.structuredStyles.exportStyles.pending,
				I = e => e.structuredStyles.isBladeEditorDirty,
				R = (e, {
					subredditId: t
				}) => {
					const i = e.subreddits.about[t],
						n = i && i.quarantinePermissions;
					return !!n && !n.styles
				},
				F = Object(s.a)(c, I, p, (e, t) => t.subredditId && _(e, {
					subredditId: t.subredditId
				}), (e, t, i, n) => !(!e || !i) && (t || !r()(i, n))),
				N = (e, t) => {
					if (Object(u.ob)(e)) return !0;
					if (t) {
						const i = t.subredditId || t.subredditName && Object(l.D)(e, t.subredditName);
						if (i && Object(u.nb)(e, {
								subredditId: i
							})) return !0
					}
					return !1
				}
		},
		"./src/reddit/selectors/subreddit.ts": function(e, t, i) {
			"use strict";
			i.d(t, "l", (function() {
				return w
			})), i.d(t, "ab", (function() {
				return v
			})), i.d(t, "b", (function() {
				return y
			})), i.d(t, "d", (function() {
				return S
			})), i.d(t, "c", (function() {
				return T
			})), i.d(t, "G", (function() {
				return O
			})), i.d(t, "K", (function() {
				return I
			})), i.d(t, "J", (function() {
				return R
			})), i.d(t, "Z", (function() {
				return F
			})), i.d(t, "S", (function() {
				return N
			})), i.d(t, "q", (function() {
				return C
			})), i.d(t, "y", (function() {
				return j
			})), i.d(t, "X", (function() {
				return A
			})), i.d(t, "eb", (function() {
				return x
			})), i.d(t, "db", (function() {
				return P
			})), i.d(t, "cb", (function() {
				return L
			})), i.d(t, "m", (function() {
				return k
			})), i.d(t, "e", (function() {
				return B
			})), i.d(t, "r", (function() {
				return M
			})), i.d(t, "bb", (function() {
				return q
			})), i.d(t, "x", (function() {
				return V
			})), i.d(t, "a", (function() {
				return H
			})), i.d(t, "D", (function() {
				return W
			})), i.d(t, "E", (function() {
				return K
			})), i.d(t, "g", (function() {
				return Y
			})), i.d(t, "u", (function() {
				return $
			})), i.d(t, "t", (function() {
				return Q
			})), i.d(t, "p", (function() {
				return J
			})), i.d(t, "H", (function() {
				return X
			})), i.d(t, "I", (function() {
				return Z
			})), i.d(t, "V", (function() {
				return ee
			})), i.d(t, "R", (function() {
				return te
			})), i.d(t, "O", (function() {
				return ie
			})), i.d(t, "P", (function() {
				return ne
			})), i.d(t, "Q", (function() {
				return re
			})), i.d(t, "C", (function() {
				return se
			})), i.d(t, "w", (function() {
				return oe
			})), i.d(t, "A", (function() {
				return de
			})), i.d(t, "z", (function() {
				return ae
			})), i.d(t, "s", (function() {
				return le
			})), i.d(t, "k", (function() {
				return ue
			})), i.d(t, "n", (function() {
				return ce
			})), i.d(t, "o", (function() {
				return _e
			})), i.d(t, "j", (function() {
				return me
			})), i.d(t, "i", (function() {
				return pe
			})), i.d(t, "f", (function() {
				return he
			})), i.d(t, "h", (function() {
				return fe
			})), i.d(t, "v", (function() {
				return be
			})), i.d(t, "Y", (function() {
				return ge
			})), i.d(t, "U", (function() {
				return we
			})), i.d(t, "T", (function() {
				return ve
			})), i.d(t, "B", (function() {
				return ye
			})), i.d(t, "W", (function() {
				return Ee
			})), i.d(t, "N", (function() {
				return Se
			})), i.d(t, "L", (function() {
				return Te
			})), i.d(t, "M", (function() {
				return Oe
			})), i.d(t, "F", (function() {
				return Ie
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/isFakeSubreddit/index.ts"),
				o = i("./src/lib/objectSelector/index.ts"),
				d = i("./src/lib/pageTitle/index.ts"),
				a = i("./src/reddit/constants/posts.ts"),
				l = i("./src/reddit/helpers/isPost.ts"),
				u = i("./src/reddit/helpers/widgets/index.tsx"),
				c = (i("./src/reddit/models/Profile/mock.ts"), i("./src/reddit/models/Subreddit/index.ts")),
				_ = (i("./src/reddit/models/Subreddit/mock.ts"), i("./src/reddit/models/SubredditRestrictions/index.ts")),
				m = i("./src/lib/safeGet/index.ts"),
				p = i("./src/reddit/selectors/isModeratorOfSubreddit.ts"),
				h = i("./src/reddit/selectors/platform.ts"),
				f = i("./src/reddit/selectors/profile.ts"),
				b = i("./src/reddit/selectors/user.ts");
			const g = [],
				w = e => Boolean(e && e.subredditId && "string" == typeof e.subredditId),
				v = Object(o.a)((e, {
					subredditIds: t
				}) => {
					if (0 === t.length) return g;
					const i = [];
					return t.forEach(t => {
						const n = e.subreddits.models[t];
						n && i.push(n)
					}), i
				}),
				y = (e, {
					profileName: t
				}) => {
					if (!t) return null;
					const i = Object(f.j)(e, {
						profileName: t
					});
					return i ? i.url : `/user/${t}/`
				},
				E = (e, t, i) => {
					const n = (null == i ? void 0 : i.languageCode) || "",
						r = (null == i ? void 0 : i.countryCode) || "",
						o = t.toLowerCase(),
						d = n ? `/${n}` : "",
						a = r ? `-${r}` : "";
					return e ? e.url : Object(s.a)(o, {
						countryCode: r,
						languageCode: n
					}) ? d + a + "/r/" + o + "/" : null
				},
				S = (e, t) => {
					if (!t.subredditName) return null;
					const i = W(e, t.subredditName),
						n = N(e, {
							subredditId: i
						});
					return E(n, t.subredditName, {
						languageCode: t.languageCode,
						countryCode: t.countryCode
					})
				},
				T = (e, t) => {
					const i = N(e, {
						subredditId: t
					});
					if (i) return E(i, i.name) || "";
					const n = Object(f.p)(e, {
						profileId: t
					});
					return n ? n.url : ""
				},
				O = (e, {
					identifier: t
				}) => t.type === a.a.PROFILE ? e.profiles.about[t.id] || {} : e.subreddits.about[t.id],
				I = (e, {
					identifier: t
				}) => t.type === a.a.PROFILE ? e.profiles.models[t.id] || !1 : e.subreddits.models[t.id] || !1,
				R = (e, {
					identifier: t
				}) => t.type === a.a.PROFILE ? Object(f.m)(e, t.name) || null : W(e, t.name) || null,
				F = e => e.subreddits.models,
				N = (e, {
					subredditId: t
				}) => e.subreddits.models[t] || !1,
				C = (e, {
					subredditId: t
				}) => e.subreddits.related[t] || [],
				j = (e, t) => {
					var i;
					const n = [];
					for (const r of t)(null === (i = e.subreddits.carousel.items) || void 0 === i ? void 0 : i[r]) && n.push(e.subreddits.carousel.items[r]);
					return n
				},
				A = (e, t) => {
					const i = N(e, t);
					if (i) return i.type
				},
				x = (e, {
					identifier: t
				}, i = !1) => {
					const n = R(e, {
						identifier: t
					});
					if (!n) return i;
					const r = O(e, {
						identifier: {
							id: n,
							type: t.type
						}
					});
					return r && Object(b.O)(e) ? !!r.userIsSubscriber : t.type === a.a.SUBREDDIT ? e.subscriptions.subredditOrder.indexOf(n) > -1 : e.subscriptions.profileOrder.indexOf(n) > -1
				},
				D = (e, {
					subredditName: t,
					action: i
				}) => {
					const n = $(e, {
						subredditName: t
					});
					return !!(n && i && (Object(p.c)(e, {
						subredditId: W(e, t)
					}) || n.userIsContributor || i === _.e.Post && !1 === n.restrictPosting || i === _.e.Comment && !1 === n.restrictCommenting))
				},
				P = (e, t) => {
					var i;
					return Boolean(null === (i = Q(e, t)) || void 0 === i ? void 0 : i.userIsBanned)
				},
				L = e => {
					const t = Object(h.e)(e);
					return Boolean(t && P(e, {
						subredditId: t.id
					}))
				},
				k = e => {
					const t = Object(h.e)(e);
					if (t && "restricted" === t.type) {
						const i = be(e)[t.id];
						if (i) return i.restrictCommenting && i.restrictPosting ? _.e.PostAndComment : i.restrictCommenting ? _.e.Comment : _.e.Post
					}
					return _.e.View
				},
				B = (e, t) => {
					const i = Object(h.e)(e),
						n = Object(b.O)(e),
						s = 3 * r.B,
						o = Date.now() - s;
					if (i && n && "restricted" === i.type) {
						if (D(e, {
								subredditName: i.name,
								action: t
							})) return !1;
						const n = Object(b.Db)(e).subreddit[i.id];
						if ((n ? n.isContributorRequestTimestamp : 0) > o) return !0
					}
					return !1
				},
				M = (e, t) => {
					const i = Object(h.e)(e);
					if (Object(b.O)(e) && i && "restricted" === i.type) {
						const n = !D(e, {
								subredditName: i.name,
								action: t
							}),
							r = !B(e);
						if (n && r) return !0
					}
					return !1
				},
				U = Object(n.a)(e => e.subreddits.models, e => {
					const t = {};
					for (const i in e) {
						const n = e[i];
						n.type !== c.f.User && (t[n.name.toLowerCase()] = n.id)
					}
					return t
				}),
				G = Object(n.a)(e => e.subreddits.unavailableModels, e => {
					const t = {};
					for (const i in e) {
						const n = e[i];
						t[n.name.toLowerCase()] = n.id
					}
					return t
				}),
				q = (e, {
					subredditName: t
				}) => e.subreddits.unavailableModels[((e, t) => Object(m.a)(G(e), t ? t.toLowerCase() : ""))(e, t)],
				V = (e, {
					subredditName: t
				}) => e.subreddits.models[W(e, t)],
				H = (e, {
					subredditName: t
				}) => V(e, {
					subredditName: t
				}) || q(e, {
					subredditName: t
				}),
				W = (e, t) => Object(m.a)(U(e), t ? t.toLowerCase() : ""),
				z = Object(n.a)(e => e.subreddits.communityInfo, e => {
					const t = {};
					for (const i in e) {
						const n = e[i];
						n.id && (t[n.name.toLowerCase()] = n.id)
					}
					return t
				}),
				K = (e, t) => Object(m.a)(z(e), t ? t.toLowerCase() : ""),
				Y = e => {
					const t = Object(h.d)(e);
					return t ? $(e, {
						subredditName: t
					}) : null
				},
				$ = (e, {
					subredditName: t
				}) => e.subreddits.about[W(e, t)],
				Q = (e, {
					subredditId: t
				}) => e.subreddits.about[t],
				J = (e, t) => {
					const i = Object(f.j)(e, {
						profileName: t
					});
					return i ? e.subreddits.about[i.id] : void 0
				},
				X = (e, {
					commentId: t
				}) => {
					var i, n;
					const r = null === (n = null === (i = e.features) || void 0 === i ? void 0 : i.comments) || void 0 === n ? void 0 : n.models[t];
					if (!r) return;
					const s = r.subredditId;
					return e.profiles.models[s] || e.subreddits.models[s]
				},
				Z = (e, {
					thingId: t
				}) => {
					if (Object(l.a)(t)) {
						const i = e.posts.models[t];
						if (!i) return;
						return I(e, {
							identifier: i.belongsTo
						})
					}
					return X(e, {
						commentId: t
					})
				},
				ee = (e, {
					subredditName: t
				}) => {
					const i = V(e, {
						subredditName: t
					});
					return i && i.title || Object(d.e)().toString()
				},
				te = (e, {
					subredditId: t
				}) => e.subreddits.rules[t] ? e.subreddits.rules[t].rules : g,
				ie = Object(o.a)((e, {
					subredditId: t
				}) => {
					var i, n;
					return (null === (n = null === (i = e.subreddits) || void 0 === i ? void 0 : i.rules[t]) || void 0 === n ? void 0 : n.rules) ? e.subreddits.rules[t].rules.map(e => e.shortName) : g
				}),
				ne = (e, {
					subredditId: t
				}) => !!e.subreddits.rules[t],
				re = e => e.subreddits.api.rules,
				se = (e, {
					subredditId: t
				}) => !!e.subreddits.models[t] && !!e.subreddits.models[t].freeFormReports,
				oe = (e, {
					subredditName: t
				}) => {
					const i = $(e, {
						subredditName: t
					});
					return i && i.allowedPostTypes
				},
				de = (e, {
					subredditName: t
				}) => {
					const i = $(e, {
						subredditName: t
					});
					return i && i.coins
				},
				ae = (e, {
					subredditId: t
				}) => {
					const i = e.subreddits.about[t];
					return i && i.coins
				},
				le = (e, {
					subredditName: t
				}) => {
					const i = W(e, t),
						n = e.widgets.sidebar[i],
						r = [],
						s = e.widgets.moderatorIds[i],
						o = e.widgets.models[s];
					let d = !1;
					return n && n.forEach((function(t) {
						e.widgets.models[t] && (r.push(e.widgets.models[t]), t === s && (d = !0))
					})), o && !d && r.push(o), r
				},
				ue = (e, t) => {
					return N(e, t).name === r.Vb
				},
				ce = e => e.subreddits.moderated.order,
				_e = Object(o.a)(e => {
					const t = ce(e),
						i = e.subreddits.models;
					return t && t.length ? t.map(e => i[e]) : []
				}),
				me = (Object(o.a)((e, t) => v(e, t).map(e => Object(u.c)(e))), e => e.subreddits.api.create.pending),
				pe = e => e.subreddits.api.create.initialCrosspost,
				he = e => e.subreddits.api.create.error.apiError,
				fe = (e, {
					postId: t
				}) => {
					const i = e.posts.models[t].belongsTo.id;
					return !!e.subreddits.rules[i]
				},
				be = e => e.subreddits.about,
				ge = (Object(o.a)(Object(n.a)(v, be, (e, t) => {
					const i = [];
					return e.forEach(e => {
						e.type === c.f.Public && i.push(Object(u.c)(e, t[e.id]))
					}), i
				})), (e, t) => e.subreddits.models[t].url),
				we = (e, t) => e.subreddits.settings[t],
				ve = e => e.subreddits.api.settings.pending,
				ye = (e, {
					subredditId: t
				}) => {
					let i = e.user.prefs.sort;
					if (e.user.prefs.rememberCommunitySort) {
						const n = e.user.prefs.subreddit[t];
						n && n.sort && (i = n.sort)
					}
					return i
				},
				Ee = (e, {
					subredditName: t
				}) => e.subreddits.topContent[t.toLowerCase()],
				Se = (e, t) => e.subreddits.rankings[t],
				Te = (e, t) => {
					var i;
					return !!(null === (i = e.subreddits.models[t.subredditId]) || void 0 === i ? void 0 : i.allowPredictions)
				},
				Oe = (e, t) => {
					var i;
					return !!(null === (i = e.subreddits.models[t.subredditId]) || void 0 === i ? void 0 : i.allowPredictionsTournament)
				},
				Ie = (e, {
					subredditName: t
				}) => {
					const i = $(e, {
						subredditName: t
					});
					return null == i ? void 0 : i.notificationLevel
				}
		},
		"./src/reddit/selectors/subredditAutocomplete.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return h
			})), i.d(t, "b", (function() {
				return f
			})), i.d(t, "c", (function() {
				return g
			})), i.d(t, "a", (function() {
				return S
			})), i.d(t, "e", (function() {
				return T
			}));
			var n = i("./node_modules/lodash/isNil.js"),
				r = i.n(n),
				s = i("./node_modules/reselect/es/index.js"),
				o = i("./src/reddit/helpers/name/index.ts"),
				d = i("./src/reddit/models/Subreddit/index.ts"),
				a = i("./src/reddit/models/SubredditAutocomplete/index.ts"),
				l = i("./src/reddit/models/User/index.ts"),
				u = i("./src/reddit/selectors/subscriptions.ts"),
				c = i("./src/reddit/selectors/user.ts");
			const _ = (e, t) => t.substring.toLowerCase(),
				m = (e, {
					substring: t
				}) => Object(o.f)(t) ? "" : Object(o.g)(t),
				p = (e, t) => {
					for (let i = e.length; i > 0; i--)
						if (!1 === t(e.slice(0, i))) return
				},
				h = Object(s.a)(m, e => e.subredditAutocomplete.models, (e, t) => {
					let i = null;
					return p(e, e => {
						if (t.hasOwnProperty(e)) return i = t[e], !1
					}), i
				}),
				f = Object(s.a)(m, h, (e, t) => !e || !r()(t) && 0 === t.subreddits.length),
				b = Object(s.a)(u.c, c.E, (e, t) => e.map(e => Object(a.c)(e, t))),
				g = Object(s.a)(m, h, f, e => e.subredditAutocomplete.api.pending, (e, t, i, n) => {
					if (i) return !1;
					let r = !1;
					return p(e, e => n.hasOwnProperty(e) ? (r = n[e], !1) : (!t || t.key !== e) && void 0), r
				}),
				w = Object(s.a)(m, u.c, (e, t) => t.filter(t => -1 !== t.name.toLowerCase().indexOf(e))),
				v = Object(s.a)(_, (e, t) => t.includeUserProfile, c.k, (e, t, i) => {
					if (!t || r()(i) || Object(o.e)(e)) return null;
					const n = Object(o.g)(Object(l.e)(i)),
						s = Object(o.g)(e);
					return n.includes(s) ? Object(a.d)(i) : null
				}),
				y = Object(s.a)(_, (e, t) => t.allowCrosspostableOnly, v, h, w, e => e.subreddits.crosspostable.ids, c.E, (e, t, i, n, r, s, d) => {
					const l = [];
					if (i && l.push(i), Object(o.f)(e)) return l;
					const u = {};
					return r.forEach(e => {
						const i = Object(a.c)(e, d);
						t && !s[e.id] && (i.disabled = !0), u[i.name] = i, l.push(i)
					}), n && n.subreddits.forEach(e => {
						const {
							communityIcon: i,
							icon: n,
							isCrosspostDestination: r,
							name: s,
							...o
						} = e, d = i || n, c = t && !1 === r;
						u[s] || l.push({
							...o,
							disabled: c,
							iconUrl: d,
							name: s,
							type: a.a.OTHER_SUBREDDIT
						})
					}), l
				}),
				E = Object(s.a)(_, c.j, (e, t) => {
					const i = Object(o.g)(e);
					return t.filter(({
						name: e
					}) => e.toLowerCase().includes(i))
				}),
				S = (Object(s.a)(_, v, E, (e, t) => t.partnerConnectionSafeOnly, c.E, (e, t, i, n, r) => {
					const s = [];
					if (t && s.push(t), Object(o.f)(e)) return s;
					let l = i;
					return n && (l = i.filter(e => (e.type === d.f.Public || e.type === d.f.Restricted) && !e.isQuarantined && !e.isNSFW && e.subscribers < 2e5)), s.push(...l.map(e => Object(a.b)(e, a.a.MODERATED_SUBREDDIT, r))), s
				}), Object(s.c)({
					suggestedItems: y,
					fallbackItems: b,
					isAllDataRetrieved: f,
					isPending: g
				})),
				T = Object(s.a)(h, w, (e, t) => t.multireddit.subredditIds || [], c.E, (e, t, i, n) => {
					const r = [],
						s = {};
					return t.forEach(e => {
						const t = Object(a.c)(e, n);
						s[t.name] = t, t.id && i.indexOf(t.id) < 0 && r.push(t)
					}), e && e.subreddits.forEach(e => {
						const {
							communityIcon: t,
							icon: n,
							name: o,
							...d
						} = e, l = t || n;
						!s[o] && i.indexOf(e.id) < 0 && r.push({
							...d,
							iconUrl: l,
							name: o,
							type: a.a.OTHER_SUBREDDIT
						})
					}), r
				})
		},
		"./src/reddit/selectors/subredditSettings.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			})), i.d(t, "b", (function() {
				return o
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/selectors/user.ts");
			const s = Object(n.a)(r.k, e => e.subreddits.settings, (e, t) => {
					if (e && e.profileId) return t[e.profileId]
				}),
				o = (e, t) => e.subreddits.notificationSettings[t.subredditId]
		},
		"./src/reddit/selectors/subscriptions.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return o
			})), i.d(t, "e", (function() {
				return d
			})), i.d(t, "c", (function() {
				return a
			})), i.d(t, "a", (function() {
				return l
			})), i.d(t, "b", (function() {
				return u
			}));
			var n = i("./node_modules/reselect/es/index.js"),
				r = i("./src/reddit/constants/posts.ts"),
				s = i("./src/lib/objectSelector/index.ts");
			const o = e => e.subscriptions.api.fetched,
				d = Object(s.a)(e => {
					const {
						profileOrder: t,
						subredditOrder: i
					} = e.subscriptions;
					return [...i, ...t]
				}),
				a = (Object(s.a)(e => {
					const {
						profileOrder: t,
						subredditOrder: i
					} = e.subscriptions, n = t ? t.map(e => ({
						id: e,
						type: r.a.PROFILE
					})) : [];
					return (i ? i.map(e => ({
						id: e,
						type: r.a.SUBREDDIT
					})) : []).concat(n)
				}), Object(s.a)(Object(n.a)(e => e.subreddits.models, e => e.subscriptions.subredditOrder, (e, t) => {
					if (!t || !t.length) return [];
					const i = [];
					for (const n of t) e[n] && i.push(e[n]);
					return i
				}))),
				l = (Object(s.a)(Object(n.a)(e => e.profiles.models, e => e.subscriptions.profileOrder, (e, t) => {
					if (!t || !t.length) return [];
					return t.map(t => e[t])
				})), e => e.subscriptions.favoriteSubredditOrder),
				u = (Object(s.a)(e => {
					const {
						favoriteSubredditOrder: t,
						favoriteProfileOrder: i
					} = e.subscriptions, n = e.subreddits.models, r = e.profiles.models, s = t ? t.map(e => n[e]) : [], o = i ? i.map(e => r[e]) : [];
					return s.concat(o)
				}), Object(n.a)(e => e.subscriptions.profileOrder, e => e.subscriptions.subredditOrder, (e, t) => e.length + t.length))
		},
		"./src/reddit/selectors/survey.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "b", (function() {
				return s
			})), i.d(t, "d", (function() {
				return o
			}));
			const n = e => {
					var t;
					return null === (t = e.survey) || void 0 === t ? void 0 : t.isDemoEnabled
				},
				r = e => e.survey.activeDemoTrigger,
				s = e => {
					var t;
					return null === (t = e.survey) || void 0 === t ? void 0 : t.demoTriggerThreshold
				},
				o = e => {
					var t;
					return null === (t = e.survey) || void 0 === t ? void 0 : t.isSampleFactorEnabled
				}
		},
		"./src/reddit/selectors/telemetry.ts": function(e, t, i) {
			"use strict";
			i.d(t, "x", (function() {
				return Pe
			})), i.d(t, "w", (function() {
				return Le
			})), i.d(t, "y", (function() {
				return Be
			})), i.d(t, "z", (function() {
				return Me
			})), i.d(t, "v", (function() {
				return Ue
			})), i.d(t, "u", (function() {
				return Ge
			})), i.d(t, "d", (function() {
				return Ve
			})), i.d(t, "h", (function() {
				return He
			})), i.d(t, "R", (function() {
				return We
			})), i.d(t, "g", (function() {
				return ze
			})), i.d(t, "i", (function() {
				return Ye
			})), i.d(t, "j", (function() {
				return $e
			})), i.d(t, "sb", (function() {
				return Je
			})), i.d(t, "eb", (function() {
				return Xe
			})), i.d(t, "tb", (function() {
				return Ze
			})), i.d(t, "o", (function() {
				return et
			})), i.d(t, "q", (function() {
				return tt
			})), i.d(t, "D", (function() {
				return it
			})), i.d(t, "ub", (function() {
				return nt
			})), i.d(t, "I", (function() {
				return dt
			})), i.d(t, "J", (function() {
				return at
			})), i.d(t, "P", (function() {
				return lt
			})), i.d(t, "O", (function() {
				return ut
			})), i.d(t, "k", (function() {
				return ct
			})), i.d(t, "A", (function() {
				return _t
			})), i.d(t, "V", (function() {
				return mt
			})), i.d(t, "C", (function() {
				return pt
			})), i.d(t, "s", (function() {
				return ht
			})), i.d(t, "wb", (function() {
				return ft
			})), i.d(t, "vb", (function() {
				return bt
			})), i.d(t, "T", (function() {
				return gt
			})), i.d(t, "U", (function() {
				return vt
			})), i.d(t, "Y", (function() {
				return yt
			})), i.d(t, "bb", (function() {
				return Et
			})), i.d(t, "fb", (function() {
				return St
			})), i.d(t, "m", (function() {
				return Tt
			})), i.d(t, "n", (function() {
				return Ot
			})), i.d(t, "S", (function() {
				return It
			})), i.d(t, "hb", (function() {
				return Rt
			})), i.d(t, "gb", (function() {
				return Ft
			})), i.d(t, "W", (function() {
				return Nt
			})), i.d(t, "jb", (function() {
				return Ct
			})), i.d(t, "nb", (function() {
				return jt
			})), i.d(t, "kb", (function() {
				return At
			})), i.d(t, "lb", (function() {
				return xt
			})), i.d(t, "mb", (function() {
				return Dt
			})), i.d(t, "pb", (function() {
				return Pt
			})), i.d(t, "rb", (function() {
				return Lt
			})), i.d(t, "xb", (function() {
				return kt
			})), i.d(t, "Z", (function() {
				return Mt
			})), i.d(t, "ab", (function() {
				return Ut
			})), i.d(t, "e", (function() {
				return Gt
			})), i.d(t, "c", (function() {
				return qt
			})), i.d(t, "a", (function() {
				return Vt
			})), i.d(t, "cb", (function() {
				return Wt
			})), i.d(t, "db", (function() {
				return zt
			})), i.d(t, "p", (function() {
				return Kt
			})), i.d(t, "qb", (function() {
				return Yt
			})), i.d(t, "E", (function() {
				return $t
			})), i.d(t, "N", (function() {
				return Qt
			})), i.d(t, "l", (function() {
				return Jt
			})), i.d(t, "F", (function() {
				return Xt
			})), i.d(t, "M", (function() {
				return Zt
			})), i.d(t, "K", (function() {
				return ti
			})), i.d(t, "L", (function() {
				return ii
			})), i.d(t, "b", (function() {
				return di
			})), i.d(t, "H", (function() {
				return ai
			})), i.d(t, "f", (function() {
				return li
			})), i.d(t, "ib", (function() {
				return ui
			})), i.d(t, "ob", (function() {
				return ci
			})), i.d(t, "G", (function() {
				return _i
			})), i.d(t, "B", (function() {
				return mi
			})), i.d(t, "t", (function() {
				return pi
			})), i.d(t, "Q", (function() {
				return hi
			})), i.d(t, "r", (function() {
				return fi
			})), i.d(t, "X", (function() {
				return bi
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n, r, s = i("./node_modules/lodash/trimStart.js"),
				o = i.n(s),
				d = i("./node_modules/lodash/unset.js"),
				a = i.n(d),
				l = i("./node_modules/reselect/es/index.js"),
				u = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				c = i.n(u),
				_ = i("./src/config.ts"),
				m = i("./src/lib/constants/index.ts");
			! function(e) {
				e.Received = "received", e.Consumed = "consumed", e.Rejected = "rejected"
			}(n || (n = {})),
			function(e) {
				e.MalformedLinker = "malformedLinker", e.InvalidVersion = "invalidVersion", e.InvalidCheckSum = "invalidCheckSum"
			}(r || (r = {}));
			var p = i("./src/telemetry/helpers/sendCounter.ts");
			const h = "*",
				f = /^[a-zA-Z0-9\-_.]+$/,
				b = 1,
				g = 1;

			function w(e) {
				const t = function(e) {
					const t = e.split(h),
						i = t.length % 2 == 0;
					if (t.length < 4 || !i) return I(r.MalformedLinker), null;
					if (Number(t.shift()) !== g) return I(r.InvalidVersion), null;
					const n = t.shift(),
						s = t.join(h);
					return {
						checksum: n,
						serializedIds: s
					}
				}(e);
				if (!t) return null;
				const {
					checksum: i,
					serializedIds: n
				} = t;
				return function(e, t) {
					for (let i = 0; i <= b; i++) {
						if (v(e, i) === t) return !0
					}
					return !1
				}(n, i) ? function(e) {
					const t = {},
						i = e.split(h);
					for (let n = 0; n < i.length; n += 2) {
						const e = i[n];
						if (!f.test(e)) continue;
						const r = y(i[n + 1]);
						t[e] = r
					}
					return t
				}(n) : (I(r.InvalidCheckSum), null)
			}

			function v(e, t) {
				const i = t || 0;
				return function(e) {
					O || (O = function() {
						const e = new Array(256);
						for (let t = 0; t < 256; t++) {
							let i = t;
							for (let e = 0; e < 8; e++) 1 & i ? i = i >>> 1 ^ T : i >>>= 1;
							e[t] = i
						}
						return e
					}());
					const t = function(e) {
						if ("undefined" != typeof TextEncoder) return (new TextEncoder).encode(e);
						return S(unescape(encodeURIComponent(e)))
					}(e);
					let i = -1 >>> 0;
					for (let n = 0; n < t.length; n++) {
						const e = 255 & (i ^ t[n]);
						i = i >>> 8 ^ O[e]
					}
					return (-1 ^ i) >>> 0
				}([function() {
					const e = (new Date).getTimezoneOffset(),
						t = window.navigator.userLanguage || window.navigator.language;
					return [window.navigator.userAgent, e, t].join(h)
				}(), Math.floor(Date.now() / 6e4) - i, e].join(h)).toString(36)
			}

			function y(e) {
				return function(e) {
					if ("undefined" != typeof TextDecoder) return new TextDecoder("utf-8").decode(e);
					const t = function(e) {
						const t = new Array(e.length);
						for (let i = 0; i < e.length; i++) t[i] = String.fromCharCode(e[i]);
						return t.join("")
					}(new Uint8Array(e.buffer || e));
					return decodeURIComponent(escape(t))
				}(function(e) {
					return S(atob(e.replace(/[-_.]/g, e => E[e])))
				}(String(e)))
			}
			const E = {
				"-": "+",
				_: "/",
				".": "="
			};

			function S(e) {
				const t = new Uint8Array(e.length);
				for (let i = 0; i < e.length; i++) {
					const n = e.charCodeAt(i);
					t[i] = n
				}
				return t
			}
			const T = 3988292384;
			let O = null;

			function I(e) {
				Object(p.b)(m.n.Redesign, {
					type: p.a.ClientIdRejected,
					data: {
						reason: e
					}
				})
			}
			var R = i("./src/lib/eventTools/index.ts"),
				F = i("./src/lib/isAdHocMultireddit/index.ts"),
				N = i("./src/lib/isFakeSubreddit/index.ts"),
				C = i("./src/lib/makeSearchKey/index.ts"),
				j = i("./src/lib/sentry/index.ts"),
				A = i("./src/reddit/constants/adEvents.ts"),
				x = i("./src/reddit/constants/blade.ts"),
				D = i("./src/reddit/constants/posts.ts"),
				P = i("./src/reddit/constants/wiki.ts"),
				L = i("./src/reddit/contexts/PageLayer/index.tsx"),
				k = i("./src/reddit/helpers/dom/index.ts");
			const B = () => !document.getElementById(_.a.adblockId);
			let M;
			(M = document.createElement("div")).className = "promotedlink", M.style.height = M.style.width = "1px", M.style.position = "absolute", M.style.left = "-1000000px", M.style.top = "0", M.style.display = "block", document.body.appendChild(M);
			const U = () => B() ? !k.h(M) : null;
			var G = i("./src/reddit/helpers/correlationIdTracker.ts"),
				q = i("./src/reddit/helpers/getCommentsPageSort/index.ts"),
				V = i("./src/reddit/helpers/getPostFromRouteMatch/index.ts"),
				H = i("./src/reddit/helpers/getRichTextContent/index.ts"),
				W = i("./src/reddit/helpers/isPost.ts"),
				z = i("./src/reddit/helpers/postCollection.ts"),
				K = i("./src/reddit/helpers/postEvent.ts"),
				Y = i("./src/reddit/helpers/search/searchImpressionId.ts"),
				$ = i("./src/reddit/helpers/userSnoovatar/index.ts"),
				Q = i("./src/reddit/models/Media/index.ts"),
				J = i("./src/reddit/models/Post/index.ts"),
				X = i("./src/reddit/models/Prediction/Tournament/index.ts"),
				Z = i("./src/reddit/models/Profile/index.ts"),
				ee = i("./src/reddit/models/RichTextJson/index.ts"),
				te = i("./src/reddit/models/SearchDiscoveryUnit/index.ts"),
				ie = i("./src/reddit/selectors/chatPost.ts"),
				ne = i("./src/reddit/selectors/experiments/index.ts"),
				re = i("./src/reddit/selectors/features/predictions/tournaments/index.ts"),
				se = i("./src/reddit/selectors/listings.ts"),
				oe = i("./src/reddit/selectors/meta.ts"),
				de = i("./src/reddit/selectors/platform.ts"),
				ae = i("./src/reddit/selectors/poll/index.ts"),
				le = i("./src/reddit/selectors/postCollection.ts"),
				ue = i("./src/reddit/selectors/postCreations.ts"),
				ce = i("./src/reddit/selectors/posts.ts"),
				_e = i("./src/reddit/selectors/profile.ts"),
				me = i("./src/reddit/selectors/profileComments.ts"),
				pe = i("./src/lib/safeGet/index.ts"),
				he = i("./src/reddit/helpers/search/searchQueryId.ts"),
				fe = i("./src/reddit/helpers/search/SearchTelemetrySource.ts"),
				be = i("./src/reddit/models/Multireddit/index.ts"),
				ge = i("./src/reddit/models/Prediction/index.ts"),
				we = i("./src/reddit/models/User/index.ts"),
				ve = i("./src/reddit/selectors/gold/powerups/index.ts"),
				ye = i("./src/reddit/selectors/media.ts"),
				Ee = i("./src/reddit/selectors/multireddit.ts"),
				Se = i("./src/reddit/selectors/responsiveSettings.ts"),
				Te = i("./src/reddit/selectors/structuredStyles.ts"),
				Oe = i("./src/reddit/selectors/subreddit.ts"),
				Ie = i("./src/reddit/selectors/subredditSettings.ts"),
				Re = i("./src/reddit/selectors/topic.ts"),
				Fe = i("./src/reddit/selectors/user.ts"),
				Ne = i("./src/redditGQL/types.ts"),
				Ce = i("./src/server/helpers/canonicalUrl.tsx"),
				je = i("./src/telemetry/models/Timer.ts"),
				Ae = i("./src/reddit/selectors/experiments/searchQueryAligment.ts"),
				xe = i("./src/reddit/selectors/experiments/serpSIIDs.ts"),
				De = i("./src/reddit/selectors/searchResults.ts");
			const Pe = e => {
					switch (e.route && e.route.meta && e.route.meta.name) {
						case m.Nb.INDEX:
							return "popular" === e.route.meta.telemetryPageType ? "popular" : "home";
						case m.Nb.PROFILE_OVERVIEW:
							return "profile_overview";
						case m.Nb.PROFILE_COMMENTS:
							return "profile_comments";
						case m.Nb.PROFILE_POSTS:
							return "profile_posts";
						case m.Nb.PROFILE:
						case m.Nb.PROFILE_BETA_CONFIRMATION:
						case m.Nb.PROFILE_MODERATION:
						case m.Nb.PROFILE_POST_COMMENTS:
						case m.Nb.PROFILE_PRIVACY:
						case m.Nb.PROFILE_SETTINGS:
							return "profile";
						case m.Nb.PROFILE_PRIVATE: {
							const {
								listingType: t
							} = e.match.params;
							switch (t) {
								case Z.b.Downvoted:
									return "profile_downvoted";
								case Z.b.Hidden:
									return "profile_hidden";
								case Z.b.Upvoted:
									return "profile_upvoted";
								case Z.b.Saved:
									return "profile_saved";
								case Z.b.ReceivedGildings:
									return "profile_gilded";
								case Z.b.GivenGildings:
									return "profile_gilded_given"
							}
							break
						}
						case m.Nb.FOLLOWERS:
							return "follower_list_page";
						case m.Nb.COMMENTS:
						case m.Nb.DUPLICATES:
							return e.match.params.partialCommentId ? "single_comment_thread" : "post_detail";
						case m.Nb.LISTING:
						case m.Nb.SUBREDDIT: {
							if ("popular" === e.route.meta.telemetryPageType) return "popular";
							const {
								subredditName: t
							} = e.match.params;
							if (!t) return "home";
							if (Object(N.a)(t) && Object(F.a)(t)) return "custom_feed";
							switch (t.toLowerCase()) {
								case "popular":
									return e.match.params.sort === m.W.AWARDED ? "awarded" : "popular";
								case "all":
									return "all";
								default:
									return "community"
							}
						}
						case m.Nb.SUBREDDIT_SETTINGS:
							return "subreddit_settings";
						case m.Nb.POST_CREATION:
							return e.match.queryParams && e.match.queryParams.source_id ? "crosspost_submit" : "post_submit";
						case m.Nb.SEARCH_RESULTS:
							return "search_results";
						case m.Nb.MODERATION_PAGES: {
							const t = e.match.params.pageName;
							return "scheduledposts" === t ? "scheduled_posts" : "eventposts" === t ? "event_posts" : `moderation_pages_${t}`
						}
						case m.Nb.MODQUEUE_PAGES: {
							const t = e.match.params.pageName;
							return "modqueue" === t ? "modqueue_queue" : `modqueue_${t}`
						}
						case m.Nb.MULTIREDDIT:
							return "custom_feed";
						case m.Nb.POST_DRAFT:
							return "draft_detail";
						case m.Nb.PUBLIC_ACCESS_NETWORK:
							return "stream_player";
						case m.Nb.EXPLORE:
							return "explore";
						case m.Nb.MOD_LISTING:
							return "r_mod";
						case m.Nb.SUBREDDIT_CREATION:
							return "subreddit_creation";
						case m.Nb.SUBREDDIT_WIKI:
							return "subreddit_wiki";
						case m.Nb.SETTINGS: {
							const t = e.match.params.page;
							return t ? `settings_${t}` : "settings_account"
						}
						case m.Nb.META_MEMBERSHIP_PAYWALL_PAGE:
							return "special_membership_paywall";
						case m.Nb.SUBREDDIT_LEADERBOARD:
							return "leaderboard";
						case m.Nb.TOPIC:
							return "topic";
						case m.Nb.GEOTAGGING:
							return "crowdsource_feed_geo";
						case m.Nb.COINS:
							return "coins_marketing";
						case m.Nb.PREMIUM:
							return "premium_marketing";
						case m.Nb.COLLECTION_COMMENTS:
							return "collection";
						case m.Nb.INBOX_PAGES:
							return "messages";
						case m.Nb.INTERNATIONAL_SITE_PAGE:
							return `lang_site_${e.match.params.countryCode}`;
						default:
							return
					}
				},
				Le = e => {
					const t = e.routeMatch;
					return Pe(t)
				},
				ke = e => {
					if (Object(X.c)(e)) return "tournament";
					if (e.isMeta) return "poll";
					if (!e.media) return "link";
					switch (e.media.type) {
						case "gifvideo":
							return "gif";
						case "embed":
							return "link";
						default:
							return e.media.type
					}
				},
				Be = (e, t, i) => {
					const n = e.listings.postOrder.ids[i];
					return n && n.indexOf(t) >= 0 ? n.indexOf(t) : null
				},
				Me = (e, t, i) => {
					const {
						listings: n
					} = e, r = (t.type === D.a.PROFILE ? n.authorOrder : n.communityOrder).identifiers[i].map(e => e.id);
					return r.indexOf(t.id) >= 0 ? r.indexOf(t.id) : null
				},
				Ue = ({
					listings: {
						commentOrder: {
							identifiers: e
						}
					}
				}, t, i) => {
					var n;
					return null !== (n = e[i].indexOf(t)) && void 0 !== n ? n : null
				},
				Ge = (e, t, i) => {
					const n = e.listings.postOrder.ids[i];
					return n.indexOf(t) >= 0 ? n.indexOf(t) + m.sb : null
				};

			function qe(e) {
				try {
					return decodeURIComponent(e)
				} catch (t) {
					return j.c.captureException(t), e
				}
			}
			const Ve = (e, t) => ({
					pageType: e.platform.currentPage ? Le(e.platform.currentPage) : void 0,
					...t
				}),
				He = e => {
					const t = Object(de.e)(e),
						i = !!t && Object(ie.a)(e, {
							subredditId: t.id
						});
					return Ve(e, {
						type: i ? "chat_enabled" : void 0
					})
				},
				We = (e, t) => ({
					pageType: e.platform.lastPage ? Le(e.platform.lastPage) : void 0,
					...t
				}),
				ze = e => {
					return {
						name: Object(Se.a)(e, {
							pageLayer: Object(de.b)(e)
						}) ? _.a.telemetry.appName.mweb : _.a.telemetry.appName.redesign,
						buildNumber: _.a.buildNumber,
						buildTimestamp: _.a.buildTimestamp
					}
				},
				Ke = (e, t) => {
					if (e.platform.currentPage) {
						const {
							sortToUse: i
						} = Object(q.a)(e, t);
						if (i === m.u.CHAT) return m.z.Chat
					}
					return m.z.Comment
				},
				Ye = (e, t) => {
					const i = e.features.comments.models[t];
					if (i) {
						const {
							awardCountsById: t
						} = i, n = t ? Object.keys(t).reduce((e, i) => e + t[i], 0) : null;
						return {
							id: i.id,
							postId: i.postId,
							parentId: i.parentId,
							bodyText: Object(H.a)(i),
							authorId: i.authorId,
							numberGildings: n,
							score: i.score,
							created: i.created,
							type: Ke(e, i.postId)
						}
					}
					return null
				},
				$e = (e, t, i) => {
					var n;
					return {
						id: t.id,
						postId: t.postId,
						parentId: t.parentId,
						deleted: t.isDeleted,
						subredditId: t.subredditId,
						subredditName: i,
						authorId: t.authorId,
						authorName: t.author,
						created: t.created,
						lastEdited: null !== (n = t.editedAt) && void 0 !== n ? n : void 0,
						score: t.score,
						spam: t.isSpam,
						type: Ke(e, t.postId)
					}
				},
				Qe = e => {
					let t = !1;
					return Object.keys(e).forEach(i => {
						e[i] && (t = !0)
					}), t
				},
				Je = e => {
					return {
						language: Object(Fe.O)(e) ? Object(Fe.Z)(e) : Object(oe.i)(e)
					}
				},
				Xe = e => ({
					...Je(e),
					hideNsfw: !e.user.prefs.over18
				}),
				Ze = e => {
					const t = Object(de.e)(e),
						i = t && e.moderatingSubreddits[t.id];
					let n;
					if (Object(Fe.O)(e) && t) {
						const i = e.subscriptions.subredditOrder.includes(t.id),
							r = e.subreddits.about[t.id] && e.subreddits.about[t.id].userIsSubscriber;
						n = i || r
					} else n = null;
					return {
						isMod: !!i,
						modAccess: i ? i.access : null,
						modConfig: i ? i.config : null,
						modFlair: i ? i.flair : null,
						modFull: i ? i.all : null,
						modMail: i ? i.mail : null,
						modNone: i ? !Qe(i) : null,
						modPost: i ? i.posts : null,
						modWiki: i ? i.wiki : null,
						isSubscriber: n
					}
				},
				et = e => ({
					actionInfo: Ve(e),
					app: ze(e),
					platform: ot(e),
					referrer: yt(e),
					request: Mt(e),
					session: St(e),
					screen: Et(e),
					user: Lt(e),
					...oi(e)
				}),
				tt = (e, t) => {
					const i = Object(ne.c)(e, {
							experimentName: t
						}),
						n = Object(ne.b)(e, {
							experimentName: t
						});
					if (!i) return n ? {
						id: -1,
						isOverride: !0,
						name: t,
						variant: n,
						version: "-1"
					} : null;
					const r = void 0 !== n,
						s = r ? n : i.variant;
					return s ? {
						...i,
						isOverride: r,
						variant: s
					} : null
				},
				it = (e, t) => {
					const i = e.posts.video.fullscreen,
						n = e.platform.currentPage ? Le(e.platform.currentPage) : void 0;
					return {
						pageType: i === t ? "fullscreen" : n
					}
				},
				nt = () => Object(G.c)(G.a.VideoView),
				rt = new Map,
				st = ({
					state: e,
					post: t
				}) => {
					const i = Object(se.a)(e);
					if (!i) return;
					let n;
					rt.has(i) ? n = rt.get(i) : (rt.set(i, new Map), (n = rt.get(i)).set("postIdToDistanceFromAdMapping", new Map));
					const r = n.get("postIdToDistanceFromAdMapping");
					if (r.has(t.id)) return r.get(t.id);
					const s = e.listings.postOrder.ids[i];
					if (!s) return;
					const o = n.get("lastPostIndex");
					let d = n.get("lastAdIndex"),
						a = o ? o + 1 : 0;
					for (; a < s.length; a += 1) {
						const t = e.posts.models[s[a]];
						if (t && !t.hidden && !t.isBlank) {
							const e = d ? a - d - 1 : void 0;
							r.set(t.id, e), t.isSponsored && (d = a)
						}
					}
					return n.set("lastPostIndex", a), n.set("lastAdIndex", d), r.get(t.id)
				},
				ot = e => e.meta.platform,
				dt = (e, t, i, n, r, s) => {
					const o = e.polls.models[t];
					if (!o) return;
					const d = Object(ge.c)(o) && !!o.tournamentId;
					return {
						numberPredictionCoins: r,
						numberPredictionTokens: s,
						options: o.options.map(e => e.text.substring(0, 80)),
						optionsLength: o.options.length,
						type: o.isPrediction ? d ? "tournament" : "predict" : "poll",
						...i && void 0 !== n ? {
							userVote: n
						} : void 0
					}
				},
				at = (e, t, i) => {
					var n, r, s, o, d, a;
					const l = e.posts.models[t] || e.features.comments.models[t] && e.posts.models[e.features.comments.models[t].postId];
					if (l) {
						const {
							source: t
						} = l, u = Ke(e, l.id), c = l.events.find(e => e.type === A.a.Impression), _ = c && c.url.match(/\?q=([^&]+)/), m = Dt(e, l.id), p = vt(e, l.id), h = l.belongsTo && "profile" === l.belongsTo.type && p ? p : m, f = l.awardCountsById && Object.keys(l.awardCountsById).reduce((e, t) => e + l.awardCountsById[t], 0);
						return {
							commentType: u,
							contentDuration: i || void 0,
							createdTimestamp: l.created,
							domain: l.domain,
							id: l.postId,
							nsfw: l.isNSFW,
							score: l.score,
							spoiler: l.isSpoiler,
							title: l.title,
							topAwardedType: l.topAwardedType ? l.topAwardedType.toLowerCase() : void 0,
							type: ke(l),
							upvoteRatio: l.upvoteRatio ? l.upvoteRatio : void 0,
							url: t ? t.url : void 0,
							promoted: l.isSponsored,
							impressionId: _ ? _[1] : void 0,
							numberPostsFromAd: st({
								state: e,
								post: l
							}),
							authorId: l.authorId,
							archived: l.isArchived,
							crosspostRootId: l.crosspostRootId || void 0,
							numberGildings: f,
							numberComments: l.numComments,
							recommendationSource: null === (r = null === (n = l.recommendationContext) || void 0 === n ? void 0 : n.source) || void 0 === r ? void 0 : r.source,
							recommendationSourceSubredditId: null === (o = null === (s = l.recommendationContext) || void 0 === s ? void 0 : s.source) || void 0 === o ? void 0 : o.subredditId,
							recommendationSourceSubredditName: null === (a = null === (d = l.recommendationContext) || void 0 === d ? void 0 : d.source) || void 0 === a ? void 0 : a.subredditName,
							subredditId: h && h.id ? h.id : void 0,
							subredditName: h && h.name ? h.name : void 0
						}
					}
					if (Object(W.a)(t)) {
						return {
							id: t,
							commentType: Ke(e, t)
						}
					}
					return null
				},
				lt = (e, t) => {
					var i, n;
					const r = Object(ce.G)(e, {
						postId: t
					});
					return r && Object(X.c)(r) ? {
						tournamentId: r.predictionTournament.tournamentId
					} : r && Object(X.b)(r) ? {
						tournamentId: null !== (n = null === (i = r.pollData) || void 0 === i ? void 0 : i.tournamentId) && void 0 !== n ? n : void 0
					} : void 0
				},
				ut = (e, t) => {
					const i = Object(ce.G)(e, {
						postId: t
					});
					if (i && Object(X.c)(i)) return {
						type: "tournament"
					}
				},
				ct = e => {
					const t = Object(V.a)(e);
					return t ? at(e, t.id) : null
				},
				_t = (e, t, i, n) => {
					const r = t && Object(pe.a)(e.listings.postOrder.ids, t);
					return {
						depth: i && i.depth,
						geoFilter: Object(oe.k)(e),
						length: r ? r.length : void 0,
						links: r ? r.map(t => e.posts.models[t].id) : void 0,
						oldSort: i && i.oldSort,
						sort: i && i.sort,
						sortTime: i && i.sortTime || void 0,
						source: i && i.source
					}
				},
				mt = (e, t) => {
					const i = Object(me.f)(e, {
						listingKey: t
					});
					return i ? {
						length: i.length,
						links: i.map(t => e.features.comments.models[t].id)
					} : null
				},
				pt = (e, t, i) => {
					const n = e.posts.models[t];
					if (void 0 === n) return null;
					const r = {};
					if (r.id = n.postId, n.media && "v.redd.it" === n.domain) {
						const e = Object(Q.C)(n.media);
						e && (r.id = e)
					}
					if (i) r.loadTime = i;
					else {
						const i = e.posts.video.loadTimes[t];
						i && i.start && i.playable && (r.loadTime = Math.round(i.playable - i.start))
					}
					const s = e.posts.video.metadata[t];
					s && s.id === t && (r.height = s.originalHeight, r.width = s.originalWidth, r.orientation = r.height > r.width ? "portrait" : "landscape", r.duration = Math.round(s.length));
					const o = e.posts.video.time[t];
					return o && (r.time = Math.round(o.currentTime)), r
				},
				ht = (e, t, i) => {
					const n = e.posts.models[t];
					if (void 0 === n || !n.media || !Object(Q.E)(n.media)) return null;
					let r, s, o, d;
					if (n.media.mediaMetadata && n.media.gallery) {
						d = n.media.gallery.items.map(e => e.mediaId);
						const e = n.media.mediaMetadata;
						o = (r = d.length) - (s = d.reduce((t, i) => {
							const n = e[i];
							return !n || n.e !== ee.s && n.e !== ee.r ? t : t + 1
						}, 0) || 0)
					}
					return {
						id: n.postId,
						mediaIds: d,
						numItems: r,
						numImages: s,
						numVideos: o,
						position: i || Object(ye.b)(e, t) + 1
					}
				},
				ft = (e, t) => {
					if (void 0 === e.posts.models[t]) return null;
					const i = {},
						n = e.posts.video.time[t];
					return n && (i.maxTimeServed = Math.round(n.maxTimeServed)), i
				},
				bt = (e, t) => {
					if (void 0 === e.posts.models[t]) return;
					const i = {
							type: je.TimerType.VideoFirstFrame
						},
						n = e.posts.video.loadTimes[t];
					return n && n.start && (n.playable ? i.millis = Math.round(n.playable - n.start) : i.millis = Math.round(performance.now() - n.start)), i
				},
				gt = (e, t) => {
					const i = e.profiles.models[t];
					return i && {
						id: i.id,
						name: i.name,
						avatar_url: i.icon.url
					}
				},
				wt = (e, t) => {
					const i = e.posts.models[t],
						n = e.features.comments.models[t];
					return i ? Object(Fe.vb)(e, {
						userId: i.authorId
					}) : n ? Object(Fe.vb)(e, {
						userId: n.authorId
					}) : null
				},
				vt = (e, t) => {
					const i = e.posts.models[t],
						n = e.features.comments.models[t];
					return i ? gt(e, i.belongsTo.id) : n ? gt(e, n.subredditId) : null
				},
				yt = e => {
					let t = e.platform.currentPage ? e.platform.referrers[e.platform.currentPage.key] : null;
					if (t) {
						let {
							hostname: i
						} = c.a.parse(t);
						if (!i || t.startsWith("/")) {
							let n = e.meta.protocol;
							i = e.meta.domain, n && i || (n = window.location.protocol, i = window.location.hostname), t = `${n=n.endsWith(":")?n:`${n}:`}//${i}${t}`
						}
						return {
							domain: i,
							url: t
						}
					}
					return null
				},
				Et = (e, t) => {
					const i = Object(L.R)(e, {});
					let n;
					Object(de.f)(e) && (n = Object(de.i)(e) ? "lightbox" : "post_detail");
					let r = "default";
					return e.user && e.user.prefs && e.user.prefs.nightmode && (r = "nightmode"), {
						layout: i,
						viewType: n,
						scrollPosition: t,
						theme: r
					}
				},
				St = e => {
					const t = Object(Fe.o)(e),
						i = t[0],
						n = parseInt(t[2], 10);
					let r = {};
					const {
						sessionReferrer: s
					} = e.platform;
					if (s) {
						const {
							hostname: e
						} = c.a.parse(s);
						r = {
							referrerDomain: e,
							referrerUrl: s
						}
					}
					return {
						id: i,
						createdTimestamp: n,
						...r
					}
				},
				Tt = e => {
					const {
						pageType: t
					} = Ve(e);
					if (!e.platform.currentPage) return null;
					if ("custom_feed" === t) {
						const {
							multiredditName: t,
							username: i
						} = e.platform.currentPage.urlParams;
						return Ot(e, Object(be.h)(i, t))
					}
					return null
				},
				Ot = (e, t) => {
					const i = Object(Ee.e)(e, t);
					return i ? {
						id: `/user/${i.ownerId}/m/${i.name}/`,
						isNsfw: i.isNSFW,
						numberFollowers: i.followerCount,
						numberSubreddits: i.subredditCount,
						ownerId: i.ownerId,
						visibility: i.visibility
					} : null
				},
				It = (e, t) => {
					var i;
					if (t) {
						const i = wt(e, t);
						return {
							id: null == i ? void 0 : i.id,
							name: null == i ? void 0 : i.username,
							type: "default"
						}
					}
					const {
						pageType: n
					} = Ve(e);
					if (!e.platform.currentPage) return null;
					if (n && n.includes("profile")) {
						const {
							profileName: t
						} = e.platform.currentPage.urlParams;
						if (t) {
							const n = t.toLowerCase(),
								r = null === (i = Object(Fe.wb)(e, {
									userName: n
								})) || void 0 === i ? void 0 : i.id;
							return r ? {
								id: r,
								name: n,
								type: "default"
							} : null
						}
					} else if ("post_detail" === n) {
						const {
							subredditName: t
						} = e.platform.currentPage.urlParams;
						if (t) {
							const i = t.toLowerCase(),
								n = Object(_e.m)(e, i),
								r = gt(e, n);
							return r && r.name && r.name.toLowerCase() === i ? {
								id: n,
								name: i,
								type: "default"
							} : null
						}
						if (n && n.includes("moderation_pages")) {
							let t = e.platform.currentPage.urlParams.profileName;
							t = t ? t.toLowerCase() : "";
							const i = Object(_e.m)(e, t);
							return i ? {
								id: i,
								name: t,
								type: "default"
							} : null
						}
					}
					return null
				},
				Rt = e => {
					var t, i;
					return {
						snoovatarActive: Object($.b)(null === (i = null === (t = null == e ? void 0 : e.user) || void 0 === t ? void 0 : t.account) || void 0 === i ? void 0 : i.accountIcon)
					}
				},
				Ft = (e, t) => {
					var i, n, r;
					let s;
					if (t) s = null === (i = wt(e, t)) || void 0 === i ? void 0 : i.accountIcon;
					else {
						const t = null === (n = It(e)) || void 0 === n ? void 0 : n.id;
						s = t ? null === (r = Object(Fe.vb)(e, {
							userId: t
						})) || void 0 === r ? void 0 : r.accountIcon : null
					}
					return {
						snoovatarActive: Object($.b)(s),
						userHasNft: Object($.c)(s)
					}
				},
				Nt = (e, t) => {
					const i = Object(_e.p)(e, {
						profileId: t
					});
					return i ? {
						id: i.id,
						name: i.name,
						nsfw: !!i.isNSFW
					} : null
				},
				Ct = e => {
					const {
						pageType: t
					} = Ve(e);
					if (!e.platform.currentPage) return null;
					if ("post_submit" === t) {
						const t = e.platform.currentPage.urlParams.subredditName;
						if (t) {
							const i = t.toLowerCase(),
								n = Object(Oe.D)(e, i),
								r = Object(Oe.S)(e, {
									subredditId: n
								}),
								s = e.subreddits.about[n];
							return n && r ? {
								id: n,
								name: i,
								numberCoins: s ? s.coins : 0
							} : null
						}
						return null
					}
					if ("community" === t || "subreddit_settings" === t || "subreddit_wiki" === t || "special_membership_paywall" === t || t && t.includes("moderation_pages")) {
						let i = e.platform.currentPage.urlParams.subredditName;
						i || "subreddit_wiki" !== t || (i = P.e), i = i ? i.toLowerCase() : "";
						const n = Object(Oe.D)(e, i),
							r = Object(Oe.S)(e, {
								subredditId: n
							}),
							s = e.subreddits.about[n];
						return n && r ? {
							id: n,
							name: i,
							numberCoins: s ? s.coins : 0
						} : null
					}
					if ("post_detail" === t || "single_comment_thread" === t) {
						if (e.platform.currentPage.urlParams.subredditName) {
							const t = e.platform.currentPage.urlParams.subredditName.toLowerCase(),
								i = Object(Oe.D)(e, t),
								n = Object(Oe.S)(e, {
									subredditId: i
								}),
								r = e.subreddits.about[i];
							return i && n ? {
								id: i,
								name: t,
								numberCoins: r ? r.coins : 0
							} : null
						} {
							const {
								partialPostId: t
							} = e.platform.currentPage.urlParams, i = Object(J.t)(t), n = e.posts.models[i];
							if (!n) return null;
							const r = ((e, t) => {
								const {
									type: i,
									id: n
								} = t;
								return i === D.a.PROFILE ? e.profiles.models[n] : e.subreddits.models[n]
							})(e, n.belongsTo);
							if (!r) return null;
							const s = e.subreddits.about[r.id];
							return {
								id: r.id,
								name: r.name.toLowerCase(),
								numberCoins: s ? s.coins : 0
							}
						}
					}
					if ("search_results" === t) {
						if ("string" != typeof e.platform.currentPage.urlParams.subredditName) return null;
						const t = e.platform.currentPage.urlParams.subredditName.toLowerCase(),
							i = Object(Oe.D)(e, t),
							n = Object(Oe.S)(e, {
								subredditId: i
							}),
							r = e.subreddits.about[i];
						return i && n ? {
							id: i,
							name: t,
							numberCoins: r ? r.coins : 0
						} : null
					}
					if ("stream_player" === t) {
						const t = e.platform.currentPage.urlParams.subredditName;
						if (!t) return null;
						const i = Object(Oe.D)(e, t.toLowerCase()),
							n = Object(Oe.S)(e, {
								subredditId: i
							}),
							r = e.subreddits.about[i];
						return n && i ? {
							id: i,
							name: t,
							numberCoins: r ? r.coins : 0
						} : null
					}
					return null
				},
				jt = (e, t) => {
					const i = Object(Oe.S)(e, {
						subredditId: t
					});
					return i ? {
						id: i.id,
						name: i.name,
						nsfw: i.isNSFW,
						quarantined: !!i.isQuarantined
					} : null
				},
				At = (e, t) => {
					const i = e.subreddits.models[t],
						n = e.subreddits.about[t];
					return i && {
						id: i.id,
						name: i.name.toLowerCase(),
						numberCoins: n ? n.coins : 0
					}
				},
				xt = (e, t) => {
					const i = Object(Oe.D)(e, t),
						n = Object(Oe.S)(e, {
							subredditId: i
						}),
						r = e.subreddits.about[n.id];
					return n && {
						id: n.id,
						name: n.name.toLowerCase(),
						numberCoins: r ? r.coins : 0
					}
				},
				Dt = (e, t) => {
					const i = e.posts.models[t],
						n = e.features.comments.models[t];
					return i ? At(e, i.belongsTo.id) : n ? At(e, n.subredditId) : null
				},
				Pt = (e, t) => e && t ? {
					type: e,
					millis: t
				} : null,
				Lt = Object(l.a)(Fe.k, e => e.user.loid, Fe.v, (e, t, i) => ({
					id: e ? e.id : t.loid ? `${m.Ib.Account}_${o()(t.loid,"0")}` : null,
					isAdmin: !!e && e.isEmployee,
					isLoggedIn: !!e,
					cookieCreatedTimestamp: parseInt(t.loidCreated) || null,
					createdTimestamp: e ? 1e3 * e.created : parseInt(t.loidCreated) || null,
					...e ? {
						hasPremium: e.isGold,
						isPremiumSubscriber: i,
						numberCoins: e.coins || 0,
						numberPremiumDaysRemaining: e.goldExpiration ? Math.max(Math.ceil((1e3 * e.goldExpiration - Date.now()) / m.B), 0) : 0
					} : null
				})),
				kt = (e, {
					subredditId: t,
					widgetKind: i
				}) => {
					const n = {
							targetSubredditId: t
						},
						r = e.subreddits.models[t];
					r && r.name && (n.targetSubredditName = r.name);
					const s = i && x.h[i];
					return s && (n.type = s), n
				},
				Bt = Object(l.a)(e => e.meta.ampCid, e => {
					const t = e && w(e),
						i = t && t.cid || void 0;
					return i && Object(p.b)(m.n.Redesign, {
						type: p.a.ClientIdConsumed,
						data: {}
					}), i
				}),
				Mt = e => {
					const t = e.meta.domain,
						i = e.platform.currentPage ? `${e.meta.protocol}://${t}${e.platform.currentPage.url}` : void 0,
						n = Object(Ce.a)(e) || void 0,
						r = e.meta.userAgent ? e.meta.userAgent : void 0;
					return {
						base_url: i,
						canonical_url: n,
						domain: t,
						google_client_id: Bt(e),
						reddaid: e.user.reddaid,
						user_agent: r
					}
				},
				Ut = e => {
					const t = e.platform.currentPage ? e.platform.currentPage.url.split("?") : [],
						[i, n] = t,
						{
							domain: r,
							protocol: s
						} = e.meta,
						o = s && r && i ? `${s}://${r}${i}` : void 0,
						d = Object(Ce.a)(e) || void 0,
						a = e.meta.userAgent ? e.meta.userAgent : void 0;
					return {
						base_url: o,
						canonical_url: d,
						domain: r,
						reddaid: e.user.reddaid,
						user_agent: a,
						parameters: n
					}
				},
				Gt = e => ({
					enabled: B(),
					acceptableAds: U()
				});
			var qt, Vt;
			! function(e) {
				e.Recent = "history", e.Search = "search", e.Topics = "topics", e.Trending = "trending", e.PromotedTrend = "promoted_trend", e.TrendingApproval = "trending_approval_tool"
			}(qt || (qt = {})),
			function(e) {
				e.SearchBar = "search_bar", e.FullSearchButton = "full_search_button"
			}(Vt || (Vt = {}));
			const Ht = e => ({
					query: qe(e.q || ""),
					range: e.t,
					sort: e.sort,
					structureType: e.structureType
				}),
				Wt = (e, t, i, n, r) => {
					var s;
					let o, d;
					if (!(!n || !t.restrict_sr) && t.eventType && t.id) {
						let i;
						switch (t.eventType) {
							case "subreddit":
								i = At(e, t.id);
								break;
							case "post":
								i = Dt(e, t.id);
								break;
							case "profile":
								i = gt(e, t.id)
						}
						i && (o = i.name || "", d = i.id || "")
					}
					const a = null !== (s = e.platform.currentPage) && void 0 !== s ? s : r,
						l = a ? Le(a) : void 0;
					return {
						queryId: zt(e, i, t),
						impressionId: Object(xe.a)(e) ? Y.a.get(i) : void 0,
						originPageType: l,
						...Ht(t),
						subredditId: d,
						subredditName: o
					}
				};

			function zt(e, t, i) {
				if (!Object(Ae.a)(e)) return Object(G.c)(G.a.SearchResults);
				const n = i || {
					q: Object(De.x)(e)
				};
				return he.a.get({
					...n,
					include_over_18: Object(De.k)(e) ? "1" : ""
				}, t)
			}
			const Kt = e => ({
					id: e.name,
					name: e.name,
					title: e.name,
					type: e.type,
					items: e.type === te.a.Posts ? e.postOrder : e.type === te.a.Communities ? e.subredditOrder : void 0
				}),
				Yt = (e, t) => {
					const i = e.platform.currentPage ? Le(e.platform.currentPage) : void 0;
					return {
						originElement: Vt.SearchBar,
						originPageType: i,
						query: t.searchQuery,
						queryId: zt(e, fe.a.Typeahead),
						impressionId: Object(xe.a)(e) ? Y.a.get(fe.a.Typeahead) : void 0,
						typeaheadActive: !0
					}
				},
				$t = e => ({
					displayQuery: e.displayQuery,
					rawQuery: e.rawQuery,
					structureType: e.structureType,
					sort: e.sort,
					range: e.t,
					subredditId: e.subredditId,
					subredditName: e.subredditName,
					postFlairName: e.postFlairName,
					metaFlairId: e.metaFlairId,
					metaFlairName: e.metaFlairName
				}),
				Qt = (e, t) => {
					let i, n;
					if (t.eventType && t.id) {
						let r;
						switch (t.eventType) {
							case "subreddit":
								r = At(e, t.id);
								break;
							case "post":
								r = Dt(e, t.id);
								break;
							case "profile":
								r = gt(e, t.id)
						}
						r && (i = r.name, n = r.id)
					}
					const r = e.platform.currentPage ? Le(e.platform.currentPage) : void 0,
						s = {
							originElement: t.originElement,
							originPageType: r,
							subredditName: i,
							subredditId: n,
							impressionId: Object(xe.a)(e) ? Y.a.get(fe.a.SERP) : void 0
						};
					return t.postFlairName ? s.postFlairName = t.postFlairName : t.metaFlairName && (s.metaFlairName = t.metaFlairName), s
				},
				Jt = Object(l.a)(Fe.k, e => e, (e, t) => {
					if (!e || !e.profileId) return;
					const i = Object(_e.i)(t, e.profileId),
						n = Object(_e.g)(t, e.profileId),
						r = Object(Te.m)(t, e.profileId),
						s = Object(Ie.a)(t),
						o = Object(Fe.Db)(t),
						d = r && r.bannerBackgroundImage;
					return {
						id: e.id,
						name: Object(we.e)(e),
						type: "default",
						display_name: i ? i.title : void 0,
						about: n ? n.publicDescription : void 0,
						avatar_url: e.accountIcon,
						cover_url: "string" == typeof d ? d : void 0,
						nsfw: i ? i.isNSFW : void 0,
						content_visible: s ? s.contentVisible : void 0,
						communities_visible: o ? o.showActiveCommunities : void 0,
						allow_follow: o ? o.enableFollowers : void 0
					}
				}),
				Xt = (e, t, i) => {
					const n = {};
					return n.id = t, n.type = i ? i.toLowerCase() : void 0, n
				},
				Zt = (e, {
					postId: t
				}) => {
					let i;
					const n = Object(ce.G)(e, {
						postId: t
					});
					if (n && Object(K.a)(n) && n.eventInfo) {
						const {
							eventStart: e,
							eventEnd: t
						} = n.eventInfo;
						i = {
							eventState: Object(R.e)(e, t),
							eventStartTimestamp: e,
							eventEndTimestamp: t
						}
					} else i = void 0;
					return i
				},
				ei = e => {
					if (!e) return;
					const {
						id: t,
						title: i,
						author: n,
						postIds: r
					} = e;
					return {
						id: t,
						title: i,
						authorId: n || "",
						postIds: r,
						displayLayout: Object(le.f)(e).toLowerCase()
					}
				},
				ti = (e, {
					collectionId: t
				}) => ei(Object(le.q)(e, {
					collectionId: t
				})),
				ii = (e, {
					postId: t
				}) => {
					const i = Object(ce.G)(e, {
						postId: t
					});
					if (i && Object(z.a)(i)) {
						const i = Object(le.n)(e, {
							postId: t
						});
						return i ? ei(i) : void 0
					}
				},
				ni = e => {
					const t = e.platform.currentPage && e.platform.currentPage.urlParams.topicSlug;
					return t && Object(Re.c)(e, {
						topicSlug: t
					})
				},
				ri = Object(l.a)(ni, e => e ? {
					id: e.id,
					...e.namePlural && {
						displayName: e.namePlural
					}
				} : null),
				si = Object(l.a)(ni, e => e ? {
					range: "all",
					sort: m.Yb.Relevance,
					structureType: qt.Topics
				} : null),
				oi = Object(l.a)(ri, si, e => e.platform.currentPage && Le(e.platform.currentPage), (e, t, i) => "topic" === i ? {
					metaSearch: t,
					topicMetadata: e
				} : null);
			var di;
			! function(e) {
				e.Post = "posts", e.Community = "communities", e.Authors = "authors", e.Comments = "comments", e.SearchDropdown = "search_dropdown"
			}(di || (di = {}));
			const ai = (e, t) => {
					const i = t || (null == e ? void 0 : e.platform.currentPage);
					if (!i) return;
					const {
						type: n
					} = i.queryParams;
					if (!n) return di.Post;
					switch (n) {
						case m.bc.Posts:
							return di.Post;
						case m.bc.Subreddits:
							return di.Community;
						case m.bc.Users:
							return di.Authors;
						case m.bc.Comments:
							return di.Comments;
						default:
							return
					}
				},
				li = (e, t, i, n, r) => {
					let s, o, d = 0;
					if (n && i && e.searchDiscoveryUnits && e.searchDiscoveryUnits.models[i]) {
						const t = e.searchDiscoveryUnits.models[i],
							r = e.searchDiscoveryUnits.order[i];
						s = Object.keys(t).find(e => t[e].name === n.name), o = r.indexOf(s);
						for (let e = 0; e < o; e++) {
							const i = t[r[e]].postOrder;
							d += i ? i.length : 0
						}
					} else t.restrict_sr && (d = 0);
					return d
				},
				ui = e => {
					if (!e || !e.queryParams) return;
					const {
						source: t
					} = e.queryParams;
					switch (t) {
						case C.a.Recent:
							return qt.Recent;
						case C.a.Trending:
							return qt.Trending;
						case C.a.PromotedTrend:
							return qt.PromotedTrend;
						case C.a.TrendingApproval:
							return qt.TrendingApproval;
						default:
							return qt.Search
					}
				},
				ci = e => {
					const t = Object(de.e)(e);
					if (t) {
						const i = Object(ve.k)(e, {
							subredditId: t.id
						});
						if (i) return {
							tier: i.tier
						}
					}
					return null
				},
				_i = (e, t, i, n, r) => {
					const s = {
							url: t,
							postId: n,
							commentId: r,
							sourceElement: i
						},
						o = Ct(e);
					return o && (s.subredditId = o.id, s.subredditName = o.name), s
				},
				mi = (e, t) => ({
					features: JSON.stringify({
						host_post_id: t || null
					}),
					name: e
				}),
				pi = Object(l.c)({
					city: oe.a,
					country_code: oe.b,
					region: oe.l
				}),
				hi = e => {
					const t = Ct(e),
						i = {};
					if (!(null == t ? void 0 : t.id)) return;
					const n = Object(re.f)(e, {
						subredditId: t.id
					});
					if (!n) return;
					i.tournamentId = n.tournamentId, i.tournamentState = n.status === Ne.t.Live || n.status === Ne.t.LiveInProgress ? "active" : "not_active";
					const r = Object(ae.h)(e, n.tournamentId).filter(e => e.predictionStatus === ge.b.Open && e.endsAt > Date.now());
					return r.length ? i.userState = r.some(e => !e.userSelection) ? "predictions_available" : "predicted_all" : i.userState = "no_available_predictions", i
				},
				fi = e => ({
					correlationId: e.listings.postOrder.correlationIds[e.listings.activeKey]
				}),
				bi = e => {
					const {
						cards: t,
						currentCardIndex: i
					} = Object(ue.tb)(e), n = t[i];
					if (n) return a()(n, "username"), {
						type: n.contentType,
						index: i + 1,
						count: t.length,
						facts: JSON.stringify(n)
					}
				}
		},
		"./src/reddit/selectors/topic.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return p
			})), i.d(t, "d", (function() {
				return h
			})), i.d(t, "a", (function() {
				return w
			})), i.d(t, "b", (function() {
				return v
			})), i.d(t, "e", (function() {
				return E
			})), i.d(t, "f", (function() {
				return S
			}));
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/fbt/lib/FbtPublic.js"),
				r = i("./node_modules/reselect/es/index.js"),
				s = i("./src/lib/initializeClient/installReducer.ts");
			var o = i("./src/reddit/helpers/name/index.ts"),
				d = i("./node_modules/redux/es/redux.js"),
				a = i("./src/reddit/actions/pages/topic.ts");
			const l = {};
			var u = (e = l, t) => {
					switch (t.type) {
						case a.TOPIC_DATA_LOADED:
						case a.MORE_POSTS_LOADED:
							return {
								...e, ...t.payload.topics
							};
						default:
							return e
					}
				},
				c = Object(d.c)({
					models: u
				}),
				_ = i("./src/reddit/selectors/subreddit.ts");
			Object(s.a)({
				pages: {
					topics: c
				}
			});
			const m = Object(r.a)(e => e.pages.topics.models, e => {
					const t = {};
					if (!e) return t;
					for (const i of Object.keys(e)) {
						const n = e[i];
						t[n.slug.toLowerCase()] = n.id
					}
					return t
				}),
				p = (e, {
					topicSlug: t
				}) => e.pages.topics.models[((e, t) => t ? m(e)[t.toLowerCase()] : void 0)(e, t)],
				h = (e, t, i = !1) => {
					const n = p(e, {
						topicSlug: t
					});
					return n && (i ? n.namePlural : n.name) || ""
				};
			var f;
			! function(e) {
				e.Child = "child", e.Parent = "parent", e.Sibling = "sibling"
			}(f || (f = {}));
			const b = [],
				g = e => Object(r.a)(p, t => {
					if (!t) return b;
					return {
						[f.Parent]: t.parentRelationships,
						[f.Child]: t.childRelationships,
						[f.Sibling]: t.siblingRelationships
					} [e].reduce((e, t) => (function(e, t, i) {
						const n = e.length + t.length,
							r = Array(n);
						let s = 0,
							o = 0,
							d = 0;
						for (; o < e.length && d < t.length;) {
							const n = e[o],
								a = t[d];
							i(n, a) < 0 ? (r[s] = n, o++) : (r[s] = a, d++), s++
						}
						for (; o < e.length;) r[s] = e[o], o++, s++;
						for (; d < t.length;) r[s] = t[d], d++, s++;
						return r
					})(e, t.relatedTopics, (e, t) => e.name.localeCompare(t.name)), [])
				}),
				w = g(f.Parent),
				v = g(f.Sibling),
				y = Object(r.a)(p, _.Z, (e, t) => e ? e.subredditIds.map(e => t[e]) : b),
				E = (Object(r.a)(y, e => e.map(e => e && e.name)), (e, {
					topicSlug: t
				}) => h(e, t, !0)),
				S = Object(r.a)((e, {
					topicSlug: t
				}) => h(e, t), e => e && n.fbt._("Best {topic name} Posts - Reddit", [n.fbt._param("topic name", Object(o.b)(e, !0))], {
					hk: "2ddI1M"
				}));
			Object(r.a)(E, e => e && n.fbt._("Find the best posts and communities about {topic name} on Reddit", [n.fbt._param("topic name", e)], {
				hk: "DunIF"
			}))
		},
		"./src/reddit/selectors/user.ts": function(e, t, i) {
			"use strict";
			i.d(t, "q", (function() {
				return T
			})), i.d(t, "u", (function() {
				return O
			})), i.d(t, "r", (function() {
				return I
			})), i.d(t, "v", (function() {
				return R
			})), i.d(t, "x", (function() {
				return F
			})), i.d(t, "A", (function() {
				return N
			})), i.d(t, "y", (function() {
				return C
			})), i.d(t, "Z", (function() {
				return j
			})), i.d(t, "O", (function() {
				return A
			})), i.d(t, "X", (function() {
				return x
			})), i.d(t, "C", (function() {
				return D
			})), i.d(t, "n", (function() {
				return P
			})), i.d(t, "k", (function() {
				return L
			})), i.d(t, "i", (function() {
				return k
			})), i.d(t, "e", (function() {
				return B
			})), i.d(t, "z", (function() {
				return M
			})), i.d(t, "Db", (function() {
				return U
			})), i.d(t, "a", (function() {
				return G
			})), i.d(t, "bb", (function() {
				return q
			})), i.d(t, "cb", (function() {
				return V
			})), i.d(t, "b", (function() {
				return H
			})), i.d(t, "E", (function() {
				return W
			})), i.d(t, "F", (function() {
				return z
			})), i.d(t, "ib", (function() {
				return K
			})), i.d(t, "hb", (function() {
				return Y
			})), i.d(t, "m", (function() {
				return $
			})), i.d(t, "Y", (function() {
				return Q
			})), i.d(t, "T", (function() {
				return J
			})), i.d(t, "g", (function() {
				return X
			})), i.d(t, "c", (function() {
				return Z
			})), i.d(t, "W", (function() {
				return ee
			})), i.d(t, "lb", (function() {
				return te
			})), i.d(t, "ob", (function() {
				return ie
			})), i.d(t, "nb", (function() {
				return ne
			})), i.d(t, "K", (function() {
				return re
			})), i.d(t, "L", (function() {
				return se
			})), i.d(t, "N", (function() {
				return oe
			})), i.d(t, "P", (function() {
				return de
			})), i.d(t, "D", (function() {
				return ae
			})), i.d(t, "G", (function() {
				return le
			})), i.d(t, "wb", (function() {
				return ue
			})), i.d(t, "vb", (function() {
				return ce
			})), i.d(t, "jb", (function() {
				return _e
			})), i.d(t, "kb", (function() {
				return me
			})), i.d(t, "f", (function() {
				return pe
			})), i.d(t, "zb", (function() {
				return he
			})), i.d(t, "mb", (function() {
				return fe
			})), i.d(t, "o", (function() {
				return be
			})), i.d(t, "p", (function() {
				return ge
			})), i.d(t, "w", (function() {
				return we
			})), i.d(t, "ub", (function() {
				return ve
			})), i.d(t, "U", (function() {
				return ye
			})), i.d(t, "l", (function() {
				return Ee
			})), i.d(t, "ab", (function() {
				return Se
			})), i.d(t, "xb", (function() {
				return Te
			})), i.d(t, "h", (function() {
				return Oe
			})), i.d(t, "Cb", (function() {
				return Ie
			})), i.d(t, "S", (function() {
				return Re
			})), i.d(t, "R", (function() {
				return Fe
			})), i.d(t, "I", (function() {
				return Ne
			})), i.d(t, "J", (function() {
				return Ce
			})), i.d(t, "j", (function() {
				return je
			})), i.d(t, "Bb", (function() {
				return Ae
			})), i.d(t, "V", (function() {
				return xe
			})), i.d(t, "M", (function() {
				return De
			})), i.d(t, "H", (function() {
				return Pe
			})), i.d(t, "d", (function() {
				return Le
			})), i.d(t, "B", (function() {
				return ke
			})), i.d(t, "Ab", (function() {
				return Be
			})), i.d(t, "yb", (function() {
				return Me
			})), i.d(t, "Q", (function() {
				return Ue
			})), i.d(t, "db", (function() {
				return qe
			})), i.d(t, "eb", (function() {
				return Ve
			})), i.d(t, "fb", (function() {
				return We
			})), i.d(t, "gb", (function() {
				return ze
			})), i.d(t, "t", (function() {
				return Ye
			})), i.d(t, "s", (function() {
				return $e
			})), i.d(t, "rb", (function() {
				return Je
			})), i.d(t, "pb", (function() {
				return Xe
			})), i.d(t, "tb", (function() {
				return Ze
			})), i.d(t, "qb", (function() {
				return et
			})), i.d(t, "sb", (function() {
				return tt
			}));
			var n = i("./node_modules/js-cookie/src/js.cookie.js"),
				r = i.n(n),
				s = i("./node_modules/lodash/find.js"),
				o = i.n(s),
				d = i("./node_modules/lodash/pick.js"),
				a = i.n(d),
				l = i("./node_modules/lodash/values.js"),
				u = i.n(l),
				c = i("./node_modules/reselect/es/index.js"),
				_ = i("./src/lib/constants/index.ts"),
				m = i("./src/lib/constants/cookie.ts"),
				p = i("./src/lib/objectSelector/index.ts"),
				h = i("./src/lib/safeJSONParse/index.ts"),
				f = i("./src/lib/safeGet/index.ts"),
				b = i("./src/reddit/constants/parameters.ts"),
				g = i("./src/reddit/endpoints/profile/info.ts"),
				w = i("./src/reddit/models/User/index.ts"),
				v = i("./src/reddit/selectors/platform.ts"),
				y = i("./src/reddit/selectors/profile.ts"),
				E = i("./src/reddit/selectors/runTimeEnvVars.ts");
			const S = [],
				T = e => e.user.account ? e.user.account.goldExpiration : null,
				O = e => !!e.user.account && e.user.account.isGold,
				I = e => !!e.user.account && e.user.account.hasAndroidSubscription,
				R = e => !!e.user.account && e.user.account.hasGoldSubscription,
				F = e => !!e.user.account && e.user.account.hasIosSubscription,
				N = e => !!e.user.account && e.user.account.hasStripeSubscription,
				C = e => !!e.user.account && e.user.account.hasPaypalSubscription,
				j = e => e.user.language,
				A = e => !!e.user.account,
				x = e => !!e.user.session && !e.user.session.unsafeLoggedOut,
				D = e => !!e.user.account && e.user.account.hasVerifiedEmail,
				P = e => e.user.account ? e.user.account.email : null,
				L = e => e.user.account,
				k = Object(c.a)(e => e.user.account, e => e && e.id),
				B = e => {
					const t = L(e);
					return t && t.coins || 0
				},
				M = e => {
					const t = L(e);
					return !!t && t.seenRedesignModal
				},
				U = e => e.user.prefs,
				G = e => e.user.prefs.allowClickTracking || !A(e),
				q = e => e.user.prefs.nightmode,
				V = e => !!e.user.prefs.nightmodeTempUpdated,
				H = e => e.user.prefs && e.user.prefs.autoplayVideo,
				W = e => e.user.prefs.hideNSFW,
				z = e => U(e).ignoreSuggestedSort,
				K = e => U(e).over18,
				Y = e => U(e).openPostInNewTab,
				$ = e => U(e).emailDigests,
				Q = e => e.user.prefs.labelNSFW,
				J = e => !!U(e).showPresence,
				X = e => U(e).countryCode,
				Z = e => U(e).badCommentAutocollapse,
				ee = e => {
					const t = e.user.prefs ? e.user.prefs.topContentTimesDismissed : 0;
					if (t < 1) return !1;
					if (t < 2) {
						const t = Date.now() - _.qc;
						if ((e.user.prefs ? e.user.prefs.topContentDismissalTime : 0) < t) return !1
					} else if (t < 3) {
						const t = Date.now() - 2 * _.qc;
						if ((e.user.prefs ? e.user.prefs.topContentDismissalTime : 0) < t) return !1
					}
					return !0
				},
				te = e => e.user.prefs.rememberCommunityLayout,
				ie = e => !U(e).stylesEnabled,
				ne = (e, {
					subredditId: t
				}) => {
					const i = U(e).subreddit[t];
					return !!i && !i.stylesEnabled
				},
				re = e => {
					const t = L(e);
					if (t && t.profileId) {
						const i = e.users.models[Object(w.e)(t)];
						return !!(null == i ? void 0 : i.isContractor)
					}
					return !1
				},
				se = e => {
					var t, i;
					return !!(null === (i = null === (t = null == e ? void 0 : e.user) || void 0 === t ? void 0 : t.temporaryGQL) || void 0 === i ? void 0 : i.isEmployee)
				},
				oe = e => !(!e.user.temporaryGQL || !e.user.temporaryGQL.isLoggedIn),
				de = e => {
					const t = L(e);
					return !!t && t.isMod
				},
				ae = e => {
					const t = L(e);
					return !!t && !t.isEmployee && t.isGold
				},
				le = e => {
					const t = L(e);
					return !!t && t.inRedesignBeta
				},
				ue = (e, {
					userName: t
				}) => Object(f.a)(e.users.models, t.toLowerCase()),
				ce = (e, {
					userId: t
				}) => o()(u()(e.users.models), e => e.id === t),
				_e = (e, {
					userId: t
				}) => {
					const i = ce(e, {
						userId: t
					});
					return i ? i.profileId : void 0
				},
				me = (e, {
					userName: t
				}) => {
					const i = ue(e, {
						userName: t
					});
					return i ? i.profileId : void 0
				},
				pe = (e, t) => {
					const i = t ? t.toLowerCase() : "";
					return t && e.contentGate[i] ? e.contentGate[i] : null
				},
				he = (e, t) => {
					const i = L(e),
						n = t.post || t.postId && e.posts.models[t.postId];
					return !(!i || !n) && Object(w.e)(i) === n.author
				},
				fe = e => {
					const t = L(e);
					if (t) {
						const e = {
							...g.a,
							...t.karma
						};
						return !!t.canCreateSubreddit || (Object(w.d)(t) || (new Date).getTime()) < (new Date).getTime() - _.pb && (e.fromPosts >= 5 || e.fromComments >= 10)
					}
					return !1
				},
				be = e => {
					const t = r.a.get(m.g);
					return (e.user.sessionTracker || t).split(".")
				},
				ge = e => {
					return be(e)[0]
				},
				we = e => e.user.sessionRefreshFailed,
				ve = Object(p.a)(e => {
					if (!e.user || !e.user.account) return;
					const t = a()(e.user.account, ["hasUnreadOldModmail", "hasUnreadMail", "hasUnreadModmail", "hasUnreadMessages", "hasUnreadNotifs", "inboxCount"]);
					return e.platform.currentPage && e.platform.currentPage.routeMatch && Object(v.r)(e) === _.Nb.INBOX_PAGES && e.user.prefs.markMessagesRead && (t.inboxCount = 0), t
				}),
				ye = (e, t) => {
					const i = L(e);
					if (i) {
						return Object(w.e)(i).toLowerCase() === t.toLowerCase()
					}
					return !1
				},
				Ee = e => e.user.drafts && e.user.drafts.count || 0,
				Se = e => e.user.drafts && e.user.drafts.limit || 20,
				Te = (e, {
					userName: t
				}) => {
					const i = ue(e, {
						userName: t
					});
					return !!i && !!i.hasUserProfile
				},
				Oe = e => {
					const t = L(e);
					return !!t && t.hasUserProfile
				},
				Ie = Object(c.a)(e => e.user.account, e => e.users.models, (e, t) => t, (e, t, i) => {
					const n = i.toLowerCase();
					return e && Object(w.e)(e) === n ? t[n] ? {
						...e,
						enableFollowers: t[n].enableFollowers
					} : e : t[n]
				}),
				Re = e => {
					return Object(E.a)(e) - parseInt(e.user.loid.loidCreated) < _.B
				},
				Fe = e => {
					const t = Object(v.q)(e);
					return Boolean((null == t ? void 0 : t[b.p]) && Object(h.a)(t[b.p]))
				},
				Ne = e => t => {
					const i = (e => e.user.account ? 1e3 * e.user.account.created : void 0)(t);
					return !!i && Object(E.a)(t) - i < e
				},
				Ce = (Ne(_.Q), Ne(_.qc)),
				je = e => {
					const t = L(e);
					if (!t) return S;
					const i = Object(w.e)(t);
					return Object(y.n)(e, {
						profileName: i
					})
				},
				Ae = e => e.user.loid.loid,
				xe = e => {
					const t = L(e);
					return !!t && (t.isSuspended && !t.isFPR)
				},
				De = e => {
					const t = L(e);
					return !!t && t.isFPR
				},
				Pe = (e, t) => e.user.accountSettings[`${t}`].api.pending,
				Le = e => e.user.accountSettings.changeEmail.api.error,
				ke = e => e.user && e.user.account && e.user.account.isPasswordSet,
				Be = e => e.user && e.user.account && e.user.account.linkedIdentities,
				Me = e => e.user && e.user.account && e.user.account.id,
				Ue = e => !!e.user.account && e.user.account.isNameEditable,
				Ge = e => e.user && e.user.notificationPrefs && e.user.notificationPrefs.emailSettingsLayout,
				qe = Object(c.a)(Ge, e => e.rows),
				Ve = Object(c.a)(Ge, e => e.sections),
				He = e => e.user && e.user.notificationPrefs && e.user.notificationPrefs.pushSettingsLayout,
				We = Object(c.a)(He, e => e.rows),
				ze = Object(c.a)(He, e => e.sections),
				Ke = e => e.user && e.user.notificationPrefs && e.user.notificationPrefs.api && e.user.notificationPrefs.api.getPreferences,
				Ye = e => {
					return !!Ke(e).error
				},
				$e = e => {
					return !!Ke(e).error
				},
				Qe = e => e.user && e.user.notificationPrefs && e.user.notificationPrefs.subscribedSubredditsSettings && e.user.notificationPrefs.subscribedSubredditsSettings.pageInfo,
				Je = Object(c.a)(Qe, e => !(!e || !e.hasNextPage)),
				Xe = Object(c.a)(Qe, e => e && e.endCursor),
				Ze = e => e.user && e.user.notificationPrefs && e.user.notificationPrefs.subscribedSubredditsSettings && e.user.notificationPrefs.subscribedSubredditsSettings.subreddits,
				et = e => {
					return !!Ke(e).error
				},
				tt = e => {
					var t, i, n, r;
					return null === (r = null === (n = null === (i = null === (t = e.user) || void 0 === t ? void 0 : t.notificationPrefs) || void 0 === i ? void 0 : i.api) || void 0 === n ? void 0 : n.getPreferences) || void 0 === r ? void 0 : r.pending
				}
		},
		"./src/reddit/selectors/video.ts": function(e, t, i) {
			"use strict";
			i.d(t, "d", (function() {
				return n
			})), i.d(t, "a", (function() {
				return r
			})), i.d(t, "f", (function() {
				return s
			})), i.d(t, "h", (function() {
				return o
			})), i.d(t, "j", (function() {
				return d
			})), i.d(t, "k", (function() {
				return a
			})), i.d(t, "c", (function() {
				return l
			})), i.d(t, "g", (function() {
				return u
			})), i.d(t, "b", (function() {
				return c
			})), i.d(t, "e", (function() {
				return _
			})), i.d(t, "i", (function() {
				return m
			}));
			const n = (e, {
					postId: t
				}) => !e.posts.video.buffering[t] && !!e.posts.video.playing[t],
				r = (e, {
					postId: t
				}) => !!e.posts.video.consumed[t],
				s = (e, {
					postId: t
				}) => e.posts.video.loadTimes[t],
				o = (e, {
					postId: t
				}) => e.posts.video.metadata[t],
				d = (e, {
					postId: t
				}) => !!e.posts.video.loadable[t],
				a = (e, {
					postId: t
				}) => !!e.posts.video.started[t],
				l = (e, {
					postId: t
				}) => {
					if (!t) return null;
					const i = e.posts.video.time[t];
					return i ? i.currentTime / 1e3 : null
				},
				u = (e, {
					postId: t
				}) => {
					if (!t) return null;
					const i = e.posts.video.time[t];
					return i ? i.maxTimeServed : null
				},
				c = (e, {
					postId: t
				}) => {
					return e.posts.video.continuousViewStartedAt[t] || 0
				},
				_ = (e, {
					postId: t
				}) => e.posts.video.fullscreen === t,
				m = e => e.posts.video.feed.mutedInFeed
		},
		"./src/reddit/singleton/tracing/clientSideHttpLogger.ts": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/crypto-js/hmac-sha256.js"),
				r = i.n(n),
				s = i("./node_modules/zipkin-transport-http/lib/index.js");
			const o = window && window.fetch;
			class d extends s.HttpLogger {
				constructor(e) {
					super(e), this.headers = {
						"Content-Type": "application/json"
					}, this.queue = [], this.fetchImplementation = o, this.key = e.key, this.secret = e.secret
				}
				processQueue() {
					if (this.queue.length > 0) {
						const e = `[${this.queue.join(",")}]`;
						if (!this.key || !this.secret) return;
						const t = r()(e, this.secret).toString(),
							i = {
								...this.headers,
								"X-Signature": `key=${this.key}, mac=${t}`
							};
						this.headers = i, super.processQueue(this.fetchImplementation)
					}
				}
			}
			t.a = d
		},
		"./src/reddit/singleton/tracing/index.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/reddit/singleton/tracing/tracer.ts");
			i.d(t, "a", (function() {
				return n.a
			}));
			let r = n.b;
			t.b = r
		},
		"./src/reddit/singleton/tracing/tracer.ts": function(e, t, i) {
			"use strict";
			(function(e) {
				i.d(t, "a", (function() {
					return a
				}));
				i("./node_modules/core-js/modules/web.dom.iterable.js");
				var n = i("./node_modules/zipkin/es/index.js"),
					r = i("./src/reddit/singleton/tracing/clientSideHttpLogger.ts"),
					s = i("./src/lib/createSignature/index.ts");
				const o = "Local",
					d = "Remote";
				var a, l;
				! function(e) {
					e.HttpMethod = "http.method", e.HttpUrl = "http.url", e.HttpStatusCode = "http.status_code", e.HttpQuery = "http.query", e.OperationId = "gql_operation.id"
				}(a || (a = {})),
				function(e) {
					e.TraceId = "X-Trace", e.SpanId = "X-Span", e.ParentSpanId = "X-Parent", e.Sampled = "X-Sampled", e.Flags = "X-Flags", e.Hmac = "X-Trace-Hmac", e.Secret = "x-trace-secret"
				}(l || (l = {}));
				class u {
					constructor({
						traceId: e,
						timestamp: t,
						annotation: i
					}) {
						this.traceId = e, this.timestamp = t, this.annotation = i
					}
				}

				function c() {
					let e = "";
					for (let t = 0; t < 16; t++) {
						e += "0123456789" [Math.floor(10 * Math.random())]
					}
					return e
				}
				const _ = 5e3;
				const m = new class {
					constructor() {
						this.isEnabled = !1, this.serviceName = "desktop2x", this.shouldRecordTrace = !1, this.context = new n.ExplicitContext, this.consoleRecorder = new n.ConsoleRecorder, this.shouldRecordTrace = !0, this.recorder = new n.BatchRecorder({
							logger: new r.a({
								endpoint: "https://diagnostics.redditmedia.com/spans",
								jsonEncoder: n.jsonEncoder.JSON_V1,
								timeout: _,
								key: "d2x",
								secret: "f45658cb24214a5d9f9579da9fc808ea"
							})
						})
					}
					enableTracing(e = !0) {
						this.isEnabled = e
					}
					getSampledValue(e) {
						return e.sampled.getOrElse(!1) ? "1" : "0"
					}
					getTracingHeaders() {
						const e = this.getCurrentTraceId(),
							t = this.getTraceHmac();
						if (!(this.isEnabled && this.shouldRecordTrace && e && t)) return {};
						let i = "";
						return e.parentSpanId.ifPresent(e => i = e), i ? {
							[l.TraceId]: e.traceId.toString(),
							[l.ParentSpanId]: i,
							[l.SpanId]: e.spanId.toString(),
							[l.Sampled]: this.getSampledValue(e),
							[l.Flags]: "0",
							[l.Hmac]: t
						} : {}
					}
					getTracingHeadersWithSecret() {
						return this.getTracingHeaders()
					}
					getTraceHmac() {
						const t = this.getCurrentTraceId();
						if (!t) return null;
						let i = "";
						if (t.parentSpanId.ifPresent(e => i = e), !i) return null;
						const n = t.isDebug() ? 1 : 0,
							r = [t.traceId.toString(), i, t.spanId.toString(), this.getSampledValue(t), n].join("-"),
							o = "MHQmvfC2IB7ADUbzJXqTjPVzJ4lLaljDwonReqQq";
						return Object(s.a)(r, e.from(o).toString("base64"))
					}
					getCurrentTraceId() {
						return this.isEnabled ? this.context.getContext() : null
					}
					createTraceFromId(e) {
						return new n.TraceId({
							traceId: e,
							parentId: n.option.None,
							spanId: e,
							sampled: new n.option.Some(!0),
							debug: !1
						})
					}
					createRootSpanId() {
						const e = c();
						return this.createTraceFromId(e)
					}
					createChildSpanId() {
						const e = this.context.getContext();
						return new n.TraceId({
							traceId: e.traceId,
							parentId: e ? n.option.fromNullable(e.spanId.toString()) : n.option.None,
							spanId: c(),
							sampled: new n.option.Some(!0),
							debug: !1
						})
					}
					setParent(e) {
						this.context.setContext(e)
					}
					recordTraceAnnotation(e, t) {
						this.shouldRecordTrace && e && this.recorder.record(new u({
							traceId: e,
							timestamp: 1e3 * Date.now(),
							annotation: t
						}))
					}
					recordPerformanceTimings(e, t, i) {
						const r = this.createChildSpanId();
						this.recordServiceName(r, this.serviceName), this.recordBinary(r, "operation", o), this.recorder.record(new u({
							traceId: r,
							timestamp: 1e3 * t,
							annotation: new n.Annotation.LocalOperationStart(e)
						})), this.recorder.record(new u({
							traceId: r,
							timestamp: 1e3 * i,
							annotation: new n.Annotation.LocalOperationStop
						}))
					}
					recordServiceName(e, t) {
						this.recordTraceAnnotation(e, new n.Annotation.ServiceName(t))
					}
					recordBinary(e, t, i) {
						this.recordTraceAnnotation(e, new n.Annotation.BinaryAnnotation(t, i))
					}
					recordLocalSpan(e, t) {
						let i;
						if (!this.isEnabled) return t();
						const r = this.createChildSpanId();
						return this.recordServiceName(r, this.serviceName), this.recordBinary(r, o, e), this.recordTraceAnnotation(r, new n.Annotation.LocalOperationStart(e)), this.context.scoped(() => {
							this.setParent(r), i = t()
						}), this.recordTraceAnnotation(r, new n.Annotation.LocalOperationStop), i
					}
					async recordAsyncSpan(e, t, i = !1, r) {
						let s;
						if (!this.isEnabled) return s = await t();
						const l = this.createChildSpanId();
						if (this.recordServiceName(l, this.serviceName), this.recordBinary(l, "operation", i ? d : o), r && Object.keys(r).forEach(e => {
								this.recordBinary(l, e, r[e])
							}), this.recordTraceAnnotation(l, new n.Annotation.LocalOperationStart(e)), i && this.recordTraceAnnotation(l, new n.Annotation.ClientSend), await this.context.scoped(async () => {
								this.setParent(l), s = await t()
							}), i && (this.recordTraceAnnotation(l, new n.Annotation.ClientRecv), s && (s.status && this.recordBinary(l, a.HttpStatusCode, s.status), s.error))) {
							const e = s.error;
							this.recordBinary(l, "error", e.type)
						}
						return this.recordTraceAnnotation(l, new n.Annotation.LocalOperationStop), s
					}
					async recordLocalSpanAsync(e, t) {
						return await this.recordAsyncSpan(e, t)
					}
					async recordRpcSpanAsync(e, t, i) {
						return await this.recordAsyncSpan(e, t, !0, i)
					}
					async recordRequest(e, t, i) {
						let r;
						if (!this.isEnabled) return r = await i();
						const s = this.getCurrentTraceId() || this.createRootSpanId();
						return Object.keys(t).forEach(e => {
							this.recordBinary(s, e, t[e])
						}), this.recordServiceName(s, this.serviceName), this.recordTraceAnnotation(s, new n.Annotation.LocalOperationStart(e)), await this.context.scoped(async () => {
							this.setParent(s), r = await i()
						}), this.recordTraceAnnotation(s, new n.Annotation.LocalOperationStop), r
					}
				};
				t.b = m
			}).call(this, i("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)
		},
		"./src/redditGQL/operations/ChatBadgeIndicators.json": function(e) {
			e.exports = JSON.parse('{"id":"426336427b10"}')
		},
		"./src/redditGQL/operations/CreateChatChannelInviteLink.json": function(e) {
			e.exports = JSON.parse('{"id":"d5d2819a6186"}')
		},
		"./src/redditGQL/operations/CreateMediaUploadLease.json": function(e) {
			e.exports = JSON.parse('{"id":"df597bfa6e5f"}')
		},
		"./src/redditGQL/operations/CustomerSurveyConfig.json": function(e) {
			e.exports = JSON.parse('{"id":"89970a6dad30"}')
		},
		"./src/redditGQL/operations/CustomerSurveySteps.json": function(e) {
			e.exports = JSON.parse('{"id":"679f44f9a458"}')
		},
		"./src/redditGQL/operations/DestroyInviteLink.json": function(e) {
			e.exports = JSON.parse('{"id":"af738125be66"}')
		},
		"./src/redditGQL/operations/ExperimentVariants.json": function(e) {
			e.exports = JSON.parse('{"id":"34910619f1e9"}')
		},
		"./src/redditGQL/operations/GeneralSearch.json": function(e) {
			e.exports = JSON.parse('{"id":"586f20f911ac"}')
		},
		"./src/redditGQL/operations/ModeratedSubreddits.json": function(e) {
			e.exports = JSON.parse('{"id":"6103843fc7be"}')
		},
		"./src/redditGQL/operations/PostIsTrackingCrossposts.json": function(e) {
			e.exports = JSON.parse('{"id":"a362f62253e5"}')
		},
		"./src/redditGQL/operations/ProfileModHubPage.json": function(e) {
			e.exports = JSON.parse('{"id":"0bb18a99115a"}')
		},
		"./src/redditGQL/operations/ProfileTrophies.json": function(e) {
			e.exports = JSON.parse('{"id":"3c59e5ed6f14"}')
		},
		"./src/redditGQL/operations/RedditorKarma.json": function(e) {
			e.exports = JSON.parse('{"id":"db6eb1356b13"}')
		},
		"./src/redditGQL/operations/RedditorMultireddits.json": function(e) {
			e.exports = JSON.parse('{"id":"3d04e2bb92b5"}')
		},
		"./src/redditGQL/operations/RichTextPostContent.json": function(e) {
			e.exports = JSON.parse('{"id":"fc24b7b690ad"}')
		},
		"./src/redditGQL/operations/SubmitMediaUpload.json": function(e) {
			e.exports = JSON.parse('{"id":"6a1841b659af"}')
		},
		"./src/redditGQL/operations/SubredditPostFlairStyleTemplates.json": function(e) {
			e.exports = JSON.parse('{"id":"9a87d9b91dc4"}')
		},
		"./src/redditGQL/operations/SubredditStyles.json": function(e) {
			e.exports = JSON.parse('{"id":"059a51904852"}')
		},
		"./src/redditGQL/operations/TopicBySlug.json": function(e) {
			e.exports = JSON.parse('{"id":"6265adefcf87"}')
		},
		"./src/redditGQL/operations/UpdatePostDistinguishState.json": function(e) {
			e.exports = JSON.parse('{"id":"e869489c84a4"}')
		},
		"./src/redditGQL/operations/UpdatePostFollowState.json": function(e) {
			e.exports = JSON.parse('{"id":"6491fda8f22b"}')
		},
		"./src/redditGQL/operations/UpdateReportState.json": function(e) {
			e.exports = JSON.parse('{"id":"9d437bfa4b8b"}')
		},
		"./src/redditGQL/operations/UploadV2Events.json": function(e) {
			e.exports = JSON.parse('{"id":"2c3efcfc2552"}')
		},
		"./src/redditGQL/types.ts": function(e, t, i) {
			"use strict";
			var n, r, s, o, d, a, l, u, c, _, m, p, h, f, b, g, w, v, y, E, S, T, O, I, R, F, N, C, j, A, x, D, P, L, k, B, M, U, G, q, V, H, W, z, K, Y, $, Q, J, X, Z, ee, te, ie, ne, re, se, oe, de, ae, le, ue, ce, _e, me, pe, he, fe, be, ge, we, ve, ye, Ee, Se, Te, Oe, Ie, Re, Fe, Ne, Ce, je, Ae, xe, De, Pe, Le, ke, Be, Me, Ue, Ge, qe, Ve, He, We, ze, Ke, Ye, $e, Qe, Je, Xe, Ze, et, tt, it, nt, rt, st, ot, dt, at, lt, ut, ct, _t, mt, pt, ht, ft, bt, gt, wt, vt, yt, Et, St, Tt, Ot, It, Rt, Ft, Nt, Ct, jt, At, xt, Dt, Pt, Lt, kt, Bt, Mt, Ut, Gt, qt, Vt, Ht, Wt, zt, Kt, Yt, $t, Qt, Jt, Xt, Zt, ei, ti, ii, ni, ri, si, oi, di, ai, li, ui, ci, _i, mi, pi, hi, fi, bi, gi, wi, vi, yi, Ei, Si, Ti, Oi, Ii, Ri, Fi, Ni, Ci, ji, Ai, xi, Di, Pi, Li, ki, Bi, Mi, Ui, Gi, qi, Vi, Hi;
			i.d(t, "a", (function() {
					return _
				})), i.d(t, "b", (function() {
					return N
				})), i.d(t, "c", (function() {
					return M
				})), i.d(t, "d", (function() {
					return V
				})), i.d(t, "e", (function() {
					return Z
				})), i.d(t, "f", (function() {
					return ee
				})), i.d(t, "g", (function() {
					return ce
				})), i.d(t, "h", (function() {
					return Ke
				})), i.d(t, "i", (function() {
					return tt
				})), i.d(t, "j", (function() {
					return it
				})), i.d(t, "k", (function() {
					return nt
				})), i.d(t, "l", (function() {
					return st
				})), i.d(t, "m", (function() {
					return ot
				})), i.d(t, "n", (function() {
					return at
				})), i.d(t, "o", (function() {
					return lt
				})), i.d(t, "p", (function() {
					return _t
				})), i.d(t, "q", (function() {
					return mt
				})), i.d(t, "r", (function() {
					return Dt
				})), i.d(t, "s", (function() {
					return Vt
				})), i.d(t, "t", (function() {
					return Kt
				})), i.d(t, "u", (function() {
					return oi
				})), i.d(t, "v", (function() {
					return Fi
				})), i.d(t, "w", (function() {
					return ji
				})),
				function(e) {
					e.Everyone = "EVERYONE", e.Whitelisted = "WHITELISTED"
				}(n || (n = {})),
				function(e) {
					e.Female = "FEMALE", e.Male = "MALE", e.NonBinary = "NON_BINARY", e.OptOut = "OPT_OUT", e.UserDefined = "USER_DEFINED"
				}(r || (r = {})),
				function(e) {
					e.Onboarding = "ONBOARDING"
				}(s || (s = {})),
				function(e) {
					e.Impression = "IMPRESSION", e.Click = "CLICK", e.CommentsView = "COMMENTS_VIEW", e.Upvote = "UPVOTE", e.Downvote = "DOWNVOTE", e.Comment = "COMMENT", e.ViewableImpression = "VIEWABLE_IMPRESSION", e.CommentUpvote = "COMMENT_UPVOTE", e.CommentDownvote = "COMMENT_DOWNVOTE", e.VendorFullyInView = "VENDOR_FULLY_IN_VIEW", e.VendorFullyInView_5Secs = "VENDOR_FULLY_IN_VIEW_5_SECS", e.VendorFullyInView_15Secs = "VENDOR_FULLY_IN_VIEW_15_SECS", e.GroupMViewable = "GROUP_M_VIEWABLE", e.Unload = "UNLOAD", e.GalleryItemImpression = "GALLERY_ITEM_IMPRESSION", e.VideoViewableImpression = "VIDEO_VIEWABLE_IMPRESSION", e.VideoFullyViewableImpression = "VIDEO_FULLY_VIEWABLE_IMPRESSION", e.VideoPlayedWithSound = "VIDEO_PLAYED_WITH_SOUND", e.VideoPlayedExpanded = "VIDEO_PLAYED_EXPANDED", e.VideoWatched_25 = "VIDEO_WATCHED_25", e.VideoWatched_50 = "VIDEO_WATCHED_50", e.VideoWatched_75 = "VIDEO_WATCHED_75", e.VideoWatched_95 = "VIDEO_WATCHED_95", e.VideoWatched_100 = "VIDEO_WATCHED_100", e.VideoStarted = "VIDEO_STARTED", e.VideoWatched_3Secs = "VIDEO_WATCHED_3_SECS", e.VideoWatched_5Secs = "VIDEO_WATCHED_5_SECS", e.VideoWatched_10Secs = "VIDEO_WATCHED_10_SECS", e.VideoGroupMViewable = "VIDEO_GROUP_M_VIEWABLE", e.VideoVendorFullyViewable_50 = "VIDEO_VENDOR_FULLY_VIEWABLE_50", e.MrcVideoViewableImpression = "MRC_VIDEO_VIEWABLE_IMPRESSION"
				}(o || (o = {})),
				function(e) {
					e.Card = "CARD", e.Classic = "CLASSIC", e.Compact = "COMPACT"
				}(d || (d = {})),
				function(e) {
					e.PromotedPost = "PROMOTED_POST", e.BlankOnly = "BLANK_ONLY", e.Feed = "FEED", e.MainSidebar = "MAIN_SIDEBAR", e.LightboxSidebar = "LIGHTBOX_SIDEBAR", e.Sidebars = "SIDEBARS", e.CommentsPage = "COMMENTS_PAGE", e.FullBleedVideoFeed = "FULL_BLEED_VIDEO_FEED"
				}(a || (a = {})),
				function(e) {
					e.Desktop = "DESKTOP", e.MobileWeb = "MOBILE_WEB", e.MobileNative = "MOBILE_NATIVE", e.DesktopLegacy = "DESKTOP_LEGACY", e.MobileWeb_3X = "MOBILE_WEB_3X", e.All = "ALL"
				}(l || (l = {})),
				function(e) {
					e.Generic = "GENERIC", e.First = "FIRST", e.Second = "SECOND", e.Last = "LAST", e.AllButFirst = "ALL_BUT_FIRST", e.All = "ALL"
				}(u || (u = {})),
				function(e) {
					e.Ama = "AMA", e.Announcement = "ANNOUNCEMENT", e.Document = "DOCUMENT", e.Moderation = "MODERATION", e.Snoo = "SNOO"
				}(c || (c = {})),
				function(e) {
					e.Unknown = "UNKNOWN", e.Tencent = "TENCENT", e.Twilio = "TWILIO"
				}(_ || (_ = {})),
				function(e) {
					e.Initial = "INITIAL", e.PlaybackAuthRequired = "PLAYBACK_AUTH_REQUIRED"
				}(m || (m = {})),
				function(e) {
					e.NoRole = "NO_ROLE", e.Listener = "LISTENER", e.Speaker = "SPEAKER", e.Moderator = "MODERATOR"
				}(p || (p = {})),
				function(e) {
					e.Off = "OFF", e.Lenient = "LENIENT", e.Moderate = "MODERATE", e.Strict = "STRICT"
				}(h || (h = {})),
				function(e) {
					e.Enabled = "ENABLED", e.ClosetOnly = "CLOSET_ONLY", e.Disabled = "DISABLED", e.PendingDelete = "PENDING_DELETE", e.Deleted = "DELETED", e.InternalOnly = "INTERNAL_ONLY", e.Restricted = "RESTRICTED"
				}(f || (f = {})),
				function(e) {
					e.Background = "BACKGROUND", e.Shadow = "SHADOW", e.HairBack = "HAIR_BACK", e.BodyBottom = "BODY_BOTTOM", e.Body = "BODY", e.FaceLower = "FACE_LOWER", e.FaceUpper = "FACE_UPPER", e.Hair = "HAIR", e.HeadAccessory = "HEAD_ACCESSORY", e.Accessory = "ACCESSORY", e.AccessoryBack = "ACCESSORY_BACK"
				}(b || (b = {})),
				function(e) {
					e.Premium = "PREMIUM"
				}(g || (g = {})),
				function(e) {
					e.Enabled = "ENABLED", e.Disabled = "DISABLED", e.Restricted = "RESTRICTED"
				}(w || (w = {})),
				function(e) {
					e.Gif = "GIF", e.Png = "PNG", e.Apng = "APNG", e.Jpg = "JPG"
				}(v || (v = {})),
				function(e) {
					e.Global = "GLOBAL", e.Moderator = "MODERATOR", e.Community = "COMMUNITY", e.Appreciation = "APPRECIATION", e.Premium = "PREMIUM", e.Group = "GROUP"
				}(y || (y = {})),
				function(e) {
					e.Global = "GLOBAL", e.Moderator = "MODERATOR", e.Community = "COMMUNITY"
				}(E || (E = {})),
				function(e) {
					e.Cover = "COVER", e.Tiled = "TILED", e.Centered = "CENTERED"
				}(S || (S = {})),
				function(e) {
					e.Numbered = "NUMBERED", e.Filled = "FILLED"
				}(T || (T = {})),
				function(e) {
					e.Small = "SMALL", e.Medium = "MEDIUM", e.Large = "LARGE"
				}(O || (O = {})),
				function(e) {
					e.None = "NONE", e.Blocked = "BLOCKED"
				}(I || (I = {})),
				function(e) {
					e.None = "NONE", e.Required = "REQUIRED", e.NotAllowed = "NOT_ALLOWED"
				}(R || (R = {})),
				function(e) {
					e.Text = "TEXT", e.Image = "IMAGE"
				}(F || (F = {})),
				function(e) {
					e.Direct = "DIRECT", e.Group = "GROUP", e.Subreddit = "SUBREDDIT"
				}(N || (N = {})),
				function(e) {
					e.Giphy = "GIPHY"
				}(C || (C = {})),
				function(e) {
					e.Awarding = "AWARDING", e.Image = "IMAGE"
				}(j || (j = {})),
				function(e) {
					e.Users = "USERS", e.Channel = "CHANNEL"
				}(A || (A = {})),
				function(e) {
					e.Mesg = "MESG", e.Admm = "ADMM", e.File = "FILE"
				}(x || (x = {})),
				function(e) {
					e.Boolean = "BOOLEAN"
				}(D || (D = {})),
				function(e) {
					e.Total = "TOTAL", e.Desktop = "DESKTOP", e.OldReddit = "OLD_REDDIT", e.Ios = "IOS", e.Android = "ANDROID", e.MobileWeb = "MOBILE_WEB"
				}(P || (P = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED", e.RoomEnded = "ROOM_ENDED"
				}(L || (L = {})),
				function(e) {
					e.Timeline = "TIMELINE", e.Gallery = "GALLERY"
				}(k || (k = {})),
				function(e) {
					e.Unknown = "UNKNOWN", e.LowScore = "LOW_SCORE", e.BlockedAuthor = "BLOCKED_AUTHOR", e.PotentiallyToxic = "POTENTIALLY_TOXIC", e.CrowdControl = "CROWD_CONTROL", e.Deleted = "DELETED"
				}(B || (B = {})),
				function(e) {
					e.None = "NONE", e.Distinguished = "DISTINGUISHED", e.DistinguishedAndStickied = "DISTINGUISHED_AND_STICKIED"
				}(M || (M = {})),
				function(e) {
					e.Unfollowed = "UNFOLLOWED", e.Followed = "FOLLOWED"
				}(U || (U = {})),
				function(e) {
					e.All = "ALL", e.Hour = "HOUR", e.Day = "DAY", e.Week = "WEEK", e.Month = "MONTH", e.Year = "YEAR"
				}(G || (G = {})),
				function(e) {
					e.None = "NONE", e.Saved = "SAVED"
				}(q || (q = {})),
				function(e) {
					e.Confidence = "CONFIDENCE", e.Top = "TOP", e.New = "NEW", e.Controversial = "CONTROVERSIAL", e.Old = "OLD", e.Random = "RANDOM", e.Qa = "QA", e.Live = "LIVE", e.Blank = "BLANK"
				}(V || (V = {})),
				function(e) {
					e.AddToBlacklist = "ADD_TO_BLACKLIST", e.RemoveFromBlacklist = "REMOVE_FROM_BLACKLIST"
				}(H || (H = {})),
				function(e) {
					e.DescriptionWithPosts = "DESCRIPTION_WITH_POSTS"
				}(W || (W = {})),
				function(e) {
					e.Slashtag = "SLASHTAG", e.Pretty = "PRETTY", e.Hide = "HIDE"
				}(z || (z = {})),
				function(e) {
					e.Initial = "INITIAL", e.Actioned = "ACTIONED", e.Dismissed = "DISMISSED", e.Completed = "COMPLETED"
				}(K || (K = {})),
				function(e) {
					e.HideButtonClick = "HIDE_BUTTON_CLICK", e.CtaButtonClick = "CTA_BUTTON_CLICK"
				}(Y || (Y = {})),
				function(e) {
					e.Markdown = "MARKDOWN", e.Richtext = "RICHTEXT"
				}($ || ($ = {})),
				function(e) {
					e.Accepted = "ACCEPTED", e.Pending = "PENDING"
				}(Q || (Q = {})),
				function(e) {
					e.Rtjson = "RTJSON", e.Text = "TEXT"
				}(J || (J = {})),
				function(e) {
					e.All = "ALL", e.None = "NONE", e.MessagesOnly = "MESSAGES_ONLY", e.MentionsOnly = "MENTIONS_ONLY"
				}(X || (X = {})),
				function(e) {
					e.Af = "AF", e.Ax = "AX", e.Al = "AL", e.Dz = "DZ", e.As = "AS", e.Ad = "AD", e.Ao = "AO", e.Ai = "AI", e.Aq = "AQ", e.Ag = "AG", e.Ar = "AR", e.Am = "AM", e.Aw = "AW", e.Au = "AU", e.At = "AT", e.Az = "AZ", e.Bs = "BS", e.Bh = "BH", e.Bd = "BD", e.Bb = "BB", e.By = "BY", e.Be = "BE", e.Bz = "BZ", e.Bj = "BJ", e.Bm = "BM", e.Bt = "BT", e.Bo = "BO", e.Ba = "BA", e.Bw = "BW", e.Bv = "BV", e.Br = "BR", e.Io = "IO", e.Bn = "BN", e.Bg = "BG", e.Bf = "BF", e.Bi = "BI", e.Kh = "KH", e.Cm = "CM", e.Ca = "CA", e.Cv = "CV", e.Ky = "KY", e.Cf = "CF", e.Td = "TD", e.Cl = "CL", e.Cn = "CN", e.Cx = "CX", e.Cc = "CC", e.Co = "CO", e.Km = "KM", e.Cg = "CG", e.Cd = "CD", e.Ck = "CK", e.Cr = "CR", e.Ci = "CI", e.Hr = "HR", e.Cu = "CU", e.Cy = "CY", e.Cz = "CZ", e.Dk = "DK", e.Dj = "DJ", e.Dm = "DM", e.Do = "DO", e.Ec = "EC", e.Eg = "EG", e.Sv = "SV", e.Gq = "GQ", e.Er = "ER", e.Ee = "EE", e.Et = "ET", e.Fk = "FK", e.Fo = "FO", e.Fj = "FJ", e.Fi = "FI", e.Fr = "FR", e.Gf = "GF", e.Pf = "PF", e.Tf = "TF", e.Ga = "GA", e.Gm = "GM", e.Ge = "GE", e.De = "DE", e.Gh = "GH", e.Gi = "GI", e.Gr = "GR", e.Gl = "GL", e.Gd = "GD", e.Gp = "GP", e.Gu = "GU", e.Gt = "GT", e.Gg = "GG", e.Gn = "GN", e.Gw = "GW", e.Gy = "GY", e.Ht = "HT", e.Hm = "HM", e.Va = "VA", e.Hn = "HN", e.Hk = "HK", e.Hu = "HU", e.Is = "IS", e.In = "IN", e.Id = "ID", e.Ir = "IR", e.Iq = "IQ", e.Ie = "IE", e.Im = "IM", e.Il = "IL", e.It = "IT", e.Jm = "JM", e.Jp = "JP", e.Je = "JE", e.Jo = "JO", e.Kz = "KZ", e.Ke = "KE", e.Ki = "KI", e.Kp = "KP", e.Kr = "KR", e.Kw = "KW", e.Kg = "KG", e.La = "LA", e.Lv = "LV", e.Lb = "LB", e.Ls = "LS", e.Lr = "LR", e.Ly = "LY", e.Li = "LI", e.Lt = "LT", e.Lu = "LU", e.Mo = "MO", e.Mk = "MK", e.Mg = "MG", e.Mw = "MW", e.My = "MY", e.Mv = "MV", e.Ml = "ML", e.Mt = "MT", e.Mh = "MH", e.Mq = "MQ", e.Mr = "MR", e.Mu = "MU", e.Yt = "YT", e.Mx = "MX", e.Fm = "FM", e.Md = "MD", e.Mc = "MC", e.Mn = "MN", e.Me = "ME", e.Ms = "MS", e.Ma = "MA", e.Mz = "MZ", e.Mm = "MM", e.Na = "NA", e.Nr = "NR", e.Np = "NP", e.Nl = "NL", e.An = "AN", e.Nc = "NC", e.Nz = "NZ", e.Ni = "NI", e.Ne = "NE", e.Ng = "NG", e.Nu = "NU", e.Nf = "NF", e.Mp = "MP", e.No = "NO", e.Om = "OM", e.Pk = "PK", e.Pw = "PW", e.Ps = "PS", e.Pa = "PA", e.Pg = "PG", e.Py = "PY", e.Pe = "PE", e.Ph = "PH", e.Pn = "PN", e.Pl = "PL", e.Pt = "PT", e.Pr = "PR", e.Qa = "QA", e.Re = "RE", e.Ro = "RO", e.Ru = "RU", e.Rw = "RW", e.Bl = "BL", e.Sh = "SH", e.Kn = "KN", e.Lc = "LC", e.Mf = "MF", e.Pm = "PM", e.Vc = "VC", e.Ws = "WS", e.Sm = "SM", e.St = "ST", e.Sa = "SA", e.Sn = "SN", e.Rs = "RS", e.Sc = "SC", e.Sl = "SL", e.Sg = "SG", e.Sk = "SK", e.Si = "SI", e.Sb = "SB", e.So = "SO", e.Za = "ZA", e.Gs = "GS", e.Es = "ES", e.Lk = "LK", e.Sd = "SD", e.Sr = "SR", e.Sj = "SJ", e.Sz = "SZ", e.Se = "SE", e.Ch = "CH", e.Sy = "SY", e.Tw = "TW", e.Tj = "TJ", e.Tz = "TZ", e.Th = "TH", e.Tl = "TL", e.Tg = "TG", e.Tk = "TK", e.To = "TO", e.Tt = "TT", e.Tn = "TN", e.Tr = "TR", e.Tm = "TM", e.Tc = "TC", e.Tv = "TV", e.Ug = "UG", e.Ua = "UA", e.Ae = "AE", e.Gb = "GB", e.Us = "US", e.Um = "UM", e.Uy = "UY", e.Uz = "UZ", e.Vu = "VU", e.Ve = "VE", e.Vn = "VN", e.Vg = "VG", e.Vi = "VI", e.Wf = "WF", e.Eh = "EH", e.Ye = "YE", e.Zm = "ZM", e.Zw = "ZW", e.Xx = "XX", e.Zz = "ZZ", e.Bq = "BQ", e.Cw = "CW", e.Ss = "SS", e.Sx = "SX", e.Xz = "XZ", e.Xk = "XK"
				}(Z || (Z = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED", e.RoomLimitExceeded = "ROOM_LIMIT_EXCEEDED", e.ConcurrentRoomLimitExceeded = "CONCURRENT_ROOM_LIMIT_EXCEEDED", e.SubredditRoomLimitExceeded = "SUBREDDIT_ROOM_LIMIT_EXCEEDED"
				}(ee || (ee = {})),
				function(e) {
					e.Available = "AVAILABLE", e.Unavailable = "UNAVAILABLE"
				}(te || (te = {})),
				function(e) {
					e.Post = "POST", e.Comment = "COMMENT"
				}(ie || (ie = {})),
				function(e) {
					e.Off = "OFF", e.Lenient = "LENIENT", e.Medium = "MEDIUM", e.Strict = "STRICT"
				}(ne || (ne = {})),
				function(e) {
					e.Unknown = "UNKNOWN", e.SingleSelectNoSubmitButton = "SINGLE_SELECT_NO_SUBMIT_BUTTON", e.SingleSelectWithSubmitButton = "SINGLE_SELECT_WITH_SUBMIT_BUTTON", e.MultiSelect = "MULTI_SELECT"
				}(re || (re = {})),
				function(e) {
					e.Usd = "USD", e.Coins = "COINS", e.SubredditPoints = "SUBREDDIT_POINTS", e.Ethereum = "ETHEREUM"
				}(se || (se = {})),
				function(e) {
					e.Default = "DEFAULT", e.Custom = "CUSTOM"
				}(oe || (oe = {})),
				function(e) {
					e.Monday = "MONDAY", e.Tuesday = "TUESDAY", e.Wednesday = "WEDNESDAY", e.Thursday = "THURSDAY", e.Friday = "FRIDAY", e.Saturday = "SATURDAY", e.Sunday = "SUNDAY"
				}(de || (de = {})),
				function(e) {
					e.Survey = "SURVEY"
				}(ae || (ae = {})),
				function(e) {
					e.Comment = "COMMENT", e.Chat = "CHAT"
				}(le || (le = {})),
				function(e) {
					e.All = "ALL", e.Distinct = "DISTINCT", e.Nondistinct = "NONDISTINCT"
				}(ue || (ue = {})),
				function(e) {
					e.None = "NONE", e.ModDistinguished = "MOD_DISTINGUISHED", e.AdminDistinguished = "ADMIN_DISTINGUISHED", e.AlumniDistinguished = "ALUMNI_DISTINGUISHED"
				}(ce || (ce = {})),
				function(e) {
					e.Admin = "ADMIN", e.Moderator = "MODERATOR", e.Gold = "GOLD", e.GoldAuto = "GOLD_AUTO", e.Special = "SPECIAL"
				}(_e || (_e = {})),
				function(e) {
					e.Second = "SECOND", e.Minute = "MINUTE", e.Hour = "HOUR", e.Day = "DAY", e.Month = "MONTH", e.Year = "YEAR"
				}(me || (me = {})),
				function(e) {
					e.MarkAsRead = "MARK_AS_READ", e.MarkAsUnread = "MARK_AS_UNREAD", e.Archive = "ARCHIVE", e.Unarchive = "UNARCHIVE", e.Highlight = "HIGHLIGHT", e.Unhighlight = "UNHIGHLIGHT", e.Filter = "FILTER", e.Unfilter = "UNFILTER"
				}(pe || (pe = {})),
				function(e) {
					e.Approve = "APPROVE", e.Disapprove = "DISAPPROVE", e.TempBan = "TEMP_BAN", e.Unban = "UNBAN"
				}(he || (he = {})),
				function(e) {
					e.All = "ALL", e.LinkFlair = "LINK_FLAIR", e.UserFlair = "USER_FLAIR", e.None = "NONE"
				}(fe || (fe = {})),
				function(e) {
					e.FromBeginning = "FROM_BEGINNING", e.Bounded = "BOUNDED"
				}(be || (be = {})),
				function(e) {
					e.None = "NONE", e.Favorited = "FAVORITED"
				}(ge || (ge = {})),
				function(e) {
					e.Card = "CARD", e.Compact = "COMPACT", e.Classic = "CLASSIC"
				}(we || (we = {})),
				function(e) {
					e.NoAction = "NO_ACTION", e.HideSubreddit = "HIDE_SUBREDDIT", e.HideDiscoveryUnit = "HIDE_DISCOVERY_UNIT"
				}(ve || (ve = {})),
				function(e) {
					e.All = "ALL", e.Emoji = "EMOJI", e.Text = "TEXT"
				}(ye || (ye = {})),
				function(e) {
					e.Supporter = "SUPPORTER", e.Achievement = "ACHIEVEMENT"
				}(Ee || (Ee = {})),
				function(e) {
					e.Left = "LEFT", e.Right = "RIGHT"
				}(Se || (Se = {})),
				function(e) {
					e.Dark = "DARK", e.Light = "LIGHT"
				}(Te || (Te = {})),
				function(e) {
					e.Default = "DEFAULT", e.Geo = "GEO", e.Tos = "TOS"
				}(Oe || (Oe = {})),
				function(e) {
					e.None = "NONE", e.Followed = "FOLLOWED"
				}(Ie || (Ie = {})),
				function(e) {
					e.Hourly = "HOURLY", e.Daily = "DAILY", e.Weekly = "WEEKLY", e.Monthly = "MONTHLY"
				}(Re || (Re = {})),
				function(e) {
					e.None = "NONE", e.Friended = "FRIENDED"
				}(Fe || (Fe = {})),
				function(e) {
					e.None = "NONE", e.Required = "REQUIRED", e.NotAllowed = "NOT_ALLOWED"
				}(Ne || (Ne = {})),
				function(e) {
					e.GoogleMaps = "GOOGLE_MAPS", e.Geonames = "GEONAMES"
				}(Ce || (Ce = {})),
				function(e) {
					e.Downsized = "DOWNSIZED", e.DownsizedLarge = "DOWNSIZED_LARGE", e.DownsizedMedium = "DOWNSIZED_MEDIUM", e.DownsizedStill = "DOWNSIZED_STILL", e.FixedHeight = "FIXED_HEIGHT", e.FixedHeightDownsampled = "FIXED_HEIGHT_DOWNSAMPLED", e.FixedHeightSmall = "FIXED_HEIGHT_SMALL", e.FixedHeightSmallStill = "FIXED_HEIGHT_SMALL_STILL", e.FixedHeightStill = "FIXED_HEIGHT_STILL", e.FixedWidth = "FIXED_WIDTH", e.FixedWidthDownsampled = "FIXED_WIDTH_DOWNSAMPLED", e.FixedWidthSmall = "FIXED_WIDTH_SMALL", e.FixedWidthSmallStill = "FIXED_WIDTH_SMALL_STILL", e.FixedWidthStill = "FIXED_WIDTH_STILL", e.Original = "ORIGINAL", e.OriginalStill = "ORIGINAL_STILL", e.PreviewGif = "PREVIEW_GIF", e.PreviewWebp = "PREVIEW_WEBP"
				}(je || (je = {})),
				function(e) {
					e.Silver = "SILVER", e.Gold = "GOLD", e.Supergold = "SUPERGOLD"
				}(Ae || (Ae = {})),
				function(e) {
					e.Off = "OFF", e.Lenient = "LENIENT", e.Moderate = "MODERATE", e.Strict = "STRICT"
				}(xe || (xe = {})),
				function(e) {
					e.UnhiddenOnly = "UNHIDDEN_ONLY", e.HiddenOnly = "HIDDEN_ONLY", e.HiddenAllowAutoUnhide = "HIDDEN_ALLOW_AUTO_UNHIDE", e.HiddenPreventAutoUnhide = "HIDDEN_PREVENT_AUTO_UNHIDE"
				}(De || (De = {})),
				function(e) {
					e.None = "NONE", e.Hidden = "HIDDEN"
				}(Pe || (Pe = {})),
				function(e) {
					e.R2 = "R2", e.Mweb = "MWEB", e.D2X = "D2X", e.Modmail = "MODMAIL"
				}(Le || (Le = {})),
				function(e) {
					e.Enabled = "ENABLED", e.Provisional = "PROVISIONAL"
				}(ke || (ke = {})),
				function(e) {
					e.Google = "GOOGLE", e.Apple = "APPLE"
				}(Be || (Be = {})),
				function(e) {
					e.Cover = "COVER", e.Tiled = "TILED"
				}(Me || (Me = {})),
				function(e) {
					e.Subscriber = "SUBSCRIBER", e.Mod = "MOD"
				}(Ue || (Ue = {})),
				function(e) {
					e.Rare = "RARE", e.Epic = "EPIC", e.Legendary = "LEGENDARY", e.Test = "TEST"
				}(Ge || (Ge = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED", e.DeviceLimitExceeded = "DEVICE_LIMIT_EXCEEDED", e.RoomFull = "ROOM_FULL", e.StageFull = "STAGE_FULL", e.RoomEnded = "ROOM_ENDED"
				}(qe || (qe = {})),
				function(e) {
					e.None = "NONE", e.Whitelist = "WHITELIST", e.Blacklist = "BLACKLIST"
				}(Ve || (Ve = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED"
				}(He || (He = {})),
				function(e) {
					e.NotStarted = "NOT_STARTED", e.Published = "PUBLISHED", e.IsLive = "IS_LIVE", e.Disconnected = "DISCONNECTED", e.Killed = "KILLED", e.Purged = "PURGED", e.Ended = "ENDED"
				}(We || (We = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED"
				}(ze || (ze = {})),
				function(e) {
					e.UsernameMention = "USERNAME_MENTION", e.PrivateMessage = "PRIVATE_MESSAGE", e.CommentReply = "COMMENT_REPLY", e.PostReply = "POST_REPLY", e.LifecyclePostSuggestions = "LIFECYCLE_POST_SUGGESTIONS", e.Subreddit = "SUBREDDIT", e.ChatMessage = "CHAT_MESSAGE", e.ChatRequest = "CHAT_REQUEST", e.SubredditUpdatesInterestingPost = "SUBREDDIT_UPDATES_INTERESTING_POST", e.News = "NEWS", e.ScheduledEvent = "SCHEDULED_EVENT", e.AddToCollection = "ADD_TO_COLLECTION", e.SubredditRecommendation = "SUBREDDIT_RECOMMENDATION", e.OneOff = "ONE_OFF", e.UpvotePost = "UPVOTE_POST", e.UpvoteComment = "UPVOTE_COMMENT", e.PasswordReset = "PASSWORD_RESET", e.EmailDigest = "EMAIL_DIGEST", e.Escalation = "ESCALATION", e.VerifyEmail = "VERIFY_EMAIL", e.Ato = "ATO", e.Security = "SECURITY", e.ForgotUsername = "FORGOT_USERNAME", e.LiveEvent = "LIVE_EVENT", e.CakeDay = "CAKE_DAY", e.NewPostActivity = "NEW_POST_ACTIVITY", e.AdsCampaignApproved = "ADS_CAMPAIGN_APPROVED", e.UserNewFollower = "USER_NEW_FOLLOWER", e.AdsCampaignRejected = "ADS_CAMPAIGN_REJECTED", e.ThreadReplies = "THREAD_REPLIES", e.TopLevelComment = "TOP_LEVEL_COMMENT", e.ChatAcceptInvite = "CHAT_ACCEPT_INVITE", e.EmailExternalVerification = "EMAIL_EXTERNAL_VERIFICATION", e.EconPromotion = "ECON_PROMOTION", e.AdsAutomatedReport = "ADS_AUTOMATED_REPORT", e.AdminAnnouncementEmail = "ADMIN_ANNOUNCEMENT_EMAIL", e.PostFlairAdded = "POST_FLAIR_ADDED", e.BroadcastFollower = "BROADCAST_FOLLOWER", e.BroadcastRecommendation = "BROADCAST_RECOMMENDATION", e.UserFlairAdded = "USER_FLAIR_ADDED", e.ModeratedSrEngagement = "MODERATED_SR_ENGAGEMENT", e.ModeratedSrMilestone = "MODERATED_SR_MILESTONE", e.ModeratedSrContentFoundation = "MODERATED_SR_CONTENT_FOUNDATION", e.CryptoTransactionApproval = "CRYPTO_TRANSACTION_APPROVAL", e.AdsRoleInvitation = "ADS_ROLE_INVITATION", e.NewPinnedPost = "NEW_PINNED_POST", e.EmailUpvotePost = "EMAIL_UPVOTE_POST", e.EmailUpvoteComment = "EMAIL_UPVOTE_COMMENT", e.EmailCommunityDiscovery = "EMAIL_COMMUNITY_DISCOVERY", e.EmailNewUserEducation = "EMAIL_NEW_USER_EDUCATION", e.EmailUserNewFollower = "EMAIL_USER_NEW_FOLLOWER", e.EmailChatRequest = "EMAIL_CHAT_REQUEST", e.PushTokenHealthCheck = "PUSH_TOKEN_HEALTH_CHECK", e.EmailPostReply = "EMAIL_POST_REPLY", e.EmailCommentReply = "EMAIL_COMMENT_REPLY", e.EmailPrivateMessage = "EMAIL_PRIVATE_MESSAGE", e.EmailUsernameMention = "EMAIL_USERNAME_MENTION", e.Oauth2AppAdd = "OAUTH2_APP_ADD", e.Oauth2AppApprove = "OAUTH2_APP_APPROVE", e.AeDmcaNotifySubmitter = "AE_DMCA_NOTIFY_SUBMITTER", e.PostFollow = "POST_FOLLOW", e.CommentFollow = "COMMENT_FOLLOW", e.MorePostActivity = "MORE_POST_ACTIVITY", e.EmailMagicLinkRegister = "EMAIL_MAGIC_LINK_REGISTER", e.EmailMagicLinkLogin = "EMAIL_MAGIC_LINK_LOGIN", e.ExportCompleteNotifyUserEmail = "EXPORT_COMPLETE_NOTIFY_USER_EMAIL", e.UsernameTakeoverCompleted = "USERNAME_TAKEOVER_COMPLETED", e.EmailChangeEmail = "EMAIL_CHANGE_EMAIL", e.AwardReceived = "AWARD_RECEIVED", e.ModeratedSrNewPost = "MODERATED_SR_NEW_POST", e.ModeratedSrViralCommentPost = "MODERATED_SR_VIRAL_COMMENT_POST", e.ModeratedSrViralUpvotePost = "MODERATED_SR_VIRAL_UPVOTE_POST", e.ModeratedSrReportedPost = "MODERATED_SR_REPORTED_POST", e.ModeratedSrReportedComment = "MODERATED_SR_REPORTED_COMMENT", e.ModeratedSrNewModmail = "MODERATED_SR_NEW_MODMAIL", e.IncentivizedPromotion = "INCENTIVIZED_PROMOTION", e.TrendingGeo = "TRENDING_GEO", e.RedditLore = "REDDIT_LORE", e.TalkLive = "TALK_LIVE", e.ChatMessageReaction = "CHAT_MESSAGE_REACTION", e.EmailWeeklyRecap = "EMAIL_WEEKLY_RECAP"
				}(Ke || (Ke = {})),
				function(e) {
					e.Valid = "VALID", e.Unprocessed = "UNPROCESSED", e.Failed = "FAILED", e.Invalid = "INVALID"
				}(Ye || (Ye = {})),
				function(e) {
					e.Embed = "EMBED", e.Image = "IMAGE", e.Gifvideo = "GIFVIDEO", e.Video = "VIDEO", e.Rpan = "RPAN"
				}($e || ($e = {})),
				function(e) {
					e.On = "ON", e.Off = "OFF", e.Subreddit = "SUBREDDIT"
				}(Qe || (Qe = {})),
				function(e) {
					e.Joined = "JOINED", e.Invited = "INVITED", e.NotAMember = "NOT_A_MEMBER", e.Other = "OTHER"
				}(Je || (Je = {})),
				function(e) {
					e.All = "ALL", e.InvitedOnly = "INVITED_ONLY", e.JoinedOnly = "JOINED_ONLY", e.InvitedByFriend = "INVITED_BY_FRIEND", e.InvitedByNonFriend = "INVITED_BY_NON_FRIEND"
				}(Xe || (Xe = {})),
				function(e) {
					e.Default = "DEFAULT", e.Overlay = "OVERLAY"
				}(Ze || (Ze = {})),
				function(e) {
					e.Add = "ADD", e.Delete = "DELETE"
				}(et || (et = {})),
				function(e) {
					e.Gif = "GIF", e.Jpeg = "JPEG", e.Png = "PNG"
				}(tt || (tt = {})),
				function(e) {
					e.AcceptModeratorInvite = "ACCEPT_MODERATOR_INVITE", e.AddCommunityTopics = "ADD_COMMUNITY_TOPICS", e.AddContributor = "ADD_CONTRIBUTOR", e.AddModerator = "ADD_MODERATOR", e.AdjustPostCrowdControlLevel = "ADJUST_POST_CROWD_CONTROL_LEVEL", e.EnablePostCrowdControlFilter = "ENABLE_POST_CROWD_CONTROL_FILTER", e.DisablePostCrowdControlFilter = "DISABLE_POST_CROWD_CONTROL_FILTER", e.ApproveComment = "APPROVE_COMMENT", e.ApproveLink = "APPROVE_LINK", e.BanUser = "BAN_USER", e.CreateAward = "CREATE_AWARD", e.CreateScheduledPost = "CREATE_SCHEDULED_POST", e.Collections = "COLLECTIONS", e.CommunityStyling = "COMMUNITY_STYLING", e.CommunityWidgets = "COMMUNITY_WIDGETS", e.CreateRule = "CREATE_RULE", e.DeleteAward = "DELETE_AWARD", e.DeleteRule = "DELETE_RULE", e.DeleteScheduledPost = "DELETE_SCHEDULED_POST", e.DeleteOverriddenClassification = "DELETE_OVERRIDDEN_CLASSIFICATION", e.DisableAward = "DISABLE_AWARD", e.Distinguish = "DISTINGUISH", e.EditFlair = "EDIT_FLAIR", e.EditPostRequirements = "EDIT_POST_REQUIREMENTS", e.EditRule = "EDIT_RULE", e.EditScheduledPost = "EDIT_SCHEDULED_POST", e.EditSettings = "EDIT_SETTINGS", e.EnableAward = "ENABLE_AWARD", e.Events = "EVENTS", e.HiddenAward = "HIDDEN_AWARD", e.IgnoreReports = "IGNORE_REPORTS", e.InviteModerator = "INVITE_MODERATOR", e.InviteSubscriber = "INVITE_SUBSCRIBER", e.Lock = "LOCK", e.MarkNsfw = "MARK_NSFW", e.MarkOriginalContent = "MARK_ORIGINAL_CONTENT", e.ModAwardGiven = "MOD_AWARD_GIVEN", e.ModmailEnrollment = "MODMAIL_ENROLLMENT", e.MuteUser = "MUTE_USER", e.OverrideClassification = "OVERRIDE_CLASSIFICATION", e.RemoveComment = "REMOVE_COMMENT", e.RemoveCommunityTopics = "REMOVE_COMMUNITY_TOPICS", e.RemoveContributor = "REMOVE_CONTRIBUTOR", e.RemoveLink = "REMOVE_LINK", e.RemoveModerator = "REMOVE_MODERATOR", e.RemoveWikiContributor = "REMOVE_WIKI_CONTRIBUTOR", e.ReorderModerators = "REORDER_MODERATORS", e.ReorderRules = "REORDER_RULES", e.SetContestMode = "SET_CONTEST_MODE", e.SetPermissions = "SET_PERMISSIONS", e.SetSuggestedsort = "SET_SUGGESTEDSORT", e.ShowComment = "SHOW_COMMENT", e.SnoozeReports = "SNOOZE_REPORTS", e.SpamComment = "SPAM_COMMENT", e.SpamLink = "SPAM_LINK", e.Spoiler = "SPOILER", e.Sticky = "STICKY", e.SubmitContentRatingSurvey = "SUBMIT_CONTENT_RATING_SURVEY", e.SubmitScheduledPost = "SUBMIT_SCHEDULED_POST", e.UnbanUser = "UNBAN_USER", e.UnignoreReports = "UNIGNORE_REPORTS", e.UninviteModerator = "UNINVITE_MODERATOR", e.Unlock = "UNLOCK", e.UnmuteUser = "UNMUTE_USER", e.UnsetContestMode = "UNSET_CONTEST_MODE", e.UnsnoozeReports = "UNSNOOZE_REPORTS", e.Unspoiler = "UNSPOILER", e.Unsticky = "UNSTICKY", e.WikiBanned = "WIKI_BANNED", e.WikiContributor = "WIKI_CONTRIBUTOR", e.WikiPageListed = "WIKI_PAGE_LISTED", e.WikiPermLevel = "WIKI_PERM_LEVEL", e.WikiRevise = "WIKI_REVISE", e.WikiUnbanned = "WIKI_UNBANNED"
				}(it || (it = {})),
				function(e) {
					e.Note = "NOTE", e.Approval = "APPROVAL", e.Removal = "REMOVAL", e.Ban = "BAN", e.Mute = "MUTE", e.Invite = "INVITE", e.Spam = "SPAM", e.ContentChange = "CONTENT_CHANGE", e.ModAction = "MOD_ACTION", e.All = "ALL"
				}(nt || (nt = {})),
				function(e) {
					e.Note = "NOTE", e.Approval = "APPROVAL", e.Removal = "REMOVAL", e.Ban = "BAN", e.Mute = "MUTE", e.Invite = "INVITE", e.Spam = "SPAM", e.ContentChange = "CONTENT_CHANGE"
				}(rt || (rt = {})),
				function(e) {
					e.ModPnsStatus = "MOD_PNS_STATUS", e.ModPnMilestoneStatus = "MOD_PN_MILESTONE_STATUS", e.ModPnContentFoundationStatus = "MOD_PN_CONTENT_FOUNDATION_STATUS", e.ModPnNewPostStatus = "MOD_PN_NEW_POST_STATUS", e.ModPnNewModmailStatus = "MOD_PN_NEW_MODMAIL_STATUS", e.ModPnNewCrosspostStatus = "MOD_PN_NEW_CROSSPOST_STATUS", e.ModPnNewSrMentionStatus = "MOD_PN_NEW_SR_MENTION_STATUS", e.ModPnViralCommentPostStatus = "MOD_PN_VIRAL_COMMENT_POST_STATUS", e.ModPnViralUpvotePostStatus = "MOD_PN_VIRAL_UPVOTE_POST_STATUS", e.ModPnReportedPostStatus = "MOD_PN_REPORTED_POST_STATUS", e.ModPnReportedCommentStatus = "MOD_PN_REPORTED_COMMENT_STATUS", e.ModPnPostInPopularFeedStatus = "MOD_PN_POST_IN_POPULAR_FEED_STATUS"
				}(st || (st = {})),
				function(e) {
					e.ModPnViralCommentPostThreshold = "MOD_PN_VIRAL_COMMENT_POST_THRESHOLD", e.ModPnViralUpvotePostThreshold = "MOD_PN_VIRAL_UPVOTE_POST_THRESHOLD", e.ModPnReportedPostThreshold = "MOD_PN_REPORTED_POST_THRESHOLD", e.ModPnReportedCommentThreshold = "MOD_PN_REPORTED_COMMENT_THRESHOLD", e.ModPnPostInPopularFeedThreshold = "MOD_PN_POST_IN_POPULAR_FEED_THRESHOLD"
				}(ot || (ot = {})),
				function(e) {
					e.Notify = "NOTIFY", e.Top = "TOP", e.Info = "INFO", e.Comment = "COMMENT", e.Crosspost = "CROSSPOST", e.FeedPosts = "FEED_POSTS", e.Rising = "RISING", e.Message = "MESSAGE", e.Report = "REPORT"
				}(dt || (dt = {})),
				function(e) {
					e.Auto = "AUTO", e.Enabled = "ENABLED", e.Disabled = "DISABLED"
				}(at || (at = {})),
				function(e) {
					e.Post = "POST", e.Comment = "COMMENT"
				}(lt || (lt = {})),
				function(e) {
					e.SortDate = "SORT_DATE"
				}(ut || (ut = {})),
				function(e) {
					e.UserReports = "USER_REPORTS", e.Automod = "AUTOMOD", e.Mod = "MOD", e.Admin = "ADMIN", e.ShadowbannedSubmitter = "SHADOWBANNED_SUBMITTER", e.HatefulContent = "HATEFUL_CONTENT", e.CrowdControl = "CROWD_CONTROL"
				}(ct || (ct = {})),
				function(e) {
					e.Mod = "MOD", e.Reported = "REPORTED", e.Removed = "REMOVED", e.Edited = "EDITED", e.Unmoderated = "UNMODERATED"
				}(_t || (_t = {})),
				function(e) {
					e.BotBan = "BOT_BAN", e.PermaBan = "PERMA_BAN", e.Ban = "BAN", e.AbuseWarning = "ABUSE_WARNING", e.SpamWarning = "SPAM_WARNING", e.SpamWatch = "SPAM_WATCH", e.SolidContributor = "SOLID_CONTRIBUTOR", e.HelpfulUser = "HELPFUL_USER"
				}(mt || (mt = {})),
				function(e) {
					e.ModApproved = "MOD_APPROVED", e.ModRemoved = "MOD_REMOVED", e.ModSpammed = "MOD_SPAMMED", e.AdminRemoved = "ADMIN_REMOVED", e.AdminApproved = "ADMIN_APPROVED", e.AdminSpammed = "ADMIN_SPAMMED"
				}(pt || (pt = {})),
				function(e) {
					e.Legal = "LEGAL"
				}(ht || (ht = {})),
				function(e) {
					e.Highlighted = "HIGHLIGHTED", e.Unhighlighted = "UNHIGHLIGHTED", e.Archived = "ARCHIVED", e.Unarchived = "UNARCHIVED", e.ReportedToAdmins = "REPORTED_TO_ADMINS", e.Muted = "MUTED", e.Unmuted = "UNMUTED", e.Banned = "BANNED", e.Unbanned = "UNBANNED", e.Approved = "APPROVED", e.Disapproved = "DISAPPROVED", e.Filtered = "FILTERED", e.Unfiltered = "UNFILTERED"
				}(ft || (ft = {})),
				function(e) {
					e.All = "ALL", e.New = "NEW", e.Inprogress = "INPROGRESS", e.Archived = "ARCHIVED", e.Appeals = "APPEALS", e.JoinRequests = "JOIN_REQUESTS", e.Highlighted = "HIGHLIGHTED", e.Mod = "MOD", e.Notifications = "NOTIFICATIONS", e.Inbox = "INBOX", e.Filtered = "FILTERED"
				}(bt || (bt = {})),
				function(e) {
					e.Relevance = "RELEVANCE", e.Recent = "RECENT", e.Unread = "UNREAD", e.Mod = "MOD", e.User = "USER"
				}(gt || (gt = {})),
				function(e) {
					e.New = "NEW", e.Inprogress = "INPROGRESS", e.Archived = "ARCHIVED", e.Appeals = "APPEALS", e.JoinRequests = "JOIN_REQUESTS", e.Filtered = "FILTERED"
				}(wt || (wt = {})),
				function(e) {
					e.Public = "PUBLIC", e.Private = "PRIVATE", e.Hidden = "HIDDEN"
				}(vt || (vt = {})),
				function(e) {
					e.None = "NONE", e.Nsfw = "NSFW"
				}(yt || (yt = {})),
				function(e) {
					e.Undefined = "UNDEFINED", e.NotEligibleToClaim = "NOT_ELIGIBLE_TO_CLAIM", e.NoNftLeft = "NO_NFT_LEFT", e.AvailableToClaim = "AVAILABLE_TO_CLAIM", e.InProgress = "IN_PROGRESS", e.ClaimedSuccessfully = "CLAIMED_SUCCESSFULLY", e.ClaimFailed = "CLAIM_FAILED"
				}(Et || (Et = {})),
				function(e) {
					e.Bell = "BELL", e.Live = "LIVE", e.Trophy = "TROPHY", e.Chat = "CHAT", e.Reply = "REPLY", e.SortRising = "SORT_RISING", e.SortLive = "SORT_LIVE", e.Comment = "COMMENT", e.SortTop = "SORT_TOP", e.Upvote = "UPVOTE", e.Heart = "HEART", e.Redditor = "REDDITOR", e.Award = "AWARD", e.NotifyAll = "NOTIFY_ALL", e.Lore = "LORE"
				}(St || (St = {})),
				function(e) {
					e.Push = "PUSH", e.Email = "EMAIL"
				}(Tt || (Tt = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED", e.StageFull = "STAGE_FULL", e.AlreadyExists = "ALREADY_EXISTS", e.UserNotInRoom = "USER_NOT_IN_ROOM"
				}(Ot || (Ot = {})),
				function(e) {
					e.Query = "QUERY", e.Mutation = "MUTATION"
				}(It || (It = {})),
				function(e) {
					e.Created = "CREATED", e.Prepared = "PREPARED", e.Paid = "PAID", e.Executed = "EXECUTED"
				}(Rt || (Rt = {})),
				function(e) {
					e.Chronological = "CHRONOLOGICAL", e.LatestLastMessage = "LATEST_LAST_MESSAGE", e.ChannelNameAlphabetical = "CHANNEL_NAME_ALPHABETICAL", e.MetadataValueAlphabetical = "METADATA_VALUE_ALPHABETICAL"
				}(Ft || (Ft = {})),
				function(e) {
					e.MuxedMp4 = "MUXED_MP4"
				}(Nt || (Nt = {})),
				function(e) {
					e.Internal = "INTERNAL", e.Stripe = "STRIPE", e.Braintree = "BRAINTREE", e.Paypal = "PAYPAL", e.RedditCoins = "REDDIT_COINS", e.Meta = "META", e.GoogleInapp = "GOOGLE_INAPP", e.AppleInapp = "APPLE_INAPP", e.Ledger = "LEDGER"
				}(Ct || (Ct = {})),
				function(e) {
					e.New = "NEW", e.ActionRequired = "ACTION_REQUIRED", e.Pending = "PENDING", e.Paid = "PAID", e.Canceled = "CANCELED", e.Rejected = "REJECTED", e.Failed = "FAILED", e.Refunded = "REFUNDED"
				}(jt || (jt = {})),
				function(e) {
					e.Common = "COMMON", e.Rare = "RARE", e.Epic = "EPIC", e.Legendary = "LEGENDARY"
				}(At || (At = {})),
				function(e) {
					e.Left = "LEFT", e.Right = "RIGHT", e.Centered = "CENTERED"
				}(xt || (xt = {})),
				function(e) {
					e.None = "NONE", e.Distinguished = "DISTINGUISHED"
				}(Dt || (Dt = {})),
				function(e) {
					e.Link = "LINK", e.Richtext = "RICHTEXT", e.Markdown = "MARKDOWN"
				}(Pt || (Pt = {})),
				function(e) {
					e.All = "ALL", e.Hour = "HOUR", e.Day = "DAY", e.Week = "WEEK", e.Month = "MONTH", e.Year = "YEAR"
				}(Lt || (Lt = {})),
				function(e) {
					e.Hot = "HOT", e.New = "NEW", e.Top = "TOP", e.Controversial = "CONTROVERSIAL", e.Rising = "RISING", e.Best = "BEST"
				}(kt || (kt = {})),
				function(e) {
					e.Unfollowed = "UNFOLLOWED", e.Followed = "FOLLOWED"
				}(Bt || (Bt = {})),
				function(e) {
					e.Link = "LINK", e.Self = "SELF", e.Image = "IMAGE", e.Video = "VIDEO", e.HostedVideo = "HOSTED_VIDEO", e.RichVideo = "RICH_VIDEO", e.Poll = "POLL", e.Gallery = "GALLERY"
				}(Mt || (Mt = {})),
				function(e) {
					e.Link = "LINK", e.Self = "SELF", e.Poll = "POLL"
				}(Ut || (Ut = {})),
				function(e) {
					e.Legacy = "LEGACY", e.LinkedPostsVersionA = "LINKED_POSTS_VERSION_A"
				}(Gt || (Gt = {})),
				function(e) {
					e.None = "NONE", e.Saved = "SAVED"
				}(qt || (qt = {})),
				function(e) {
					e.Link = "LINK", e.Image = "IMAGE", e.Video = "VIDEO", e.Text = "TEXT", e.Spoiler = "SPOILER", e.Poll = "POLL", e.Gallery = "GALLERY", e.Talk = "TALK", e.Prediction = "PREDICTION"
				}(Vt || (Vt = {})),
				function(e) {
					e.Coins = "COINS", e.Tokens = "TOKENS", e.NotSupported = "NOT_SUPPORTED"
				}(Ht || (Ht = {})),
				function(e) {
					e.Off = "OFF", e.InFeed = "IN_FEED", e.SubredditHeader = "SUBREDDIT_HEADER"
				}(Wt || (Wt = {})),
				function(e) {
					e.Open = "OPEN", e.Closed = "CLOSED", e.Cancelled = "CANCELLED", e.Resolved = "RESOLVED", e.CancelInProgress = "CANCEL_IN_PROGRESS", e.ResolveInProgress = "RESOLVE_IN_PROGRESS"
				}(zt || (zt = {})),
				function(e) {
					e.Draft = "DRAFT", e.LiveInProgress = "LIVE_IN_PROGRESS", e.Live = "LIVE", e.Closed = "CLOSED"
				}(Kt || (Kt = {})),
				function(e) {
					e.Gdpr = "GDPR", e.Ccpa = "CCPA", e.Other = "OTHER"
				}(Yt || (Yt = {})),
				function(e) {
					e.Posts = "POSTS", e.Comments = "COMMENTS", e.Overview = "OVERVIEW"
				}($t || ($t = {})),
				function(e) {
					e.Hot = "HOT", e.New = "NEW", e.Top = "TOP", e.Controversial = "CONTROVERSIAL", e.Rising = "RISING"
				}(Qt || (Qt = {})),
				function(e) {
					e.Generic = "GENERIC", e.CoinSale = "COIN_SALE", e.CoinDeal = "COIN_DEAL"
				}(Jt || (Jt = {})),
				function(e) {
					e.All = "ALL", e.Public = "PUBLIC", e.Private = "PRIVATE"
				}(Xt || (Xt = {})),
				function(e) {
					e.ServiceError = "SERVICE_ERROR", e.UserNotLoggedIn = "USER_NOT_LOGGED_IN", e.UserNotAuthorized = "USER_NOT_AUTHORIZED", e.NotEligibleSpeaker = "NOT_ELIGIBLE_SPEAKER"
				}(Zt || (Zt = {})),
				function(e) {
					e.AllTime = "ALL_TIME", e.Monthly = "MONTHLY"
				}(ei || (ei = {})),
				function(e) {
					e.SideBySide = "SIDE_BY_SIDE", e.Sequential = "SEQUENTIAL", e.Meme = "MEME"
				}(ti || (ti = {})),
				function(e) {
					e.NotAvailable = "NOT_AVAILABLE", e.Processing = "PROCESSING", e.Available = "AVAILABLE", e.Removed = "REMOVED"
				}(ii || (ii = {})),
				function(e) {
					e.CopyrightTakedown = "COPYRIGHT_TAKEDOWN", e.ContentTakedown = "CONTENT_TAKEDOWN", e.Author = "AUTHOR", e.Moderator = "MODERATOR", e.CommunityOps = "COMMUNITY_OPS", e.AntiEvilOps = "ANTI_EVIL_OPS", e.Reddit = "REDDIT", e.Deleted = "DELETED", e.AutomodFiltered = "AUTOMOD_FILTERED"
				}(ni || (ni = {})),
				function(e) {
					e.HarassmentAtMe = "HARASSMENT_AT_ME", e.HarassmentAtSomeoneElse = "HARASSMENT_AT_SOMEONE_ELSE", e.ViolenceAtMe = "VIOLENCE_AT_ME", e.ViolenceAtSomeoneElse = "VIOLENCE_AT_SOMEONE_ELSE", e.HateContent = "HATE_CONTENT", e.MinorSexualization = "MINOR_SEXUALIZATION", e.PiiAboutMe = "PII_ABOUT_ME", e.PiiAboutSomeoneElse = "PII_ABOUT_SOMEONE_ELSE", e.InvoluntaryPornSelf = "INVOLUNTARY_PORN_SELF", e.InvoluntaryPornOther = "INVOLUNTARY_PORN_OTHER", e.ProhibitedSales = "PROHIBITED_SALES", e.ReportButtonAbuse = "REPORT_BUTTON_ABUSE", e.ImpersonationSelf = "IMPERSONATION_SELF", e.ImpersonationOther = "IMPERSONATION_OTHER", e.CopyrightSelf = "COPYRIGHT_SELF", e.CopyrightOther = "COPYRIGHT_OTHER", e.TrademarkSelf = "TRADEMARK_SELF", e.TrademarkOther = "TRADEMARK_OTHER", e.Netzdg = "NETZDG", e.SelfHarm = "SELF_HARM", e.SpamLinkFarming = "SPAM_LINK_FARMING", e.SpamUnsolicitedPms = "SPAM_UNSOLICITED_PMS", e.SpamCommentFlooding = "SPAM_COMMENT_FLOODING", e.SpamMalware = "SPAM_MALWARE", e.SpamBots = "SPAM_BOTS", e.SpamOther = "SPAM_OTHER", e.BanEvasion = "BAN_EVASION", e.VoteManipulation = "VOTE_MANIPULATION", e.Misinformation = "MISINFORMATION", e.Custom = "CUSTOM", e.Subreddit = "SUBREDDIT", e.Spam = "SPAM", e.NsfwContent = "NSFW_CONTENT", e.IllegalOrDangerousBehavior = "ILLEGAL_OR_DANGEROUS_BEHAVIOR", e.OffensiveOrHoaxContent = "OFFENSIVE_OR_HOAX_CONTENT", e.UnderAge = "UNDER_AGE", e.ContemplatingSelfHarm = "CONTEMPLATING_SELF_HARM", e.CommittingSelfHarm = "COMMITTING_SELF_HARM", e.CommunityInterference = "COMMUNITY_INTERFERENCE", e.Vulgarity = "VULGARITY"
				}(ri || (ri = {})),
				function(e) {
					e.Created = "CREATED", e.Processing = "PROCESSING", e.Failed = "FAILED", e.Success = "SUCCESS"
				}(si || (si = {})),
				function(e) {
					e.Relevance = "RELEVANCE", e.Top = "TOP", e.Comments = "COMMENTS", e.New = "NEW", e.Hot = "HOT"
				}(oi || (oi = {})),
				function(e) {
					e.Buyer = "Buyer", e.Receiver = "Receiver", e.Subreddit = "Subreddit", e.UserInSubreddit = "UserInSubreddit"
				}(di || (di = {})),
				function(e) {
					e.Username = "USERNAME", e.DisplayText = "DISPLAY_TEXT", e.Url = "URL"
				}(ai || (ai = {})),
				function(e) {
					e.Custom = "CUSTOM", e.Reddit = "REDDIT", e.Instagram = "INSTAGRAM", e.Twitter = "TWITTER", e.Tiktok = "TIKTOK", e.Twitch = "TWITCH", e.Facebook = "FACEBOOK", e.Youtube = "YOUTUBE", e.Tumblr = "TUMBLR", e.Spotify = "SPOTIFY", e.Soundcloud = "SOUNDCLOUD", e.Beacons = "BEACONS", e.Linktree = "LINKTREE", e.Discord = "DISCORD", e.Venmo = "VENMO", e.CashApp = "CASH_APP", e.Patreon = "PATREON", e.Kofi = "KOFI", e.Paypal = "PAYPAL", e.Cameo = "CAMEO", e.Onlyfans = "ONLYFANS", e.Substack = "SUBSTACK", e.Kickstarter = "KICKSTARTER", e.Indiegogo = "INDIEGOGO", e.BuyMeACoffee = "BUY_ME_A_COFFEE", e.Shopify = "SHOPIFY"
				}(li || (li = {})),
				function(e) {
					e.None = "NONE", e.Spoiler = "SPOILER"
				}(ui || (ui = {})),
				function(e) {
					e.StayHome = "STAY_HOME", e.ChatInbox = "CHAT_INBOX"
				}(ci || (ci = {})),
				function(e) {
					e.None = "NONE", e.First = "FIRST", e.Second = "SECOND"
				}(_i || (_i = {})),
				function(e) {
					e.Dash = "DASH", e.Hls = "HLS"
				}(mi || (mi = {})),
				function(e) {
					e.Link = "LINK", e.Self = "SELF", e.Any = "ANY"
				}(pi || (pi = {})),
				function(e) {
					e.SdVideo = "SD_VIDEO", e.HdVideo = "HD_VIDEO", e.CommentsWithGifs = "COMMENTS_WITH_GIFS", e.CommentsWithEmoji = "COMMENTS_WITH_EMOJI", e.PostsImageUpload = "POSTS_IMAGE_UPLOAD", e.AchievementFlairs = "ACHIEVEMENT_FLAIRS", e.CommunityAvatarGear = "COMMUNITY_AVATAR_GEAR"
				}(hi || (hi = {})),
				function(e) {
					e.Unknown = "UNKNOWN", e.Private = "PRIVATE", e.GoldOnly = "GOLD_ONLY", e.Banned = "BANNED", e.Quarantined = "QUARANTINED", e.Gated = "GATED"
				}(fi || (fi = {})),
				function(e) {
					e.Emotes = "EMOTES", e.Badges = "BADGES"
				}(bi || (bi = {})),
				function(e) {
					e.Off = "OFF", e.Frequent = "FREQUENT", e.Low = "LOW"
				}(gi || (gi = {})),
				function(e) {
					e.G = "G", e.Pg = "PG", e.Pg13 = "PG13", e.R = "R", e.Nc17 = "NC17", e.NotShownInTheaters = "NOT_SHOWN_IN_THEATERS"
				}(wi || (wi = {})),
				function(e) {
					e.LinkAndComment = "LINK_AND_COMMENT", e.Link = "LINK", e.Comment = "COMMENT"
				}(vi || (vi = {})),
				function(e) {
					e.Public = "PUBLIC", e.Private = "PRIVATE", e.Restricted = "RESTRICTED", e.Archived = "ARCHIVED", e.EmployeesOnly = "EMPLOYEES_ONLY", e.GoldOnly = "GOLD_ONLY", e.GoldRestricted = "GOLD_RESTRICTED", e.User = "USER"
				}(yi || (yi = {})),
				function(e) {
					e.PageNotFound = "PAGE_NOT_FOUND", e.PageNotCreated = "PAGE_NOT_CREATED", e.WikiDisabled = "WIKI_DISABLED", e.MayNotView = "MAY_NOT_VIEW", e.RestrictedPage = "RESTRICTED_PAGE", e.Unknown = "UNKNOWN", e.Valid = "VALID"
				}(Ei || (Ei = {})),
				function(e) {
					e.None = "NONE", e.Subscribed = "SUBSCRIBED"
				}(Si || (Si = {})),
				function(e) {
					e.All = "ALL", e.Super = "SUPER", e.Nonsuper = "NONSUPER"
				}(Ti || (Ti = {})),
				function(e) {
					e.Event = "EVENT", e.Collection = "COLLECTION", e.Classification = "CLASSIFICATION", e.PostClassification = "POST_CLASSIFICATION", e.SubredditClassification = "SUBREDDIT_CLASSIFICATION", e.CommentClassification = "COMMENT_CLASSIFICATION"
				}(Oi || (Oi = {})),
				function(e) {
					e.None = "NONE", e.Tagged = "TAGGED"
				}(Ii || (Ii = {})),
				function(e) {
					e.Active = "ACTIVE", e.Inactive = "INACTIVE"
				}(Ri || (Ri = {})),
				function(e) {
					e.Coins = "COINS", e.Tokens = "TOKENS"
				}(Fi || (Fi = {})),
				function(e) {
					e.Disabled = "DISABLED", e.Enabled = "ENABLED"
				}(Ni || (Ni = {})),
				function(e) {
					e.Incomplete = "INCOMPLETE", e.Completed = "COMPLETED", e.Error = "ERROR"
				}(Ci || (Ci = {})),
				function(e) {
					e.AuthorSearchDefault = "AUTHOR_SEARCH_DEFAULT", e.CommentSearchDefault = "COMMENT_SEARCH_DEFAULT", e.CommunitySearchDefault = "COMMUNITY_SEARCH_DEFAULT", e.PostSearchDefault = "POST_SEARCH_DEFAULT", e.PostSearchTrending = "POST_SEARCH_TRENDING", e.PostSearchTrendingExtended = "POST_SEARCH_TRENDING_EXTENDED", e.PostSearchPromotedTrend = "POST_SEARCH_PROMOTED_TREND"
				}(ji || (ji = {})),
				function(e) {
					e.Regular = "REGULAR", e.Manual = "MANUAL", e.Invisible = "INVISIBLE"
				}(Ai || (Ai = {})),
				function(e) {
					e.All = "ALL", e.UnreadMessage = "UNREAD_MESSAGE"
				}(xi || (xi = {})),
				function(e) {
					e.Add = "ADD", e.Remove = "REMOVE"
				}(Di || (Di = {})),
				function(e) {
					e.NoPriorRequest = "NO_PRIOR_REQUEST", e.PriorRequestExpired = "PRIOR_REQUEST_EXPIRED", e.ExistingPendingRequest = "EXISTING_PENDING_REQUEST", e.RecentlyCompletedRequest = "RECENTLY_COMPLETED_REQUEST", e.EmployeeWhitelist = "EMPLOYEE_WHITELIST"
				}(Pi || (Pi = {})),
				function(e) {
					e.None = "NONE", e.Operator = "OPERATOR"
				}(Li || (Li = {})),
				function(e) {
					e.Mp4 = "MP4", e.Gif = "GIF"
				}(ki || (ki = {})),
				function(e) {
					e.Home = "HOME", e.Popular = "POPULAR", e.Community = "COMMUNITY", e.DirectPlay = "DIRECT_PLAY", e.DirectPlayEntry = "DIRECT_PLAY_ENTRY", e.Discovery = "DISCOVERY", e.Search = "SEARCH", e.Notification = "NOTIFICATION", e.UserProfile = "USER_PROFILE", e.DeepLink = "DEEP_LINK", e.Chat = "CHAT", e.CommunityCarousel = "COMMUNITY_CAROUSEL", e.PopularCarousel = "POPULAR_CAROUSEL"
				}(Bi || (Bi = {})),
				function(e) {
					e.Show = "SHOW", e.Hide = "HIDE"
				}(Mi || (Mi = {})),
				function(e) {
					e.None = "NONE", e.Up = "UP", e.Down = "DOWN"
				}(Ui || (Ui = {})),
				function(e) {
					e.Favorite = "FAVORITE", e.Subscribed = "SUBSCRIBED", e.RecentlyVisited = "RECENTLY_VISITED", e.SubredditKarma = "SUBREDDIT_KARMA", e.TimeOnSub = "TIME_ON_SUB"
				}(Gi || (Gi = {})),
				function(e) {
					e.NoAds = "NO_ADS", e.HouseOnly = "HOUSE_ONLY", e.PromoAdult = "PROMO_ADULT", e.PromoAdultNsfw = "PROMO_ADULT_NSFW", e.PromoSpecified = "PROMO_SPECIFIED", e.PromoAll = "PROMO_ALL", e.AllAds = "ALL_ADS", e.SomeAds = "SOME_ADS"
				}(qi || (qi = {})),
				function(e) {
					e.Disabled = "DISABLED", e.Modonly = "MODONLY", e.Anyone = "ANYONE"
				}(Vi || (Vi = {})),
				function(e) {
					e.InheritSubredditPerms = "INHERIT_SUBREDDIT_PERMS", e.Contributors = "CONTRIBUTORS", e.Mods = "MODS"
				}(Hi || (Hi = {}))
		},
		"./src/reduxMiddleware/apiContext.ts": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/lodash/omit.js"),
				r = i.n(n),
				s = i("./node_modules/set-cookie-parser/lib/set-cookie.js"),
				o = i.n(s),
				d = i("./src/lib/constants/index.ts"),
				a = i("./src/lib/constants/cookie.ts"),
				l = i("./src/lib/constants/headers.ts");
			const u = e => e.version < 1 ? e.loid : `${e.loid}.${e.version}.${e.loidCreated}.${e.blob}`,
				c = (e, t) => {
					if (e.includes(".")) {
						const [t, i, n, r] = e.split(".");
						return {
							blob: r,
							loid: t,
							loidCreated: n,
							version: parseInt(i, 10)
						}
					}
					return {
						blob: "",
						loid: e,
						loidCreated: t || (new Date).toISOString(),
						version: 0
					}
				};
			var _ = i("./src/lib/permanentCookieOptions.ts"),
				m = i("./src/lib/sample/index.ts"),
				p = i("./src/lib/sentry/index.ts"),
				h = i("./src/config.ts"),
				f = i("./src/lib/makeRequest/index.ts");

			function b(e) {
				Object(f.b)({
					method: d.jb.POST,
					endpoint: "/setreddaidcounter",
					data: {
						appName: e.statsAppName
					},
					type: "json"
				})
			}
			const g = () => {},
				w = () => {},
				v = (e, t, i, n, r) => {
					e.set(t, i, n)
				};

			function y(e, t, i, n) {
				return (r, s) => {
					const d = {
							domain: h.a.cookieDomain
						},
						f = t.getState(),
						g = u(f.user.loid),
						w = f.user.sessionTracker,
						y = f.user.reddaid,
						E = l.a in r.headers || l.c in r.headers || l.b in r.headers;
					let S = e.get(a.c);
					const T = _.a;
					f.htmlResponseStreaming;
					const O = {
						...T(),
						secure: !0,
						sameSite: "none"
					};
					if (E) {
						if (s.allowSetEmptyLoid && l.a in r.headers) {
							const s = c(r.headers[l.a], S);
							v(e, a.b, r.headers[l.a], O, n.statsAppName), t.dispatch(i.loidReceived(s))
						}
						if (l.c in r.headers) {
							const s = r.headers[l.c],
								o = d;
							v(e, a.g, s, o, n.statsAppName), t.dispatch(i.sessionTrackerReceived(s))
						}
						if (l.b in r.headers) {
							const s = r.headers[l.b];
							v(e, a.f, s, d, n.statsAppName), t.dispatch(i.reddaidReceived(s)), b(n)
						}
					} else if (l.d in r.headers) {
						const u = o()(r.headers[l.d]).map(e => ({
							[e.name]: e.value
						})).reduce((e, t) => ({
							...e,
							...t
						}), {});
						if (a.c in u && (S = u[a.c]), a.b in u)
							if (s.allowSetEmptyLoid && !g) {
								const r = u[a.b],
									s = c(r, S);
								v(e, a.b, r, O, n.statsAppName), t.dispatch(i.loidReceived(s))
							} else g || Object(m.a)(h.a.logSample.failToSetLOID) && p.c.captureMessage("LOID failing to be set on user without LOID");
						if (a.g in u) {
							const r = u[a.g];
							if (r !== w) {
								const s = d;
								v(e, a.g, r, s, n.statsAppName), t.dispatch(i.sessionTrackerReceived(r))
							}
						}
						if (a.f in u) {
							const r = u[a.f];
							r !== y && (v(e, a.f, r, d, n.statsAppName), t.dispatch(i.reddaidReceived(r)), b(n))
						}
					}
				}
			}
			t.a = ({
				actionDispatchers: e,
				authHeaders: t = {},
				cookies: i,
				defaultApiUrl: n = h.a.apiUrl,
				onBeforeRequestFactory: s,
				customApiContextGenerator: o,
				receivedActions: d,
				statsAppName: a
			}) => {
				let c = {
					apiUrl: n,
					headers: {},
					onBeforeRequest: g,
					onResponse: w,
					statsAppName: a
				};
				return {
					apiContext: o ? o(c, i) : () => c,
					middleware: o => {
						c.onResponse === w && (c = {
							...c,
							onResponse: y(i, o, e, c)
						}), s && (c = {
							...c,
							onBeforeRequest: s(o)
						});
						const a = o.getState(),
							_ = (({
								receivedActions: e,
								defaultApiUrl: t,
								authHeaders: i = {}
							}) => {
								const n = Object.keys(i);
								return (s, o) => {
									switch (o.type) {
										case e.loidReceived:
											return o.payload.loid ? {
												...s,
												headers: {
													...s.headers,
													[l.a]: u(o.payload)
												}
											} : s;
										case e.sessionTrackerReceived:
											return {
												...s, headers: {
													...s.headers,
													[l.c]: o.payload
												}
											};
										case e.reddaidReceived:
											return {
												...s, headers: {
													...s.headers,
													[l.b]: o.payload
												}
											};
										case e.userAuthenticated:
										case e.userReauthenticated:
											return {
												...s, apiUrl: h.a.oauthUrl, headers: {
													...i,
													...s.headers,
													Authorization: `Bearer ${o.payload.accessToken}`
												}
											};
										case e.userLoggedOut:
											return {
												...s, apiUrl: t, headers: r()(s.headers, [...n, "Authorization"])
											};
										case e.headersReceived:
											return {
												...s, headers: {
													...s.headers,
													...o.payload.headers
												}
											};
										default:
											return s
									}
								}
							})({
								authHeaders: t,
								defaultApiUrl: n,
								receivedActions: d
							});
						return a.user.account && (c = _(c, {
							type: d.userAuthenticated,
							payload: a.user.session
						})), a.user.loid.loid && (c = _(c, {
							type: d.loidReceived,
							payload: a.user.loid
						})), a.user.sessionTracker && (c = _(c, {
							type: d.sessionTrackerReceived,
							payload: a.user.sessionTracker
						})), a.user.reddaid && (c = _(c, {
							type: d.reddaidReceived,
							payload: a.user.reddaid
						})), e => t => (c = _(c, t), e(t))
					}
				}
			}
		},
		"./src/reduxMiddleware/gqlContext.ts": function(e, t, i) {
			"use strict";
			var n = i("./src/config.ts");
			const r = {
				unsafeLoggedOut: !1,
				accessToken: ""
			};
			t.a = e => {
				let t = () => r;
				return {
					gqlContext: () => {
						const {
							headers: i,
							onBeforeRequest: r,
							onResponse: s,
							statsAppName: o
						} = e();
						return {
							apiUrl: n.a.gqlUrl,
							onBeforeRequest: r,
							onResponse: s,
							statsAppName: o,
							headers: () => (e => {
								const {
									unsafeLoggedOut: i,
									accessToken: n
								} = t();
								return i ? {
									...e,
									Authorization: `Bearer ${n}`
								} : {
									...e
								}
							})(i)
						}
					},
					middleware: e => (t = () => (e => {
						if (!e.user.session) return r;
						const {
							unsafeLoggedOut: t,
							accessToken: i
						} = e.user.session;
						return {
							unsafeLoggedOut: !!t,
							accessToken: i
						}
					})(e.getState()), e => t => e(t))
				}
			}
		},
		"./src/server/helpers/canonicalUrl.tsx": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return b
			}));
			var n = i("./src/config.ts"),
				r = i("./src/lib/constants/index.ts"),
				s = i("./src/lib/isAdHocMultireddit/index.ts"),
				o = i("./src/lib/isFakeSubreddit/index.ts"),
				d = i("./src/reddit/constants/topic.ts"),
				a = i("./src/reddit/helpers/canonicalUrls.ts"),
				l = i("./src/reddit/models/Post/index.ts"),
				u = i("./src/reddit/selectors/postCollection.ts"),
				c = i("./src/reddit/selectors/posts.ts"),
				_ = i("./src/reddit/selectors/profile.ts"),
				m = i("./src/reddit/selectors/subreddit.ts"),
				p = i("./node_modules/node-libs-browser/node_modules/url/url.js"),
				h = i.n(p);
			const f = e => e.endsWith("/") ? e : `${e}/`,
				b = e => {
					var t, i;
					const p = e.platform.currentPage;
					if (!p) return null;
					const b = null === (i = null === (t = e.platform.currentPage) || void 0 === t ? void 0 : t.routeMatch) || void 0 === i ? void 0 : i.route.meta.name;
					switch (b) {
						case r.Nb.INDEX:
						case r.Nb.LISTING:
							return p.routeMatch && p.routeMatch.route.chunk === r.s.FRONTPAGE ? f(n.a.redditUrl) : null;
						case r.Nb.SUBREDDIT:
							const {
								subredditName: t
							} = p.urlParams, i = t && Object(m.d)(e, {
								subredditName: t
							});
							if (Object(o.a)(t) && Object(s.a)(t)) {
								const i = Object(a.a)(e, t);
								return i ? n.a.redditUrl + i : null
							}
							return i ? `${n.a.redditUrl}${i}` : null;
						case r.Nb.COMMENTS:
						case r.Nb.DUPLICATES:
							const {
								partialPostId: g
							} = p.urlParams, w = g && Object(l.t)(g), v = w && Object(c.F)(e, {
								postId: w
							});
							return v ? `${n.a.redditUrl}${h.a.parse(v).path}` : null;
						case r.Nb.PROFILE_OVERVIEW:
						case r.Nb.PROFILE_POSTS:
						case r.Nb.PROFILE_COMMENTS:
							const {
								profileName: y
							} = p.urlParams, E = Object(_.j)(e, {
								profileName: y
							});
							let S = "";
							return b === r.Nb.PROFILE_POSTS ? S = "posts/" : b === r.Nb.PROFILE_COMMENTS && (S = "comments/"), E && E.url ? `${n.a.redditUrl}${h.a.parse(E.url).path}${S}` : null;
						case r.Nb.COLLECTION_COMMENTS:
							const {
								collectionId: T
							} = p.urlParams, O = T && Object(u.q)(e, {
								collectionId: T
							}), I = O && O.permalink;
							return I ? `${n.a.redditUrl}${h.a.parse(f(I)).path}` : null;
						case r.Nb.SUBREDDIT_LEADERBOARD:
							return p.routeMatch && p.routeMatch.route.chunk === r.s.SUBREDDIT_LEADERBOARD ? `${n.a.redditUrl}/subreddits/leaderboard/` : null;
						case r.Nb.TOPIC:
							const {
								topicSlug: R
							} = p.urlParams;
							return R ? `${n.a.redditUrl}${Object(d.a)(R)}` : null;
						case r.Nb.AVATAR:
						case r.Nb.COINS:
						case r.Nb.POWERUPS:
						case r.Nb.PREMIUM:
						case r.Nb.TALK:
						case r.Nb.WRAPPED_REDDIT:
							return `${n.a.redditUrl}/${b}`;
						default:
							return null
					}
				}
		},
		"./src/telemetry/eventSchemas/account_label_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AccountLabel = function(e) {
					this.id = null, this.type = null, this.name = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.name && null !== e.name && (this.name = e.name))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("AccountLabel"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 3), e.writeString(this.name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/acl_check_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, e.exports = {}, e.exports.AclCheck = function(e) {
					this.subject_type = null, this.subject_id = null, this.action = null, this.object = null, this.result = null, this.source_client_type = null, e && (void 0 !== e.subject_type && null !== e.subject_type && (this.subject_type = e.subject_type), void 0 !== e.subject_id && null !== e.subject_id && (this.subject_id = e.subject_id), void 0 !== e.action && null !== e.action && (this.action = e.action), void 0 !== e.object && null !== e.object && (this.object = e.object), void 0 !== e.result && null !== e.result && (this.result = e.result), void 0 !== e.source_client_type && null !== e.source_client_type && (this.source_client_type = e.source_client_type))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("AclCheck"), null !== this.subject_type && void 0 !== this.subject_type && (e.writeFieldBegin("subject_type", r.Type.STRING, 1), e.writeString(this.subject_type), e.writeFieldEnd()), null !== this.subject_id && void 0 !== this.subject_id && (e.writeFieldBegin("subject_id", r.Type.STRING, 2), e.writeString(this.subject_id), e.writeFieldEnd()), null !== this.action && void 0 !== this.action && (e.writeFieldBegin("action", r.Type.STRING, 3), e.writeString(this.action), e.writeFieldEnd()), null !== this.object && void 0 !== this.object && (e.writeFieldBegin("object", r.Type.STRING, 4), e.writeString(this.object), e.writeFieldEnd()), null !== this.result && void 0 !== this.result && (e.writeFieldBegin("result", r.Type.BOOL, 5), e.writeBool(this.result), e.writeFieldEnd()), null !== this.source_client_type && void 0 !== this.source_client_type && (e.writeFieldBegin("source_client_type", r.Type.STRING, 6), e.writeString(this.source_client_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/action_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ActionInfo = function(e) {
					this.page_type = null, this.pane_name = null, this.position = null, this.success = null, this.count = null, this.retried = null, this.reason = null, this.setting_value = null, this.type = null, this.relative_position = null, this.referral_id = null, e && (void 0 !== e.page_type && null !== e.page_type && (this.page_type = e.page_type), void 0 !== e.pane_name && null !== e.pane_name && (this.pane_name = e.pane_name), void 0 !== e.position && null !== e.position && (this.position = e.position), void 0 !== e.success && null !== e.success && (this.success = e.success), void 0 !== e.count && null !== e.count && (this.count = e.count), void 0 !== e.retried && null !== e.retried && (this.retried = e.retried), void 0 !== e.reason && null !== e.reason && (this.reason = e.reason), void 0 !== e.setting_value && null !== e.setting_value && (this.setting_value = e.setting_value), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.relative_position && null !== e.relative_position && (this.relative_position = e.relative_position), void 0 !== e.referral_id && null !== e.referral_id && (this.referral_id = e.referral_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ActionInfo"), null !== this.page_type && void 0 !== this.page_type && (e.writeFieldBegin("page_type", r.Type.STRING, 1), e.writeString(this.page_type), e.writeFieldEnd()), null !== this.pane_name && void 0 !== this.pane_name && (e.writeFieldBegin("pane_name", r.Type.STRING, 2), e.writeString(this.pane_name), e.writeFieldEnd()), null !== this.position && void 0 !== this.position && (e.writeFieldBegin("position", r.Type.I64, 3), e.writeI64(this.position), e.writeFieldEnd()), null !== this.success && void 0 !== this.success && (e.writeFieldBegin("success", r.Type.BOOL, 4), e.writeBool(this.success), e.writeFieldEnd()), null !== this.count && void 0 !== this.count && (e.writeFieldBegin("count", r.Type.I64, 5), e.writeI64(this.count), e.writeFieldEnd()), null !== this.retried && void 0 !== this.retried && (e.writeFieldBegin("retried", r.Type.BOOL, 6), e.writeBool(this.retried), e.writeFieldEnd()), null !== this.reason && void 0 !== this.reason && (e.writeFieldBegin("reason", r.Type.STRING, 7), e.writeString(this.reason), e.writeFieldEnd()), null !== this.setting_value && void 0 !== this.setting_value && (e.writeFieldBegin("setting_value", r.Type.STRING, 8), e.writeString(this.setting_value), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 9), e.writeString(this.type), e.writeFieldEnd()), null !== this.relative_position && void 0 !== this.relative_position && (e.writeFieldBegin("relative_position", r.Type.I64, 10), e.writeI64(this.relative_position), e.writeFieldEnd()), null !== this.referral_id && void 0 !== this.referral_id && (e.writeFieldBegin("referral_id", r.Type.STRING, 11), e.writeString(this.referral_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Expand = function(e) {
				this.provider = null, e && void 0 !== e.provider && null !== e.provider && (this.provider = e.provider)
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Expand"), null !== this.provider && void 0 !== this.provider && (e.writeFieldBegin("provider", r.Type.STRING, 1), e.writeString(this.provider), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.Widget = function(e) {
				this.target_subreddit_name = null, this.target_subreddit_id = null, this.type = null, e && (void 0 !== e.target_subreddit_name && null !== e.target_subreddit_name && (this.target_subreddit_name = e.target_subreddit_name), void 0 !== e.target_subreddit_id && null !== e.target_subreddit_id && (this.target_subreddit_id = e.target_subreddit_id), void 0 !== e.type && null !== e.type && (this.type = e.type))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("Widget"), null !== this.target_subreddit_name && void 0 !== this.target_subreddit_name && (e.writeFieldBegin("target_subreddit_name", r.Type.STRING, 1), e.writeString(this.target_subreddit_name), e.writeFieldEnd()), null !== this.target_subreddit_id && void 0 !== this.target_subreddit_id && (e.writeFieldBegin("target_subreddit_id", r.Type.STRING, 2), e.writeString(this.target_subreddit_id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 3), e.writeString(this.type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.Share = function(e) {
				this.target = null, this.id = null, this.text = null, e && (void 0 !== e.target && null !== e.target && (this.target = e.target), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.text && null !== e.text && (this.text = e.text))
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("Share"), null !== this.target && void 0 !== this.target && (e.writeFieldBegin("target", r.Type.STRING, 1), e.writeString(this.target), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 2), e.writeString(this.id), e.writeFieldEnd()), null !== this.text && void 0 !== this.text && (e.writeFieldBegin("text", r.Type.STRING, 3), e.writeString(this.text), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/ad_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/adtypedefs_types.js"), i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Ad = function(e) {
					this.id = null, this.name = null, this.click_url = null, this.third_party_trackers = null, this.configured_status = null, this.effective_status = null, this.admin_approval = null, this.click_trackers = null, this.classifications = null, this.rejection_reason = null, this.preview_expiry_timestamp = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.click_url && null !== e.click_url && (this.click_url = e.click_url), void 0 !== e.third_party_trackers && null !== e.third_party_trackers && (this.third_party_trackers = r.copyList(e.third_party_trackers, [null])), void 0 !== e.configured_status && null !== e.configured_status && (this.configured_status = e.configured_status), void 0 !== e.effective_status && null !== e.effective_status && (this.effective_status = e.effective_status), void 0 !== e.admin_approval && null !== e.admin_approval && (this.admin_approval = e.admin_approval), void 0 !== e.click_trackers && null !== e.click_trackers && (this.click_trackers = r.copyList(e.click_trackers, [null])), void 0 !== e.classifications && null !== e.classifications && (this.classifications = r.copyList(e.classifications, [null])), void 0 !== e.rejection_reason && null !== e.rejection_reason && (this.rejection_reason = e.rejection_reason), void 0 !== e.preview_expiry_timestamp && null !== e.preview_expiry_timestamp && (this.preview_expiry_timestamp = e.preview_expiry_timestamp))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Ad"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.click_url && void 0 !== this.click_url && (e.writeFieldBegin("click_url", r.Type.STRING, 3), e.writeString(this.click_url), e.writeFieldEnd()), null !== this.third_party_trackers && void 0 !== this.third_party_trackers) {
					for (var t in e.writeFieldBegin("third_party_trackers", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.third_party_trackers.length), this.third_party_trackers) this.third_party_trackers.hasOwnProperty(t) && (t = this.third_party_trackers[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.configured_status && void 0 !== this.configured_status && (e.writeFieldBegin("configured_status", r.Type.STRING, 5), e.writeString(this.configured_status), e.writeFieldEnd()), null !== this.effective_status && void 0 !== this.effective_status && (e.writeFieldBegin("effective_status", r.Type.STRING, 6), e.writeString(this.effective_status), e.writeFieldEnd()), null !== this.admin_approval && void 0 !== this.admin_approval && (e.writeFieldBegin("admin_approval", r.Type.STRING, 7), e.writeString(this.admin_approval), e.writeFieldEnd()), null !== this.click_trackers && void 0 !== this.click_trackers) {
					for (var i in e.writeFieldBegin("click_trackers", r.Type.LIST, 8), e.writeListBegin(r.Type.STRING, this.click_trackers.length), this.click_trackers) this.click_trackers.hasOwnProperty(i) && (i = this.click_trackers[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.classifications && void 0 !== this.classifications) {
					for (var n in e.writeFieldBegin("classifications", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.classifications.length), this.classifications) this.classifications.hasOwnProperty(n) && (n = this.classifications[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.rejection_reason && void 0 !== this.rejection_reason && (e.writeFieldBegin("rejection_reason", r.Type.STRING, 10), e.writeString(this.rejection_reason), e.writeFieldEnd()), null !== this.preview_expiry_timestamp && void 0 !== this.preview_expiry_timestamp && (e.writeFieldBegin("preview_expiry_timestamp", r.Type.I64, 11), e.writeI64(this.preview_expiry_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Programmatic = function(e) {
				this.ad_unit = null, this.count = null, this.partner = null, this.type = null, e && (void 0 !== e.ad_unit && null !== e.ad_unit && (this.ad_unit = e.ad_unit), void 0 !== e.count && null !== e.count && (this.count = e.count), void 0 !== e.partner && null !== e.partner && (this.partner = e.partner), void 0 !== e.type && null !== e.type && (this.type = e.type))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Programmatic"), null !== this.ad_unit && void 0 !== this.ad_unit && (e.writeFieldBegin("ad_unit", r.Type.STRING, 1), e.writeString(this.ad_unit), e.writeFieldEnd()), null !== this.count && void 0 !== this.count && (e.writeFieldBegin("count", r.Type.I64, 2), e.writeI64(this.count), e.writeFieldEnd()), null !== this.partner && void 0 !== this.partner && (e.writeFieldBegin("partner", r.Type.STRING, 3), e.writeString(this.partner), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 4), e.writeString(this.type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/adblock_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Adblock = function(e) {
					this.enabled = null, this.acceptable_ads = null, e && (void 0 !== e.enabled && null !== e.enabled && (this.enabled = e.enabled), void 0 !== e.acceptable_ads && null !== e.acceptable_ads && (this.acceptable_ads = e.acceptable_ads))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Adblock"), null !== this.enabled && void 0 !== this.enabled && (e.writeFieldBegin("enabled", r.Type.BOOL, 1), e.writeBool(this.enabled), e.writeFieldEnd()), null !== this.acceptable_ads && void 0 !== this.acceptable_ads && (e.writeFieldBegin("acceptable_ads", r.Type.BOOL, 2), e.writeBool(this.acceptable_ads), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/adcampaign_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/adtypedefs_types.js"), i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AdCampaign = function(e) {
					this.id = null, this.name = null, this.objective = null, this.configured_status = null, this.effective_status = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.objective && null !== e.objective && (this.objective = e.objective), void 0 !== e.configured_status && null !== e.configured_status && (this.configured_status = e.configured_status), void 0 !== e.effective_status && null !== e.effective_status && (this.effective_status = e.effective_status))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("AdCampaign"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.objective && void 0 !== this.objective && (e.writeFieldBegin("objective", r.Type.STRING, 3), e.writeString(this.objective), e.writeFieldEnd()), null !== this.configured_status && void 0 !== this.configured_status && (e.writeFieldBegin("configured_status", r.Type.STRING, 4), e.writeString(this.configured_status), e.writeFieldEnd()), null !== this.effective_status && void 0 !== this.effective_status && (e.writeFieldBegin("effective_status", r.Type.STRING, 5), e.writeString(this.effective_status), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/adevent_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AdRequest = function(e) {
					this.number_min_distance = null, this.first_chunk = null, this.post_links = null, this.placement = null, this.platform = null, this.slots = null, this.post_links_above = null, this.post_links_below = null, this.top_comment_id = null, e && (void 0 !== e.number_min_distance && null !== e.number_min_distance && (this.number_min_distance = e.number_min_distance), void 0 !== e.first_chunk && null !== e.first_chunk && (this.first_chunk = e.first_chunk), void 0 !== e.post_links && null !== e.post_links && (this.post_links = r.copyList(e.post_links, [null])), void 0 !== e.placement && null !== e.placement && (this.placement = e.placement), void 0 !== e.platform && null !== e.platform && (this.platform = e.platform), void 0 !== e.slots && null !== e.slots && (this.slots = r.copyList(e.slots, [null])), void 0 !== e.post_links_above && null !== e.post_links_above && (this.post_links_above = r.copyList(e.post_links_above, [null])), void 0 !== e.post_links_below && null !== e.post_links_below && (this.post_links_below = r.copyList(e.post_links_below, [null])), void 0 !== e.top_comment_id && null !== e.top_comment_id && (this.top_comment_id = e.top_comment_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("AdRequest"), null !== this.number_min_distance && void 0 !== this.number_min_distance && (e.writeFieldBegin("number_min_distance", r.Type.I64, 1), e.writeI64(this.number_min_distance), e.writeFieldEnd()), null !== this.first_chunk && void 0 !== this.first_chunk && (e.writeFieldBegin("first_chunk", r.Type.BOOL, 2), e.writeBool(this.first_chunk), e.writeFieldEnd()), null !== this.post_links && void 0 !== this.post_links) {
					for (var t in e.writeFieldBegin("post_links", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.post_links.length), this.post_links) this.post_links.hasOwnProperty(t) && (t = this.post_links[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.placement && void 0 !== this.placement && (e.writeFieldBegin("placement", r.Type.STRING, 4), e.writeString(this.placement), e.writeFieldEnd()), null !== this.platform && void 0 !== this.platform && (e.writeFieldBegin("platform", r.Type.STRING, 5), e.writeString(this.platform), e.writeFieldEnd()), null !== this.slots && void 0 !== this.slots) {
					for (var i in e.writeFieldBegin("slots", r.Type.LIST, 6), e.writeListBegin(r.Type.STRING, this.slots.length), this.slots) this.slots.hasOwnProperty(i) && (i = this.slots[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.post_links_above && void 0 !== this.post_links_above) {
					for (var n in e.writeFieldBegin("post_links_above", r.Type.LIST, 7), e.writeListBegin(r.Type.STRING, this.post_links_above.length), this.post_links_above) this.post_links_above.hasOwnProperty(n) && (n = this.post_links_above[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.post_links_below && void 0 !== this.post_links_below) {
					for (var s in e.writeFieldBegin("post_links_below", r.Type.LIST, 8), e.writeListBegin(r.Type.STRING, this.post_links_below.length), this.post_links_below) this.post_links_below.hasOwnProperty(s) && (s = this.post_links_below[s], e.writeString(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.top_comment_id && void 0 !== this.top_comment_id && (e.writeFieldBegin("top_comment_id", r.Type.STRING, 9), e.writeString(this.top_comment_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.AdDecision = function(e) {
				this.hide_gold = null, this.hide_mod = null, this.hide_news = null, this.hide_whitelist = null, this.hide_sort = null, this.hide_experiment = null, this.hide_other = null, this.hide_source_post = null, this.hide_bad_keywords = null, this.hide_full_bleed = null, this.hide_nsfw = null, e && (void 0 !== e.hide_gold && null !== e.hide_gold && (this.hide_gold = e.hide_gold), void 0 !== e.hide_mod && null !== e.hide_mod && (this.hide_mod = e.hide_mod), void 0 !== e.hide_news && null !== e.hide_news && (this.hide_news = e.hide_news), void 0 !== e.hide_whitelist && null !== e.hide_whitelist && (this.hide_whitelist = e.hide_whitelist), void 0 !== e.hide_sort && null !== e.hide_sort && (this.hide_sort = e.hide_sort), void 0 !== e.hide_experiment && null !== e.hide_experiment && (this.hide_experiment = e.hide_experiment), void 0 !== e.hide_other && null !== e.hide_other && (this.hide_other = e.hide_other), void 0 !== e.hide_source_post && null !== e.hide_source_post && (this.hide_source_post = e.hide_source_post), void 0 !== e.hide_bad_keywords && null !== e.hide_bad_keywords && (this.hide_bad_keywords = e.hide_bad_keywords), void 0 !== e.hide_full_bleed && null !== e.hide_full_bleed && (this.hide_full_bleed = e.hide_full_bleed), void 0 !== e.hide_nsfw && null !== e.hide_nsfw && (this.hide_nsfw = e.hide_nsfw))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("AdDecision"), null !== this.hide_gold && void 0 !== this.hide_gold && (e.writeFieldBegin("hide_gold", r.Type.BOOL, 1), e.writeBool(this.hide_gold), e.writeFieldEnd()), null !== this.hide_mod && void 0 !== this.hide_mod && (e.writeFieldBegin("hide_mod", r.Type.BOOL, 2), e.writeBool(this.hide_mod), e.writeFieldEnd()), null !== this.hide_news && void 0 !== this.hide_news && (e.writeFieldBegin("hide_news", r.Type.BOOL, 3), e.writeBool(this.hide_news), e.writeFieldEnd()), null !== this.hide_whitelist && void 0 !== this.hide_whitelist && (e.writeFieldBegin("hide_whitelist", r.Type.BOOL, 4), e.writeBool(this.hide_whitelist), e.writeFieldEnd()), null !== this.hide_sort && void 0 !== this.hide_sort && (e.writeFieldBegin("hide_sort", r.Type.BOOL, 5), e.writeBool(this.hide_sort), e.writeFieldEnd()), null !== this.hide_experiment && void 0 !== this.hide_experiment && (e.writeFieldBegin("hide_experiment", r.Type.BOOL, 6), e.writeBool(this.hide_experiment), e.writeFieldEnd()), null !== this.hide_other && void 0 !== this.hide_other && (e.writeFieldBegin("hide_other", r.Type.BOOL, 7), e.writeBool(this.hide_other), e.writeFieldEnd()), null !== this.hide_source_post && void 0 !== this.hide_source_post && (e.writeFieldBegin("hide_source_post", r.Type.BOOL, 8), e.writeBool(this.hide_source_post), e.writeFieldEnd()), null !== this.hide_bad_keywords && void 0 !== this.hide_bad_keywords && (e.writeFieldBegin("hide_bad_keywords", r.Type.BOOL, 9), e.writeBool(this.hide_bad_keywords), e.writeFieldEnd()), null !== this.hide_full_bleed && void 0 !== this.hide_full_bleed && (e.writeFieldBegin("hide_full_bleed", r.Type.BOOL, 10), e.writeBool(this.hide_full_bleed), e.writeFieldEnd()), null !== this.hide_nsfw && void 0 !== this.hide_nsfw && (e.writeFieldBegin("hide_nsfw", r.Type.BOOL, 11), e.writeBool(this.hide_nsfw), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.AdPush = function(e) {
				this.push_whitelist = null, this.push_nsfw = null, this.push_keyword = null, this.push_other = null, this.direction = null, this.first_ad = null, e && (void 0 !== e.push_whitelist && null !== e.push_whitelist && (this.push_whitelist = e.push_whitelist), void 0 !== e.push_nsfw && null !== e.push_nsfw && (this.push_nsfw = e.push_nsfw), void 0 !== e.push_keyword && null !== e.push_keyword && (this.push_keyword = e.push_keyword), void 0 !== e.push_other && null !== e.push_other && (this.push_other = e.push_other), void 0 !== e.direction && null !== e.direction && (this.direction = e.direction), void 0 !== e.first_ad && null !== e.first_ad && (this.first_ad = e.first_ad))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("AdPush"), null !== this.push_whitelist && void 0 !== this.push_whitelist && (e.writeFieldBegin("push_whitelist", r.Type.BOOL, 1), e.writeBool(this.push_whitelist), e.writeFieldEnd()), null !== this.push_nsfw && void 0 !== this.push_nsfw && (e.writeFieldBegin("push_nsfw", r.Type.BOOL, 2), e.writeBool(this.push_nsfw), e.writeFieldEnd()), null !== this.push_keyword && void 0 !== this.push_keyword && (e.writeFieldBegin("push_keyword", r.Type.STRING, 3), e.writeString(this.push_keyword), e.writeFieldEnd()), null !== this.push_other && void 0 !== this.push_other && (e.writeFieldBegin("push_other", r.Type.BOOL, 4), e.writeBool(this.push_other), e.writeFieldEnd()), null !== this.direction && void 0 !== this.direction && (e.writeFieldBegin("direction", r.Type.STRING, 5), e.writeString(this.direction), e.writeFieldEnd()), null !== this.first_ad && void 0 !== this.first_ad && (e.writeFieldBegin("first_ad", r.Type.BOOL, 6), e.writeBool(this.first_ad), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.AdBrandSafety = function(e) {
				this.tier = null, this.tier_reason_rall = null, this.tier_reason_sort = null, this.tier_reason_whitelist = null, e && (void 0 !== e.tier && null !== e.tier && (this.tier = e.tier), void 0 !== e.tier_reason_rall && null !== e.tier_reason_rall && (this.tier_reason_rall = e.tier_reason_rall), void 0 !== e.tier_reason_sort && null !== e.tier_reason_sort && (this.tier_reason_sort = e.tier_reason_sort), void 0 !== e.tier_reason_whitelist && null !== e.tier_reason_whitelist && (this.tier_reason_whitelist = e.tier_reason_whitelist))
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("AdBrandSafety"), null !== this.tier && void 0 !== this.tier && (e.writeFieldBegin("tier", r.Type.STRING, 1), e.writeString(this.tier), e.writeFieldEnd()), null !== this.tier_reason_rall && void 0 !== this.tier_reason_rall && (e.writeFieldBegin("tier_reason_rall", r.Type.BOOL, 2), e.writeBool(this.tier_reason_rall), e.writeFieldEnd()), null !== this.tier_reason_sort && void 0 !== this.tier_reason_sort && (e.writeFieldBegin("tier_reason_sort", r.Type.BOOL, 3), e.writeBool(this.tier_reason_sort), e.writeFieldEnd()), null !== this.tier_reason_whitelist && void 0 !== this.tier_reason_whitelist && (e.writeFieldBegin("tier_reason_whitelist", r.Type.BOOL, 4), e.writeBool(this.tier_reason_whitelist), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var l = e.exports.AdClick = function(e) {
				this.landing_page_duration = null, e && void 0 !== e.landing_page_duration && null !== e.landing_page_duration && (this.landing_page_duration = e.landing_page_duration)
			};
			l.prototype = {}, l.prototype.write = function(e) {
				e.writeStructBegin("AdClick"), null !== this.landing_page_duration && void 0 !== this.landing_page_duration && (e.writeFieldBegin("landing_page_duration", r.Type.I32, 1), e.writeI32(this.landing_page_duration), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var u = e.exports.AdMetadata = function(e) {
				this.impression_id = null, e && void 0 !== e.impression_id && null !== e.impression_id && (this.impression_id = e.impression_id)
			};
			u.prototype = {}, u.prototype.write = function(e) {
				e.writeStructBegin("AdMetadata"), null !== this.impression_id && void 0 !== this.impression_id && (e.writeFieldBegin("impression_id", r.Type.STRING, 1), e.writeString(this.impression_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var c = e.exports.AdPixel = function(e) {
				this.event_timestamp = null, this.deferred = null, this.tracking_type = null, e && (void 0 !== e.event_timestamp && null !== e.event_timestamp && (this.event_timestamp = e.event_timestamp), void 0 !== e.deferred && null !== e.deferred && (this.deferred = e.deferred), void 0 !== e.tracking_type && null !== e.tracking_type && (this.tracking_type = e.tracking_type))
			};
			c.prototype = {}, c.prototype.write = function(e) {
				e.writeStructBegin("AdPixel"), null !== this.event_timestamp && void 0 !== this.event_timestamp && (e.writeFieldBegin("event_timestamp", r.Type.I64, 1), e.writeI64(this.event_timestamp), e.writeFieldEnd()), null !== this.deferred && void 0 !== this.deferred && (e.writeFieldBegin("deferred", r.Type.BOOL, 2), e.writeBool(this.deferred), e.writeFieldEnd()), null !== this.tracking_type && void 0 !== this.tracking_type && (e.writeFieldBegin("tracking_type", r.Type.I32, 3), e.writeI32(this.tracking_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/adgroup_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/adtypedefs_types.js"), i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AdGroup = function(e) {
					this.id = null, this.start_timestamp = null, this.end_timestamp = null, this.priority = null, this.bid_type = null, this.bid_value = null, this.goal_type = null, this.goal_value = null, this.schedule_json = null, this.cap_type = null, this.lifetime_cap_value = null, this.daily_cap_value = null, this.frequeny_caps_json = null, this.use_default_frequency_cap = null, this.configured_status = null, this.effective_status = null, this.name = null, this.recommended_bid = null, this.reach = null, this.frequency = null, this.min_recommended_bid = null, this.max_recommended_bid = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.start_timestamp && null !== e.start_timestamp && (this.start_timestamp = e.start_timestamp), void 0 !== e.end_timestamp && null !== e.end_timestamp && (this.end_timestamp = e.end_timestamp), void 0 !== e.priority && null !== e.priority && (this.priority = e.priority), void 0 !== e.bid_type && null !== e.bid_type && (this.bid_type = e.bid_type), void 0 !== e.bid_value && null !== e.bid_value && (this.bid_value = e.bid_value), void 0 !== e.goal_type && null !== e.goal_type && (this.goal_type = e.goal_type), void 0 !== e.goal_value && null !== e.goal_value && (this.goal_value = e.goal_value), void 0 !== e.schedule_json && null !== e.schedule_json && (this.schedule_json = r.copyList(e.schedule_json, [null])), void 0 !== e.cap_type && null !== e.cap_type && (this.cap_type = e.cap_type), void 0 !== e.lifetime_cap_value && null !== e.lifetime_cap_value && (this.lifetime_cap_value = e.lifetime_cap_value), void 0 !== e.daily_cap_value && null !== e.daily_cap_value && (this.daily_cap_value = e.daily_cap_value), void 0 !== e.frequeny_caps_json && null !== e.frequeny_caps_json && (this.frequeny_caps_json = r.copyList(e.frequeny_caps_json, [null])), void 0 !== e.use_default_frequency_cap && null !== e.use_default_frequency_cap && (this.use_default_frequency_cap = e.use_default_frequency_cap), void 0 !== e.configured_status && null !== e.configured_status && (this.configured_status = e.configured_status), void 0 !== e.effective_status && null !== e.effective_status && (this.effective_status = e.effective_status), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.recommended_bid && null !== e.recommended_bid && (this.recommended_bid = e.recommended_bid), void 0 !== e.reach && null !== e.reach && (this.reach = e.reach), void 0 !== e.frequency && null !== e.frequency && (this.frequency = e.frequency), void 0 !== e.min_recommended_bid && null !== e.min_recommended_bid && (this.min_recommended_bid = e.min_recommended_bid), void 0 !== e.max_recommended_bid && null !== e.max_recommended_bid && (this.max_recommended_bid = e.max_recommended_bid))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("AdGroup"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.start_timestamp && void 0 !== this.start_timestamp && (e.writeFieldBegin("start_timestamp", r.Type.I64, 2), e.writeI64(this.start_timestamp), e.writeFieldEnd()), null !== this.end_timestamp && void 0 !== this.end_timestamp && (e.writeFieldBegin("end_timestamp", r.Type.I64, 3), e.writeI64(this.end_timestamp), e.writeFieldEnd()), null !== this.priority && void 0 !== this.priority && (e.writeFieldBegin("priority", r.Type.STRING, 4), e.writeString(this.priority), e.writeFieldEnd()), null !== this.bid_type && void 0 !== this.bid_type && (e.writeFieldBegin("bid_type", r.Type.STRING, 5), e.writeString(this.bid_type), e.writeFieldEnd()), null !== this.bid_value && void 0 !== this.bid_value && (e.writeFieldBegin("bid_value", r.Type.I64, 6), e.writeI64(this.bid_value), e.writeFieldEnd()), null !== this.goal_type && void 0 !== this.goal_type && (e.writeFieldBegin("goal_type", r.Type.STRING, 7), e.writeString(this.goal_type), e.writeFieldEnd()), null !== this.goal_value && void 0 !== this.goal_value && (e.writeFieldBegin("goal_value", r.Type.I64, 8), e.writeI64(this.goal_value), e.writeFieldEnd()), null !== this.schedule_json && void 0 !== this.schedule_json) {
					for (var t in e.writeFieldBegin("schedule_json", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.schedule_json.length), this.schedule_json) this.schedule_json.hasOwnProperty(t) && (t = this.schedule_json[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.cap_type && void 0 !== this.cap_type && (e.writeFieldBegin("cap_type", r.Type.STRING, 10), e.writeString(this.cap_type), e.writeFieldEnd()), null !== this.lifetime_cap_value && void 0 !== this.lifetime_cap_value && (e.writeFieldBegin("lifetime_cap_value", r.Type.I64, 11), e.writeI64(this.lifetime_cap_value), e.writeFieldEnd()), null !== this.daily_cap_value && void 0 !== this.daily_cap_value && (e.writeFieldBegin("daily_cap_value", r.Type.I64, 12), e.writeI64(this.daily_cap_value), e.writeFieldEnd()), null !== this.frequeny_caps_json && void 0 !== this.frequeny_caps_json) {
					for (var i in e.writeFieldBegin("frequeny_caps_json", r.Type.LIST, 13), e.writeListBegin(r.Type.STRING, this.frequeny_caps_json.length), this.frequeny_caps_json) this.frequeny_caps_json.hasOwnProperty(i) && (i = this.frequeny_caps_json[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.use_default_frequency_cap && void 0 !== this.use_default_frequency_cap && (e.writeFieldBegin("use_default_frequency_cap", r.Type.BOOL, 14), e.writeBool(this.use_default_frequency_cap), e.writeFieldEnd()), null !== this.configured_status && void 0 !== this.configured_status && (e.writeFieldBegin("configured_status", r.Type.STRING, 15), e.writeString(this.configured_status), e.writeFieldEnd()), null !== this.effective_status && void 0 !== this.effective_status && (e.writeFieldBegin("effective_status", r.Type.STRING, 16), e.writeString(this.effective_status), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 17), e.writeString(this.name), e.writeFieldEnd()), null !== this.recommended_bid && void 0 !== this.recommended_bid && (e.writeFieldBegin("recommended_bid", r.Type.I64, 18), e.writeI64(this.recommended_bid), e.writeFieldEnd()), null !== this.reach && void 0 !== this.reach && (e.writeFieldBegin("reach", r.Type.I64, 19), e.writeI64(this.reach), e.writeFieldEnd()), null !== this.frequency && void 0 !== this.frequency && (e.writeFieldBegin("frequency", r.Type.I64, 20), e.writeI64(this.frequency), e.writeFieldEnd()), null !== this.min_recommended_bid && void 0 !== this.min_recommended_bid && (e.writeFieldBegin("min_recommended_bid", r.Type.I64, 21), e.writeI64(this.min_recommended_bid), e.writeFieldEnd()), null !== this.max_recommended_bid && void 0 !== this.max_recommended_bid && (e.writeFieldBegin("max_recommended_bid", r.Type.I64, 22), e.writeI64(this.max_recommended_bid), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/admin_action_types.js": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/es6.regexp.match.js");
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AdminAction = function(e) {
					this.password_dump_id = null, this.number_password_dump_credentials = null, this.takedown_id = null, this.removal_type = null, this.removal_is_restorable = null, this.notes = null, this.process_notes = null, this.timeout_duration = null, this.template_type = null, this.target_team_id = null, this.removal_job_id = null, this.restoration_job_id = null, e && (void 0 !== e.password_dump_id && null !== e.password_dump_id && (this.password_dump_id = e.password_dump_id), void 0 !== e.number_password_dump_credentials && null !== e.number_password_dump_credentials && (this.number_password_dump_credentials = e.number_password_dump_credentials), void 0 !== e.takedown_id && null !== e.takedown_id && (this.takedown_id = e.takedown_id), void 0 !== e.removal_type && null !== e.removal_type && (this.removal_type = e.removal_type), void 0 !== e.removal_is_restorable && null !== e.removal_is_restorable && (this.removal_is_restorable = e.removal_is_restorable), void 0 !== e.notes && null !== e.notes && (this.notes = e.notes), void 0 !== e.process_notes && null !== e.process_notes && (this.process_notes = e.process_notes), void 0 !== e.timeout_duration && null !== e.timeout_duration && (this.timeout_duration = e.timeout_duration), void 0 !== e.template_type && null !== e.template_type && (this.template_type = e.template_type), void 0 !== e.target_team_id && null !== e.target_team_id && (this.target_team_id = e.target_team_id), void 0 !== e.removal_job_id && null !== e.removal_job_id && (this.removal_job_id = e.removal_job_id), void 0 !== e.restoration_job_id && null !== e.restoration_job_id && (this.restoration_job_id = e.restoration_job_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("AdminAction"), null !== this.password_dump_id && void 0 !== this.password_dump_id && (e.writeFieldBegin("password_dump_id", r.Type.STRING, 1), e.writeString(this.password_dump_id), e.writeFieldEnd()), null !== this.number_password_dump_credentials && void 0 !== this.number_password_dump_credentials && (e.writeFieldBegin("number_password_dump_credentials", r.Type.I32, 2), e.writeI32(this.number_password_dump_credentials), e.writeFieldEnd()), null !== this.takedown_id && void 0 !== this.takedown_id && (e.writeFieldBegin("takedown_id", r.Type.STRING, 3), e.writeString(this.takedown_id), e.writeFieldEnd()), null !== this.removal_type && void 0 !== this.removal_type && (e.writeFieldBegin("removal_type", r.Type.STRING, 4), e.writeString(this.removal_type), e.writeFieldEnd()), null !== this.removal_is_restorable && void 0 !== this.removal_is_restorable && (e.writeFieldBegin("removal_is_restorable", r.Type.BOOL, 5), e.writeBool(this.removal_is_restorable), e.writeFieldEnd()), null !== this.notes && void 0 !== this.notes && (e.writeFieldBegin("notes", r.Type.STRING, 6), e.writeString(this.notes), e.writeFieldEnd()), null !== this.process_notes && void 0 !== this.process_notes && (e.writeFieldBegin("process_notes", r.Type.STRING, 7), e.writeString(this.process_notes), e.writeFieldEnd()), null !== this.timeout_duration && void 0 !== this.timeout_duration && (e.writeFieldBegin("timeout_duration", r.Type.I32, 8), e.writeI32(this.timeout_duration), e.writeFieldEnd()), null !== this.template_type && void 0 !== this.template_type && (e.writeFieldBegin("template_type", r.Type.STRING, 9), e.writeString(this.template_type), e.writeFieldEnd()), null !== this.target_team_id && void 0 !== this.target_team_id && (e.writeFieldBegin("target_team_id", r.Type.I32, 10), e.writeI32(this.target_team_id), e.writeFieldEnd()), null !== this.removal_job_id && void 0 !== this.removal_job_id && (e.writeFieldBegin("removal_job_id", r.Type.STRING, 11), e.writeString(this.removal_job_id), e.writeFieldEnd()), null !== this.restoration_job_id && void 0 !== this.restoration_job_id && (e.writeFieldBegin("restoration_job_id", r.Type.STRING, 12), e.writeString(this.restoration_job_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.NCMECReport = function(e) {
				this.id = null, this.classification_type = null, this.post_id = null, this.file_viewed_by_admin = null, this.user_id = null, this.email_verified = null, this.email_verified_timestamp = null, this.account_created_timestamp = null, this.account_registration_proxy = null, this.account_added_note = null, this.permalink = null, this.content_url = null, this.content_is_reddit_hosted = null, this.post_created_timestamp = null, this.post_possible_proxy = null, this.filename = null, this.content_publicly_available = null, this.report_added_note = null, this.post_added_note = null, this.is_live_stream = null, this.is_gallery = null, this.gallery_images_reported = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.classification_type && null !== e.classification_type && (this.classification_type = e.classification_type), void 0 !== e.post_id && null !== e.post_id && (this.post_id = e.post_id), void 0 !== e.file_viewed_by_admin && null !== e.file_viewed_by_admin && (this.file_viewed_by_admin = e.file_viewed_by_admin), void 0 !== e.user_id && null !== e.user_id && (this.user_id = e.user_id), void 0 !== e.email_verified && null !== e.email_verified && (this.email_verified = e.email_verified), void 0 !== e.email_verified_timestamp && null !== e.email_verified_timestamp && (this.email_verified_timestamp = e.email_verified_timestamp), void 0 !== e.account_created_timestamp && null !== e.account_created_timestamp && (this.account_created_timestamp = e.account_created_timestamp), void 0 !== e.account_registration_proxy && null !== e.account_registration_proxy && (this.account_registration_proxy = e.account_registration_proxy), void 0 !== e.account_added_note && null !== e.account_added_note && (this.account_added_note = e.account_added_note), void 0 !== e.permalink && null !== e.permalink && (this.permalink = e.permalink), void 0 !== e.content_url && null !== e.content_url && (this.content_url = e.content_url), void 0 !== e.content_is_reddit_hosted && null !== e.content_is_reddit_hosted && (this.content_is_reddit_hosted = e.content_is_reddit_hosted), void 0 !== e.post_created_timestamp && null !== e.post_created_timestamp && (this.post_created_timestamp = e.post_created_timestamp), void 0 !== e.post_possible_proxy && null !== e.post_possible_proxy && (this.post_possible_proxy = e.post_possible_proxy), void 0 !== e.filename && null !== e.filename && (this.filename = e.filename), void 0 !== e.content_publicly_available && null !== e.content_publicly_available && (this.content_publicly_available = e.content_publicly_available), void 0 !== e.report_added_note && null !== e.report_added_note && (this.report_added_note = e.report_added_note), void 0 !== e.post_added_note && null !== e.post_added_note && (this.post_added_note = e.post_added_note), void 0 !== e.is_live_stream && null !== e.is_live_stream && (this.is_live_stream = e.is_live_stream), void 0 !== e.is_gallery && null !== e.is_gallery && (this.is_gallery = e.is_gallery), void 0 !== e.gallery_images_reported && null !== e.gallery_images_reported && (this.gallery_images_reported = r.copyList(e.gallery_images_reported, [null])))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				if (e.writeStructBegin("NCMECReport"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I32, 1), e.writeI32(this.id), e.writeFieldEnd()), null !== this.classification_type && void 0 !== this.classification_type && (e.writeFieldBegin("classification_type", r.Type.STRING, 2), e.writeString(this.classification_type), e.writeFieldEnd()), null !== this.post_id && void 0 !== this.post_id && (e.writeFieldBegin("post_id", r.Type.STRING, 3), e.writeString(this.post_id), e.writeFieldEnd()), null !== this.file_viewed_by_admin && void 0 !== this.file_viewed_by_admin && (e.writeFieldBegin("file_viewed_by_admin", r.Type.BOOL, 4), e.writeBool(this.file_viewed_by_admin), e.writeFieldEnd()), null !== this.user_id && void 0 !== this.user_id && (e.writeFieldBegin("user_id", r.Type.STRING, 5), e.writeString(this.user_id), e.writeFieldEnd()), null !== this.email_verified && void 0 !== this.email_verified && (e.writeFieldBegin("email_verified", r.Type.BOOL, 6), e.writeBool(this.email_verified), e.writeFieldEnd()), null !== this.email_verified_timestamp && void 0 !== this.email_verified_timestamp && (e.writeFieldBegin("email_verified_timestamp", r.Type.I64, 7), e.writeI64(this.email_verified_timestamp), e.writeFieldEnd()), null !== this.account_created_timestamp && void 0 !== this.account_created_timestamp && (e.writeFieldBegin("account_created_timestamp", r.Type.I64, 8), e.writeI64(this.account_created_timestamp), e.writeFieldEnd()), null !== this.account_registration_proxy && void 0 !== this.account_registration_proxy && (e.writeFieldBegin("account_registration_proxy", r.Type.BOOL, 9), e.writeBool(this.account_registration_proxy), e.writeFieldEnd()), null !== this.account_added_note && void 0 !== this.account_added_note && (e.writeFieldBegin("account_added_note", r.Type.STRING, 10), e.writeString(this.account_added_note), e.writeFieldEnd()), null !== this.permalink && void 0 !== this.permalink && (e.writeFieldBegin("permalink", r.Type.STRING, 11), e.writeString(this.permalink), e.writeFieldEnd()), null !== this.content_url && void 0 !== this.content_url && (e.writeFieldBegin("content_url", r.Type.STRING, 12), e.writeString(this.content_url), e.writeFieldEnd()), null !== this.content_is_reddit_hosted && void 0 !== this.content_is_reddit_hosted && (e.writeFieldBegin("content_is_reddit_hosted", r.Type.BOOL, 13), e.writeBool(this.content_is_reddit_hosted), e.writeFieldEnd()), null !== this.post_created_timestamp && void 0 !== this.post_created_timestamp && (e.writeFieldBegin("post_created_timestamp", r.Type.I64, 14), e.writeI64(this.post_created_timestamp), e.writeFieldEnd()), null !== this.post_possible_proxy && void 0 !== this.post_possible_proxy && (e.writeFieldBegin("post_possible_proxy", r.Type.BOOL, 15), e.writeBool(this.post_possible_proxy), e.writeFieldEnd()), null !== this.filename && void 0 !== this.filename && (e.writeFieldBegin("filename", r.Type.STRING, 16), e.writeString(this.filename), e.writeFieldEnd()), null !== this.content_publicly_available && void 0 !== this.content_publicly_available && (e.writeFieldBegin("content_publicly_available", r.Type.BOOL, 17), e.writeBool(this.content_publicly_available), e.writeFieldEnd()), null !== this.report_added_note && void 0 !== this.report_added_note && (e.writeFieldBegin("report_added_note", r.Type.STRING, 18), e.writeString(this.report_added_note), e.writeFieldEnd()), null !== this.post_added_note && void 0 !== this.post_added_note && (e.writeFieldBegin("post_added_note", r.Type.STRING, 19), e.writeString(this.post_added_note), e.writeFieldEnd()), null !== this.is_live_stream && void 0 !== this.is_live_stream && (e.writeFieldBegin("is_live_stream", r.Type.BOOL, 20), e.writeBool(this.is_live_stream), e.writeFieldEnd()), null !== this.is_gallery && void 0 !== this.is_gallery && (e.writeFieldBegin("is_gallery", r.Type.BOOL, 21), e.writeBool(this.is_gallery), e.writeFieldEnd()), null !== this.gallery_images_reported && void 0 !== this.gallery_images_reported) {
					for (var t in e.writeFieldBegin("gallery_images_reported", r.Type.LIST, 22), e.writeListBegin(r.Type.STRING, this.gallery_images_reported.length), this.gallery_images_reported) this.gallery_images_reported.hasOwnProperty(t) && (t = this.gallery_images_reported[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.CSAIMedia = function(e) {
				this.tracking_id = null, this.match = null, this.violation_types = null, this.violation_source = null, this.error_message = null, this.error_code = null, this.destination_queue_name = null, this.origin_queue_name = null, this.media_url = null, this.retry_media_url = null, e && (void 0 !== e.tracking_id && null !== e.tracking_id && (this.tracking_id = e.tracking_id), void 0 !== e.match && null !== e.match && (this.match = e.match), void 0 !== e.violation_types && null !== e.violation_types && (this.violation_types = r.copyList(e.violation_types, [null])), void 0 !== e.violation_source && null !== e.violation_source && (this.violation_source = e.violation_source), void 0 !== e.error_message && null !== e.error_message && (this.error_message = e.error_message), void 0 !== e.error_code && null !== e.error_code && (this.error_code = e.error_code), void 0 !== e.destination_queue_name && null !== e.destination_queue_name && (this.destination_queue_name = e.destination_queue_name), void 0 !== e.origin_queue_name && null !== e.origin_queue_name && (this.origin_queue_name = e.origin_queue_name), void 0 !== e.media_url && null !== e.media_url && (this.media_url = e.media_url), void 0 !== e.retry_media_url && null !== e.retry_media_url && (this.retry_media_url = e.retry_media_url))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				if (e.writeStructBegin("CSAIMedia"), null !== this.tracking_id && void 0 !== this.tracking_id && (e.writeFieldBegin("tracking_id", r.Type.STRING, 1), e.writeString(this.tracking_id), e.writeFieldEnd()), null !== this.match && void 0 !== this.match && (e.writeFieldBegin("match", r.Type.BOOL, 2), e.writeBool(this.match), e.writeFieldEnd()), null !== this.violation_types && void 0 !== this.violation_types) {
					for (var t in e.writeFieldBegin("violation_types", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.violation_types.length), this.violation_types) this.violation_types.hasOwnProperty(t) && (t = this.violation_types[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.violation_source && void 0 !== this.violation_source && (e.writeFieldBegin("violation_source", r.Type.STRING, 4), e.writeString(this.violation_source), e.writeFieldEnd()), null !== this.error_message && void 0 !== this.error_message && (e.writeFieldBegin("error_message", r.Type.STRING, 5), e.writeString(this.error_message), e.writeFieldEnd()), null !== this.error_code && void 0 !== this.error_code && (e.writeFieldBegin("error_code", r.Type.I32, 6), e.writeI32(this.error_code), e.writeFieldEnd()), null !== this.destination_queue_name && void 0 !== this.destination_queue_name && (e.writeFieldBegin("destination_queue_name", r.Type.STRING, 7), e.writeString(this.destination_queue_name), e.writeFieldEnd()), null !== this.origin_queue_name && void 0 !== this.origin_queue_name && (e.writeFieldBegin("origin_queue_name", r.Type.STRING, 8), e.writeString(this.origin_queue_name), e.writeFieldEnd()), null !== this.media_url && void 0 !== this.media_url && (e.writeFieldBegin("media_url", r.Type.STRING, 9), e.writeString(this.media_url), e.writeFieldEnd()), null !== this.retry_media_url && void 0 !== this.retry_media_url && (e.writeFieldBegin("retry_media_url", r.Type.STRING, 10), e.writeString(this.retry_media_url), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.CSAIContentReport = function(e) {
				this.reported_url = null, this.content_url = null, this.target_id = null, this.target_type = null, this.tracking_id = null, this.removed_by_user_type = null, this.content_type = null, this.removed_by_user_id = null, this.subreddit_id = null, this.original_queue_id = null, this.dest_queue_id = null, this.confirmed_csai = null, this.ncmec_report_number = null, this.reporter_id = null, this.permalink = null, e && (void 0 !== e.reported_url && null !== e.reported_url && (this.reported_url = e.reported_url), void 0 !== e.content_url && null !== e.content_url && (this.content_url = e.content_url), void 0 !== e.target_id && null !== e.target_id && (this.target_id = e.target_id), void 0 !== e.target_type && null !== e.target_type && (this.target_type = e.target_type), void 0 !== e.tracking_id && null !== e.tracking_id && (this.tracking_id = e.tracking_id), void 0 !== e.removed_by_user_type && null !== e.removed_by_user_type && (this.removed_by_user_type = e.removed_by_user_type), void 0 !== e.content_type && null !== e.content_type && (this.content_type = e.content_type), void 0 !== e.removed_by_user_id && null !== e.removed_by_user_id && (this.removed_by_user_id = e.removed_by_user_id), void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.original_queue_id && null !== e.original_queue_id && (this.original_queue_id = e.original_queue_id), void 0 !== e.dest_queue_id && null !== e.dest_queue_id && (this.dest_queue_id = e.dest_queue_id), void 0 !== e.confirmed_csai && null !== e.confirmed_csai && (this.confirmed_csai = e.confirmed_csai), void 0 !== e.ncmec_report_number && null !== e.ncmec_report_number && (this.ncmec_report_number = e.ncmec_report_number), void 0 !== e.reporter_id && null !== e.reporter_id && (this.reporter_id = e.reporter_id), void 0 !== e.permalink && null !== e.permalink && (this.permalink = e.permalink))
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("CSAIContentReport"), null !== this.reported_url && void 0 !== this.reported_url && (e.writeFieldBegin("reported_url", r.Type.STRING, 1), e.writeString(this.reported_url), e.writeFieldEnd()), null !== this.content_url && void 0 !== this.content_url && (e.writeFieldBegin("content_url", r.Type.STRING, 2), e.writeString(this.content_url), e.writeFieldEnd()), null !== this.target_id && void 0 !== this.target_id && (e.writeFieldBegin("target_id", r.Type.STRING, 3), e.writeString(this.target_id), e.writeFieldEnd()), null !== this.target_type && void 0 !== this.target_type && (e.writeFieldBegin("target_type", r.Type.STRING, 4), e.writeString(this.target_type), e.writeFieldEnd()), null !== this.tracking_id && void 0 !== this.tracking_id && (e.writeFieldBegin("tracking_id", r.Type.STRING, 5), e.writeString(this.tracking_id), e.writeFieldEnd()), null !== this.removed_by_user_type && void 0 !== this.removed_by_user_type && (e.writeFieldBegin("removed_by_user_type", r.Type.STRING, 6), e.writeString(this.removed_by_user_type), e.writeFieldEnd()), null !== this.content_type && void 0 !== this.content_type && (e.writeFieldBegin("content_type", r.Type.STRING, 7), e.writeString(this.content_type), e.writeFieldEnd()), null !== this.removed_by_user_id && void 0 !== this.removed_by_user_id && (e.writeFieldBegin("removed_by_user_id", r.Type.STRING, 8), e.writeString(this.removed_by_user_id), e.writeFieldEnd()), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 9), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.original_queue_id && void 0 !== this.original_queue_id && (e.writeFieldBegin("original_queue_id", r.Type.STRING, 10), e.writeString(this.original_queue_id), e.writeFieldEnd()), null !== this.dest_queue_id && void 0 !== this.dest_queue_id && (e.writeFieldBegin("dest_queue_id", r.Type.STRING, 11), e.writeString(this.dest_queue_id), e.writeFieldEnd()), null !== this.confirmed_csai && void 0 !== this.confirmed_csai && (e.writeFieldBegin("confirmed_csai", r.Type.BOOL, 12), e.writeBool(this.confirmed_csai), e.writeFieldEnd()), null !== this.ncmec_report_number && void 0 !== this.ncmec_report_number && (e.writeFieldBegin("ncmec_report_number", r.Type.I64, 13), e.writeI64(this.ncmec_report_number), e.writeFieldEnd()), null !== this.reporter_id && void 0 !== this.reporter_id && (e.writeFieldBegin("reporter_id", r.Type.STRING, 14), e.writeString(this.reporter_id), e.writeFieldEnd()), null !== this.permalink && void 0 !== this.permalink && (e.writeFieldBegin("permalink", r.Type.STRING, 15), e.writeString(this.permalink), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var l = e.exports.RerouteRule = function(e) {
				this.id = null, this.ticket_type = null, this.priority = null, this.target_queue_id = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.ticket_type && null !== e.ticket_type && (this.ticket_type = e.ticket_type), void 0 !== e.priority && null !== e.priority && (this.priority = e.priority), void 0 !== e.target_queue_id && null !== e.target_queue_id && (this.target_queue_id = e.target_queue_id))
			};
			l.prototype = {}, l.prototype.write = function(e) {
				e.writeStructBegin("RerouteRule"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.ticket_type && void 0 !== this.ticket_type && (e.writeFieldBegin("ticket_type", r.Type.STRING, 2), e.writeString(this.ticket_type), e.writeFieldEnd()), null !== this.priority && void 0 !== this.priority && (e.writeFieldBegin("priority", r.Type.I32, 3), e.writeI32(this.priority), e.writeFieldEnd()), null !== this.target_queue_id && void 0 !== this.target_queue_id && (e.writeFieldBegin("target_queue_id", r.Type.STRING, 4), e.writeString(this.target_queue_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var u = e.exports.ReddarQueue = function(e) {
				this.id = null, this.type = null, this.ticket_type = null, this.group_type = null, this.name = null, this.priority = null, this.applied_filters = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.ticket_type && null !== e.ticket_type && (this.ticket_type = e.ticket_type), void 0 !== e.group_type && null !== e.group_type && (this.group_type = e.group_type), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.priority && null !== e.priority && (this.priority = e.priority), void 0 !== e.applied_filters && null !== e.applied_filters && (this.applied_filters = r.copyList(e.applied_filters, [null])))
			};
			u.prototype = {}, u.prototype.write = function(e) {
				if (e.writeStructBegin("ReddarQueue"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.ticket_type && void 0 !== this.ticket_type && (e.writeFieldBegin("ticket_type", r.Type.STRING, 3), e.writeString(this.ticket_type), e.writeFieldEnd()), null !== this.group_type && void 0 !== this.group_type && (e.writeFieldBegin("group_type", r.Type.STRING, 4), e.writeString(this.group_type), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 5), e.writeString(this.name), e.writeFieldEnd()), null !== this.priority && void 0 !== this.priority && (e.writeFieldBegin("priority", r.Type.STRING, 6), e.writeString(this.priority), e.writeFieldEnd()), null !== this.applied_filters && void 0 !== this.applied_filters) {
					for (var t in e.writeFieldBegin("applied_filters", r.Type.LIST, 10), e.writeListBegin(r.Type.STRING, this.applied_filters.length), this.applied_filters) this.applied_filters.hasOwnProperty(t) && (t = this.applied_filters[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			};
			var c = e.exports.AdminTeam = function(e) {
				this.id = null, this.name = null, this.access_type = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.access_type && null !== e.access_type && (this.access_type = e.access_type))
			};
			c.prototype = {}, c.prototype.write = function(e) {
				e.writeStructBegin("AdminTeam"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I32, 7), e.writeI32(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 8), e.writeString(this.name), e.writeFieldEnd()), null !== this.access_type && void 0 !== this.access_type && (e.writeFieldBegin("access_type", r.Type.STRING, 9), e.writeString(this.access_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/admin_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Admin = function(e) {
					if (this.id = null, this.name = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.name && null !== e.name && (this.name = e.name)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Admin"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/adtargeting_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/adtypedefs_types.js"), e.exports = {}, e.exports.AdTargeting = function(e) {
					this.geolocations = null, this.excluded_geolocations = null, this.excluded_keywords = null, this.interests = null, this.excluded_interests = null, this.communities = null, this.excluded_communities = null, this.devices_json = null, this.placements_json = null, this.advanced = null, this.custom_audience_ids = null, this.excluded_custom_audience_ids = null, this.expand_targeting = null, e && (void 0 !== e.geolocations && null !== e.geolocations && (this.geolocations = r.copyList(e.geolocations, [null])), void 0 !== e.excluded_geolocations && null !== e.excluded_geolocations && (this.excluded_geolocations = r.copyList(e.excluded_geolocations, [null])), void 0 !== e.excluded_keywords && null !== e.excluded_keywords && (this.excluded_keywords = r.copyList(e.excluded_keywords, [null])), void 0 !== e.interests && null !== e.interests && (this.interests = r.copyList(e.interests, [null])), void 0 !== e.excluded_interests && null !== e.excluded_interests && (this.excluded_interests = r.copyList(e.excluded_interests, [null])), void 0 !== e.communities && null !== e.communities && (this.communities = r.copyList(e.communities, [null])), void 0 !== e.excluded_communities && null !== e.excluded_communities && (this.excluded_communities = r.copyList(e.excluded_communities, [null])), void 0 !== e.devices_json && null !== e.devices_json && (this.devices_json = r.copyList(e.devices_json, [null])), void 0 !== e.placements_json && null !== e.placements_json && (this.placements_json = r.copyList(e.placements_json, [null])), void 0 !== e.advanced && null !== e.advanced && (this.advanced = e.advanced), void 0 !== e.custom_audience_ids && null !== e.custom_audience_ids && (this.custom_audience_ids = r.copyList(e.custom_audience_ids, [null])), void 0 !== e.excluded_custom_audience_ids && null !== e.excluded_custom_audience_ids && (this.excluded_custom_audience_ids = r.copyList(e.excluded_custom_audience_ids, [null])), void 0 !== e.expand_targeting && null !== e.expand_targeting && (this.expand_targeting = e.expand_targeting))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("AdTargeting"), null !== this.geolocations && void 0 !== this.geolocations) {
					for (var t in e.writeFieldBegin("geolocations", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.geolocations.length), this.geolocations) this.geolocations.hasOwnProperty(t) && (t = this.geolocations[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.excluded_geolocations && void 0 !== this.excluded_geolocations) {
					for (var i in e.writeFieldBegin("excluded_geolocations", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.excluded_geolocations.length), this.excluded_geolocations) this.excluded_geolocations.hasOwnProperty(i) && (i = this.excluded_geolocations[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.excluded_keywords && void 0 !== this.excluded_keywords) {
					for (var n in e.writeFieldBegin("excluded_keywords", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.excluded_keywords.length), this.excluded_keywords) this.excluded_keywords.hasOwnProperty(n) && (n = this.excluded_keywords[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.interests && void 0 !== this.interests) {
					for (var s in e.writeFieldBegin("interests", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.interests.length), this.interests) this.interests.hasOwnProperty(s) && (s = this.interests[s], e.writeString(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.excluded_interests && void 0 !== this.excluded_interests) {
					for (var o in e.writeFieldBegin("excluded_interests", r.Type.LIST, 5), e.writeListBegin(r.Type.STRING, this.excluded_interests.length), this.excluded_interests) this.excluded_interests.hasOwnProperty(o) && (o = this.excluded_interests[o], e.writeString(o));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.communities && void 0 !== this.communities) {
					for (var d in e.writeFieldBegin("communities", r.Type.LIST, 6), e.writeListBegin(r.Type.STRING, this.communities.length), this.communities) this.communities.hasOwnProperty(d) && (d = this.communities[d], e.writeString(d));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.excluded_communities && void 0 !== this.excluded_communities) {
					for (var a in e.writeFieldBegin("excluded_communities", r.Type.LIST, 7), e.writeListBegin(r.Type.STRING, this.excluded_communities.length), this.excluded_communities) this.excluded_communities.hasOwnProperty(a) && (a = this.excluded_communities[a], e.writeString(a));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.devices_json && void 0 !== this.devices_json) {
					for (var l in e.writeFieldBegin("devices_json", r.Type.LIST, 8), e.writeListBegin(r.Type.STRING, this.devices_json.length), this.devices_json) this.devices_json.hasOwnProperty(l) && (l = this.devices_json[l], e.writeString(l));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.placements_json && void 0 !== this.placements_json) {
					for (var u in e.writeFieldBegin("placements_json", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.placements_json.length), this.placements_json) this.placements_json.hasOwnProperty(u) && (u = this.placements_json[u], e.writeString(u));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.advanced && void 0 !== this.advanced && (e.writeFieldBegin("advanced", r.Type.STRING, 10), e.writeString(this.advanced), e.writeFieldEnd()), null !== this.custom_audience_ids && void 0 !== this.custom_audience_ids) {
					for (var c in e.writeFieldBegin("custom_audience_ids", r.Type.LIST, 11), e.writeListBegin(r.Type.STRING, this.custom_audience_ids.length), this.custom_audience_ids) this.custom_audience_ids.hasOwnProperty(c) && (c = this.custom_audience_ids[c], e.writeString(c));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.excluded_custom_audience_ids && void 0 !== this.excluded_custom_audience_ids) {
					for (var _ in e.writeFieldBegin("excluded_custom_audience_ids", r.Type.LIST, 12), e.writeListBegin(r.Type.STRING, this.excluded_custom_audience_ids.length), this.excluded_custom_audience_ids) this.excluded_custom_audience_ids.hasOwnProperty(_) && (_ = this.excluded_custom_audience_ids[_], e.writeString(_));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.expand_targeting && void 0 !== this.expand_targeting && (e.writeFieldBegin("expand_targeting", r.Type.BOOL, 13), e.writeBool(this.expand_targeting), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/adtypedefs_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js");
			n.Thrift, n.Q, e.exports = {}
		},
		"./src/telemetry/eventSchemas/afd_second_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AFDSecond = function(e) {
					this.round_id = null, this.round_start_timestamp = null, this.round_end_timestamp = null, this.image_ids = null, this.image_names = null, this.vote_counts = null, this.image_id = null, this.image_name = null, this.image_ranks = null, this.winning_image_id = null, this.winning_image_name = null, this.image_set_name = null, this.image_set_id = null, e && (void 0 !== e.round_id && null !== e.round_id && (this.round_id = e.round_id), void 0 !== e.round_start_timestamp && null !== e.round_start_timestamp && (this.round_start_timestamp = e.round_start_timestamp), void 0 !== e.round_end_timestamp && null !== e.round_end_timestamp && (this.round_end_timestamp = e.round_end_timestamp), void 0 !== e.image_ids && null !== e.image_ids && (this.image_ids = r.copyList(e.image_ids, [null])), void 0 !== e.image_names && null !== e.image_names && (this.image_names = r.copyList(e.image_names, [null])), void 0 !== e.vote_counts && null !== e.vote_counts && (this.vote_counts = r.copyList(e.vote_counts, [null])), void 0 !== e.image_id && null !== e.image_id && (this.image_id = e.image_id), void 0 !== e.image_name && null !== e.image_name && (this.image_name = e.image_name), void 0 !== e.image_ranks && null !== e.image_ranks && (this.image_ranks = r.copyList(e.image_ranks, [null])), void 0 !== e.winning_image_id && null !== e.winning_image_id && (this.winning_image_id = e.winning_image_id), void 0 !== e.winning_image_name && null !== e.winning_image_name && (this.winning_image_name = e.winning_image_name), void 0 !== e.image_set_name && null !== e.image_set_name && (this.image_set_name = e.image_set_name), void 0 !== e.image_set_id && null !== e.image_set_id && (this.image_set_id = e.image_set_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("AFDSecond"), null !== this.round_id && void 0 !== this.round_id && (e.writeFieldBegin("round_id", r.Type.I32, 1), e.writeI32(this.round_id), e.writeFieldEnd()), null !== this.round_start_timestamp && void 0 !== this.round_start_timestamp && (e.writeFieldBegin("round_start_timestamp", r.Type.I64, 2), e.writeI64(this.round_start_timestamp), e.writeFieldEnd()), null !== this.round_end_timestamp && void 0 !== this.round_end_timestamp && (e.writeFieldBegin("round_end_timestamp", r.Type.I64, 3), e.writeI64(this.round_end_timestamp), e.writeFieldEnd()), null !== this.image_ids && void 0 !== this.image_ids) {
					for (var t in e.writeFieldBegin("image_ids", r.Type.LIST, 4), e.writeListBegin(r.Type.I32, this.image_ids.length), this.image_ids) this.image_ids.hasOwnProperty(t) && (t = this.image_ids[t], e.writeI32(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.image_names && void 0 !== this.image_names) {
					for (var i in e.writeFieldBegin("image_names", r.Type.LIST, 5), e.writeListBegin(r.Type.STRING, this.image_names.length), this.image_names) this.image_names.hasOwnProperty(i) && (i = this.image_names[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.vote_counts && void 0 !== this.vote_counts) {
					for (var n in e.writeFieldBegin("vote_counts", r.Type.LIST, 6), e.writeListBegin(r.Type.I32, this.vote_counts.length), this.vote_counts) this.vote_counts.hasOwnProperty(n) && (n = this.vote_counts[n], e.writeI32(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.image_id && void 0 !== this.image_id && (e.writeFieldBegin("image_id", r.Type.I32, 7), e.writeI32(this.image_id), e.writeFieldEnd()), null !== this.image_name && void 0 !== this.image_name && (e.writeFieldBegin("image_name", r.Type.STRING, 8), e.writeString(this.image_name), e.writeFieldEnd()), null !== this.image_ranks && void 0 !== this.image_ranks) {
					for (var s in e.writeFieldBegin("image_ranks", r.Type.LIST, 9), e.writeListBegin(r.Type.I32, this.image_ranks.length), this.image_ranks) this.image_ranks.hasOwnProperty(s) && (s = this.image_ranks[s], e.writeI32(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.winning_image_id && void 0 !== this.winning_image_id && (e.writeFieldBegin("winning_image_id", r.Type.I32, 10), e.writeI32(this.winning_image_id), e.writeFieldEnd()), null !== this.winning_image_name && void 0 !== this.winning_image_name && (e.writeFieldBegin("winning_image_name", r.Type.STRING, 11), e.writeString(this.winning_image_name), e.writeFieldEnd()), null !== this.image_set_name && void 0 !== this.image_set_name && (e.writeFieldBegin("image_set_name", r.Type.STRING, 12), e.writeString(this.image_set_name), e.writeFieldEnd()), null !== this.image_set_id && void 0 !== this.image_set_id && (e.writeFieldBegin("image_set_id", r.Type.I32, 13), e.writeI32(this.image_set_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/announcement_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, e.exports = {}, e.exports.Announcement = function(e) {
					this.id = null, this.title = null, this.body = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.body && null !== e.body && (this.body = e.body))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Announcement"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), null !== this.body && void 0 !== this.body && (e.writeFieldBegin("body", r.Type.STRING, 3), e.writeString(this.body), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/app_icons_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.AppIcon = function(e) {
					this.id = null, this.name = null, this.is_premium = null, this.prev_icon_id = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.is_premium && null !== e.is_premium && (this.is_premium = e.is_premium), void 0 !== e.prev_icon_id && null !== e.prev_icon_id && (this.prev_icon_id = e.prev_icon_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("AppIcon"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.is_premium && void 0 !== this.is_premium && (e.writeFieldBegin("is_premium", r.Type.BOOL, 3), e.writeBool(this.is_premium), e.writeFieldEnd()), null !== this.prev_icon_id && void 0 !== this.prev_icon_id && (e.writeFieldBegin("prev_icon_id", r.Type.STRING, 4), e.writeString(this.prev_icon_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/atc_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ATC = function(e) {
					this.decision_value = null, this.decision_reason = null, this.decision_reason_detail = null, this.decision_channel = null, this.notification_group = null, this.budget_remaining = null, this.pn_index = null, e && (void 0 !== e.decision_value && null !== e.decision_value && (this.decision_value = e.decision_value), void 0 !== e.decision_reason && null !== e.decision_reason && (this.decision_reason = e.decision_reason), void 0 !== e.decision_reason_detail && null !== e.decision_reason_detail && (this.decision_reason_detail = e.decision_reason_detail), void 0 !== e.decision_channel && null !== e.decision_channel && (this.decision_channel = e.decision_channel), void 0 !== e.notification_group && null !== e.notification_group && (this.notification_group = e.notification_group), void 0 !== e.budget_remaining && null !== e.budget_remaining && (this.budget_remaining = e.budget_remaining), void 0 !== e.pn_index && null !== e.pn_index && (this.pn_index = e.pn_index))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ATC"), null !== this.decision_value && void 0 !== this.decision_value && (e.writeFieldBegin("decision_value", r.Type.STRING, 1), e.writeString(this.decision_value), e.writeFieldEnd()), null !== this.decision_reason && void 0 !== this.decision_reason && (e.writeFieldBegin("decision_reason", r.Type.STRING, 2), e.writeString(this.decision_reason), e.writeFieldEnd()), null !== this.decision_reason_detail && void 0 !== this.decision_reason_detail && (e.writeFieldBegin("decision_reason_detail", r.Type.STRING, 3), e.writeString(this.decision_reason_detail), e.writeFieldEnd()), null !== this.decision_channel && void 0 !== this.decision_channel && (e.writeFieldBegin("decision_channel", r.Type.STRING, 4), e.writeString(this.decision_channel), e.writeFieldEnd()), null !== this.notification_group && void 0 !== this.notification_group && (e.writeFieldBegin("notification_group", r.Type.STRING, 5), e.writeString(this.notification_group), e.writeFieldEnd()), null !== this.budget_remaining && void 0 !== this.budget_remaining && (e.writeFieldBegin("budget_remaining", r.Type.I64, 6), e.writeI64(this.budget_remaining), e.writeFieldEnd()), null !== this.pn_index && void 0 !== this.pn_index && (e.writeFieldBegin("pn_index", r.Type.I64, 7), e.writeI64(this.pn_index), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/audit_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), i("./src/telemetry/eventSchemas/audittypedefs_types.js"), e.exports = {}, e.exports.ReddarAudit = function(e) {
					this.id = null, this.auditor_id = null, this.ticket_ids = null, this.included_queues = null, this.included_agent_ids = null, this.included_range_start_timestamp = null, this.included_range_end_timestamp = null, this.percent_tickets_included = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.auditor_id && null !== e.auditor_id && (this.auditor_id = e.auditor_id), void 0 !== e.ticket_ids && null !== e.ticket_ids && (this.ticket_ids = r.copyList(e.ticket_ids, [null])), void 0 !== e.included_queues && null !== e.included_queues && (this.included_queues = r.copyList(e.included_queues, [null])), void 0 !== e.included_agent_ids && null !== e.included_agent_ids && (this.included_agent_ids = r.copyList(e.included_agent_ids, [null])), void 0 !== e.included_range_start_timestamp && null !== e.included_range_start_timestamp && (this.included_range_start_timestamp = e.included_range_start_timestamp), void 0 !== e.included_range_end_timestamp && null !== e.included_range_end_timestamp && (this.included_range_end_timestamp = e.included_range_end_timestamp), void 0 !== e.percent_tickets_included && null !== e.percent_tickets_included && (this.percent_tickets_included = e.percent_tickets_included))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("ReddarAudit"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.auditor_id && void 0 !== this.auditor_id && (e.writeFieldBegin("auditor_id", r.Type.STRING, 2), e.writeString(this.auditor_id), e.writeFieldEnd()), null !== this.ticket_ids && void 0 !== this.ticket_ids) {
					for (var t in e.writeFieldBegin("ticket_ids", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.ticket_ids.length), this.ticket_ids) this.ticket_ids.hasOwnProperty(t) && (t = this.ticket_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.included_queues && void 0 !== this.included_queues) {
					for (var i in e.writeFieldBegin("included_queues", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.included_queues.length), this.included_queues) this.included_queues.hasOwnProperty(i) && (i = this.included_queues[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.included_agent_ids && void 0 !== this.included_agent_ids) {
					for (var n in e.writeFieldBegin("included_agent_ids", r.Type.LIST, 5), e.writeListBegin(r.Type.STRING, this.included_agent_ids.length), this.included_agent_ids) this.included_agent_ids.hasOwnProperty(n) && (n = this.included_agent_ids[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.included_range_start_timestamp && void 0 !== this.included_range_start_timestamp && (e.writeFieldBegin("included_range_start_timestamp", r.Type.I64, 6), e.writeI64(this.included_range_start_timestamp), e.writeFieldEnd()), null !== this.included_range_end_timestamp && void 0 !== this.included_range_end_timestamp && (e.writeFieldBegin("included_range_end_timestamp", r.Type.I64, 7), e.writeI64(this.included_range_end_timestamp), e.writeFieldEnd()), null !== this.percent_tickets_included && void 0 !== this.percent_tickets_included && (e.writeFieldBegin("percent_tickets_included", r.Type.DOUBLE, 8), e.writeDouble(this.percent_tickets_included), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ReddarAuditTicket = function(e) {
				this.id = null, this.audit_id = null, this.auditor_id = null, this.ticket_id = null, this.agent_id = null, this.qa_user_action = null, this.qa_content_action = null, this.qa_policy = null, this.qa_message = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.audit_id && null !== e.audit_id && (this.audit_id = e.audit_id), void 0 !== e.auditor_id && null !== e.auditor_id && (this.auditor_id = e.auditor_id), void 0 !== e.ticket_id && null !== e.ticket_id && (this.ticket_id = e.ticket_id), void 0 !== e.agent_id && null !== e.agent_id && (this.agent_id = e.agent_id), void 0 !== e.qa_user_action && null !== e.qa_user_action && (this.qa_user_action = e.qa_user_action), void 0 !== e.qa_content_action && null !== e.qa_content_action && (this.qa_content_action = e.qa_content_action), void 0 !== e.qa_policy && null !== e.qa_policy && (this.qa_policy = e.qa_policy), void 0 !== e.qa_message && null !== e.qa_message && (this.qa_message = e.qa_message))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("ReddarAuditTicket"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.audit_id && void 0 !== this.audit_id && (e.writeFieldBegin("audit_id", r.Type.STRING, 2), e.writeString(this.audit_id), e.writeFieldEnd()), null !== this.auditor_id && void 0 !== this.auditor_id && (e.writeFieldBegin("auditor_id", r.Type.STRING, 3), e.writeString(this.auditor_id), e.writeFieldEnd()), null !== this.ticket_id && void 0 !== this.ticket_id && (e.writeFieldBegin("ticket_id", r.Type.STRING, 4), e.writeString(this.ticket_id), e.writeFieldEnd()), null !== this.agent_id && void 0 !== this.agent_id && (e.writeFieldBegin("agent_id", r.Type.STRING, 5), e.writeString(this.agent_id), e.writeFieldEnd()), null !== this.qa_user_action && void 0 !== this.qa_user_action && (e.writeFieldBegin("qa_user_action", r.Type.STRING, 6), e.writeString(this.qa_user_action), e.writeFieldEnd()), null !== this.qa_content_action && void 0 !== this.qa_content_action && (e.writeFieldBegin("qa_content_action", r.Type.STRING, 7), e.writeString(this.qa_content_action), e.writeFieldEnd()), null !== this.qa_policy && void 0 !== this.qa_policy && (e.writeFieldBegin("qa_policy", r.Type.STRING, 8), e.writeString(this.qa_policy), e.writeFieldEnd()), null !== this.qa_message && void 0 !== this.qa_message && (e.writeFieldBegin("qa_message", r.Type.STRING, 9), e.writeString(this.qa_message), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/audittypedefs_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js");
			n.Thrift, n.Q, e.exports = {}
		},
		"./src/telemetry/eventSchemas/banner_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Banner = function(e) {
					if (this.id = null, this.button_text = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.button_text && null !== e.button_text && (this.button_text = e.button_text)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Banner"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.button_text && void 0 !== this.button_text && (e.writeFieldBegin("button_text", r.Type.STRING, 2), e.writeString(this.button_text), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/billinginfo_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/adtypedefs_types.js"), e.exports = {}, e.exports.BillingInfo = function(e) {
					this.balance = null, this.billing_threshold = null, this.credit = null, this.max_billing_threshold = null, this.total_refund_pennies = null, this.available_freebies = null, this.spent_freebies = null, e && (void 0 !== e.balance && null !== e.balance && (this.balance = e.balance), void 0 !== e.billing_threshold && null !== e.billing_threshold && (this.billing_threshold = e.billing_threshold), void 0 !== e.credit && null !== e.credit && (this.credit = e.credit), void 0 !== e.max_billing_threshold && null !== e.max_billing_threshold && (this.max_billing_threshold = e.max_billing_threshold), void 0 !== e.total_refund_pennies && null !== e.total_refund_pennies && (this.total_refund_pennies = e.total_refund_pennies), void 0 !== e.available_freebies && null !== e.available_freebies && (this.available_freebies = e.available_freebies), void 0 !== e.spent_freebies && null !== e.spent_freebies && (this.spent_freebies = e.spent_freebies))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("BillingInfo"), null !== this.balance && void 0 !== this.balance && (e.writeFieldBegin("balance", r.Type.I64, 1), e.writeI64(this.balance), e.writeFieldEnd()), null !== this.billing_threshold && void 0 !== this.billing_threshold && (e.writeFieldBegin("billing_threshold", r.Type.I64, 2), e.writeI64(this.billing_threshold), e.writeFieldEnd()), null !== this.credit && void 0 !== this.credit && (e.writeFieldBegin("credit", r.Type.I64, 3), e.writeI64(this.credit), e.writeFieldEnd()), null !== this.max_billing_threshold && void 0 !== this.max_billing_threshold && (e.writeFieldBegin("max_billing_threshold", r.Type.I64, 4), e.writeI64(this.max_billing_threshold), e.writeFieldEnd()), null !== this.total_refund_pennies && void 0 !== this.total_refund_pennies && (e.writeFieldBegin("total_refund_pennies", r.Type.I64, 5), e.writeI64(this.total_refund_pennies), e.writeFieldEnd()), null !== this.available_freebies && void 0 !== this.available_freebies && (e.writeFieldBegin("available_freebies", r.Type.I64, 6), e.writeI64(this.available_freebies), e.writeFieldEnd()), null !== this.spent_freebies && void 0 !== this.spent_freebies && (e.writeFieldBegin("spent_freebies", r.Type.I64, 7), e.writeI64(this.spent_freebies), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/bot_detection_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.BotDetection = function(e) {
					this.provider = null, this.website_action = null, this.recaptcha_score = null, e && (void 0 !== e.provider && null !== e.provider && (this.provider = e.provider), void 0 !== e.website_action && null !== e.website_action && (this.website_action = e.website_action), void 0 !== e.recaptcha_score && null !== e.recaptcha_score && (this.recaptcha_score = e.recaptcha_score))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("BotDetection"), null !== this.provider && void 0 !== this.provider && (e.writeFieldBegin("provider", r.Type.STRING, 1), e.writeString(this.provider), e.writeFieldEnd()), null !== this.website_action && void 0 !== this.website_action && (e.writeFieldBegin("website_action", r.Type.STRING, 2), e.writeString(this.website_action), e.writeFieldEnd()), null !== this.recaptcha_score && void 0 !== this.recaptcha_score && (e.writeFieldBegin("recaptcha_score", r.Type.DOUBLE, 3), e.writeDouble(this.recaptcha_score), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/brand_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Brand = function(e) {
					if (this.id = null, this.status = null, this.created_timestamp = null, this.click_attribution_window = null, this.view_attribution_window = null, this.attribution_type = null, this.default_payment_profile_id = null, this.payment_profile_ids = null, this.admin_approval = null, this.account_type = null, this.pay_by_invoice = null, this.feature_flags = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.status && null !== e.status && (this.status = e.status), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.click_attribution_window && null !== e.click_attribution_window && (this.click_attribution_window = e.click_attribution_window), void 0 !== e.view_attribution_window && null !== e.view_attribution_window && (this.view_attribution_window = e.view_attribution_window), void 0 !== e.attribution_type && null !== e.attribution_type && (this.attribution_type = e.attribution_type), void 0 !== e.default_payment_profile_id && null !== e.default_payment_profile_id && (this.default_payment_profile_id = e.default_payment_profile_id), void 0 !== e.payment_profile_ids && null !== e.payment_profile_ids && (this.payment_profile_ids = r.copyList(e.payment_profile_ids, [null])), void 0 !== e.admin_approval && null !== e.admin_approval && (this.admin_approval = e.admin_approval), void 0 !== e.account_type && null !== e.account_type && (this.account_type = e.account_type), void 0 !== e.pay_by_invoice && null !== e.pay_by_invoice && (this.pay_by_invoice = e.pay_by_invoice), void 0 !== e.feature_flags && null !== e.feature_flags && (this.feature_flags = r.copyList(e.feature_flags, [null]))
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Brand"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 2), e.writeString(this.status), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 3), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.click_attribution_window && void 0 !== this.click_attribution_window && (e.writeFieldBegin("click_attribution_window", r.Type.STRING, 4), e.writeString(this.click_attribution_window), e.writeFieldEnd()), null !== this.view_attribution_window && void 0 !== this.view_attribution_window && (e.writeFieldBegin("view_attribution_window", r.Type.STRING, 5), e.writeString(this.view_attribution_window), e.writeFieldEnd()), null !== this.attribution_type && void 0 !== this.attribution_type && (e.writeFieldBegin("attribution_type", r.Type.STRING, 6), e.writeString(this.attribution_type), e.writeFieldEnd()), null !== this.default_payment_profile_id && void 0 !== this.default_payment_profile_id && (e.writeFieldBegin("default_payment_profile_id", r.Type.STRING, 7), e.writeString(this.default_payment_profile_id), e.writeFieldEnd()), null !== this.payment_profile_ids && void 0 !== this.payment_profile_ids) {
					for (var t in e.writeFieldBegin("payment_profile_ids", r.Type.LIST, 8), e.writeListBegin(r.Type.STRING, this.payment_profile_ids.length), this.payment_profile_ids) this.payment_profile_ids.hasOwnProperty(t) && (t = this.payment_profile_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.admin_approval && void 0 !== this.admin_approval && (e.writeFieldBegin("admin_approval", r.Type.STRING, 9), e.writeString(this.admin_approval), e.writeFieldEnd()), null !== this.account_type && void 0 !== this.account_type && (e.writeFieldBegin("account_type", r.Type.STRING, 10), e.writeString(this.account_type), e.writeFieldEnd()), null !== this.pay_by_invoice && void 0 !== this.pay_by_invoice && (e.writeFieldBegin("pay_by_invoice", r.Type.BOOL, 11), e.writeBool(this.pay_by_invoice), e.writeFieldEnd()), null !== this.feature_flags && void 0 !== this.feature_flags) {
					for (var i in e.writeFieldBegin("feature_flags", r.Type.LIST, 12), e.writeListBegin(r.Type.STRING, this.feature_flags.length), this.feature_flags) this.feature_flags.hasOwnProperty(i) && (i = this.feature_flags[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/broadcast_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Broadcast = function(e) {
					this.unique_watchers = null, this.max_concurrent_watchers = null, this.duration_ms = null, this.time_remaining_ms = null, this.time_added_ms = null, this.stream_state = null, this.heartbeat_length_ms = null, this.concurrent_user_count = null, this.current_hard_limit = null, this.user_karma = null, this.current_karma_limit = null, this.user_account_age = null, this.current_age_limit = null, e && (void 0 !== e.unique_watchers && null !== e.unique_watchers && (this.unique_watchers = e.unique_watchers), void 0 !== e.max_concurrent_watchers && null !== e.max_concurrent_watchers && (this.max_concurrent_watchers = e.max_concurrent_watchers), void 0 !== e.duration_ms && null !== e.duration_ms && (this.duration_ms = e.duration_ms), void 0 !== e.time_remaining_ms && null !== e.time_remaining_ms && (this.time_remaining_ms = e.time_remaining_ms), void 0 !== e.time_added_ms && null !== e.time_added_ms && (this.time_added_ms = e.time_added_ms), void 0 !== e.stream_state && null !== e.stream_state && (this.stream_state = e.stream_state), void 0 !== e.heartbeat_length_ms && null !== e.heartbeat_length_ms && (this.heartbeat_length_ms = e.heartbeat_length_ms), void 0 !== e.concurrent_user_count && null !== e.concurrent_user_count && (this.concurrent_user_count = e.concurrent_user_count), void 0 !== e.current_hard_limit && null !== e.current_hard_limit && (this.current_hard_limit = e.current_hard_limit), void 0 !== e.user_karma && null !== e.user_karma && (this.user_karma = e.user_karma), void 0 !== e.current_karma_limit && null !== e.current_karma_limit && (this.current_karma_limit = e.current_karma_limit), void 0 !== e.user_account_age && null !== e.user_account_age && (this.user_account_age = e.user_account_age), void 0 !== e.current_age_limit && null !== e.current_age_limit && (this.current_age_limit = e.current_age_limit))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Broadcast"), null !== this.unique_watchers && void 0 !== this.unique_watchers && (e.writeFieldBegin("unique_watchers", r.Type.I64, 1), e.writeI64(this.unique_watchers), e.writeFieldEnd()), null !== this.max_concurrent_watchers && void 0 !== this.max_concurrent_watchers && (e.writeFieldBegin("max_concurrent_watchers", r.Type.I64, 2), e.writeI64(this.max_concurrent_watchers), e.writeFieldEnd()), null !== this.duration_ms && void 0 !== this.duration_ms && (e.writeFieldBegin("duration_ms", r.Type.I64, 3), e.writeI64(this.duration_ms), e.writeFieldEnd()), null !== this.time_remaining_ms && void 0 !== this.time_remaining_ms && (e.writeFieldBegin("time_remaining_ms", r.Type.I64, 4), e.writeI64(this.time_remaining_ms), e.writeFieldEnd()), null !== this.time_added_ms && void 0 !== this.time_added_ms && (e.writeFieldBegin("time_added_ms", r.Type.I64, 5), e.writeI64(this.time_added_ms), e.writeFieldEnd()), null !== this.stream_state && void 0 !== this.stream_state && (e.writeFieldBegin("stream_state", r.Type.STRING, 6), e.writeString(this.stream_state), e.writeFieldEnd()), null !== this.heartbeat_length_ms && void 0 !== this.heartbeat_length_ms && (e.writeFieldBegin("heartbeat_length_ms", r.Type.I64, 7), e.writeI64(this.heartbeat_length_ms), e.writeFieldEnd()), null !== this.concurrent_user_count && void 0 !== this.concurrent_user_count && (e.writeFieldBegin("concurrent_user_count", r.Type.I64, 8), e.writeI64(this.concurrent_user_count), e.writeFieldEnd()), null !== this.current_hard_limit && void 0 !== this.current_hard_limit && (e.writeFieldBegin("current_hard_limit", r.Type.I64, 9), e.writeI64(this.current_hard_limit), e.writeFieldEnd()), null !== this.user_karma && void 0 !== this.user_karma && (e.writeFieldBegin("user_karma", r.Type.I64, 10), e.writeI64(this.user_karma), e.writeFieldEnd()), null !== this.current_karma_limit && void 0 !== this.current_karma_limit && (e.writeFieldBegin("current_karma_limit", r.Type.I64, 11), e.writeI64(this.current_karma_limit), e.writeFieldEnd()), null !== this.user_account_age && void 0 !== this.user_account_age && (e.writeFieldBegin("user_account_age", r.Type.I64, 12), e.writeI64(this.user_account_age), e.writeFieldEnd()), null !== this.current_age_limit && void 0 !== this.current_age_limit && (e.writeFieldBegin("current_age_limit", r.Type.I64, 13), e.writeI64(this.current_age_limit), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/bulk_action_job_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.BulkActionJob = function(e) {
					if (this.id = null, this.bigquery_job_id = null, this.reason = null, this.actions = null, this.target_type = null, this.target_count = null, this.target_limit = null, this.status = null, this.requires_manual_review = null, this.user_id = null, this.targets = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.bigquery_job_id && null !== e.bigquery_job_id && (this.bigquery_job_id = e.bigquery_job_id), void 0 !== e.reason && null !== e.reason && (this.reason = e.reason), void 0 !== e.actions && null !== e.actions && (this.actions = r.copyList(e.actions, [null])), void 0 !== e.target_type && null !== e.target_type && (this.target_type = e.target_type), void 0 !== e.target_count && null !== e.target_count && (this.target_count = e.target_count), void 0 !== e.target_limit && null !== e.target_limit && (this.target_limit = e.target_limit), void 0 !== e.status && null !== e.status && (this.status = e.status), void 0 !== e.requires_manual_review && null !== e.requires_manual_review && (this.requires_manual_review = e.requires_manual_review), void 0 !== e.user_id && null !== e.user_id && (this.user_id = e.user_id), void 0 !== e.targets && null !== e.targets && (this.targets = r.copyList(e.targets, [null]))
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("BulkActionJob"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.bigquery_job_id && void 0 !== this.bigquery_job_id && (e.writeFieldBegin("bigquery_job_id", r.Type.STRING, 2), e.writeString(this.bigquery_job_id), e.writeFieldEnd()), null !== this.reason && void 0 !== this.reason && (e.writeFieldBegin("reason", r.Type.STRING, 3), e.writeString(this.reason), e.writeFieldEnd()), null !== this.actions && void 0 !== this.actions) {
					for (var t in e.writeFieldBegin("actions", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.actions.length), this.actions) this.actions.hasOwnProperty(t) && (t = this.actions[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.target_type && void 0 !== this.target_type && (e.writeFieldBegin("target_type", r.Type.STRING, 5), e.writeString(this.target_type), e.writeFieldEnd()), null !== this.target_count && void 0 !== this.target_count && (e.writeFieldBegin("target_count", r.Type.I32, 6), e.writeI32(this.target_count), e.writeFieldEnd()), null !== this.target_limit && void 0 !== this.target_limit && (e.writeFieldBegin("target_limit", r.Type.I32, 7), e.writeI32(this.target_limit), e.writeFieldEnd()), null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 8), e.writeString(this.status), e.writeFieldEnd()), null !== this.requires_manual_review && void 0 !== this.requires_manual_review && (e.writeFieldBegin("requires_manual_review", r.Type.BOOL, 9), e.writeBool(this.requires_manual_review), e.writeFieldEnd()), null !== this.user_id && void 0 !== this.user_id && (e.writeFieldBegin("user_id", r.Type.STRING, 10), e.writeString(this.user_id), e.writeFieldEnd()), null !== this.targets && void 0 !== this.targets) {
					for (var i in e.writeFieldBegin("targets", r.Type.LIST, 11), e.writeListBegin(r.Type.STRING, this.targets.length), this.targets) this.targets.hasOwnProperty(i) && (i = this.targets[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/bulk_messenger_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.BulkMessenger = function(e) {
					this.sender_id = null, this.subject = null, this.message_type = null, this.message_body = null, this.repliable = null, this.distinguished = null, this.add_to_sent_box = null, this.add_admin_note = null, this.admin_note = null, this.give_coins = null, this.recipient_type = null, this.recipient_count = null, this.job_id = null, this.sender_name = null, this.success_count = null, this.failed_count = null, e && (void 0 !== e.sender_id && null !== e.sender_id && (this.sender_id = e.sender_id), void 0 !== e.subject && null !== e.subject && (this.subject = e.subject), void 0 !== e.message_type && null !== e.message_type && (this.message_type = e.message_type), void 0 !== e.message_body && null !== e.message_body && (this.message_body = e.message_body), void 0 !== e.repliable && null !== e.repliable && (this.repliable = e.repliable), void 0 !== e.distinguished && null !== e.distinguished && (this.distinguished = e.distinguished), void 0 !== e.add_to_sent_box && null !== e.add_to_sent_box && (this.add_to_sent_box = e.add_to_sent_box), void 0 !== e.add_admin_note && null !== e.add_admin_note && (this.add_admin_note = e.add_admin_note), void 0 !== e.admin_note && null !== e.admin_note && (this.admin_note = e.admin_note), void 0 !== e.give_coins && null !== e.give_coins && (this.give_coins = e.give_coins), void 0 !== e.recipient_type && null !== e.recipient_type && (this.recipient_type = e.recipient_type), void 0 !== e.recipient_count && null !== e.recipient_count && (this.recipient_count = e.recipient_count), void 0 !== e.job_id && null !== e.job_id && (this.job_id = e.job_id), void 0 !== e.sender_name && null !== e.sender_name && (this.sender_name = e.sender_name), void 0 !== e.success_count && null !== e.success_count && (this.success_count = e.success_count), void 0 !== e.failed_count && null !== e.failed_count && (this.failed_count = e.failed_count))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("BulkMessenger"), null !== this.sender_id && void 0 !== this.sender_id && (e.writeFieldBegin("sender_id", r.Type.STRING, 1), e.writeString(this.sender_id), e.writeFieldEnd()), null !== this.subject && void 0 !== this.subject && (e.writeFieldBegin("subject", r.Type.STRING, 2), e.writeString(this.subject), e.writeFieldEnd()), null !== this.message_type && void 0 !== this.message_type && (e.writeFieldBegin("message_type", r.Type.STRING, 3), e.writeString(this.message_type), e.writeFieldEnd()), null !== this.message_body && void 0 !== this.message_body && (e.writeFieldBegin("message_body", r.Type.STRING, 4), e.writeString(this.message_body), e.writeFieldEnd()), null !== this.repliable && void 0 !== this.repliable && (e.writeFieldBegin("repliable", r.Type.BOOL, 5), e.writeBool(this.repliable), e.writeFieldEnd()), null !== this.distinguished && void 0 !== this.distinguished && (e.writeFieldBegin("distinguished", r.Type.BOOL, 6), e.writeBool(this.distinguished), e.writeFieldEnd()), null !== this.add_to_sent_box && void 0 !== this.add_to_sent_box && (e.writeFieldBegin("add_to_sent_box", r.Type.BOOL, 7), e.writeBool(this.add_to_sent_box), e.writeFieldEnd()), null !== this.add_admin_note && void 0 !== this.add_admin_note && (e.writeFieldBegin("add_admin_note", r.Type.BOOL, 8), e.writeBool(this.add_admin_note), e.writeFieldEnd()), null !== this.admin_note && void 0 !== this.admin_note && (e.writeFieldBegin("admin_note", r.Type.STRING, 9), e.writeString(this.admin_note), e.writeFieldEnd()), null !== this.give_coins && void 0 !== this.give_coins && (e.writeFieldBegin("give_coins", r.Type.I32, 10), e.writeI32(this.give_coins), e.writeFieldEnd()), null !== this.recipient_type && void 0 !== this.recipient_type && (e.writeFieldBegin("recipient_type", r.Type.STRING, 11), e.writeString(this.recipient_type), e.writeFieldEnd()), null !== this.recipient_count && void 0 !== this.recipient_count && (e.writeFieldBegin("recipient_count", r.Type.I32, 12), e.writeI32(this.recipient_count), e.writeFieldEnd()), null !== this.job_id && void 0 !== this.job_id && (e.writeFieldBegin("job_id", r.Type.STRING, 13), e.writeString(this.job_id), e.writeFieldEnd()), null !== this.sender_name && void 0 !== this.sender_name && (e.writeFieldBegin("sender_name", r.Type.STRING, 14), e.writeString(this.sender_name), e.writeFieldEnd()), null !== this.success_count && void 0 !== this.success_count && (e.writeFieldBegin("success_count", r.Type.I32, 15), e.writeI32(this.success_count), e.writeFieldEnd()), null !== this.failed_count && void 0 !== this.failed_count && (e.writeFieldBegin("failed_count", r.Type.I32, 16), e.writeI32(this.failed_count), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/businessinfo_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, e.exports = {}, e.exports.BusinessInfo = function(e) {
					this.name = null, this.industry = null, this.subvertical = null, this.country = null, e && (void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.industry && null !== e.industry && (this.industry = e.industry), void 0 !== e.subvertical && null !== e.subvertical && (this.subvertical = e.subvertical), void 0 !== e.country && null !== e.country && (this.country = e.country))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("BusinessInfo"), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 1), e.writeString(this.name), e.writeFieldEnd()), null !== this.industry && void 0 !== this.industry && (e.writeFieldBegin("industry", r.Type.STRING, 2), e.writeString(this.industry), e.writeFieldEnd()), null !== this.subvertical && void 0 !== this.subvertical && (e.writeFieldBegin("subvertical", r.Type.STRING, 3), e.writeString(this.subvertical), e.writeFieldEnd()), null !== this.country && void 0 !== this.country && (e.writeFieldBegin("country", r.Type.STRING, 4), e.writeString(this.country), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/camera_feature_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CameraFeature = function(e) {
					this.flash = null, this.speed = null, this.timer = null, this.video_filter = null, this.overlay_text_last = null, this.overlay_text_count = null, this.overlay_draw = null, this.voiceover = null, this.num_segments = null, this.num_segments_recorded = null, this.num_segments_uploaded = null, this.num_photos = null, e && (void 0 !== e.flash && null !== e.flash && (this.flash = e.flash), void 0 !== e.speed && null !== e.speed && (this.speed = e.speed), void 0 !== e.timer && null !== e.timer && (this.timer = e.timer), void 0 !== e.video_filter && null !== e.video_filter && (this.video_filter = r.copyList(e.video_filter, [null])), void 0 !== e.overlay_text_last && null !== e.overlay_text_last && (this.overlay_text_last = e.overlay_text_last), void 0 !== e.overlay_text_count && null !== e.overlay_text_count && (this.overlay_text_count = e.overlay_text_count), void 0 !== e.overlay_draw && null !== e.overlay_draw && (this.overlay_draw = e.overlay_draw), void 0 !== e.voiceover && null !== e.voiceover && (this.voiceover = e.voiceover), void 0 !== e.num_segments && null !== e.num_segments && (this.num_segments = e.num_segments), void 0 !== e.num_segments_recorded && null !== e.num_segments_recorded && (this.num_segments_recorded = e.num_segments_recorded), void 0 !== e.num_segments_uploaded && null !== e.num_segments_uploaded && (this.num_segments_uploaded = e.num_segments_uploaded), void 0 !== e.num_photos && null !== e.num_photos && (this.num_photos = e.num_photos))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("CameraFeature"), null !== this.flash && void 0 !== this.flash && (e.writeFieldBegin("flash", r.Type.BOOL, 1), e.writeBool(this.flash), e.writeFieldEnd()), null !== this.speed && void 0 !== this.speed && (e.writeFieldBegin("speed", r.Type.BOOL, 2), e.writeBool(this.speed), e.writeFieldEnd()), null !== this.timer && void 0 !== this.timer && (e.writeFieldBegin("timer", r.Type.BOOL, 3), e.writeBool(this.timer), e.writeFieldEnd()), null !== this.video_filter && void 0 !== this.video_filter) {
					for (var t in e.writeFieldBegin("video_filter", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.video_filter.length), this.video_filter) this.video_filter.hasOwnProperty(t) && (t = this.video_filter[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.overlay_text_last && void 0 !== this.overlay_text_last && (e.writeFieldBegin("overlay_text_last", r.Type.STRING, 5), e.writeString(this.overlay_text_last), e.writeFieldEnd()), null !== this.overlay_text_count && void 0 !== this.overlay_text_count && (e.writeFieldBegin("overlay_text_count", r.Type.I32, 6), e.writeI32(this.overlay_text_count), e.writeFieldEnd()), null !== this.overlay_draw && void 0 !== this.overlay_draw && (e.writeFieldBegin("overlay_draw", r.Type.BOOL, 7), e.writeBool(this.overlay_draw), e.writeFieldEnd()), null !== this.voiceover && void 0 !== this.voiceover && (e.writeFieldBegin("voiceover", r.Type.BOOL, 8), e.writeBool(this.voiceover), e.writeFieldEnd()), null !== this.num_segments && void 0 !== this.num_segments && (e.writeFieldBegin("num_segments", r.Type.I32, 9), e.writeI32(this.num_segments), e.writeFieldEnd()), null !== this.num_segments_recorded && void 0 !== this.num_segments_recorded && (e.writeFieldBegin("num_segments_recorded", r.Type.I32, 10), e.writeI32(this.num_segments_recorded), e.writeFieldEnd()), null !== this.num_segments_uploaded && void 0 !== this.num_segments_uploaded && (e.writeFieldBegin("num_segments_uploaded", r.Type.I32, 11), e.writeI32(this.num_segments_uploaded), e.writeFieldEnd()), null !== this.num_photos && void 0 !== this.num_photos && (e.writeFieldBegin("num_photos", r.Type.I32, 12), e.writeI32(this.num_photos), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/carousel_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Carousel = function(e) {
					if (this.id = null, this.type = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						if (this.id = e.id, void 0 === e.type || null === e.type) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field type is unset!");
						this.type = e.type
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Carousel"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/category_header_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CategoryHeader = function(e) {
					if (this.id = null, this.name = null, this.subreddit_ids = null, this.subreddit_names = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						if (this.id = e.id, void 0 === e.name || null === e.name) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field name is unset!");
						this.name = e.name, void 0 !== e.subreddit_ids && null !== e.subreddit_ids && (this.subreddit_ids = r.copyList(e.subreddit_ids, [null])), void 0 !== e.subreddit_names && null !== e.subreddit_names && (this.subreddit_names = r.copyList(e.subreddit_names, [null]))
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("CategoryHeader"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.subreddit_ids && void 0 !== this.subreddit_ids) {
					for (var t in e.writeFieldBegin("subreddit_ids", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.subreddit_ids.length), this.subreddit_ids) this.subreddit_ids.hasOwnProperty(t) && (t = this.subreddit_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.subreddit_names && void 0 !== this.subreddit_names) {
					for (var i in e.writeFieldBegin("subreddit_names", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.subreddit_names.length), this.subreddit_names) this.subreddit_names.hasOwnProperty(i) && (i = this.subreddit_names[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/chat_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Chat = function(e) {
					this.blocked_user_id = null, this.id = null, this.type = null, this.existing_channel = null, this.image_upload_method = null, this.user_added_method = null, this.invitation_id = null, this.invitation_type = null, this.members = null, this.invitation_preview_type = null, this.message_type = null, this.number_channels = null, this.number_pending_invites = null, this.number_members = null, this.number_unreads = null, this.reported_user_id = null, this.sender_user_id = null, this.invitation_timestamp = null, this.message_length = null, this.recipient_user_id = null, this.number_blocked_users = null, this.request_name = null, this.is_member = null, this.shown_history = null, this.message_id = null, this.report_reason = null, this.message_body = null, this.channel_name = null, e && (void 0 !== e.blocked_user_id && null !== e.blocked_user_id && (this.blocked_user_id = e.blocked_user_id), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.existing_channel && null !== e.existing_channel && (this.existing_channel = e.existing_channel), void 0 !== e.image_upload_method && null !== e.image_upload_method && (this.image_upload_method = e.image_upload_method), void 0 !== e.user_added_method && null !== e.user_added_method && (this.user_added_method = e.user_added_method), void 0 !== e.invitation_id && null !== e.invitation_id && (this.invitation_id = e.invitation_id), void 0 !== e.invitation_type && null !== e.invitation_type && (this.invitation_type = e.invitation_type), void 0 !== e.members && null !== e.members && (this.members = r.copyList(e.members, [null])), void 0 !== e.invitation_preview_type && null !== e.invitation_preview_type && (this.invitation_preview_type = e.invitation_preview_type), void 0 !== e.message_type && null !== e.message_type && (this.message_type = e.message_type), void 0 !== e.number_channels && null !== e.number_channels && (this.number_channels = e.number_channels), void 0 !== e.number_pending_invites && null !== e.number_pending_invites && (this.number_pending_invites = e.number_pending_invites), void 0 !== e.number_members && null !== e.number_members && (this.number_members = e.number_members), void 0 !== e.number_unreads && null !== e.number_unreads && (this.number_unreads = e.number_unreads), void 0 !== e.reported_user_id && null !== e.reported_user_id && (this.reported_user_id = e.reported_user_id), void 0 !== e.sender_user_id && null !== e.sender_user_id && (this.sender_user_id = e.sender_user_id), void 0 !== e.invitation_timestamp && null !== e.invitation_timestamp && (this.invitation_timestamp = e.invitation_timestamp), void 0 !== e.message_length && null !== e.message_length && (this.message_length = e.message_length), void 0 !== e.recipient_user_id && null !== e.recipient_user_id && (this.recipient_user_id = e.recipient_user_id), void 0 !== e.number_blocked_users && null !== e.number_blocked_users && (this.number_blocked_users = e.number_blocked_users), void 0 !== e.request_name && null !== e.request_name && (this.request_name = e.request_name), void 0 !== e.is_member && null !== e.is_member && (this.is_member = e.is_member), void 0 !== e.shown_history && null !== e.shown_history && (this.shown_history = e.shown_history), void 0 !== e.message_id && null !== e.message_id && (this.message_id = e.message_id), void 0 !== e.report_reason && null !== e.report_reason && (this.report_reason = e.report_reason), void 0 !== e.message_body && null !== e.message_body && (this.message_body = e.message_body), void 0 !== e.channel_name && null !== e.channel_name && (this.channel_name = e.channel_name))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Chat"), null !== this.blocked_user_id && void 0 !== this.blocked_user_id && (e.writeFieldBegin("blocked_user_id", r.Type.STRING, 1), e.writeString(this.blocked_user_id), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 2), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 3), e.writeString(this.type), e.writeFieldEnd()), null !== this.existing_channel && void 0 !== this.existing_channel && (e.writeFieldBegin("existing_channel", r.Type.BOOL, 4), e.writeBool(this.existing_channel), e.writeFieldEnd()), null !== this.image_upload_method && void 0 !== this.image_upload_method && (e.writeFieldBegin("image_upload_method", r.Type.STRING, 5), e.writeString(this.image_upload_method), e.writeFieldEnd()), null !== this.user_added_method && void 0 !== this.user_added_method && (e.writeFieldBegin("user_added_method", r.Type.STRING, 6), e.writeString(this.user_added_method), e.writeFieldEnd()), null !== this.invitation_id && void 0 !== this.invitation_id && (e.writeFieldBegin("invitation_id", r.Type.STRING, 7), e.writeString(this.invitation_id), e.writeFieldEnd()), null !== this.invitation_type && void 0 !== this.invitation_type && (e.writeFieldBegin("invitation_type", r.Type.STRING, 8), e.writeString(this.invitation_type), e.writeFieldEnd()), null !== this.members && void 0 !== this.members) {
					for (var t in e.writeFieldBegin("members", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.members.length), this.members) this.members.hasOwnProperty(t) && (t = this.members[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.invitation_preview_type && void 0 !== this.invitation_preview_type && (e.writeFieldBegin("invitation_preview_type", r.Type.STRING, 10), e.writeString(this.invitation_preview_type), e.writeFieldEnd()), null !== this.message_type && void 0 !== this.message_type && (e.writeFieldBegin("message_type", r.Type.STRING, 11), e.writeString(this.message_type), e.writeFieldEnd()), null !== this.number_channels && void 0 !== this.number_channels && (e.writeFieldBegin("number_channels", r.Type.I64, 12), e.writeI64(this.number_channels), e.writeFieldEnd()), null !== this.number_pending_invites && void 0 !== this.number_pending_invites && (e.writeFieldBegin("number_pending_invites", r.Type.I64, 13), e.writeI64(this.number_pending_invites), e.writeFieldEnd()), null !== this.number_members && void 0 !== this.number_members && (e.writeFieldBegin("number_members", r.Type.I64, 14), e.writeI64(this.number_members), e.writeFieldEnd()), null !== this.number_unreads && void 0 !== this.number_unreads && (e.writeFieldBegin("number_unreads", r.Type.I64, 15), e.writeI64(this.number_unreads), e.writeFieldEnd()), null !== this.reported_user_id && void 0 !== this.reported_user_id && (e.writeFieldBegin("reported_user_id", r.Type.STRING, 16), e.writeString(this.reported_user_id), e.writeFieldEnd()), null !== this.sender_user_id && void 0 !== this.sender_user_id && (e.writeFieldBegin("sender_user_id", r.Type.STRING, 17), e.writeString(this.sender_user_id), e.writeFieldEnd()), null !== this.invitation_timestamp && void 0 !== this.invitation_timestamp && (e.writeFieldBegin("invitation_timestamp", r.Type.I64, 18), e.writeI64(this.invitation_timestamp), e.writeFieldEnd()), null !== this.message_length && void 0 !== this.message_length && (e.writeFieldBegin("message_length", r.Type.I64, 19), e.writeI64(this.message_length), e.writeFieldEnd()), null !== this.recipient_user_id && void 0 !== this.recipient_user_id && (e.writeFieldBegin("recipient_user_id", r.Type.STRING, 20), e.writeString(this.recipient_user_id), e.writeFieldEnd()), null !== this.number_blocked_users && void 0 !== this.number_blocked_users && (e.writeFieldBegin("number_blocked_users", r.Type.I64, 21), e.writeI64(this.number_blocked_users), e.writeFieldEnd()), null !== this.request_name && void 0 !== this.request_name && (e.writeFieldBegin("request_name", r.Type.STRING, 22), e.writeString(this.request_name), e.writeFieldEnd()), null !== this.is_member && void 0 !== this.is_member && (e.writeFieldBegin("is_member", r.Type.BOOL, 23), e.writeBool(this.is_member), e.writeFieldEnd()), null !== this.shown_history && void 0 !== this.shown_history && (e.writeFieldBegin("shown_history", r.Type.BOOL, 24), e.writeBool(this.shown_history), e.writeFieldEnd()), null !== this.message_id && void 0 !== this.message_id && (e.writeFieldBegin("message_id", r.Type.I64, 25), e.writeI64(this.message_id), e.writeFieldEnd()), null !== this.report_reason && void 0 !== this.report_reason && (e.writeFieldBegin("report_reason", r.Type.STRING, 26), e.writeString(this.report_reason), e.writeFieldEnd()), null !== this.message_body && void 0 !== this.message_body && (e.writeFieldBegin("message_body", r.Type.STRING, 27), e.writeString(this.message_body), e.writeFieldEnd()), null !== this.channel_name && void 0 !== this.channel_name && (e.writeFieldBegin("channel_name", r.Type.STRING, 28), e.writeString(this.channel_name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ChatHomeFeedBoosting = function(e) {
				this.subreddit_ids = null, this.post_ids = null, this.positions = null, this.original_positions = null, e && (void 0 !== e.subreddit_ids && null !== e.subreddit_ids && (this.subreddit_ids = r.copyList(e.subreddit_ids, [null])), void 0 !== e.post_ids && null !== e.post_ids && (this.post_ids = r.copyList(e.post_ids, [null])), void 0 !== e.positions && null !== e.positions && (this.positions = r.copyList(e.positions, [null])), void 0 !== e.original_positions && null !== e.original_positions && (this.original_positions = r.copyList(e.original_positions, [null])))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				if (e.writeStructBegin("ChatHomeFeedBoosting"), null !== this.subreddit_ids && void 0 !== this.subreddit_ids) {
					for (var t in e.writeFieldBegin("subreddit_ids", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.subreddit_ids.length), this.subreddit_ids) this.subreddit_ids.hasOwnProperty(t) && (t = this.subreddit_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.post_ids && void 0 !== this.post_ids) {
					for (var i in e.writeFieldBegin("post_ids", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.post_ids.length), this.post_ids) this.post_ids.hasOwnProperty(i) && (i = this.post_ids[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.positions && void 0 !== this.positions) {
					for (var n in e.writeFieldBegin("positions", r.Type.LIST, 3), e.writeListBegin(r.Type.I32, this.positions.length), this.positions) this.positions.hasOwnProperty(n) && (n = this.positions[n], e.writeI32(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.original_positions && void 0 !== this.original_positions) {
					for (var s in e.writeFieldBegin("original_positions", r.Type.LIST, 4), e.writeListBegin(r.Type.I32, this.original_positions.length), this.original_positions) this.original_positions.hasOwnProperty(s) && (s = this.original_positions[s], e.writeI32(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/comment_draft_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CommentDraft = function(e) {
					this.body_text = null, e && void 0 !== e.body_text && null !== e.body_text && (this.body_text = e.body_text)
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("CommentDraft"), null !== this.body_text && void 0 !== this.body_text && (e.writeFieldBegin("body_text", r.Type.STRING, 1), e.writeString(this.body_text), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/content_tag_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ContentTag = function(e) {
					this.mature_themes = null, this.survey_answers = null, this.rating_version = null, this.rating = null, e && (void 0 !== e.mature_themes && null !== e.mature_themes && (this.mature_themes = r.copyList(e.mature_themes, [null])), void 0 !== e.survey_answers && null !== e.survey_answers && (this.survey_answers = r.copyList(e.survey_answers, [null])), void 0 !== e.rating_version && null !== e.rating_version && (this.rating_version = e.rating_version), void 0 !== e.rating && null !== e.rating && (this.rating = e.rating))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("ContentTag"), null !== this.mature_themes && void 0 !== this.mature_themes) {
					for (var t in e.writeFieldBegin("mature_themes", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.mature_themes.length), this.mature_themes) this.mature_themes.hasOwnProperty(t) && (t = this.mature_themes[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.survey_answers && void 0 !== this.survey_answers) {
					for (var i in e.writeFieldBegin("survey_answers", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.survey_answers.length), this.survey_answers) this.survey_answers.hasOwnProperty(i) && (i = this.survey_answers[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.rating_version && void 0 !== this.rating_version && (e.writeFieldBegin("rating_version", r.Type.STRING, 3), e.writeString(this.rating_version), e.writeFieldEnd()), null !== this.rating && void 0 !== this.rating && (e.writeFieldBegin("rating", r.Type.STRING, 4), e.writeString(this.rating), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/content_types.js": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/es6.array.sort.js");
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Post = function(e) {
					this.id = null, this.type = null, this.title = null, this.nsfw = null, this.spoiler = null, this.url = null, this.domain = null, this.body_text = null, this.created_timestamp = null, this.promoted = null, this.author_id = null, this.content_duration = null, this.archived = null, this.crosspost_root_id = null, this.number_gildings = null, this.original_content = null, this.flair = null, this.score = null, this.upvote_ratio = null, this.impression_id = null, this.number_posts_from_ad = null, this.is_event = null, this.is_scheduled = null, this.submit_scheduled_timestamp = null, this.is_automated = null, this.comment_type = null, this.number_comments = null, this.subreddit_id = null, this.subreddit_name = null, this.top_awarded_type = null, this.recommendation_source = null, this.recommendation_source_subreddit_id = null, this.recommendation_source_subreddit_name = null, this.hvts = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.nsfw && null !== e.nsfw && (this.nsfw = e.nsfw), void 0 !== e.spoiler && null !== e.spoiler && (this.spoiler = e.spoiler), void 0 !== e.url && null !== e.url && (this.url = e.url), void 0 !== e.domain && null !== e.domain && (this.domain = e.domain), void 0 !== e.body_text && null !== e.body_text && (this.body_text = e.body_text), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.promoted && null !== e.promoted && (this.promoted = e.promoted), void 0 !== e.author_id && null !== e.author_id && (this.author_id = e.author_id), void 0 !== e.content_duration && null !== e.content_duration && (this.content_duration = e.content_duration), void 0 !== e.archived && null !== e.archived && (this.archived = e.archived), void 0 !== e.crosspost_root_id && null !== e.crosspost_root_id && (this.crosspost_root_id = e.crosspost_root_id), void 0 !== e.number_gildings && null !== e.number_gildings && (this.number_gildings = e.number_gildings), void 0 !== e.original_content && null !== e.original_content && (this.original_content = e.original_content), void 0 !== e.flair && null !== e.flair && (this.flair = e.flair), void 0 !== e.score && null !== e.score && (this.score = e.score), void 0 !== e.upvote_ratio && null !== e.upvote_ratio && (this.upvote_ratio = e.upvote_ratio), void 0 !== e.impression_id && null !== e.impression_id && (this.impression_id = e.impression_id), void 0 !== e.number_posts_from_ad && null !== e.number_posts_from_ad && (this.number_posts_from_ad = e.number_posts_from_ad), void 0 !== e.is_event && null !== e.is_event && (this.is_event = e.is_event), void 0 !== e.is_scheduled && null !== e.is_scheduled && (this.is_scheduled = e.is_scheduled), void 0 !== e.submit_scheduled_timestamp && null !== e.submit_scheduled_timestamp && (this.submit_scheduled_timestamp = e.submit_scheduled_timestamp), void 0 !== e.is_automated && null !== e.is_automated && (this.is_automated = e.is_automated), void 0 !== e.comment_type && null !== e.comment_type && (this.comment_type = e.comment_type), void 0 !== e.number_comments && null !== e.number_comments && (this.number_comments = e.number_comments), void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.subreddit_name && null !== e.subreddit_name && (this.subreddit_name = e.subreddit_name), void 0 !== e.top_awarded_type && null !== e.top_awarded_type && (this.top_awarded_type = e.top_awarded_type), void 0 !== e.recommendation_source && null !== e.recommendation_source && (this.recommendation_source = e.recommendation_source), void 0 !== e.recommendation_source_subreddit_id && null !== e.recommendation_source_subreddit_id && (this.recommendation_source_subreddit_id = e.recommendation_source_subreddit_id), void 0 !== e.recommendation_source_subreddit_name && null !== e.recommendation_source_subreddit_name && (this.recommendation_source_subreddit_name = e.recommendation_source_subreddit_name), void 0 !== e.hvts && null !== e.hvts && (this.hvts = r.copyList(e.hvts, [null])))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Post"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 3), e.writeString(this.title), e.writeFieldEnd()), null !== this.nsfw && void 0 !== this.nsfw && (e.writeFieldBegin("nsfw", r.Type.BOOL, 4), e.writeBool(this.nsfw), e.writeFieldEnd()), null !== this.spoiler && void 0 !== this.spoiler && (e.writeFieldBegin("spoiler", r.Type.BOOL, 5), e.writeBool(this.spoiler), e.writeFieldEnd()), null !== this.url && void 0 !== this.url && (e.writeFieldBegin("url", r.Type.STRING, 6), e.writeString(this.url), e.writeFieldEnd()), null !== this.domain && void 0 !== this.domain && (e.writeFieldBegin("domain", r.Type.STRING, 7), e.writeString(this.domain), e.writeFieldEnd()), null !== this.body_text && void 0 !== this.body_text && (e.writeFieldBegin("body_text", r.Type.STRING, 8), e.writeString(this.body_text), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 9), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.promoted && void 0 !== this.promoted && (e.writeFieldBegin("promoted", r.Type.BOOL, 10), e.writeBool(this.promoted), e.writeFieldEnd()), null !== this.author_id && void 0 !== this.author_id && (e.writeFieldBegin("author_id", r.Type.STRING, 11), e.writeString(this.author_id), e.writeFieldEnd()), null !== this.content_duration && void 0 !== this.content_duration && (e.writeFieldBegin("content_duration", r.Type.I64, 12), e.writeI64(this.content_duration), e.writeFieldEnd()), null !== this.archived && void 0 !== this.archived && (e.writeFieldBegin("archived", r.Type.BOOL, 13), e.writeBool(this.archived), e.writeFieldEnd()), null !== this.crosspost_root_id && void 0 !== this.crosspost_root_id && (e.writeFieldBegin("crosspost_root_id", r.Type.STRING, 14), e.writeString(this.crosspost_root_id), e.writeFieldEnd()), null !== this.number_gildings && void 0 !== this.number_gildings && (e.writeFieldBegin("number_gildings", r.Type.I64, 15), e.writeI64(this.number_gildings), e.writeFieldEnd()), null !== this.original_content && void 0 !== this.original_content && (e.writeFieldBegin("original_content", r.Type.BOOL, 16), e.writeBool(this.original_content), e.writeFieldEnd()), null !== this.flair && void 0 !== this.flair && (e.writeFieldBegin("flair", r.Type.STRING, 17), e.writeString(this.flair), e.writeFieldEnd()), null !== this.score && void 0 !== this.score && (e.writeFieldBegin("score", r.Type.I64, 18), e.writeI64(this.score), e.writeFieldEnd()), null !== this.upvote_ratio && void 0 !== this.upvote_ratio && (e.writeFieldBegin("upvote_ratio", r.Type.DOUBLE, 19), e.writeDouble(this.upvote_ratio), e.writeFieldEnd()), null !== this.impression_id && void 0 !== this.impression_id && (e.writeFieldBegin("impression_id", r.Type.STRING, 20), e.writeString(this.impression_id), e.writeFieldEnd()), null !== this.number_posts_from_ad && void 0 !== this.number_posts_from_ad && (e.writeFieldBegin("number_posts_from_ad", r.Type.I64, 21), e.writeI64(this.number_posts_from_ad), e.writeFieldEnd()), null !== this.is_event && void 0 !== this.is_event && (e.writeFieldBegin("is_event", r.Type.BOOL, 22), e.writeBool(this.is_event), e.writeFieldEnd()), null !== this.is_scheduled && void 0 !== this.is_scheduled && (e.writeFieldBegin("is_scheduled", r.Type.BOOL, 23), e.writeBool(this.is_scheduled), e.writeFieldEnd()), null !== this.submit_scheduled_timestamp && void 0 !== this.submit_scheduled_timestamp && (e.writeFieldBegin("submit_scheduled_timestamp", r.Type.I64, 24), e.writeI64(this.submit_scheduled_timestamp), e.writeFieldEnd()), null !== this.is_automated && void 0 !== this.is_automated && (e.writeFieldBegin("is_automated", r.Type.BOOL, 25), e.writeBool(this.is_automated), e.writeFieldEnd()), null !== this.comment_type && void 0 !== this.comment_type && (e.writeFieldBegin("comment_type", r.Type.STRING, 26), e.writeString(this.comment_type), e.writeFieldEnd()), null !== this.number_comments && void 0 !== this.number_comments && (e.writeFieldBegin("number_comments", r.Type.I64, 27), e.writeI64(this.number_comments), e.writeFieldEnd()), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 28), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.subreddit_name && void 0 !== this.subreddit_name && (e.writeFieldBegin("subreddit_name", r.Type.STRING, 29), e.writeString(this.subreddit_name), e.writeFieldEnd()), null !== this.top_awarded_type && void 0 !== this.top_awarded_type && (e.writeFieldBegin("top_awarded_type", r.Type.STRING, 30), e.writeString(this.top_awarded_type), e.writeFieldEnd()), null !== this.recommendation_source && void 0 !== this.recommendation_source && (e.writeFieldBegin("recommendation_source", r.Type.STRING, 31), e.writeString(this.recommendation_source), e.writeFieldEnd()), null !== this.recommendation_source_subreddit_id && void 0 !== this.recommendation_source_subreddit_id && (e.writeFieldBegin("recommendation_source_subreddit_id", r.Type.STRING, 32), e.writeString(this.recommendation_source_subreddit_id), e.writeFieldEnd()), null !== this.recommendation_source_subreddit_name && void 0 !== this.recommendation_source_subreddit_name && (e.writeFieldBegin("recommendation_source_subreddit_name", r.Type.STRING, 33), e.writeString(this.recommendation_source_subreddit_name), e.writeFieldEnd()), null !== this.hvts && void 0 !== this.hvts) {
					for (var t in e.writeFieldBegin("hvts", r.Type.LIST, 34), e.writeListBegin(r.Type.STRING, this.hvts.length), this.hvts) this.hvts.hasOwnProperty(t) && (t = this.hvts[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Listing = function(e) {
				this.length = null, this.links = null, this.sort = null, this.sort_time_filter = null, this.min_rank = null, this.max_rank = null, this.geo_filter = null, this.source = null, this.old_sort = null, this.depth = null, this.cursor = null, this.cursor_returned = null, this.aggregator = null, this.metadata = null, e && (void 0 !== e.length && null !== e.length && (this.length = e.length), void 0 !== e.links && null !== e.links && (this.links = r.copyList(e.links, [null])), void 0 !== e.sort && null !== e.sort && (this.sort = e.sort), void 0 !== e.sort_time_filter && null !== e.sort_time_filter && (this.sort_time_filter = e.sort_time_filter), void 0 !== e.min_rank && null !== e.min_rank && (this.min_rank = e.min_rank), void 0 !== e.max_rank && null !== e.max_rank && (this.max_rank = e.max_rank), void 0 !== e.geo_filter && null !== e.geo_filter && (this.geo_filter = e.geo_filter), void 0 !== e.source && null !== e.source && (this.source = e.source), void 0 !== e.old_sort && null !== e.old_sort && (this.old_sort = e.old_sort), void 0 !== e.depth && null !== e.depth && (this.depth = e.depth), void 0 !== e.cursor && null !== e.cursor && (this.cursor = e.cursor), void 0 !== e.cursor_returned && null !== e.cursor_returned && (this.cursor_returned = e.cursor_returned), void 0 !== e.aggregator && null !== e.aggregator && (this.aggregator = e.aggregator), void 0 !== e.metadata && null !== e.metadata && (this.metadata = e.metadata))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				if (e.writeStructBegin("Listing"), null !== this.length && void 0 !== this.length && (e.writeFieldBegin("length", r.Type.I64, 1), e.writeI64(this.length), e.writeFieldEnd()), null !== this.links && void 0 !== this.links) {
					for (var t in e.writeFieldBegin("links", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.links.length), this.links) this.links.hasOwnProperty(t) && (t = this.links[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.sort && void 0 !== this.sort && (e.writeFieldBegin("sort", r.Type.STRING, 3), e.writeString(this.sort), e.writeFieldEnd()), null !== this.sort_time_filter && void 0 !== this.sort_time_filter && (e.writeFieldBegin("sort_time_filter", r.Type.STRING, 4), e.writeString(this.sort_time_filter), e.writeFieldEnd()), null !== this.min_rank && void 0 !== this.min_rank && (e.writeFieldBegin("min_rank", r.Type.I64, 5), e.writeI64(this.min_rank), e.writeFieldEnd()), null !== this.max_rank && void 0 !== this.max_rank && (e.writeFieldBegin("max_rank", r.Type.I64, 6), e.writeI64(this.max_rank), e.writeFieldEnd()), null !== this.geo_filter && void 0 !== this.geo_filter && (e.writeFieldBegin("geo_filter", r.Type.STRING, 7), e.writeString(this.geo_filter), e.writeFieldEnd()), null !== this.source && void 0 !== this.source && (e.writeFieldBegin("source", r.Type.STRING, 8), e.writeString(this.source), e.writeFieldEnd()), null !== this.old_sort && void 0 !== this.old_sort && (e.writeFieldBegin("old_sort", r.Type.STRING, 9), e.writeString(this.old_sort), e.writeFieldEnd()), null !== this.depth && void 0 !== this.depth && (e.writeFieldBegin("depth", r.Type.I64, 10), e.writeI64(this.depth), e.writeFieldEnd()), null !== this.cursor && void 0 !== this.cursor && (e.writeFieldBegin("cursor", r.Type.STRING, 11), e.writeString(this.cursor), e.writeFieldEnd()), null !== this.cursor_returned && void 0 !== this.cursor_returned && (e.writeFieldBegin("cursor_returned", r.Type.STRING, 12), e.writeString(this.cursor_returned), e.writeFieldEnd()), null !== this.aggregator && void 0 !== this.aggregator && (e.writeFieldBegin("aggregator", r.Type.STRING, 13), e.writeString(this.aggregator), e.writeFieldEnd()), null !== this.metadata && void 0 !== this.metadata && (e.writeFieldBegin("metadata", r.Type.STRING, 14), e.writeString(this.metadata), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.Comment = function(e) {
				this.id = null, this.post_id = null, this.parent_id = null, this.body_text = null, this.author_id = null, this.number_gildings = null, this.score = null, this.upvote_ratio = null, this.created_timestamp = null, this.type = null, this.depth = null, this.content_type = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.post_id && null !== e.post_id && (this.post_id = e.post_id), void 0 !== e.parent_id && null !== e.parent_id && (this.parent_id = e.parent_id), void 0 !== e.body_text && null !== e.body_text && (this.body_text = e.body_text), void 0 !== e.author_id && null !== e.author_id && (this.author_id = e.author_id), void 0 !== e.number_gildings && null !== e.number_gildings && (this.number_gildings = e.number_gildings), void 0 !== e.score && null !== e.score && (this.score = e.score), void 0 !== e.upvote_ratio && null !== e.upvote_ratio && (this.upvote_ratio = e.upvote_ratio), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.depth && null !== e.depth && (this.depth = e.depth), void 0 !== e.content_type && null !== e.content_type && (this.content_type = e.content_type))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("Comment"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.post_id && void 0 !== this.post_id && (e.writeFieldBegin("post_id", r.Type.STRING, 2), e.writeString(this.post_id), e.writeFieldEnd()), null !== this.parent_id && void 0 !== this.parent_id && (e.writeFieldBegin("parent_id", r.Type.STRING, 3), e.writeString(this.parent_id), e.writeFieldEnd()), null !== this.body_text && void 0 !== this.body_text && (e.writeFieldBegin("body_text", r.Type.STRING, 4), e.writeString(this.body_text), e.writeFieldEnd()), null !== this.author_id && void 0 !== this.author_id && (e.writeFieldBegin("author_id", r.Type.STRING, 5), e.writeString(this.author_id), e.writeFieldEnd()), null !== this.number_gildings && void 0 !== this.number_gildings && (e.writeFieldBegin("number_gildings", r.Type.I64, 6), e.writeI64(this.number_gildings), e.writeFieldEnd()), null !== this.score && void 0 !== this.score && (e.writeFieldBegin("score", r.Type.I64, 7), e.writeI64(this.score), e.writeFieldEnd()), null !== this.upvote_ratio && void 0 !== this.upvote_ratio && (e.writeFieldBegin("upvote_ratio", r.Type.DOUBLE, 8), e.writeDouble(this.upvote_ratio), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 9), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 10), e.writeString(this.type), e.writeFieldEnd()), null !== this.depth && void 0 !== this.depth && (e.writeFieldBegin("depth", r.Type.I64, 11), e.writeI64(this.depth), e.writeFieldEnd()), null !== this.content_type && void 0 !== this.content_type && (e.writeFieldBegin("content_type", r.Type.STRING, 12), e.writeString(this.content_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.CommentComposer = function(e) {
				this.editor_mode = null, this.text_type = null, this.final_status = null, e && (void 0 !== e.editor_mode && null !== e.editor_mode && (this.editor_mode = e.editor_mode), void 0 !== e.text_type && null !== e.text_type && (this.text_type = e.text_type), void 0 !== e.final_status && null !== e.final_status && (this.final_status = e.final_status))
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("CommentComposer"), null !== this.editor_mode && void 0 !== this.editor_mode && (e.writeFieldBegin("editor_mode", r.Type.STRING, 1), e.writeString(this.editor_mode), e.writeFieldEnd()), null !== this.text_type && void 0 !== this.text_type && (e.writeFieldBegin("text_type", r.Type.STRING, 2), e.writeString(this.text_type), e.writeFieldEnd()), null !== this.final_status && void 0 !== this.final_status && (e.writeFieldBegin("final_status", r.Type.STRING, 3), e.writeString(this.final_status), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var l = e.exports.Notification = function(e) {
				this.id = null, this.process_notes = null, this.dropped = null, this.type = null, this.title = null, this.body = null, this.authorization_status = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.process_notes && null !== e.process_notes && (this.process_notes = e.process_notes), void 0 !== e.dropped && null !== e.dropped && (this.dropped = e.dropped), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.body && null !== e.body && (this.body = e.body), void 0 !== e.authorization_status && null !== e.authorization_status && (this.authorization_status = e.authorization_status))
			};
			l.prototype = {}, l.prototype.write = function(e) {
				e.writeStructBegin("Notification"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.process_notes && void 0 !== this.process_notes && (e.writeFieldBegin("process_notes", r.Type.STRING, 2), e.writeString(this.process_notes), e.writeFieldEnd()), null !== this.dropped && void 0 !== this.dropped && (e.writeFieldBegin("dropped", r.Type.BOOL, 3), e.writeBool(this.dropped), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 4), e.writeString(this.type), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 5), e.writeString(this.title), e.writeFieldEnd()), null !== this.body && void 0 !== this.body && (e.writeFieldBegin("body", r.Type.STRING, 6), e.writeString(this.body), e.writeFieldEnd()), null !== this.authorization_status && void 0 !== this.authorization_status && (e.writeFieldBegin("authorization_status", r.Type.STRING, 7), e.writeString(this.authorization_status), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var u = e.exports.Media = function(e) {
				this.width = null, this.height = null, this.load_time = null, this.id = null, this.orientation = null, this.duration = null, this.time = null, this.pinned = null, this.max_time_served = null, this.mimetype = null, this.size = null, this.url = null, this.source = null, this.upload_duration = null, this.file_name = null, this.type = null, this.thumbnail_url = null, this.cdn_name = null, this.cdn_region = null, this.destination_region = null, this.preview_url = null, this.stream_public_id = null, this.stream_private_id = null, this.stream_ended_timestamp = null, this.md5 = null, this.caption = null, this.outbound_url = null, this.outbound_domain = null, this.origin = null, e && (void 0 !== e.width && null !== e.width && (this.width = e.width), void 0 !== e.height && null !== e.height && (this.height = e.height), void 0 !== e.load_time && null !== e.load_time && (this.load_time = e.load_time), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.orientation && null !== e.orientation && (this.orientation = e.orientation), void 0 !== e.duration && null !== e.duration && (this.duration = e.duration), void 0 !== e.time && null !== e.time && (this.time = e.time), void 0 !== e.pinned && null !== e.pinned && (this.pinned = e.pinned), void 0 !== e.max_time_served && null !== e.max_time_served && (this.max_time_served = e.max_time_served), void 0 !== e.mimetype && null !== e.mimetype && (this.mimetype = e.mimetype), void 0 !== e.size && null !== e.size && (this.size = e.size), void 0 !== e.url && null !== e.url && (this.url = e.url), void 0 !== e.source && null !== e.source && (this.source = e.source), void 0 !== e.upload_duration && null !== e.upload_duration && (this.upload_duration = e.upload_duration), void 0 !== e.file_name && null !== e.file_name && (this.file_name = e.file_name), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.thumbnail_url && null !== e.thumbnail_url && (this.thumbnail_url = e.thumbnail_url), void 0 !== e.cdn_name && null !== e.cdn_name && (this.cdn_name = e.cdn_name), void 0 !== e.cdn_region && null !== e.cdn_region && (this.cdn_region = e.cdn_region), void 0 !== e.destination_region && null !== e.destination_region && (this.destination_region = e.destination_region), void 0 !== e.preview_url && null !== e.preview_url && (this.preview_url = e.preview_url), void 0 !== e.stream_public_id && null !== e.stream_public_id && (this.stream_public_id = e.stream_public_id), void 0 !== e.stream_private_id && null !== e.stream_private_id && (this.stream_private_id = e.stream_private_id), void 0 !== e.stream_ended_timestamp && null !== e.stream_ended_timestamp && (this.stream_ended_timestamp = e.stream_ended_timestamp), void 0 !== e.md5 && null !== e.md5 && (this.md5 = e.md5), void 0 !== e.caption && null !== e.caption && (this.caption = e.caption), void 0 !== e.outbound_url && null !== e.outbound_url && (this.outbound_url = e.outbound_url), void 0 !== e.outbound_domain && null !== e.outbound_domain && (this.outbound_domain = e.outbound_domain), void 0 !== e.origin && null !== e.origin && (this.origin = e.origin))
			};
			u.prototype = {}, u.prototype.write = function(e) {
				e.writeStructBegin("Media"), null !== this.width && void 0 !== this.width && (e.writeFieldBegin("width", r.Type.I64, 1), e.writeI64(this.width), e.writeFieldEnd()), null !== this.height && void 0 !== this.height && (e.writeFieldBegin("height", r.Type.I64, 2), e.writeI64(this.height), e.writeFieldEnd()), null !== this.load_time && void 0 !== this.load_time && (e.writeFieldBegin("load_time", r.Type.I64, 3), e.writeI64(this.load_time), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 4), e.writeString(this.id), e.writeFieldEnd()), null !== this.orientation && void 0 !== this.orientation && (e.writeFieldBegin("orientation", r.Type.STRING, 5), e.writeString(this.orientation), e.writeFieldEnd()), null !== this.duration && void 0 !== this.duration && (e.writeFieldBegin("duration", r.Type.I64, 6), e.writeI64(this.duration), e.writeFieldEnd()), null !== this.time && void 0 !== this.time && (e.writeFieldBegin("time", r.Type.I64, 7), e.writeI64(this.time), e.writeFieldEnd()), null !== this.pinned && void 0 !== this.pinned && (e.writeFieldBegin("pinned", r.Type.BOOL, 8), e.writeBool(this.pinned), e.writeFieldEnd()), null !== this.max_time_served && void 0 !== this.max_time_served && (e.writeFieldBegin("max_time_served", r.Type.I64, 9), e.writeI64(this.max_time_served), e.writeFieldEnd()), null !== this.mimetype && void 0 !== this.mimetype && (e.writeFieldBegin("mimetype", r.Type.STRING, 10), e.writeString(this.mimetype), e.writeFieldEnd()), null !== this.size && void 0 !== this.size && (e.writeFieldBegin("size", r.Type.I64, 11), e.writeI64(this.size), e.writeFieldEnd()), null !== this.url && void 0 !== this.url && (e.writeFieldBegin("url", r.Type.STRING, 12), e.writeString(this.url), e.writeFieldEnd()), null !== this.source && void 0 !== this.source && (e.writeFieldBegin("source", r.Type.STRING, 13), e.writeString(this.source), e.writeFieldEnd()), null !== this.upload_duration && void 0 !== this.upload_duration && (e.writeFieldBegin("upload_duration", r.Type.I64, 14), e.writeI64(this.upload_duration), e.writeFieldEnd()), null !== this.file_name && void 0 !== this.file_name && (e.writeFieldBegin("file_name", r.Type.STRING, 15), e.writeString(this.file_name), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 16), e.writeString(this.type), e.writeFieldEnd()), null !== this.thumbnail_url && void 0 !== this.thumbnail_url && (e.writeFieldBegin("thumbnail_url", r.Type.STRING, 17), e.writeString(this.thumbnail_url), e.writeFieldEnd()), null !== this.cdn_name && void 0 !== this.cdn_name && (e.writeFieldBegin("cdn_name", r.Type.STRING, 18), e.writeString(this.cdn_name), e.writeFieldEnd()), null !== this.cdn_region && void 0 !== this.cdn_region && (e.writeFieldBegin("cdn_region", r.Type.STRING, 19), e.writeString(this.cdn_region), e.writeFieldEnd()), null !== this.destination_region && void 0 !== this.destination_region && (e.writeFieldBegin("destination_region", r.Type.STRING, 20), e.writeString(this.destination_region), e.writeFieldEnd()), null !== this.preview_url && void 0 !== this.preview_url && (e.writeFieldBegin("preview_url", r.Type.STRING, 21), e.writeString(this.preview_url), e.writeFieldEnd()), null !== this.stream_public_id && void 0 !== this.stream_public_id && (e.writeFieldBegin("stream_public_id", r.Type.STRING, 22), e.writeString(this.stream_public_id), e.writeFieldEnd()), null !== this.stream_private_id && void 0 !== this.stream_private_id && (e.writeFieldBegin("stream_private_id", r.Type.STRING, 23), e.writeString(this.stream_private_id), e.writeFieldEnd()), null !== this.stream_ended_timestamp && void 0 !== this.stream_ended_timestamp && (e.writeFieldBegin("stream_ended_timestamp", r.Type.I64, 24), e.writeI64(this.stream_ended_timestamp), e.writeFieldEnd()), null !== this.md5 && void 0 !== this.md5 && (e.writeFieldBegin("md5", r.Type.STRING, 25), e.writeString(this.md5), e.writeFieldEnd()), null !== this.caption && void 0 !== this.caption && (e.writeFieldBegin("caption", r.Type.STRING, 26), e.writeString(this.caption), e.writeFieldEnd()), null !== this.outbound_url && void 0 !== this.outbound_url && (e.writeFieldBegin("outbound_url", r.Type.STRING, 27), e.writeString(this.outbound_url), e.writeFieldEnd()), null !== this.outbound_domain && void 0 !== this.outbound_domain && (e.writeFieldBegin("outbound_domain", r.Type.STRING, 28), e.writeString(this.outbound_domain), e.writeFieldEnd()), null !== this.origin && void 0 !== this.origin && (e.writeFieldBegin("origin", r.Type.STRING, 29), e.writeString(this.origin), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var c = e.exports.Gallery = function(e) {
				this.id = null, this.position = null, this.media_ids = null, this.num_items = null, this.num_images = null, this.num_videos = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.position && null !== e.position && (this.position = e.position), void 0 !== e.media_ids && null !== e.media_ids && (this.media_ids = r.copyList(e.media_ids, [null])), void 0 !== e.num_items && null !== e.num_items && (this.num_items = e.num_items), void 0 !== e.num_images && null !== e.num_images && (this.num_images = e.num_images), void 0 !== e.num_videos && null !== e.num_videos && (this.num_videos = e.num_videos))
			};
			c.prototype = {}, c.prototype.write = function(e) {
				if (e.writeStructBegin("Gallery"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.position && void 0 !== this.position && (e.writeFieldBegin("position", r.Type.I32, 2), e.writeI32(this.position), e.writeFieldEnd()), null !== this.media_ids && void 0 !== this.media_ids) {
					for (var t in e.writeFieldBegin("media_ids", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.media_ids.length), this.media_ids) this.media_ids.hasOwnProperty(t) && (t = this.media_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.num_items && void 0 !== this.num_items && (e.writeFieldBegin("num_items", r.Type.I32, 4), e.writeI32(this.num_items), e.writeFieldEnd()), null !== this.num_images && void 0 !== this.num_images && (e.writeFieldBegin("num_images", r.Type.I32, 5), e.writeI32(this.num_images), e.writeFieldEnd()), null !== this.num_videos && void 0 !== this.num_videos && (e.writeFieldBegin("num_videos", r.Type.I32, 6), e.writeI32(this.num_videos), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var _ = e.exports.PostComposer = function(e) {
				this.type = null, this.input_type = null, this.text_type = null, this.final_status = null, this.editor_mode = null, this.post_scheduled = null, this.submit_scheduled_timestamp = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.input_type && null !== e.input_type && (this.input_type = e.input_type), void 0 !== e.text_type && null !== e.text_type && (this.text_type = e.text_type), void 0 !== e.final_status && null !== e.final_status && (this.final_status = e.final_status), void 0 !== e.editor_mode && null !== e.editor_mode && (this.editor_mode = e.editor_mode), void 0 !== e.post_scheduled && null !== e.post_scheduled && (this.post_scheduled = e.post_scheduled), void 0 !== e.submit_scheduled_timestamp && null !== e.submit_scheduled_timestamp && (this.submit_scheduled_timestamp = e.submit_scheduled_timestamp))
			};
			_.prototype = {}, _.prototype.write = function(e) {
				e.writeStructBegin("PostComposer"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.input_type && void 0 !== this.input_type && (e.writeFieldBegin("input_type", r.Type.STRING, 2), e.writeString(this.input_type), e.writeFieldEnd()), null !== this.text_type && void 0 !== this.text_type && (e.writeFieldBegin("text_type", r.Type.STRING, 3), e.writeString(this.text_type), e.writeFieldEnd()), null !== this.final_status && void 0 !== this.final_status && (e.writeFieldBegin("final_status", r.Type.STRING, 4), e.writeString(this.final_status), e.writeFieldEnd()), null !== this.editor_mode && void 0 !== this.editor_mode && (e.writeFieldBegin("editor_mode", r.Type.STRING, 5), e.writeString(this.editor_mode), e.writeFieldEnd()), null !== this.post_scheduled && void 0 !== this.post_scheduled && (e.writeFieldBegin("post_scheduled", r.Type.BOOL, 6), e.writeBool(this.post_scheduled), e.writeFieldEnd()), null !== this.submit_scheduled_timestamp && void 0 !== this.submit_scheduled_timestamp && (e.writeFieldBegin("submit_scheduled_timestamp", r.Type.I64, 7), e.writeI64(this.submit_scheduled_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var m = e.exports.Onboarding = function(e) {
				this.id = null, this.action_source = null, this.process_notes = null, this.number_subreddits_selected = null, this.subreddits_selected = null, this.user_name = null, this.recommended_user_name = null, this.start_timestamp = null, this.end_timestamp = null, this.category_position = null, this.category_name = null, this.subreddit_name = null, this.subreddit_position = null, this.subreddit_is_selected = null, this.subreddits_already_selected = null, this.successful = null, this.semantic_version = null, this.landing_page = null, this.valid_email_submitted = null, this.pre_selected = null, this.passed_captcha = null, this.captcha_num_screens = null, this.personalized_subreddits = null, this.similar_subreddits = null, this.number_subreddits = null, this.is_similar_subreddit = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.action_source && null !== e.action_source && (this.action_source = e.action_source), void 0 !== e.process_notes && null !== e.process_notes && (this.process_notes = e.process_notes), void 0 !== e.number_subreddits_selected && null !== e.number_subreddits_selected && (this.number_subreddits_selected = e.number_subreddits_selected), void 0 !== e.subreddits_selected && null !== e.subreddits_selected && (this.subreddits_selected = r.copyList(e.subreddits_selected, [null])), void 0 !== e.user_name && null !== e.user_name && (this.user_name = e.user_name), void 0 !== e.recommended_user_name && null !== e.recommended_user_name && (this.recommended_user_name = e.recommended_user_name), void 0 !== e.start_timestamp && null !== e.start_timestamp && (this.start_timestamp = e.start_timestamp), void 0 !== e.end_timestamp && null !== e.end_timestamp && (this.end_timestamp = e.end_timestamp), void 0 !== e.category_position && null !== e.category_position && (this.category_position = e.category_position), void 0 !== e.category_name && null !== e.category_name && (this.category_name = e.category_name), void 0 !== e.subreddit_name && null !== e.subreddit_name && (this.subreddit_name = e.subreddit_name), void 0 !== e.subreddit_position && null !== e.subreddit_position && (this.subreddit_position = e.subreddit_position), void 0 !== e.subreddit_is_selected && null !== e.subreddit_is_selected && (this.subreddit_is_selected = e.subreddit_is_selected), void 0 !== e.subreddits_already_selected && null !== e.subreddits_already_selected && (this.subreddits_already_selected = e.subreddits_already_selected), void 0 !== e.successful && null !== e.successful && (this.successful = e.successful), void 0 !== e.semantic_version && null !== e.semantic_version && (this.semantic_version = e.semantic_version), void 0 !== e.landing_page && null !== e.landing_page && (this.landing_page = e.landing_page), void 0 !== e.valid_email_submitted && null !== e.valid_email_submitted && (this.valid_email_submitted = e.valid_email_submitted), void 0 !== e.pre_selected && null !== e.pre_selected && (this.pre_selected = e.pre_selected), void 0 !== e.passed_captcha && null !== e.passed_captcha && (this.passed_captcha = e.passed_captcha), void 0 !== e.captcha_num_screens && null !== e.captcha_num_screens && (this.captcha_num_screens = e.captcha_num_screens), void 0 !== e.personalized_subreddits && null !== e.personalized_subreddits && (this.personalized_subreddits = e.personalized_subreddits), void 0 !== e.similar_subreddits && null !== e.similar_subreddits && (this.similar_subreddits = r.copyList(e.similar_subreddits, [null])), void 0 !== e.number_subreddits && null !== e.number_subreddits && (this.number_subreddits = e.number_subreddits), void 0 !== e.is_similar_subreddit && null !== e.is_similar_subreddit && (this.is_similar_subreddit = e.is_similar_subreddit))
			};
			m.prototype = {}, m.prototype.write = function(e) {
				if (e.writeStructBegin("Onboarding"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.action_source && void 0 !== this.action_source && (e.writeFieldBegin("action_source", r.Type.STRING, 6), e.writeString(this.action_source), e.writeFieldEnd()), null !== this.process_notes && void 0 !== this.process_notes && (e.writeFieldBegin("process_notes", r.Type.STRING, 7), e.writeString(this.process_notes), e.writeFieldEnd()), null !== this.number_subreddits_selected && void 0 !== this.number_subreddits_selected && (e.writeFieldBegin("number_subreddits_selected", r.Type.I64, 8), e.writeI64(this.number_subreddits_selected), e.writeFieldEnd()), null !== this.subreddits_selected && void 0 !== this.subreddits_selected) {
					for (var t in e.writeFieldBegin("subreddits_selected", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.subreddits_selected.length), this.subreddits_selected) this.subreddits_selected.hasOwnProperty(t) && (t = this.subreddits_selected[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.user_name && void 0 !== this.user_name && (e.writeFieldBegin("user_name", r.Type.STRING, 10), e.writeString(this.user_name), e.writeFieldEnd()), null !== this.recommended_user_name && void 0 !== this.recommended_user_name && (e.writeFieldBegin("recommended_user_name", r.Type.BOOL, 11), e.writeBool(this.recommended_user_name), e.writeFieldEnd()), null !== this.start_timestamp && void 0 !== this.start_timestamp && (e.writeFieldBegin("start_timestamp", r.Type.I64, 12), e.writeI64(this.start_timestamp), e.writeFieldEnd()), null !== this.end_timestamp && void 0 !== this.end_timestamp && (e.writeFieldBegin("end_timestamp", r.Type.I64, 13), e.writeI64(this.end_timestamp), e.writeFieldEnd()), null !== this.category_position && void 0 !== this.category_position && (e.writeFieldBegin("category_position", r.Type.I64, 14), e.writeI64(this.category_position), e.writeFieldEnd()), null !== this.category_name && void 0 !== this.category_name && (e.writeFieldBegin("category_name", r.Type.STRING, 15), e.writeString(this.category_name), e.writeFieldEnd()), null !== this.subreddit_name && void 0 !== this.subreddit_name && (e.writeFieldBegin("subreddit_name", r.Type.STRING, 16), e.writeString(this.subreddit_name), e.writeFieldEnd()), null !== this.subreddit_position && void 0 !== this.subreddit_position && (e.writeFieldBegin("subreddit_position", r.Type.I64, 17), e.writeI64(this.subreddit_position), e.writeFieldEnd()), null !== this.subreddit_is_selected && void 0 !== this.subreddit_is_selected && (e.writeFieldBegin("subreddit_is_selected", r.Type.BOOL, 18), e.writeBool(this.subreddit_is_selected), e.writeFieldEnd()), null !== this.subreddits_already_selected && void 0 !== this.subreddits_already_selected && (e.writeFieldBegin("subreddits_already_selected", r.Type.I64, 19), e.writeI64(this.subreddits_already_selected), e.writeFieldEnd()), null !== this.successful && void 0 !== this.successful && (e.writeFieldBegin("successful", r.Type.BOOL, 20), e.writeBool(this.successful), e.writeFieldEnd()), null !== this.semantic_version && void 0 !== this.semantic_version && (e.writeFieldBegin("semantic_version", r.Type.STRING, 21), e.writeString(this.semantic_version), e.writeFieldEnd()), null !== this.landing_page && void 0 !== this.landing_page && (e.writeFieldBegin("landing_page", r.Type.STRING, 22), e.writeString(this.landing_page), e.writeFieldEnd()), null !== this.valid_email_submitted && void 0 !== this.valid_email_submitted && (e.writeFieldBegin("valid_email_submitted", r.Type.BOOL, 23), e.writeBool(this.valid_email_submitted), e.writeFieldEnd()), null !== this.pre_selected && void 0 !== this.pre_selected && (e.writeFieldBegin("pre_selected", r.Type.BOOL, 24), e.writeBool(this.pre_selected), e.writeFieldEnd()), null !== this.passed_captcha && void 0 !== this.passed_captcha && (e.writeFieldBegin("passed_captcha", r.Type.BOOL, 25), e.writeBool(this.passed_captcha), e.writeFieldEnd()), null !== this.captcha_num_screens && void 0 !== this.captcha_num_screens && (e.writeFieldBegin("captcha_num_screens", r.Type.I64, 26), e.writeI64(this.captcha_num_screens), e.writeFieldEnd()), null !== this.personalized_subreddits && void 0 !== this.personalized_subreddits && (e.writeFieldBegin("personalized_subreddits", r.Type.I64, 27), e.writeI64(this.personalized_subreddits), e.writeFieldEnd()), null !== this.similar_subreddits && void 0 !== this.similar_subreddits) {
					for (var i in e.writeFieldBegin("similar_subreddits", r.Type.LIST, 28), e.writeListBegin(r.Type.STRING, this.similar_subreddits.length), this.similar_subreddits) this.similar_subreddits.hasOwnProperty(i) && (i = this.similar_subreddits[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.number_subreddits && void 0 !== this.number_subreddits && (e.writeFieldBegin("number_subreddits", r.Type.I64, 29), e.writeI64(this.number_subreddits), e.writeFieldEnd()), null !== this.is_similar_subreddit && void 0 !== this.is_similar_subreddit && (e.writeFieldBegin("is_similar_subreddit", r.Type.BOOL, 30), e.writeBool(this.is_similar_subreddit), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var p = e.exports.DiscoveryUnit = function(e) {
				if (this.type = null, this.id = null, this.title = null, this.name = null, this.items = null, e) {
					if (void 0 === e.type || null === e.type) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field type is unset!");
					if (this.type = e.type, void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
					if (this.id = e.id, void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 === e.name || null === e.name) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field name is unset!");
					this.name = e.name, void 0 !== e.items && null !== e.items && (this.items = r.copyList(e.items, [null]))
				}
			};
			p.prototype = {}, p.prototype.write = function(e) {
				if (e.writeStructBegin("DiscoveryUnit"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 9), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 10), e.writeString(this.title), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 11), e.writeString(this.name), e.writeFieldEnd()), null !== this.items && void 0 !== this.items) {
					for (var t in e.writeFieldBegin("items", r.Type.LIST, 12), e.writeListBegin(r.Type.STRING, this.items.length), this.items) this.items.hasOwnProperty(t) && (t = this.items[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			};
			var h = e.exports.Message = function(e) {
				if (this.id = null, this.recipient_id = null, this.recipient_type = null, this.sender_type = null, this.body = null, this.subject = null, this.created_timestamp = null, this.first_message_id = null, this.parent_message_id = null, this.source_page = null, this.filtered_by_recipient = null, this.type = null, this.modmail_conversation_id = null, this.modmail_message_id = null, e) {
					if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
					this.id = e.id, void 0 !== e.recipient_id && null !== e.recipient_id && (this.recipient_id = e.recipient_id), void 0 !== e.recipient_type && null !== e.recipient_type && (this.recipient_type = e.recipient_type), void 0 !== e.sender_type && null !== e.sender_type && (this.sender_type = e.sender_type), void 0 !== e.body && null !== e.body && (this.body = e.body), void 0 !== e.subject && null !== e.subject && (this.subject = e.subject), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.first_message_id && null !== e.first_message_id && (this.first_message_id = e.first_message_id), void 0 !== e.parent_message_id && null !== e.parent_message_id && (this.parent_message_id = e.parent_message_id), void 0 !== e.source_page && null !== e.source_page && (this.source_page = e.source_page), void 0 !== e.filtered_by_recipient && null !== e.filtered_by_recipient && (this.filtered_by_recipient = e.filtered_by_recipient), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.modmail_conversation_id && null !== e.modmail_conversation_id && (this.modmail_conversation_id = e.modmail_conversation_id), void 0 !== e.modmail_message_id && null !== e.modmail_message_id && (this.modmail_message_id = e.modmail_message_id)
				}
			};
			h.prototype = {}, h.prototype.write = function(e) {
				e.writeStructBegin("Message"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.recipient_id && void 0 !== this.recipient_id && (e.writeFieldBegin("recipient_id", r.Type.STRING, 2), e.writeString(this.recipient_id), e.writeFieldEnd()), null !== this.recipient_type && void 0 !== this.recipient_type && (e.writeFieldBegin("recipient_type", r.Type.STRING, 3), e.writeString(this.recipient_type), e.writeFieldEnd()), null !== this.sender_type && void 0 !== this.sender_type && (e.writeFieldBegin("sender_type", r.Type.STRING, 4), e.writeString(this.sender_type), e.writeFieldEnd()), null !== this.body && void 0 !== this.body && (e.writeFieldBegin("body", r.Type.STRING, 5), e.writeString(this.body), e.writeFieldEnd()), null !== this.subject && void 0 !== this.subject && (e.writeFieldBegin("subject", r.Type.STRING, 6), e.writeString(this.subject), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 7), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.first_message_id && void 0 !== this.first_message_id && (e.writeFieldBegin("first_message_id", r.Type.STRING, 8), e.writeString(this.first_message_id), e.writeFieldEnd()), null !== this.parent_message_id && void 0 !== this.parent_message_id && (e.writeFieldBegin("parent_message_id", r.Type.STRING, 9), e.writeString(this.parent_message_id), e.writeFieldEnd()), null !== this.source_page && void 0 !== this.source_page && (e.writeFieldBegin("source_page", r.Type.STRING, 10), e.writeString(this.source_page), e.writeFieldEnd()), null !== this.filtered_by_recipient && void 0 !== this.filtered_by_recipient && (e.writeFieldBegin("filtered_by_recipient", r.Type.BOOL, 11), e.writeBool(this.filtered_by_recipient), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 12), e.writeString(this.type), e.writeFieldEnd()), null !== this.modmail_conversation_id && void 0 !== this.modmail_conversation_id && (e.writeFieldBegin("modmail_conversation_id", r.Type.STRING, 13), e.writeString(this.modmail_conversation_id), e.writeFieldEnd()), null !== this.modmail_message_id && void 0 !== this.modmail_message_id && (e.writeFieldBegin("modmail_message_id", r.Type.STRING, 14), e.writeString(this.modmail_message_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var f = e.exports.News = function(e) {
				this.topic_id = null, this.topic_name = null, this.subtopic_id = null, this.subtopic_name = null, e && (void 0 !== e.topic_id && null !== e.topic_id && (this.topic_id = e.topic_id), void 0 !== e.topic_name && null !== e.topic_name && (this.topic_name = e.topic_name), void 0 !== e.subtopic_id && null !== e.subtopic_id && (this.subtopic_id = e.subtopic_id), void 0 !== e.subtopic_name && null !== e.subtopic_name && (this.subtopic_name = e.subtopic_name))
			};
			f.prototype = {}, f.prototype.write = function(e) {
				e.writeStructBegin("News"), null !== this.topic_id && void 0 !== this.topic_id && (e.writeFieldBegin("topic_id", r.Type.STRING, 1), e.writeString(this.topic_id), e.writeFieldEnd()), null !== this.topic_name && void 0 !== this.topic_name && (e.writeFieldBegin("topic_name", r.Type.STRING, 2), e.writeString(this.topic_name), e.writeFieldEnd()), null !== this.subtopic_id && void 0 !== this.subtopic_id && (e.writeFieldBegin("subtopic_id", r.Type.STRING, 3), e.writeString(this.subtopic_id), e.writeFieldEnd()), null !== this.subtopic_name && void 0 !== this.subtopic_name && (e.writeFieldBegin("subtopic_name", r.Type.STRING, 4), e.writeString(this.subtopic_name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var b = e.exports.Edit = function(e) {
				this.previous_body_text = null, e && void 0 !== e.previous_body_text && null !== e.previous_body_text && (this.previous_body_text = e.previous_body_text)
			};
			b.prototype = {}, b.prototype.write = function(e) {
				e.writeStructBegin("Edit"), null !== this.previous_body_text && void 0 !== this.previous_body_text && (e.writeFieldBegin("previous_body_text", r.Type.STRING, 1), e.writeString(this.previous_body_text), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var g = e.exports.PostEvent = function(e) {
				this.type = null, this.event_state = null, this.event_start_timestamp = null, this.event_end_timestamp = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.event_state && null !== e.event_state && (this.event_state = e.event_state), void 0 !== e.event_start_timestamp && null !== e.event_start_timestamp && (this.event_start_timestamp = e.event_start_timestamp), void 0 !== e.event_end_timestamp && null !== e.event_end_timestamp && (this.event_end_timestamp = e.event_end_timestamp))
			};
			g.prototype = {}, g.prototype.write = function(e) {
				e.writeStructBegin("PostEvent"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.event_state && void 0 !== this.event_state && (e.writeFieldBegin("event_state", r.Type.STRING, 2), e.writeString(this.event_state), e.writeFieldEnd()), null !== this.event_start_timestamp && void 0 !== this.event_start_timestamp && (e.writeFieldBegin("event_start_timestamp", r.Type.I64, 3), e.writeI64(this.event_start_timestamp), e.writeFieldEnd()), null !== this.event_end_timestamp && void 0 !== this.event_end_timestamp && (e.writeFieldBegin("event_end_timestamp", r.Type.I64, 4), e.writeI64(this.event_end_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var w = e.exports.PostCollection = function(e) {
				this.id = null, this.title = null, this.author_id = null, this.post_ids = null, this.display_layout = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.author_id && null !== e.author_id && (this.author_id = e.author_id), void 0 !== e.post_ids && null !== e.post_ids && (this.post_ids = r.copyList(e.post_ids, [null])), void 0 !== e.display_layout && null !== e.display_layout && (this.display_layout = e.display_layout))
			};
			w.prototype = {}, w.prototype.write = function(e) {
				if (e.writeStructBegin("PostCollection"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), null !== this.author_id && void 0 !== this.author_id && (e.writeFieldBegin("author_id", r.Type.STRING, 4), e.writeString(this.author_id), e.writeFieldEnd()), null !== this.post_ids && void 0 !== this.post_ids) {
					for (var t in e.writeFieldBegin("post_ids", r.Type.LIST, 5), e.writeListBegin(r.Type.STRING, this.post_ids.length), this.post_ids) this.post_ids.hasOwnProperty(t) && (t = this.post_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.display_layout && void 0 !== this.display_layout && (e.writeFieldBegin("display_layout", r.Type.STRING, 6), e.writeString(this.display_layout), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var v = e.exports.Vote = function(e) {
				this.affects_karma = null, this.affects_score = null, this.author_id = null, e && (void 0 !== e.affects_karma && null !== e.affects_karma && (this.affects_karma = e.affects_karma), void 0 !== e.affects_score && null !== e.affects_score && (this.affects_score = e.affects_score), void 0 !== e.author_id && null !== e.author_id && (this.author_id = e.author_id))
			};
			v.prototype = {}, v.prototype.write = function(e) {
				e.writeStructBegin("Vote"), null !== this.affects_karma && void 0 !== this.affects_karma && (e.writeFieldBegin("affects_karma", r.Type.BOOL, 1), e.writeBool(this.affects_karma), e.writeFieldEnd()), null !== this.affects_score && void 0 !== this.affects_score && (e.writeFieldBegin("affects_score", r.Type.BOOL, 2), e.writeBool(this.affects_score), e.writeFieldEnd()), null !== this.author_id && void 0 !== this.author_id && (e.writeFieldBegin("author_id", r.Type.STRING, 3), e.writeString(this.author_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var y = e.exports.ViewStats = function(e) {
				this.num_comments_viewed = null, this.comments_viewed_list = null, e && (void 0 !== e.num_comments_viewed && null !== e.num_comments_viewed && (this.num_comments_viewed = e.num_comments_viewed), void 0 !== e.comments_viewed_list && null !== e.comments_viewed_list && (this.comments_viewed_list = r.copyList(e.comments_viewed_list, [null])))
			};
			y.prototype = {}, y.prototype.write = function(e) {
				if (e.writeStructBegin("ViewStats"), null !== this.num_comments_viewed && void 0 !== this.num_comments_viewed && (e.writeFieldBegin("num_comments_viewed", r.Type.I64, 1), e.writeI64(this.num_comments_viewed), e.writeFieldEnd()), null !== this.comments_viewed_list && void 0 !== this.comments_viewed_list) {
					for (var t in e.writeFieldBegin("comments_viewed_list", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.comments_viewed_list.length), this.comments_viewed_list) this.comments_viewed_list.hasOwnProperty(t) && (t = this.comments_viewed_list[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/cookie_monitor_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CookieMonitor = function(e) {
					this.cookie_names = null, e && void 0 !== e.cookie_names && null !== e.cookie_names && (this.cookie_names = r.copyList(e.cookie_names, [null]))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("CookieMonitor"), null !== this.cookie_names && void 0 !== this.cookie_names) {
					for (var t in e.writeFieldBegin("cookie_names", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.cookie_names.length), this.cookie_names) this.cookie_names.hasOwnProperty(t) && (t = this.cookie_names[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/crawler_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Crawler = function(e) {
					this.name = null, e && void 0 !== e.name && null !== e.name && (this.name = e.name)
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Crawler"), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 1), e.writeString(this.name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/credit_card_form_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CreditCardForm = function(e) {
					this.completed_fields = null, this.uncompleted_fields = null, this.submitted = null, this.success = null, this.field_errors = null, this.submission_error = null, e && (void 0 !== e.completed_fields && null !== e.completed_fields && (this.completed_fields = r.copyList(e.completed_fields, [null])), void 0 !== e.uncompleted_fields && null !== e.uncompleted_fields && (this.uncompleted_fields = r.copyList(e.uncompleted_fields, [null])), void 0 !== e.submitted && null !== e.submitted && (this.submitted = e.submitted), void 0 !== e.success && null !== e.success && (this.success = e.success), void 0 !== e.field_errors && null !== e.field_errors && (this.field_errors = e.field_errors), void 0 !== e.submission_error && null !== e.submission_error && (this.submission_error = e.submission_error))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("CreditCardForm"), null !== this.completed_fields && void 0 !== this.completed_fields) {
					for (var t in e.writeFieldBegin("completed_fields", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.completed_fields.length), this.completed_fields) this.completed_fields.hasOwnProperty(t) && (t = this.completed_fields[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.uncompleted_fields && void 0 !== this.uncompleted_fields) {
					for (var i in e.writeFieldBegin("uncompleted_fields", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.uncompleted_fields.length), this.uncompleted_fields) this.uncompleted_fields.hasOwnProperty(i) && (i = this.uncompleted_fields[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.submitted && void 0 !== this.submitted && (e.writeFieldBegin("submitted", r.Type.BOOL, 3), e.writeBool(this.submitted), e.writeFieldEnd()), null !== this.success && void 0 !== this.success && (e.writeFieldBegin("success", r.Type.BOOL, 4), e.writeBool(this.success), e.writeFieldEnd()), null !== this.field_errors && void 0 !== this.field_errors && (e.writeFieldBegin("field_errors", r.Type.STRING, 5), e.writeString(this.field_errors), e.writeFieldEnd()), null !== this.submission_error && void 0 !== this.submission_error && (e.writeFieldBegin("submission_error", r.Type.STRING, 6), e.writeString(this.submission_error), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/crowd_control_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CrowdControl = function(e) {
					this.collapse_reasons = null, this.rating_threshold = null, e && (void 0 !== e.collapse_reasons && null !== e.collapse_reasons && (this.collapse_reasons = r.copyList(e.collapse_reasons, [null])), void 0 !== e.rating_threshold && null !== e.rating_threshold && (this.rating_threshold = e.rating_threshold))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("CrowdControl"), null !== this.collapse_reasons && void 0 !== this.collapse_reasons) {
					for (var t in e.writeFieldBegin("collapse_reasons", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.collapse_reasons.length), this.collapse_reasons) this.collapse_reasons.hasOwnProperty(t) && (t = this.collapse_reasons[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.rating_threshold && void 0 !== this.rating_threshold && (e.writeFieldBegin("rating_threshold", r.Type.STRING, 2), e.writeString(this.rating_threshold), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/crowd_source_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CrowdSource = function(e) {
					this.place_id = null, this.geo_country = null, this.geo_region = null, this.geo_city = null, this.old_place_id = null, this.old_geo_country = null, this.old_geo_region = null, this.old_geo_city = null, e && (void 0 !== e.place_id && null !== e.place_id && (this.place_id = e.place_id), void 0 !== e.geo_country && null !== e.geo_country && (this.geo_country = e.geo_country), void 0 !== e.geo_region && null !== e.geo_region && (this.geo_region = e.geo_region), void 0 !== e.geo_city && null !== e.geo_city && (this.geo_city = e.geo_city), void 0 !== e.old_place_id && null !== e.old_place_id && (this.old_place_id = e.old_place_id), void 0 !== e.old_geo_country && null !== e.old_geo_country && (this.old_geo_country = e.old_geo_country), void 0 !== e.old_geo_region && null !== e.old_geo_region && (this.old_geo_region = e.old_geo_region), void 0 !== e.old_geo_city && null !== e.old_geo_city && (this.old_geo_city = e.old_geo_city))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("CrowdSource"), null !== this.place_id && void 0 !== this.place_id && (e.writeFieldBegin("place_id", r.Type.STRING, 1), e.writeString(this.place_id), e.writeFieldEnd()), null !== this.geo_country && void 0 !== this.geo_country && (e.writeFieldBegin("geo_country", r.Type.STRING, 2), e.writeString(this.geo_country), e.writeFieldEnd()), null !== this.geo_region && void 0 !== this.geo_region && (e.writeFieldBegin("geo_region", r.Type.STRING, 3), e.writeString(this.geo_region), e.writeFieldEnd()), null !== this.geo_city && void 0 !== this.geo_city && (e.writeFieldBegin("geo_city", r.Type.STRING, 4), e.writeString(this.geo_city), e.writeFieldEnd()), null !== this.old_place_id && void 0 !== this.old_place_id && (e.writeFieldBegin("old_place_id", r.Type.STRING, 5), e.writeString(this.old_place_id), e.writeFieldEnd()), null !== this.old_geo_country && void 0 !== this.old_geo_country && (e.writeFieldBegin("old_geo_country", r.Type.STRING, 6), e.writeString(this.old_geo_country), e.writeFieldEnd()), null !== this.old_geo_region && void 0 !== this.old_geo_region && (e.writeFieldBegin("old_geo_region", r.Type.STRING, 7), e.writeString(this.old_geo_region), e.writeFieldEnd()), null !== this.old_geo_city && void 0 !== this.old_geo_city && (e.writeFieldBegin("old_geo_city", r.Type.STRING, 8), e.writeString(this.old_geo_city), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/custom_feed_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.CustomFeed = function(e) {
					this.id = null, this.owner_id = null, this.number_subreddits = null, this.number_followers = null, this.is_nsfw = null, this.cover_art_url = null, this.visibility = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.owner_id && null !== e.owner_id && (this.owner_id = e.owner_id), void 0 !== e.number_subreddits && null !== e.number_subreddits && (this.number_subreddits = e.number_subreddits), void 0 !== e.number_followers && null !== e.number_followers && (this.number_followers = e.number_followers), void 0 !== e.is_nsfw && null !== e.is_nsfw && (this.is_nsfw = e.is_nsfw), void 0 !== e.cover_art_url && null !== e.cover_art_url && (this.cover_art_url = e.cover_art_url), void 0 !== e.visibility && null !== e.visibility && (this.visibility = e.visibility))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("CustomFeed"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.owner_id && void 0 !== this.owner_id && (e.writeFieldBegin("owner_id", r.Type.STRING, 2), e.writeString(this.owner_id), e.writeFieldEnd()), null !== this.number_subreddits && void 0 !== this.number_subreddits && (e.writeFieldBegin("number_subreddits", r.Type.I32, 3), e.writeI32(this.number_subreddits), e.writeFieldEnd()), null !== this.number_followers && void 0 !== this.number_followers && (e.writeFieldBegin("number_followers", r.Type.I32, 4), e.writeI32(this.number_followers), e.writeFieldEnd()), null !== this.is_nsfw && void 0 !== this.is_nsfw && (e.writeFieldBegin("is_nsfw", r.Type.BOOL, 5), e.writeBool(this.is_nsfw), e.writeFieldEnd()), null !== this.cover_art_url && void 0 !== this.cover_art_url && (e.writeFieldBegin("cover_art_url", r.Type.STRING, 6), e.writeString(this.cover_art_url), e.writeFieldEnd()), null !== this.visibility && void 0 !== this.visibility && (e.writeFieldBegin("visibility", r.Type.STRING, 7), e.writeString(this.visibility), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/device_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Screen = function(e) {
					this.width = null, this.height = null, this.viewport_width = null, this.viewport_height = null, this.view_type = null, this.theme = null, this.in_focus = null, this.browser_tab_id = null, this.scroll_position = null, this.app_font_size_delta = null, this.ios_font_size = null, this.android_font_size = null, this.auto_dark_mode = null, e && (void 0 !== e.width && null !== e.width && (this.width = e.width), void 0 !== e.height && null !== e.height && (this.height = e.height), void 0 !== e.viewport_width && null !== e.viewport_width && (this.viewport_width = e.viewport_width), void 0 !== e.viewport_height && null !== e.viewport_height && (this.viewport_height = e.viewport_height), void 0 !== e.view_type && null !== e.view_type && (this.view_type = e.view_type), void 0 !== e.theme && null !== e.theme && (this.theme = e.theme), void 0 !== e.in_focus && null !== e.in_focus && (this.in_focus = e.in_focus), void 0 !== e.browser_tab_id && null !== e.browser_tab_id && (this.browser_tab_id = e.browser_tab_id), void 0 !== e.scroll_position && null !== e.scroll_position && (this.scroll_position = e.scroll_position), void 0 !== e.app_font_size_delta && null !== e.app_font_size_delta && (this.app_font_size_delta = e.app_font_size_delta), void 0 !== e.ios_font_size && null !== e.ios_font_size && (this.ios_font_size = e.ios_font_size), void 0 !== e.android_font_size && null !== e.android_font_size && (this.android_font_size = e.android_font_size), void 0 !== e.auto_dark_mode && null !== e.auto_dark_mode && (this.auto_dark_mode = e.auto_dark_mode))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Screen"), null !== this.width && void 0 !== this.width && (e.writeFieldBegin("width", r.Type.I32, 1), e.writeI32(this.width), e.writeFieldEnd()), null !== this.height && void 0 !== this.height && (e.writeFieldBegin("height", r.Type.I32, 2), e.writeI32(this.height), e.writeFieldEnd()), null !== this.viewport_width && void 0 !== this.viewport_width && (e.writeFieldBegin("viewport_width", r.Type.I32, 3), e.writeI32(this.viewport_width), e.writeFieldEnd()), null !== this.viewport_height && void 0 !== this.viewport_height && (e.writeFieldBegin("viewport_height", r.Type.I32, 4), e.writeI32(this.viewport_height), e.writeFieldEnd()), null !== this.view_type && void 0 !== this.view_type && (e.writeFieldBegin("view_type", r.Type.STRING, 5), e.writeString(this.view_type), e.writeFieldEnd()), null !== this.theme && void 0 !== this.theme && (e.writeFieldBegin("theme", r.Type.STRING, 6), e.writeString(this.theme), e.writeFieldEnd()), null !== this.in_focus && void 0 !== this.in_focus && (e.writeFieldBegin("in_focus", r.Type.BOOL, 7), e.writeBool(this.in_focus), e.writeFieldEnd()), null !== this.browser_tab_id && void 0 !== this.browser_tab_id && (e.writeFieldBegin("browser_tab_id", r.Type.STRING, 8), e.writeString(this.browser_tab_id), e.writeFieldEnd()), null !== this.scroll_position && void 0 !== this.scroll_position && (e.writeFieldBegin("scroll_position", r.Type.I32, 9), e.writeI32(this.scroll_position), e.writeFieldEnd()), null !== this.app_font_size_delta && void 0 !== this.app_font_size_delta && (e.writeFieldBegin("app_font_size_delta", r.Type.I32, 10), e.writeI32(this.app_font_size_delta), e.writeFieldEnd()), null !== this.ios_font_size && void 0 !== this.ios_font_size && (e.writeFieldBegin("ios_font_size", r.Type.STRING, 11), e.writeString(this.ios_font_size), e.writeFieldEnd()), null !== this.android_font_size && void 0 !== this.android_font_size && (e.writeFieldBegin("android_font_size", r.Type.DOUBLE, 12), e.writeDouble(this.android_font_size), e.writeFieldEnd()), null !== this.auto_dark_mode && void 0 !== this.auto_dark_mode && (e.writeFieldBegin("auto_dark_mode", r.Type.STRING, 13), e.writeString(this.auto_dark_mode), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Platform = function(e) {
				this.name = null, this.device_id = null, this.device_name = null, this.os_name = null, this.os_version = null, this.browser_name = null, this.browser_version = null, this.fingerprint = null, this.fingerprint_created_timestamp = null, this.year_class = null, this.device_tier = null, this.primary_language = null, this.language_list = null, e && (void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.device_id && null !== e.device_id && (this.device_id = e.device_id), void 0 !== e.device_name && null !== e.device_name && (this.device_name = e.device_name), void 0 !== e.os_name && null !== e.os_name && (this.os_name = e.os_name), void 0 !== e.os_version && null !== e.os_version && (this.os_version = e.os_version), void 0 !== e.browser_name && null !== e.browser_name && (this.browser_name = e.browser_name), void 0 !== e.browser_version && null !== e.browser_version && (this.browser_version = e.browser_version), void 0 !== e.fingerprint && null !== e.fingerprint && (this.fingerprint = e.fingerprint), void 0 !== e.fingerprint_created_timestamp && null !== e.fingerprint_created_timestamp && (this.fingerprint_created_timestamp = e.fingerprint_created_timestamp), void 0 !== e.year_class && null !== e.year_class && (this.year_class = e.year_class), void 0 !== e.device_tier && null !== e.device_tier && (this.device_tier = e.device_tier), void 0 !== e.primary_language && null !== e.primary_language && (this.primary_language = e.primary_language), void 0 !== e.language_list && null !== e.language_list && (this.language_list = e.language_list))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Platform"), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 1), e.writeString(this.name), e.writeFieldEnd()), null !== this.device_id && void 0 !== this.device_id && (e.writeFieldBegin("device_id", r.Type.STRING, 2), e.writeString(this.device_id), e.writeFieldEnd()), null !== this.device_name && void 0 !== this.device_name && (e.writeFieldBegin("device_name", r.Type.STRING, 3), e.writeString(this.device_name), e.writeFieldEnd()), null !== this.os_name && void 0 !== this.os_name && (e.writeFieldBegin("os_name", r.Type.STRING, 4), e.writeString(this.os_name), e.writeFieldEnd()), null !== this.os_version && void 0 !== this.os_version && (e.writeFieldBegin("os_version", r.Type.STRING, 5), e.writeString(this.os_version), e.writeFieldEnd()), null !== this.browser_name && void 0 !== this.browser_name && (e.writeFieldBegin("browser_name", r.Type.STRING, 6), e.writeString(this.browser_name), e.writeFieldEnd()), null !== this.browser_version && void 0 !== this.browser_version && (e.writeFieldBegin("browser_version", r.Type.STRING, 7), e.writeString(this.browser_version), e.writeFieldEnd()), null !== this.fingerprint && void 0 !== this.fingerprint && (e.writeFieldBegin("fingerprint", r.Type.STRING, 8), e.writeString(this.fingerprint), e.writeFieldEnd()), null !== this.fingerprint_created_timestamp && void 0 !== this.fingerprint_created_timestamp && (e.writeFieldBegin("fingerprint_created_timestamp", r.Type.I64, 9), e.writeI64(this.fingerprint_created_timestamp), e.writeFieldEnd()), null !== this.year_class && void 0 !== this.year_class && (e.writeFieldBegin("year_class", r.Type.I32, 10), e.writeI32(this.year_class), e.writeFieldEnd()), null !== this.device_tier && void 0 !== this.device_tier && (e.writeFieldBegin("device_tier", r.Type.STRING, 11), e.writeString(this.device_tier), e.writeFieldEnd()), null !== this.primary_language && void 0 !== this.primary_language && (e.writeFieldBegin("primary_language", r.Type.STRING, 12), e.writeString(this.primary_language), e.writeFieldEnd()), null !== this.language_list && void 0 !== this.language_list && (e.writeFieldBegin("language_list", r.Type.STRING, 13), e.writeString(this.language_list), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.App = function(e) {
				if (this.version = null, this.name = null, this.install_timestamp = null, this.build_number = null, this.build_timestamp = null, e) {
					if (void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 === e.name || null === e.name) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field name is unset!");
					this.name = e.name, void 0 !== e.install_timestamp && null !== e.install_timestamp && (this.install_timestamp = e.install_timestamp), void 0 !== e.build_number && null !== e.build_number && (this.build_number = e.build_number), void 0 !== e.build_timestamp && null !== e.build_timestamp && (this.build_timestamp = e.build_timestamp)
				}
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("App"), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 1), e.writeString(this.version), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.install_timestamp && void 0 !== this.install_timestamp && (e.writeFieldBegin("install_timestamp", r.Type.I64, 3), e.writeI64(this.install_timestamp), e.writeFieldEnd()), null !== this.build_number && void 0 !== this.build_number && (e.writeFieldBegin("build_number", r.Type.I32, 4), e.writeI32(this.build_number), e.writeFieldEnd()), null !== this.build_timestamp && void 0 !== this.build_timestamp && (e.writeFieldBegin("build_timestamp", r.Type.I64, 5), e.writeI64(this.build_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/domain_ban_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.DomainBan = function(e) {
					this.url = null, this.markdown = null, this.no_email = null, this.shame = null, this.disable_approve = null, this.ban_message = null, this.shame_message = null, this.regex = null, this.inspector_exempt_regex = null, this.submit_banned = null, e && (void 0 !== e.url && null !== e.url && (this.url = e.url), void 0 !== e.markdown && null !== e.markdown && (this.markdown = e.markdown), void 0 !== e.no_email && null !== e.no_email && (this.no_email = e.no_email), void 0 !== e.shame && null !== e.shame && (this.shame = e.shame), void 0 !== e.disable_approve && null !== e.disable_approve && (this.disable_approve = e.disable_approve), void 0 !== e.ban_message && null !== e.ban_message && (this.ban_message = e.ban_message), void 0 !== e.shame_message && null !== e.shame_message && (this.shame_message = e.shame_message), void 0 !== e.regex && null !== e.regex && (this.regex = e.regex), void 0 !== e.inspector_exempt_regex && null !== e.inspector_exempt_regex && (this.inspector_exempt_regex = e.inspector_exempt_regex), void 0 !== e.submit_banned && null !== e.submit_banned && (this.submit_banned = e.submit_banned))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("DomainBan"), null !== this.url && void 0 !== this.url && (e.writeFieldBegin("url", r.Type.STRING, 1), e.writeString(this.url), e.writeFieldEnd()), null !== this.markdown && void 0 !== this.markdown && (e.writeFieldBegin("markdown", r.Type.BOOL, 2), e.writeBool(this.markdown), e.writeFieldEnd()), null !== this.no_email && void 0 !== this.no_email && (e.writeFieldBegin("no_email", r.Type.BOOL, 3), e.writeBool(this.no_email), e.writeFieldEnd()), null !== this.shame && void 0 !== this.shame && (e.writeFieldBegin("shame", r.Type.BOOL, 4), e.writeBool(this.shame), e.writeFieldEnd()), null !== this.disable_approve && void 0 !== this.disable_approve && (e.writeFieldBegin("disable_approve", r.Type.BOOL, 5), e.writeBool(this.disable_approve), e.writeFieldEnd()), null !== this.ban_message && void 0 !== this.ban_message && (e.writeFieldBegin("ban_message", r.Type.STRING, 6), e.writeString(this.ban_message), e.writeFieldEnd()), null !== this.shame_message && void 0 !== this.shame_message && (e.writeFieldBegin("shame_message", r.Type.STRING, 7), e.writeString(this.shame_message), e.writeFieldEnd()), null !== this.regex && void 0 !== this.regex && (e.writeFieldBegin("regex", r.Type.STRING, 8), e.writeString(this.regex), e.writeFieldEnd()), null !== this.inspector_exempt_regex && void 0 !== this.inspector_exempt_regex && (e.writeFieldBegin("inspector_exempt_regex", r.Type.STRING, 9), e.writeString(this.inspector_exempt_regex), e.writeFieldEnd()), null !== this.submit_banned && void 0 !== this.submit_banned && (e.writeFieldBegin("submit_banned", r.Type.BOOL, 10), e.writeBool(this.submit_banned), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/econ_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Purchase = function(e) {
					this.type = null, this.order_id = null, this.product_type = null, this.product_id = null, this.product_version = null, this.subscription_id = null, this.count = null, this.price_micros = null, this.currency = null, this.days_remaining = null, this.count_remaining = null, this.local_price_micros = null, this.local_currency = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.order_id && null !== e.order_id && (this.order_id = e.order_id), void 0 !== e.product_type && null !== e.product_type && (this.product_type = e.product_type), void 0 !== e.product_id && null !== e.product_id && (this.product_id = e.product_id), void 0 !== e.product_version && null !== e.product_version && (this.product_version = e.product_version), void 0 !== e.subscription_id && null !== e.subscription_id && (this.subscription_id = e.subscription_id), void 0 !== e.count && null !== e.count && (this.count = e.count), void 0 !== e.price_micros && null !== e.price_micros && (this.price_micros = e.price_micros), void 0 !== e.currency && null !== e.currency && (this.currency = e.currency), void 0 !== e.days_remaining && null !== e.days_remaining && (this.days_remaining = e.days_remaining), void 0 !== e.count_remaining && null !== e.count_remaining && (this.count_remaining = e.count_remaining), void 0 !== e.local_price_micros && null !== e.local_price_micros && (this.local_price_micros = e.local_price_micros), void 0 !== e.local_currency && null !== e.local_currency && (this.local_currency = e.local_currency))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Purchase"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.order_id && void 0 !== this.order_id && (e.writeFieldBegin("order_id", r.Type.STRING, 2), e.writeString(this.order_id), e.writeFieldEnd()), null !== this.product_type && void 0 !== this.product_type && (e.writeFieldBegin("product_type", r.Type.STRING, 3), e.writeString(this.product_type), e.writeFieldEnd()), null !== this.product_id && void 0 !== this.product_id && (e.writeFieldBegin("product_id", r.Type.STRING, 4), e.writeString(this.product_id), e.writeFieldEnd()), null !== this.product_version && void 0 !== this.product_version && (e.writeFieldBegin("product_version", r.Type.I32, 5), e.writeI32(this.product_version), e.writeFieldEnd()), null !== this.subscription_id && void 0 !== this.subscription_id && (e.writeFieldBegin("subscription_id", r.Type.STRING, 6), e.writeString(this.subscription_id), e.writeFieldEnd()), null !== this.count && void 0 !== this.count && (e.writeFieldBegin("count", r.Type.I64, 7), e.writeI64(this.count), e.writeFieldEnd()), null !== this.price_micros && void 0 !== this.price_micros && (e.writeFieldBegin("price_micros", r.Type.I64, 8), e.writeI64(this.price_micros), e.writeFieldEnd()), null !== this.currency && void 0 !== this.currency && (e.writeFieldBegin("currency", r.Type.STRING, 9), e.writeString(this.currency), e.writeFieldEnd()), null !== this.days_remaining && void 0 !== this.days_remaining && (e.writeFieldBegin("days_remaining", r.Type.I32, 10), e.writeI32(this.days_remaining), e.writeFieldEnd()), null !== this.count_remaining && void 0 !== this.count_remaining && (e.writeFieldBegin("count_remaining", r.Type.I64, 11), e.writeI64(this.count_remaining), e.writeFieldEnd()), null !== this.local_price_micros && void 0 !== this.local_price_micros && (e.writeFieldBegin("local_price_micros", r.Type.I64, 12), e.writeI64(this.local_price_micros), e.writeFieldEnd()), null !== this.local_currency && void 0 !== this.local_currency && (e.writeFieldBegin("local_currency", r.Type.STRING, 13), e.writeString(this.local_currency), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/email_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Email = function(e) {
					this.subject_line = null, this.preview_text = null, this.type = null, this.header_text = null, this.post_has_thumbnail = null, this.listing_source = null, e && (void 0 !== e.subject_line && null !== e.subject_line && (this.subject_line = e.subject_line), void 0 !== e.preview_text && null !== e.preview_text && (this.preview_text = e.preview_text), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.header_text && null !== e.header_text && (this.header_text = e.header_text), void 0 !== e.post_has_thumbnail && null !== e.post_has_thumbnail && (this.post_has_thumbnail = e.post_has_thumbnail), void 0 !== e.listing_source && null !== e.listing_source && (this.listing_source = e.listing_source))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Email"), null !== this.subject_line && void 0 !== this.subject_line && (e.writeFieldBegin("subject_line", r.Type.STRING, 1), e.writeString(this.subject_line), e.writeFieldEnd()), null !== this.preview_text && void 0 !== this.preview_text && (e.writeFieldBegin("preview_text", r.Type.STRING, 2), e.writeString(this.preview_text), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 3), e.writeString(this.type), e.writeFieldEnd()), null !== this.header_text && void 0 !== this.header_text && (e.writeFieldBegin("header_text", r.Type.STRING, 4), e.writeString(this.header_text), e.writeFieldEnd()), null !== this.post_has_thumbnail && void 0 !== this.post_has_thumbnail && (e.writeFieldBegin("post_has_thumbnail", r.Type.BOOL, 5), e.writeBool(this.post_has_thumbnail), e.writeFieldEnd()), null !== this.listing_source && void 0 !== this.listing_source && (e.writeFieldBegin("listing_source", r.Type.STRING, 6), e.writeString(this.listing_source), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/event_types.js": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/es6.regexp.search.js");
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/action_types.js")),
				o = i("./src/telemetry/eventSchemas/adevent_types.js"),
				d = i("./src/telemetry/eventSchemas/brand_types.js"),
				a = i("./src/telemetry/eventSchemas/category_header_types.js"),
				l = i("./src/telemetry/eventSchemas/content_types.js"),
				u = i("./src/telemetry/eventSchemas/device_types.js"),
				c = i("./src/telemetry/eventSchemas/request_types.js"),
				_ = i("./src/telemetry/eventSchemas/session_types.js"),
				m = i("./src/telemetry/eventSchemas/subreddit_types.js"),
				p = i("./src/telemetry/eventSchemas/timer_types.js"),
				h = (i("./src/telemetry/eventSchemas/typedefs_types.js"), i("./src/telemetry/eventSchemas/user_types.js")),
				f = i("./src/telemetry/eventSchemas/chat_types.js"),
				b = i("./src/telemetry/eventSchemas/security_types.js"),
				g = i("./src/telemetry/eventSchemas/midas_types.js"),
				w = i("./src/telemetry/eventSchemas/experiment_types.js"),
				v = i("./src/telemetry/eventSchemas/notification_types.js"),
				y = i("./src/telemetry/eventSchemas/search_types.js"),
				E = i("./src/telemetry/eventSchemas/admin_types.js"),
				S = i("./src/telemetry/eventSchemas/admin_action_types.js"),
				T = i("./src/telemetry/eventSchemas/ticket_types.js"),
				O = i("./src/telemetry/eventSchemas/gold_types.js"),
				I = i("./src/telemetry/eventSchemas/app_icons_types.js"),
				R = i("./src/telemetry/eventSchemas/payment_types.js"),
				F = i("./src/telemetry/eventSchemas/outbound_types.js"),
				N = i("./src/telemetry/eventSchemas/carousel_types.js"),
				C = i("./src/telemetry/eventSchemas/adblock_types.js"),
				j = i("./src/telemetry/eventSchemas/email_types.js"),
				A = i("./src/telemetry/eventSchemas/metaflair_types.js"),
				x = i("./src/telemetry/eventSchemas/grapeshot_classification_types.js"),
				D = i("./src/telemetry/eventSchemas/post_draft_types.js"),
				P = i("./src/telemetry/eventSchemas/setting_types.js"),
				L = i("./src/telemetry/eventSchemas/visibility_types.js"),
				k = i("./src/telemetry/eventSchemas/webhook_types.js"),
				B = i("./src/telemetry/eventSchemas/relevance_types.js"),
				M = i("./src/telemetry/eventSchemas/report_types.js"),
				U = i("./src/telemetry/eventSchemas/metasearch_types.js"),
				G = i("./src/telemetry/eventSchemas/postflair_types.js"),
				q = i("./src/telemetry/eventSchemas/thirdpartybadge_types.js"),
				V = i("./src/telemetry/eventSchemas/banner_types.js"),
				H = i("./src/telemetry/eventSchemas/tooltip_types.js"),
				W = i("./src/telemetry/eventSchemas/upload_types.js"),
				z = i("./src/telemetry/eventSchemas/live_thread_types.js"),
				K = i("./src/telemetry/eventSchemas/popup_types.js"),
				Y = i("./src/telemetry/eventSchemas/moderator_types.js"),
				$ = i("./src/telemetry/eventSchemas/userflair_types.js"),
				Q = i("./src/telemetry/eventSchemas/topic_tag_types.js"),
				J = i("./src/telemetry/eventSchemas/res_types.js"),
				X = (i("./src/telemetry/eventSchemas/adtypedefs_types.js"), i("./src/telemetry/eventSchemas/adcampaign_types.js")),
				Z = i("./src/telemetry/eventSchemas/ad_types.js"),
				ee = i("./src/telemetry/eventSchemas/adgroup_types.js"),
				te = i("./src/telemetry/eventSchemas/adtargeting_types.js"),
				ie = i("./src/telemetry/eventSchemas/businessinfo_types.js"),
				ne = i("./src/telemetry/eventSchemas/billinginfo_types.js"),
				re = i("./src/telemetry/eventSchemas/content_tag_types.js"),
				se = i("./src/telemetry/eventSchemas/crawler_types.js"),
				oe = i("./src/telemetry/eventSchemas/custom_feed_types.js"),
				de = i("./src/telemetry/eventSchemas/pwa_types.js"),
				ae = i("./src/telemetry/eventSchemas/rater_tag_types.js"),
				le = i("./src/telemetry/eventSchemas/seo_types.js"),
				ue = i("./src/telemetry/eventSchemas/funding_instrument_types.js"),
				ce = i("./src/telemetry/eventSchemas/perspective_types.js"),
				_e = i("./src/telemetry/eventSchemas/comment_draft_types.js"),
				me = i("./src/telemetry/eventSchemas/ml_model_types.js"),
				pe = i("./src/telemetry/eventSchemas/topic_metadata_types.js"),
				he = i("./src/telemetry/eventSchemas/domain_ban_types.js"),
				fe = i("./src/telemetry/eventSchemas/legal_export_request_types.js"),
				be = i("./src/telemetry/eventSchemas/post_requirement_types.js"),
				ge = i("./src/telemetry/eventSchemas/target_ip_types.js"),
				we = i("./src/telemetry/eventSchemas/crowd_control_types.js"),
				ve = i("./src/telemetry/eventSchemas/scheduled_post_types.js"),
				ye = i("./src/telemetry/eventSchemas/poll_types.js"),
				Ee = i("./src/telemetry/eventSchemas/audit_types.js"),
				Se = i("./src/telemetry/eventSchemas/spamurai_types.js"),
				Te = i("./src/telemetry/eventSchemas/bulk_action_job_types.js"),
				Oe = i("./src/telemetry/eventSchemas/geo_block_types.js"),
				Ie = i("./src/telemetry/eventSchemas/imposter_types.js"),
				Re = i("./src/telemetry/eventSchemas/broadcast_types.js"),
				Fe = i("./src/telemetry/eventSchemas/survey_types.js"),
				Ne = i("./src/telemetry/eventSchemas/playback_types.js"),
				Ce = i("./src/telemetry/eventSchemas/bot_detection_types.js"),
				je = i("./src/telemetry/eventSchemas/crowd_source_types.js"),
				Ae = i("./src/telemetry/eventSchemas/announcement_types.js"),
				xe = i("./src/telemetry/eventSchemas/econ_types.js"),
				De = i("./src/telemetry/eventSchemas/powerups_types.js"),
				Pe = i("./src/telemetry/eventSchemas/predictions_types.js"),
				Le = i("./src/telemetry/eventSchemas/inbox_types.js"),
				ke = i("./src/telemetry/eventSchemas/account_label_types.js"),
				Be = i("./src/telemetry/eventSchemas/taxonomy_types.js"),
				Me = i("./src/telemetry/eventSchemas/trophy_types.js"),
				Ue = i("./src/telemetry/eventSchemas/feature_types.js"),
				Ge = i("./src/telemetry/eventSchemas/mute_types.js"),
				qe = i("./src/telemetry/eventSchemas/credit_card_form_types.js"),
				Ve = i("./src/telemetry/eventSchemas/snoovatar_types.js"),
				He = i("./src/telemetry/eventSchemas/feed_types.js"),
				We = i("./src/telemetry/eventSchemas/progress_module_types.js"),
				ze = i("./src/telemetry/eventSchemas/navigation_session_types.js"),
				Ke = i("./src/telemetry/eventSchemas/afd_second_types.js"),
				Ye = i("./src/telemetry/eventSchemas/atc_types.js"),
				$e = i("./src/telemetry/eventSchemas/reward_types.js"),
				Qe = i("./src/telemetry/eventSchemas/liveaudio_types.js"),
				Je = i("./src/telemetry/eventSchemas/modmail_types.js"),
				Xe = i("./src/telemetry/eventSchemas/bulk_messenger_types.js"),
				Ze = i("./src/telemetry/eventSchemas/restrict_types.js"),
				et = i("./src/telemetry/eventSchemas/video_error_report_types.js"),
				tt = i("./src/telemetry/eventSchemas/social_link_types.js"),
				it = i("./src/telemetry/eventSchemas/acl_check_types.js"),
				nt = i("./src/telemetry/eventSchemas/cookie_monitor_types.js"),
				rt = i("./src/telemetry/eventSchemas/camera_feature_types.js"),
				st = i("./src/telemetry/eventSchemas/registration_form_types.js"),
				ot = i("./src/telemetry/eventSchemas/modqueue_types.js"),
				dt = i("./src/telemetry/eventSchemas/recap_card_types.js"),
				at = i("./src/telemetry/eventSchemas/modnote_types.js"),
				lt = e.exports = {},
				ut = e.exports.Event = function(e) {
					if (this.source = null, this.action = null, this.noun = null, this.endpoint_timestamp = null, this.client_timestamp = null, this.uuid = null, this.utc_offset = null, this.correlation_id = null, this.screenview_id = null, this.post = null, this.listing = null, this.comment = null, this.notification = null, this.oauth = null, this.screen = null, this.app = null, this.platform = null, this.request = null, this.referrer = null, this.dom_timer = null, this.user = null, this.user_preferences = null, this.subreddit = null, this.session = null, this.action_info = null, this.expand = null, this.media = null, this.chat = null, this.post_composer = null, this.widget = null, this.profile = null, this.onboarding = null, this.timer = null, this.tfa = null, this.api_response = null, this.api = null, this.discovery_unit = null, this.experiment = null, this.share = null, this.user_subreddit = null, this.notification_request = null, this.search = null, this.message = null, this.admin = null, this.ticket = null, this.mailroom_request = null, this.comment_composer = null, this.gold_purchase = null, this.payment = null, this.news = null, this.outbound = null, this.click_test = null, this.carousel = null, this.adblock = null, this.email = null, this.metaflair = null, this.post_draft = null, this.setting = null, this.visibility = null, this.webhook = null, this.relevance_model = null, this.meta_search = null, this.post_flair = null, this.admin_action = null, this.zipkin = null, this.edit = null, this.post_event = null, this.post_collection = null, this.third_party_badge = null, this.brand = null, this.messenger_request = null, this.banner = null, this.tooltip = null, this.upload = null, this.csai_media = null, this.category_header = null, this.report = null, this.live_thread = null, this.ad_request = null, this.ad_decision = null, this.ad_push = null, this.vote = null, this.popup = null, this.mod_action = null, this.user_flair = null, this.topic_tag = null, this.res = null, this.ad = null, this.ad_campaign = null, this.ad_group = null, this.ad_targeting = null, this.business_info = null, this.billing_info = null, this.reddar_ticket = null, this.zendesk_ticket = null, this.target_user = null, this.crawler = null, this.response = null, this.custom_feed = null, this.pwa = null, this.seo = null, this.ncmec_report = null, this.funding_instrument = null, this.grapeshot_classification = null, this.perspective = null, this.comment_draft = null, this.target_post = null, this.ml_model = null, this.topic_metadata = null, this.chat_home_feed_boosting = null, this.domain_ban = null, this.legal_export_request = null, this.post_requirement = null, this.target_ip = null, this.crowd_control = null, this.reddar_ticket_content = null, this.scheduled_post = null, this.poll = null, this.reddar_audit = null, this.reddar_audit_ticket = null, this.target_subreddit = null, this.spamurai_action = null, this.ad_brand_safety = null, this.bulk_action_job = null, this.target_comment = null, this.target_message = null, this.reroute_rule = null, this.reddar_queue = null, this.geo_block = null, this.programmatic = null, this.csai_content_report = null, this.imposter = null, this.broadcast = null, this.survey = null, this.playback = null, this.bot_detection = null, this.crowd_source = null, this.announcement = null, this.purchase = null, this.powerups = null, this.account_label = null, this.inbox = null, this.gallery = null, this.trophy = null, this.feature = null, this.admin_team = null, this.mute = null, this.content_tag = null, this.rater_tag = null, this.credit_card_form = null, this.ad_click = null, this.snoovatar = null, this.feed = null, this.progress_module = null, this.app_icon = null, this.ad_metadata = null, this.predictions = null, this.navigation_session = null, this.afd_second = null, this.atc = null, this.view_stats = null, this.reward_info = null, this.live_audio_room = null, this.live_audio_user = null, this.modmail_conversation = null, this.modmail_message = null, this.bulk_messenger = null, this.restrict = null, this.ad_pixel = null, this.video_error_report = null, this.taxonomy = null, this.social_link = null, this.acl_check = null, this.cookie_monitor = null, this.camera_feature = null, this.registration_form = null, this.modqueue = null, this.modqueue_item = null, this.recap_card = null, this.modqueue_trigger = null, this.modnote = null, this.screen_trace = null, this.geo = null, this.user_legacy_id = null, this.content_metadata = null, this.url_parsed = null, this.link_sharing = null, this.create_request_timestamp = null, this.inferred = null, this.event_hmac_key = null, this.batch_load_id = null, this.ip_splitting = null, e) {
						if (void 0 === e.source || null === e.source) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field source is unset!");
						if (this.source = e.source, void 0 === e.action || null === e.action) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field action is unset!");
						if (this.action = e.action, void 0 === e.noun || null === e.noun) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field noun is unset!");
						if (this.noun = e.noun, void 0 !== e.endpoint_timestamp && null !== e.endpoint_timestamp && (this.endpoint_timestamp = e.endpoint_timestamp), void 0 === e.client_timestamp || null === e.client_timestamp) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field client_timestamp is unset!");
						if (this.client_timestamp = e.client_timestamp, void 0 === e.uuid || null === e.uuid) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field uuid is unset!");
						this.uuid = e.uuid, void 0 !== e.utc_offset && null !== e.utc_offset && (this.utc_offset = e.utc_offset), void 0 !== e.correlation_id && null !== e.correlation_id && (this.correlation_id = e.correlation_id), void 0 !== e.screenview_id && null !== e.screenview_id && (this.screenview_id = e.screenview_id), void 0 !== e.post && null !== e.post && (this.post = new l.Post(e.post)), void 0 !== e.listing && null !== e.listing && (this.listing = new l.Listing(e.listing)), void 0 !== e.comment && null !== e.comment && (this.comment = new l.Comment(e.comment)), void 0 !== e.notification && null !== e.notification && (this.notification = new l.Notification(e.notification)), void 0 !== e.oauth && null !== e.oauth && (this.oauth = new c.Oauth(e.oauth)), void 0 !== e.screen && null !== e.screen && (this.screen = new u.Screen(e.screen)), void 0 !== e.app && null !== e.app && (this.app = new u.App(e.app)), void 0 !== e.platform && null !== e.platform && (this.platform = new u.Platform(e.platform)), void 0 !== e.request && null !== e.request && (this.request = new c.Request(e.request)), void 0 !== e.referrer && null !== e.referrer && (this.referrer = new c.Referrer(e.referrer)), void 0 !== e.dom_timer && null !== e.dom_timer && (this.dom_timer = new p.DOMTimers(e.dom_timer)), void 0 !== e.user && null !== e.user && (this.user = new h.User(e.user)), void 0 !== e.user_preferences && null !== e.user_preferences && (this.user_preferences = new h.UserPreferences(e.user_preferences)), void 0 !== e.subreddit && null !== e.subreddit && (this.subreddit = new m.Subreddit(e.subreddit)), void 0 !== e.session && null !== e.session && (this.session = new _.Session(e.session)), void 0 !== e.action_info && null !== e.action_info && (this.action_info = new s.ActionInfo(e.action_info)), void 0 !== e.expand && null !== e.expand && (this.expand = new s.Expand(e.expand)), void 0 !== e.media && null !== e.media && (this.media = new l.Media(e.media)), void 0 !== e.chat && null !== e.chat && (this.chat = new f.Chat(e.chat)), void 0 !== e.post_composer && null !== e.post_composer && (this.post_composer = new l.PostComposer(e.post_composer)), void 0 !== e.widget && null !== e.widget && (this.widget = new s.Widget(e.widget)), void 0 !== e.profile && null !== e.profile && (this.profile = new m.Profile(e.profile)), void 0 !== e.onboarding && null !== e.onboarding && (this.onboarding = new l.Onboarding(e.onboarding)), void 0 !== e.timer && null !== e.timer && (this.timer = new p.Timer(e.timer)), void 0 !== e.tfa && null !== e.tfa && (this.tfa = new b.TwoFactorAuth(e.tfa)), void 0 !== e.api_response && null !== e.api_response && (this.api_response = new c.ApiResponse(e.api_response)), void 0 !== e.api && null !== e.api && (this.api = new c.Api(e.api)), void 0 !== e.discovery_unit && null !== e.discovery_unit && (this.discovery_unit = new l.DiscoveryUnit(e.discovery_unit)), void 0 !== e.experiment && null !== e.experiment && (this.experiment = new w.Experiment(e.experiment)), void 0 !== e.share && null !== e.share && (this.share = new s.Share(e.share)), void 0 !== e.user_subreddit && null !== e.user_subreddit && (this.user_subreddit = new h.UserSubreddit(e.user_subreddit)), void 0 !== e.notification_request && null !== e.notification_request && (this.notification_request = new v.NotificationRequest(e.notification_request)), void 0 !== e.search && null !== e.search && (this.search = new y.Search(e.search)), void 0 !== e.message && null !== e.message && (this.message = new l.Message(e.message)), void 0 !== e.admin && null !== e.admin && (this.admin = new E.Admin(e.admin)), void 0 !== e.ticket && null !== e.ticket && (this.ticket = new T.Ticket(e.ticket)), void 0 !== e.mailroom_request && null !== e.mailroom_request && (this.mailroom_request = new v.MailroomRequest(e.mailroom_request)), void 0 !== e.comment_composer && null !== e.comment_composer && (this.comment_composer = new l.CommentComposer(e.comment_composer)), void 0 !== e.gold_purchase && null !== e.gold_purchase && (this.gold_purchase = new O.GoldPurchase(e.gold_purchase)), void 0 !== e.payment && null !== e.payment && (this.payment = new R.Payment(e.payment)), void 0 !== e.news && null !== e.news && (this.news = new l.News(e.news)), void 0 !== e.outbound && null !== e.outbound && (this.outbound = new F.Outbound(e.outbound)), void 0 !== e.click_test && null !== e.click_test && (this.click_test = new w.ClickTest(e.click_test)), void 0 !== e.carousel && null !== e.carousel && (this.carousel = new N.Carousel(e.carousel)), void 0 !== e.adblock && null !== e.adblock && (this.adblock = new C.Adblock(e.adblock)), void 0 !== e.email && null !== e.email && (this.email = new j.Email(e.email)), void 0 !== e.metaflair && null !== e.metaflair && (this.metaflair = new A.MetaFlair(e.metaflair)), void 0 !== e.post_draft && null !== e.post_draft && (this.post_draft = new D.PostDraft(e.post_draft)), void 0 !== e.setting && null !== e.setting && (this.setting = new P.Setting(e.setting)), void 0 !== e.visibility && null !== e.visibility && (this.visibility = new L.Visibility(e.visibility)), void 0 !== e.webhook && null !== e.webhook && (this.webhook = new k.Webhook(e.webhook)), void 0 !== e.relevance_model && null !== e.relevance_model && (this.relevance_model = new B.RelevanceModel(e.relevance_model)), void 0 !== e.meta_search && null !== e.meta_search && (this.meta_search = new U.MetaSearch(e.meta_search)), void 0 !== e.post_flair && null !== e.post_flair && (this.post_flair = new G.PostFlair(e.post_flair)), void 0 !== e.admin_action && null !== e.admin_action && (this.admin_action = new S.AdminAction(e.admin_action)), void 0 !== e.zipkin && null !== e.zipkin && (this.zipkin = new c.Zipkin(e.zipkin)), void 0 !== e.edit && null !== e.edit && (this.edit = new l.Edit(e.edit)), void 0 !== e.post_event && null !== e.post_event && (this.post_event = new l.PostEvent(e.post_event)), void 0 !== e.post_collection && null !== e.post_collection && (this.post_collection = new l.PostCollection(e.post_collection)), void 0 !== e.third_party_badge && null !== e.third_party_badge && (this.third_party_badge = new q.ThirdPartyBadge(e.third_party_badge)), void 0 !== e.brand && null !== e.brand && (this.brand = new d.Brand(e.brand)), void 0 !== e.messenger_request && null !== e.messenger_request && (this.messenger_request = new v.MessengerRequest(e.messenger_request)), void 0 !== e.banner && null !== e.banner && (this.banner = new V.Banner(e.banner)), void 0 !== e.tooltip && null !== e.tooltip && (this.tooltip = new H.Tooltip(e.tooltip)), void 0 !== e.upload && null !== e.upload && (this.upload = new W.Upload(e.upload)), void 0 !== e.csai_media && null !== e.csai_media && (this.csai_media = new S.CSAIMedia(e.csai_media)), void 0 !== e.category_header && null !== e.category_header && (this.category_header = new a.CategoryHeader(e.category_header)), void 0 !== e.report && null !== e.report && (this.report = new M.Report(e.report)), void 0 !== e.live_thread && null !== e.live_thread && (this.live_thread = new z.LiveThread(e.live_thread)), void 0 !== e.ad_request && null !== e.ad_request && (this.ad_request = new o.AdRequest(e.ad_request)), void 0 !== e.ad_decision && null !== e.ad_decision && (this.ad_decision = new o.AdDecision(e.ad_decision)), void 0 !== e.ad_push && null !== e.ad_push && (this.ad_push = new o.AdPush(e.ad_push)), void 0 !== e.vote && null !== e.vote && (this.vote = new l.Vote(e.vote)), void 0 !== e.popup && null !== e.popup && (this.popup = new K.Popup(e.popup)), void 0 !== e.mod_action && null !== e.mod_action && (this.mod_action = new Y.ModAction(e.mod_action)), void 0 !== e.user_flair && null !== e.user_flair && (this.user_flair = new $.UserFlair(e.user_flair)), void 0 !== e.topic_tag && null !== e.topic_tag && (this.topic_tag = new Q.TopicTag(e.topic_tag)), void 0 !== e.res && null !== e.res && (this.res = new J.RES(e.res)), void 0 !== e.ad && null !== e.ad && (this.ad = new Z.Ad(e.ad)), void 0 !== e.ad_campaign && null !== e.ad_campaign && (this.ad_campaign = new X.AdCampaign(e.ad_campaign)), void 0 !== e.ad_group && null !== e.ad_group && (this.ad_group = new ee.AdGroup(e.ad_group)), void 0 !== e.ad_targeting && null !== e.ad_targeting && (this.ad_targeting = new te.AdTargeting(e.ad_targeting)), void 0 !== e.business_info && null !== e.business_info && (this.business_info = new ie.BusinessInfo(e.business_info)), void 0 !== e.billing_info && null !== e.billing_info && (this.billing_info = new ne.BillingInfo(e.billing_info)), void 0 !== e.reddar_ticket && null !== e.reddar_ticket && (this.reddar_ticket = new T.ReddarTicket(e.reddar_ticket)), void 0 !== e.zendesk_ticket && null !== e.zendesk_ticket && (this.zendesk_ticket = new T.ZendeskTicket(e.zendesk_ticket)), void 0 !== e.target_user && null !== e.target_user && (this.target_user = new h.User(e.target_user)), void 0 !== e.crawler && null !== e.crawler && (this.crawler = new se.Crawler(e.crawler)), void 0 !== e.response && null !== e.response && (this.response = new c.Response(e.response)), void 0 !== e.custom_feed && null !== e.custom_feed && (this.custom_feed = new oe.CustomFeed(e.custom_feed)), void 0 !== e.pwa && null !== e.pwa && (this.pwa = new de.PWA(e.pwa)), void 0 !== e.seo && null !== e.seo && (this.seo = new le.SEO(e.seo)), void 0 !== e.ncmec_report && null !== e.ncmec_report && (this.ncmec_report = new S.NCMECReport(e.ncmec_report)), void 0 !== e.funding_instrument && null !== e.funding_instrument && (this.funding_instrument = new ue.FundingInstrument(e.funding_instrument)), void 0 !== e.grapeshot_classification && null !== e.grapeshot_classification && (this.grapeshot_classification = new x.GrapeshotClassification(e.grapeshot_classification)), void 0 !== e.perspective && null !== e.perspective && (this.perspective = new ce.Perspective(e.perspective)), void 0 !== e.comment_draft && null !== e.comment_draft && (this.comment_draft = new _e.CommentDraft(e.comment_draft)), void 0 !== e.target_post && null !== e.target_post && (this.target_post = new l.Post(e.target_post)), void 0 !== e.ml_model && null !== e.ml_model && (this.ml_model = new me.MLModel(e.ml_model)), void 0 !== e.topic_metadata && null !== e.topic_metadata && (this.topic_metadata = new pe.TopicMetadata(e.topic_metadata)), void 0 !== e.chat_home_feed_boosting && null !== e.chat_home_feed_boosting && (this.chat_home_feed_boosting = new f.ChatHomeFeedBoosting(e.chat_home_feed_boosting)), void 0 !== e.domain_ban && null !== e.domain_ban && (this.domain_ban = new he.DomainBan(e.domain_ban)), void 0 !== e.legal_export_request && null !== e.legal_export_request && (this.legal_export_request = new fe.LegalExportRequest(e.legal_export_request)), void 0 !== e.post_requirement && null !== e.post_requirement && (this.post_requirement = new be.PostRequirement(e.post_requirement)), void 0 !== e.target_ip && null !== e.target_ip && (this.target_ip = new ge.TargetIP(e.target_ip)), void 0 !== e.crowd_control && null !== e.crowd_control && (this.crowd_control = new we.CrowdControl(e.crowd_control)), void 0 !== e.reddar_ticket_content && null !== e.reddar_ticket_content && (this.reddar_ticket_content = new T.ReddarTicketContent(e.reddar_ticket_content)), void 0 !== e.scheduled_post && null !== e.scheduled_post && (this.scheduled_post = new ve.ScheduledPost(e.scheduled_post)), void 0 !== e.poll && null !== e.poll && (this.poll = new ye.Poll(e.poll)), void 0 !== e.reddar_audit && null !== e.reddar_audit && (this.reddar_audit = new Ee.ReddarAudit(e.reddar_audit)), void 0 !== e.reddar_audit_ticket && null !== e.reddar_audit_ticket && (this.reddar_audit_ticket = new Ee.ReddarAuditTicket(e.reddar_audit_ticket)), void 0 !== e.target_subreddit && null !== e.target_subreddit && (this.target_subreddit = new m.Subreddit(e.target_subreddit)), void 0 !== e.spamurai_action && null !== e.spamurai_action && (this.spamurai_action = new Se.SpamuraiAction(e.spamurai_action)), void 0 !== e.ad_brand_safety && null !== e.ad_brand_safety && (this.ad_brand_safety = new o.AdBrandSafety(e.ad_brand_safety)), void 0 !== e.bulk_action_job && null !== e.bulk_action_job && (this.bulk_action_job = new Te.BulkActionJob(e.bulk_action_job)), void 0 !== e.target_comment && null !== e.target_comment && (this.target_comment = new l.Comment(e.target_comment)), void 0 !== e.target_message && null !== e.target_message && (this.target_message = new l.Message(e.target_message)), void 0 !== e.reroute_rule && null !== e.reroute_rule && (this.reroute_rule = new S.RerouteRule(e.reroute_rule)), void 0 !== e.reddar_queue && null !== e.reddar_queue && (this.reddar_queue = new S.ReddarQueue(e.reddar_queue)), void 0 !== e.geo_block && null !== e.geo_block && (this.geo_block = new Oe.GeoBlock(e.geo_block)), void 0 !== e.programmatic && null !== e.programmatic && (this.programmatic = new Z.Programmatic(e.programmatic)), void 0 !== e.csai_content_report && null !== e.csai_content_report && (this.csai_content_report = new S.CSAIContentReport(e.csai_content_report)), void 0 !== e.imposter && null !== e.imposter && (this.imposter = new Ie.Imposter(e.imposter)), void 0 !== e.broadcast && null !== e.broadcast && (this.broadcast = new Re.Broadcast(e.broadcast)), void 0 !== e.survey && null !== e.survey && (this.survey = new Fe.Survey(e.survey)), void 0 !== e.playback && null !== e.playback && (this.playback = new Ne.Playback(e.playback)), void 0 !== e.bot_detection && null !== e.bot_detection && (this.bot_detection = new Ce.BotDetection(e.bot_detection)), void 0 !== e.crowd_source && null !== e.crowd_source && (this.crowd_source = new je.CrowdSource(e.crowd_source)), void 0 !== e.announcement && null !== e.announcement && (this.announcement = new Ae.Announcement(e.announcement)), void 0 !== e.purchase && null !== e.purchase && (this.purchase = new xe.Purchase(e.purchase)), void 0 !== e.powerups && null !== e.powerups && (this.powerups = new De.Powerups(e.powerups)), void 0 !== e.account_label && null !== e.account_label && (this.account_label = new ke.AccountLabel(e.account_label)), void 0 !== e.inbox && null !== e.inbox && (this.inbox = new Le.Inbox(e.inbox)), void 0 !== e.gallery && null !== e.gallery && (this.gallery = new l.Gallery(e.gallery)), void 0 !== e.trophy && null !== e.trophy && (this.trophy = new Me.Trophy(e.trophy)), void 0 !== e.feature && null !== e.feature && (this.feature = new Ue.Feature(e.feature)), void 0 !== e.admin_team && null !== e.admin_team && (this.admin_team = new S.AdminTeam(e.admin_team)), void 0 !== e.mute && null !== e.mute && (this.mute = new Ge.Mute(e.mute)), void 0 !== e.content_tag && null !== e.content_tag && (this.content_tag = new re.ContentTag(e.content_tag)), void 0 !== e.rater_tag && null !== e.rater_tag && (this.rater_tag = new ae.RaterTag(e.rater_tag)), void 0 !== e.credit_card_form && null !== e.credit_card_form && (this.credit_card_form = new qe.CreditCardForm(e.credit_card_form)), void 0 !== e.ad_click && null !== e.ad_click && (this.ad_click = new o.AdClick(e.ad_click)), void 0 !== e.snoovatar && null !== e.snoovatar && (this.snoovatar = new Ve.Snoovatar(e.snoovatar)), void 0 !== e.feed && null !== e.feed && (this.feed = new He.Feed(e.feed)), void 0 !== e.progress_module && null !== e.progress_module && (this.progress_module = new We.ProgressModule(e.progress_module)), void 0 !== e.app_icon && null !== e.app_icon && (this.app_icon = new I.AppIcon(e.app_icon)), void 0 !== e.ad_metadata && null !== e.ad_metadata && (this.ad_metadata = new o.AdMetadata(e.ad_metadata)), void 0 !== e.predictions && null !== e.predictions && (this.predictions = new Pe.Predictions(e.predictions)), void 0 !== e.navigation_session && null !== e.navigation_session && (this.navigation_session = new ze.NavigationSession(e.navigation_session)), void 0 !== e.afd_second && null !== e.afd_second && (this.afd_second = new Ke.AFDSecond(e.afd_second)), void 0 !== e.atc && null !== e.atc && (this.atc = new Ye.ATC(e.atc)), void 0 !== e.view_stats && null !== e.view_stats && (this.view_stats = new l.ViewStats(e.view_stats)), void 0 !== e.reward_info && null !== e.reward_info && (this.reward_info = new $e.RewardInfo(e.reward_info)), void 0 !== e.live_audio_room && null !== e.live_audio_room && (this.live_audio_room = new Qe.LiveAudioRoom(e.live_audio_room)), void 0 !== e.live_audio_user && null !== e.live_audio_user && (this.live_audio_user = new Qe.LiveAudioRoomUser(e.live_audio_user)), void 0 !== e.modmail_conversation && null !== e.modmail_conversation && (this.modmail_conversation = new Je.ModmailConversation(e.modmail_conversation)), void 0 !== e.modmail_message && null !== e.modmail_message && (this.modmail_message = new Je.ModmailMessage(e.modmail_message)), void 0 !== e.bulk_messenger && null !== e.bulk_messenger && (this.bulk_messenger = new Xe.BulkMessenger(e.bulk_messenger)), void 0 !== e.restrict && null !== e.restrict && (this.restrict = new Ze.Restrict(e.restrict)), void 0 !== e.ad_pixel && null !== e.ad_pixel && (this.ad_pixel = new o.AdPixel(e.ad_pixel)), void 0 !== e.video_error_report && null !== e.video_error_report && (this.video_error_report = new et.VideoErrorReport(e.video_error_report)), void 0 !== e.taxonomy && null !== e.taxonomy && (this.taxonomy = new Be.Taxonomy(e.taxonomy)), void 0 !== e.social_link && null !== e.social_link && (this.social_link = new tt.SocialLink(e.social_link)), void 0 !== e.acl_check && null !== e.acl_check && (this.acl_check = new it.AclCheck(e.acl_check)), void 0 !== e.cookie_monitor && null !== e.cookie_monitor && (this.cookie_monitor = new nt.CookieMonitor(e.cookie_monitor)), void 0 !== e.camera_feature && null !== e.camera_feature && (this.camera_feature = new rt.CameraFeature(e.camera_feature)), void 0 !== e.registration_form && null !== e.registration_form && (this.registration_form = new st.RegistrationForm(e.registration_form)), void 0 !== e.modqueue && null !== e.modqueue && (this.modqueue = new ot.Modqueue(e.modqueue)), void 0 !== e.modqueue_item && null !== e.modqueue_item && (this.modqueue_item = new ot.ModqueueItem(e.modqueue_item)), void 0 !== e.recap_card && null !== e.recap_card && (this.recap_card = new dt.RecapCard(e.recap_card)), void 0 !== e.modqueue_trigger && null !== e.modqueue_trigger && (this.modqueue_trigger = new ot.ModqueueTrigger(e.modqueue_trigger)), void 0 !== e.modnote && null !== e.modnote && (this.modnote = new at.ModNote(e.modnote)), void 0 !== e.screen_trace && null !== e.screen_trace && (this.screen_trace = new L.ScreenTrace(e.screen_trace)), void 0 !== e.geo && null !== e.geo && (this.geo = new g.Geo(e.geo)), void 0 !== e.user_legacy_id && null !== e.user_legacy_id && (this.user_legacy_id = e.user_legacy_id), void 0 !== e.content_metadata && null !== e.content_metadata && (this.content_metadata = new g.ContentMetadata(e.content_metadata)), void 0 !== e.url_parsed && null !== e.url_parsed && (this.url_parsed = new g.UrlParsed(e.url_parsed)), void 0 !== e.link_sharing && null !== e.link_sharing && (this.link_sharing = new g.LinkSharing(e.link_sharing)), void 0 !== e.create_request_timestamp && null !== e.create_request_timestamp && (this.create_request_timestamp = e.create_request_timestamp), void 0 !== e.inferred && null !== e.inferred && (this.inferred = new g.Inferred(e.inferred)), void 0 !== e.event_hmac_key && null !== e.event_hmac_key && (this.event_hmac_key = e.event_hmac_key), void 0 !== e.batch_load_id && null !== e.batch_load_id && (this.batch_load_id = e.batch_load_id), void 0 !== e.ip_splitting && null !== e.ip_splitting && (this.ip_splitting = new g.IPSplitting(e.ip_splitting))
					}
				};
			ut.prototype = {}, ut.prototype.write = function(e) {
				e.writeStructBegin("Event"), null !== this.source && void 0 !== this.source && (e.writeFieldBegin("source", r.Type.STRING, 1), e.writeString(this.source), e.writeFieldEnd()), null !== this.action && void 0 !== this.action && (e.writeFieldBegin("action", r.Type.STRING, 2), e.writeString(this.action), e.writeFieldEnd()), null !== this.noun && void 0 !== this.noun && (e.writeFieldBegin("noun", r.Type.STRING, 3), e.writeString(this.noun), e.writeFieldEnd()), null !== this.endpoint_timestamp && void 0 !== this.endpoint_timestamp && (e.writeFieldBegin("endpoint_timestamp", r.Type.I64, 4), e.writeI64(this.endpoint_timestamp), e.writeFieldEnd()), null !== this.client_timestamp && void 0 !== this.client_timestamp && (e.writeFieldBegin("client_timestamp", r.Type.I64, 5), e.writeI64(this.client_timestamp), e.writeFieldEnd()), null !== this.uuid && void 0 !== this.uuid && (e.writeFieldBegin("uuid", r.Type.STRING, 6), e.writeString(this.uuid), e.writeFieldEnd()), null !== this.utc_offset && void 0 !== this.utc_offset && (e.writeFieldBegin("utc_offset", r.Type.DOUBLE, 7), e.writeDouble(this.utc_offset), e.writeFieldEnd()), null !== this.correlation_id && void 0 !== this.correlation_id && (e.writeFieldBegin("correlation_id", r.Type.STRING, 8), e.writeString(this.correlation_id), e.writeFieldEnd()), null !== this.screenview_id && void 0 !== this.screenview_id && (e.writeFieldBegin("screenview_id", r.Type.STRING, 9), e.writeString(this.screenview_id), e.writeFieldEnd()), null !== this.post && void 0 !== this.post && (e.writeFieldBegin("post", r.Type.STRUCT, 100), this.post.write(e), e.writeFieldEnd()), null !== this.listing && void 0 !== this.listing && (e.writeFieldBegin("listing", r.Type.STRUCT, 101), this.listing.write(e), e.writeFieldEnd()), null !== this.comment && void 0 !== this.comment && (e.writeFieldBegin("comment", r.Type.STRUCT, 102), this.comment.write(e), e.writeFieldEnd()), null !== this.notification && void 0 !== this.notification && (e.writeFieldBegin("notification", r.Type.STRUCT, 103), this.notification.write(e), e.writeFieldEnd()), null !== this.oauth && void 0 !== this.oauth && (e.writeFieldBegin("oauth", r.Type.STRUCT, 104), this.oauth.write(e), e.writeFieldEnd()), null !== this.screen && void 0 !== this.screen && (e.writeFieldBegin("screen", r.Type.STRUCT, 106), this.screen.write(e), e.writeFieldEnd()), null !== this.app && void 0 !== this.app && (e.writeFieldBegin("app", r.Type.STRUCT, 107), this.app.write(e), e.writeFieldEnd()), null !== this.platform && void 0 !== this.platform && (e.writeFieldBegin("platform", r.Type.STRUCT, 108), this.platform.write(e), e.writeFieldEnd()), null !== this.request && void 0 !== this.request && (e.writeFieldBegin("request", r.Type.STRUCT, 109), this.request.write(e), e.writeFieldEnd()), null !== this.referrer && void 0 !== this.referrer && (e.writeFieldBegin("referrer", r.Type.STRUCT, 110), this.referrer.write(e), e.writeFieldEnd()), null !== this.dom_timer && void 0 !== this.dom_timer && (e.writeFieldBegin("dom_timer", r.Type.STRUCT, 111), this.dom_timer.write(e), e.writeFieldEnd()), null !== this.user && void 0 !== this.user && (e.writeFieldBegin("user", r.Type.STRUCT, 112), this.user.write(e), e.writeFieldEnd()), null !== this.user_preferences && void 0 !== this.user_preferences && (e.writeFieldBegin("user_preferences", r.Type.STRUCT, 113), this.user_preferences.write(e), e.writeFieldEnd()), null !== this.subreddit && void 0 !== this.subreddit && (e.writeFieldBegin("subreddit", r.Type.STRUCT, 114), this.subreddit.write(e), e.writeFieldEnd()), null !== this.session && void 0 !== this.session && (e.writeFieldBegin("session", r.Type.STRUCT, 115), this.session.write(e), e.writeFieldEnd()), null !== this.action_info && void 0 !== this.action_info && (e.writeFieldBegin("action_info", r.Type.STRUCT, 116), this.action_info.write(e), e.writeFieldEnd()), null !== this.expand && void 0 !== this.expand && (e.writeFieldBegin("expand", r.Type.STRUCT, 117), this.expand.write(e), e.writeFieldEnd()), null !== this.media && void 0 !== this.media && (e.writeFieldBegin("media", r.Type.STRUCT, 118), this.media.write(e), e.writeFieldEnd()), null !== this.chat && void 0 !== this.chat && (e.writeFieldBegin("chat", r.Type.STRUCT, 119), this.chat.write(e), e.writeFieldEnd()), null !== this.post_composer && void 0 !== this.post_composer && (e.writeFieldBegin("post_composer", r.Type.STRUCT, 120), this.post_composer.write(e), e.writeFieldEnd()), null !== this.widget && void 0 !== this.widget && (e.writeFieldBegin("widget", r.Type.STRUCT, 121), this.widget.write(e), e.writeFieldEnd()), null !== this.profile && void 0 !== this.profile && (e.writeFieldBegin("profile", r.Type.STRUCT, 122), this.profile.write(e), e.writeFieldEnd()), null !== this.onboarding && void 0 !== this.onboarding && (e.writeFieldBegin("onboarding", r.Type.STRUCT, 123), this.onboarding.write(e), e.writeFieldEnd()), null !== this.timer && void 0 !== this.timer && (e.writeFieldBegin("timer", r.Type.STRUCT, 124), this.timer.write(e), e.writeFieldEnd()), null !== this.tfa && void 0 !== this.tfa && (e.writeFieldBegin("tfa", r.Type.STRUCT, 125), this.tfa.write(e), e.writeFieldEnd()), null !== this.api_response && void 0 !== this.api_response && (e.writeFieldBegin("api_response", r.Type.STRUCT, 126), this.api_response.write(e), e.writeFieldEnd()), null !== this.api && void 0 !== this.api && (e.writeFieldBegin("api", r.Type.STRUCT, 127), this.api.write(e), e.writeFieldEnd()), null !== this.discovery_unit && void 0 !== this.discovery_unit && (e.writeFieldBegin("discovery_unit", r.Type.STRUCT, 128), this.discovery_unit.write(e), e.writeFieldEnd()), null !== this.experiment && void 0 !== this.experiment && (e.writeFieldBegin("experiment", r.Type.STRUCT, 129), this.experiment.write(e), e.writeFieldEnd()), null !== this.share && void 0 !== this.share && (e.writeFieldBegin("share", r.Type.STRUCT, 130), this.share.write(e), e.writeFieldEnd()), null !== this.user_subreddit && void 0 !== this.user_subreddit && (e.writeFieldBegin("user_subreddit", r.Type.STRUCT, 131), this.user_subreddit.write(e), e.writeFieldEnd()), null !== this.notification_request && void 0 !== this.notification_request && (e.writeFieldBegin("notification_request", r.Type.STRUCT, 132), this.notification_request.write(e), e.writeFieldEnd()), null !== this.search && void 0 !== this.search && (e.writeFieldBegin("search", r.Type.STRUCT, 133), this.search.write(e), e.writeFieldEnd()), null !== this.message && void 0 !== this.message && (e.writeFieldBegin("message", r.Type.STRUCT, 134), this.message.write(e), e.writeFieldEnd()), null !== this.admin && void 0 !== this.admin && (e.writeFieldBegin("admin", r.Type.STRUCT, 135), this.admin.write(e), e.writeFieldEnd()), null !== this.ticket && void 0 !== this.ticket && (e.writeFieldBegin("ticket", r.Type.STRUCT, 136), this.ticket.write(e), e.writeFieldEnd()), null !== this.mailroom_request && void 0 !== this.mailroom_request && (e.writeFieldBegin("mailroom_request", r.Type.STRUCT, 137), this.mailroom_request.write(e), e.writeFieldEnd()), null !== this.comment_composer && void 0 !== this.comment_composer && (e.writeFieldBegin("comment_composer", r.Type.STRUCT, 138), this.comment_composer.write(e), e.writeFieldEnd()), null !== this.gold_purchase && void 0 !== this.gold_purchase && (e.writeFieldBegin("gold_purchase", r.Type.STRUCT, 139), this.gold_purchase.write(e), e.writeFieldEnd()), null !== this.payment && void 0 !== this.payment && (e.writeFieldBegin("payment", r.Type.STRUCT, 140), this.payment.write(e), e.writeFieldEnd()), null !== this.news && void 0 !== this.news && (e.writeFieldBegin("news", r.Type.STRUCT, 141), this.news.write(e), e.writeFieldEnd()), null !== this.outbound && void 0 !== this.outbound && (e.writeFieldBegin("outbound", r.Type.STRUCT, 142), this.outbound.write(e), e.writeFieldEnd()), null !== this.click_test && void 0 !== this.click_test && (e.writeFieldBegin("click_test", r.Type.STRUCT, 143), this.click_test.write(e), e.writeFieldEnd()), null !== this.carousel && void 0 !== this.carousel && (e.writeFieldBegin("carousel", r.Type.STRUCT, 144), this.carousel.write(e), e.writeFieldEnd()), null !== this.adblock && void 0 !== this.adblock && (e.writeFieldBegin("adblock", r.Type.STRUCT, 145), this.adblock.write(e), e.writeFieldEnd()), null !== this.email && void 0 !== this.email && (e.writeFieldBegin("email", r.Type.STRUCT, 146), this.email.write(e), e.writeFieldEnd()), null !== this.metaflair && void 0 !== this.metaflair && (e.writeFieldBegin("metaflair", r.Type.STRUCT, 147), this.metaflair.write(e), e.writeFieldEnd()), null !== this.post_draft && void 0 !== this.post_draft && (e.writeFieldBegin("post_draft", r.Type.STRUCT, 148), this.post_draft.write(e), e.writeFieldEnd()), null !== this.setting && void 0 !== this.setting && (e.writeFieldBegin("setting", r.Type.STRUCT, 149), this.setting.write(e), e.writeFieldEnd()), null !== this.visibility && void 0 !== this.visibility && (e.writeFieldBegin("visibility", r.Type.STRUCT, 150), this.visibility.write(e), e.writeFieldEnd()), null !== this.webhook && void 0 !== this.webhook && (e.writeFieldBegin("webhook", r.Type.STRUCT, 151), this.webhook.write(e), e.writeFieldEnd()), null !== this.relevance_model && void 0 !== this.relevance_model && (e.writeFieldBegin("relevance_model", r.Type.STRUCT, 152), this.relevance_model.write(e), e.writeFieldEnd()), null !== this.meta_search && void 0 !== this.meta_search && (e.writeFieldBegin("meta_search", r.Type.STRUCT, 153), this.meta_search.write(e), e.writeFieldEnd()), null !== this.post_flair && void 0 !== this.post_flair && (e.writeFieldBegin("post_flair", r.Type.STRUCT, 154), this.post_flair.write(e), e.writeFieldEnd()), null !== this.admin_action && void 0 !== this.admin_action && (e.writeFieldBegin("admin_action", r.Type.STRUCT, 155), this.admin_action.write(e), e.writeFieldEnd()), null !== this.zipkin && void 0 !== this.zipkin && (e.writeFieldBegin("zipkin", r.Type.STRUCT, 156), this.zipkin.write(e), e.writeFieldEnd()), null !== this.edit && void 0 !== this.edit && (e.writeFieldBegin("edit", r.Type.STRUCT, 157), this.edit.write(e), e.writeFieldEnd()), null !== this.post_event && void 0 !== this.post_event && (e.writeFieldBegin("post_event", r.Type.STRUCT, 158), this.post_event.write(e), e.writeFieldEnd()), null !== this.post_collection && void 0 !== this.post_collection && (e.writeFieldBegin("post_collection", r.Type.STRUCT, 159), this.post_collection.write(e), e.writeFieldEnd()), null !== this.third_party_badge && void 0 !== this.third_party_badge && (e.writeFieldBegin("third_party_badge", r.Type.STRUCT, 160), this.third_party_badge.write(e), e.writeFieldEnd()), null !== this.brand && void 0 !== this.brand && (e.writeFieldBegin("brand", r.Type.STRUCT, 161), this.brand.write(e), e.writeFieldEnd()), null !== this.messenger_request && void 0 !== this.messenger_request && (e.writeFieldBegin("messenger_request", r.Type.STRUCT, 162), this.messenger_request.write(e), e.writeFieldEnd()), null !== this.banner && void 0 !== this.banner && (e.writeFieldBegin("banner", r.Type.STRUCT, 163), this.banner.write(e), e.writeFieldEnd()), null !== this.tooltip && void 0 !== this.tooltip && (e.writeFieldBegin("tooltip", r.Type.STRUCT, 164), this.tooltip.write(e), e.writeFieldEnd()), null !== this.upload && void 0 !== this.upload && (e.writeFieldBegin("upload", r.Type.STRUCT, 165), this.upload.write(e), e.writeFieldEnd()), null !== this.csai_media && void 0 !== this.csai_media && (e.writeFieldBegin("csai_media", r.Type.STRUCT, 166), this.csai_media.write(e), e.writeFieldEnd()), null !== this.category_header && void 0 !== this.category_header && (e.writeFieldBegin("category_header", r.Type.STRUCT, 167), this.category_header.write(e), e.writeFieldEnd()), null !== this.report && void 0 !== this.report && (e.writeFieldBegin("report", r.Type.STRUCT, 168), this.report.write(e), e.writeFieldEnd()), null !== this.live_thread && void 0 !== this.live_thread && (e.writeFieldBegin("live_thread", r.Type.STRUCT, 169), this.live_thread.write(e), e.writeFieldEnd()), null !== this.ad_request && void 0 !== this.ad_request && (e.writeFieldBegin("ad_request", r.Type.STRUCT, 170), this.ad_request.write(e), e.writeFieldEnd()), null !== this.ad_decision && void 0 !== this.ad_decision && (e.writeFieldBegin("ad_decision", r.Type.STRUCT, 171), this.ad_decision.write(e), e.writeFieldEnd()), null !== this.ad_push && void 0 !== this.ad_push && (e.writeFieldBegin("ad_push", r.Type.STRUCT, 172), this.ad_push.write(e), e.writeFieldEnd()), null !== this.vote && void 0 !== this.vote && (e.writeFieldBegin("vote", r.Type.STRUCT, 173), this.vote.write(e), e.writeFieldEnd()), null !== this.popup && void 0 !== this.popup && (e.writeFieldBegin("popup", r.Type.STRUCT, 174), this.popup.write(e), e.writeFieldEnd()), null !== this.mod_action && void 0 !== this.mod_action && (e.writeFieldBegin("mod_action", r.Type.STRUCT, 175), this.mod_action.write(e), e.writeFieldEnd()), null !== this.user_flair && void 0 !== this.user_flair && (e.writeFieldBegin("user_flair", r.Type.STRUCT, 176), this.user_flair.write(e), e.writeFieldEnd()), null !== this.topic_tag && void 0 !== this.topic_tag && (e.writeFieldBegin("topic_tag", r.Type.STRUCT, 177), this.topic_tag.write(e), e.writeFieldEnd()), null !== this.res && void 0 !== this.res && (e.writeFieldBegin("res", r.Type.STRUCT, 178), this.res.write(e), e.writeFieldEnd()), null !== this.ad && void 0 !== this.ad && (e.writeFieldBegin("ad", r.Type.STRUCT, 179), this.ad.write(e), e.writeFieldEnd()), null !== this.ad_campaign && void 0 !== this.ad_campaign && (e.writeFieldBegin("ad_campaign", r.Type.STRUCT, 180), this.ad_campaign.write(e), e.writeFieldEnd()), null !== this.ad_group && void 0 !== this.ad_group && (e.writeFieldBegin("ad_group", r.Type.STRUCT, 181), this.ad_group.write(e), e.writeFieldEnd()), null !== this.ad_targeting && void 0 !== this.ad_targeting && (e.writeFieldBegin("ad_targeting", r.Type.STRUCT, 182), this.ad_targeting.write(e), e.writeFieldEnd()), null !== this.business_info && void 0 !== this.business_info && (e.writeFieldBegin("business_info", r.Type.STRUCT, 183), this.business_info.write(e), e.writeFieldEnd()), null !== this.billing_info && void 0 !== this.billing_info && (e.writeFieldBegin("billing_info", r.Type.STRUCT, 184), this.billing_info.write(e), e.writeFieldEnd()), null !== this.reddar_ticket && void 0 !== this.reddar_ticket && (e.writeFieldBegin("reddar_ticket", r.Type.STRUCT, 185), this.reddar_ticket.write(e), e.writeFieldEnd()), null !== this.zendesk_ticket && void 0 !== this.zendesk_ticket && (e.writeFieldBegin("zendesk_ticket", r.Type.STRUCT, 186), this.zendesk_ticket.write(e), e.writeFieldEnd()), null !== this.target_user && void 0 !== this.target_user && (e.writeFieldBegin("target_user", r.Type.STRUCT, 187), this.target_user.write(e), e.writeFieldEnd()), null !== this.crawler && void 0 !== this.crawler && (e.writeFieldBegin("crawler", r.Type.STRUCT, 188), this.crawler.write(e), e.writeFieldEnd()), null !== this.response && void 0 !== this.response && (e.writeFieldBegin("response", r.Type.STRUCT, 189), this.response.write(e), e.writeFieldEnd()), null !== this.custom_feed && void 0 !== this.custom_feed && (e.writeFieldBegin("custom_feed", r.Type.STRUCT, 190), this.custom_feed.write(e), e.writeFieldEnd()), null !== this.pwa && void 0 !== this.pwa && (e.writeFieldBegin("pwa", r.Type.STRUCT, 191), this.pwa.write(e), e.writeFieldEnd()), null !== this.seo && void 0 !== this.seo && (e.writeFieldBegin("seo", r.Type.STRUCT, 192), this.seo.write(e), e.writeFieldEnd()), null !== this.ncmec_report && void 0 !== this.ncmec_report && (e.writeFieldBegin("ncmec_report", r.Type.STRUCT, 193), this.ncmec_report.write(e), e.writeFieldEnd()), null !== this.funding_instrument && void 0 !== this.funding_instrument && (e.writeFieldBegin("funding_instrument", r.Type.STRUCT, 194), this.funding_instrument.write(e), e.writeFieldEnd()), null !== this.grapeshot_classification && void 0 !== this.grapeshot_classification && (e.writeFieldBegin("grapeshot_classification", r.Type.STRUCT, 195), this.grapeshot_classification.write(e), e.writeFieldEnd()), null !== this.perspective && void 0 !== this.perspective && (e.writeFieldBegin("perspective", r.Type.STRUCT, 196), this.perspective.write(e), e.writeFieldEnd()), null !== this.comment_draft && void 0 !== this.comment_draft && (e.writeFieldBegin("comment_draft", r.Type.STRUCT, 197), this.comment_draft.write(e), e.writeFieldEnd()), null !== this.target_post && void 0 !== this.target_post && (e.writeFieldBegin("target_post", r.Type.STRUCT, 198), this.target_post.write(e), e.writeFieldEnd()), null !== this.ml_model && void 0 !== this.ml_model && (e.writeFieldBegin("ml_model", r.Type.STRUCT, 199), this.ml_model.write(e), e.writeFieldEnd()), null !== this.topic_metadata && void 0 !== this.topic_metadata && (e.writeFieldBegin("topic_metadata", r.Type.STRUCT, 200), this.topic_metadata.write(e), e.writeFieldEnd()), null !== this.chat_home_feed_boosting && void 0 !== this.chat_home_feed_boosting && (e.writeFieldBegin("chat_home_feed_boosting", r.Type.STRUCT, 201), this.chat_home_feed_boosting.write(e), e.writeFieldEnd()), null !== this.domain_ban && void 0 !== this.domain_ban && (e.writeFieldBegin("domain_ban", r.Type.STRUCT, 202), this.domain_ban.write(e), e.writeFieldEnd()), null !== this.legal_export_request && void 0 !== this.legal_export_request && (e.writeFieldBegin("legal_export_request", r.Type.STRUCT, 203), this.legal_export_request.write(e), e.writeFieldEnd()), null !== this.post_requirement && void 0 !== this.post_requirement && (e.writeFieldBegin("post_requirement", r.Type.STRUCT, 204), this.post_requirement.write(e), e.writeFieldEnd()), null !== this.target_ip && void 0 !== this.target_ip && (e.writeFieldBegin("target_ip", r.Type.STRUCT, 205), this.target_ip.write(e), e.writeFieldEnd()), null !== this.crowd_control && void 0 !== this.crowd_control && (e.writeFieldBegin("crowd_control", r.Type.STRUCT, 206), this.crowd_control.write(e), e.writeFieldEnd()), null !== this.reddar_ticket_content && void 0 !== this.reddar_ticket_content && (e.writeFieldBegin("reddar_ticket_content", r.Type.STRUCT, 207), this.reddar_ticket_content.write(e), e.writeFieldEnd()), null !== this.scheduled_post && void 0 !== this.scheduled_post && (e.writeFieldBegin("scheduled_post", r.Type.STRUCT, 208), this.scheduled_post.write(e), e.writeFieldEnd()), null !== this.poll && void 0 !== this.poll && (e.writeFieldBegin("poll", r.Type.STRUCT, 209), this.poll.write(e), e.writeFieldEnd()), null !== this.reddar_audit && void 0 !== this.reddar_audit && (e.writeFieldBegin("reddar_audit", r.Type.STRUCT, 210), this.reddar_audit.write(e), e.writeFieldEnd()), null !== this.reddar_audit_ticket && void 0 !== this.reddar_audit_ticket && (e.writeFieldBegin("reddar_audit_ticket", r.Type.STRUCT, 211), this.reddar_audit_ticket.write(e), e.writeFieldEnd()), null !== this.target_subreddit && void 0 !== this.target_subreddit && (e.writeFieldBegin("target_subreddit", r.Type.STRUCT, 212), this.target_subreddit.write(e), e.writeFieldEnd()), null !== this.spamurai_action && void 0 !== this.spamurai_action && (e.writeFieldBegin("spamurai_action", r.Type.STRUCT, 213), this.spamurai_action.write(e), e.writeFieldEnd()), null !== this.ad_brand_safety && void 0 !== this.ad_brand_safety && (e.writeFieldBegin("ad_brand_safety", r.Type.STRUCT, 214), this.ad_brand_safety.write(e), e.writeFieldEnd()), null !== this.bulk_action_job && void 0 !== this.bulk_action_job && (e.writeFieldBegin("bulk_action_job", r.Type.STRUCT, 215), this.bulk_action_job.write(e), e.writeFieldEnd()), null !== this.target_comment && void 0 !== this.target_comment && (e.writeFieldBegin("target_comment", r.Type.STRUCT, 216), this.target_comment.write(e), e.writeFieldEnd()), null !== this.target_message && void 0 !== this.target_message && (e.writeFieldBegin("target_message", r.Type.STRUCT, 217), this.target_message.write(e), e.writeFieldEnd()), null !== this.reroute_rule && void 0 !== this.reroute_rule && (e.writeFieldBegin("reroute_rule", r.Type.STRUCT, 218), this.reroute_rule.write(e), e.writeFieldEnd()), null !== this.reddar_queue && void 0 !== this.reddar_queue && (e.writeFieldBegin("reddar_queue", r.Type.STRUCT, 219), this.reddar_queue.write(e), e.writeFieldEnd()), null !== this.geo_block && void 0 !== this.geo_block && (e.writeFieldBegin("geo_block", r.Type.STRUCT, 220), this.geo_block.write(e), e.writeFieldEnd()), null !== this.programmatic && void 0 !== this.programmatic && (e.writeFieldBegin("programmatic", r.Type.STRUCT, 221), this.programmatic.write(e), e.writeFieldEnd()), null !== this.csai_content_report && void 0 !== this.csai_content_report && (e.writeFieldBegin("csai_content_report", r.Type.STRUCT, 222), this.csai_content_report.write(e), e.writeFieldEnd()), null !== this.imposter && void 0 !== this.imposter && (e.writeFieldBegin("imposter", r.Type.STRUCT, 223), this.imposter.write(e), e.writeFieldEnd()), null !== this.broadcast && void 0 !== this.broadcast && (e.writeFieldBegin("broadcast", r.Type.STRUCT, 224), this.broadcast.write(e), e.writeFieldEnd()), null !== this.survey && void 0 !== this.survey && (e.writeFieldBegin("survey", r.Type.STRUCT, 225), this.survey.write(e), e.writeFieldEnd()), null !== this.playback && void 0 !== this.playback && (e.writeFieldBegin("playback", r.Type.STRUCT, 226), this.playback.write(e), e.writeFieldEnd()), null !== this.bot_detection && void 0 !== this.bot_detection && (e.writeFieldBegin("bot_detection", r.Type.STRUCT, 227), this.bot_detection.write(e), e.writeFieldEnd()), null !== this.crowd_source && void 0 !== this.crowd_source && (e.writeFieldBegin("crowd_source", r.Type.STRUCT, 228), this.crowd_source.write(e), e.writeFieldEnd()), null !== this.announcement && void 0 !== this.announcement && (e.writeFieldBegin("announcement", r.Type.STRUCT, 229), this.announcement.write(e), e.writeFieldEnd()), null !== this.purchase && void 0 !== this.purchase && (e.writeFieldBegin("purchase", r.Type.STRUCT, 230), this.purchase.write(e), e.writeFieldEnd()), null !== this.powerups && void 0 !== this.powerups && (e.writeFieldBegin("powerups", r.Type.STRUCT, 231), this.powerups.write(e), e.writeFieldEnd()), null !== this.account_label && void 0 !== this.account_label && (e.writeFieldBegin("account_label", r.Type.STRUCT, 232), this.account_label.write(e), e.writeFieldEnd()), null !== this.inbox && void 0 !== this.inbox && (e.writeFieldBegin("inbox", r.Type.STRUCT, 233), this.inbox.write(e), e.writeFieldEnd()), null !== this.gallery && void 0 !== this.gallery && (e.writeFieldBegin("gallery", r.Type.STRUCT, 234), this.gallery.write(e), e.writeFieldEnd()), null !== this.trophy && void 0 !== this.trophy && (e.writeFieldBegin("trophy", r.Type.STRUCT, 235), this.trophy.write(e), e.writeFieldEnd()), null !== this.feature && void 0 !== this.feature && (e.writeFieldBegin("feature", r.Type.STRUCT, 236), this.feature.write(e), e.writeFieldEnd()), null !== this.admin_team && void 0 !== this.admin_team && (e.writeFieldBegin("admin_team", r.Type.STRUCT, 237), this.admin_team.write(e), e.writeFieldEnd()), null !== this.mute && void 0 !== this.mute && (e.writeFieldBegin("mute", r.Type.STRUCT, 238), this.mute.write(e), e.writeFieldEnd()), null !== this.content_tag && void 0 !== this.content_tag && (e.writeFieldBegin("content_tag", r.Type.STRUCT, 239), this.content_tag.write(e), e.writeFieldEnd()), null !== this.rater_tag && void 0 !== this.rater_tag && (e.writeFieldBegin("rater_tag", r.Type.STRUCT, 240), this.rater_tag.write(e), e.writeFieldEnd()), null !== this.credit_card_form && void 0 !== this.credit_card_form && (e.writeFieldBegin("credit_card_form", r.Type.STRUCT, 241), this.credit_card_form.write(e), e.writeFieldEnd()), null !== this.ad_click && void 0 !== this.ad_click && (e.writeFieldBegin("ad_click", r.Type.STRUCT, 242), this.ad_click.write(e), e.writeFieldEnd()), null !== this.snoovatar && void 0 !== this.snoovatar && (e.writeFieldBegin("snoovatar", r.Type.STRUCT, 243), this.snoovatar.write(e), e.writeFieldEnd()), null !== this.feed && void 0 !== this.feed && (e.writeFieldBegin("feed", r.Type.STRUCT, 244), this.feed.write(e), e.writeFieldEnd()), null !== this.progress_module && void 0 !== this.progress_module && (e.writeFieldBegin("progress_module", r.Type.STRUCT, 245), this.progress_module.write(e), e.writeFieldEnd()), null !== this.app_icon && void 0 !== this.app_icon && (e.writeFieldBegin("app_icon", r.Type.STRUCT, 246), this.app_icon.write(e), e.writeFieldEnd()), null !== this.ad_metadata && void 0 !== this.ad_metadata && (e.writeFieldBegin("ad_metadata", r.Type.STRUCT, 247), this.ad_metadata.write(e), e.writeFieldEnd()), null !== this.predictions && void 0 !== this.predictions && (e.writeFieldBegin("predictions", r.Type.STRUCT, 248), this.predictions.write(e), e.writeFieldEnd()), null !== this.navigation_session && void 0 !== this.navigation_session && (e.writeFieldBegin("navigation_session", r.Type.STRUCT, 249), this.navigation_session.write(e), e.writeFieldEnd()), null !== this.afd_second && void 0 !== this.afd_second && (e.writeFieldBegin("afd_second", r.Type.STRUCT, 250), this.afd_second.write(e), e.writeFieldEnd()), null !== this.atc && void 0 !== this.atc && (e.writeFieldBegin("atc", r.Type.STRUCT, 251), this.atc.write(e), e.writeFieldEnd()), null !== this.view_stats && void 0 !== this.view_stats && (e.writeFieldBegin("view_stats", r.Type.STRUCT, 252), this.view_stats.write(e), e.writeFieldEnd()), null !== this.reward_info && void 0 !== this.reward_info && (e.writeFieldBegin("reward_info", r.Type.STRUCT, 253), this.reward_info.write(e), e.writeFieldEnd()), null !== this.live_audio_room && void 0 !== this.live_audio_room && (e.writeFieldBegin("live_audio_room", r.Type.STRUCT, 254), this.live_audio_room.write(e), e.writeFieldEnd()), null !== this.live_audio_user && void 0 !== this.live_audio_user && (e.writeFieldBegin("live_audio_user", r.Type.STRUCT, 255), this.live_audio_user.write(e), e.writeFieldEnd()), null !== this.modmail_conversation && void 0 !== this.modmail_conversation && (e.writeFieldBegin("modmail_conversation", r.Type.STRUCT, 256), this.modmail_conversation.write(e), e.writeFieldEnd()), null !== this.modmail_message && void 0 !== this.modmail_message && (e.writeFieldBegin("modmail_message", r.Type.STRUCT, 257), this.modmail_message.write(e), e.writeFieldEnd()), null !== this.bulk_messenger && void 0 !== this.bulk_messenger && (e.writeFieldBegin("bulk_messenger", r.Type.STRUCT, 258), this.bulk_messenger.write(e), e.writeFieldEnd()), null !== this.restrict && void 0 !== this.restrict && (e.writeFieldBegin("restrict", r.Type.STRUCT, 259), this.restrict.write(e), e.writeFieldEnd()), null !== this.ad_pixel && void 0 !== this.ad_pixel && (e.writeFieldBegin("ad_pixel", r.Type.STRUCT, 260), this.ad_pixel.write(e), e.writeFieldEnd()), null !== this.video_error_report && void 0 !== this.video_error_report && (e.writeFieldBegin("video_error_report", r.Type.STRUCT, 261), this.video_error_report.write(e), e.writeFieldEnd()), null !== this.taxonomy && void 0 !== this.taxonomy && (e.writeFieldBegin("taxonomy", r.Type.STRUCT, 262), this.taxonomy.write(e), e.writeFieldEnd()), null !== this.social_link && void 0 !== this.social_link && (e.writeFieldBegin("social_link", r.Type.STRUCT, 263), this.social_link.write(e), e.writeFieldEnd()), null !== this.acl_check && void 0 !== this.acl_check && (e.writeFieldBegin("acl_check", r.Type.STRUCT, 264), this.acl_check.write(e), e.writeFieldEnd()), null !== this.cookie_monitor && void 0 !== this.cookie_monitor && (e.writeFieldBegin("cookie_monitor", r.Type.STRUCT, 265), this.cookie_monitor.write(e), e.writeFieldEnd()), null !== this.camera_feature && void 0 !== this.camera_feature && (e.writeFieldBegin("camera_feature", r.Type.STRUCT, 266), this.camera_feature.write(e), e.writeFieldEnd()), null !== this.registration_form && void 0 !== this.registration_form && (e.writeFieldBegin("registration_form", r.Type.STRUCT, 267), this.registration_form.write(e), e.writeFieldEnd()), null !== this.modqueue && void 0 !== this.modqueue && (e.writeFieldBegin("modqueue", r.Type.STRUCT, 268), this.modqueue.write(e), e.writeFieldEnd()), null !== this.modqueue_item && void 0 !== this.modqueue_item && (e.writeFieldBegin("modqueue_item", r.Type.STRUCT, 269), this.modqueue_item.write(e), e.writeFieldEnd()), null !== this.recap_card && void 0 !== this.recap_card && (e.writeFieldBegin("recap_card", r.Type.STRUCT, 270), this.recap_card.write(e), e.writeFieldEnd()), null !== this.modqueue_trigger && void 0 !== this.modqueue_trigger && (e.writeFieldBegin("modqueue_trigger", r.Type.STRUCT, 271), this.modqueue_trigger.write(e), e.writeFieldEnd()), null !== this.modnote && void 0 !== this.modnote && (e.writeFieldBegin("modnote", r.Type.STRUCT, 272), this.modnote.write(e), e.writeFieldEnd()), null !== this.screen_trace && void 0 !== this.screen_trace && (e.writeFieldBegin("screen_trace", r.Type.STRUCT, 274), this.screen_trace.write(e), e.writeFieldEnd()), null !== this.geo && void 0 !== this.geo && (e.writeFieldBegin("geo", r.Type.STRUCT, 500), this.geo.write(e), e.writeFieldEnd()), null !== this.user_legacy_id && void 0 !== this.user_legacy_id && (e.writeFieldBegin("user_legacy_id", r.Type.STRING, 502), e.writeString(this.user_legacy_id), e.writeFieldEnd()), null !== this.content_metadata && void 0 !== this.content_metadata && (e.writeFieldBegin("content_metadata", r.Type.STRUCT, 503), this.content_metadata.write(e), e.writeFieldEnd()), null !== this.url_parsed && void 0 !== this.url_parsed && (e.writeFieldBegin("url_parsed", r.Type.STRUCT, 504), this.url_parsed.write(e), e.writeFieldEnd()), null !== this.link_sharing && void 0 !== this.link_sharing && (e.writeFieldBegin("link_sharing", r.Type.STRUCT, 505), this.link_sharing.write(e), e.writeFieldEnd()), null !== this.create_request_timestamp && void 0 !== this.create_request_timestamp && (e.writeFieldBegin("create_request_timestamp", r.Type.I64, 506), e.writeI64(this.create_request_timestamp), e.writeFieldEnd()), null !== this.inferred && void 0 !== this.inferred && (e.writeFieldBegin("inferred", r.Type.STRUCT, 507), this.inferred.write(e), e.writeFieldEnd()), null !== this.event_hmac_key && void 0 !== this.event_hmac_key && (e.writeFieldBegin("event_hmac_key", r.Type.STRING, 508), e.writeString(this.event_hmac_key), e.writeFieldEnd()), null !== this.batch_load_id && void 0 !== this.batch_load_id && (e.writeFieldBegin("batch_load_id", r.Type.STRING, 509), e.writeString(this.batch_load_id), e.writeFieldEnd()), null !== this.ip_splitting && void 0 !== this.ip_splitting && (e.writeFieldBegin("ip_splitting", r.Type.STRUCT, 510), this.ip_splitting.write(e), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var ct = e.exports.EventBatch = function(e) {
				if (this.events = null, e) {
					if (void 0 === e.events || null === e.events) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field events is unset!");
					this.events = r.copyList(e.events, [lt.Event])
				}
			};
			ct.prototype = {}, ct.prototype.write = function(e) {
				if (e.writeStructBegin("EventBatch"), null !== this.events && void 0 !== this.events) {
					for (var t in e.writeFieldBegin("events", r.Type.LIST, 1), e.writeListBegin(r.Type.STRUCT, this.events.length), this.events) this.events.hasOwnProperty(t) && (t = this.events[t]).write(e);
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/experiment_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Experiment = function(e) {
					if (this.id = null, this.name = null, this.owner = null, this.variant = null, this.start_timestamp = null, this.end_timestamp = null, this.bucketing_key = null, this.version = null, this.bucketing_value = null, this.is_override = null, this.variant_names = null, this.variant_percentages = null, this.active = null, this.github_link = null, this.info = null, this.qa_proxy_event = null, this.bucketing_type = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.owner && null !== e.owner && (this.owner = e.owner), void 0 !== e.variant && null !== e.variant && (this.variant = e.variant), void 0 !== e.start_timestamp && null !== e.start_timestamp && (this.start_timestamp = e.start_timestamp), void 0 !== e.end_timestamp && null !== e.end_timestamp && (this.end_timestamp = e.end_timestamp), void 0 !== e.bucketing_key && null !== e.bucketing_key && (this.bucketing_key = e.bucketing_key), void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.bucketing_value && null !== e.bucketing_value && (this.bucketing_value = e.bucketing_value), void 0 !== e.is_override && null !== e.is_override && (this.is_override = e.is_override), void 0 !== e.variant_names && null !== e.variant_names && (this.variant_names = r.copyList(e.variant_names, [null])), void 0 !== e.variant_percentages && null !== e.variant_percentages && (this.variant_percentages = r.copyList(e.variant_percentages, [null])), void 0 !== e.active && null !== e.active && (this.active = e.active), void 0 !== e.github_link && null !== e.github_link && (this.github_link = e.github_link), void 0 !== e.info && null !== e.info && (this.info = e.info), void 0 !== e.qa_proxy_event && null !== e.qa_proxy_event && (this.qa_proxy_event = e.qa_proxy_event), void 0 !== e.bucketing_type && null !== e.bucketing_type && (this.bucketing_type = e.bucketing_type)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Experiment"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 1), e.writeI64(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.owner && void 0 !== this.owner && (e.writeFieldBegin("owner", r.Type.STRING, 3), e.writeString(this.owner), e.writeFieldEnd()), null !== this.variant && void 0 !== this.variant && (e.writeFieldBegin("variant", r.Type.STRING, 4), e.writeString(this.variant), e.writeFieldEnd()), null !== this.start_timestamp && void 0 !== this.start_timestamp && (e.writeFieldBegin("start_timestamp", r.Type.I64, 5), e.writeI64(this.start_timestamp), e.writeFieldEnd()), null !== this.end_timestamp && void 0 !== this.end_timestamp && (e.writeFieldBegin("end_timestamp", r.Type.I64, 6), e.writeI64(this.end_timestamp), e.writeFieldEnd()), null !== this.bucketing_key && void 0 !== this.bucketing_key && (e.writeFieldBegin("bucketing_key", r.Type.STRING, 7), e.writeString(this.bucketing_key), e.writeFieldEnd()), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 8), e.writeString(this.version), e.writeFieldEnd()), null !== this.bucketing_value && void 0 !== this.bucketing_value && (e.writeFieldBegin("bucketing_value", r.Type.STRING, 9), e.writeString(this.bucketing_value), e.writeFieldEnd()), null !== this.is_override && void 0 !== this.is_override && (e.writeFieldBegin("is_override", r.Type.BOOL, 10), e.writeBool(this.is_override), e.writeFieldEnd()), null !== this.variant_names && void 0 !== this.variant_names) {
					for (var t in e.writeFieldBegin("variant_names", r.Type.LIST, 11), e.writeListBegin(r.Type.STRING, this.variant_names.length), this.variant_names) this.variant_names.hasOwnProperty(t) && (t = this.variant_names[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.variant_percentages && void 0 !== this.variant_percentages) {
					for (var i in e.writeFieldBegin("variant_percentages", r.Type.LIST, 12), e.writeListBegin(r.Type.DOUBLE, this.variant_percentages.length), this.variant_percentages) this.variant_percentages.hasOwnProperty(i) && (i = this.variant_percentages[i], e.writeDouble(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.active && void 0 !== this.active && (e.writeFieldBegin("active", r.Type.BOOL, 13), e.writeBool(this.active), e.writeFieldEnd()), null !== this.github_link && void 0 !== this.github_link && (e.writeFieldBegin("github_link", r.Type.STRING, 15), e.writeString(this.github_link), e.writeFieldEnd()), null !== this.info && void 0 !== this.info && (e.writeFieldBegin("info", r.Type.STRING, 16), e.writeString(this.info), e.writeFieldEnd()), null !== this.qa_proxy_event && void 0 !== this.qa_proxy_event && (e.writeFieldBegin("qa_proxy_event", r.Type.STRING, 17), e.writeString(this.qa_proxy_event), e.writeFieldEnd()), null !== this.bucketing_type && void 0 !== this.bucketing_type && (e.writeFieldBegin("bucketing_type", r.Type.STRING, 18), e.writeString(this.bucketing_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ClickTest = function(e) {
				if (this.id = null, this.name = null, this.owner = null, this.variant = null, this.prompt = null, this.response = null, this.page_type = null, e) {
					if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
					this.id = e.id, void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.owner && null !== e.owner && (this.owner = e.owner), void 0 !== e.variant && null !== e.variant && (this.variant = e.variant), void 0 !== e.prompt && null !== e.prompt && (this.prompt = e.prompt), void 0 !== e.response && null !== e.response && (this.response = e.response), void 0 !== e.page_type && null !== e.page_type && (this.page_type = e.page_type)
				}
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("ClickTest"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 1), e.writeI64(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.owner && void 0 !== this.owner && (e.writeFieldBegin("owner", r.Type.STRING, 3), e.writeString(this.owner), e.writeFieldEnd()), null !== this.variant && void 0 !== this.variant && (e.writeFieldBegin("variant", r.Type.STRING, 4), e.writeString(this.variant), e.writeFieldEnd()), null !== this.prompt && void 0 !== this.prompt && (e.writeFieldBegin("prompt", r.Type.STRING, 5), e.writeString(this.prompt), e.writeFieldEnd()), null !== this.response && void 0 !== this.response && (e.writeFieldBegin("response", r.Type.STRING, 6), e.writeString(this.response), e.writeFieldEnd()), null !== this.page_type && void 0 !== this.page_type && (e.writeFieldBegin("page_type", r.Type.STRING, 7), e.writeString(this.page_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/feature_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Feature = function(e) {
					this.name = null, this.version = null, this.version_description = null, e && (void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.version_description && null !== e.version_description && (this.version_description = e.version_description))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Feature"), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 1), e.writeString(this.name), e.writeFieldEnd()), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 2), e.writeString(this.version), e.writeFieldEnd()), null !== this.version_description && void 0 !== this.version_description && (e.writeFieldBegin("version_description", r.Type.STRING, 3), e.writeString(this.version_description), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/feed_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Feed = function(e) {
					this.correlation_id = null, this.id = null, this.serving_position = null, this.referrer_correlation_id = null, e && (void 0 !== e.correlation_id && null !== e.correlation_id && (this.correlation_id = e.correlation_id), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.serving_position && null !== e.serving_position && (this.serving_position = e.serving_position), void 0 !== e.referrer_correlation_id && null !== e.referrer_correlation_id && (this.referrer_correlation_id = e.referrer_correlation_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Feed"), null !== this.correlation_id && void 0 !== this.correlation_id && (e.writeFieldBegin("correlation_id", r.Type.STRING, 1), e.writeString(this.correlation_id), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 2), e.writeString(this.id), e.writeFieldEnd()), null !== this.serving_position && void 0 !== this.serving_position && (e.writeFieldBegin("serving_position", r.Type.I64, 3), e.writeI64(this.serving_position), e.writeFieldEnd()), null !== this.referrer_correlation_id && void 0 !== this.referrer_correlation_id && (e.writeFieldBegin("referrer_correlation_id", r.Type.STRING, 4), e.writeString(this.referrer_correlation_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/funding_instrument_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/adtypedefs_types.js"), i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.FundingInstrument = function(e) {
					this.id = null, this.created_timestamp = null, this.last_modified_timestamp = null, this.user_id = null, this.type = null, this.start_timestamp = null, this.end_timestamp = null, this.name = null, this.line_item_id = null, this.authorize_payment_profile_id = null, this.authorize_profile_id = null, this.servable = null, this.admin_id = null, this.credit_line_micros = null, this.balance_micros = null, this.billing_threshold_micros = null, this.total_spending_micros = null, this.total_payment_micros = null, this.spent_freebies_micros = null, this.available_freebies_micros = null, this.overdelivery_micros = null, this.total_refund_micros = null, this.overwrite = null, this.payment_id = null, this.original_payment_id = null, this.legacy_transaction_id = null, this.active = null, this.is_effective = null, this.level = null, this.netsuite_customer_internal_id = null, this.max_billing_threshold_micros = null, this.estimated_spending_micros = null, this.writeoff_micros = null, this.adzerk_lifetime_micros = null, this.rollup_timestamp = null, this.timezone = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.last_modified_timestamp && null !== e.last_modified_timestamp && (this.last_modified_timestamp = e.last_modified_timestamp), void 0 !== e.user_id && null !== e.user_id && (this.user_id = e.user_id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.start_timestamp && null !== e.start_timestamp && (this.start_timestamp = e.start_timestamp), void 0 !== e.end_timestamp && null !== e.end_timestamp && (this.end_timestamp = e.end_timestamp), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.line_item_id && null !== e.line_item_id && (this.line_item_id = e.line_item_id), void 0 !== e.authorize_payment_profile_id && null !== e.authorize_payment_profile_id && (this.authorize_payment_profile_id = e.authorize_payment_profile_id), void 0 !== e.authorize_profile_id && null !== e.authorize_profile_id && (this.authorize_profile_id = e.authorize_profile_id), void 0 !== e.servable && null !== e.servable && (this.servable = e.servable), void 0 !== e.admin_id && null !== e.admin_id && (this.admin_id = e.admin_id), void 0 !== e.credit_line_micros && null !== e.credit_line_micros && (this.credit_line_micros = e.credit_line_micros), void 0 !== e.balance_micros && null !== e.balance_micros && (this.balance_micros = e.balance_micros), void 0 !== e.billing_threshold_micros && null !== e.billing_threshold_micros && (this.billing_threshold_micros = e.billing_threshold_micros), void 0 !== e.total_spending_micros && null !== e.total_spending_micros && (this.total_spending_micros = e.total_spending_micros), void 0 !== e.total_payment_micros && null !== e.total_payment_micros && (this.total_payment_micros = e.total_payment_micros), void 0 !== e.spent_freebies_micros && null !== e.spent_freebies_micros && (this.spent_freebies_micros = e.spent_freebies_micros), void 0 !== e.available_freebies_micros && null !== e.available_freebies_micros && (this.available_freebies_micros = e.available_freebies_micros), void 0 !== e.overdelivery_micros && null !== e.overdelivery_micros && (this.overdelivery_micros = e.overdelivery_micros), void 0 !== e.total_refund_micros && null !== e.total_refund_micros && (this.total_refund_micros = e.total_refund_micros), void 0 !== e.overwrite && null !== e.overwrite && (this.overwrite = e.overwrite), void 0 !== e.payment_id && null !== e.payment_id && (this.payment_id = e.payment_id), void 0 !== e.original_payment_id && null !== e.original_payment_id && (this.original_payment_id = e.original_payment_id), void 0 !== e.legacy_transaction_id && null !== e.legacy_transaction_id && (this.legacy_transaction_id = e.legacy_transaction_id), void 0 !== e.active && null !== e.active && (this.active = e.active), void 0 !== e.is_effective && null !== e.is_effective && (this.is_effective = e.is_effective), void 0 !== e.level && null !== e.level && (this.level = e.level), void 0 !== e.netsuite_customer_internal_id && null !== e.netsuite_customer_internal_id && (this.netsuite_customer_internal_id = e.netsuite_customer_internal_id), void 0 !== e.max_billing_threshold_micros && null !== e.max_billing_threshold_micros && (this.max_billing_threshold_micros = e.max_billing_threshold_micros), void 0 !== e.estimated_spending_micros && null !== e.estimated_spending_micros && (this.estimated_spending_micros = e.estimated_spending_micros), void 0 !== e.writeoff_micros && null !== e.writeoff_micros && (this.writeoff_micros = e.writeoff_micros), void 0 !== e.adzerk_lifetime_micros && null !== e.adzerk_lifetime_micros && (this.adzerk_lifetime_micros = e.adzerk_lifetime_micros), void 0 !== e.rollup_timestamp && null !== e.rollup_timestamp && (this.rollup_timestamp = e.rollup_timestamp), void 0 !== e.timezone && null !== e.timezone && (this.timezone = e.timezone))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("FundingInstrument"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 1), e.writeI64(this.id), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 2), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.last_modified_timestamp && void 0 !== this.last_modified_timestamp && (e.writeFieldBegin("last_modified_timestamp", r.Type.I64, 3), e.writeI64(this.last_modified_timestamp), e.writeFieldEnd()), null !== this.user_id && void 0 !== this.user_id && (e.writeFieldBegin("user_id", r.Type.STRING, 4), e.writeString(this.user_id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 5), e.writeString(this.type), e.writeFieldEnd()), null !== this.start_timestamp && void 0 !== this.start_timestamp && (e.writeFieldBegin("start_timestamp", r.Type.I64, 6), e.writeI64(this.start_timestamp), e.writeFieldEnd()), null !== this.end_timestamp && void 0 !== this.end_timestamp && (e.writeFieldBegin("end_timestamp", r.Type.I64, 7), e.writeI64(this.end_timestamp), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 8), e.writeString(this.name), e.writeFieldEnd()), null !== this.line_item_id && void 0 !== this.line_item_id && (e.writeFieldBegin("line_item_id", r.Type.STRING, 9), e.writeString(this.line_item_id), e.writeFieldEnd()), null !== this.authorize_payment_profile_id && void 0 !== this.authorize_payment_profile_id && (e.writeFieldBegin("authorize_payment_profile_id", r.Type.STRING, 10), e.writeString(this.authorize_payment_profile_id), e.writeFieldEnd()), null !== this.authorize_profile_id && void 0 !== this.authorize_profile_id && (e.writeFieldBegin("authorize_profile_id", r.Type.STRING, 11), e.writeString(this.authorize_profile_id), e.writeFieldEnd()), null !== this.servable && void 0 !== this.servable && (e.writeFieldBegin("servable", r.Type.BOOL, 12), e.writeBool(this.servable), e.writeFieldEnd()), null !== this.admin_id && void 0 !== this.admin_id && (e.writeFieldBegin("admin_id", r.Type.STRING, 13), e.writeString(this.admin_id), e.writeFieldEnd()), null !== this.credit_line_micros && void 0 !== this.credit_line_micros && (e.writeFieldBegin("credit_line_micros", r.Type.I64, 14), e.writeI64(this.credit_line_micros), e.writeFieldEnd()), null !== this.balance_micros && void 0 !== this.balance_micros && (e.writeFieldBegin("balance_micros", r.Type.I64, 15), e.writeI64(this.balance_micros), e.writeFieldEnd()), null !== this.billing_threshold_micros && void 0 !== this.billing_threshold_micros && (e.writeFieldBegin("billing_threshold_micros", r.Type.I64, 16), e.writeI64(this.billing_threshold_micros), e.writeFieldEnd()), null !== this.total_spending_micros && void 0 !== this.total_spending_micros && (e.writeFieldBegin("total_spending_micros", r.Type.I64, 17), e.writeI64(this.total_spending_micros), e.writeFieldEnd()), null !== this.total_payment_micros && void 0 !== this.total_payment_micros && (e.writeFieldBegin("total_payment_micros", r.Type.I64, 18), e.writeI64(this.total_payment_micros), e.writeFieldEnd()), null !== this.spent_freebies_micros && void 0 !== this.spent_freebies_micros && (e.writeFieldBegin("spent_freebies_micros", r.Type.I64, 19), e.writeI64(this.spent_freebies_micros), e.writeFieldEnd()), null !== this.available_freebies_micros && void 0 !== this.available_freebies_micros && (e.writeFieldBegin("available_freebies_micros", r.Type.I64, 20), e.writeI64(this.available_freebies_micros), e.writeFieldEnd()), null !== this.overdelivery_micros && void 0 !== this.overdelivery_micros && (e.writeFieldBegin("overdelivery_micros", r.Type.I64, 21), e.writeI64(this.overdelivery_micros), e.writeFieldEnd()), null !== this.total_refund_micros && void 0 !== this.total_refund_micros && (e.writeFieldBegin("total_refund_micros", r.Type.I64, 22), e.writeI64(this.total_refund_micros), e.writeFieldEnd()), null !== this.overwrite && void 0 !== this.overwrite && (e.writeFieldBegin("overwrite", r.Type.BOOL, 23), e.writeBool(this.overwrite), e.writeFieldEnd()), null !== this.payment_id && void 0 !== this.payment_id && (e.writeFieldBegin("payment_id", r.Type.STRING, 24), e.writeString(this.payment_id), e.writeFieldEnd()), null !== this.original_payment_id && void 0 !== this.original_payment_id && (e.writeFieldBegin("original_payment_id", r.Type.STRING, 25), e.writeString(this.original_payment_id), e.writeFieldEnd()), null !== this.legacy_transaction_id && void 0 !== this.legacy_transaction_id && (e.writeFieldBegin("legacy_transaction_id", r.Type.STRING, 26), e.writeString(this.legacy_transaction_id), e.writeFieldEnd()), null !== this.active && void 0 !== this.active && (e.writeFieldBegin("active", r.Type.BOOL, 27), e.writeBool(this.active), e.writeFieldEnd()), null !== this.is_effective && void 0 !== this.is_effective && (e.writeFieldBegin("is_effective", r.Type.BOOL, 28), e.writeBool(this.is_effective), e.writeFieldEnd()), null !== this.level && void 0 !== this.level && (e.writeFieldBegin("level", r.Type.STRING, 29), e.writeString(this.level), e.writeFieldEnd()), null !== this.netsuite_customer_internal_id && void 0 !== this.netsuite_customer_internal_id && (e.writeFieldBegin("netsuite_customer_internal_id", r.Type.STRING, 30), e.writeString(this.netsuite_customer_internal_id), e.writeFieldEnd()), null !== this.max_billing_threshold_micros && void 0 !== this.max_billing_threshold_micros && (e.writeFieldBegin("max_billing_threshold_micros", r.Type.I64, 31), e.writeI64(this.max_billing_threshold_micros), e.writeFieldEnd()), null !== this.estimated_spending_micros && void 0 !== this.estimated_spending_micros && (e.writeFieldBegin("estimated_spending_micros", r.Type.I64, 32), e.writeI64(this.estimated_spending_micros), e.writeFieldEnd()), null !== this.writeoff_micros && void 0 !== this.writeoff_micros && (e.writeFieldBegin("writeoff_micros", r.Type.I64, 33), e.writeI64(this.writeoff_micros), e.writeFieldEnd()), null !== this.adzerk_lifetime_micros && void 0 !== this.adzerk_lifetime_micros && (e.writeFieldBegin("adzerk_lifetime_micros", r.Type.I64, 34), e.writeI64(this.adzerk_lifetime_micros), e.writeFieldEnd()), null !== this.rollup_timestamp && void 0 !== this.rollup_timestamp && (e.writeFieldBegin("rollup_timestamp", r.Type.I64, 35), e.writeI64(this.rollup_timestamp), e.writeFieldEnd()), null !== this.timezone && void 0 !== this.timezone && (e.writeFieldBegin("timezone", r.Type.STRING, 36), e.writeString(this.timezone), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/geo_block_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.GeoBlock = function(e) {
					this.countries = null, this.reason = null, this.public_note = null, this.response_code = null, e && (void 0 !== e.countries && null !== e.countries && (this.countries = r.copyList(e.countries, [null])), void 0 !== e.reason && null !== e.reason && (this.reason = e.reason), void 0 !== e.public_note && null !== e.public_note && (this.public_note = e.public_note), void 0 !== e.response_code && null !== e.response_code && (this.response_code = e.response_code))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("GeoBlock"), null !== this.countries && void 0 !== this.countries) {
					for (var t in e.writeFieldBegin("countries", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.countries.length), this.countries) this.countries.hasOwnProperty(t) && (t = this.countries[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.reason && void 0 !== this.reason && (e.writeFieldBegin("reason", r.Type.STRING, 2), e.writeString(this.reason), e.writeFieldEnd()), null !== this.public_note && void 0 !== this.public_note && (e.writeFieldBegin("public_note", r.Type.STRING, 3), e.writeString(this.public_note), e.writeFieldEnd()), null !== this.response_code && void 0 !== this.response_code && (e.writeFieldBegin("response_code", r.Type.I32, 4), e.writeI32(this.response_code), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/gold_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.GoldPurchase = function(e) {
					this.type = null, this.number_months = null, this.one_time_type = null, this.gift_user_id = null, this.gift_anonymous = null, this.gift_message = null, this.gift_message_length = null, this.number_creddits = null, this.subscription_type = null, this.gilded_content = null, this.source = null, this.number_coins = null, this.number_coins_monthly = null, this.number_coins_bonus = null, this.transaction_id = null, this.content_type = null, this.default_option = null, this.default_anonymous = null, this.purchased_coins = null, this.proxy_for_user_id = null, this.award_id = null, this.award_name = null, this.is_mod_award = null, this.available_award_ids = null, this.number_coins_to_recipient = null, this.number_coins_to_community = null, this.start_timestamp = null, this.end_timestamp = null, this.gift_public = null, this.number_free_coins = null, this.number_paid_coins = null, this.paid_coins_revenue_pennies = null, this.coin_package_id = null, this.is_temporary_award = null, this.is_sale_enabled = null, this.coin_bonus_percentage = null, this.coin_sale_percentage = null, this.offer_context = null, this.offer_type = null, this.award_col_position = null, this.award_row_position = null, this.awarder_karma_earned = null, this.awardee_karma_earned = null, this.user_post_award_karma = null, this.user_comment_award_karma = null, this.target_user_post_karma = null, this.target_user_comment_karma = null, this.user_subreddit_post_karma = null, this.user_subreddit_comment_karma = null, this.award_affects_awardee_karma = null, this.award_affects_awarder_karma = null, this.filter_name = null, this.filter_id = null, this.award_spotlight_status = null, this.award_inventory_type = null, this.coins_profile_id = null, this.is_predict_within_answer_period = null, this.group_award_tier = null, this.number_weeks_premium = null, this.group_award_count = null, this.premium_marketing_benefit = null, this.transfer_currency_type = null, this.transfer_type = null, this.transfer_amount = null, this.premium_cancel_reason = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.number_months && null !== e.number_months && (this.number_months = e.number_months), void 0 !== e.one_time_type && null !== e.one_time_type && (this.one_time_type = e.one_time_type), void 0 !== e.gift_user_id && null !== e.gift_user_id && (this.gift_user_id = e.gift_user_id), void 0 !== e.gift_anonymous && null !== e.gift_anonymous && (this.gift_anonymous = e.gift_anonymous), void 0 !== e.gift_message && null !== e.gift_message && (this.gift_message = e.gift_message), void 0 !== e.gift_message_length && null !== e.gift_message_length && (this.gift_message_length = e.gift_message_length), void 0 !== e.number_creddits && null !== e.number_creddits && (this.number_creddits = e.number_creddits), void 0 !== e.subscription_type && null !== e.subscription_type && (this.subscription_type = e.subscription_type), void 0 !== e.gilded_content && null !== e.gilded_content && (this.gilded_content = e.gilded_content), void 0 !== e.source && null !== e.source && (this.source = e.source), void 0 !== e.number_coins && null !== e.number_coins && (this.number_coins = e.number_coins), void 0 !== e.number_coins_monthly && null !== e.number_coins_monthly && (this.number_coins_monthly = e.number_coins_monthly), void 0 !== e.number_coins_bonus && null !== e.number_coins_bonus && (this.number_coins_bonus = e.number_coins_bonus), void 0 !== e.transaction_id && null !== e.transaction_id && (this.transaction_id = e.transaction_id), void 0 !== e.content_type && null !== e.content_type && (this.content_type = e.content_type), void 0 !== e.default_option && null !== e.default_option && (this.default_option = e.default_option), void 0 !== e.default_anonymous && null !== e.default_anonymous && (this.default_anonymous = e.default_anonymous), void 0 !== e.purchased_coins && null !== e.purchased_coins && (this.purchased_coins = e.purchased_coins), void 0 !== e.proxy_for_user_id && null !== e.proxy_for_user_id && (this.proxy_for_user_id = e.proxy_for_user_id), void 0 !== e.award_id && null !== e.award_id && (this.award_id = e.award_id), void 0 !== e.award_name && null !== e.award_name && (this.award_name = e.award_name), void 0 !== e.is_mod_award && null !== e.is_mod_award && (this.is_mod_award = e.is_mod_award), void 0 !== e.available_award_ids && null !== e.available_award_ids && (this.available_award_ids = r.copyList(e.available_award_ids, [null])), void 0 !== e.number_coins_to_recipient && null !== e.number_coins_to_recipient && (this.number_coins_to_recipient = e.number_coins_to_recipient), void 0 !== e.number_coins_to_community && null !== e.number_coins_to_community && (this.number_coins_to_community = e.number_coins_to_community), void 0 !== e.start_timestamp && null !== e.start_timestamp && (this.start_timestamp = e.start_timestamp), void 0 !== e.end_timestamp && null !== e.end_timestamp && (this.end_timestamp = e.end_timestamp), void 0 !== e.gift_public && null !== e.gift_public && (this.gift_public = e.gift_public), void 0 !== e.number_free_coins && null !== e.number_free_coins && (this.number_free_coins = e.number_free_coins), void 0 !== e.number_paid_coins && null !== e.number_paid_coins && (this.number_paid_coins = e.number_paid_coins), void 0 !== e.paid_coins_revenue_pennies && null !== e.paid_coins_revenue_pennies && (this.paid_coins_revenue_pennies = e.paid_coins_revenue_pennies), void 0 !== e.coin_package_id && null !== e.coin_package_id && (this.coin_package_id = e.coin_package_id), void 0 !== e.is_temporary_award && null !== e.is_temporary_award && (this.is_temporary_award = e.is_temporary_award), void 0 !== e.is_sale_enabled && null !== e.is_sale_enabled && (this.is_sale_enabled = e.is_sale_enabled), void 0 !== e.coin_bonus_percentage && null !== e.coin_bonus_percentage && (this.coin_bonus_percentage = e.coin_bonus_percentage), void 0 !== e.coin_sale_percentage && null !== e.coin_sale_percentage && (this.coin_sale_percentage = e.coin_sale_percentage), void 0 !== e.offer_context && null !== e.offer_context && (this.offer_context = e.offer_context), void 0 !== e.offer_type && null !== e.offer_type && (this.offer_type = e.offer_type), void 0 !== e.award_col_position && null !== e.award_col_position && (this.award_col_position = e.award_col_position), void 0 !== e.award_row_position && null !== e.award_row_position && (this.award_row_position = e.award_row_position), void 0 !== e.awarder_karma_earned && null !== e.awarder_karma_earned && (this.awarder_karma_earned = e.awarder_karma_earned), void 0 !== e.awardee_karma_earned && null !== e.awardee_karma_earned && (this.awardee_karma_earned = e.awardee_karma_earned), void 0 !== e.user_post_award_karma && null !== e.user_post_award_karma && (this.user_post_award_karma = e.user_post_award_karma), void 0 !== e.user_comment_award_karma && null !== e.user_comment_award_karma && (this.user_comment_award_karma = e.user_comment_award_karma), void 0 !== e.target_user_post_karma && null !== e.target_user_post_karma && (this.target_user_post_karma = e.target_user_post_karma), void 0 !== e.target_user_comment_karma && null !== e.target_user_comment_karma && (this.target_user_comment_karma = e.target_user_comment_karma), void 0 !== e.user_subreddit_post_karma && null !== e.user_subreddit_post_karma && (this.user_subreddit_post_karma = e.user_subreddit_post_karma), void 0 !== e.user_subreddit_comment_karma && null !== e.user_subreddit_comment_karma && (this.user_subreddit_comment_karma = e.user_subreddit_comment_karma), void 0 !== e.award_affects_awardee_karma && null !== e.award_affects_awardee_karma && (this.award_affects_awardee_karma = e.award_affects_awardee_karma), void 0 !== e.award_affects_awarder_karma && null !== e.award_affects_awarder_karma && (this.award_affects_awarder_karma = e.award_affects_awarder_karma), void 0 !== e.filter_name && null !== e.filter_name && (this.filter_name = e.filter_name), void 0 !== e.filter_id && null !== e.filter_id && (this.filter_id = e.filter_id), void 0 !== e.award_spotlight_status && null !== e.award_spotlight_status && (this.award_spotlight_status = e.award_spotlight_status), void 0 !== e.award_inventory_type && null !== e.award_inventory_type && (this.award_inventory_type = e.award_inventory_type), void 0 !== e.coins_profile_id && null !== e.coins_profile_id && (this.coins_profile_id = e.coins_profile_id), void 0 !== e.is_predict_within_answer_period && null !== e.is_predict_within_answer_period && (this.is_predict_within_answer_period = e.is_predict_within_answer_period), void 0 !== e.group_award_tier && null !== e.group_award_tier && (this.group_award_tier = e.group_award_tier), void 0 !== e.number_weeks_premium && null !== e.number_weeks_premium && (this.number_weeks_premium = e.number_weeks_premium), void 0 !== e.group_award_count && null !== e.group_award_count && (this.group_award_count = e.group_award_count), void 0 !== e.premium_marketing_benefit && null !== e.premium_marketing_benefit && (this.premium_marketing_benefit = e.premium_marketing_benefit), void 0 !== e.transfer_currency_type && null !== e.transfer_currency_type && (this.transfer_currency_type = e.transfer_currency_type), void 0 !== e.transfer_type && null !== e.transfer_type && (this.transfer_type = e.transfer_type), void 0 !== e.transfer_amount && null !== e.transfer_amount && (this.transfer_amount = e.transfer_amount), void 0 !== e.premium_cancel_reason && null !== e.premium_cancel_reason && (this.premium_cancel_reason = e.premium_cancel_reason))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("GoldPurchase"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.number_months && void 0 !== this.number_months && (e.writeFieldBegin("number_months", r.Type.I32, 2), e.writeI32(this.number_months), e.writeFieldEnd()), null !== this.one_time_type && void 0 !== this.one_time_type && (e.writeFieldBegin("one_time_type", r.Type.STRING, 3), e.writeString(this.one_time_type), e.writeFieldEnd()), null !== this.gift_user_id && void 0 !== this.gift_user_id && (e.writeFieldBegin("gift_user_id", r.Type.STRING, 4), e.writeString(this.gift_user_id), e.writeFieldEnd()), null !== this.gift_anonymous && void 0 !== this.gift_anonymous && (e.writeFieldBegin("gift_anonymous", r.Type.BOOL, 5), e.writeBool(this.gift_anonymous), e.writeFieldEnd()), null !== this.gift_message && void 0 !== this.gift_message && (e.writeFieldBegin("gift_message", r.Type.BOOL, 6), e.writeBool(this.gift_message), e.writeFieldEnd()), null !== this.gift_message_length && void 0 !== this.gift_message_length && (e.writeFieldBegin("gift_message_length", r.Type.I32, 7), e.writeI32(this.gift_message_length), e.writeFieldEnd()), null !== this.number_creddits && void 0 !== this.number_creddits && (e.writeFieldBegin("number_creddits", r.Type.I32, 8), e.writeI32(this.number_creddits), e.writeFieldEnd()), null !== this.subscription_type && void 0 !== this.subscription_type && (e.writeFieldBegin("subscription_type", r.Type.STRING, 9), e.writeString(this.subscription_type), e.writeFieldEnd()), null !== this.gilded_content && void 0 !== this.gilded_content && (e.writeFieldBegin("gilded_content", r.Type.BOOL, 10), e.writeBool(this.gilded_content), e.writeFieldEnd()), null !== this.source && void 0 !== this.source && (e.writeFieldBegin("source", r.Type.STRING, 11), e.writeString(this.source), e.writeFieldEnd()), null !== this.number_coins && void 0 !== this.number_coins && (e.writeFieldBegin("number_coins", r.Type.I32, 12), e.writeI32(this.number_coins), e.writeFieldEnd()), null !== this.number_coins_monthly && void 0 !== this.number_coins_monthly && (e.writeFieldBegin("number_coins_monthly", r.Type.I32, 13), e.writeI32(this.number_coins_monthly), e.writeFieldEnd()), null !== this.number_coins_bonus && void 0 !== this.number_coins_bonus && (e.writeFieldBegin("number_coins_bonus", r.Type.I32, 14), e.writeI32(this.number_coins_bonus), e.writeFieldEnd()), null !== this.transaction_id && void 0 !== this.transaction_id && (e.writeFieldBegin("transaction_id", r.Type.STRING, 15), e.writeString(this.transaction_id), e.writeFieldEnd()), null !== this.content_type && void 0 !== this.content_type && (e.writeFieldBegin("content_type", r.Type.STRING, 16), e.writeString(this.content_type), e.writeFieldEnd()), null !== this.default_option && void 0 !== this.default_option && (e.writeFieldBegin("default_option", r.Type.STRING, 17), e.writeString(this.default_option), e.writeFieldEnd()), null !== this.default_anonymous && void 0 !== this.default_anonymous && (e.writeFieldBegin("default_anonymous", r.Type.BOOL, 18), e.writeBool(this.default_anonymous), e.writeFieldEnd()), null !== this.purchased_coins && void 0 !== this.purchased_coins && (e.writeFieldBegin("purchased_coins", r.Type.BOOL, 19), e.writeBool(this.purchased_coins), e.writeFieldEnd()), null !== this.proxy_for_user_id && void 0 !== this.proxy_for_user_id && (e.writeFieldBegin("proxy_for_user_id", r.Type.STRING, 20), e.writeString(this.proxy_for_user_id), e.writeFieldEnd()), null !== this.award_id && void 0 !== this.award_id && (e.writeFieldBegin("award_id", r.Type.STRING, 21), e.writeString(this.award_id), e.writeFieldEnd()), null !== this.award_name && void 0 !== this.award_name && (e.writeFieldBegin("award_name", r.Type.STRING, 22), e.writeString(this.award_name), e.writeFieldEnd()), null !== this.is_mod_award && void 0 !== this.is_mod_award && (e.writeFieldBegin("is_mod_award", r.Type.BOOL, 23), e.writeBool(this.is_mod_award), e.writeFieldEnd()), null !== this.available_award_ids && void 0 !== this.available_award_ids) {
					for (var t in e.writeFieldBegin("available_award_ids", r.Type.LIST, 24), e.writeListBegin(r.Type.STRING, this.available_award_ids.length), this.available_award_ids) this.available_award_ids.hasOwnProperty(t) && (t = this.available_award_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.number_coins_to_recipient && void 0 !== this.number_coins_to_recipient && (e.writeFieldBegin("number_coins_to_recipient", r.Type.I32, 25), e.writeI32(this.number_coins_to_recipient), e.writeFieldEnd()), null !== this.number_coins_to_community && void 0 !== this.number_coins_to_community && (e.writeFieldBegin("number_coins_to_community", r.Type.I32, 26), e.writeI32(this.number_coins_to_community), e.writeFieldEnd()), null !== this.start_timestamp && void 0 !== this.start_timestamp && (e.writeFieldBegin("start_timestamp", r.Type.I64, 27), e.writeI64(this.start_timestamp), e.writeFieldEnd()), null !== this.end_timestamp && void 0 !== this.end_timestamp && (e.writeFieldBegin("end_timestamp", r.Type.I64, 28), e.writeI64(this.end_timestamp), e.writeFieldEnd()), null !== this.gift_public && void 0 !== this.gift_public && (e.writeFieldBegin("gift_public", r.Type.BOOL, 29), e.writeBool(this.gift_public), e.writeFieldEnd()), null !== this.number_free_coins && void 0 !== this.number_free_coins && (e.writeFieldBegin("number_free_coins", r.Type.I32, 30), e.writeI32(this.number_free_coins), e.writeFieldEnd()), null !== this.number_paid_coins && void 0 !== this.number_paid_coins && (e.writeFieldBegin("number_paid_coins", r.Type.I32, 31), e.writeI32(this.number_paid_coins), e.writeFieldEnd()), null !== this.paid_coins_revenue_pennies && void 0 !== this.paid_coins_revenue_pennies && (e.writeFieldBegin("paid_coins_revenue_pennies", r.Type.I32, 32), e.writeI32(this.paid_coins_revenue_pennies), e.writeFieldEnd()), null !== this.coin_package_id && void 0 !== this.coin_package_id && (e.writeFieldBegin("coin_package_id", r.Type.STRING, 33), e.writeString(this.coin_package_id), e.writeFieldEnd()), null !== this.is_temporary_award && void 0 !== this.is_temporary_award && (e.writeFieldBegin("is_temporary_award", r.Type.BOOL, 34), e.writeBool(this.is_temporary_award), e.writeFieldEnd()), null !== this.is_sale_enabled && void 0 !== this.is_sale_enabled && (e.writeFieldBegin("is_sale_enabled", r.Type.BOOL, 35), e.writeBool(this.is_sale_enabled), e.writeFieldEnd()), null !== this.coin_bonus_percentage && void 0 !== this.coin_bonus_percentage && (e.writeFieldBegin("coin_bonus_percentage", r.Type.DOUBLE, 36), e.writeDouble(this.coin_bonus_percentage), e.writeFieldEnd()), null !== this.coin_sale_percentage && void 0 !== this.coin_sale_percentage && (e.writeFieldBegin("coin_sale_percentage", r.Type.DOUBLE, 37), e.writeDouble(this.coin_sale_percentage), e.writeFieldEnd()), null !== this.offer_context && void 0 !== this.offer_context && (e.writeFieldBegin("offer_context", r.Type.STRING, 38), e.writeString(this.offer_context), e.writeFieldEnd()), null !== this.offer_type && void 0 !== this.offer_type && (e.writeFieldBegin("offer_type", r.Type.STRING, 39), e.writeString(this.offer_type), e.writeFieldEnd()), null !== this.award_col_position && void 0 !== this.award_col_position && (e.writeFieldBegin("award_col_position", r.Type.I32, 40), e.writeI32(this.award_col_position), e.writeFieldEnd()), null !== this.award_row_position && void 0 !== this.award_row_position && (e.writeFieldBegin("award_row_position", r.Type.I32, 41), e.writeI32(this.award_row_position), e.writeFieldEnd()), null !== this.awarder_karma_earned && void 0 !== this.awarder_karma_earned && (e.writeFieldBegin("awarder_karma_earned", r.Type.I64, 42), e.writeI64(this.awarder_karma_earned), e.writeFieldEnd()), null !== this.awardee_karma_earned && void 0 !== this.awardee_karma_earned && (e.writeFieldBegin("awardee_karma_earned", r.Type.I64, 43), e.writeI64(this.awardee_karma_earned), e.writeFieldEnd()), null !== this.user_post_award_karma && void 0 !== this.user_post_award_karma && (e.writeFieldBegin("user_post_award_karma", r.Type.I64, 44), e.writeI64(this.user_post_award_karma), e.writeFieldEnd()), null !== this.user_comment_award_karma && void 0 !== this.user_comment_award_karma && (e.writeFieldBegin("user_comment_award_karma", r.Type.I64, 45), e.writeI64(this.user_comment_award_karma), e.writeFieldEnd()), null !== this.target_user_post_karma && void 0 !== this.target_user_post_karma && (e.writeFieldBegin("target_user_post_karma", r.Type.I64, 46), e.writeI64(this.target_user_post_karma), e.writeFieldEnd()), null !== this.target_user_comment_karma && void 0 !== this.target_user_comment_karma && (e.writeFieldBegin("target_user_comment_karma", r.Type.I64, 47), e.writeI64(this.target_user_comment_karma), e.writeFieldEnd()), null !== this.user_subreddit_post_karma && void 0 !== this.user_subreddit_post_karma && (e.writeFieldBegin("user_subreddit_post_karma", r.Type.I64, 48), e.writeI64(this.user_subreddit_post_karma), e.writeFieldEnd()), null !== this.user_subreddit_comment_karma && void 0 !== this.user_subreddit_comment_karma && (e.writeFieldBegin("user_subreddit_comment_karma", r.Type.I64, 49), e.writeI64(this.user_subreddit_comment_karma), e.writeFieldEnd()), null !== this.award_affects_awardee_karma && void 0 !== this.award_affects_awardee_karma && (e.writeFieldBegin("award_affects_awardee_karma", r.Type.BOOL, 50), e.writeBool(this.award_affects_awardee_karma), e.writeFieldEnd()), null !== this.award_affects_awarder_karma && void 0 !== this.award_affects_awarder_karma && (e.writeFieldBegin("award_affects_awarder_karma", r.Type.BOOL, 51), e.writeBool(this.award_affects_awarder_karma), e.writeFieldEnd()), null !== this.filter_name && void 0 !== this.filter_name && (e.writeFieldBegin("filter_name", r.Type.STRING, 52), e.writeString(this.filter_name), e.writeFieldEnd()), null !== this.filter_id && void 0 !== this.filter_id && (e.writeFieldBegin("filter_id", r.Type.STRING, 53), e.writeString(this.filter_id), e.writeFieldEnd()), null !== this.award_spotlight_status && void 0 !== this.award_spotlight_status && (e.writeFieldBegin("award_spotlight_status", r.Type.STRING, 54), e.writeString(this.award_spotlight_status), e.writeFieldEnd()), null !== this.award_inventory_type && void 0 !== this.award_inventory_type && (e.writeFieldBegin("award_inventory_type", r.Type.STRING, 55), e.writeString(this.award_inventory_type), e.writeFieldEnd()), null !== this.coins_profile_id && void 0 !== this.coins_profile_id && (e.writeFieldBegin("coins_profile_id", r.Type.STRING, 56), e.writeString(this.coins_profile_id), e.writeFieldEnd()), null !== this.is_predict_within_answer_period && void 0 !== this.is_predict_within_answer_period && (e.writeFieldBegin("is_predict_within_answer_period", r.Type.BOOL, 57), e.writeBool(this.is_predict_within_answer_period), e.writeFieldEnd()), null !== this.group_award_tier && void 0 !== this.group_award_tier && (e.writeFieldBegin("group_award_tier", r.Type.STRING, 58), e.writeString(this.group_award_tier), e.writeFieldEnd()), null !== this.number_weeks_premium && void 0 !== this.number_weeks_premium && (e.writeFieldBegin("number_weeks_premium", r.Type.I32, 59), e.writeI32(this.number_weeks_premium), e.writeFieldEnd()), null !== this.group_award_count && void 0 !== this.group_award_count && (e.writeFieldBegin("group_award_count", r.Type.I32, 60), e.writeI32(this.group_award_count), e.writeFieldEnd()), null !== this.premium_marketing_benefit && void 0 !== this.premium_marketing_benefit && (e.writeFieldBegin("premium_marketing_benefit", r.Type.STRING, 61), e.writeString(this.premium_marketing_benefit), e.writeFieldEnd()), null !== this.transfer_currency_type && void 0 !== this.transfer_currency_type && (e.writeFieldBegin("transfer_currency_type", r.Type.STRING, 62), e.writeString(this.transfer_currency_type), e.writeFieldEnd()), null !== this.transfer_type && void 0 !== this.transfer_type && (e.writeFieldBegin("transfer_type", r.Type.STRING, 63), e.writeString(this.transfer_type), e.writeFieldEnd()), null !== this.transfer_amount && void 0 !== this.transfer_amount && (e.writeFieldBegin("transfer_amount", r.Type.I64, 64), e.writeI64(this.transfer_amount), e.writeFieldEnd()), null !== this.premium_cancel_reason && void 0 !== this.premium_cancel_reason && (e.writeFieldBegin("premium_cancel_reason", r.Type.STRING, 65), e.writeString(this.premium_cancel_reason), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/grapeshot_classification_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.GrapeshotClassification = function(e) {
					this.categories = null, e && void 0 !== e.categories && null !== e.categories && (this.categories = r.copyList(e.categories, [null]))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("GrapeshotClassification"), null !== this.categories && void 0 !== this.categories) {
					for (var t in e.writeFieldBegin("categories", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.categories.length), this.categories) this.categories.hasOwnProperty(t) && (t = this.categories[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/imposter_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Imposter = function(e) {
					this.game_id = null, this.note_text = null, this.note_id = null, this.notes_blob = null, this.success = null, this.imposter_id = null, this.note_ignore = null, e && (void 0 !== e.game_id && null !== e.game_id && (this.game_id = e.game_id), void 0 !== e.note_text && null !== e.note_text && (this.note_text = e.note_text), void 0 !== e.note_id && null !== e.note_id && (this.note_id = e.note_id), void 0 !== e.notes_blob && null !== e.notes_blob && (this.notes_blob = e.notes_blob), void 0 !== e.success && null !== e.success && (this.success = e.success), void 0 !== e.imposter_id && null !== e.imposter_id && (this.imposter_id = e.imposter_id), void 0 !== e.note_ignore && null !== e.note_ignore && (this.note_ignore = e.note_ignore))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Imposter"), null !== this.game_id && void 0 !== this.game_id && (e.writeFieldBegin("game_id", r.Type.STRING, 1), e.writeString(this.game_id), e.writeFieldEnd()), null !== this.note_text && void 0 !== this.note_text && (e.writeFieldBegin("note_text", r.Type.STRING, 2), e.writeString(this.note_text), e.writeFieldEnd()), null !== this.note_id && void 0 !== this.note_id && (e.writeFieldBegin("note_id", r.Type.STRING, 3), e.writeString(this.note_id), e.writeFieldEnd()), null !== this.notes_blob && void 0 !== this.notes_blob && (e.writeFieldBegin("notes_blob", r.Type.STRING, 4), e.writeString(this.notes_blob), e.writeFieldEnd()), null !== this.success && void 0 !== this.success && (e.writeFieldBegin("success", r.Type.BOOL, 5), e.writeBool(this.success), e.writeFieldEnd()), null !== this.imposter_id && void 0 !== this.imposter_id && (e.writeFieldBegin("imposter_id", r.Type.STRING, 6), e.writeString(this.imposter_id), e.writeFieldEnd()), null !== this.note_ignore && void 0 !== this.note_ignore && (e.writeFieldBegin("note_ignore", r.Type.BOOL, 7), e.writeBool(this.note_ignore), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/inbox_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Inbox = function(e) {
					this.id = null, this.tab = null, this.badge_count = null, this.is_viewed = null, this.is_clicked = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.tab && null !== e.tab && (this.tab = e.tab), void 0 !== e.badge_count && null !== e.badge_count && (this.badge_count = e.badge_count), void 0 !== e.is_viewed && null !== e.is_viewed && (this.is_viewed = e.is_viewed), void 0 !== e.is_clicked && null !== e.is_clicked && (this.is_clicked = e.is_clicked))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Inbox"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.tab && void 0 !== this.tab && (e.writeFieldBegin("tab", r.Type.STRING, 2), e.writeString(this.tab), e.writeFieldEnd()), null !== this.badge_count && void 0 !== this.badge_count && (e.writeFieldBegin("badge_count", r.Type.I64, 3), e.writeI64(this.badge_count), e.writeFieldEnd()), null !== this.is_viewed && void 0 !== this.is_viewed && (e.writeFieldBegin("is_viewed", r.Type.BOOL, 4), e.writeBool(this.is_viewed), e.writeFieldEnd()), null !== this.is_clicked && void 0 !== this.is_clicked && (e.writeFieldBegin("is_clicked", r.Type.BOOL, 5), e.writeBool(this.is_clicked), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/legal_export_request_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.LegalExportRequest = function(e) {
					this.user_ids = null, this.type = null, this.requested_information = null, this.status = null, this.due_timestamp = null, this.received_timestamp = null, this.started_timestamp = null, this.ended_timestamp = null, this.ads_data_status = null, this.gifts_data_status = null, this.has_ndo = null, this.automation_type = null, this.id = null, this.target_id = null, this.target_type = null, this.requestor_id = null, this.completed_timestamp = null, e && (void 0 !== e.user_ids && null !== e.user_ids && (this.user_ids = r.copyList(e.user_ids, [null])), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.requested_information && null !== e.requested_information && (this.requested_information = r.copyList(e.requested_information, [null])), void 0 !== e.status && null !== e.status && (this.status = e.status), void 0 !== e.due_timestamp && null !== e.due_timestamp && (this.due_timestamp = e.due_timestamp), void 0 !== e.received_timestamp && null !== e.received_timestamp && (this.received_timestamp = e.received_timestamp), void 0 !== e.started_timestamp && null !== e.started_timestamp && (this.started_timestamp = e.started_timestamp), void 0 !== e.ended_timestamp && null !== e.ended_timestamp && (this.ended_timestamp = e.ended_timestamp), void 0 !== e.ads_data_status && null !== e.ads_data_status && (this.ads_data_status = e.ads_data_status), void 0 !== e.gifts_data_status && null !== e.gifts_data_status && (this.gifts_data_status = e.gifts_data_status), void 0 !== e.has_ndo && null !== e.has_ndo && (this.has_ndo = e.has_ndo), void 0 !== e.automation_type && null !== e.automation_type && (this.automation_type = e.automation_type), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.target_id && null !== e.target_id && (this.target_id = e.target_id), void 0 !== e.target_type && null !== e.target_type && (this.target_type = e.target_type), void 0 !== e.requestor_id && null !== e.requestor_id && (this.requestor_id = e.requestor_id), void 0 !== e.completed_timestamp && null !== e.completed_timestamp && (this.completed_timestamp = e.completed_timestamp))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("LegalExportRequest"), null !== this.user_ids && void 0 !== this.user_ids) {
					for (var t in e.writeFieldBegin("user_ids", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.user_ids.length), this.user_ids) this.user_ids.hasOwnProperty(t) && (t = this.user_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.requested_information && void 0 !== this.requested_information) {
					for (var i in e.writeFieldBegin("requested_information", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.requested_information.length), this.requested_information) this.requested_information.hasOwnProperty(i) && (i = this.requested_information[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 4), e.writeString(this.status), e.writeFieldEnd()), null !== this.due_timestamp && void 0 !== this.due_timestamp && (e.writeFieldBegin("due_timestamp", r.Type.I64, 5), e.writeI64(this.due_timestamp), e.writeFieldEnd()), null !== this.received_timestamp && void 0 !== this.received_timestamp && (e.writeFieldBegin("received_timestamp", r.Type.I64, 6), e.writeI64(this.received_timestamp), e.writeFieldEnd()), null !== this.started_timestamp && void 0 !== this.started_timestamp && (e.writeFieldBegin("started_timestamp", r.Type.I64, 7), e.writeI64(this.started_timestamp), e.writeFieldEnd()), null !== this.ended_timestamp && void 0 !== this.ended_timestamp && (e.writeFieldBegin("ended_timestamp", r.Type.I64, 8), e.writeI64(this.ended_timestamp), e.writeFieldEnd()), null !== this.ads_data_status && void 0 !== this.ads_data_status && (e.writeFieldBegin("ads_data_status", r.Type.STRING, 9), e.writeString(this.ads_data_status), e.writeFieldEnd()), null !== this.gifts_data_status && void 0 !== this.gifts_data_status && (e.writeFieldBegin("gifts_data_status", r.Type.STRING, 10), e.writeString(this.gifts_data_status), e.writeFieldEnd()), null !== this.has_ndo && void 0 !== this.has_ndo && (e.writeFieldBegin("has_ndo", r.Type.BOOL, 11), e.writeBool(this.has_ndo), e.writeFieldEnd()), null !== this.automation_type && void 0 !== this.automation_type && (e.writeFieldBegin("automation_type", r.Type.STRING, 12), e.writeString(this.automation_type), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 13), e.writeI64(this.id), e.writeFieldEnd()), null !== this.target_id && void 0 !== this.target_id && (e.writeFieldBegin("target_id", r.Type.STRING, 14), e.writeString(this.target_id), e.writeFieldEnd()), null !== this.target_type && void 0 !== this.target_type && (e.writeFieldBegin("target_type", r.Type.STRING, 15), e.writeString(this.target_type), e.writeFieldEnd()), null !== this.requestor_id && void 0 !== this.requestor_id && (e.writeFieldBegin("requestor_id", r.Type.STRING, 16), e.writeString(this.requestor_id), e.writeFieldEnd()), null !== this.completed_timestamp && void 0 !== this.completed_timestamp && (e.writeFieldBegin("completed_timestamp", r.Type.I64, 17), e.writeI64(this.completed_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/live_thread_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.LiveThread = function(e) {
					this.id = null, this.is_announcement = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.is_announcement && null !== e.is_announcement && (this.is_announcement = e.is_announcement))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("LiveThread"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.is_announcement && void 0 !== this.is_announcement && (e.writeFieldBegin("is_announcement", r.Type.BOOL, 2), e.writeBool(this.is_announcement), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/liveaudio_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.LiveAudioRoom = function(e) {
					this.id = null, this.title = null, this.platform = null, this.creator_id = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.platform && null !== e.platform && (this.platform = e.platform), void 0 !== e.creator_id && null !== e.creator_id && (this.creator_id = e.creator_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("LiveAudioRoom"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), null !== this.platform && void 0 !== this.platform && (e.writeFieldBegin("platform", r.Type.STRING, 3), e.writeString(this.platform), e.writeFieldEnd()), null !== this.creator_id && void 0 !== this.creator_id && (e.writeFieldBegin("creator_id", r.Type.STRING, 4), e.writeString(this.creator_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.LiveAudioRoomUser = function(e) {
				this.platform_id = null, this.role = null, this.speaker_eligibility = null, e && (void 0 !== e.platform_id && null !== e.platform_id && (this.platform_id = e.platform_id), void 0 !== e.role && null !== e.role && (this.role = e.role), void 0 !== e.speaker_eligibility && null !== e.speaker_eligibility && (this.speaker_eligibility = e.speaker_eligibility))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("LiveAudioRoomUser"), null !== this.platform_id && void 0 !== this.platform_id && (e.writeFieldBegin("platform_id", r.Type.STRING, 1), e.writeString(this.platform_id), e.writeFieldEnd()), null !== this.role && void 0 !== this.role && (e.writeFieldBegin("role", r.Type.STRING, 2), e.writeString(this.role), e.writeFieldEnd()), null !== this.speaker_eligibility && void 0 !== this.speaker_eligibility && (e.writeFieldBegin("speaker_eligibility", r.Type.STRING, 3), e.writeString(this.speaker_eligibility), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/metaflair_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.MetaFlair = function(e) {
					if (this.id = null, this.title = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.title && null !== e.title && (this.title = e.title)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("MetaFlair"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/metasearch_types.js": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/es6.array.sort.js");
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.MetaSearch = function(e) {
					if (this.display_query = null, this.raw_query = null, this.structure_type = null, this.sort = null, this.range = null, this.subreddit_id = null, this.subreddit_name = null, this.post_flair_name = null, this.meta_flair_id = null, this.meta_flair_name = null, this.number_previous_window = null, this.number_current_window = null, e) {
						if (void 0 !== e.display_query && null !== e.display_query && (this.display_query = e.display_query), void 0 !== e.raw_query && null !== e.raw_query && (this.raw_query = e.raw_query), void 0 === e.structure_type || null === e.structure_type) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field structure_type is unset!");
						this.structure_type = e.structure_type, void 0 !== e.sort && null !== e.sort && (this.sort = e.sort), void 0 !== e.range && null !== e.range && (this.range = e.range), void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.subreddit_name && null !== e.subreddit_name && (this.subreddit_name = e.subreddit_name), void 0 !== e.post_flair_name && null !== e.post_flair_name && (this.post_flair_name = e.post_flair_name), void 0 !== e.meta_flair_id && null !== e.meta_flair_id && (this.meta_flair_id = e.meta_flair_id), void 0 !== e.meta_flair_name && null !== e.meta_flair_name && (this.meta_flair_name = e.meta_flair_name), void 0 !== e.number_previous_window && null !== e.number_previous_window && (this.number_previous_window = e.number_previous_window), void 0 !== e.number_current_window && null !== e.number_current_window && (this.number_current_window = e.number_current_window)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("MetaSearch"), null !== this.display_query && void 0 !== this.display_query && (e.writeFieldBegin("display_query", r.Type.STRING, 1), e.writeString(this.display_query), e.writeFieldEnd()), null !== this.raw_query && void 0 !== this.raw_query && (e.writeFieldBegin("raw_query", r.Type.STRING, 2), e.writeString(this.raw_query), e.writeFieldEnd()), null !== this.structure_type && void 0 !== this.structure_type && (e.writeFieldBegin("structure_type", r.Type.STRING, 3), e.writeString(this.structure_type), e.writeFieldEnd()), null !== this.sort && void 0 !== this.sort && (e.writeFieldBegin("sort", r.Type.STRING, 4), e.writeString(this.sort), e.writeFieldEnd()), null !== this.range && void 0 !== this.range && (e.writeFieldBegin("range", r.Type.STRING, 5), e.writeString(this.range), e.writeFieldEnd()), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 6), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.subreddit_name && void 0 !== this.subreddit_name && (e.writeFieldBegin("subreddit_name", r.Type.STRING, 7), e.writeString(this.subreddit_name), e.writeFieldEnd()), null !== this.post_flair_name && void 0 !== this.post_flair_name && (e.writeFieldBegin("post_flair_name", r.Type.STRING, 8), e.writeString(this.post_flair_name), e.writeFieldEnd()), null !== this.meta_flair_id && void 0 !== this.meta_flair_id && (e.writeFieldBegin("meta_flair_id", r.Type.STRING, 9), e.writeString(this.meta_flair_id), e.writeFieldEnd()), null !== this.meta_flair_name && void 0 !== this.meta_flair_name && (e.writeFieldBegin("meta_flair_name", r.Type.STRING, 10), e.writeString(this.meta_flair_name), e.writeFieldEnd()), null !== this.number_previous_window && void 0 !== this.number_previous_window && (e.writeFieldBegin("number_previous_window", r.Type.I32, 11), e.writeI32(this.number_previous_window), e.writeFieldEnd()), null !== this.number_current_window && void 0 !== this.number_current_window && (e.writeFieldBegin("number_current_window", r.Type.I32, 12), e.writeI32(this.number_current_window), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/midas_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ContentMetadata = function(e) {
					this.is_quarantined = null, this.is_nsfw = null, this.categories = null, e && (void 0 !== e.is_quarantined && null !== e.is_quarantined && (this.is_quarantined = e.is_quarantined), void 0 !== e.is_nsfw && null !== e.is_nsfw && (this.is_nsfw = e.is_nsfw), void 0 !== e.categories && null !== e.categories && (this.categories = r.copyList(e.categories, [null])))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("ContentMetadata"), null !== this.is_quarantined && void 0 !== this.is_quarantined && (e.writeFieldBegin("is_quarantined", r.Type.BOOL, 1), e.writeBool(this.is_quarantined), e.writeFieldEnd()), null !== this.is_nsfw && void 0 !== this.is_nsfw && (e.writeFieldBegin("is_nsfw", r.Type.BOOL, 2), e.writeBool(this.is_nsfw), e.writeFieldEnd()), null !== this.categories && void 0 !== this.categories) {
					for (var t in e.writeFieldBegin("categories", r.Type.LIST, 3), e.writeListBegin(r.Type.STRING, this.categories.length), this.categories) this.categories.hasOwnProperty(t) && (t = this.categories[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Geo = function(e) {
				this.country_code = null, this.region = null, this.city = null, this.time_zone = null, this.anonymous = null, this.anonymous_vpn = null, this.hosting_provider = null, this.public_proxy = null, this.tor_exit_node = null, this.metro_code = null, e && (void 0 !== e.country_code && null !== e.country_code && (this.country_code = e.country_code), void 0 !== e.region && null !== e.region && (this.region = e.region), void 0 !== e.city && null !== e.city && (this.city = e.city), void 0 !== e.time_zone && null !== e.time_zone && (this.time_zone = e.time_zone), void 0 !== e.anonymous && null !== e.anonymous && (this.anonymous = e.anonymous), void 0 !== e.anonymous_vpn && null !== e.anonymous_vpn && (this.anonymous_vpn = e.anonymous_vpn), void 0 !== e.hosting_provider && null !== e.hosting_provider && (this.hosting_provider = e.hosting_provider), void 0 !== e.public_proxy && null !== e.public_proxy && (this.public_proxy = e.public_proxy), void 0 !== e.tor_exit_node && null !== e.tor_exit_node && (this.tor_exit_node = e.tor_exit_node), void 0 !== e.metro_code && null !== e.metro_code && (this.metro_code = e.metro_code))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Geo"), null !== this.country_code && void 0 !== this.country_code && (e.writeFieldBegin("country_code", r.Type.STRING, 1), e.writeString(this.country_code), e.writeFieldEnd()), null !== this.region && void 0 !== this.region && (e.writeFieldBegin("region", r.Type.STRING, 2), e.writeString(this.region), e.writeFieldEnd()), null !== this.city && void 0 !== this.city && (e.writeFieldBegin("city", r.Type.STRING, 3), e.writeString(this.city), e.writeFieldEnd()), null !== this.time_zone && void 0 !== this.time_zone && (e.writeFieldBegin("time_zone", r.Type.STRING, 4), e.writeString(this.time_zone), e.writeFieldEnd()), null !== this.anonymous && void 0 !== this.anonymous && (e.writeFieldBegin("anonymous", r.Type.BOOL, 5), e.writeBool(this.anonymous), e.writeFieldEnd()), null !== this.anonymous_vpn && void 0 !== this.anonymous_vpn && (e.writeFieldBegin("anonymous_vpn", r.Type.BOOL, 6), e.writeBool(this.anonymous_vpn), e.writeFieldEnd()), null !== this.hosting_provider && void 0 !== this.hosting_provider && (e.writeFieldBegin("hosting_provider", r.Type.BOOL, 7), e.writeBool(this.hosting_provider), e.writeFieldEnd()), null !== this.public_proxy && void 0 !== this.public_proxy && (e.writeFieldBegin("public_proxy", r.Type.BOOL, 8), e.writeBool(this.public_proxy), e.writeFieldEnd()), null !== this.tor_exit_node && void 0 !== this.tor_exit_node && (e.writeFieldBegin("tor_exit_node", r.Type.BOOL, 9), e.writeBool(this.tor_exit_node), e.writeFieldEnd()), null !== this.metro_code && void 0 !== this.metro_code && (e.writeFieldBegin("metro_code", r.Type.I64, 10), e.writeI64(this.metro_code), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.UrlParsed = function(e) {
				this.shared_timestamp = null, this.utm_source = null, this.utm_name = null, this.shared_hash = null, this.utm_campaign = null, this.utm_content = null, this.utm_medium = null, this.utm_term = null, e && (void 0 !== e.shared_timestamp && null !== e.shared_timestamp && (this.shared_timestamp = e.shared_timestamp), void 0 !== e.utm_source && null !== e.utm_source && (this.utm_source = e.utm_source), void 0 !== e.utm_name && null !== e.utm_name && (this.utm_name = e.utm_name), void 0 !== e.shared_hash && null !== e.shared_hash && (this.shared_hash = e.shared_hash), void 0 !== e.utm_campaign && null !== e.utm_campaign && (this.utm_campaign = e.utm_campaign), void 0 !== e.utm_content && null !== e.utm_content && (this.utm_content = e.utm_content), void 0 !== e.utm_medium && null !== e.utm_medium && (this.utm_medium = e.utm_medium), void 0 !== e.utm_term && null !== e.utm_term && (this.utm_term = e.utm_term))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("UrlParsed"), null !== this.shared_timestamp && void 0 !== this.shared_timestamp && (e.writeFieldBegin("shared_timestamp", r.Type.I64, 1), e.writeI64(this.shared_timestamp), e.writeFieldEnd()), null !== this.utm_source && void 0 !== this.utm_source && (e.writeFieldBegin("utm_source", r.Type.STRING, 2), e.writeString(this.utm_source), e.writeFieldEnd()), null !== this.utm_name && void 0 !== this.utm_name && (e.writeFieldBegin("utm_name", r.Type.STRING, 3), e.writeString(this.utm_name), e.writeFieldEnd()), null !== this.shared_hash && void 0 !== this.shared_hash && (e.writeFieldBegin("shared_hash", r.Type.STRING, 4), e.writeString(this.shared_hash), e.writeFieldEnd()), null !== this.utm_campaign && void 0 !== this.utm_campaign && (e.writeFieldBegin("utm_campaign", r.Type.STRING, 5), e.writeString(this.utm_campaign), e.writeFieldEnd()), null !== this.utm_content && void 0 !== this.utm_content && (e.writeFieldBegin("utm_content", r.Type.STRING, 6), e.writeString(this.utm_content), e.writeFieldEnd()), null !== this.utm_medium && void 0 !== this.utm_medium && (e.writeFieldBegin("utm_medium", r.Type.STRING, 7), e.writeString(this.utm_medium), e.writeFieldEnd()), null !== this.utm_term && void 0 !== this.utm_term && (e.writeFieldBegin("utm_term", r.Type.STRING, 8), e.writeString(this.utm_term), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.LinkSharing = function(e) {
				this.shared_at_timestamp = null, e && void 0 !== e.shared_at_timestamp && null !== e.shared_at_timestamp && (this.shared_at_timestamp = e.shared_at_timestamp)
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("LinkSharing"), null !== this.shared_at_timestamp && void 0 !== this.shared_at_timestamp && (e.writeFieldBegin("shared_at_timestamp", r.Type.I64, 1), e.writeI64(this.shared_at_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var l = e.exports.Inferred = function(e) {
				this.app_name = null, this.client_ip = null, this.user_agent_web_crawler = null, this.post_impression_id = null, this.json_byte_size = null, this.isp_organization = null, e && (void 0 !== e.app_name && null !== e.app_name && (this.app_name = e.app_name), void 0 !== e.client_ip && null !== e.client_ip && (this.client_ip = e.client_ip), void 0 !== e.user_agent_web_crawler && null !== e.user_agent_web_crawler && (this.user_agent_web_crawler = e.user_agent_web_crawler), void 0 !== e.post_impression_id && null !== e.post_impression_id && (this.post_impression_id = e.post_impression_id), void 0 !== e.json_byte_size && null !== e.json_byte_size && (this.json_byte_size = e.json_byte_size), void 0 !== e.isp_organization && null !== e.isp_organization && (this.isp_organization = e.isp_organization))
			};
			l.prototype = {}, l.prototype.write = function(e) {
				e.writeStructBegin("Inferred"), null !== this.app_name && void 0 !== this.app_name && (e.writeFieldBegin("app_name", r.Type.STRING, 1), e.writeString(this.app_name), e.writeFieldEnd()), null !== this.client_ip && void 0 !== this.client_ip && (e.writeFieldBegin("client_ip", r.Type.STRING, 2), e.writeString(this.client_ip), e.writeFieldEnd()), null !== this.user_agent_web_crawler && void 0 !== this.user_agent_web_crawler && (e.writeFieldBegin("user_agent_web_crawler", r.Type.BOOL, 3), e.writeBool(this.user_agent_web_crawler), e.writeFieldEnd()), null !== this.post_impression_id && void 0 !== this.post_impression_id && (e.writeFieldBegin("post_impression_id", r.Type.I64, 4), e.writeI64(this.post_impression_id), e.writeFieldEnd()), null !== this.json_byte_size && void 0 !== this.json_byte_size && (e.writeFieldBegin("json_byte_size", r.Type.I64, 5), e.writeI64(this.json_byte_size), e.writeFieldEnd()), null !== this.isp_organization && void 0 !== this.isp_organization && (e.writeFieldBegin("isp_organization", r.Type.STRING, 6), e.writeString(this.isp_organization), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var u = e.exports.IPSplitting = function(e) {
				this.request_client_ip_is_ipv6 = null, this.request_client_ip_network = null, this.request_client_ip_interface = null, this.inferred_client_ip_is_ipv6 = null, this.inferred_client_ip_network = null, this.inferred_client_ip_interface = null, e && (void 0 !== e.request_client_ip_is_ipv6 && null !== e.request_client_ip_is_ipv6 && (this.request_client_ip_is_ipv6 = e.request_client_ip_is_ipv6), void 0 !== e.request_client_ip_network && null !== e.request_client_ip_network && (this.request_client_ip_network = e.request_client_ip_network), void 0 !== e.request_client_ip_interface && null !== e.request_client_ip_interface && (this.request_client_ip_interface = e.request_client_ip_interface), void 0 !== e.inferred_client_ip_is_ipv6 && null !== e.inferred_client_ip_is_ipv6 && (this.inferred_client_ip_is_ipv6 = e.inferred_client_ip_is_ipv6), void 0 !== e.inferred_client_ip_network && null !== e.inferred_client_ip_network && (this.inferred_client_ip_network = e.inferred_client_ip_network), void 0 !== e.inferred_client_ip_interface && null !== e.inferred_client_ip_interface && (this.inferred_client_ip_interface = e.inferred_client_ip_interface))
			};
			u.prototype = {}, u.prototype.write = function(e) {
				e.writeStructBegin("IPSplitting"), null !== this.request_client_ip_is_ipv6 && void 0 !== this.request_client_ip_is_ipv6 && (e.writeFieldBegin("request_client_ip_is_ipv6", r.Type.BOOL, 1), e.writeBool(this.request_client_ip_is_ipv6), e.writeFieldEnd()), null !== this.request_client_ip_network && void 0 !== this.request_client_ip_network && (e.writeFieldBegin("request_client_ip_network", r.Type.STRING, 2), e.writeString(this.request_client_ip_network), e.writeFieldEnd()), null !== this.request_client_ip_interface && void 0 !== this.request_client_ip_interface && (e.writeFieldBegin("request_client_ip_interface", r.Type.STRING, 3), e.writeString(this.request_client_ip_interface), e.writeFieldEnd()), null !== this.inferred_client_ip_is_ipv6 && void 0 !== this.inferred_client_ip_is_ipv6 && (e.writeFieldBegin("inferred_client_ip_is_ipv6", r.Type.BOOL, 4), e.writeBool(this.inferred_client_ip_is_ipv6), e.writeFieldEnd()), null !== this.inferred_client_ip_network && void 0 !== this.inferred_client_ip_network && (e.writeFieldBegin("inferred_client_ip_network", r.Type.STRING, 5), e.writeString(this.inferred_client_ip_network), e.writeFieldEnd()), null !== this.inferred_client_ip_interface && void 0 !== this.inferred_client_ip_interface && (e.writeFieldBegin("inferred_client_ip_interface", r.Type.STRING, 6), e.writeString(this.inferred_client_ip_interface), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/ml_model_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.MLModel = function(e) {
					this.name = null, this.version = null, this.owner = null, this.prediction = null, this.features = null, this.prediction_id = null, this.client_name = null, this.prediction_scores = null, this.type = null, e && (void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.owner && null !== e.owner && (this.owner = e.owner), void 0 !== e.prediction && null !== e.prediction && (this.prediction = e.prediction), void 0 !== e.features && null !== e.features && (this.features = e.features), void 0 !== e.prediction_id && null !== e.prediction_id && (this.prediction_id = e.prediction_id), void 0 !== e.client_name && null !== e.client_name && (this.client_name = e.client_name), void 0 !== e.prediction_scores && null !== e.prediction_scores && (this.prediction_scores = e.prediction_scores), void 0 !== e.type && null !== e.type && (this.type = e.type))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("MLModel"), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 1), e.writeString(this.name), e.writeFieldEnd()), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 2), e.writeString(this.version), e.writeFieldEnd()), null !== this.owner && void 0 !== this.owner && (e.writeFieldBegin("owner", r.Type.STRING, 3), e.writeString(this.owner), e.writeFieldEnd()), null !== this.prediction && void 0 !== this.prediction && (e.writeFieldBegin("prediction", r.Type.STRING, 4), e.writeString(this.prediction), e.writeFieldEnd()), null !== this.features && void 0 !== this.features && (e.writeFieldBegin("features", r.Type.STRING, 5), e.writeString(this.features), e.writeFieldEnd()), null !== this.prediction_id && void 0 !== this.prediction_id && (e.writeFieldBegin("prediction_id", r.Type.STRING, 6), e.writeString(this.prediction_id), e.writeFieldEnd()), null !== this.client_name && void 0 !== this.client_name && (e.writeFieldBegin("client_name", r.Type.STRING, 7), e.writeString(this.client_name), e.writeFieldEnd()), null !== this.prediction_scores && void 0 !== this.prediction_scores && (e.writeFieldBegin("prediction_scores", r.Type.STRING, 8), e.writeString(this.prediction_scores), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 9), e.writeString(this.type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/moderator_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ModAction = function(e) {
					this.target_user_id = null, this.is_automoderator = null, this.is_target_removed_by_steward = null, this.duration = null, this.trigger = null, this.trigger_message = null, this.action = null, e && (void 0 !== e.target_user_id && null !== e.target_user_id && (this.target_user_id = e.target_user_id), void 0 !== e.is_automoderator && null !== e.is_automoderator && (this.is_automoderator = e.is_automoderator), void 0 !== e.is_target_removed_by_steward && null !== e.is_target_removed_by_steward && (this.is_target_removed_by_steward = e.is_target_removed_by_steward), void 0 !== e.duration && null !== e.duration && (this.duration = e.duration), void 0 !== e.trigger && null !== e.trigger && (this.trigger = e.trigger), void 0 !== e.trigger_message && null !== e.trigger_message && (this.trigger_message = e.trigger_message), void 0 !== e.action && null !== e.action && (this.action = e.action))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ModAction"), null !== this.target_user_id && void 0 !== this.target_user_id && (e.writeFieldBegin("target_user_id", r.Type.STRING, 1), e.writeString(this.target_user_id), e.writeFieldEnd()), null !== this.is_automoderator && void 0 !== this.is_automoderator && (e.writeFieldBegin("is_automoderator", r.Type.BOOL, 2), e.writeBool(this.is_automoderator), e.writeFieldEnd()), null !== this.is_target_removed_by_steward && void 0 !== this.is_target_removed_by_steward && (e.writeFieldBegin("is_target_removed_by_steward", r.Type.BOOL, 3), e.writeBool(this.is_target_removed_by_steward), e.writeFieldEnd()), null !== this.duration && void 0 !== this.duration && (e.writeFieldBegin("duration", r.Type.I32, 4), e.writeI32(this.duration), e.writeFieldEnd()), null !== this.trigger && void 0 !== this.trigger && (e.writeFieldBegin("trigger", r.Type.STRING, 5), e.writeString(this.trigger), e.writeFieldEnd()), null !== this.trigger_message && void 0 !== this.trigger_message && (e.writeFieldBegin("trigger_message", r.Type.STRING, 6), e.writeString(this.trigger_message), e.writeFieldEnd()), null !== this.action && void 0 !== this.action && (e.writeFieldBegin("action", r.Type.STRING, 7), e.writeString(this.action), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/modmail_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ModmailConversation = function(e) {
					this.id = null, this.subreddit_id = null, this.subject = null, this.state = null, this.number_messages = null, this.last_user_update_timestamp = null, this.last_mod_update_timestamp = null, this.is_internal = null, this.is_auto = null, this.is_highlighted = null, this.legacy_first_message_id = null, this.participant_id = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.subject && null !== e.subject && (this.subject = e.subject), void 0 !== e.state && null !== e.state && (this.state = e.state), void 0 !== e.number_messages && null !== e.number_messages && (this.number_messages = e.number_messages), void 0 !== e.last_user_update_timestamp && null !== e.last_user_update_timestamp && (this.last_user_update_timestamp = e.last_user_update_timestamp), void 0 !== e.last_mod_update_timestamp && null !== e.last_mod_update_timestamp && (this.last_mod_update_timestamp = e.last_mod_update_timestamp), void 0 !== e.is_internal && null !== e.is_internal && (this.is_internal = e.is_internal), void 0 !== e.is_auto && null !== e.is_auto && (this.is_auto = e.is_auto), void 0 !== e.is_highlighted && null !== e.is_highlighted && (this.is_highlighted = e.is_highlighted), void 0 !== e.legacy_first_message_id && null !== e.legacy_first_message_id && (this.legacy_first_message_id = e.legacy_first_message_id), void 0 !== e.participant_id && null !== e.participant_id && (this.participant_id = e.participant_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ModmailConversation"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 2), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.subject && void 0 !== this.subject && (e.writeFieldBegin("subject", r.Type.STRING, 3), e.writeString(this.subject), e.writeFieldEnd()), null !== this.state && void 0 !== this.state && (e.writeFieldBegin("state", r.Type.STRING, 4), e.writeString(this.state), e.writeFieldEnd()), null !== this.number_messages && void 0 !== this.number_messages && (e.writeFieldBegin("number_messages", r.Type.I32, 5), e.writeI32(this.number_messages), e.writeFieldEnd()), null !== this.last_user_update_timestamp && void 0 !== this.last_user_update_timestamp && (e.writeFieldBegin("last_user_update_timestamp", r.Type.I64, 6), e.writeI64(this.last_user_update_timestamp), e.writeFieldEnd()), null !== this.last_mod_update_timestamp && void 0 !== this.last_mod_update_timestamp && (e.writeFieldBegin("last_mod_update_timestamp", r.Type.I64, 7), e.writeI64(this.last_mod_update_timestamp), e.writeFieldEnd()), null !== this.is_internal && void 0 !== this.is_internal && (e.writeFieldBegin("is_internal", r.Type.BOOL, 8), e.writeBool(this.is_internal), e.writeFieldEnd()), null !== this.is_auto && void 0 !== this.is_auto && (e.writeFieldBegin("is_auto", r.Type.BOOL, 9), e.writeBool(this.is_auto), e.writeFieldEnd()), null !== this.is_highlighted && void 0 !== this.is_highlighted && (e.writeFieldBegin("is_highlighted", r.Type.BOOL, 10), e.writeBool(this.is_highlighted), e.writeFieldEnd()), null !== this.legacy_first_message_id && void 0 !== this.legacy_first_message_id && (e.writeFieldBegin("legacy_first_message_id", r.Type.STRING, 11), e.writeString(this.legacy_first_message_id), e.writeFieldEnd()), null !== this.participant_id && void 0 !== this.participant_id && (e.writeFieldBegin("participant_id", r.Type.STRING, 12), e.writeString(this.participant_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ModmailMessage = function(e) {
				this.id = null, this.conversation_id = null, this.date_timestamp = null, this.author_id = null, this.body = null, this.is_internal = null, this.author_is_sr_moderator = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.conversation_id && null !== e.conversation_id && (this.conversation_id = e.conversation_id), void 0 !== e.date_timestamp && null !== e.date_timestamp && (this.date_timestamp = e.date_timestamp), void 0 !== e.author_id && null !== e.author_id && (this.author_id = e.author_id), void 0 !== e.body && null !== e.body && (this.body = e.body), void 0 !== e.is_internal && null !== e.is_internal && (this.is_internal = e.is_internal), void 0 !== e.author_is_sr_moderator && null !== e.author_is_sr_moderator && (this.author_is_sr_moderator = e.author_is_sr_moderator))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("ModmailMessage"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.conversation_id && void 0 !== this.conversation_id && (e.writeFieldBegin("conversation_id", r.Type.STRING, 2), e.writeString(this.conversation_id), e.writeFieldEnd()), null !== this.date_timestamp && void 0 !== this.date_timestamp && (e.writeFieldBegin("date_timestamp", r.Type.I64, 3), e.writeI64(this.date_timestamp), e.writeFieldEnd()), null !== this.author_id && void 0 !== this.author_id && (e.writeFieldBegin("author_id", r.Type.STRING, 4), e.writeString(this.author_id), e.writeFieldEnd()), null !== this.body && void 0 !== this.body && (e.writeFieldBegin("body", r.Type.STRING, 5), e.writeString(this.body), e.writeFieldEnd()), null !== this.is_internal && void 0 !== this.is_internal && (e.writeFieldBegin("is_internal", r.Type.BOOL, 6), e.writeBool(this.is_internal), e.writeFieldEnd()), null !== this.author_is_sr_moderator && void 0 !== this.author_is_sr_moderator && (e.writeFieldBegin("author_is_sr_moderator", r.Type.BOOL, 7), e.writeBool(this.author_is_sr_moderator), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/modnote_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ModNote = function(e) {
					this.type = null, this.content = null, this.label = null, this.operator_id = null, this.filtered_subreddit_id = null, this.subreddit_search = null, this.filtered_type = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.content && null !== e.content && (this.content = e.content), void 0 !== e.label && null !== e.label && (this.label = e.label), void 0 !== e.operator_id && null !== e.operator_id && (this.operator_id = e.operator_id), void 0 !== e.filtered_subreddit_id && null !== e.filtered_subreddit_id && (this.filtered_subreddit_id = e.filtered_subreddit_id), void 0 !== e.subreddit_search && null !== e.subreddit_search && (this.subreddit_search = e.subreddit_search), void 0 !== e.filtered_type && null !== e.filtered_type && (this.filtered_type = e.filtered_type))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ModNote"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.content && void 0 !== this.content && (e.writeFieldBegin("content", r.Type.STRING, 2), e.writeString(this.content), e.writeFieldEnd()), null !== this.label && void 0 !== this.label && (e.writeFieldBegin("label", r.Type.STRING, 3), e.writeString(this.label), e.writeFieldEnd()), null !== this.operator_id && void 0 !== this.operator_id && (e.writeFieldBegin("operator_id", r.Type.STRING, 4), e.writeString(this.operator_id), e.writeFieldEnd()), null !== this.filtered_subreddit_id && void 0 !== this.filtered_subreddit_id && (e.writeFieldBegin("filtered_subreddit_id", r.Type.STRING, 5), e.writeString(this.filtered_subreddit_id), e.writeFieldEnd()), null !== this.subreddit_search && void 0 !== this.subreddit_search && (e.writeFieldBegin("subreddit_search", r.Type.STRING, 6), e.writeString(this.subreddit_search), e.writeFieldEnd()), null !== this.filtered_type && void 0 !== this.filtered_type && (e.writeFieldBegin("filtered_type", r.Type.STRING, 7), e.writeString(this.filtered_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/modqueue_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Modqueue = function(e) {
					this.type = null, this.count = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.count && null !== e.count && (this.count = e.count))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Modqueue"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.count && void 0 !== this.count && (e.writeFieldBegin("count", r.Type.I32, 2), e.writeI32(this.count), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ModqueueItem = function(e) {
				this.type = null, this.sort_timestamp = null, this.created_timestamp = null, this.modified_timestamp = null, this.reason = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.sort_timestamp && null !== e.sort_timestamp && (this.sort_timestamp = e.sort_timestamp), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.modified_timestamp && null !== e.modified_timestamp && (this.modified_timestamp = e.modified_timestamp), void 0 !== e.reason && null !== e.reason && (this.reason = e.reason))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("ModqueueItem"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.sort_timestamp && void 0 !== this.sort_timestamp && (e.writeFieldBegin("sort_timestamp", r.Type.I64, 2), e.writeI64(this.sort_timestamp), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 3), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.modified_timestamp && void 0 !== this.modified_timestamp && (e.writeFieldBegin("modified_timestamp", r.Type.I64, 4), e.writeI64(this.modified_timestamp), e.writeFieldEnd()), null !== this.reason && void 0 !== this.reason && (e.writeFieldBegin("reason", r.Type.STRING, 5), e.writeString(this.reason), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.ModqueueTrigger = function(e) {
				this.type = null, this.message = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.message && null !== e.message && (this.message = e.message))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("ModqueueTrigger"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.message && void 0 !== this.message && (e.writeFieldBegin("message", r.Type.STRING, 2), e.writeString(this.message), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/mute_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Mute = function(e) {
					this.total_mutes = null, this.last_mute_timestamp = null, this.state = null, e && (void 0 !== e.total_mutes && null !== e.total_mutes && (this.total_mutes = e.total_mutes), void 0 !== e.last_mute_timestamp && null !== e.last_mute_timestamp && (this.last_mute_timestamp = e.last_mute_timestamp), void 0 !== e.state && null !== e.state && (this.state = e.state))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Mute"), null !== this.total_mutes && void 0 !== this.total_mutes && (e.writeFieldBegin("total_mutes", r.Type.I32, 1), e.writeI32(this.total_mutes), e.writeFieldEnd()), null !== this.last_mute_timestamp && void 0 !== this.last_mute_timestamp && (e.writeFieldBegin("last_mute_timestamp", r.Type.I64, 2), e.writeI64(this.last_mute_timestamp), e.writeFieldEnd()), null !== this.state && void 0 !== this.state && (e.writeFieldBegin("state", r.Type.STRING, 3), e.writeString(this.state), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/navigation_session_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.NavigationSession = function(e) {
					this.id = null, this.referring_page_type = null, this.source = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.referring_page_type && null !== e.referring_page_type && (this.referring_page_type = e.referring_page_type), void 0 !== e.source && null !== e.source && (this.source = e.source))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("NavigationSession"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.referring_page_type && void 0 !== this.referring_page_type && (e.writeFieldBegin("referring_page_type", r.Type.STRING, 2), e.writeString(this.referring_page_type), e.writeFieldEnd()), null !== this.source && void 0 !== this.source && (e.writeFieldBegin("source", r.Type.STRING, 3), e.writeString(this.source), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/notification_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.MailroomRequest = function(e) {
					this.message_id = null, this.message_type = null, this.dropped_by = null, this.delivery_queue_name = null, this.notification_transport = null, this.notification_target = null, this.message_variant = null, this.region = null, this.region_num = null, e && (void 0 !== e.message_id && null !== e.message_id && (this.message_id = e.message_id), void 0 !== e.message_type && null !== e.message_type && (this.message_type = e.message_type), void 0 !== e.dropped_by && null !== e.dropped_by && (this.dropped_by = e.dropped_by), void 0 !== e.delivery_queue_name && null !== e.delivery_queue_name && (this.delivery_queue_name = e.delivery_queue_name), void 0 !== e.notification_transport && null !== e.notification_transport && (this.notification_transport = e.notification_transport), void 0 !== e.notification_target && null !== e.notification_target && (this.notification_target = e.notification_target), void 0 !== e.message_variant && null !== e.message_variant && (this.message_variant = e.message_variant), void 0 !== e.region && null !== e.region && (this.region = e.region), void 0 !== e.region_num && null !== e.region_num && (this.region_num = e.region_num))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("MailroomRequest"), null !== this.message_id && void 0 !== this.message_id && (e.writeFieldBegin("message_id", r.Type.STRING, 1), e.writeString(this.message_id), e.writeFieldEnd()), null !== this.message_type && void 0 !== this.message_type && (e.writeFieldBegin("message_type", r.Type.STRING, 2), e.writeString(this.message_type), e.writeFieldEnd()), null !== this.dropped_by && void 0 !== this.dropped_by && (e.writeFieldBegin("dropped_by", r.Type.STRING, 3), e.writeString(this.dropped_by), e.writeFieldEnd()), null !== this.delivery_queue_name && void 0 !== this.delivery_queue_name && (e.writeFieldBegin("delivery_queue_name", r.Type.STRING, 4), e.writeString(this.delivery_queue_name), e.writeFieldEnd()), null !== this.notification_transport && void 0 !== this.notification_transport && (e.writeFieldBegin("notification_transport", r.Type.STRING, 5), e.writeString(this.notification_transport), e.writeFieldEnd()), null !== this.notification_target && void 0 !== this.notification_target && (e.writeFieldBegin("notification_target", r.Type.STRING, 6), e.writeString(this.notification_target), e.writeFieldEnd()), null !== this.message_variant && void 0 !== this.message_variant && (e.writeFieldBegin("message_variant", r.Type.STRING, 7), e.writeString(this.message_variant), e.writeFieldEnd()), null !== this.region && void 0 !== this.region && (e.writeFieldBegin("region", r.Type.STRING, 8), e.writeString(this.region), e.writeFieldEnd()), null !== this.region_num && void 0 !== this.region_num && (e.writeFieldBegin("region_num", r.Type.I32, 9), e.writeI32(this.region_num), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.MessengerRequest = function(e) {
				this.message_type = null, this.dropped_reason = null, this.queue_name = null, e && (void 0 !== e.message_type && null !== e.message_type && (this.message_type = e.message_type), void 0 !== e.dropped_reason && null !== e.dropped_reason && (this.dropped_reason = e.dropped_reason), void 0 !== e.queue_name && null !== e.queue_name && (this.queue_name = e.queue_name))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("MessengerRequest"), null !== this.message_type && void 0 !== this.message_type && (e.writeFieldBegin("message_type", r.Type.STRING, 1), e.writeString(this.message_type), e.writeFieldEnd()), null !== this.dropped_reason && void 0 !== this.dropped_reason && (e.writeFieldBegin("dropped_reason", r.Type.STRING, 2), e.writeString(this.dropped_reason), e.writeFieldEnd()), null !== this.queue_name && void 0 !== this.queue_name && (e.writeFieldBegin("queue_name", r.Type.STRING, 3), e.writeString(this.queue_name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.NotificationRequest = function(e) {
				this.message_id = null, this.status = null, this.platform = null, this.failure_reason = null, this.source_queue_name = null, this.recipient_app_name = null, this.recipient_device_id = null, e && (void 0 !== e.message_id && null !== e.message_id && (this.message_id = e.message_id), void 0 !== e.status && null !== e.status && (this.status = e.status), void 0 !== e.platform && null !== e.platform && (this.platform = e.platform), void 0 !== e.failure_reason && null !== e.failure_reason && (this.failure_reason = e.failure_reason), void 0 !== e.source_queue_name && null !== e.source_queue_name && (this.source_queue_name = e.source_queue_name), void 0 !== e.recipient_app_name && null !== e.recipient_app_name && (this.recipient_app_name = e.recipient_app_name), void 0 !== e.recipient_device_id && null !== e.recipient_device_id && (this.recipient_device_id = e.recipient_device_id))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("NotificationRequest"), null !== this.message_id && void 0 !== this.message_id && (e.writeFieldBegin("message_id", r.Type.STRING, 1), e.writeString(this.message_id), e.writeFieldEnd()), null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 2), e.writeString(this.status), e.writeFieldEnd()), null !== this.platform && void 0 !== this.platform && (e.writeFieldBegin("platform", r.Type.STRING, 3), e.writeString(this.platform), e.writeFieldEnd()), null !== this.failure_reason && void 0 !== this.failure_reason && (e.writeFieldBegin("failure_reason", r.Type.STRING, 4), e.writeString(this.failure_reason), e.writeFieldEnd()), null !== this.source_queue_name && void 0 !== this.source_queue_name && (e.writeFieldBegin("source_queue_name", r.Type.STRING, 5), e.writeString(this.source_queue_name), e.writeFieldEnd()), null !== this.recipient_app_name && void 0 !== this.recipient_app_name && (e.writeFieldBegin("recipient_app_name", r.Type.STRING, 6), e.writeString(this.recipient_app_name), e.writeFieldEnd()), null !== this.recipient_device_id && void 0 !== this.recipient_device_id && (e.writeFieldBegin("recipient_device_id", r.Type.STRING, 7), e.writeString(this.recipient_device_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/outbound_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Outbound = function(e) {
					if (this.url = null, this.post_id = null, this.subreddit_id = null, this.comment_id = null, this.subreddit_name = null, this.source_element = null, e) {
						if (void 0 === e.url || null === e.url) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field url is unset!");
						this.url = e.url, void 0 !== e.post_id && null !== e.post_id && (this.post_id = e.post_id), void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.comment_id && null !== e.comment_id && (this.comment_id = e.comment_id), void 0 !== e.subreddit_name && null !== e.subreddit_name && (this.subreddit_name = e.subreddit_name), void 0 !== e.source_element && null !== e.source_element && (this.source_element = e.source_element)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Outbound"), null !== this.url && void 0 !== this.url && (e.writeFieldBegin("url", r.Type.STRING, 1), e.writeString(this.url), e.writeFieldEnd()), null !== this.post_id && void 0 !== this.post_id && (e.writeFieldBegin("post_id", r.Type.STRING, 2), e.writeString(this.post_id), e.writeFieldEnd()), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 3), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.comment_id && void 0 !== this.comment_id && (e.writeFieldBegin("comment_id", r.Type.STRING, 4), e.writeString(this.comment_id), e.writeFieldEnd()), null !== this.subreddit_name && void 0 !== this.subreddit_name && (e.writeFieldBegin("subreddit_name", r.Type.STRING, 5), e.writeString(this.subreddit_name), e.writeFieldEnd()), null !== this.source_element && void 0 !== this.source_element && (e.writeFieldBegin("source_element", r.Type.STRING, 6), e.writeString(this.source_element), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/payment_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Payment = function(e) {
					this.method = null, this.currency = null, this.amount_in_smallest_denom = null, this.default_option = null, this.stored_credit_card_state = null, this.local_currency = null, this.local_amount_in_smallest_denom = null, this.default_usd_amount = null, e && (void 0 !== e.method && null !== e.method && (this.method = e.method), void 0 !== e.currency && null !== e.currency && (this.currency = e.currency), void 0 !== e.amount_in_smallest_denom && null !== e.amount_in_smallest_denom && (this.amount_in_smallest_denom = e.amount_in_smallest_denom), void 0 !== e.default_option && null !== e.default_option && (this.default_option = e.default_option), void 0 !== e.stored_credit_card_state && null !== e.stored_credit_card_state && (this.stored_credit_card_state = e.stored_credit_card_state), void 0 !== e.local_currency && null !== e.local_currency && (this.local_currency = e.local_currency), void 0 !== e.local_amount_in_smallest_denom && null !== e.local_amount_in_smallest_denom && (this.local_amount_in_smallest_denom = e.local_amount_in_smallest_denom), void 0 !== e.default_usd_amount && null !== e.default_usd_amount && (this.default_usd_amount = e.default_usd_amount))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Payment"), null !== this.method && void 0 !== this.method && (e.writeFieldBegin("method", r.Type.STRING, 1), e.writeString(this.method), e.writeFieldEnd()), null !== this.currency && void 0 !== this.currency && (e.writeFieldBegin("currency", r.Type.STRING, 2), e.writeString(this.currency), e.writeFieldEnd()), null !== this.amount_in_smallest_denom && void 0 !== this.amount_in_smallest_denom && (e.writeFieldBegin("amount_in_smallest_denom", r.Type.I64, 3), e.writeI64(this.amount_in_smallest_denom), e.writeFieldEnd()), null !== this.default_option && void 0 !== this.default_option && (e.writeFieldBegin("default_option", r.Type.STRING, 4), e.writeString(this.default_option), e.writeFieldEnd()), null !== this.stored_credit_card_state && void 0 !== this.stored_credit_card_state && (e.writeFieldBegin("stored_credit_card_state", r.Type.STRING, 5), e.writeString(this.stored_credit_card_state), e.writeFieldEnd()), null !== this.local_currency && void 0 !== this.local_currency && (e.writeFieldBegin("local_currency", r.Type.STRING, 6), e.writeString(this.local_currency), e.writeFieldEnd()), null !== this.local_amount_in_smallest_denom && void 0 !== this.local_amount_in_smallest_denom && (e.writeFieldBegin("local_amount_in_smallest_denom", r.Type.I64, 7), e.writeI64(this.local_amount_in_smallest_denom), e.writeFieldEnd()), null !== this.default_usd_amount && void 0 !== this.default_usd_amount && (e.writeFieldBegin("default_usd_amount", r.Type.I64, 8), e.writeI64(this.default_usd_amount), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/perspective_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Perspective = function(e) {
					this.collapse_reasons = null, this.toxicity = null, this.severe_toxicity = null, this.insult = null, this.profanity = null, this.sexually_explicit = null, this.threat = null, this.flirtation = null, this.attack_on_author = null, this.attack_on_commenter = null, this.incoherent = null, this.inflammatory = null, this.likely_to_reject = null, this.obscene = null, this.spam = null, this.unsubstantial = null, this.identity_attack = null, this.id = null, this.max_toxicity = null, this.max_severe_toxicity = null, this.max_insult = null, this.max_profanity = null, this.max_sexually_explicit = null, this.max_threat = null, this.max_flirtation = null, this.max_attack_on_author = null, this.max_attack_on_commenter = null, this.max_incoherent = null, this.max_inflammatory = null, this.max_likely_to_reject = null, this.max_obscene = null, this.max_spam = null, this.max_unsubstantial = null, this.max_identity_attack = null, e && (void 0 !== e.collapse_reasons && null !== e.collapse_reasons && (this.collapse_reasons = r.copyList(e.collapse_reasons, [null])), void 0 !== e.toxicity && null !== e.toxicity && (this.toxicity = e.toxicity), void 0 !== e.severe_toxicity && null !== e.severe_toxicity && (this.severe_toxicity = e.severe_toxicity), void 0 !== e.insult && null !== e.insult && (this.insult = e.insult), void 0 !== e.profanity && null !== e.profanity && (this.profanity = e.profanity), void 0 !== e.sexually_explicit && null !== e.sexually_explicit && (this.sexually_explicit = e.sexually_explicit), void 0 !== e.threat && null !== e.threat && (this.threat = e.threat), void 0 !== e.flirtation && null !== e.flirtation && (this.flirtation = e.flirtation), void 0 !== e.attack_on_author && null !== e.attack_on_author && (this.attack_on_author = e.attack_on_author), void 0 !== e.attack_on_commenter && null !== e.attack_on_commenter && (this.attack_on_commenter = e.attack_on_commenter), void 0 !== e.incoherent && null !== e.incoherent && (this.incoherent = e.incoherent), void 0 !== e.inflammatory && null !== e.inflammatory && (this.inflammatory = e.inflammatory), void 0 !== e.likely_to_reject && null !== e.likely_to_reject && (this.likely_to_reject = e.likely_to_reject), void 0 !== e.obscene && null !== e.obscene && (this.obscene = e.obscene), void 0 !== e.spam && null !== e.spam && (this.spam = e.spam), void 0 !== e.unsubstantial && null !== e.unsubstantial && (this.unsubstantial = e.unsubstantial), void 0 !== e.identity_attack && null !== e.identity_attack && (this.identity_attack = e.identity_attack), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.max_toxicity && null !== e.max_toxicity && (this.max_toxicity = e.max_toxicity), void 0 !== e.max_severe_toxicity && null !== e.max_severe_toxicity && (this.max_severe_toxicity = e.max_severe_toxicity), void 0 !== e.max_insult && null !== e.max_insult && (this.max_insult = e.max_insult), void 0 !== e.max_profanity && null !== e.max_profanity && (this.max_profanity = e.max_profanity), void 0 !== e.max_sexually_explicit && null !== e.max_sexually_explicit && (this.max_sexually_explicit = e.max_sexually_explicit), void 0 !== e.max_threat && null !== e.max_threat && (this.max_threat = e.max_threat), void 0 !== e.max_flirtation && null !== e.max_flirtation && (this.max_flirtation = e.max_flirtation), void 0 !== e.max_attack_on_author && null !== e.max_attack_on_author && (this.max_attack_on_author = e.max_attack_on_author), void 0 !== e.max_attack_on_commenter && null !== e.max_attack_on_commenter && (this.max_attack_on_commenter = e.max_attack_on_commenter), void 0 !== e.max_incoherent && null !== e.max_incoherent && (this.max_incoherent = e.max_incoherent), void 0 !== e.max_inflammatory && null !== e.max_inflammatory && (this.max_inflammatory = e.max_inflammatory), void 0 !== e.max_likely_to_reject && null !== e.max_likely_to_reject && (this.max_likely_to_reject = e.max_likely_to_reject), void 0 !== e.max_obscene && null !== e.max_obscene && (this.max_obscene = e.max_obscene), void 0 !== e.max_spam && null !== e.max_spam && (this.max_spam = e.max_spam), void 0 !== e.max_unsubstantial && null !== e.max_unsubstantial && (this.max_unsubstantial = e.max_unsubstantial), void 0 !== e.max_identity_attack && null !== e.max_identity_attack && (this.max_identity_attack = e.max_identity_attack))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Perspective"), null !== this.collapse_reasons && void 0 !== this.collapse_reasons) {
					for (var t in e.writeFieldBegin("collapse_reasons", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.collapse_reasons.length), this.collapse_reasons) this.collapse_reasons.hasOwnProperty(t) && (t = this.collapse_reasons[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.toxicity && void 0 !== this.toxicity && (e.writeFieldBegin("toxicity", r.Type.DOUBLE, 50), e.writeDouble(this.toxicity), e.writeFieldEnd()), null !== this.severe_toxicity && void 0 !== this.severe_toxicity && (e.writeFieldBegin("severe_toxicity", r.Type.DOUBLE, 51), e.writeDouble(this.severe_toxicity), e.writeFieldEnd()), null !== this.insult && void 0 !== this.insult && (e.writeFieldBegin("insult", r.Type.DOUBLE, 53), e.writeDouble(this.insult), e.writeFieldEnd()), null !== this.profanity && void 0 !== this.profanity && (e.writeFieldBegin("profanity", r.Type.DOUBLE, 54), e.writeDouble(this.profanity), e.writeFieldEnd()), null !== this.sexually_explicit && void 0 !== this.sexually_explicit && (e.writeFieldBegin("sexually_explicit", r.Type.DOUBLE, 55), e.writeDouble(this.sexually_explicit), e.writeFieldEnd()), null !== this.threat && void 0 !== this.threat && (e.writeFieldBegin("threat", r.Type.DOUBLE, 56), e.writeDouble(this.threat), e.writeFieldEnd()), null !== this.flirtation && void 0 !== this.flirtation && (e.writeFieldBegin("flirtation", r.Type.DOUBLE, 57), e.writeDouble(this.flirtation), e.writeFieldEnd()), null !== this.attack_on_author && void 0 !== this.attack_on_author && (e.writeFieldBegin("attack_on_author", r.Type.DOUBLE, 58), e.writeDouble(this.attack_on_author), e.writeFieldEnd()), null !== this.attack_on_commenter && void 0 !== this.attack_on_commenter && (e.writeFieldBegin("attack_on_commenter", r.Type.DOUBLE, 59), e.writeDouble(this.attack_on_commenter), e.writeFieldEnd()), null !== this.incoherent && void 0 !== this.incoherent && (e.writeFieldBegin("incoherent", r.Type.DOUBLE, 60), e.writeDouble(this.incoherent), e.writeFieldEnd()), null !== this.inflammatory && void 0 !== this.inflammatory && (e.writeFieldBegin("inflammatory", r.Type.DOUBLE, 61), e.writeDouble(this.inflammatory), e.writeFieldEnd()), null !== this.likely_to_reject && void 0 !== this.likely_to_reject && (e.writeFieldBegin("likely_to_reject", r.Type.DOUBLE, 62), e.writeDouble(this.likely_to_reject), e.writeFieldEnd()), null !== this.obscene && void 0 !== this.obscene && (e.writeFieldBegin("obscene", r.Type.DOUBLE, 63), e.writeDouble(this.obscene), e.writeFieldEnd()), null !== this.spam && void 0 !== this.spam && (e.writeFieldBegin("spam", r.Type.DOUBLE, 64), e.writeDouble(this.spam), e.writeFieldEnd()), null !== this.unsubstantial && void 0 !== this.unsubstantial && (e.writeFieldBegin("unsubstantial", r.Type.DOUBLE, 65), e.writeDouble(this.unsubstantial), e.writeFieldEnd()), null !== this.identity_attack && void 0 !== this.identity_attack && (e.writeFieldBegin("identity_attack", r.Type.DOUBLE, 66), e.writeDouble(this.identity_attack), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 67), e.writeString(this.id), e.writeFieldEnd()), null !== this.max_toxicity && void 0 !== this.max_toxicity && (e.writeFieldBegin("max_toxicity", r.Type.DOUBLE, 68), e.writeDouble(this.max_toxicity), e.writeFieldEnd()), null !== this.max_severe_toxicity && void 0 !== this.max_severe_toxicity && (e.writeFieldBegin("max_severe_toxicity", r.Type.DOUBLE, 69), e.writeDouble(this.max_severe_toxicity), e.writeFieldEnd()), null !== this.max_insult && void 0 !== this.max_insult && (e.writeFieldBegin("max_insult", r.Type.DOUBLE, 70), e.writeDouble(this.max_insult), e.writeFieldEnd()), null !== this.max_profanity && void 0 !== this.max_profanity && (e.writeFieldBegin("max_profanity", r.Type.DOUBLE, 71), e.writeDouble(this.max_profanity), e.writeFieldEnd()), null !== this.max_sexually_explicit && void 0 !== this.max_sexually_explicit && (e.writeFieldBegin("max_sexually_explicit", r.Type.DOUBLE, 72), e.writeDouble(this.max_sexually_explicit), e.writeFieldEnd()), null !== this.max_threat && void 0 !== this.max_threat && (e.writeFieldBegin("max_threat", r.Type.DOUBLE, 73), e.writeDouble(this.max_threat), e.writeFieldEnd()), null !== this.max_flirtation && void 0 !== this.max_flirtation && (e.writeFieldBegin("max_flirtation", r.Type.DOUBLE, 74), e.writeDouble(this.max_flirtation), e.writeFieldEnd()), null !== this.max_attack_on_author && void 0 !== this.max_attack_on_author && (e.writeFieldBegin("max_attack_on_author", r.Type.DOUBLE, 75), e.writeDouble(this.max_attack_on_author), e.writeFieldEnd()), null !== this.max_attack_on_commenter && void 0 !== this.max_attack_on_commenter && (e.writeFieldBegin("max_attack_on_commenter", r.Type.DOUBLE, 76), e.writeDouble(this.max_attack_on_commenter), e.writeFieldEnd()), null !== this.max_incoherent && void 0 !== this.max_incoherent && (e.writeFieldBegin("max_incoherent", r.Type.DOUBLE, 77), e.writeDouble(this.max_incoherent), e.writeFieldEnd()), null !== this.max_inflammatory && void 0 !== this.max_inflammatory && (e.writeFieldBegin("max_inflammatory", r.Type.DOUBLE, 78), e.writeDouble(this.max_inflammatory), e.writeFieldEnd()), null !== this.max_likely_to_reject && void 0 !== this.max_likely_to_reject && (e.writeFieldBegin("max_likely_to_reject", r.Type.DOUBLE, 79), e.writeDouble(this.max_likely_to_reject), e.writeFieldEnd()), null !== this.max_obscene && void 0 !== this.max_obscene && (e.writeFieldBegin("max_obscene", r.Type.DOUBLE, 80), e.writeDouble(this.max_obscene), e.writeFieldEnd()), null !== this.max_spam && void 0 !== this.max_spam && (e.writeFieldBegin("max_spam", r.Type.DOUBLE, 81), e.writeDouble(this.max_spam), e.writeFieldEnd()), null !== this.max_unsubstantial && void 0 !== this.max_unsubstantial && (e.writeFieldBegin("max_unsubstantial", r.Type.DOUBLE, 82), e.writeDouble(this.max_unsubstantial), e.writeFieldEnd()), null !== this.max_identity_attack && void 0 !== this.max_identity_attack && (e.writeFieldBegin("max_identity_attack", r.Type.DOUBLE, 83), e.writeDouble(this.max_identity_attack), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/playback_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Playback = function(e) {
					this.id = null, this.scrubbing_start_ms = null, this.scrubbing_end_ms = null, this.session_duration_ms = null, this.watch_duration_ms = null, this.heartbeat_duration_ms = null, this.is_live = null, this.playhead_offset_ms = null, this.timestamp_ms = null, this.watch_percentage = null, this.start_time_ms = null, this.volume = null, this.chat_state = null, this.player_type = null, this.is_looped = null, this.state = null, this.autoplay_setting = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.scrubbing_start_ms && null !== e.scrubbing_start_ms && (this.scrubbing_start_ms = e.scrubbing_start_ms), void 0 !== e.scrubbing_end_ms && null !== e.scrubbing_end_ms && (this.scrubbing_end_ms = e.scrubbing_end_ms), void 0 !== e.session_duration_ms && null !== e.session_duration_ms && (this.session_duration_ms = e.session_duration_ms), void 0 !== e.watch_duration_ms && null !== e.watch_duration_ms && (this.watch_duration_ms = e.watch_duration_ms), void 0 !== e.heartbeat_duration_ms && null !== e.heartbeat_duration_ms && (this.heartbeat_duration_ms = e.heartbeat_duration_ms), void 0 !== e.is_live && null !== e.is_live && (this.is_live = e.is_live), void 0 !== e.playhead_offset_ms && null !== e.playhead_offset_ms && (this.playhead_offset_ms = e.playhead_offset_ms), void 0 !== e.timestamp_ms && null !== e.timestamp_ms && (this.timestamp_ms = e.timestamp_ms), void 0 !== e.watch_percentage && null !== e.watch_percentage && (this.watch_percentage = e.watch_percentage), void 0 !== e.start_time_ms && null !== e.start_time_ms && (this.start_time_ms = e.start_time_ms), void 0 !== e.volume && null !== e.volume && (this.volume = e.volume), void 0 !== e.chat_state && null !== e.chat_state && (this.chat_state = e.chat_state), void 0 !== e.player_type && null !== e.player_type && (this.player_type = e.player_type), void 0 !== e.is_looped && null !== e.is_looped && (this.is_looped = e.is_looped), void 0 !== e.state && null !== e.state && (this.state = e.state), void 0 !== e.autoplay_setting && null !== e.autoplay_setting && (this.autoplay_setting = e.autoplay_setting))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Playback"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.scrubbing_start_ms && void 0 !== this.scrubbing_start_ms && (e.writeFieldBegin("scrubbing_start_ms", r.Type.I64, 2), e.writeI64(this.scrubbing_start_ms), e.writeFieldEnd()), null !== this.scrubbing_end_ms && void 0 !== this.scrubbing_end_ms && (e.writeFieldBegin("scrubbing_end_ms", r.Type.I64, 3), e.writeI64(this.scrubbing_end_ms), e.writeFieldEnd()), null !== this.session_duration_ms && void 0 !== this.session_duration_ms && (e.writeFieldBegin("session_duration_ms", r.Type.I64, 4), e.writeI64(this.session_duration_ms), e.writeFieldEnd()), null !== this.watch_duration_ms && void 0 !== this.watch_duration_ms && (e.writeFieldBegin("watch_duration_ms", r.Type.I64, 5), e.writeI64(this.watch_duration_ms), e.writeFieldEnd()), null !== this.heartbeat_duration_ms && void 0 !== this.heartbeat_duration_ms && (e.writeFieldBegin("heartbeat_duration_ms", r.Type.I64, 6), e.writeI64(this.heartbeat_duration_ms), e.writeFieldEnd()), null !== this.is_live && void 0 !== this.is_live && (e.writeFieldBegin("is_live", r.Type.BOOL, 7), e.writeBool(this.is_live), e.writeFieldEnd()), null !== this.playhead_offset_ms && void 0 !== this.playhead_offset_ms && (e.writeFieldBegin("playhead_offset_ms", r.Type.I64, 8), e.writeI64(this.playhead_offset_ms), e.writeFieldEnd()), null !== this.timestamp_ms && void 0 !== this.timestamp_ms && (e.writeFieldBegin("timestamp_ms", r.Type.I64, 9), e.writeI64(this.timestamp_ms), e.writeFieldEnd()), null !== this.watch_percentage && void 0 !== this.watch_percentage && (e.writeFieldBegin("watch_percentage", r.Type.DOUBLE, 10), e.writeDouble(this.watch_percentage), e.writeFieldEnd()), null !== this.start_time_ms && void 0 !== this.start_time_ms && (e.writeFieldBegin("start_time_ms", r.Type.I64, 11), e.writeI64(this.start_time_ms), e.writeFieldEnd()), null !== this.volume && void 0 !== this.volume && (e.writeFieldBegin("volume", r.Type.I64, 12), e.writeI64(this.volume), e.writeFieldEnd()), null !== this.chat_state && void 0 !== this.chat_state && (e.writeFieldBegin("chat_state", r.Type.STRING, 13), e.writeString(this.chat_state), e.writeFieldEnd()), null !== this.player_type && void 0 !== this.player_type && (e.writeFieldBegin("player_type", r.Type.STRING, 14), e.writeString(this.player_type), e.writeFieldEnd()), null !== this.is_looped && void 0 !== this.is_looped && (e.writeFieldBegin("is_looped", r.Type.BOOL, 15), e.writeBool(this.is_looped), e.writeFieldEnd()), null !== this.state && void 0 !== this.state && (e.writeFieldBegin("state", r.Type.STRING, 16), e.writeString(this.state), e.writeFieldEnd()), null !== this.autoplay_setting && void 0 !== this.autoplay_setting && (e.writeFieldBegin("autoplay_setting", r.Type.STRING, 17), e.writeString(this.autoplay_setting), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/poll_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Poll = function(e) {
					this.options_length = null, this.options = null, this.user_vote_text = null, this.vote_affects_score = null, this.vote_affects_score_reason = null, this.options_vote_totals = null, this.type = null, this.number_prediction_coins = null, this.number_prediction_tokens = null, e && (void 0 !== e.options_length && null !== e.options_length && (this.options_length = e.options_length), void 0 !== e.options && null !== e.options && (this.options = r.copyList(e.options, [null])), void 0 !== e.user_vote_text && null !== e.user_vote_text && (this.user_vote_text = e.user_vote_text), void 0 !== e.vote_affects_score && null !== e.vote_affects_score && (this.vote_affects_score = e.vote_affects_score), void 0 !== e.vote_affects_score_reason && null !== e.vote_affects_score_reason && (this.vote_affects_score_reason = e.vote_affects_score_reason), void 0 !== e.options_vote_totals && null !== e.options_vote_totals && (this.options_vote_totals = r.copyList(e.options_vote_totals, [null])), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.number_prediction_coins && null !== e.number_prediction_coins && (this.number_prediction_coins = e.number_prediction_coins), void 0 !== e.number_prediction_tokens && null !== e.number_prediction_tokens && (this.number_prediction_tokens = e.number_prediction_tokens))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Poll"), null !== this.options_length && void 0 !== this.options_length && (e.writeFieldBegin("options_length", r.Type.I32, 1), e.writeI32(this.options_length), e.writeFieldEnd()), null !== this.options && void 0 !== this.options) {
					for (var t in e.writeFieldBegin("options", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.options.length), this.options) this.options.hasOwnProperty(t) && (t = this.options[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.user_vote_text && void 0 !== this.user_vote_text && (e.writeFieldBegin("user_vote_text", r.Type.STRING, 4), e.writeString(this.user_vote_text), e.writeFieldEnd()), null !== this.vote_affects_score && void 0 !== this.vote_affects_score && (e.writeFieldBegin("vote_affects_score", r.Type.BOOL, 5), e.writeBool(this.vote_affects_score), e.writeFieldEnd()), null !== this.vote_affects_score_reason && void 0 !== this.vote_affects_score_reason && (e.writeFieldBegin("vote_affects_score_reason", r.Type.STRING, 6), e.writeString(this.vote_affects_score_reason), e.writeFieldEnd()), null !== this.options_vote_totals && void 0 !== this.options_vote_totals) {
					for (var i in e.writeFieldBegin("options_vote_totals", r.Type.LIST, 7), e.writeListBegin(r.Type.I32, this.options_vote_totals.length), this.options_vote_totals) this.options_vote_totals.hasOwnProperty(i) && (i = this.options_vote_totals[i], e.writeI32(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 8), e.writeString(this.type), e.writeFieldEnd()), null !== this.number_prediction_coins && void 0 !== this.number_prediction_coins && (e.writeFieldBegin("number_prediction_coins", r.Type.I64, 9), e.writeI64(this.number_prediction_coins), e.writeFieldEnd()), null !== this.number_prediction_tokens && void 0 !== this.number_prediction_tokens && (e.writeFieldBegin("number_prediction_tokens", r.Type.I64, 10), e.writeI64(this.number_prediction_tokens), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/popup_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Popup = function(e) {
					this.id = null, this.button_text = null, this.text = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.button_text && null !== e.button_text && (this.button_text = e.button_text), void 0 !== e.text && null !== e.text && (this.text = e.text))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Popup"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.button_text && void 0 !== this.button_text && (e.writeFieldBegin("button_text", r.Type.STRING, 2), e.writeString(this.button_text), e.writeFieldEnd()), null !== this.text && void 0 !== this.text && (e.writeFieldBegin("text", r.Type.STRING, 3), e.writeString(this.text), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/post_draft_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.PostDraft = function(e) {
					this.id = null, this.type = null, this.author_id = null, this.created_timestamp = null, this.title_length = null, this.url_length = null, this.body_text_length = null, this.nsfw = null, this.spoiler = null, this.original_content = null, this.flair = null, this.number_rte_images = null, this.number_rte_videos = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.author_id && null !== e.author_id && (this.author_id = e.author_id), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.title_length && null !== e.title_length && (this.title_length = e.title_length), void 0 !== e.url_length && null !== e.url_length && (this.url_length = e.url_length), void 0 !== e.body_text_length && null !== e.body_text_length && (this.body_text_length = e.body_text_length), void 0 !== e.nsfw && null !== e.nsfw && (this.nsfw = e.nsfw), void 0 !== e.spoiler && null !== e.spoiler && (this.spoiler = e.spoiler), void 0 !== e.original_content && null !== e.original_content && (this.original_content = e.original_content), void 0 !== e.flair && null !== e.flair && (this.flair = e.flair), void 0 !== e.number_rte_images && null !== e.number_rte_images && (this.number_rte_images = e.number_rte_images), void 0 !== e.number_rte_videos && null !== e.number_rte_videos && (this.number_rte_videos = e.number_rte_videos))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("PostDraft"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.author_id && void 0 !== this.author_id && (e.writeFieldBegin("author_id", r.Type.STRING, 3), e.writeString(this.author_id), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 4), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.title_length && void 0 !== this.title_length && (e.writeFieldBegin("title_length", r.Type.I32, 5), e.writeI32(this.title_length), e.writeFieldEnd()), null !== this.url_length && void 0 !== this.url_length && (e.writeFieldBegin("url_length", r.Type.I32, 6), e.writeI32(this.url_length), e.writeFieldEnd()), null !== this.body_text_length && void 0 !== this.body_text_length && (e.writeFieldBegin("body_text_length", r.Type.I32, 7), e.writeI32(this.body_text_length), e.writeFieldEnd()), null !== this.nsfw && void 0 !== this.nsfw && (e.writeFieldBegin("nsfw", r.Type.BOOL, 8), e.writeBool(this.nsfw), e.writeFieldEnd()), null !== this.spoiler && void 0 !== this.spoiler && (e.writeFieldBegin("spoiler", r.Type.BOOL, 9), e.writeBool(this.spoiler), e.writeFieldEnd()), null !== this.original_content && void 0 !== this.original_content && (e.writeFieldBegin("original_content", r.Type.BOOL, 10), e.writeBool(this.original_content), e.writeFieldEnd()), null !== this.flair && void 0 !== this.flair && (e.writeFieldBegin("flair", r.Type.STRING, 11), e.writeString(this.flair), e.writeFieldEnd()), null !== this.number_rte_images && void 0 !== this.number_rte_images && (e.writeFieldBegin("number_rte_images", r.Type.I32, 12), e.writeI32(this.number_rte_images), e.writeFieldEnd()), null !== this.number_rte_videos && void 0 !== this.number_rte_videos && (e.writeFieldBegin("number_rte_videos", r.Type.I32, 13), e.writeI32(this.number_rte_videos), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/post_requirement_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.PostRequirement = function(e) {
					this.title_required_strings = null, this.title_blacklisted_strings = null, this.title_text_min_length = null, this.title_text_max_length = null, this.body_restriction_policy = null, this.body_required_strings = null, this.body_blacklisted_strings = null, this.link_whitelisted_domains_length = null, this.link_blacklisted_domains_length = null, this.number_repost_frequency_days = null, this.require_post_flair = null, this.title_regex_patterns = null, this.body_regex_patterns = null, e && (void 0 !== e.title_required_strings && null !== e.title_required_strings && (this.title_required_strings = r.copyList(e.title_required_strings, [null])), void 0 !== e.title_blacklisted_strings && null !== e.title_blacklisted_strings && (this.title_blacklisted_strings = r.copyList(e.title_blacklisted_strings, [null])), void 0 !== e.title_text_min_length && null !== e.title_text_min_length && (this.title_text_min_length = e.title_text_min_length), void 0 !== e.title_text_max_length && null !== e.title_text_max_length && (this.title_text_max_length = e.title_text_max_length), void 0 !== e.body_restriction_policy && null !== e.body_restriction_policy && (this.body_restriction_policy = e.body_restriction_policy), void 0 !== e.body_required_strings && null !== e.body_required_strings && (this.body_required_strings = r.copyList(e.body_required_strings, [null])), void 0 !== e.body_blacklisted_strings && null !== e.body_blacklisted_strings && (this.body_blacklisted_strings = r.copyList(e.body_blacklisted_strings, [null])), void 0 !== e.link_whitelisted_domains_length && null !== e.link_whitelisted_domains_length && (this.link_whitelisted_domains_length = e.link_whitelisted_domains_length), void 0 !== e.link_blacklisted_domains_length && null !== e.link_blacklisted_domains_length && (this.link_blacklisted_domains_length = e.link_blacklisted_domains_length), void 0 !== e.number_repost_frequency_days && null !== e.number_repost_frequency_days && (this.number_repost_frequency_days = e.number_repost_frequency_days), void 0 !== e.require_post_flair && null !== e.require_post_flair && (this.require_post_flair = e.require_post_flair), void 0 !== e.title_regex_patterns && null !== e.title_regex_patterns && (this.title_regex_patterns = r.copyList(e.title_regex_patterns, [null])), void 0 !== e.body_regex_patterns && null !== e.body_regex_patterns && (this.body_regex_patterns = r.copyList(e.body_regex_patterns, [null])))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("PostRequirement"), null !== this.title_required_strings && void 0 !== this.title_required_strings) {
					for (var t in e.writeFieldBegin("title_required_strings", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.title_required_strings.length), this.title_required_strings) this.title_required_strings.hasOwnProperty(t) && (t = this.title_required_strings[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.title_blacklisted_strings && void 0 !== this.title_blacklisted_strings) {
					for (var i in e.writeFieldBegin("title_blacklisted_strings", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.title_blacklisted_strings.length), this.title_blacklisted_strings) this.title_blacklisted_strings.hasOwnProperty(i) && (i = this.title_blacklisted_strings[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.title_text_min_length && void 0 !== this.title_text_min_length && (e.writeFieldBegin("title_text_min_length", r.Type.I32, 3), e.writeI32(this.title_text_min_length), e.writeFieldEnd()), null !== this.title_text_max_length && void 0 !== this.title_text_max_length && (e.writeFieldBegin("title_text_max_length", r.Type.I32, 4), e.writeI32(this.title_text_max_length), e.writeFieldEnd()), null !== this.body_restriction_policy && void 0 !== this.body_restriction_policy && (e.writeFieldBegin("body_restriction_policy", r.Type.STRING, 5), e.writeString(this.body_restriction_policy), e.writeFieldEnd()), null !== this.body_required_strings && void 0 !== this.body_required_strings) {
					for (var n in e.writeFieldBegin("body_required_strings", r.Type.LIST, 6), e.writeListBegin(r.Type.STRING, this.body_required_strings.length), this.body_required_strings) this.body_required_strings.hasOwnProperty(n) && (n = this.body_required_strings[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.body_blacklisted_strings && void 0 !== this.body_blacklisted_strings) {
					for (var s in e.writeFieldBegin("body_blacklisted_strings", r.Type.LIST, 7), e.writeListBegin(r.Type.STRING, this.body_blacklisted_strings.length), this.body_blacklisted_strings) this.body_blacklisted_strings.hasOwnProperty(s) && (s = this.body_blacklisted_strings[s], e.writeString(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.link_whitelisted_domains_length && void 0 !== this.link_whitelisted_domains_length && (e.writeFieldBegin("link_whitelisted_domains_length", r.Type.I32, 8), e.writeI32(this.link_whitelisted_domains_length), e.writeFieldEnd()), null !== this.link_blacklisted_domains_length && void 0 !== this.link_blacklisted_domains_length && (e.writeFieldBegin("link_blacklisted_domains_length", r.Type.I32, 9), e.writeI32(this.link_blacklisted_domains_length), e.writeFieldEnd()), null !== this.number_repost_frequency_days && void 0 !== this.number_repost_frequency_days && (e.writeFieldBegin("number_repost_frequency_days", r.Type.I32, 10), e.writeI32(this.number_repost_frequency_days), e.writeFieldEnd()), null !== this.require_post_flair && void 0 !== this.require_post_flair && (e.writeFieldBegin("require_post_flair", r.Type.BOOL, 11), e.writeBool(this.require_post_flair), e.writeFieldEnd()), null !== this.title_regex_patterns && void 0 !== this.title_regex_patterns) {
					for (var o in e.writeFieldBegin("title_regex_patterns", r.Type.LIST, 12), e.writeListBegin(r.Type.STRING, this.title_regex_patterns.length), this.title_regex_patterns) this.title_regex_patterns.hasOwnProperty(o) && (o = this.title_regex_patterns[o], e.writeString(o));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.body_regex_patterns && void 0 !== this.body_regex_patterns) {
					for (var d in e.writeFieldBegin("body_regex_patterns", r.Type.LIST, 13), e.writeListBegin(r.Type.STRING, this.body_regex_patterns.length), this.body_regex_patterns) this.body_regex_patterns.hasOwnProperty(d) && (d = this.body_regex_patterns[d], e.writeString(d));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/postflair_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.PostFlair = function(e) {
					this.id = null, this.title = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.title && null !== e.title && (this.title = e.title))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("PostFlair"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/powerups_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Powerups = function(e) {
					this.subscription_id = null, this.count = null, this.free_count = null, this.paid_count = null, this.tier = null, this.current_subreddit_powerups = null, this.is_grace_period = null, this.automatic = null, this.benefit = null, this.post_type = null, this.cnt_emoji = null, this.subreddit_ids = null, e && (void 0 !== e.subscription_id && null !== e.subscription_id && (this.subscription_id = e.subscription_id), void 0 !== e.count && null !== e.count && (this.count = e.count), void 0 !== e.free_count && null !== e.free_count && (this.free_count = e.free_count), void 0 !== e.paid_count && null !== e.paid_count && (this.paid_count = e.paid_count), void 0 !== e.tier && null !== e.tier && (this.tier = e.tier), void 0 !== e.current_subreddit_powerups && null !== e.current_subreddit_powerups && (this.current_subreddit_powerups = e.current_subreddit_powerups), void 0 !== e.is_grace_period && null !== e.is_grace_period && (this.is_grace_period = e.is_grace_period), void 0 !== e.automatic && null !== e.automatic && (this.automatic = e.automatic), void 0 !== e.benefit && null !== e.benefit && (this.benefit = e.benefit), void 0 !== e.post_type && null !== e.post_type && (this.post_type = e.post_type), void 0 !== e.cnt_emoji && null !== e.cnt_emoji && (this.cnt_emoji = e.cnt_emoji), void 0 !== e.subreddit_ids && null !== e.subreddit_ids && (this.subreddit_ids = e.subreddit_ids))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Powerups"), null !== this.subscription_id && void 0 !== this.subscription_id && (e.writeFieldBegin("subscription_id", r.Type.STRING, 1), e.writeString(this.subscription_id), e.writeFieldEnd()), null !== this.count && void 0 !== this.count && (e.writeFieldBegin("count", r.Type.I32, 2), e.writeI32(this.count), e.writeFieldEnd()), null !== this.free_count && void 0 !== this.free_count && (e.writeFieldBegin("free_count", r.Type.I32, 3), e.writeI32(this.free_count), e.writeFieldEnd()), null !== this.paid_count && void 0 !== this.paid_count && (e.writeFieldBegin("paid_count", r.Type.I32, 4), e.writeI32(this.paid_count), e.writeFieldEnd()), null !== this.tier && void 0 !== this.tier && (e.writeFieldBegin("tier", r.Type.I32, 5), e.writeI32(this.tier), e.writeFieldEnd()), null !== this.current_subreddit_powerups && void 0 !== this.current_subreddit_powerups && (e.writeFieldBegin("current_subreddit_powerups", r.Type.I32, 6), e.writeI32(this.current_subreddit_powerups), e.writeFieldEnd()), null !== this.is_grace_period && void 0 !== this.is_grace_period && (e.writeFieldBegin("is_grace_period", r.Type.BOOL, 7), e.writeBool(this.is_grace_period), e.writeFieldEnd()), null !== this.automatic && void 0 !== this.automatic && (e.writeFieldBegin("automatic", r.Type.BOOL, 8), e.writeBool(this.automatic), e.writeFieldEnd()), null !== this.benefit && void 0 !== this.benefit && (e.writeFieldBegin("benefit", r.Type.STRING, 9), e.writeString(this.benefit), e.writeFieldEnd()), null !== this.post_type && void 0 !== this.post_type && (e.writeFieldBegin("post_type", r.Type.STRING, 10), e.writeString(this.post_type), e.writeFieldEnd()), null !== this.cnt_emoji && void 0 !== this.cnt_emoji && (e.writeFieldBegin("cnt_emoji", r.Type.I32, 11), e.writeI32(this.cnt_emoji), e.writeFieldEnd()), null !== this.subreddit_ids && void 0 !== this.subreddit_ids && (e.writeFieldBegin("subreddit_ids", r.Type.STRING, 12), e.writeString(this.subreddit_ids), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/predictions_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Predictions = function(e) {
					this.tournament_id = null, this.post_cnt = null, this.end_timestamp = null, this.tournament_state = null, this.user_state = null, this.tournament_theme_id = null, e && (void 0 !== e.tournament_id && null !== e.tournament_id && (this.tournament_id = e.tournament_id), void 0 !== e.post_cnt && null !== e.post_cnt && (this.post_cnt = e.post_cnt), void 0 !== e.end_timestamp && null !== e.end_timestamp && (this.end_timestamp = e.end_timestamp), void 0 !== e.tournament_state && null !== e.tournament_state && (this.tournament_state = e.tournament_state), void 0 !== e.user_state && null !== e.user_state && (this.user_state = e.user_state), void 0 !== e.tournament_theme_id && null !== e.tournament_theme_id && (this.tournament_theme_id = e.tournament_theme_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Predictions"), null !== this.tournament_id && void 0 !== this.tournament_id && (e.writeFieldBegin("tournament_id", r.Type.STRING, 1), e.writeString(this.tournament_id), e.writeFieldEnd()), null !== this.post_cnt && void 0 !== this.post_cnt && (e.writeFieldBegin("post_cnt", r.Type.I32, 2), e.writeI32(this.post_cnt), e.writeFieldEnd()), null !== this.end_timestamp && void 0 !== this.end_timestamp && (e.writeFieldBegin("end_timestamp", r.Type.I64, 3), e.writeI64(this.end_timestamp), e.writeFieldEnd()), null !== this.tournament_state && void 0 !== this.tournament_state && (e.writeFieldBegin("tournament_state", r.Type.STRING, 4), e.writeString(this.tournament_state), e.writeFieldEnd()), null !== this.user_state && void 0 !== this.user_state && (e.writeFieldBegin("user_state", r.Type.STRING, 5), e.writeString(this.user_state), e.writeFieldEnd()), null !== this.tournament_theme_id && void 0 !== this.tournament_theme_id && (e.writeFieldBegin("tournament_theme_id", r.Type.STRING, 6), e.writeString(this.tournament_theme_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/progress_module_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ProgressModule = function(e) {
					this.module_name = null, this.card_name = null, e && (void 0 !== e.module_name && null !== e.module_name && (this.module_name = e.module_name), void 0 !== e.card_name && null !== e.card_name && (this.card_name = e.card_name))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ProgressModule"), null !== this.module_name && void 0 !== this.module_name && (e.writeFieldBegin("module_name", r.Type.STRING, 1), e.writeString(this.module_name), e.writeFieldEnd()), null !== this.card_name && void 0 !== this.card_name && (e.writeFieldBegin("card_name", r.Type.STRING, 2), e.writeString(this.card_name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/pwa_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.PWA = function(e) {
					this.installable = null, this.installed = null, this.install_timestamp = null, e && (void 0 !== e.installable && null !== e.installable && (this.installable = e.installable), void 0 !== e.installed && null !== e.installed && (this.installed = e.installed), void 0 !== e.install_timestamp && null !== e.install_timestamp && (this.install_timestamp = e.install_timestamp))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("PWA"), null !== this.installable && void 0 !== this.installable && (e.writeFieldBegin("installable", r.Type.BOOL, 1), e.writeBool(this.installable), e.writeFieldEnd()), null !== this.installed && void 0 !== this.installed && (e.writeFieldBegin("installed", r.Type.BOOL, 2), e.writeBool(this.installed), e.writeFieldEnd()), null !== this.install_timestamp && void 0 !== this.install_timestamp && (e.writeFieldBegin("install_timestamp", r.Type.I64, 3), e.writeI64(this.install_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/rater_tag_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.RaterTag = function(e) {
					this.tagging_job_id = null, this.tagging_question = null, this.tagging_question_object = null, this.module_type = null, this.rating_type = null, this.selected_answers = null, this.non_selected_answers = null, this.tagging_question_id = null, this.selected_answer_ids = null, this.non_selected_answer_ids = null, e && (void 0 !== e.tagging_job_id && null !== e.tagging_job_id && (this.tagging_job_id = e.tagging_job_id), void 0 !== e.tagging_question && null !== e.tagging_question && (this.tagging_question = e.tagging_question), void 0 !== e.tagging_question_object && null !== e.tagging_question_object && (this.tagging_question_object = e.tagging_question_object), void 0 !== e.module_type && null !== e.module_type && (this.module_type = e.module_type), void 0 !== e.rating_type && null !== e.rating_type && (this.rating_type = e.rating_type), void 0 !== e.selected_answers && null !== e.selected_answers && (this.selected_answers = r.copyList(e.selected_answers, [null])), void 0 !== e.non_selected_answers && null !== e.non_selected_answers && (this.non_selected_answers = r.copyList(e.non_selected_answers, [null])), void 0 !== e.tagging_question_id && null !== e.tagging_question_id && (this.tagging_question_id = e.tagging_question_id), void 0 !== e.selected_answer_ids && null !== e.selected_answer_ids && (this.selected_answer_ids = r.copyList(e.selected_answer_ids, [null])), void 0 !== e.non_selected_answer_ids && null !== e.non_selected_answer_ids && (this.non_selected_answer_ids = r.copyList(e.non_selected_answer_ids, [null])))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("RaterTag"), null !== this.tagging_job_id && void 0 !== this.tagging_job_id && (e.writeFieldBegin("tagging_job_id", r.Type.STRING, 1), e.writeString(this.tagging_job_id), e.writeFieldEnd()), null !== this.tagging_question && void 0 !== this.tagging_question && (e.writeFieldBegin("tagging_question", r.Type.STRING, 2), e.writeString(this.tagging_question), e.writeFieldEnd()), null !== this.tagging_question_object && void 0 !== this.tagging_question_object && (e.writeFieldBegin("tagging_question_object", r.Type.STRING, 3), e.writeString(this.tagging_question_object), e.writeFieldEnd()), null !== this.module_type && void 0 !== this.module_type && (e.writeFieldBegin("module_type", r.Type.STRING, 4), e.writeString(this.module_type), e.writeFieldEnd()), null !== this.rating_type && void 0 !== this.rating_type && (e.writeFieldBegin("rating_type", r.Type.STRING, 5), e.writeString(this.rating_type), e.writeFieldEnd()), null !== this.selected_answers && void 0 !== this.selected_answers) {
					for (var t in e.writeFieldBegin("selected_answers", r.Type.LIST, 6), e.writeListBegin(r.Type.STRING, this.selected_answers.length), this.selected_answers) this.selected_answers.hasOwnProperty(t) && (t = this.selected_answers[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.non_selected_answers && void 0 !== this.non_selected_answers) {
					for (var i in e.writeFieldBegin("non_selected_answers", r.Type.LIST, 7), e.writeListBegin(r.Type.STRING, this.non_selected_answers.length), this.non_selected_answers) this.non_selected_answers.hasOwnProperty(i) && (i = this.non_selected_answers[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.tagging_question_id && void 0 !== this.tagging_question_id && (e.writeFieldBegin("tagging_question_id", r.Type.STRING, 8), e.writeString(this.tagging_question_id), e.writeFieldEnd()), null !== this.selected_answer_ids && void 0 !== this.selected_answer_ids) {
					for (var n in e.writeFieldBegin("selected_answer_ids", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.selected_answer_ids.length), this.selected_answer_ids) this.selected_answer_ids.hasOwnProperty(n) && (n = this.selected_answer_ids[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.non_selected_answer_ids && void 0 !== this.non_selected_answer_ids) {
					for (var s in e.writeFieldBegin("non_selected_answer_ids", r.Type.LIST, 10), e.writeListBegin(r.Type.STRING, this.non_selected_answer_ids.length), this.non_selected_answer_ids) this.non_selected_answer_ids.hasOwnProperty(s) && (s = this.non_selected_answer_ids[s], e.writeString(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/recap_card_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.RecapCard = function(e) {
					this.index = null, this.count = null, this.type = null, this.facts = null, e && (void 0 !== e.index && null !== e.index && (this.index = e.index), void 0 !== e.count && null !== e.count && (this.count = e.count), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.facts && null !== e.facts && (this.facts = e.facts))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("RecapCard"), null !== this.index && void 0 !== this.index && (e.writeFieldBegin("index", r.Type.I64, 1), e.writeI64(this.index), e.writeFieldEnd()), null !== this.count && void 0 !== this.count && (e.writeFieldBegin("count", r.Type.I64, 2), e.writeI64(this.count), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 3), e.writeString(this.type), e.writeFieldEnd()), null !== this.facts && void 0 !== this.facts && (e.writeFieldBegin("facts", r.Type.STRING, 4), e.writeString(this.facts), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/registration_form_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.RegistrationForm = function(e) {
					this.completed_fields = null, this.uncompleted_fields = null, this.submitted = null, this.success = null, this.field_errors = null, this.submission_error = null, e && (void 0 !== e.completed_fields && null !== e.completed_fields && (this.completed_fields = r.copyList(e.completed_fields, [null])), void 0 !== e.uncompleted_fields && null !== e.uncompleted_fields && (this.uncompleted_fields = r.copyList(e.uncompleted_fields, [null])), void 0 !== e.submitted && null !== e.submitted && (this.submitted = e.submitted), void 0 !== e.success && null !== e.success && (this.success = e.success), void 0 !== e.field_errors && null !== e.field_errors && (this.field_errors = e.field_errors), void 0 !== e.submission_error && null !== e.submission_error && (this.submission_error = e.submission_error))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("RegistrationForm"), null !== this.completed_fields && void 0 !== this.completed_fields) {
					for (var t in e.writeFieldBegin("completed_fields", r.Type.LIST, 1), e.writeListBegin(r.Type.STRING, this.completed_fields.length), this.completed_fields) this.completed_fields.hasOwnProperty(t) && (t = this.completed_fields[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.uncompleted_fields && void 0 !== this.uncompleted_fields) {
					for (var i in e.writeFieldBegin("uncompleted_fields", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.uncompleted_fields.length), this.uncompleted_fields) this.uncompleted_fields.hasOwnProperty(i) && (i = this.uncompleted_fields[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.submitted && void 0 !== this.submitted && (e.writeFieldBegin("submitted", r.Type.BOOL, 3), e.writeBool(this.submitted), e.writeFieldEnd()), null !== this.success && void 0 !== this.success && (e.writeFieldBegin("success", r.Type.BOOL, 4), e.writeBool(this.success), e.writeFieldEnd()), null !== this.field_errors && void 0 !== this.field_errors && (e.writeFieldBegin("field_errors", r.Type.STRING, 5), e.writeString(this.field_errors), e.writeFieldEnd()), null !== this.submission_error && void 0 !== this.submission_error && (e.writeFieldBegin("submission_error", r.Type.STRING, 6), e.writeString(this.submission_error), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/relevance_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, e.exports = {}, e.exports.RelevanceModel = function(e) {
					this.number_max_recommendations = null, this.feature_blob = null, this.result_blob = null, this.result_duration = null, this.version = null, this.family = null, this.identifier = null, e && (void 0 !== e.number_max_recommendations && null !== e.number_max_recommendations && (this.number_max_recommendations = e.number_max_recommendations), void 0 !== e.feature_blob && null !== e.feature_blob && (this.feature_blob = e.feature_blob), void 0 !== e.result_blob && null !== e.result_blob && (this.result_blob = e.result_blob), void 0 !== e.result_duration && null !== e.result_duration && (this.result_duration = e.result_duration), void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.family && null !== e.family && (this.family = e.family), void 0 !== e.identifier && null !== e.identifier && (this.identifier = e.identifier))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("RelevanceModel"), null !== this.number_max_recommendations && void 0 !== this.number_max_recommendations && (e.writeFieldBegin("number_max_recommendations", r.Type.I32, 3), e.writeI32(this.number_max_recommendations), e.writeFieldEnd()), null !== this.feature_blob && void 0 !== this.feature_blob && (e.writeFieldBegin("feature_blob", r.Type.STRING, 5), e.writeString(this.feature_blob), e.writeFieldEnd()), null !== this.result_blob && void 0 !== this.result_blob && (e.writeFieldBegin("result_blob", r.Type.STRING, 6), e.writeString(this.result_blob), e.writeFieldEnd()), null !== this.result_duration && void 0 !== this.result_duration && (e.writeFieldBegin("result_duration", r.Type.I64, 7), e.writeI64(this.result_duration), e.writeFieldEnd()), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 9), e.writeString(this.version), e.writeFieldEnd()), null !== this.family && void 0 !== this.family && (e.writeFieldBegin("family", r.Type.STRING, 10), e.writeString(this.family), e.writeFieldEnd()), null !== this.identifier && void 0 !== this.identifier && (e.writeFieldBegin("identifier", r.Type.STRING, 11), e.writeString(this.identifier), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/report_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Report = function(e) {
					this.reason_code = null, this.id = null, this.classification = null, this.reported_content_time = null, e && (void 0 !== e.reason_code && null !== e.reason_code && (this.reason_code = e.reason_code), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.classification && null !== e.classification && (this.classification = e.classification), void 0 !== e.reported_content_time && null !== e.reported_content_time && (this.reported_content_time = e.reported_content_time))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Report"), null !== this.reason_code && void 0 !== this.reason_code && (e.writeFieldBegin("reason_code", r.Type.STRING, 1), e.writeString(this.reason_code), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 2), e.writeString(this.id), e.writeFieldEnd()), null !== this.classification && void 0 !== this.classification && (e.writeFieldBegin("classification", r.Type.STRING, 3), e.writeString(this.classification), e.writeFieldEnd()), null !== this.reported_content_time && void 0 !== this.reported_content_time && (e.writeFieldBegin("reported_content_time", r.Type.I32, 4), e.writeI32(this.reported_content_time), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/request_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Request = function(e) {
					this.user_agent = null, this.domain = null, this.base_url = null, this.client_ip = null, this.known_bot = null, this.header_signature = null, this.cookies_present = null, this.accept_encoding = null, this.accept_language = null, this.reddaid = null, this.google_aaid = null, this.amazon_aid = null, this.apple_ios_aid = null, this.isp_organization = null, this.accept_language_header = null, this.parameters = null, this.canonical_url = null, this.loginbot = null, this.robots_meta_tag = null, this.google_client_id = null, this.server_render_id = null, this.ratelimit_type = null, this.ratelimit_exceeded = null, this.ratelimit_count = null, this.tls_fingerprint = null, this.correlation_id = null, e && (void 0 !== e.user_agent && null !== e.user_agent && (this.user_agent = e.user_agent), void 0 !== e.domain && null !== e.domain && (this.domain = e.domain), void 0 !== e.base_url && null !== e.base_url && (this.base_url = e.base_url), void 0 !== e.client_ip && null !== e.client_ip && (this.client_ip = e.client_ip), void 0 !== e.known_bot && null !== e.known_bot && (this.known_bot = e.known_bot), void 0 !== e.header_signature && null !== e.header_signature && (this.header_signature = e.header_signature), void 0 !== e.cookies_present && null !== e.cookies_present && (this.cookies_present = e.cookies_present), void 0 !== e.accept_encoding && null !== e.accept_encoding && (this.accept_encoding = e.accept_encoding), void 0 !== e.accept_language && null !== e.accept_language && (this.accept_language = e.accept_language), void 0 !== e.reddaid && null !== e.reddaid && (this.reddaid = e.reddaid), void 0 !== e.google_aaid && null !== e.google_aaid && (this.google_aaid = e.google_aaid), void 0 !== e.amazon_aid && null !== e.amazon_aid && (this.amazon_aid = e.amazon_aid), void 0 !== e.apple_ios_aid && null !== e.apple_ios_aid && (this.apple_ios_aid = e.apple_ios_aid), void 0 !== e.isp_organization && null !== e.isp_organization && (this.isp_organization = e.isp_organization), void 0 !== e.accept_language_header && null !== e.accept_language_header && (this.accept_language_header = e.accept_language_header), void 0 !== e.parameters && null !== e.parameters && (this.parameters = e.parameters), void 0 !== e.canonical_url && null !== e.canonical_url && (this.canonical_url = e.canonical_url), void 0 !== e.loginbot && null !== e.loginbot && (this.loginbot = e.loginbot), void 0 !== e.robots_meta_tag && null !== e.robots_meta_tag && (this.robots_meta_tag = e.robots_meta_tag), void 0 !== e.google_client_id && null !== e.google_client_id && (this.google_client_id = e.google_client_id), void 0 !== e.server_render_id && null !== e.server_render_id && (this.server_render_id = e.server_render_id), void 0 !== e.ratelimit_type && null !== e.ratelimit_type && (this.ratelimit_type = e.ratelimit_type), void 0 !== e.ratelimit_exceeded && null !== e.ratelimit_exceeded && (this.ratelimit_exceeded = e.ratelimit_exceeded), void 0 !== e.ratelimit_count && null !== e.ratelimit_count && (this.ratelimit_count = e.ratelimit_count), void 0 !== e.tls_fingerprint && null !== e.tls_fingerprint && (this.tls_fingerprint = e.tls_fingerprint), void 0 !== e.correlation_id && null !== e.correlation_id && (this.correlation_id = e.correlation_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Request"), null !== this.user_agent && void 0 !== this.user_agent && (e.writeFieldBegin("user_agent", r.Type.STRING, 1), e.writeString(this.user_agent), e.writeFieldEnd()), null !== this.domain && void 0 !== this.domain && (e.writeFieldBegin("domain", r.Type.STRING, 2), e.writeString(this.domain), e.writeFieldEnd()), null !== this.base_url && void 0 !== this.base_url && (e.writeFieldBegin("base_url", r.Type.STRING, 3), e.writeString(this.base_url), e.writeFieldEnd()), null !== this.client_ip && void 0 !== this.client_ip && (e.writeFieldBegin("client_ip", r.Type.STRING, 4), e.writeString(this.client_ip), e.writeFieldEnd()), null !== this.known_bot && void 0 !== this.known_bot && (e.writeFieldBegin("known_bot", r.Type.STRING, 5), e.writeString(this.known_bot), e.writeFieldEnd()), null !== this.header_signature && void 0 !== this.header_signature && (e.writeFieldBegin("header_signature", r.Type.STRING, 6), e.writeString(this.header_signature), e.writeFieldEnd()), null !== this.cookies_present && void 0 !== this.cookies_present && (e.writeFieldBegin("cookies_present", r.Type.BOOL, 7), e.writeBool(this.cookies_present), e.writeFieldEnd()), null !== this.accept_encoding && void 0 !== this.accept_encoding && (e.writeFieldBegin("accept_encoding", r.Type.BOOL, 8), e.writeBool(this.accept_encoding), e.writeFieldEnd()), null !== this.accept_language && void 0 !== this.accept_language && (e.writeFieldBegin("accept_language", r.Type.BOOL, 9), e.writeBool(this.accept_language), e.writeFieldEnd()), null !== this.reddaid && void 0 !== this.reddaid && (e.writeFieldBegin("reddaid", r.Type.STRING, 10), e.writeString(this.reddaid), e.writeFieldEnd()), null !== this.google_aaid && void 0 !== this.google_aaid && (e.writeFieldBegin("google_aaid", r.Type.STRING, 11), e.writeString(this.google_aaid), e.writeFieldEnd()), null !== this.amazon_aid && void 0 !== this.amazon_aid && (e.writeFieldBegin("amazon_aid", r.Type.STRING, 12), e.writeString(this.amazon_aid), e.writeFieldEnd()), null !== this.apple_ios_aid && void 0 !== this.apple_ios_aid && (e.writeFieldBegin("apple_ios_aid", r.Type.STRING, 13), e.writeString(this.apple_ios_aid), e.writeFieldEnd()), null !== this.isp_organization && void 0 !== this.isp_organization && (e.writeFieldBegin("isp_organization", r.Type.STRING, 14), e.writeString(this.isp_organization), e.writeFieldEnd()), null !== this.accept_language_header && void 0 !== this.accept_language_header && (e.writeFieldBegin("accept_language_header", r.Type.STRING, 15), e.writeString(this.accept_language_header), e.writeFieldEnd()), null !== this.parameters && void 0 !== this.parameters && (e.writeFieldBegin("parameters", r.Type.STRING, 16), e.writeString(this.parameters), e.writeFieldEnd()), null !== this.canonical_url && void 0 !== this.canonical_url && (e.writeFieldBegin("canonical_url", r.Type.STRING, 17), e.writeString(this.canonical_url), e.writeFieldEnd()), null !== this.loginbot && void 0 !== this.loginbot && (e.writeFieldBegin("loginbot", r.Type.BOOL, 18), e.writeBool(this.loginbot), e.writeFieldEnd()), null !== this.robots_meta_tag && void 0 !== this.robots_meta_tag && (e.writeFieldBegin("robots_meta_tag", r.Type.STRING, 19), e.writeString(this.robots_meta_tag), e.writeFieldEnd()), null !== this.google_client_id && void 0 !== this.google_client_id && (e.writeFieldBegin("google_client_id", r.Type.STRING, 20), e.writeString(this.google_client_id), e.writeFieldEnd()), null !== this.server_render_id && void 0 !== this.server_render_id && (e.writeFieldBegin("server_render_id", r.Type.STRING, 21), e.writeString(this.server_render_id), e.writeFieldEnd()), null !== this.ratelimit_type && void 0 !== this.ratelimit_type && (e.writeFieldBegin("ratelimit_type", r.Type.STRING, 22), e.writeString(this.ratelimit_type), e.writeFieldEnd()), null !== this.ratelimit_exceeded && void 0 !== this.ratelimit_exceeded && (e.writeFieldBegin("ratelimit_exceeded", r.Type.BOOL, 23), e.writeBool(this.ratelimit_exceeded), e.writeFieldEnd()), null !== this.ratelimit_count && void 0 !== this.ratelimit_count && (e.writeFieldBegin("ratelimit_count", r.Type.I32, 24), e.writeI32(this.ratelimit_count), e.writeFieldEnd()), null !== this.tls_fingerprint && void 0 !== this.tls_fingerprint && (e.writeFieldBegin("tls_fingerprint", r.Type.STRING, 25), e.writeString(this.tls_fingerprint), e.writeFieldEnd()), null !== this.correlation_id && void 0 !== this.correlation_id && (e.writeFieldBegin("correlation_id", r.Type.STRING, 26), e.writeString(this.correlation_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Referrer = function(e) {
				this.domain = null, this.url = null, this.element = null, e && (void 0 !== e.domain && null !== e.domain && (this.domain = e.domain), void 0 !== e.url && null !== e.url && (this.url = e.url), void 0 !== e.element && null !== e.element && (this.element = e.element))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Referrer"), null !== this.domain && void 0 !== this.domain && (e.writeFieldBegin("domain", r.Type.STRING, 1), e.writeString(this.domain), e.writeFieldEnd()), null !== this.url && void 0 !== this.url && (e.writeFieldBegin("url", r.Type.STRING, 2), e.writeString(this.url), e.writeFieldEnd()), null !== this.element && void 0 !== this.element && (e.writeFieldBegin("element", r.Type.STRING, 3), e.writeString(this.element), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.Oauth = function(e) {
				this.client_app_type = null, this.client_name = null, this.client_id = null, this.scopes = null, e && (void 0 !== e.client_app_type && null !== e.client_app_type && (this.client_app_type = e.client_app_type), void 0 !== e.client_name && null !== e.client_name && (this.client_name = e.client_name), void 0 !== e.client_id && null !== e.client_id && (this.client_id = e.client_id), void 0 !== e.scopes && null !== e.scopes && (this.scopes = r.copyList(e.scopes, [null])))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				if (e.writeStructBegin("Oauth"), null !== this.client_app_type && void 0 !== this.client_app_type && (e.writeFieldBegin("client_app_type", r.Type.STRING, 1), e.writeString(this.client_app_type), e.writeFieldEnd()), null !== this.client_name && void 0 !== this.client_name && (e.writeFieldBegin("client_name", r.Type.STRING, 2), e.writeString(this.client_name), e.writeFieldEnd()), null !== this.client_id && void 0 !== this.client_id && (e.writeFieldBegin("client_id", r.Type.STRING, 3), e.writeString(this.client_id), e.writeFieldEnd()), null !== this.scopes && void 0 !== this.scopes) {
					for (var t in e.writeFieldBegin("scopes", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.scopes.length), this.scopes) this.scopes.hasOwnProperty(t) && (t = this.scopes[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.Api = function(e) {
				this.name = null, this.address = null, this.endpoint = null, e && (void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.address && null !== e.address && (this.address = e.address), void 0 !== e.endpoint && null !== e.endpoint && (this.endpoint = e.endpoint))
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("Api"), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 1), e.writeString(this.name), e.writeFieldEnd()), null !== this.address && void 0 !== this.address && (e.writeFieldBegin("address", r.Type.STRING, 2), e.writeString(this.address), e.writeFieldEnd()), null !== this.endpoint && void 0 !== this.endpoint && (e.writeFieldBegin("endpoint", r.Type.STRING, 3), e.writeString(this.endpoint), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var l = e.exports.ApiResponse = function(e) {
				this.response_code = null, this.error_name = null, this.error = null, this.content = null, e && (void 0 !== e.response_code && null !== e.response_code && (this.response_code = e.response_code), void 0 !== e.error_name && null !== e.error_name && (this.error_name = e.error_name), void 0 !== e.error && null !== e.error && (this.error = e.error), void 0 !== e.content && null !== e.content && (this.content = e.content))
			};
			l.prototype = {}, l.prototype.write = function(e) {
				e.writeStructBegin("ApiResponse"), null !== this.response_code && void 0 !== this.response_code && (e.writeFieldBegin("response_code", r.Type.I32, 1), e.writeI32(this.response_code), e.writeFieldEnd()), null !== this.error_name && void 0 !== this.error_name && (e.writeFieldBegin("error_name", r.Type.STRING, 2), e.writeString(this.error_name), e.writeFieldEnd()), null !== this.error && void 0 !== this.error && (e.writeFieldBegin("error", r.Type.STRING, 3), e.writeString(this.error), e.writeFieldEnd()), null !== this.content && void 0 !== this.content && (e.writeFieldBegin("content", r.Type.STRING, 4), e.writeString(this.content), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var u = e.exports.Response = function(e) {
				this.last_modified_timestamp = null, this.code = null, e && (void 0 !== e.last_modified_timestamp && null !== e.last_modified_timestamp && (this.last_modified_timestamp = e.last_modified_timestamp), void 0 !== e.code && null !== e.code && (this.code = e.code))
			};
			u.prototype = {}, u.prototype.write = function(e) {
				e.writeStructBegin("Response"), null !== this.last_modified_timestamp && void 0 !== this.last_modified_timestamp && (e.writeFieldBegin("last_modified_timestamp", r.Type.I64, 1), e.writeI64(this.last_modified_timestamp), e.writeFieldEnd()), null !== this.code && void 0 !== this.code && (e.writeFieldBegin("code", r.Type.I32, 2), e.writeI32(this.code), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var c = e.exports.Zipkin = function(e) {
				this.trace_id = null, e && void 0 !== e.trace_id && null !== e.trace_id && (this.trace_id = e.trace_id)
			};
			c.prototype = {}, c.prototype.write = function(e) {
				e.writeStructBegin("Zipkin"), null !== this.trace_id && void 0 !== this.trace_id && (e.writeFieldBegin("trace_id", r.Type.STRING, 1), e.writeString(this.trace_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/res_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.RES = function(e) {
					this.version = null, this.night_mode = null, e && (void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.night_mode && null !== e.night_mode && (this.night_mode = e.night_mode))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("RES"), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 1), e.writeString(this.version), e.writeFieldEnd()), null !== this.night_mode && void 0 !== this.night_mode && (e.writeFieldBegin("night_mode", r.Type.BOOL, 2), e.writeBool(this.night_mode), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/restrict_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Restrict = function(e) {
					this.image_posts = null, this.poll_posts = null, this.video_posts = null, this.username_linking = null, this.subreddit_linking = null, this.unverified_email_viewers = null, this.unverified_email_interaction = null, this.subreddit_styles = null, this.media_embeds = null, this.crossposts = null, this.subscriber_count_visibility = null, this.subreddit_images = null, this.nsfw = null, this.interstitial_warning_message = null, e && (void 0 !== e.image_posts && null !== e.image_posts && (this.image_posts = e.image_posts), void 0 !== e.poll_posts && null !== e.poll_posts && (this.poll_posts = e.poll_posts), void 0 !== e.video_posts && null !== e.video_posts && (this.video_posts = e.video_posts), void 0 !== e.username_linking && null !== e.username_linking && (this.username_linking = e.username_linking), void 0 !== e.subreddit_linking && null !== e.subreddit_linking && (this.subreddit_linking = e.subreddit_linking), void 0 !== e.unverified_email_viewers && null !== e.unverified_email_viewers && (this.unverified_email_viewers = e.unverified_email_viewers), void 0 !== e.unverified_email_interaction && null !== e.unverified_email_interaction && (this.unverified_email_interaction = e.unverified_email_interaction), void 0 !== e.subreddit_styles && null !== e.subreddit_styles && (this.subreddit_styles = e.subreddit_styles), void 0 !== e.media_embeds && null !== e.media_embeds && (this.media_embeds = e.media_embeds), void 0 !== e.crossposts && null !== e.crossposts && (this.crossposts = e.crossposts), void 0 !== e.subscriber_count_visibility && null !== e.subscriber_count_visibility && (this.subscriber_count_visibility = e.subscriber_count_visibility), void 0 !== e.subreddit_images && null !== e.subreddit_images && (this.subreddit_images = e.subreddit_images), void 0 !== e.nsfw && null !== e.nsfw && (this.nsfw = e.nsfw), void 0 !== e.interstitial_warning_message && null !== e.interstitial_warning_message && (this.interstitial_warning_message = e.interstitial_warning_message))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Restrict"), null !== this.image_posts && void 0 !== this.image_posts && (e.writeFieldBegin("image_posts", r.Type.BOOL, 1), e.writeBool(this.image_posts), e.writeFieldEnd()), null !== this.poll_posts && void 0 !== this.poll_posts && (e.writeFieldBegin("poll_posts", r.Type.BOOL, 2), e.writeBool(this.poll_posts), e.writeFieldEnd()), null !== this.video_posts && void 0 !== this.video_posts && (e.writeFieldBegin("video_posts", r.Type.BOOL, 3), e.writeBool(this.video_posts), e.writeFieldEnd()), null !== this.username_linking && void 0 !== this.username_linking && (e.writeFieldBegin("username_linking", r.Type.BOOL, 4), e.writeBool(this.username_linking), e.writeFieldEnd()), null !== this.subreddit_linking && void 0 !== this.subreddit_linking && (e.writeFieldBegin("subreddit_linking", r.Type.BOOL, 5), e.writeBool(this.subreddit_linking), e.writeFieldEnd()), null !== this.unverified_email_viewers && void 0 !== this.unverified_email_viewers && (e.writeFieldBegin("unverified_email_viewers", r.Type.BOOL, 6), e.writeBool(this.unverified_email_viewers), e.writeFieldEnd()), null !== this.unverified_email_interaction && void 0 !== this.unverified_email_interaction && (e.writeFieldBegin("unverified_email_interaction", r.Type.BOOL, 7), e.writeBool(this.unverified_email_interaction), e.writeFieldEnd()), null !== this.subreddit_styles && void 0 !== this.subreddit_styles && (e.writeFieldBegin("subreddit_styles", r.Type.BOOL, 8), e.writeBool(this.subreddit_styles), e.writeFieldEnd()), null !== this.media_embeds && void 0 !== this.media_embeds && (e.writeFieldBegin("media_embeds", r.Type.BOOL, 9), e.writeBool(this.media_embeds), e.writeFieldEnd()), null !== this.crossposts && void 0 !== this.crossposts && (e.writeFieldBegin("crossposts", r.Type.BOOL, 10), e.writeBool(this.crossposts), e.writeFieldEnd()), null !== this.subscriber_count_visibility && void 0 !== this.subscriber_count_visibility && (e.writeFieldBegin("subscriber_count_visibility", r.Type.BOOL, 11), e.writeBool(this.subscriber_count_visibility), e.writeFieldEnd()), null !== this.subreddit_images && void 0 !== this.subreddit_images && (e.writeFieldBegin("subreddit_images", r.Type.BOOL, 12), e.writeBool(this.subreddit_images), e.writeFieldEnd()), null !== this.nsfw && void 0 !== this.nsfw && (e.writeFieldBegin("nsfw", r.Type.BOOL, 13), e.writeBool(this.nsfw), e.writeFieldEnd()), null !== this.interstitial_warning_message && void 0 !== this.interstitial_warning_message && (e.writeFieldBegin("interstitial_warning_message", r.Type.STRING, 14), e.writeString(this.interstitial_warning_message), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/reward_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.RewardInfo = function(e) {
					this.type = null, this.amount = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.amount && null !== e.amount && (this.amount = e.amount))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("RewardInfo"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.amount && void 0 !== this.amount && (e.writeFieldBegin("amount", r.Type.I32, 2), e.writeI32(this.amount), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/scheduled_post_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ScheduledPost = function(e) {
					this.id = null, this.creator_user_id = null, this.last_modified_user_id = null, this.created_timestamp = null, this.submission_timestamp = null, this.timezone = null, this.is_recurring = null, this.recurring_frequency = null, this.recurring_intervals = null, this.recurring_interval_period = null, this.number_recurrences = null, this.milestone_type = null, this.submitted_post_id = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.creator_user_id && null !== e.creator_user_id && (this.creator_user_id = e.creator_user_id), void 0 !== e.last_modified_user_id && null !== e.last_modified_user_id && (this.last_modified_user_id = e.last_modified_user_id), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.submission_timestamp && null !== e.submission_timestamp && (this.submission_timestamp = e.submission_timestamp), void 0 !== e.timezone && null !== e.timezone && (this.timezone = e.timezone), void 0 !== e.is_recurring && null !== e.is_recurring && (this.is_recurring = e.is_recurring), void 0 !== e.recurring_frequency && null !== e.recurring_frequency && (this.recurring_frequency = e.recurring_frequency), void 0 !== e.recurring_intervals && null !== e.recurring_intervals && (this.recurring_intervals = e.recurring_intervals), void 0 !== e.recurring_interval_period && null !== e.recurring_interval_period && (this.recurring_interval_period = r.copyList(e.recurring_interval_period, [null])), void 0 !== e.number_recurrences && null !== e.number_recurrences && (this.number_recurrences = e.number_recurrences), void 0 !== e.milestone_type && null !== e.milestone_type && (this.milestone_type = e.milestone_type), void 0 !== e.submitted_post_id && null !== e.submitted_post_id && (this.submitted_post_id = e.submitted_post_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("ScheduledPost"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 1), e.writeI64(this.id), e.writeFieldEnd()), null !== this.creator_user_id && void 0 !== this.creator_user_id && (e.writeFieldBegin("creator_user_id", r.Type.STRING, 2), e.writeString(this.creator_user_id), e.writeFieldEnd()), null !== this.last_modified_user_id && void 0 !== this.last_modified_user_id && (e.writeFieldBegin("last_modified_user_id", r.Type.STRING, 3), e.writeString(this.last_modified_user_id), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 4), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.submission_timestamp && void 0 !== this.submission_timestamp && (e.writeFieldBegin("submission_timestamp", r.Type.I64, 5), e.writeI64(this.submission_timestamp), e.writeFieldEnd()), null !== this.timezone && void 0 !== this.timezone && (e.writeFieldBegin("timezone", r.Type.STRING, 6), e.writeString(this.timezone), e.writeFieldEnd()), null !== this.is_recurring && void 0 !== this.is_recurring && (e.writeFieldBegin("is_recurring", r.Type.BOOL, 7), e.writeBool(this.is_recurring), e.writeFieldEnd()), null !== this.recurring_frequency && void 0 !== this.recurring_frequency && (e.writeFieldBegin("recurring_frequency", r.Type.STRING, 8), e.writeString(this.recurring_frequency), e.writeFieldEnd()), null !== this.recurring_intervals && void 0 !== this.recurring_intervals && (e.writeFieldBegin("recurring_intervals", r.Type.I32, 9), e.writeI32(this.recurring_intervals), e.writeFieldEnd()), null !== this.recurring_interval_period && void 0 !== this.recurring_interval_period) {
					for (var t in e.writeFieldBegin("recurring_interval_period", r.Type.LIST, 10), e.writeListBegin(r.Type.STRING, this.recurring_interval_period.length), this.recurring_interval_period) this.recurring_interval_period.hasOwnProperty(t) && (t = this.recurring_interval_period[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.number_recurrences && void 0 !== this.number_recurrences && (e.writeFieldBegin("number_recurrences", r.Type.I32, 11), e.writeI32(this.number_recurrences), e.writeFieldEnd()), null !== this.milestone_type && void 0 !== this.milestone_type && (e.writeFieldBegin("milestone_type", r.Type.STRING, 12), e.writeString(this.milestone_type), e.writeFieldEnd()), null !== this.submitted_post_id && void 0 !== this.submitted_post_id && (e.writeFieldBegin("submitted_post_id", r.Type.STRING, 13), e.writeString(this.submitted_post_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/search_types.js": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/es6.array.sort.js");
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Search = function(e) {
					this.query = null, this.sort = null, this.range = null, this.typeahead_active = null, this.subreddit_id = null, this.subreddit_name = null, this.post_flair_name = null, this.meta_flair_id = null, this.meta_flair_name = null, this.origin_page_type = null, this.origin_element = null, this.number_links = null, this.links = null, this.nsfw_reason = null, this.structure_type = null, this.query_id = null, this.subreddit_ids = null, this.number_subreddits = null, this.number_comments = null, this.comment_ids = null, this.post_id = null, this.author_names_filter = null, this.user_ids = null, this.number_users = null, this.protocol_name = null, this.partial_results = null, this.nsfw = null, this.impression_id = null, e && (void 0 !== e.query && null !== e.query && (this.query = e.query), void 0 !== e.sort && null !== e.sort && (this.sort = e.sort), void 0 !== e.range && null !== e.range && (this.range = e.range), void 0 !== e.typeahead_active && null !== e.typeahead_active && (this.typeahead_active = e.typeahead_active), void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.subreddit_name && null !== e.subreddit_name && (this.subreddit_name = e.subreddit_name), void 0 !== e.post_flair_name && null !== e.post_flair_name && (this.post_flair_name = e.post_flair_name), void 0 !== e.meta_flair_id && null !== e.meta_flair_id && (this.meta_flair_id = e.meta_flair_id), void 0 !== e.meta_flair_name && null !== e.meta_flair_name && (this.meta_flair_name = e.meta_flair_name), void 0 !== e.origin_page_type && null !== e.origin_page_type && (this.origin_page_type = e.origin_page_type), void 0 !== e.origin_element && null !== e.origin_element && (this.origin_element = e.origin_element), void 0 !== e.number_links && null !== e.number_links && (this.number_links = e.number_links), void 0 !== e.links && null !== e.links && (this.links = r.copyList(e.links, [null])), void 0 !== e.nsfw_reason && null !== e.nsfw_reason && (this.nsfw_reason = e.nsfw_reason), void 0 !== e.structure_type && null !== e.structure_type && (this.structure_type = e.structure_type), void 0 !== e.query_id && null !== e.query_id && (this.query_id = e.query_id), void 0 !== e.subreddit_ids && null !== e.subreddit_ids && (this.subreddit_ids = r.copyList(e.subreddit_ids, [null])), void 0 !== e.number_subreddits && null !== e.number_subreddits && (this.number_subreddits = e.number_subreddits), void 0 !== e.number_comments && null !== e.number_comments && (this.number_comments = e.number_comments), void 0 !== e.comment_ids && null !== e.comment_ids && (this.comment_ids = r.copyList(e.comment_ids, [null])), void 0 !== e.post_id && null !== e.post_id && (this.post_id = e.post_id), void 0 !== e.author_names_filter && null !== e.author_names_filter && (this.author_names_filter = r.copyList(e.author_names_filter, [null])), void 0 !== e.user_ids && null !== e.user_ids && (this.user_ids = r.copyList(e.user_ids, [null])), void 0 !== e.number_users && null !== e.number_users && (this.number_users = e.number_users), void 0 !== e.protocol_name && null !== e.protocol_name && (this.protocol_name = r.copyList(e.protocol_name, [null])), void 0 !== e.partial_results && null !== e.partial_results && (this.partial_results = e.partial_results), void 0 !== e.nsfw && null !== e.nsfw && (this.nsfw = e.nsfw), void 0 !== e.impression_id && null !== e.impression_id && (this.impression_id = e.impression_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Search"), null !== this.query && void 0 !== this.query && (e.writeFieldBegin("query", r.Type.STRING, 1), e.writeString(this.query), e.writeFieldEnd()), null !== this.sort && void 0 !== this.sort && (e.writeFieldBegin("sort", r.Type.STRING, 2), e.writeString(this.sort), e.writeFieldEnd()), null !== this.range && void 0 !== this.range && (e.writeFieldBegin("range", r.Type.STRING, 3), e.writeString(this.range), e.writeFieldEnd()), null !== this.typeahead_active && void 0 !== this.typeahead_active && (e.writeFieldBegin("typeahead_active", r.Type.BOOL, 4), e.writeBool(this.typeahead_active), e.writeFieldEnd()), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 5), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.subreddit_name && void 0 !== this.subreddit_name && (e.writeFieldBegin("subreddit_name", r.Type.STRING, 6), e.writeString(this.subreddit_name), e.writeFieldEnd()), null !== this.post_flair_name && void 0 !== this.post_flair_name && (e.writeFieldBegin("post_flair_name", r.Type.STRING, 7), e.writeString(this.post_flair_name), e.writeFieldEnd()), null !== this.meta_flair_id && void 0 !== this.meta_flair_id && (e.writeFieldBegin("meta_flair_id", r.Type.STRING, 8), e.writeString(this.meta_flair_id), e.writeFieldEnd()), null !== this.meta_flair_name && void 0 !== this.meta_flair_name && (e.writeFieldBegin("meta_flair_name", r.Type.STRING, 9), e.writeString(this.meta_flair_name), e.writeFieldEnd()), null !== this.origin_page_type && void 0 !== this.origin_page_type && (e.writeFieldBegin("origin_page_type", r.Type.STRING, 10), e.writeString(this.origin_page_type), e.writeFieldEnd()), null !== this.origin_element && void 0 !== this.origin_element && (e.writeFieldBegin("origin_element", r.Type.STRING, 11), e.writeString(this.origin_element), e.writeFieldEnd()), null !== this.number_links && void 0 !== this.number_links && (e.writeFieldBegin("number_links", r.Type.I64, 12), e.writeI64(this.number_links), e.writeFieldEnd()), null !== this.links && void 0 !== this.links) {
					for (var t in e.writeFieldBegin("links", r.Type.LIST, 13), e.writeListBegin(r.Type.STRING, this.links.length), this.links) this.links.hasOwnProperty(t) && (t = this.links[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.nsfw_reason && void 0 !== this.nsfw_reason && (e.writeFieldBegin("nsfw_reason", r.Type.STRING, 14), e.writeString(this.nsfw_reason), e.writeFieldEnd()), null !== this.structure_type && void 0 !== this.structure_type && (e.writeFieldBegin("structure_type", r.Type.STRING, 15), e.writeString(this.structure_type), e.writeFieldEnd()), null !== this.query_id && void 0 !== this.query_id && (e.writeFieldBegin("query_id", r.Type.STRING, 16), e.writeString(this.query_id), e.writeFieldEnd()), null !== this.subreddit_ids && void 0 !== this.subreddit_ids) {
					for (var i in e.writeFieldBegin("subreddit_ids", r.Type.LIST, 17), e.writeListBegin(r.Type.STRING, this.subreddit_ids.length), this.subreddit_ids) this.subreddit_ids.hasOwnProperty(i) && (i = this.subreddit_ids[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.number_subreddits && void 0 !== this.number_subreddits && (e.writeFieldBegin("number_subreddits", r.Type.I64, 18), e.writeI64(this.number_subreddits), e.writeFieldEnd()), null !== this.number_comments && void 0 !== this.number_comments && (e.writeFieldBegin("number_comments", r.Type.I64, 19), e.writeI64(this.number_comments), e.writeFieldEnd()), null !== this.comment_ids && void 0 !== this.comment_ids) {
					for (var n in e.writeFieldBegin("comment_ids", r.Type.LIST, 20), e.writeListBegin(r.Type.STRING, this.comment_ids.length), this.comment_ids) this.comment_ids.hasOwnProperty(n) && (n = this.comment_ids[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.post_id && void 0 !== this.post_id && (e.writeFieldBegin("post_id", r.Type.STRING, 21), e.writeString(this.post_id), e.writeFieldEnd()), null !== this.author_names_filter && void 0 !== this.author_names_filter) {
					for (var s in e.writeFieldBegin("author_names_filter", r.Type.LIST, 22), e.writeListBegin(r.Type.STRING, this.author_names_filter.length), this.author_names_filter) this.author_names_filter.hasOwnProperty(s) && (s = this.author_names_filter[s], e.writeString(s));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.user_ids && void 0 !== this.user_ids) {
					for (var o in e.writeFieldBegin("user_ids", r.Type.LIST, 23), e.writeListBegin(r.Type.STRING, this.user_ids.length), this.user_ids) this.user_ids.hasOwnProperty(o) && (o = this.user_ids[o], e.writeString(o));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.number_users && void 0 !== this.number_users && (e.writeFieldBegin("number_users", r.Type.I64, 24), e.writeI64(this.number_users), e.writeFieldEnd()), null !== this.protocol_name && void 0 !== this.protocol_name) {
					for (var d in e.writeFieldBegin("protocol_name", r.Type.LIST, 25), e.writeListBegin(r.Type.STRING, this.protocol_name.length), this.protocol_name) this.protocol_name.hasOwnProperty(d) && (d = this.protocol_name[d], e.writeString(d));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.partial_results && void 0 !== this.partial_results && (e.writeFieldBegin("partial_results", r.Type.BOOL, 28), e.writeBool(this.partial_results), e.writeFieldEnd()), null !== this.nsfw && void 0 !== this.nsfw && (e.writeFieldBegin("nsfw", r.Type.BOOL, 29), e.writeBool(this.nsfw), e.writeFieldEnd()), null !== this.impression_id && void 0 !== this.impression_id && (e.writeFieldBegin("impression_id", r.Type.STRING, 30), e.writeString(this.impression_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/security_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.TwoFactorAuth = function(e) {
					this.device_previous_remaining_backup_codes = null, this.device_name = null, this.device_exists = null, this.device_algorithm = null, this.device_backup_codes_remaining = null, this.backup_code_used = null, this.otp_embedded_in_password = null, e && (void 0 !== e.device_previous_remaining_backup_codes && null !== e.device_previous_remaining_backup_codes && (this.device_previous_remaining_backup_codes = e.device_previous_remaining_backup_codes), void 0 !== e.device_name && null !== e.device_name && (this.device_name = e.device_name), void 0 !== e.device_exists && null !== e.device_exists && (this.device_exists = e.device_exists), void 0 !== e.device_algorithm && null !== e.device_algorithm && (this.device_algorithm = e.device_algorithm), void 0 !== e.device_backup_codes_remaining && null !== e.device_backup_codes_remaining && (this.device_backup_codes_remaining = e.device_backup_codes_remaining), void 0 !== e.backup_code_used && null !== e.backup_code_used && (this.backup_code_used = e.backup_code_used), void 0 !== e.otp_embedded_in_password && null !== e.otp_embedded_in_password && (this.otp_embedded_in_password = e.otp_embedded_in_password))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("TwoFactorAuth"), null !== this.device_previous_remaining_backup_codes && void 0 !== this.device_previous_remaining_backup_codes && (e.writeFieldBegin("device_previous_remaining_backup_codes", r.Type.I64, 1), e.writeI64(this.device_previous_remaining_backup_codes), e.writeFieldEnd()), null !== this.device_name && void 0 !== this.device_name && (e.writeFieldBegin("device_name", r.Type.STRING, 2), e.writeString(this.device_name), e.writeFieldEnd()), null !== this.device_exists && void 0 !== this.device_exists && (e.writeFieldBegin("device_exists", r.Type.BOOL, 3), e.writeBool(this.device_exists), e.writeFieldEnd()), null !== this.device_algorithm && void 0 !== this.device_algorithm && (e.writeFieldBegin("device_algorithm", r.Type.STRING, 4), e.writeString(this.device_algorithm), e.writeFieldEnd()), null !== this.device_backup_codes_remaining && void 0 !== this.device_backup_codes_remaining && (e.writeFieldBegin("device_backup_codes_remaining", r.Type.I32, 5), e.writeI32(this.device_backup_codes_remaining), e.writeFieldEnd()), null !== this.backup_code_used && void 0 !== this.backup_code_used && (e.writeFieldBegin("backup_code_used", r.Type.BOOL, 6), e.writeBool(this.backup_code_used), e.writeFieldEnd()), null !== this.otp_embedded_in_password && void 0 !== this.otp_embedded_in_password && (e.writeFieldBegin("otp_embedded_in_password", r.Type.BOOL, 7), e.writeBool(this.otp_embedded_in_password), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/seo_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.SEO = function(e) {
					this.internal_link_url = null, e && void 0 !== e.internal_link_url && null !== e.internal_link_url && (this.internal_link_url = e.internal_link_url)
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("SEO"), null !== this.internal_link_url && void 0 !== this.internal_link_url && (e.writeFieldBegin("internal_link_url", r.Type.STRING, 1), e.writeString(this.internal_link_url), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/session_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Session = function(e) {
					this.id = null, this.referrer_url = null, this.referrer_domain = null, this.version = null, this.type = null, this.created_timestamp = null, this.anonymous_browsing_mode = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.referrer_url && null !== e.referrer_url && (this.referrer_url = e.referrer_url), void 0 !== e.referrer_domain && null !== e.referrer_domain && (this.referrer_domain = e.referrer_domain), void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.anonymous_browsing_mode && null !== e.anonymous_browsing_mode && (this.anonymous_browsing_mode = e.anonymous_browsing_mode))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Session"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.referrer_url && void 0 !== this.referrer_url && (e.writeFieldBegin("referrer_url", r.Type.STRING, 2), e.writeString(this.referrer_url), e.writeFieldEnd()), null !== this.referrer_domain && void 0 !== this.referrer_domain && (e.writeFieldBegin("referrer_domain", r.Type.STRING, 3), e.writeString(this.referrer_domain), e.writeFieldEnd()), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 4), e.writeString(this.version), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 5), e.writeString(this.type), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 6), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.anonymous_browsing_mode && void 0 !== this.anonymous_browsing_mode && (e.writeFieldBegin("anonymous_browsing_mode", r.Type.BOOL, 7), e.writeBool(this.anonymous_browsing_mode), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/setting_types.js": function(e, t, i) {
			"use strict";
			i("./node_modules/core-js/modules/web.dom.iterable.js");
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Setting = function(e) {
					if (this.value = null, this.old_value = null, this.scope = null, this.values = null, this.old_values = null, e) {
						if (void 0 === e.value || null === e.value) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field value is unset!");
						this.value = e.value, void 0 !== e.old_value && null !== e.old_value && (this.old_value = e.old_value), void 0 !== e.scope && null !== e.scope && (this.scope = e.scope), void 0 !== e.values && null !== e.values && (this.values = r.copyList(e.values, [null])), void 0 !== e.old_values && null !== e.old_values && (this.old_values = r.copyList(e.old_values, [null]))
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Setting"), null !== this.value && void 0 !== this.value && (e.writeFieldBegin("value", r.Type.STRING, 1), e.writeString(this.value), e.writeFieldEnd()), null !== this.old_value && void 0 !== this.old_value && (e.writeFieldBegin("old_value", r.Type.STRING, 2), e.writeString(this.old_value), e.writeFieldEnd()), null !== this.scope && void 0 !== this.scope && (e.writeFieldBegin("scope", r.Type.STRING, 3), e.writeString(this.scope), e.writeFieldEnd()), null !== this.values && void 0 !== this.values) {
					for (var t in e.writeFieldBegin("values", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.values.length), this.values) this.values.hasOwnProperty(t) && (t = this.values[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.old_values && void 0 !== this.old_values) {
					for (var i in e.writeFieldBegin("old_values", r.Type.LIST, 5), e.writeListBegin(r.Type.STRING, this.old_values.length), this.old_values) this.old_values.hasOwnProperty(i) && (i = this.old_values[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/snoovatar_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Snoovatar = function(e) {
					this.gear_id = null, this.gear_ids = null, this.snoovatar_active = null, this.id = null, this.full_image_url = null, this.headshot_image_url = null, this.gear_expression = null, this.gear_hair = null, this.gear_hair_acc = null, this.gear_face = null, this.gear_face_acc = null, this.gear_top = null, this.gear_top_acc = null, this.gear_bottom = null, this.gear_bottom_acc = null, this.has_premium_gear = null, this.gear_status = null, this.user_generated = null, this.user_generated_source = null, this.user_has_nft = null, this.nft_name = null, this.gear_states = null, this.snoovatar_name = null, this.section_name = null, this.nft_token_id = null, this.nft_wallet_address = null, this.nft_rating = null, this.nft_accessory_id = null, e && (void 0 !== e.gear_id && null !== e.gear_id && (this.gear_id = e.gear_id), void 0 !== e.gear_ids && null !== e.gear_ids && (this.gear_ids = r.copyList(e.gear_ids, [null])), void 0 !== e.snoovatar_active && null !== e.snoovatar_active && (this.snoovatar_active = e.snoovatar_active), void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.full_image_url && null !== e.full_image_url && (this.full_image_url = e.full_image_url), void 0 !== e.headshot_image_url && null !== e.headshot_image_url && (this.headshot_image_url = e.headshot_image_url), void 0 !== e.gear_expression && null !== e.gear_expression && (this.gear_expression = e.gear_expression), void 0 !== e.gear_hair && null !== e.gear_hair && (this.gear_hair = e.gear_hair), void 0 !== e.gear_hair_acc && null !== e.gear_hair_acc && (this.gear_hair_acc = e.gear_hair_acc), void 0 !== e.gear_face && null !== e.gear_face && (this.gear_face = e.gear_face), void 0 !== e.gear_face_acc && null !== e.gear_face_acc && (this.gear_face_acc = e.gear_face_acc), void 0 !== e.gear_top && null !== e.gear_top && (this.gear_top = e.gear_top), void 0 !== e.gear_top_acc && null !== e.gear_top_acc && (this.gear_top_acc = e.gear_top_acc), void 0 !== e.gear_bottom && null !== e.gear_bottom && (this.gear_bottom = e.gear_bottom), void 0 !== e.gear_bottom_acc && null !== e.gear_bottom_acc && (this.gear_bottom_acc = e.gear_bottom_acc), void 0 !== e.has_premium_gear && null !== e.has_premium_gear && (this.has_premium_gear = e.has_premium_gear), void 0 !== e.gear_status && null !== e.gear_status && (this.gear_status = e.gear_status), void 0 !== e.user_generated && null !== e.user_generated && (this.user_generated = e.user_generated), void 0 !== e.user_generated_source && null !== e.user_generated_source && (this.user_generated_source = e.user_generated_source), void 0 !== e.user_has_nft && null !== e.user_has_nft && (this.user_has_nft = e.user_has_nft), void 0 !== e.nft_name && null !== e.nft_name && (this.nft_name = e.nft_name), void 0 !== e.gear_states && null !== e.gear_states && (this.gear_states = r.copyList(e.gear_states, [null])), void 0 !== e.snoovatar_name && null !== e.snoovatar_name && (this.snoovatar_name = e.snoovatar_name), void 0 !== e.section_name && null !== e.section_name && (this.section_name = e.section_name), void 0 !== e.nft_token_id && null !== e.nft_token_id && (this.nft_token_id = e.nft_token_id), void 0 !== e.nft_wallet_address && null !== e.nft_wallet_address && (this.nft_wallet_address = e.nft_wallet_address), void 0 !== e.nft_rating && null !== e.nft_rating && (this.nft_rating = e.nft_rating), void 0 !== e.nft_accessory_id && null !== e.nft_accessory_id && (this.nft_accessory_id = e.nft_accessory_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Snoovatar"), null !== this.gear_id && void 0 !== this.gear_id && (e.writeFieldBegin("gear_id", r.Type.STRING, 1), e.writeString(this.gear_id), e.writeFieldEnd()), null !== this.gear_ids && void 0 !== this.gear_ids) {
					for (var t in e.writeFieldBegin("gear_ids", r.Type.LIST, 2), e.writeListBegin(r.Type.STRING, this.gear_ids.length), this.gear_ids) this.gear_ids.hasOwnProperty(t) && (t = this.gear_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.snoovatar_active && void 0 !== this.snoovatar_active && (e.writeFieldBegin("snoovatar_active", r.Type.BOOL, 3), e.writeBool(this.snoovatar_active), e.writeFieldEnd()), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 4), e.writeI64(this.id), e.writeFieldEnd()), null !== this.full_image_url && void 0 !== this.full_image_url && (e.writeFieldBegin("full_image_url", r.Type.STRING, 5), e.writeString(this.full_image_url), e.writeFieldEnd()), null !== this.headshot_image_url && void 0 !== this.headshot_image_url && (e.writeFieldBegin("headshot_image_url", r.Type.STRING, 6), e.writeString(this.headshot_image_url), e.writeFieldEnd()), null !== this.gear_expression && void 0 !== this.gear_expression && (e.writeFieldBegin("gear_expression", r.Type.STRING, 7), e.writeString(this.gear_expression), e.writeFieldEnd()), null !== this.gear_hair && void 0 !== this.gear_hair && (e.writeFieldBegin("gear_hair", r.Type.STRING, 8), e.writeString(this.gear_hair), e.writeFieldEnd()), null !== this.gear_hair_acc && void 0 !== this.gear_hair_acc && (e.writeFieldBegin("gear_hair_acc", r.Type.STRING, 9), e.writeString(this.gear_hair_acc), e.writeFieldEnd()), null !== this.gear_face && void 0 !== this.gear_face && (e.writeFieldBegin("gear_face", r.Type.STRING, 10), e.writeString(this.gear_face), e.writeFieldEnd()), null !== this.gear_face_acc && void 0 !== this.gear_face_acc && (e.writeFieldBegin("gear_face_acc", r.Type.STRING, 11), e.writeString(this.gear_face_acc), e.writeFieldEnd()), null !== this.gear_top && void 0 !== this.gear_top && (e.writeFieldBegin("gear_top", r.Type.STRING, 12), e.writeString(this.gear_top), e.writeFieldEnd()), null !== this.gear_top_acc && void 0 !== this.gear_top_acc && (e.writeFieldBegin("gear_top_acc", r.Type.STRING, 13), e.writeString(this.gear_top_acc), e.writeFieldEnd()), null !== this.gear_bottom && void 0 !== this.gear_bottom && (e.writeFieldBegin("gear_bottom", r.Type.STRING, 14), e.writeString(this.gear_bottom), e.writeFieldEnd()), null !== this.gear_bottom_acc && void 0 !== this.gear_bottom_acc && (e.writeFieldBegin("gear_bottom_acc", r.Type.STRING, 15), e.writeString(this.gear_bottom_acc), e.writeFieldEnd()), null !== this.has_premium_gear && void 0 !== this.has_premium_gear && (e.writeFieldBegin("has_premium_gear", r.Type.BOOL, 16), e.writeBool(this.has_premium_gear), e.writeFieldEnd()), null !== this.gear_status && void 0 !== this.gear_status && (e.writeFieldBegin("gear_status", r.Type.STRING, 17), e.writeString(this.gear_status), e.writeFieldEnd()), null !== this.user_generated && void 0 !== this.user_generated && (e.writeFieldBegin("user_generated", r.Type.STRING, 18), e.writeString(this.user_generated), e.writeFieldEnd()), null !== this.user_generated_source && void 0 !== this.user_generated_source && (e.writeFieldBegin("user_generated_source", r.Type.STRING, 19), e.writeString(this.user_generated_source), e.writeFieldEnd()), null !== this.user_has_nft && void 0 !== this.user_has_nft && (e.writeFieldBegin("user_has_nft", r.Type.BOOL, 20), e.writeBool(this.user_has_nft), e.writeFieldEnd()), null !== this.nft_name && void 0 !== this.nft_name && (e.writeFieldBegin("nft_name", r.Type.STRING, 21), e.writeString(this.nft_name), e.writeFieldEnd()), null !== this.gear_states && void 0 !== this.gear_states) {
					for (var i in e.writeFieldBegin("gear_states", r.Type.LIST, 22), e.writeListBegin(r.Type.STRING, this.gear_states.length), this.gear_states) this.gear_states.hasOwnProperty(i) && (i = this.gear_states[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.snoovatar_name && void 0 !== this.snoovatar_name && (e.writeFieldBegin("snoovatar_name", r.Type.STRING, 23), e.writeString(this.snoovatar_name), e.writeFieldEnd()), null !== this.section_name && void 0 !== this.section_name && (e.writeFieldBegin("section_name", r.Type.STRING, 24), e.writeString(this.section_name), e.writeFieldEnd()), null !== this.nft_token_id && void 0 !== this.nft_token_id && (e.writeFieldBegin("nft_token_id", r.Type.STRING, 25), e.writeString(this.nft_token_id), e.writeFieldEnd()), null !== this.nft_wallet_address && void 0 !== this.nft_wallet_address && (e.writeFieldBegin("nft_wallet_address", r.Type.STRING, 26), e.writeString(this.nft_wallet_address), e.writeFieldEnd()), null !== this.nft_rating && void 0 !== this.nft_rating && (e.writeFieldBegin("nft_rating", r.Type.STRING, 27), e.writeString(this.nft_rating), e.writeFieldEnd()), null !== this.nft_accessory_id && void 0 !== this.nft_accessory_id && (e.writeFieldBegin("nft_accessory_id", r.Type.STRING, 28), e.writeString(this.nft_accessory_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/social_link_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.SocialLink = function(e) {
					this.type = null, this.url = null, this.name = null, this.position = null, this.is_new = null, this.current_list = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.url && null !== e.url && (this.url = e.url), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.position && null !== e.position && (this.position = e.position), void 0 !== e.is_new && null !== e.is_new && (this.is_new = e.is_new), void 0 !== e.current_list && null !== e.current_list && (this.current_list = e.current_list))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("SocialLink"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.url && void 0 !== this.url && (e.writeFieldBegin("url", r.Type.STRING, 2), e.writeString(this.url), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 3), e.writeString(this.name), e.writeFieldEnd()), null !== this.position && void 0 !== this.position && (e.writeFieldBegin("position", r.Type.I64, 4), e.writeI64(this.position), e.writeFieldEnd()), null !== this.is_new && void 0 !== this.is_new && (e.writeFieldBegin("is_new", r.Type.BOOL, 5), e.writeBool(this.is_new), e.writeFieldEnd()), null !== this.current_list && void 0 !== this.current_list && (e.writeFieldBegin("current_list", r.Type.STRING, 6), e.writeString(this.current_list), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/spamurai_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.SpamuraiAction = function(e) {
					this.task_name = null, this.task_version = null, this.thing_id = null, this.is_unapprovable = null, this.is_ban_all = null, this.is_mark_for_alt_tracking = null, this.is_unban_all = null, this.channel = null, e && (void 0 !== e.task_name && null !== e.task_name && (this.task_name = e.task_name), void 0 !== e.task_version && null !== e.task_version && (this.task_version = e.task_version), void 0 !== e.thing_id && null !== e.thing_id && (this.thing_id = e.thing_id), void 0 !== e.is_unapprovable && null !== e.is_unapprovable && (this.is_unapprovable = e.is_unapprovable), void 0 !== e.is_ban_all && null !== e.is_ban_all && (this.is_ban_all = e.is_ban_all), void 0 !== e.is_mark_for_alt_tracking && null !== e.is_mark_for_alt_tracking && (this.is_mark_for_alt_tracking = e.is_mark_for_alt_tracking), void 0 !== e.is_unban_all && null !== e.is_unban_all && (this.is_unban_all = e.is_unban_all), void 0 !== e.channel && null !== e.channel && (this.channel = e.channel))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("SpamuraiAction"), null !== this.task_name && void 0 !== this.task_name && (e.writeFieldBegin("task_name", r.Type.STRING, 1), e.writeString(this.task_name), e.writeFieldEnd()), null !== this.task_version && void 0 !== this.task_version && (e.writeFieldBegin("task_version", r.Type.STRING, 2), e.writeString(this.task_version), e.writeFieldEnd()), null !== this.thing_id && void 0 !== this.thing_id && (e.writeFieldBegin("thing_id", r.Type.STRING, 3), e.writeString(this.thing_id), e.writeFieldEnd()), null !== this.is_unapprovable && void 0 !== this.is_unapprovable && (e.writeFieldBegin("is_unapprovable", r.Type.BOOL, 4), e.writeBool(this.is_unapprovable), e.writeFieldEnd()), null !== this.is_ban_all && void 0 !== this.is_ban_all && (e.writeFieldBegin("is_ban_all", r.Type.BOOL, 5), e.writeBool(this.is_ban_all), e.writeFieldEnd()), null !== this.is_mark_for_alt_tracking && void 0 !== this.is_mark_for_alt_tracking && (e.writeFieldBegin("is_mark_for_alt_tracking", r.Type.BOOL, 6), e.writeBool(this.is_mark_for_alt_tracking), e.writeFieldEnd()), null !== this.is_unban_all && void 0 !== this.is_unban_all && (e.writeFieldBegin("is_unban_all", r.Type.BOOL, 7), e.writeBool(this.is_unban_all), e.writeFieldEnd()), null !== this.channel && void 0 !== this.channel && (e.writeFieldBegin("channel", r.Type.STRING, 8), e.writeString(this.channel), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/subreddit_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Subreddit = function(e) {
					this.id = null, this.name = null, this.category_name = null, this.whitelist_status = null, this.access_type = null, this.quarantined = null, this.nsfw = null, this.topic_tag_ids = null, this.topic_tag_contents = null, this.topic_tag_types = null, this.number_coins = null, this.public_description = null, this.post_difficulty_rating = null, this.topic_tag_primary_id = null, this.subscriber_count = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.category_name && null !== e.category_name && (this.category_name = e.category_name), void 0 !== e.whitelist_status && null !== e.whitelist_status && (this.whitelist_status = e.whitelist_status), void 0 !== e.access_type && null !== e.access_type && (this.access_type = e.access_type), void 0 !== e.quarantined && null !== e.quarantined && (this.quarantined = e.quarantined), void 0 !== e.nsfw && null !== e.nsfw && (this.nsfw = e.nsfw), void 0 !== e.topic_tag_ids && null !== e.topic_tag_ids && (this.topic_tag_ids = r.copyList(e.topic_tag_ids, [null])), void 0 !== e.topic_tag_contents && null !== e.topic_tag_contents && (this.topic_tag_contents = r.copyList(e.topic_tag_contents, [null])), void 0 !== e.topic_tag_types && null !== e.topic_tag_types && (this.topic_tag_types = r.copyList(e.topic_tag_types, [null])), void 0 !== e.number_coins && null !== e.number_coins && (this.number_coins = e.number_coins), void 0 !== e.public_description && null !== e.public_description && (this.public_description = e.public_description), void 0 !== e.post_difficulty_rating && null !== e.post_difficulty_rating && (this.post_difficulty_rating = e.post_difficulty_rating), void 0 !== e.topic_tag_primary_id && null !== e.topic_tag_primary_id && (this.topic_tag_primary_id = e.topic_tag_primary_id), void 0 !== e.subscriber_count && null !== e.subscriber_count && (this.subscriber_count = e.subscriber_count))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Subreddit"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.category_name && void 0 !== this.category_name && (e.writeFieldBegin("category_name", r.Type.STRING, 3), e.writeString(this.category_name), e.writeFieldEnd()), null !== this.whitelist_status && void 0 !== this.whitelist_status && (e.writeFieldBegin("whitelist_status", r.Type.STRING, 4), e.writeString(this.whitelist_status), e.writeFieldEnd()), null !== this.access_type && void 0 !== this.access_type && (e.writeFieldBegin("access_type", r.Type.STRING, 5), e.writeString(this.access_type), e.writeFieldEnd()), null !== this.quarantined && void 0 !== this.quarantined && (e.writeFieldBegin("quarantined", r.Type.BOOL, 6), e.writeBool(this.quarantined), e.writeFieldEnd()), null !== this.nsfw && void 0 !== this.nsfw && (e.writeFieldBegin("nsfw", r.Type.BOOL, 7), e.writeBool(this.nsfw), e.writeFieldEnd()), null !== this.topic_tag_ids && void 0 !== this.topic_tag_ids) {
					for (var t in e.writeFieldBegin("topic_tag_ids", r.Type.LIST, 8), e.writeListBegin(r.Type.STRING, this.topic_tag_ids.length), this.topic_tag_ids) this.topic_tag_ids.hasOwnProperty(t) && (t = this.topic_tag_ids[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.topic_tag_contents && void 0 !== this.topic_tag_contents) {
					for (var i in e.writeFieldBegin("topic_tag_contents", r.Type.LIST, 9), e.writeListBegin(r.Type.STRING, this.topic_tag_contents.length), this.topic_tag_contents) this.topic_tag_contents.hasOwnProperty(i) && (i = this.topic_tag_contents[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.topic_tag_types && void 0 !== this.topic_tag_types) {
					for (var n in e.writeFieldBegin("topic_tag_types", r.Type.LIST, 10), e.writeListBegin(r.Type.STRING, this.topic_tag_types.length), this.topic_tag_types) this.topic_tag_types.hasOwnProperty(n) && (n = this.topic_tag_types[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.number_coins && void 0 !== this.number_coins && (e.writeFieldBegin("number_coins", r.Type.I32, 11), e.writeI32(this.number_coins), e.writeFieldEnd()), null !== this.public_description && void 0 !== this.public_description && (e.writeFieldBegin("public_description", r.Type.STRING, 12), e.writeString(this.public_description), e.writeFieldEnd()), null !== this.post_difficulty_rating && void 0 !== this.post_difficulty_rating && (e.writeFieldBegin("post_difficulty_rating", r.Type.STRING, 13), e.writeString(this.post_difficulty_rating), e.writeFieldEnd()), null !== this.topic_tag_primary_id && void 0 !== this.topic_tag_primary_id && (e.writeFieldBegin("topic_tag_primary_id", r.Type.STRING, 14), e.writeString(this.topic_tag_primary_id), e.writeFieldEnd()), null !== this.subscriber_count && void 0 !== this.subscriber_count && (e.writeFieldBegin("subscriber_count", r.Type.I32, 15), e.writeI32(this.subscriber_count), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Profile = function(e) {
				if (this.id = null, this.name = null, this.type = null, this.display_name = null, this.about = null, this.avatar_url = null, this.cover_url = null, this.nsfw = null, this.content_visible = null, this.communities_visible = null, this.allow_follow = null, this.social_links = null, e) {
					if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
					if (this.id = e.id, void 0 === e.name || null === e.name) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field name is unset!");
					this.name = e.name, void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.display_name && null !== e.display_name && (this.display_name = e.display_name), void 0 !== e.about && null !== e.about && (this.about = e.about), void 0 !== e.avatar_url && null !== e.avatar_url && (this.avatar_url = e.avatar_url), void 0 !== e.cover_url && null !== e.cover_url && (this.cover_url = e.cover_url), void 0 !== e.nsfw && null !== e.nsfw && (this.nsfw = e.nsfw), void 0 !== e.content_visible && null !== e.content_visible && (this.content_visible = e.content_visible), void 0 !== e.communities_visible && null !== e.communities_visible && (this.communities_visible = e.communities_visible), void 0 !== e.allow_follow && null !== e.allow_follow && (this.allow_follow = e.allow_follow), void 0 !== e.social_links && null !== e.social_links && (this.social_links = e.social_links)
				}
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Profile"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 3), e.writeString(this.type), e.writeFieldEnd()), null !== this.display_name && void 0 !== this.display_name && (e.writeFieldBegin("display_name", r.Type.STRING, 4), e.writeString(this.display_name), e.writeFieldEnd()), null !== this.about && void 0 !== this.about && (e.writeFieldBegin("about", r.Type.STRING, 5), e.writeString(this.about), e.writeFieldEnd()), null !== this.avatar_url && void 0 !== this.avatar_url && (e.writeFieldBegin("avatar_url", r.Type.STRING, 6), e.writeString(this.avatar_url), e.writeFieldEnd()), null !== this.cover_url && void 0 !== this.cover_url && (e.writeFieldBegin("cover_url", r.Type.STRING, 7), e.writeString(this.cover_url), e.writeFieldEnd()), null !== this.nsfw && void 0 !== this.nsfw && (e.writeFieldBegin("nsfw", r.Type.BOOL, 8), e.writeBool(this.nsfw), e.writeFieldEnd()), null !== this.content_visible && void 0 !== this.content_visible && (e.writeFieldBegin("content_visible", r.Type.BOOL, 9), e.writeBool(this.content_visible), e.writeFieldEnd()), null !== this.communities_visible && void 0 !== this.communities_visible && (e.writeFieldBegin("communities_visible", r.Type.BOOL, 11), e.writeBool(this.communities_visible), e.writeFieldEnd()), null !== this.allow_follow && void 0 !== this.allow_follow && (e.writeFieldBegin("allow_follow", r.Type.BOOL, 12), e.writeBool(this.allow_follow), e.writeFieldEnd()), null !== this.social_links && void 0 !== this.social_links && (e.writeFieldBegin("social_links", r.Type.I64, 13), e.writeI64(this.social_links), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/survey_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Survey = function(e) {
					this.type = null, this.min = null, this.max = null, this.score = null, this.text = null, this.experiment_name = null, this.experiment_variant = null, this.experiment_version = null, this.question = null, this.question_id = null, this.parent_question_id = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.min && null !== e.min && (this.min = e.min), void 0 !== e.max && null !== e.max && (this.max = e.max), void 0 !== e.score && null !== e.score && (this.score = e.score), void 0 !== e.text && null !== e.text && (this.text = e.text), void 0 !== e.experiment_name && null !== e.experiment_name && (this.experiment_name = e.experiment_name), void 0 !== e.experiment_variant && null !== e.experiment_variant && (this.experiment_variant = e.experiment_variant), void 0 !== e.experiment_version && null !== e.experiment_version && (this.experiment_version = e.experiment_version), void 0 !== e.question && null !== e.question && (this.question = e.question), void 0 !== e.question_id && null !== e.question_id && (this.question_id = e.question_id), void 0 !== e.parent_question_id && null !== e.parent_question_id && (this.parent_question_id = e.parent_question_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Survey"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.min && void 0 !== this.min && (e.writeFieldBegin("min", r.Type.I32, 2), e.writeI32(this.min), e.writeFieldEnd()), null !== this.max && void 0 !== this.max && (e.writeFieldBegin("max", r.Type.I32, 3), e.writeI32(this.max), e.writeFieldEnd()), null !== this.score && void 0 !== this.score && (e.writeFieldBegin("score", r.Type.I32, 4), e.writeI32(this.score), e.writeFieldEnd()), null !== this.text && void 0 !== this.text && (e.writeFieldBegin("text", r.Type.STRING, 5), e.writeString(this.text), e.writeFieldEnd()), null !== this.experiment_name && void 0 !== this.experiment_name && (e.writeFieldBegin("experiment_name", r.Type.STRING, 6), e.writeString(this.experiment_name), e.writeFieldEnd()), null !== this.experiment_variant && void 0 !== this.experiment_variant && (e.writeFieldBegin("experiment_variant", r.Type.STRING, 7), e.writeString(this.experiment_variant), e.writeFieldEnd()), null !== this.experiment_version && void 0 !== this.experiment_version && (e.writeFieldBegin("experiment_version", r.Type.STRING, 8), e.writeString(this.experiment_version), e.writeFieldEnd()), null !== this.question && void 0 !== this.question && (e.writeFieldBegin("question", r.Type.STRING, 9), e.writeString(this.question), e.writeFieldEnd()), null !== this.question_id && void 0 !== this.question_id && (e.writeFieldBegin("question_id", r.Type.STRING, 10), e.writeString(this.question_id), e.writeFieldEnd()), null !== this.parent_question_id && void 0 !== this.parent_question_id && (e.writeFieldBegin("parent_question_id", r.Type.STRING, 11), e.writeString(this.parent_question_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/target_ip_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.TargetIP = function(e) {
					this.address = null, e && void 0 !== e.address && null !== e.address && (this.address = e.address)
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("TargetIP"), null !== this.address && void 0 !== this.address && (e.writeFieldBegin("address", r.Type.STRING, 1), e.writeString(this.address), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/taxonomy_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Taxonomy = function(e) {
					this.subreddit_id = null, this.subreddit_name = null, this.subreddit_whitelist_status = null, this.version = null, this.rating = null, this.allowlist_status = null, this.primary_topics = null, this.mature_themes = null, e && (void 0 !== e.subreddit_id && null !== e.subreddit_id && (this.subreddit_id = e.subreddit_id), void 0 !== e.subreddit_name && null !== e.subreddit_name && (this.subreddit_name = e.subreddit_name), void 0 !== e.subreddit_whitelist_status && null !== e.subreddit_whitelist_status && (this.subreddit_whitelist_status = e.subreddit_whitelist_status), void 0 !== e.version && null !== e.version && (this.version = e.version), void 0 !== e.rating && null !== e.rating && (this.rating = e.rating), void 0 !== e.allowlist_status && null !== e.allowlist_status && (this.allowlist_status = e.allowlist_status), void 0 !== e.primary_topics && null !== e.primary_topics && (this.primary_topics = r.copyList(e.primary_topics, [null])), void 0 !== e.mature_themes && null !== e.mature_themes && (this.mature_themes = r.copyList(e.mature_themes, [null])))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Taxonomy"), null !== this.subreddit_id && void 0 !== this.subreddit_id && (e.writeFieldBegin("subreddit_id", r.Type.STRING, 1), e.writeString(this.subreddit_id), e.writeFieldEnd()), null !== this.subreddit_name && void 0 !== this.subreddit_name && (e.writeFieldBegin("subreddit_name", r.Type.STRING, 2), e.writeString(this.subreddit_name), e.writeFieldEnd()), null !== this.subreddit_whitelist_status && void 0 !== this.subreddit_whitelist_status && (e.writeFieldBegin("subreddit_whitelist_status", r.Type.STRING, 3), e.writeString(this.subreddit_whitelist_status), e.writeFieldEnd()), null !== this.version && void 0 !== this.version && (e.writeFieldBegin("version", r.Type.STRING, 4), e.writeString(this.version), e.writeFieldEnd()), null !== this.rating && void 0 !== this.rating && (e.writeFieldBegin("rating", r.Type.STRING, 5), e.writeString(this.rating), e.writeFieldEnd()), null !== this.allowlist_status && void 0 !== this.allowlist_status && (e.writeFieldBegin("allowlist_status", r.Type.STRING, 6), e.writeString(this.allowlist_status), e.writeFieldEnd()), null !== this.primary_topics && void 0 !== this.primary_topics) {
					for (var t in e.writeFieldBegin("primary_topics", r.Type.LIST, 7), e.writeListBegin(r.Type.STRING, this.primary_topics.length), this.primary_topics) this.primary_topics.hasOwnProperty(t) && (t = this.primary_topics[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.mature_themes && void 0 !== this.mature_themes) {
					for (var i in e.writeFieldBegin("mature_themes", r.Type.LIST, 8), e.writeListBegin(r.Type.STRING, this.mature_themes.length), this.mature_themes) this.mature_themes.hasOwnProperty(i) && (i = this.mature_themes[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/thirdpartybadge_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.ThirdPartyBadge = function(e) {
					this.id = null, this.title = null, this.target_user_id = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.target_user_id && null !== e.target_user_id && (this.target_user_id = e.target_user_id))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("ThirdPartyBadge"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), null !== this.target_user_id && void 0 !== this.target_user_id && (e.writeFieldBegin("target_user_id", r.Type.STRING, 3), e.writeString(this.target_user_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/ticket_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Ticket = function(e) {
					if (this.id = null, this.type = null, this.queue_id = null, this.status = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						this.id = e.id, void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.queue_id && null !== e.queue_id && (this.queue_id = e.queue_id), void 0 !== e.status && null !== e.status && (this.status = e.status)
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Ticket"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.queue_id && void 0 !== this.queue_id && (e.writeFieldBegin("queue_id", r.Type.STRING, 3), e.writeString(this.queue_id), e.writeFieldEnd()), null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 4), e.writeString(this.status), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ReddarTicket = function(e) {
				this.id = null, this.type = null, this.queue_id = null, this.status = null, this.report_source = null, this.requestor_id = null, this.requestor_name = null, this.copyright_owner = null, this.ticket_review_time = null, this.content_review_time = null, this.num_content_items = null, this.reddar_features_used = null, this.field_updated = null, this.previous_value = null, this.current_value = null, this.locale = null, this.reports = null, this.actions = null, this.policy_violation = null, this.reporter_message = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.queue_id && null !== e.queue_id && (this.queue_id = e.queue_id), void 0 !== e.status && null !== e.status && (this.status = e.status), void 0 !== e.report_source && null !== e.report_source && (this.report_source = e.report_source), void 0 !== e.requestor_id && null !== e.requestor_id && (this.requestor_id = e.requestor_id), void 0 !== e.requestor_name && null !== e.requestor_name && (this.requestor_name = e.requestor_name), void 0 !== e.copyright_owner && null !== e.copyright_owner && (this.copyright_owner = e.copyright_owner), void 0 !== e.ticket_review_time && null !== e.ticket_review_time && (this.ticket_review_time = e.ticket_review_time), void 0 !== e.content_review_time && null !== e.content_review_time && (this.content_review_time = e.content_review_time), void 0 !== e.num_content_items && null !== e.num_content_items && (this.num_content_items = e.num_content_items), void 0 !== e.reddar_features_used && null !== e.reddar_features_used && (this.reddar_features_used = r.copyList(e.reddar_features_used, [null])), void 0 !== e.field_updated && null !== e.field_updated && (this.field_updated = e.field_updated), void 0 !== e.previous_value && null !== e.previous_value && (this.previous_value = e.previous_value), void 0 !== e.current_value && null !== e.current_value && (this.current_value = e.current_value), void 0 !== e.locale && null !== e.locale && (this.locale = e.locale), void 0 !== e.reports && null !== e.reports && (this.reports = r.copyList(e.reports, [null])), void 0 !== e.actions && null !== e.actions && (this.actions = r.copyList(e.actions, [null])), void 0 !== e.policy_violation && null !== e.policy_violation && (this.policy_violation = e.policy_violation), void 0 !== e.reporter_message && null !== e.reporter_message && (this.reporter_message = e.reporter_message))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				if (e.writeStructBegin("ReddarTicket"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), null !== this.queue_id && void 0 !== this.queue_id && (e.writeFieldBegin("queue_id", r.Type.STRING, 3), e.writeString(this.queue_id), e.writeFieldEnd()), null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 4), e.writeString(this.status), e.writeFieldEnd()), null !== this.report_source && void 0 !== this.report_source && (e.writeFieldBegin("report_source", r.Type.STRING, 5), e.writeString(this.report_source), e.writeFieldEnd()), null !== this.requestor_id && void 0 !== this.requestor_id && (e.writeFieldBegin("requestor_id", r.Type.STRING, 6), e.writeString(this.requestor_id), e.writeFieldEnd()), null !== this.requestor_name && void 0 !== this.requestor_name && (e.writeFieldBegin("requestor_name", r.Type.STRING, 7), e.writeString(this.requestor_name), e.writeFieldEnd()), null !== this.copyright_owner && void 0 !== this.copyright_owner && (e.writeFieldBegin("copyright_owner", r.Type.STRING, 8), e.writeString(this.copyright_owner), e.writeFieldEnd()), null !== this.ticket_review_time && void 0 !== this.ticket_review_time && (e.writeFieldBegin("ticket_review_time", r.Type.I64, 9), e.writeI64(this.ticket_review_time), e.writeFieldEnd()), null !== this.content_review_time && void 0 !== this.content_review_time && (e.writeFieldBegin("content_review_time", r.Type.I64, 10), e.writeI64(this.content_review_time), e.writeFieldEnd()), null !== this.num_content_items && void 0 !== this.num_content_items && (e.writeFieldBegin("num_content_items", r.Type.I64, 11), e.writeI64(this.num_content_items), e.writeFieldEnd()), null !== this.reddar_features_used && void 0 !== this.reddar_features_used) {
					for (var t in e.writeFieldBegin("reddar_features_used", r.Type.LIST, 12), e.writeListBegin(r.Type.STRING, this.reddar_features_used.length), this.reddar_features_used) this.reddar_features_used.hasOwnProperty(t) && (t = this.reddar_features_used[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.field_updated && void 0 !== this.field_updated && (e.writeFieldBegin("field_updated", r.Type.STRING, 13), e.writeString(this.field_updated), e.writeFieldEnd()), null !== this.previous_value && void 0 !== this.previous_value && (e.writeFieldBegin("previous_value", r.Type.STRING, 14), e.writeString(this.previous_value), e.writeFieldEnd()), null !== this.current_value && void 0 !== this.current_value && (e.writeFieldBegin("current_value", r.Type.STRING, 15), e.writeString(this.current_value), e.writeFieldEnd()), null !== this.locale && void 0 !== this.locale && (e.writeFieldBegin("locale", r.Type.STRING, 16), e.writeString(this.locale), e.writeFieldEnd()), null !== this.reports && void 0 !== this.reports) {
					for (var i in e.writeFieldBegin("reports", r.Type.LIST, 17), e.writeListBegin(r.Type.STRING, this.reports.length), this.reports) this.reports.hasOwnProperty(i) && (i = this.reports[i], e.writeString(i));
					e.writeListEnd(), e.writeFieldEnd()
				}
				if (null !== this.actions && void 0 !== this.actions) {
					for (var n in e.writeFieldBegin("actions", r.Type.LIST, 18), e.writeListBegin(r.Type.STRING, this.actions.length), this.actions) this.actions.hasOwnProperty(n) && (n = this.actions[n], e.writeString(n));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.policy_violation && void 0 !== this.policy_violation && (e.writeFieldBegin("policy_violation", r.Type.STRING, 19), e.writeString(this.policy_violation), e.writeFieldEnd()), null !== this.reporter_message && void 0 !== this.reporter_message && (e.writeFieldBegin("reporter_message", r.Type.STRING, 20), e.writeString(this.reporter_message), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.ReddarTicketContent = function(e) {
				this.id = null, this.reported_url = null, this.target_id = null, this.target_type = null, this.status = null, this.status_reason = null, this.post_nsfw = null, this.removed_by_moderator = null, this.content_type = null, this.target_created_timestamp = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.reported_url && null !== e.reported_url && (this.reported_url = e.reported_url), void 0 !== e.target_id && null !== e.target_id && (this.target_id = e.target_id), void 0 !== e.target_type && null !== e.target_type && (this.target_type = e.target_type), void 0 !== e.status && null !== e.status && (this.status = e.status), void 0 !== e.status_reason && null !== e.status_reason && (this.status_reason = e.status_reason), void 0 !== e.post_nsfw && null !== e.post_nsfw && (this.post_nsfw = e.post_nsfw), void 0 !== e.removed_by_moderator && null !== e.removed_by_moderator && (this.removed_by_moderator = e.removed_by_moderator), void 0 !== e.content_type && null !== e.content_type && (this.content_type = e.content_type), void 0 !== e.target_created_timestamp && null !== e.target_created_timestamp && (this.target_created_timestamp = e.target_created_timestamp))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("ReddarTicketContent"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.reported_url && void 0 !== this.reported_url && (e.writeFieldBegin("reported_url", r.Type.STRING, 2), e.writeString(this.reported_url), e.writeFieldEnd()), null !== this.target_id && void 0 !== this.target_id && (e.writeFieldBegin("target_id", r.Type.STRING, 3), e.writeString(this.target_id), e.writeFieldEnd()), null !== this.target_type && void 0 !== this.target_type && (e.writeFieldBegin("target_type", r.Type.STRING, 4), e.writeString(this.target_type), e.writeFieldEnd()), null !== this.status && void 0 !== this.status && (e.writeFieldBegin("status", r.Type.STRING, 5), e.writeString(this.status), e.writeFieldEnd()), null !== this.status_reason && void 0 !== this.status_reason && (e.writeFieldBegin("status_reason", r.Type.STRING, 6), e.writeString(this.status_reason), e.writeFieldEnd()), null !== this.post_nsfw && void 0 !== this.post_nsfw && (e.writeFieldBegin("post_nsfw", r.Type.BOOL, 7), e.writeBool(this.post_nsfw), e.writeFieldEnd()), null !== this.removed_by_moderator && void 0 !== this.removed_by_moderator && (e.writeFieldBegin("removed_by_moderator", r.Type.BOOL, 8), e.writeBool(this.removed_by_moderator), e.writeFieldEnd()), null !== this.content_type && void 0 !== this.content_type && (e.writeFieldBegin("content_type", r.Type.STRING, 9), e.writeString(this.content_type), e.writeFieldEnd()), null !== this.target_created_timestamp && void 0 !== this.target_created_timestamp && (e.writeFieldBegin("target_created_timestamp", r.Type.I64, 10), e.writeI64(this.target_created_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var a = e.exports.ZendeskTicket = function(e) {
				this.id = null, this.source = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.source && null !== e.source && (this.source = e.source))
			};
			a.prototype = {}, a.prototype.write = function(e) {
				e.writeStructBegin("ZendeskTicket"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.I64, 1), e.writeI64(this.id), e.writeFieldEnd()), null !== this.source && void 0 !== this.source && (e.writeFieldBegin("source", r.Type.STRING, 2), e.writeString(this.source), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/timer_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.DOMTimers = function(e) {
					this.request = null, this.loading = null, this.loaded = null, e && (void 0 !== e.request && null !== e.request && (this.request = e.request), void 0 !== e.loading && null !== e.loading && (this.loading = e.loading), void 0 !== e.loaded && null !== e.loaded && (this.loaded = e.loaded))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("DOMTimers"), null !== this.request && void 0 !== this.request && (e.writeFieldBegin("request", r.Type.I64, 1), e.writeI64(this.request), e.writeFieldEnd()), null !== this.loading && void 0 !== this.loading && (e.writeFieldBegin("loading", r.Type.I64, 2), e.writeI64(this.loading), e.writeFieldEnd()), null !== this.loaded && void 0 !== this.loaded && (e.writeFieldBegin("loaded", r.Type.I64, 3), e.writeI64(this.loaded), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.Timer = function(e) {
				this.type = null, this.millis = null, this.time_to_first_byte = null, this.first_contentful_paint = null, this.first_meaningful_paint = null, this.first_input_delay = null, this.referrer = null, this.referrer_correlation_id = null, e && (void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.millis && null !== e.millis && (this.millis = e.millis), void 0 !== e.time_to_first_byte && null !== e.time_to_first_byte && (this.time_to_first_byte = e.time_to_first_byte), void 0 !== e.first_contentful_paint && null !== e.first_contentful_paint && (this.first_contentful_paint = e.first_contentful_paint), void 0 !== e.first_meaningful_paint && null !== e.first_meaningful_paint && (this.first_meaningful_paint = e.first_meaningful_paint), void 0 !== e.first_input_delay && null !== e.first_input_delay && (this.first_input_delay = e.first_input_delay), void 0 !== e.referrer && null !== e.referrer && (this.referrer = e.referrer), void 0 !== e.referrer_correlation_id && null !== e.referrer_correlation_id && (this.referrer_correlation_id = e.referrer_correlation_id))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("Timer"), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 1), e.writeString(this.type), e.writeFieldEnd()), null !== this.millis && void 0 !== this.millis && (e.writeFieldBegin("millis", r.Type.I64, 2), e.writeI64(this.millis), e.writeFieldEnd()), null !== this.time_to_first_byte && void 0 !== this.time_to_first_byte && (e.writeFieldBegin("time_to_first_byte", r.Type.I64, 3), e.writeI64(this.time_to_first_byte), e.writeFieldEnd()), null !== this.first_contentful_paint && void 0 !== this.first_contentful_paint && (e.writeFieldBegin("first_contentful_paint", r.Type.I64, 4), e.writeI64(this.first_contentful_paint), e.writeFieldEnd()), null !== this.first_meaningful_paint && void 0 !== this.first_meaningful_paint && (e.writeFieldBegin("first_meaningful_paint", r.Type.I64, 5), e.writeI64(this.first_meaningful_paint), e.writeFieldEnd()), null !== this.first_input_delay && void 0 !== this.first_input_delay && (e.writeFieldBegin("first_input_delay", r.Type.I64, 6), e.writeI64(this.first_input_delay), e.writeFieldEnd()), null !== this.referrer && void 0 !== this.referrer && (e.writeFieldBegin("referrer", r.Type.STRING, 7), e.writeString(this.referrer), e.writeFieldEnd()), null !== this.referrer_correlation_id && void 0 !== this.referrer_correlation_id && (e.writeFieldBegin("referrer_correlation_id", r.Type.STRING, 8), e.writeString(this.referrer_correlation_id), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/tooltip_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Tooltip = function(e) {
					if (this.id = null, this.text = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						if (this.id = e.id, void 0 === e.text || null === e.text) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field text is unset!");
						this.text = e.text
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Tooltip"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.text && void 0 !== this.text && (e.writeFieldBegin("text", r.Type.STRING, 2), e.writeString(this.text), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/topic_metadata_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.TopicMetadata = function(e) {
					this.id = null, this.display_name = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.display_name && null !== e.display_name && (this.display_name = e.display_name))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("TopicMetadata"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.display_name && void 0 !== this.display_name && (e.writeFieldBegin("display_name", r.Type.STRING, 2), e.writeString(this.display_name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/topic_tag_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.TopicTag = function(e) {
					this.id = null, this.content = null, this.type = null, this.is_primary = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.content && null !== e.content && (this.content = e.content), void 0 !== e.type && null !== e.type && (this.type = e.type), void 0 !== e.is_primary && null !== e.is_primary && (this.is_primary = e.is_primary))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("TopicTag"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.content && void 0 !== this.content && (e.writeFieldBegin("content", r.Type.STRING, 2), e.writeString(this.content), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 3), e.writeString(this.type), e.writeFieldEnd()), null !== this.is_primary && void 0 !== this.is_primary && (e.writeFieldBegin("is_primary", r.Type.BOOL, 4), e.writeBool(this.is_primary), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/trophy_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Trophy = function(e) {
					this.id = null, this.name = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.name && null !== e.name && (this.name = e.name))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Trophy"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 2), e.writeString(this.name), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/typedefs_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js");
			n.Thrift, n.Q, e.exports = {}
		},
		"./src/telemetry/eventSchemas/upload_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Upload = function(e) {
					this.file_size = null, this.category = null, this.optimization_type = null, e && (void 0 !== e.file_size && null !== e.file_size && (this.file_size = e.file_size), void 0 !== e.category && null !== e.category && (this.category = e.category), void 0 !== e.optimization_type && null !== e.optimization_type && (this.optimization_type = e.optimization_type))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Upload"), null !== this.file_size && void 0 !== this.file_size && (e.writeFieldBegin("file_size", r.Type.I64, 1), e.writeI64(this.file_size), e.writeFieldEnd()), null !== this.category && void 0 !== this.category && (e.writeFieldBegin("category", r.Type.STRING, 2), e.writeString(this.category), e.writeFieldEnd()), null !== this.optimization_type && void 0 !== this.optimization_type && (e.writeFieldBegin("optimization_type", r.Type.STRING, 3), e.writeString(this.optimization_type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/user_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.User = function(e) {
					this.id = null, this.created_timestamp = null, this.logged_in = null, this.cookie_created_timestamp = null, this.suspect = null, this.disenfranchised = null, this.in_timeout = null, this.neutered = null, this.number_creddits = null, this.is_admin = null, this.has_premium = null, this.number_coins = null, this.number_premium_days_remaining = null, this.is_employee = null, this.is_premium_subscriber = null, this.post_karma = null, this.comment_karma = null, this.name = null, this.email = null, this.previous_id = null, this.masked_email = null, this.masked_email_user = null, this.email_domain = null, this.premium_state = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.created_timestamp && null !== e.created_timestamp && (this.created_timestamp = e.created_timestamp), void 0 !== e.logged_in && null !== e.logged_in && (this.logged_in = e.logged_in), void 0 !== e.cookie_created_timestamp && null !== e.cookie_created_timestamp && (this.cookie_created_timestamp = e.cookie_created_timestamp), void 0 !== e.suspect && null !== e.suspect && (this.suspect = e.suspect), void 0 !== e.disenfranchised && null !== e.disenfranchised && (this.disenfranchised = e.disenfranchised), void 0 !== e.in_timeout && null !== e.in_timeout && (this.in_timeout = e.in_timeout), void 0 !== e.neutered && null !== e.neutered && (this.neutered = e.neutered), void 0 !== e.number_creddits && null !== e.number_creddits && (this.number_creddits = e.number_creddits), void 0 !== e.is_admin && null !== e.is_admin && (this.is_admin = e.is_admin), void 0 !== e.has_premium && null !== e.has_premium && (this.has_premium = e.has_premium), void 0 !== e.number_coins && null !== e.number_coins && (this.number_coins = e.number_coins), void 0 !== e.number_premium_days_remaining && null !== e.number_premium_days_remaining && (this.number_premium_days_remaining = e.number_premium_days_remaining), void 0 !== e.is_employee && null !== e.is_employee && (this.is_employee = e.is_employee), void 0 !== e.is_premium_subscriber && null !== e.is_premium_subscriber && (this.is_premium_subscriber = e.is_premium_subscriber), void 0 !== e.post_karma && null !== e.post_karma && (this.post_karma = e.post_karma), void 0 !== e.comment_karma && null !== e.comment_karma && (this.comment_karma = e.comment_karma), void 0 !== e.name && null !== e.name && (this.name = e.name), void 0 !== e.email && null !== e.email && (this.email = e.email), void 0 !== e.previous_id && null !== e.previous_id && (this.previous_id = e.previous_id), void 0 !== e.masked_email && null !== e.masked_email && (this.masked_email = e.masked_email), void 0 !== e.masked_email_user && null !== e.masked_email_user && (this.masked_email_user = e.masked_email_user), void 0 !== e.email_domain && null !== e.email_domain && (this.email_domain = e.email_domain), void 0 !== e.premium_state && null !== e.premium_state && (this.premium_state = e.premium_state))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("User"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.created_timestamp && void 0 !== this.created_timestamp && (e.writeFieldBegin("created_timestamp", r.Type.I64, 2), e.writeI64(this.created_timestamp), e.writeFieldEnd()), null !== this.logged_in && void 0 !== this.logged_in && (e.writeFieldBegin("logged_in", r.Type.BOOL, 3), e.writeBool(this.logged_in), e.writeFieldEnd()), null !== this.cookie_created_timestamp && void 0 !== this.cookie_created_timestamp && (e.writeFieldBegin("cookie_created_timestamp", r.Type.I64, 4), e.writeI64(this.cookie_created_timestamp), e.writeFieldEnd()), null !== this.suspect && void 0 !== this.suspect && (e.writeFieldBegin("suspect", r.Type.BOOL, 6), e.writeBool(this.suspect), e.writeFieldEnd()), null !== this.disenfranchised && void 0 !== this.disenfranchised && (e.writeFieldBegin("disenfranchised", r.Type.BOOL, 8), e.writeBool(this.disenfranchised), e.writeFieldEnd()), null !== this.in_timeout && void 0 !== this.in_timeout && (e.writeFieldBegin("in_timeout", r.Type.BOOL, 9), e.writeBool(this.in_timeout), e.writeFieldEnd()), null !== this.neutered && void 0 !== this.neutered && (e.writeFieldBegin("neutered", r.Type.BOOL, 10), e.writeBool(this.neutered), e.writeFieldEnd()), null !== this.number_creddits && void 0 !== this.number_creddits && (e.writeFieldBegin("number_creddits", r.Type.I64, 11), e.writeI64(this.number_creddits), e.writeFieldEnd()), null !== this.is_admin && void 0 !== this.is_admin && (e.writeFieldBegin("is_admin", r.Type.BOOL, 12), e.writeBool(this.is_admin), e.writeFieldEnd()), null !== this.has_premium && void 0 !== this.has_premium && (e.writeFieldBegin("has_premium", r.Type.BOOL, 13), e.writeBool(this.has_premium), e.writeFieldEnd()), null !== this.number_coins && void 0 !== this.number_coins && (e.writeFieldBegin("number_coins", r.Type.I64, 14), e.writeI64(this.number_coins), e.writeFieldEnd()), null !== this.number_premium_days_remaining && void 0 !== this.number_premium_days_remaining && (e.writeFieldBegin("number_premium_days_remaining", r.Type.I64, 15), e.writeI64(this.number_premium_days_remaining), e.writeFieldEnd()), null !== this.is_employee && void 0 !== this.is_employee && (e.writeFieldBegin("is_employee", r.Type.BOOL, 16), e.writeBool(this.is_employee), e.writeFieldEnd()), null !== this.is_premium_subscriber && void 0 !== this.is_premium_subscriber && (e.writeFieldBegin("is_premium_subscriber", r.Type.BOOL, 17), e.writeBool(this.is_premium_subscriber), e.writeFieldEnd()), null !== this.post_karma && void 0 !== this.post_karma && (e.writeFieldBegin("post_karma", r.Type.I64, 18), e.writeI64(this.post_karma), e.writeFieldEnd()), null !== this.comment_karma && void 0 !== this.comment_karma && (e.writeFieldBegin("comment_karma", r.Type.I64, 19), e.writeI64(this.comment_karma), e.writeFieldEnd()), null !== this.name && void 0 !== this.name && (e.writeFieldBegin("name", r.Type.STRING, 20), e.writeString(this.name), e.writeFieldEnd()), null !== this.email && void 0 !== this.email && (e.writeFieldBegin("email", r.Type.STRING, 21), e.writeString(this.email), e.writeFieldEnd()), null !== this.previous_id && void 0 !== this.previous_id && (e.writeFieldBegin("previous_id", r.Type.STRING, 22), e.writeString(this.previous_id), e.writeFieldEnd()), null !== this.masked_email && void 0 !== this.masked_email && (e.writeFieldBegin("masked_email", r.Type.STRING, 23), e.writeString(this.masked_email), e.writeFieldEnd()), null !== this.masked_email_user && void 0 !== this.masked_email_user && (e.writeFieldBegin("masked_email_user", r.Type.STRING, 24), e.writeString(this.masked_email_user), e.writeFieldEnd()), null !== this.email_domain && void 0 !== this.email_domain && (e.writeFieldBegin("email_domain", r.Type.STRING, 25), e.writeString(this.email_domain), e.writeFieldEnd()), null !== this.premium_state && void 0 !== this.premium_state && (e.writeFieldBegin("premium_state", r.Type.STRING, 26), e.writeString(this.premium_state), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.UserPreferences = function(e) {
				this.in_beta = null, this.language = null, this.hide_nsfw = null, this.expando = null, this.hide_previously_seen_posts = null, this.service_language = null, e && (void 0 !== e.in_beta && null !== e.in_beta && (this.in_beta = e.in_beta), void 0 !== e.language && null !== e.language && (this.language = e.language), void 0 !== e.hide_nsfw && null !== e.hide_nsfw && (this.hide_nsfw = e.hide_nsfw), void 0 !== e.expando && null !== e.expando && (this.expando = e.expando), void 0 !== e.hide_previously_seen_posts && null !== e.hide_previously_seen_posts && (this.hide_previously_seen_posts = e.hide_previously_seen_posts), void 0 !== e.service_language && null !== e.service_language && (this.service_language = e.service_language))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("UserPreferences"), null !== this.in_beta && void 0 !== this.in_beta && (e.writeFieldBegin("in_beta", r.Type.BOOL, 1), e.writeBool(this.in_beta), e.writeFieldEnd()), null !== this.language && void 0 !== this.language && (e.writeFieldBegin("language", r.Type.STRING, 2), e.writeString(this.language), e.writeFieldEnd()), null !== this.hide_nsfw && void 0 !== this.hide_nsfw && (e.writeFieldBegin("hide_nsfw", r.Type.BOOL, 3), e.writeBool(this.hide_nsfw), e.writeFieldEnd()), null !== this.expando && void 0 !== this.expando && (e.writeFieldBegin("expando", r.Type.STRING, 4), e.writeString(this.expando), e.writeFieldEnd()), null !== this.hide_previously_seen_posts && void 0 !== this.hide_previously_seen_posts && (e.writeFieldBegin("hide_previously_seen_posts", r.Type.BOOL, 5), e.writeBool(this.hide_previously_seen_posts), e.writeFieldEnd()), null !== this.service_language && void 0 !== this.service_language && (e.writeFieldBegin("service_language", r.Type.STRING, 6), e.writeString(this.service_language), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var d = e.exports.UserSubreddit = function(e) {
				this.is_mod = null, this.mod_full = null, this.mod_access = null, this.mod_config = null, this.mod_flair = null, this.mod_mail = null, this.mod_post = null, this.mod_wiki = null, this.mod_none = null, this.is_favorite = null, this.is_subscriber = null, this.post_karma = null, this.comment_karma = null, this.is_steward = null, e && (void 0 !== e.is_mod && null !== e.is_mod && (this.is_mod = e.is_mod), void 0 !== e.mod_full && null !== e.mod_full && (this.mod_full = e.mod_full), void 0 !== e.mod_access && null !== e.mod_access && (this.mod_access = e.mod_access), void 0 !== e.mod_config && null !== e.mod_config && (this.mod_config = e.mod_config), void 0 !== e.mod_flair && null !== e.mod_flair && (this.mod_flair = e.mod_flair), void 0 !== e.mod_mail && null !== e.mod_mail && (this.mod_mail = e.mod_mail), void 0 !== e.mod_post && null !== e.mod_post && (this.mod_post = e.mod_post), void 0 !== e.mod_wiki && null !== e.mod_wiki && (this.mod_wiki = e.mod_wiki), void 0 !== e.mod_none && null !== e.mod_none && (this.mod_none = e.mod_none), void 0 !== e.is_favorite && null !== e.is_favorite && (this.is_favorite = e.is_favorite), void 0 !== e.is_subscriber && null !== e.is_subscriber && (this.is_subscriber = e.is_subscriber), void 0 !== e.post_karma && null !== e.post_karma && (this.post_karma = e.post_karma), void 0 !== e.comment_karma && null !== e.comment_karma && (this.comment_karma = e.comment_karma), void 0 !== e.is_steward && null !== e.is_steward && (this.is_steward = e.is_steward))
			};
			d.prototype = {}, d.prototype.write = function(e) {
				e.writeStructBegin("UserSubreddit"), null !== this.is_mod && void 0 !== this.is_mod && (e.writeFieldBegin("is_mod", r.Type.BOOL, 1), e.writeBool(this.is_mod), e.writeFieldEnd()), null !== this.mod_full && void 0 !== this.mod_full && (e.writeFieldBegin("mod_full", r.Type.BOOL, 2), e.writeBool(this.mod_full), e.writeFieldEnd()), null !== this.mod_access && void 0 !== this.mod_access && (e.writeFieldBegin("mod_access", r.Type.BOOL, 3), e.writeBool(this.mod_access), e.writeFieldEnd()), null !== this.mod_config && void 0 !== this.mod_config && (e.writeFieldBegin("mod_config", r.Type.BOOL, 4), e.writeBool(this.mod_config), e.writeFieldEnd()), null !== this.mod_flair && void 0 !== this.mod_flair && (e.writeFieldBegin("mod_flair", r.Type.BOOL, 5), e.writeBool(this.mod_flair), e.writeFieldEnd()), null !== this.mod_mail && void 0 !== this.mod_mail && (e.writeFieldBegin("mod_mail", r.Type.BOOL, 6), e.writeBool(this.mod_mail), e.writeFieldEnd()), null !== this.mod_post && void 0 !== this.mod_post && (e.writeFieldBegin("mod_post", r.Type.BOOL, 7), e.writeBool(this.mod_post), e.writeFieldEnd()), null !== this.mod_wiki && void 0 !== this.mod_wiki && (e.writeFieldBegin("mod_wiki", r.Type.BOOL, 8), e.writeBool(this.mod_wiki), e.writeFieldEnd()), null !== this.mod_none && void 0 !== this.mod_none && (e.writeFieldBegin("mod_none", r.Type.BOOL, 9), e.writeBool(this.mod_none), e.writeFieldEnd()), null !== this.is_favorite && void 0 !== this.is_favorite && (e.writeFieldBegin("is_favorite", r.Type.BOOL, 10), e.writeBool(this.is_favorite), e.writeFieldEnd()), null !== this.is_subscriber && void 0 !== this.is_subscriber && (e.writeFieldBegin("is_subscriber", r.Type.BOOL, 11), e.writeBool(this.is_subscriber), e.writeFieldEnd()), null !== this.post_karma && void 0 !== this.post_karma && (e.writeFieldBegin("post_karma", r.Type.I64, 12), e.writeI64(this.post_karma), e.writeFieldEnd()), null !== this.comment_karma && void 0 !== this.comment_karma && (e.writeFieldBegin("comment_karma", r.Type.I64, 13), e.writeI64(this.comment_karma), e.writeFieldEnd()), null !== this.is_steward && void 0 !== this.is_steward && (e.writeFieldBegin("is_steward", r.Type.BOOL, 14), e.writeBool(this.is_steward), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/userflair_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.UserFlair = function(e) {
					this.id = null, this.title = null, this.active = null, this.id_achieve = null, this.title_achieve = null, this.locked = null, this.id_supporter = null, this.title_supporter = null, this.is_supporter = null, e && (void 0 !== e.id && null !== e.id && (this.id = e.id), void 0 !== e.title && null !== e.title && (this.title = e.title), void 0 !== e.active && null !== e.active && (this.active = e.active), void 0 !== e.id_achieve && null !== e.id_achieve && (this.id_achieve = e.id_achieve), void 0 !== e.title_achieve && null !== e.title_achieve && (this.title_achieve = e.title_achieve), void 0 !== e.locked && null !== e.locked && (this.locked = e.locked), void 0 !== e.id_supporter && null !== e.id_supporter && (this.id_supporter = e.id_supporter), void 0 !== e.title_supporter && null !== e.title_supporter && (this.title_supporter = e.title_supporter), void 0 !== e.is_supporter && null !== e.is_supporter && (this.is_supporter = e.is_supporter))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("UserFlair"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.title && void 0 !== this.title && (e.writeFieldBegin("title", r.Type.STRING, 2), e.writeString(this.title), e.writeFieldEnd()), null !== this.active && void 0 !== this.active && (e.writeFieldBegin("active", r.Type.BOOL, 3), e.writeBool(this.active), e.writeFieldEnd()), null !== this.id_achieve && void 0 !== this.id_achieve && (e.writeFieldBegin("id_achieve", r.Type.STRING, 4), e.writeString(this.id_achieve), e.writeFieldEnd()), null !== this.title_achieve && void 0 !== this.title_achieve && (e.writeFieldBegin("title_achieve", r.Type.STRING, 5), e.writeString(this.title_achieve), e.writeFieldEnd()), null !== this.locked && void 0 !== this.locked && (e.writeFieldBegin("locked", r.Type.BOOL, 6), e.writeBool(this.locked), e.writeFieldEnd()), null !== this.id_supporter && void 0 !== this.id_supporter && (e.writeFieldBegin("id_supporter", r.Type.STRING, 7), e.writeString(this.id_supporter), e.writeFieldEnd()), null !== this.title_supporter && void 0 !== this.title_supporter && (e.writeFieldBegin("title_supporter", r.Type.STRING, 8), e.writeString(this.title_supporter), e.writeFieldEnd()), null !== this.is_supporter && void 0 !== this.is_supporter && (e.writeFieldBegin("is_supporter", r.Type.BOOL, 9), e.writeBool(this.is_supporter), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/video_error_report_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.VideoErrorReport = function(e) {
					this.reason = null, this.custom_response = null, this.mux_session_id = null, this.error_code = null, this.error_message = null, this.network_speed = null, this.num_connection_attempts = null, this.client_connected_timestamp = null, this.network_disconnect_timestamp = null, this.bitrate = null, e && (void 0 !== e.reason && null !== e.reason && (this.reason = e.reason), void 0 !== e.custom_response && null !== e.custom_response && (this.custom_response = e.custom_response), void 0 !== e.mux_session_id && null !== e.mux_session_id && (this.mux_session_id = e.mux_session_id), void 0 !== e.error_code && null !== e.error_code && (this.error_code = e.error_code), void 0 !== e.error_message && null !== e.error_message && (this.error_message = e.error_message), void 0 !== e.network_speed && null !== e.network_speed && (this.network_speed = e.network_speed), void 0 !== e.num_connection_attempts && null !== e.num_connection_attempts && (this.num_connection_attempts = e.num_connection_attempts), void 0 !== e.client_connected_timestamp && null !== e.client_connected_timestamp && (this.client_connected_timestamp = e.client_connected_timestamp), void 0 !== e.network_disconnect_timestamp && null !== e.network_disconnect_timestamp && (this.network_disconnect_timestamp = e.network_disconnect_timestamp), void 0 !== e.bitrate && null !== e.bitrate && (this.bitrate = e.bitrate))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("VideoErrorReport"), null !== this.reason && void 0 !== this.reason && (e.writeFieldBegin("reason", r.Type.STRING, 1), e.writeString(this.reason), e.writeFieldEnd()), null !== this.custom_response && void 0 !== this.custom_response && (e.writeFieldBegin("custom_response", r.Type.STRING, 2), e.writeString(this.custom_response), e.writeFieldEnd()), null !== this.mux_session_id && void 0 !== this.mux_session_id && (e.writeFieldBegin("mux_session_id", r.Type.STRING, 3), e.writeString(this.mux_session_id), e.writeFieldEnd()), null !== this.error_code && void 0 !== this.error_code && (e.writeFieldBegin("error_code", r.Type.I32, 4), e.writeI32(this.error_code), e.writeFieldEnd()), null !== this.error_message && void 0 !== this.error_message && (e.writeFieldBegin("error_message", r.Type.STRING, 5), e.writeString(this.error_message), e.writeFieldEnd()), null !== this.network_speed && void 0 !== this.network_speed && (e.writeFieldBegin("network_speed", r.Type.STRING, 6), e.writeString(this.network_speed), e.writeFieldEnd()), null !== this.num_connection_attempts && void 0 !== this.num_connection_attempts && (e.writeFieldBegin("num_connection_attempts", r.Type.I32, 7), e.writeI32(this.num_connection_attempts), e.writeFieldEnd()), null !== this.client_connected_timestamp && void 0 !== this.client_connected_timestamp && (e.writeFieldBegin("client_connected_timestamp", r.Type.I64, 8), e.writeI64(this.client_connected_timestamp), e.writeFieldEnd()), null !== this.network_disconnect_timestamp && void 0 !== this.network_disconnect_timestamp && (e.writeFieldBegin("network_disconnect_timestamp", r.Type.I64, 9), e.writeI64(this.network_disconnect_timestamp), e.writeFieldEnd()), null !== this.bitrate && void 0 !== this.bitrate && (e.writeFieldBegin("bitrate", r.Type.I64, 10), e.writeI64(this.bitrate), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/visibility_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Visibility = function(e) {
					this.seen = null, this.seen_items = null, this.number_items = null, this.number_seen_items = null, this.number_scrolled_pages = null, this.on_screen_timestamp = null, this.off_screen_timestamp = null, e && (void 0 !== e.seen && null !== e.seen && (this.seen = e.seen), void 0 !== e.seen_items && null !== e.seen_items && (this.seen_items = r.copyList(e.seen_items, [null])), void 0 !== e.number_items && null !== e.number_items && (this.number_items = e.number_items), void 0 !== e.number_seen_items && null !== e.number_seen_items && (this.number_seen_items = e.number_seen_items), void 0 !== e.number_scrolled_pages && null !== e.number_scrolled_pages && (this.number_scrolled_pages = e.number_scrolled_pages), void 0 !== e.on_screen_timestamp && null !== e.on_screen_timestamp && (this.on_screen_timestamp = e.on_screen_timestamp), void 0 !== e.off_screen_timestamp && null !== e.off_screen_timestamp && (this.off_screen_timestamp = e.off_screen_timestamp))
				});
			s.prototype = {}, s.prototype.write = function(e) {
				if (e.writeStructBegin("Visibility"), null !== this.seen && void 0 !== this.seen && (e.writeFieldBegin("seen", r.Type.BOOL, 1), e.writeBool(this.seen), e.writeFieldEnd()), null !== this.seen_items && void 0 !== this.seen_items) {
					for (var t in e.writeFieldBegin("seen_items", r.Type.LIST, 4), e.writeListBegin(r.Type.STRING, this.seen_items.length), this.seen_items) this.seen_items.hasOwnProperty(t) && (t = this.seen_items[t], e.writeString(t));
					e.writeListEnd(), e.writeFieldEnd()
				}
				null !== this.number_items && void 0 !== this.number_items && (e.writeFieldBegin("number_items", r.Type.I64, 5), e.writeI64(this.number_items), e.writeFieldEnd()), null !== this.number_seen_items && void 0 !== this.number_seen_items && (e.writeFieldBegin("number_seen_items", r.Type.I64, 6), e.writeI64(this.number_seen_items), e.writeFieldEnd()), null !== this.number_scrolled_pages && void 0 !== this.number_scrolled_pages && (e.writeFieldBegin("number_scrolled_pages", r.Type.I64, 7), e.writeI64(this.number_scrolled_pages), e.writeFieldEnd()), null !== this.on_screen_timestamp && void 0 !== this.on_screen_timestamp && (e.writeFieldBegin("on_screen_timestamp", r.Type.I64, 8), e.writeI64(this.on_screen_timestamp), e.writeFieldEnd()), null !== this.off_screen_timestamp && void 0 !== this.off_screen_timestamp && (e.writeFieldBegin("off_screen_timestamp", r.Type.I64, 9), e.writeI64(this.off_screen_timestamp), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			};
			var o = e.exports.ScreenTrace = function(e) {
				this.total_frames = null, this.slow_frames = null, this.frozen_frames = null, e && (void 0 !== e.total_frames && null !== e.total_frames && (this.total_frames = e.total_frames), void 0 !== e.slow_frames && null !== e.slow_frames && (this.slow_frames = e.slow_frames), void 0 !== e.frozen_frames && null !== e.frozen_frames && (this.frozen_frames = e.frozen_frames))
			};
			o.prototype = {}, o.prototype.write = function(e) {
				e.writeStructBegin("ScreenTrace"), null !== this.total_frames && void 0 !== this.total_frames && (e.writeFieldBegin("total_frames", r.Type.I32, 1), e.writeI32(this.total_frames), e.writeFieldEnd()), null !== this.slow_frames && void 0 !== this.slow_frames && (e.writeFieldBegin("slow_frames", r.Type.I32, 2), e.writeI32(this.slow_frames), e.writeFieldEnd()), null !== this.frozen_frames && void 0 !== this.frozen_frames && (e.writeFieldBegin("frozen_frames", r.Type.I32, 3), e.writeI32(this.frozen_frames), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/eventSchemas/webhook_types.js": function(e, t, i) {
			"use strict";
			var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js"),
				r = n.Thrift,
				s = (n.Q, i("./src/telemetry/eventSchemas/typedefs_types.js"), e.exports = {}, e.exports.Webhook = function(e) {
					if (this.id = null, this.type = null, e) {
						if (void 0 === e.id || null === e.id) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field id is unset!");
						if (this.id = e.id, void 0 === e.type || null === e.type) throw new r.TProtocolException(r.TProtocolExceptionType.UNKNOWN, "Required field type is unset!");
						this.type = e.type
					}
				});
			s.prototype = {}, s.prototype.write = function(e) {
				e.writeStructBegin("Webhook"), null !== this.id && void 0 !== this.id && (e.writeFieldBegin("id", r.Type.STRING, 1), e.writeString(this.id), e.writeFieldEnd()), null !== this.type && void 0 !== this.type && (e.writeFieldBegin("type", r.Type.STRING, 2), e.writeString(this.type), e.writeFieldEnd()), e.writeFieldStop(), e.writeStructEnd()
			}
		},
		"./src/telemetry/helpers/ThriftSerializer.ts": function(e, t, i) {
			"use strict";
			(function(e) {
				i.d(t, "a", (function() {
					return l
				}));
				var n = i("./node_modules/thrift/lib/nodejs/lib/thrift/int64_util.js"),
					r = i.n(n),
					s = i("./node_modules/node-int64/Int64.js"),
					o = i.n(s),
					d = i("./node_modules/thrift/lib/nodejs/lib/thrift/browser.js");
				const a = {
					[d.Thrift.Type.BOOL]: "tf",
					[d.Thrift.Type.BYTE]: "i8",
					[d.Thrift.Type.I16]: "i16",
					[d.Thrift.Type.I32]: "i32",
					[d.Thrift.Type.I64]: "i64",
					[d.Thrift.Type.DOUBLE]: "dbl",
					[d.Thrift.Type.STRUCT]: "rec",
					[d.Thrift.Type.STRING]: "str",
					[d.Thrift.Type.MAP]: "map",
					[d.Thrift.Type.LIST]: "lst",
					[d.Thrift.Type.SET]: "set"
				};
				class l {
					constructor() {
						this.stack = []
					}
					writeFieldBegin(e, t, i) {
						this.stack.push(e => ({
							[i]: {
								[a[t]]: e
							}
						}))
					}
					writeFieldEnd() {
						const e = this.stack.pop(),
							t = this.stack.pop();
						this.stack.push(t(e))
					}
					writeFieldStop() {}
					writeStructBegin(e) {
						this.stack.push("structStart")
					}
					writeStructEnd() {
						let e = {};
						for (;;) {
							const t = this.stack.pop();
							if ("structStart" === t) break;
							e = {
								...e,
								...t
							}
						}
						this.stack.push(e)
					}
					writeListBegin() {
						this.stack.push("listStart")
					}
					writeListEnd() {
						const e = [];
						for (;;) {
							const t = this.stack.pop();
							if ("listStart" === t) break;
							e.push(t)
						}
						this.stack.push(["rec", e.length, ...e])
					}
					writeSetBegin() {
						this.stack.push("setStart")
					}
					writeSetEnd() {
						const e = [];
						for (;;) {
							const t = this.stack.pop();
							if ("setStart" === t) break;
							e.push(t)
						}
						this.stack.push(["rec", e.length, ...e])
					}
					writeMapStart() {
						throw new Error("Maps not implemented. Contact Niranjan Ramadas")
					}
					writeMapEnd() {
						throw new Error("Maps not implemented. Contact Niranjan Ramadas")
					}
					writeBool(e) {
						this.stack.push(e ? 1 : 0)
					}
					writeByte(e) {
						this.stack.push(e)
					}
					writeI16(e) {
						this.stack.push(e)
					}
					writeI32(e) {
						this.stack.push(e)
					}
					writeI64(e) {
						e instanceof o.a ? this.stack.push(r.a.toDecimalString(e)) : this.stack.push(e)
					}
					writeDouble(e) {
						this.stack.push(e)
					}
					writeString(e) {
						null === e ? this.stack.push(null) : this.stack.push(JSON.stringify(e).slice(1, -1))
					}
					writeBinary(t) {
						let i;
						if ("string" == typeof t) i = e.from(t, "binary");
						else {
							if (!(t instanceof e || "[object Uint8Array]" === Object.prototype.toString.call(t))) throw new Error("writeBinary called without a string/Buffer argument: " + t);
							i = t
						}
						this.stack.push(i.toString("base64"))
					}
					getString() {
						if (this.stack.length > 1) throw new Error("Did not correctly serialize Thrift Event");
						return JSON.stringify(this.stack.pop())
					}
				}
			}).call(this, i("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)
		},
		"./src/telemetry/helpers/getSerializedThriftJSON.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return s
			}));
			var n = i("./src/telemetry/eventSchemas/event_types.js"),
				r = i("./src/telemetry/helpers/ThriftSerializer.ts");
			new n.Event;
			const s = e => {
				const t = Array.isArray(e) ? e : [e],
					i = new n.EventBatch({
						events: t
					}),
					s = new r.a;
				return i.write(s), s.getString()
			}
		},
		"./src/telemetry/helpers/getSignatureHeader.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return o
			})), i.d(t, "b", (function() {
				return a
			}));
			var n = i("./node_modules/Base64/base64.js"),
				r = i("./node_modules/crypto-js/hmac-sha256.js"),
				s = i.n(r);
			const o = "X-Signature-v2",
				d = Object(n.atob)("YWVjYWltMnNlaTlzZXNoNmVpQ2hhZXJ1dW03dHU4"),
				a = (e, t = o) => {
					return {
						[t]: `key=Desktop2x3, mac=${s()(e,d).toString()}`
					}
				}
		},
		"./src/telemetry/helpers/sendCounter.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return n
			})), i.d(t, "b", (function() {
				return a
			}));
			var n, r = i("./src/lib/base64/index.ts"),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/makeRequest/index.ts");
			! function(e) {
				e.ClientIdConsumed = "clientIdConsumed", e.ClientIdRejected = "clientIdRejected", e.NumberOfDiffs = "numberOfDiffs", e.DetailedDiffs = "detailedDiffs", e.ClientScreenview = "client-screenview", e.GenderCollection = "genderCollection"
			}(n || (n = {}));
			const d = e => {
				switch (e) {
					case n.NumberOfDiffs:
						return s.x.NUMBER_OF_DIFFS;
					case n.DetailedDiffs:
						return s.x.DETAILED_DIFFS;
					case n.ClientIdConsumed:
						return s.x.CLIENT_ID_CONSUMED;
					case n.ClientIdRejected:
						return s.x.CLIENT_ID_REJECTED;
					case n.ClientScreenview:
						return s.x.CLIENT_SCREENVIEW;
					case n.GenderCollection:
						return s.x.GENDER_COLLECTION
				}
			};

			function a(e, t) {
				return Object(o.b)({
					method: s.jb.POST,
					endpoint: `/counters/${d(t.type)}`,
					data: {
						value: Object(r.a)(JSON.stringify({
							appName: e,
							...t.data
						}))
					},
					type: "json"
				})
			}
		},
		"./src/telemetry/helpers/sendEvent.ts": function(e, t, i) {
			"use strict";
			i.d(t, "e", (function() {
				return w
			})), i.d(t, "b", (function() {
				return S
			})), i.d(t, "d", (function() {
				return O
			})), i.d(t, "c", (function() {
				return R
			})), i.d(t, "g", (function() {
				return C
			})), i.d(t, "f", (function() {
				return A
			}));
			var n = i("./node_modules/lodash/throttle.js"),
				r = i.n(n),
				s = i("./src/lib/constants/index.ts"),
				o = i("./src/lib/env/index.ts"),
				d = i("./src/lib/makeGqlRequest/index.ts"),
				a = i("./src/lib/makeRequest/index.ts"),
				l = i("./src/redditGQL/operations/UploadV2Events.json"),
				u = i("./src/lib/scheduler/index.ts"),
				c = i("./src/lib/serviceWorker/index.ts"),
				_ = i("./src/telemetry/models/Event.ts"),
				m = i("./src/telemetry/helpers/getSerializedThriftJSON.ts"),
				p = i("./src/telemetry/helpers/getSignatureHeader.ts");
			const h = "https://www.reddit.com",
				f = 250;
			class b {
				constructor(e, t) {
					this.event = e, this.schemaId = t
				}
			}
			let g;
			const w = e => {
					g = e
				},
				v = 1e3,
				y = {
					leading: !1,
					trailing: !0
				},
				E = "text/plain",
				S = Object(u.b)();
			let T = !1;
			const O = e => {
				T = e
			};
			let I = !1;
			const R = e => {
					I = e
				},
				F = window && window.fetch;
			let N = !1;
			const C = e => {
				N = e
			};
			let j;
			const A = e => {
					j = e
				},
				x = !(p.a && h);
			class D {
				constructor() {
					if (this.events = [], this.isSendingEvents = !1, this.flushEvents = e => {
							var t, i;
							if (!this.events.length) return;
							const n = [];
							for (const s of this.events) n.push(s[1]);
							const r = Object(m.a)(n);
							this.events = [], this.isSendingEvents = !0;
							const u = h || "";
							if (u) {
								const n = {
										...Object(p.b)(r)
									},
									_ = () => {
										this.events.length ? e ? this.flushEvents() : this.flushEventsWithCare() : this.isSendingEvents = !1
									};
								if (N) {
									const e = {
										...Object(p.b)(r, "X-Signature")
									};
									Object(d.a)(j(), {
										...l,
										variables: {
											input: {
												events: r,
												isStaging: Object(o.c)()
											}
										}
									}, {
										headers: e
									}).then(_)
								} else I && (null === (i = null === (t = null === window || void 0 === window ? void 0 : window.navigator) || void 0 === t ? void 0 : t.serviceWorker) || void 0 === i ? void 0 : i.controller) ? (Object(c.b)("sendV2EventsData", {
									data: r,
									headers: n
								}), _()) : T && F ? F(u, {
									body: r,
									headers: {
										...n,
										"Content-Type": E
									},
									method: s.jb.POST
								}).then(_) : Object(a.b)({
									data: r,
									endpoint: u,
									sync: e,
									method: s.jb.POST,
									type: E,
									headers: n
								}).then(_)
							} else this.isSendingEvents = !1
						}, this.flushEventsWithCare = r()(this.flushEvents, v, y), D.injectedEventListener) throw new Error('EventSender registered multiple attempts to register a "beforeunload" event listener. This could happen when "client" code creates multiple instances on the EventSender class. This should never happen. Please make sure to use the default sendEvent helper from the "telemetry" package');
					window.addEventListener("beforeunload", () => {
						S.flush(), this.isSendingEvents || x || this.flushEvents(!0)
					}), D.injectedEventListener = !0
				}
				sendEvent(e) {
					const t = _.g(e),
						i = new b(t, e.schemaId);
					if (g) {
						const e = g.getState();
						e.push(i);
						const {
							length: t
						} = e;
						t > f && e.splice(0, f - t), g.setState(e)
					}
					x || this.isSendingEvents || this.flushEventsWithCare(), this.events = this.events.concat([
						[e, t]
					])
				}
			}
			D.injectedEventListener = !1;
			const P = new D;
			t.a = e => {
				P.sendEvent(e)
			}
		},
		"./src/telemetry/helpers/sendTiming.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return l
			}));
			var n = i("./node_modules/Base64/base64.js"),
				r = i("./src/lib/logs/timing.js"),
				s = i("./src/lib/makeRequest/index.ts");
			const o = e => {
					switch (e.type) {
						case "rum":
							return "/timings/rum";
						case "route":
							return "/timings/route";
						case "mount":
							return "/timings/mount";
						case "gql":
							return "/timings/gql";
						case "perf":
							return "/timings/perf";
						case "scrollfps":
							return "/timings/scrollfps"
					}
				},
				d = e => {
					switch (e.type) {
						case "rum":
							return {
								page: e.page, timings: Object(r.a)()
							};
						case "route":
							return {
								page: e.page, duration: e.duration
							};
						case "mount":
							return {
								component: e.component, duration: e.duration
							};
						case "gql":
							return {
								responseName: e.responseName, duration: e.duration
							};
						case "perf":
						case "scrollfps":
							return {
								meta: e.meta, data: e.data
							}
					}
				},
				a = .25;

			function l(e, t, i = !0) {
				if (!(i && Math.random() > a)) return Object(s.b)({
					method: "post",
					type: "json",
					endpoint: o(t),
					data: {
						time: Object(n.btoa)(JSON.stringify({
							appName: e,
							...d(t)
						}))
					}
				})
			}
		},
		"./src/telemetry/index.ts": function(e, t, i) {
			"use strict";
			i.d(t, "a", (function() {
				return r.a
			})), i.d(t, "b", (function() {
				return s.a
			})), i.d(t, "c", (function() {
				return n
			}));
			var n = {};
			i.r(n), i.d(n, "start", (function() {
				return c
			})), i.d(n, "getTime", (function() {
				return _
			})), i.d(n, "end", (function() {
				return m
			})), i.d(n, "cancel", (function() {
				return p
			})), i.d(n, "has", (function() {
				return h
			}));
			var r = i("./src/telemetry/helpers/sendEvent.ts"),
				s = i("./src/telemetry/helpers/sendTiming.ts");
			const o = {},
				d = "timer - too many created. is there a memory leak?",
				a = e => `timer - none found with id: ${e}.\n    Make sure you check for its existence before trying to stop.`;
			let l = 0,
				u = 0;
			const c = e => {
					const t = e || l++;
					return u > 100 && console.error(d), o[t] = Date.now(), u++, t
				},
				_ = e => {
					const t = o[e];
					return t ? Date.now() - t : (console.error(a(e)), -1)
				},
				m = e => {
					const t = o[e];
					if (!t) return console.error(a(e)), -1;
					const i = Date.now() - t;
					return delete o[e], u--, i
				},
				p = e => !!o[e] && (delete o[e], u--, !0),
				h = e => !!o[e]
		},
		"./src/telemetry/models/App.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "TelemetryAppName", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return s
			}));
			var n, r = i("./src/telemetry/eventSchemas/device_types.js");
			! function(e) {
				e.desktop2x = "desktop2x", e.desktop2xDev = "desktop2x_dev", e.mweb = "mweb", e.mwebDev = "mweb_dev", e.web = "web", e.webDev = "web_dev", e.web2x = "web2x", e.web2xDev = "web2x_dev"
			}(n || (n = {}));
			const s = e => new r.App({
				version: e.version,
				name: e.name,
				install_timestamp: e.installTimestamp,
				build_number: e.buildNumber,
				build_timestamp: e.buildTimestamp
			})
		},
		"./src/telemetry/models/Event.ts": function(e, t, i) {
			"use strict";
			i.d(t, "c", (function() {
				return Mi
			})), i.d(t, "a", (function() {
				return Ui
			})), i.d(t, "f", (function() {
				return Gi
			})), i.d(t, "d", (function() {
				return qi
			})), i.d(t, "e", (function() {
				return Vi
			})), i.d(t, "b", (function() {
				return Hi
			})), i.d(t, "g", (function() {
				return Wi
			}));
			var n = {};
			i.r(n), i.d(n, "toThrift", (function() {
				return we
			}));
			var r = {};
			i.r(r), i.d(r, "toThrift", (function() {
				return ye
			}));
			var s = {};
			i.r(s), i.d(s, "toThrift", (function() {
				return Te
			}));
			var o = {};
			i.r(o), i.d(o, "toThrift", (function() {
				return Oe
			}));
			var d = {};
			i.r(d), i.d(d, "toThrift", (function() {
				return Re
			}));
			var a = {};
			i.r(a), i.d(a, "toThrift", (function() {
				return Ce
			}));
			var l = {};
			i.r(l), i.d(l, "toThrift", (function() {
				return Ae
			}));
			var u = {};
			i.r(u), i.d(u, "toThrift", (function() {
				return De
			}));
			var c = {};
			i.r(c), i.d(c, "toThrift", (function() {
				return Le
			}));
			var _ = {};
			i.r(_), i.d(_, "toThrift", (function() {
				return ke
			}));
			var m = {};
			i.r(m), i.d(m, "toThrift", (function() {
				return Me
			}));
			var p = {};
			i.r(p), i.d(p, "toThrift", (function() {
				return Ge
			}));
			var h = {};
			i.r(h), i.d(h, "toThrift", (function() {
				return qe
			}));
			var f = {};
			i.r(f), i.d(f, "toThrift", (function() {
				return We
			}));
			var b = {};
			i.r(b), i.d(b, "toThrift", (function() {
				return Ke
			}));
			var g = {};
			i.r(g), i.d(g, "toThrift", (function() {
				return Ye
			}));
			var w = {};
			i.r(w), i.d(w, "toThrift", (function() {
				return Qe
			}));
			var v = {};
			i.r(v), i.d(v, "toThrift", (function() {
				return Je
			}));
			var y = {};
			i.r(y), i.d(y, "toThrift", (function() {
				return Ze
			}));
			var E = {};
			i.r(E), i.d(E, "toThrift", (function() {
				return it
			}));
			var S = {};
			i.r(S), i.d(S, "toThrift", (function() {
				return nt
			}));
			var T = {};
			i.r(T), i.d(T, "toThrift", (function() {
				return st
			}));
			var O = {};
			i.r(O), i.d(O, "toThrift", (function() {
				return at
			}));
			var I = {};
			i.r(I), i.d(I, "toThrift", (function() {
				return ut
			}));
			var R = {};
			i.r(R), i.d(R, "toThrift", (function() {
				return _t
			}));
			var F = {};
			i.r(F), i.d(F, "toThrift", (function() {
				return pt
			}));
			var N = {};
			i.r(N), i.d(N, "toThrift", (function() {
				return ht
			}));
			var C = {};
			i.r(C), i.d(C, "toThrift", (function() {
				return bt
			}));
			var j = {};
			i.r(j), i.d(j, "toThrift", (function() {
				return gt
			}));
			var A = {};
			i.r(A), i.d(A, "toThrift", (function() {
				return Et
			}));
			var x = {};
			i.r(x), i.d(x, "toThrift", (function() {
				return Tt
			}));
			var D = {};
			i.r(D), i.d(D, "toThrift", (function() {
				return It
			}));
			var P = {};
			i.r(P), i.d(P, "toThrift", (function() {
				return Ft
			}));
			var L = {};
			i.r(L), i.d(L, "toThrift", (function() {
				return Nt
			}));
			var k = {};
			i.r(k), i.d(k, "toThrift", (function() {
				return Ct
			}));
			var B = {};
			i.r(B), i.d(B, "toThrift", (function() {
				return xt
			}));
			var M = {};
			i.r(M), i.d(M, "toThrift", (function() {
				return Pt
			}));
			var U = {};
			i.r(U), i.d(U, "toThrift", (function() {
				return Bt
			}));
			var G = {};
			i.r(G), i.d(G, "toThrift", (function() {
				return Ut
			}));
			var q = {};
			i.r(q), i.d(q, "toThrift", (function() {
				return qt
			}));
			var V = {};
			i.r(V), i.d(V, "toThrift", (function() {
				return Ht
			}));
			var H = {};
			i.r(H), i.d(H, "toThrift", (function() {
				return zt
			}));
			var W = {};
			i.r(W), i.d(W, "toThrift", (function() {
				return Yt
			}));
			var z = {};
			i.r(z), i.d(z, "toThrift", (function() {
				return Qt
			}));
			var K = {};
			i.r(K), i.d(K, "toThrift", (function() {
				return Xt
			}));
			var Y = {};
			i.r(Y), i.d(Y, "toThrift", (function() {
				return ei
			}));
			var $ = {};
			i.r($), i.d($, "toThrift", (function() {
				return ti
			}));
			var Q = {};
			i.r(Q), i.d(Q, "toThrift", (function() {
				return ii
			}));
			var J = {};
			i.r(J), i.d(J, "toThrift", (function() {
				return ni
			}));
			var X = {};
			i.r(X), i.d(X, "toThrift", (function() {
				return si
			}));
			var Z = {};
			i.r(Z), i.d(Z, "toThrift", (function() {
				return li
			}));
			var ee = {};
			i.r(ee), i.d(ee, "toThrift", (function() {
				return ci
			}));
			var te = {};
			i.r(te), i.d(te, "toThrift", (function() {
				return mi
			}));
			var ie = {};
			i.r(ie), i.d(ie, "toThrift", (function() {
				return hi
			}));
			var ne = {};
			i.r(ne), i.d(ne, "toThrift", (function() {
				return bi
			}));
			var re = {};
			i.r(re), i.d(re, "toThrift", (function() {
				return wi
			}));
			var se = {};
			i.r(se), i.d(se, "toThrift", (function() {
				return Ei
			}));
			var oe = {};
			i.r(oe), i.d(oe, "toThrift", (function() {
				return Oi
			}));
			var de = {};
			i.r(de), i.d(de, "toThrift", (function() {
				return Ri
			}));
			var ae = {};
			i.r(ae), i.d(ae, "toThrift", (function() {
				return Ni
			}));
			var le = {};
			i.r(le), i.d(le, "toThrift", (function() {
				return ji
			}));
			var ue = {};
			i.r(ue), i.d(ue, "toThrift", (function() {
				return xi
			}));
			var ce = {};
			i.r(ce), i.d(ce, "toThrift", (function() {
				return Pi
			}));
			var _e = {};
			i.r(_e), i.d(_e, "toThrift", (function() {
				return Li
			}));
			var me = {};
			i.r(me), i.d(me, "toThrift", (function() {
				return ki
			}));
			var pe = {};
			i.r(pe), i.d(pe, "toThrift", (function() {
				return Bi
			}));
			var he = i("./node_modules/uuid/v4.js"),
				fe = i.n(he),
				be = i("./src/telemetry/eventSchemas/event_types.js"),
				ge = i("./src/telemetry/eventSchemas/action_types.js");
			const we = e => new ge.ActionInfo({
				count: e.count,
				page_type: e.pageType || null,
				pane_name: e.paneName,
				position: e.position,
				reason: e.reason,
				setting_value: e.settingValue,
				success: e.success,
				relative_position: e.relativePosition,
				type: e.type,
				referral_id: e.referralId
			});
			var ve = i("./src/telemetry/eventSchemas/adblock_types.js");
			const ye = e => new ve.Adblock({
				enabled: e.enabled,
				acceptable_ads: e.acceptableAds
			});
			var Ee = i("./src/telemetry/eventSchemas/adevent_types.js");
			const Se = Math.pow(2, 31) - 1,
				Te = e => new Ee.AdClick({
					landing_page_duration: Math.min(e.landingPageDuration, Se)
				}),
				Oe = e => new Ee.AdMetadata({
					impression_id: e.impressionId
				});
			var Ie = i("./src/telemetry/eventSchemas/announcement_types.js");
			const Re = ({
				id: e,
				title: t,
				body: i
			}) => new Ie.Announcement({
				id: e,
				title: t,
				body: i
			});
			var Fe = i("./src/telemetry/models/App.ts"),
				Ne = i("./src/telemetry/eventSchemas/banner_types.js");
			const Ce = e => new Ne.Banner({
				button_text: e.buttonText,
				id: e.id
			});
			var je = i("./src/telemetry/eventSchemas/chat_types.js");
			const Ae = e => new je.Chat({
				blocked_user_id: e.blocked_user_id,
				id: e.id,
				type: e.type,
				existing_channel: e.existing_channel,
				image_upload_method: e.image_upload_method,
				user_added_method: e.user_added_method,
				invitation_id: e.invitation_id,
				invitation_type: e.invitation_type,
				members: e.members,
				invitation_preview_type: e.invitation_preview_type,
				message_type: e.message_type,
				message_body: e.message_body,
				number_channels: e.number_channels,
				number_pending_invites: e.number_pending_invites,
				number_members: e.number_members,
				number_unreads: e.number_unreads,
				reported_user_id: e.reported_user_id,
				sender_user_id: e.sender_user_id,
				invitation_timestamp: e.invitation_timestamp,
				blocked_members: e.blocked_members,
				recipient_user_id: e.recipient_user_id,
				number_blocked_users: e.number_blocked_users,
				is_member: e.is_member,
				shown_history: e.shown_history,
				message_id: e.message_id,
				report_reason: e.report_reason
			});
			var xe = i("./src/telemetry/eventSchemas/experiment_types.js");
			const De = e => new xe.ClickTest({
				id: e.id,
				name: e.name,
				owner: e.owner,
				variant: e.variant,
				prompt: e.prompt,
				response: e.response,
				page_type: e.pageType
			});
			var Pe = i("./src/telemetry/eventSchemas/content_types.js");
			const Le = e => new Pe.Comment({
					id: e.id,
					post_id: e.postId,
					parent_id: e.parentId,
					deleted: e.deleted,
					subreddit_id: e.subredditId,
					subreddit_name: e.subredditName,
					body_text: e.bodyText,
					author_id: e.authorId,
					number_gildings: e.numberGildings,
					score: e.score,
					upvote_ratio: e.upvoteRatio,
					created_timestamp: e.created,
					last_edited: e.lastEdited,
					spam: e.spam,
					type: e.type
				}),
				ke = e => new Pe.CommentComposer({
					editor_mode: e.editorMode,
					final_status: e.finalStatus,
					text_type: e.textType
				});
			var Be = i("./src/telemetry/eventSchemas/crawler_types.js");
			const Me = e => new Be.Crawler({
				name: e.name
			});
			var Ue = i("./src/telemetry/eventSchemas/custom_feed_types.js");
			const Ge = e => new Ue.CustomFeed({
					id: e.id,
					is_nsfw: e.isNsfw,
					number_followers: e.numberFollowers,
					number_subreddits: e.numberSubreddits,
					owner_id: e.ownerId,
					visibility: e.visibility
				}),
				qe = e => new Pe.DiscoveryUnit({
					id: e.id,
					type: e.type,
					title: e.title,
					name: e.name,
					items: e.items
				});
			var Ve = i("./src/telemetry/eventSchemas/timer_types.js");
			const He = (e, t) => e && t ? t - e == 0 ? null : t - e : null,
				We = e => {
					if (!performance || !performance.timing) return null;
					const t = performance.timing;
					return new Ve.DOMTimers({
						request: He(t.requestStart, t.responseStart),
						loading: He(t.domLoading, t.domInteractive),
						loaded: He(t.domContentLoadedEventStart, t.domContentLoadedEventEnd)
					})
				};
			var ze = i("./src/telemetry/eventSchemas/email_types.js");
			const Ke = e => new ze.Email({
					type: e.type
				}),
				Ye = e => new xe.Experiment({
					id: e.id,
					is_override: e.isOverride,
					name: e.name,
					variant: e.variant,
					version: e.version
				});
			var $e = i("./src/telemetry/eventSchemas/feed_types.js");
			const Qe = e => new $e.Feed({
					correlation_id: e.correlationId
				}),
				Je = e => new Pe.Gallery({
					id: e.id,
					position: e.position,
					media_ids: e.mediaIds,
					num_items: e.numItems,
					num_images: e.numImages,
					num_videos: e.numVideos
				});
			var Xe = i("./src/telemetry/eventSchemas/midas_types.js");
			const Ze = e => new Xe.Geo({
				city: e.city || void 0,
				country_code: e.country_code || void 0,
				region: e.region || void 0
			});
			var et = i("./src/telemetry/models/GoldPurchase.ts"),
				tt = i("./src/telemetry/eventSchemas/inbox_types.js");
			const it = e => new tt.Inbox({
					badge_count: e.badgeCount,
					id: e.id,
					is_clicked: e.isClicked,
					is_viewed: e.isViewed,
					tab: e.tab
				}),
				nt = e => new Pe.Listing({
					geo_filter: e.geoFilter,
					length: e.length,
					links: e.links,
					sort: e.sort,
					sort_time_filter: e.sortTime,
					source: e.source,
					old_sort: e.oldSort,
					depth: e.depth
				});
			var rt = i("./src/telemetry/eventSchemas/live_thread_types.js");
			const st = e => new rt.LiveThread({
				id: e.id,
				is_announcement: e.isAnnouncement
			});
			var ot = i("./src/telemetry/models/Media.ts"),
				dt = i("./src/telemetry/eventSchemas/metasearch_types.js");
			const at = e => new dt.MetaSearch({
				display_query: e.displayQuery,
				raw_query: e.rawQuery,
				structure_type: e.structureType,
				sort: e.sort,
				range: e.range,
				subreddit_id: e.subredditId,
				subreddit_name: e.subredditName,
				post_flair_name: e.postFlairName,
				meta_flair_id: e.metaFlairId,
				meta_flair_name: e.metaFlairName
			});
			var lt = i("./src/telemetry/eventSchemas/ml_model_types.js");
			const ut = ({
				features: e,
				name: t
			}) => new lt.MLModel({
				features: e,
				name: t
			});
			var ct = i("./src/telemetry/eventSchemas/moderator_types.js");
			const _t = e => new ct.ModAction({
				target_user_id: e.targetUserId,
				is_automoderator: e.isAutomoderator,
				is_target_removed_by_steward: e.isTargetRemovedBySteward,
				duration: e.duration,
				trigger: e.trigger,
				trigger_message: e.triggerMessage,
				action: e.action
			});
			var mt = i("./src/telemetry/eventSchemas/modnote_types.js");
			const pt = e => new mt.ModNote({
					type: e.type,
					content: e.content,
					label: e.label,
					operator_id: e.operatorId,
					filtered_subreddit_id: e.filteredSubredditId,
					subreddit_search: e.subredditSearch,
					filtered_type: e.filteredType
				}),
				ht = e => new Pe.Notification({
					id: e.id,
					type: e.type
				});
			var ft = i("./src/telemetry/eventSchemas/request_types.js");
			const bt = e => new ft.Oauth({
					client_app_type: "web"
				}),
				gt = e => new Pe.Onboarding({
					id: e.id,
					action_source: e.actionSource,
					process_notes: e.processNotes,
					number_subreddits_selected: e.numberSubredditsSelected,
					subreddits_selected: e.subredditsSelected,
					user_name: e.userName,
					recommended_user_name: e.recommendedUserName,
					start_timestamp: e.startTimestamp,
					end_timestamp: e.endTimestamp,
					category_position: e.categoryPosition,
					category_name: e.categoryName,
					subreddit_name: e.subredditName,
					subreddit_position: e.subredditPosition,
					subreddit_is_selected: e.subredditIsSelected,
					subreddits_already_selected: e.subredditsAlreadySelected,
					successful: e.successful,
					semantic_version: e.semanticVersion,
					valid_email_submitted: e.validEmailSubmitted,
					pre_selected: e.preSelected,
					passed_captcha: e.passedCaptcha,
					captcha_num_screens: e.captchaNumScreens,
					personalized_subreddits: e.personalizedSubreddits,
					similar_subreddits: e.similarSubreddits,
					number_subreddits: e.numberSubreddits,
					is_similar_subreddit: e.isSimilarSubreddit
				});
			var wt = i("./src/telemetry/models/Outbound.ts"),
				vt = i("./src/telemetry/models/Payment.ts"),
				yt = i("./src/telemetry/eventSchemas/device_types.js");
			const Et = e => new yt.Platform({
				browser_name: e.pwa ? "pwa" : e.browserName,
				browser_version: e.browserVersion,
				device_id: e.deviceId,
				device_name: e.deviceName,
				fingerprint: e.fingerprint,
				fingerprint_created_timestamp: e.fingerprintCreatedTimestamp,
				name: e.name,
				os_name: e.osName,
				os_version: e.osVersion,
				primary_language: e.primaryLanguage,
				language_list: e.languageList
			});
			var St = i("./src/telemetry/eventSchemas/playback_types.js");
			const Tt = e => new St.Playback({
				chat_state: e.chatState,
				heartbeat_duration_ms: e.heartbeatDurationMs,
				id: e.id,
				is_live: e.isLive,
				playhead_offset_ms: e.playheadOffsetMs,
				scrubbing_end_ms: e.scrubbingEndMs,
				scrubbing_start_ms: e.scrubbingStartMs,
				session_duration_ms: e.sessionDurationMs,
				start_time_ms: e.startTimeMs,
				timestamp_ms: e.timestampMs,
				volume: e.volume,
				watch_duration_ms: e.watchDurationMs,
				player_type: e.playerType
			});
			var Ot = i("./src/telemetry/eventSchemas/poll_types.js");
			const It = e => new Ot.Poll({
				number_prediction_coins: e.numberPredictionCoins || null,
				number_prediction_tokens: e.numberPredictionTokens || null,
				options: e.options,
				options_length: e.optionsLength,
				type: e.type,
				user_vote: e.userVote
			});
			var Rt = i("./src/telemetry/eventSchemas/popup_types.js");
			const Ft = e => new Rt.Popup({
					button_text: e.buttonText,
					id: e.id,
					text: e.text
				}),
				Nt = e => new Pe.Post({
					archived: e.archived,
					author_id: e.authorId,
					comment_type: e.commentType,
					content_duration: e.contentDuration,
					created_timestamp: e.createdTimestamp,
					crosspost_root_id: e.crosspostRootId,
					domain: e.domain,
					id: e.id,
					impression_id: e.impressionId,
					nsfw: e.nsfw,
					number_comments: e.numberComments,
					number_gildings: e.numberGildings,
					number_posts_from_ad: e.numberPostsFromAd,
					recommendation_source: e.recommendationSource,
					recommendation_source_subreddit_id: e.recommendationSourceSubredditId,
					recommendation_source_subreddit_name: e.recommendationSourceSubredditName,
					score: e.score,
					spoiler: e.spoiler,
					subreddit_id: e.subredditId,
					subreddit_name: e.subredditName,
					title: e.title,
					top_awarded_type: e.topAwardedType,
					type: e.type,
					upvote_ratio: e.upvoteRatio,
					url: e.url,
					promoted: e.promoted
				}),
				Ct = e => new Pe.PostCollection({
					id: e.id,
					title: e.title,
					author_id: e.authorId,
					post_ids: e.postIds,
					display_layout: e.displayLayout
				});
			var jt = i("./src/telemetry/models/PostComposer.ts"),
				At = i("./src/telemetry/models/PostDraft.ts");
			const xt = e => new Pe.PostEvent({
				type: e.type,
				event_state: e.eventState,
				event_start_timestamp: e.eventStartTimestamp,
				event_end_timestamp: e.eventEndTimestamp
			});
			var Dt = i("./src/telemetry/eventSchemas/postflair_types.js");
			const Pt = e => new Dt.PostFlair({
				id: e.id,
				title: e.title
			});
			var Lt = i("./src/telemetry/models/PostRequirement.ts"),
				kt = i("./src/telemetry/eventSchemas/powerups_types.js");
			const Bt = e => new kt.Powerups({
				subscription_id: e.subscriptionId,
				count: e.count,
				free_count: e.freeCount,
				paid_count: e.paidCount,
				tier: e.tier,
				current_subreddit_powerups: e.currentSubredditPowerups,
				benefit: e.benefit && e.benefit.toLocaleLowerCase(),
				cnt_emoji: e.emojiCount,
				subreddit_ids: e.subredditIds
			});
			var Mt = i("./src/telemetry/eventSchemas/predictions_types.js");
			const Ut = e => new Mt.Predictions({
				tournament_id: e.tournamentId,
				tournament_state: e.tournamentState,
				user_state: e.userState,
				tournament_theme_id: e.tournamentThemeId
			});
			var Gt = i("./src/telemetry/eventSchemas/subreddit_types.js");
			const qt = e => new Gt.Profile({
				id: e.id,
				name: e.name,
				type: e.type || "default",
				display_name: e.display_name,
				about: e.about,
				avatar_url: e.avatar_url,
				cover_url: e.cover_url,
				nsfw: e.nsfw,
				content_visible: e.content_visible,
				communities_visible: e.communities_visible,
				allow_follow: e.allow_follow
			});
			var Vt = i("./src/telemetry/eventSchemas/ad_types.js");
			const Ht = e => new Vt.Programmatic({
				ad_unit: e.adUnit,
				count: e.count,
				partner: e.partner,
				type: e.type
			});
			var Wt = i("./src/telemetry/eventSchemas/progress_module_types.js");
			const zt = e => new Wt.ProgressModule({
				module_name: e.moduleName,
				card_name: e.cardName
			});
			var Kt = i("./src/telemetry/eventSchemas/econ_types.js");
			const Yt = e => new Kt.Purchase({
				type: e.type,
				order_id: e.orderId,
				product_type: e.productType,
				product_id: e.productId,
				product_version: e.productVersion,
				subscription_id: e.subscriptionId,
				count: e.count,
				price_micros: e.priceMicros,
				currency: e.currency,
				days_remaining: e.daysRemaining,
				count_remaining: e.countRemaining
			});
			var $t = i("./src/telemetry/eventSchemas/pwa_types.js");
			const Qt = e => new $t.PWA({
				installable: e.installable,
				installed: e.installed,
				install_timestamp: e.installTimestamp
			});
			var Jt = i("./src/telemetry/eventSchemas/rater_tag_types.js");
			const Xt = e => new Jt.RaterTag({
				tagging_job_id: e.taggingJobId,
				tagging_question: e.taggingQuestion,
				tagging_question_object: e.taggingQuestionObject,
				module_type: e.moduleType,
				rating_type: e.ratingType,
				selected_answers: e.selectedAnswers,
				non_selected_answers: e.nonSelectedAnswers,
				tagging_question_id: e.taggingQuestionId,
				selected_answer_ids: e.selectedAnswerIds,
				non_selected_answer_ids: e.nonSelectedAnswerIds
			});
			var Zt = i("./src/telemetry/eventSchemas/recap_card_types.js");
			const ei = e => new Zt.RecapCard({
					index: e.index,
					count: e.count,
					type: e.type,
					facts: e.facts
				}),
				ti = e => new ft.Referrer({
					domain: e.domain,
					element: e.element,
					url: e.url
				}),
				ii = e => new ft.Request({
					base_url: e.base_url,
					domain: e.domain,
					google_client_id: e.google_client_id,
					reddaid: e.reddaid,
					parameters: e.parameters,
					user_agent: e.user_agent,
					canonical_url: e.canonical_url,
					robots_meta_tag: e.robots_meta_tag
				}),
				ni = e => new ft.Response({
					last_modified_timestamp: e.lastModifiedTimestamp,
					code: e.code
				});
			var ri = i("./src/telemetry/eventSchemas/scheduled_post_types.js");
			const si = e => new ri.ScheduledPost({
				id: e.id,
				creator_user_id: e.owner,
				last_modified_user_id: e.lastModifiedUserId,
				created_timestamp: e.createdTimestamp,
				submission_timestamp: e.publishAt,
				timezone: e.clientTimezone,
				is_recurring: e.isRecurring
			});
			var oi = i("./src/reddit/constants/postLayout.ts");
			const di = fe()(),
				ai = e => e ? oi.e[e] : void 0,
				li = e => new yt.Screen({
					browser_tab_id: di,
					in_focus: "undefined" != typeof window && document.hasFocus ? document.hasFocus() : null,
					theme: e.theme,
					width: "undefined" != typeof window ? window.screen.width : null,
					height: "undefined" != typeof window ? window.screen.height : null,
					scroll_position: e.scrollPosition,
					viewport_width: "undefined" != typeof window ? window.innerWidth : null,
					viewport_height: "undefined" != typeof window ? window.innerHeight : null,
					view_type: e.viewType || ai(e.layout)
				});
			var ui = i("./src/telemetry/eventSchemas/search_types.js");
			const ci = e => new ui.Search({
				nsfw: e.nsfw,
				number_subreddits: e.numberSubreddits,
				origin_element: e.originElement,
				origin_page_type: e.originPageType,
				post_flair_name: e.postFlairName,
				protocolName: e.protocolName,
				query: e.query,
				query_id: e.queryId,
				range: e.range,
				sort: e.sort,
				structure_type: e.structureType,
				subreddit_name: e.subredditName,
				subreddit_id: e.subredditId,
				subreddit_ids: e.subredditIds,
				typeahead_active: e.typeaheadActive,
				impression_id: e.impressionId
			});
			var _i = i("./src/telemetry/eventSchemas/seo_types.js");
			const mi = e => new _i.SEO({
				internal_link_url: e.internalLinkUrl
			});
			var pi = i("./src/telemetry/eventSchemas/session_types.js");
			const hi = e => new pi.Session({
				id: e.id,
				referrer_url: e.referrerUrl,
				referrer_domain: e.referrerDomain,
				version: e.version,
				type: e.type,
				created_timestamp: e.createdTimestamp
			});
			var fi = i("./src/telemetry/eventSchemas/setting_types.js");
			const bi = e => new fi.Setting({
				value: e.value,
				old_value: e.oldValue
			});
			var gi = i("./src/telemetry/eventSchemas/snoovatar_types.js");

			function wi(e) {
				return new gi.Snoovatar({
					gear_id: e.gearId,
					gear_ids: e.gearIds,
					snoovatar_active: e.snoovatarActive,
					id: e.id,
					full_image_url: e.fullImageUrl,
					headshot_image_url: e.headshotImageUrl,
					gear_expression: e.gearExpression,
					gear_hair: e.gearHair,
					gear_hair_acc: e.gearHairAcc,
					gear_face: e.gearFace,
					gear_face_acc: e.gearFaceAcc,
					gear_top: e.gearTop,
					gear_top_acc: e.gearTopAcc,
					gear_bottom: e.gearBottom,
					gear_bottom_acc: e.gearBottomAcc,
					has_premium_gear: e.hasPremiumGear,
					gear_status: e.gearStatus,
					user_generated: e.userGenerated,
					user_generated_source: e.userGeneratedSource,
					user_has_nft: e.userHasNft,
					nft_name: e.nftName,
					gear_states: e.gearStates,
					snoovatar_name: e.snoovatarName,
					section_name: e.sectionName,
					nft_token_id: e.nftTokenId,
					nft_wallet_address: e.nftWalletAddress,
					nft_rating: e.nftRating,
					nft_accessory_id: e.nftAccessoryId
				})
			}
			var vi = i("./src/telemetry/models/Subreddit.ts"),
				yi = i("./src/telemetry/eventSchemas/survey_types.js");
			const Ei = e => new yi.Survey(e);
			var Si = i("./src/telemetry/models/Timer.ts"),
				Ti = i("./src/telemetry/eventSchemas/tooltip_types.js");
			const Oi = e => new Ti.Tooltip({
				id: e.id,
				text: e.text
			});
			var Ii = i("./src/telemetry/eventSchemas/topic_metadata_types.js");
			const Ri = e => new Ii.TopicMetadata({
				id: e.id,
				display_name: e.displayName
			});
			var Fi = i("./src/telemetry/eventSchemas/topic_tag_types.js");
			const Ni = e => new Fi.TopicTag({
				id: e.id,
				content: e.content,
				type: e.type ? e.type.toLowerCase() : e.type,
				is_primary: e.isPrimary
			});
			var Ci = i("./src/telemetry/eventSchemas/trophy_types.js");
			const ji = e => new Ci.Trophy({
				id: e.id,
				name: e.name
			});
			var Ai = i("./src/telemetry/eventSchemas/user_types.js");
			const xi = e => new Ai.User({
				id: e.id,
				is_admin: e.isAdmin,
				created_timestamp: e.createdTimestamp,
				logged_in: e.isLoggedIn,
				cookie_created_timestamp: e.cookieCreatedTimestamp,
				has_gold: e.hasGold,
				has_premium: e.hasPremium,
				is_premium_subscriber: e.isPremiumSubscriber,
				number_coins: e.numberCoins,
				number_premium_days_remaining: e.numberPremiumDaysRemaining
			});
			var Di = i("./src/telemetry/eventSchemas/userflair_types.js");
			const Pi = e => new Di.UserFlair({
					id: e.id,
					title: e.title,
					active: e.isActive,
					id_achieve: e.achievementFlairId,
					title_achieve: e.achievementFlairTitle,
					locked: e.isLocked,
					id_supporter: e.supporterFlairId,
					title_supporter: e.supporterFlairTitle,
					is_supporter: e.isSupporter
				}),
				Li = e => new Ai.UserPreferences({
					in_beta: e.inBeta,
					language: e.language,
					hide_nsfw: e.hideNsfw,
					expando: e.expando,
					service_language: e.serviceLanguage
				}),
				ki = e => new Ai.UserSubreddit({
					is_mod: e.isMod,
					mod_access: e.modAccess,
					mod_config: e.modConfig,
					mod_flair: e.modFlair,
					mod_full: e.modFull,
					mod_mail: e.modMail,
					mod_none: e.modNone,
					mod_post: e.modPost,
					mod_wiki: e.modWiki,
					is_subscriber: e.isSubscriber
				}),
				Bi = e => new ge.Widget({
					type: e.type,
					target_subreddit_name: e.targetSubredditName,
					target_subreddit_id: e.targetSubredditId
				});
			var Mi, Ui, Gi, qi, Vi, Hi;
			! function(e) {
				e.Allow = "allow", e.Bail = "bail", e.Block = "block", e.Close = "close", e.Request = "request", e.Register = "register", e.View = "view"
			}(Mi || (Mi = {})),
			function(e) {
				e.Approve = "approve", e.Ban = "ban", e.Block = "block", e.Click = "click", e.Complete = "complete", e.Confirm = "confirm", e.Delete = "delete", e.Disable = "disable", e.Dismiss = "dismiss", e.Enable = "enable", e.Heartbeat = "heartbeat", e.Kick = "kick", e.Leave = "leave", e.Limit = "limit", e.Load = "load", e.ModDelete = "mod_delete", e.Mute = "mute", e.OptOut = "opt_out", e.Report = "report", e.Save = "save", e.Slash = "slash", e.Submit = "submit", e.View = "view", e.Search = "search", e.Unmute = "unmute"
			}(Ui || (Ui = {})),
			function(e) {
				e.Experiment = "experiment", e.Page = "page", e.UserPreferences = "user_preferences"
			}(Gi || (Gi = {})),
			function(e) {
				e.Expose = "expose", e.Load = "load", e.Click = "click"
			}(qi || (qi = {})),
			function(e) {
				e.UserId = "user_id", e.CanonicalUrl = "canonical_url", e.BlockUser = "block_user"
			}(Vi || (Vi = {})),
			function(e) {
				e.Chat = "chat", e.ChatKeyboard = "chat_keyboard", e.ChatPerformance = "chat_performance", e.ChatPreview = "chat_preview", e.ChatSettings = "chat_settings", e.ChatSetup = "chat_setup", e.ChatSidebarModal = "chat_sidebar_modal", e.ChatSidebarWidget = "chat_sidebar_widget", e.ChatView = "chat_view", e.ContactsList = "contacts_list", e.Global = "global", e.InvitationInbox = "invitation_inbox", e.MessageInbox = "messages_inbox", e.Notification = "notification", e.Popup = "popup", e.Nav = "nav", e.UserHovercard = "user_hovercard", e.User = "user"
			}(Hi || (Hi = {}));
			const Wi = e => new be.Event({
					action: e.action,
					source: e.source,
					noun: e.noun,
					client_timestamp: Date.now(),
					uuid: fe()(),
					correlation_id: e.correlationId || null,
					ad_click: zi(e.adClick, s),
					ad_metadata: zi(e.adMetadata, o),
					action_info: zi(e.actionInfo, n),
					announcement: zi(e.announcement, d),
					app: zi(e.app, Fe),
					banner: zi(e.banner, a),
					chat: zi(e.chat, l),
					click_test: zi(e.clickTest, u),
					comment: zi(e.comment, c),
					comment_composer: zi(e.commentComposer, _),
					crawler: zi(e.crawler, m),
					custom_feed: zi(e.customFeed, p),
					dom_timer: zi(e.domTimer, f),
					email: zi(e.email, b),
					experiment: zi(e.experiment, g),
					feed: zi(e.feed, w),
					gallery: zi(e.gallery, v),
					geo: zi(e.geo, y),
					gold_purchase: zi(e.goldPurchase, et),
					inbox: zi(e.inbox, E),
					listing: zi(e.listing, S),
					live_thread: zi(e.liveThread, T),
					media: zi(e.media, ot),
					meta_search: zi(e.metaSearch, O),
					ml_model: zi(e.mlModel, I),
					mod_action: zi(e.modAction, R),
					modnote: zi(e.modnote, F),
					notification: zi(e.notification, N),
					oauth: zi(e.oauth, C),
					onboarding: zi(e.onboarding, j),
					outbound: zi(e.outbound, wt),
					payment: zi(e.payment, vt),
					platform: zi(e.platform, A),
					playback: zi(e.playback, x),
					poll: zi(e.poll, D),
					popup: zi(e.popup, P),
					post: zi(e.post, L),
					post_draft: zi(e.postDraft, At),
					post_collection: zi(e.postCollection, k),
					post_composer: zi(e.postComposer, jt),
					post_event: zi(e.postEvent, B),
					post_flair: zi(e.postFlair, M),
					post_requirement: zi(e.postRequirement, Lt),
					powerups: zi(e.powerups, U),
					predictions: zi(e.predictions, G),
					profile: zi(e.profile, q),
					purchase: zi(e.purchase, W),
					programmatic: zi(e.programmatic, V),
					progress_module: zi(e.progressModule, H),
					pwa: zi(e.pwa, z),
					rater_tag: zi(e.raterTag, K),
					referrer: zi(e.referrer, $),
					request: zi(e.request, Q),
					response: zi(e.response, J),
					scheduled_post: zi(e.scheduledPost, X),
					screen: zi(e.screen, Z),
					search: zi(e.search, ee),
					seo: zi(e.seo, te),
					session: zi(e.session, ie),
					setting: zi(e.setting, ne),
					snoovatar: zi(e.snoovatar, re),
					subreddit: zi(e.subreddit, vi),
					survey: zi(e.survey, se),
					target_post: zi(e.targetPost, L),
					target_subreddit: zi(e.targetSubreddit, vi),
					target_user: zi(e.targetUser, ue),
					timer: zi(e.timer, Si),
					tooltip: zi(e.tooltip, oe),
					topic_metadata: zi(e.topicMetadata, de),
					topic_tag: zi(e.topicTag, ae),
					trophy: zi(e.trophy, le),
					user: zi(e.user, ue),
					user_preferences: zi(e.userPreferences, _e),
					user_subreddit: zi(e.userSubreddit, me),
					user_flair: zi(e.userFlair, ce),
					widget: zi(e.widget, pe),
					adblock: zi(e.adblock, r),
					discovery_unit: zi(e.discoveryUnit, h),
					recap_card: zi(e.recap, Y)
				}),
				zi = (e, t) => e ? t.toThrift(e) : null
		},
		"./src/telemetry/models/GoldPurchase.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "GoldPurchaseType", (function() {
				return n
			})), i.d(t, "HideAds", (function() {
				return s
			})), i.d(t, "PremiumMarketing", (function() {
				return o
			})), i.d(t, "CoinsMarketing", (function() {
				return d
			})), i.d(t, "GiveGold", (function() {
				return a
			})), i.d(t, "toThrift", (function() {
				return l
			}));
			var n, r = i("./src/telemetry/eventSchemas/gold_types.js");
			! function(e) {
				e.New = "new", e.Renew = "renew", e.GiftCode = "gift_code", e.GetPremium = "get_premium", e.Cancel = "cancel", e.Gid1 = "gid_1", e.Gid2 = "gid_2", e.Gid3 = "gid_3", e.GidAppreciation = "gid_appreciation", e.GidGlobal = "gid_global", e.GidGroup = "gid_group", e.GidPremium = "gid_premium", e.GidCommunity = "gid_community", e.GidMod = "gid_mod", e.GidUnknown = "gid_unknown", e.CoinsGid1 = "coins_gid_1", e.CoinsGid2 = "coins_gid_2", e.CoinsGid3 = "coins_gid_3", e.CoinsGidCommunity = "coins_gid_community", e.CoinsGidMod = "coins_gid_mod", e.Premium = "premium", e.Coins = "coins"
			}(n || (n = {}));
			const s = "hide_ads",
				o = "premium_marketing",
				d = "coins_marketing",
				a = "give_gold",
				l = e => new r.GoldPurchase({
					default_option: e.defaultOption,
					default_anonymous: e.defaultAnonymous,
					gilded_content: e.gildedContent,
					number_coins: e.numberCoins,
					source: e.source,
					transaction_id: e.transactionId,
					type: e.type,
					content_type: e.contentType,
					awardee_karma_earned: e.awardeeKarmaEarned,
					awarder_karma_earned: e.awarderKarmaEarned,
					award_id: e.awardId,
					award_name: e.awardName,
					is_mod_award: e.isModAward,
					number_coins_to_community: e.numberCoinsToCommunity,
					number_coins_to_recipient: e.numberCoinsToRecipient,
					number_months: e.numberMonths,
					offer_type: e.offerType,
					offer_context: e.offerContext,
					award_col_position: e.awardColPosition,
					award_row_position: e.awardRowPosition,
					filter_id: e.filterId,
					filter_name: e.filterName,
					subscription_type: e.subscriptionType,
					is_temporary_award: e.isTemporaryAward,
					premium_marketing_benefit: e.premiumMarketingBenefit,
					premium_cancel_reason: e.premiumCancelReason
				})
		},
		"./src/telemetry/models/Media.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "FileSource", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return s
			}));
			var n, r = i("./src/telemetry/eventSchemas/content_types.js");
			! function(e) {
				e.FileSelector = "fileselector", e.Clipboard = "clipboard", e.DragAndDrop = "drag_and_drop"
			}(n || (n = {}));
			const s = e => new r.Media({
				height: e.height,
				load_time: e.loadTime,
				width: e.width,
				id: e.id,
				duration: e.duration,
				mimetype: e.mimetype,
				size: e.size,
				url: e.url,
				source: e.source,
				upload_duration: e.uploadDuration,
				file_name: e.fileName,
				sound: e.sound,
				type: e.type,
				thumbnail_url: e.thumbnailUrl,
				time: e.time,
				orientation: e.orientation,
				max_time_served: e.maxTimeServed,
				cdn_name: e.cdnName,
				cdn_region: e.cdnRegion,
				destination_region: e.destinationRegion,
				stream_public_id: e.streamPublicId,
				stream_private_id: e.streamPrivateId,
				stream_ended_timestamp: e.streamEndedTimestamp,
				outbound_domain: e.outboundDomain,
				outbound_url: e.outboundUrl,
				caption: e.caption
			})
		},
		"./src/telemetry/models/Outbound.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "SourceElement", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return s
			}));
			var n, r = i("./src/telemetry/eventSchemas/outbound_types.js");
			! function(e) {
				e.ListingPostImage = "listing_post_image", e.ListingPostLink = "listing_post_link", e.ListingPostDetail = "listing_post_detail", e.PostImage = "post_image", e.PostLink = "post_link", e.PostDetail = "post_detail", e.Comment = "comment", e.SidebarWidget = "sidebar_widget", e.Wiki = "wiki", e.NavigationMenu = "navigation_menu"
			}(n || (n = {}));
			const s = e => new r.Outbound({
				url: e.url,
				post_id: e.postId,
				subreddit_id: e.subredditId,
				comment_id: e.commentId,
				subreddit_name: e.subredditName,
				source_element: e.sourceElement
			})
		},
		"./src/telemetry/models/Payment.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "PaymentMethod", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return s
			}));
			var n, r = i("./src/telemetry/eventSchemas/payment_types.js");
			! function(e) {
				e.CreditCard = "credit_card", e.Paypal = "paypal"
			}(n || (n = {}));
			const s = e => new r.Payment({
				amount_in_smallest_denom: e.amountInSmallestDenom,
				currency: e.currency,
				default_option: e.defaultOption,
				method: e.method
			})
		},
		"./src/telemetry/models/PostComposer.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "toThrift", (function() {
				return r
			})), i.d(t, "ToggleAction", (function() {
				return s
			})), i.d(t, "getToggleAction", (function() {
				return o
			})), i.d(t, "ToggleNoun", (function() {
				return d
			}));
			var n = i("./src/telemetry/eventSchemas/content_types.js");
			const r = e => new n.PostComposer({
				editor_mode: e.editorMode,
				final_status: e.finalStatus,
				input_type: e.inputType,
				text_type: e.textType,
				type: e.type,
				post_scheduled: e.postScheduled,
				submit_scheduled_timestamp: e.submitScheduledTime
			});
			var s;
			! function(e) {
				e.DESELECT = "deselect", e.SELECT = "select"
			}(s || (s = {}));
			const o = e => e ? s.SELECT : s.DESELECT;
			var d;
			! function(e) {
				e.NSFW = "nsfw", e.ORIGINAL_CONTENT = "original_content", e.SPOILER = "spoiler", e.CHAT = "chat"
			}(d || (d = {}))
		},
		"./src/telemetry/models/PostDraft.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "DraftType", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return s
			}));
			var n, r = i("./src/telemetry/eventSchemas/post_draft_types.js");
			! function(e) {
				e.Self = "self", e.RichText = "multi_media", e.Link = "link", e.Image = "image", e.Video = "video"
			}(n || (n = {}));
			const s = e => new r.PostDraft({
				author_id: e.authorId,
				body_text_length: e.bodyTextLength,
				created_timestamp: e.createdTimestamp,
				flair: e.flair,
				id: e.id,
				nsfw: e.nsfw,
				number_rte_images: e.numberRteImages,
				number_rte_videos: e.numberRteVideos,
				original_content: e.originalContent,
				spoiler: e.spoiler,
				title_length: e.titleLength,
				type: e.type,
				url_length: e.urlLength
			})
		},
		"./src/telemetry/models/PostRequirement.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "BodyRestrictionPolicy", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return l
			}));
			var n, r = i("./node_modules/lodash/mapKeys.js"),
				s = i.n(r),
				o = i("./node_modules/lodash/snakeCase.js"),
				d = i.n(o),
				a = i("./src/telemetry/eventSchemas/post_requirement_types.js");
			! function(e) {
				e.Optional = "optional", e.Required = "required", e.Disabled = "disabled"
			}(n || (n = {}));
			const l = e => new a.PostRequirement(s()(e, (e, t) => d()(t)))
		},
		"./src/telemetry/models/Subreddit.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "toThrift", (function() {
				return s
			})), i.d(t, "getSubscribeEventNoun", (function() {
				return o
			}));
			var n = i("./src/reddit/constants/posts.ts"),
				r = i("./src/telemetry/eventSchemas/subreddit_types.js");
			const s = e => new r.Subreddit({
					access_type: e.accessType,
					nsfw: e.nsfw,
					quarantined: e.quarantined,
					public_description: e.publicDescription,
					number_coins: e.numberCoins,
					id: e.id,
					name: e.name,
					category_name: e.categoryName,
					topic_tag_ids: e.topicTagIds,
					topic_tag_contents: e.topicTagContents,
					topic_tag_types: e.topicTagTypes,
					topic_tag_primary_id: e.topicTagPrimaryId
				}),
				o = (e, t) => e === n.a.PROFILE ? t ? "unfollow" : "follow" : t ? "unsubscribe" : "subscribe"
		},
		"./src/telemetry/models/Timer.ts": function(e, t, i) {
			"use strict";
			i.r(t), i.d(t, "TimerType", (function() {
				return n
			})), i.d(t, "toThrift", (function() {
				return s
			}));
			var n, r = i("./src/telemetry/eventSchemas/timer_types.js");
			! function(e) {
				e.GoodVisit = "good_visit", e.GoodVisitFeed = "good_visit_feed", e.GoodVisitSearch = "good_visit_search", e.Initial = "initial_page_load", e.Revisit = "revisit", e.InApp = "in_app_navigation", e.UserCancelled = "user_cancelled", e.HeartbeatIdleTime = "heartbeat_idle_time", e.ChatLoadInboxNew = "chat_performance_load_inbox_new", e.ChatLoadInboxCached = "chat_performance_load_inbox_cached", e.ChatLoadChannelNew = "chat_performance_load_channel_new", e.ChatLoadChannelCached = "chat_performance_load_channel_cached", e.VideoFirstFrame = "video_first_frame"
			}(n || (n = {}));
			const s = e => new r.Timer({
				type: e.type,
				millis: e.millis,
				referrer: e.referrer,
				referrer_correlation_id: e.referrerCorrelationId,
				time_to_first_byte: e.timeToFirstByte,
				first_contentful_paint: e.firstContentfulPaint,
				first_meaningful_paint: e.firstMeaningfulPaint,
				first_input_delay: e.firstInputDelay
			})
		},
		"ignored /drone/src/node_modules/bn.js/lib buffer": function(e, t) {},
		"ignored /drone/src/node_modules/brorand crypto": function(e, t) {},
		"ignored /drone/src/node_modules/readable-stream/lib util": function(e, t) {},
		"ignored /drone/src/node_modules/readable-stream/lib/internal/streams util": function(e, t) {}
	}
]);
//# sourceMappingURL=https://www.redditstatic.com/desktop2x/Chat~Governance~Reddit.0d119dd8ff11690ae46e.js.map